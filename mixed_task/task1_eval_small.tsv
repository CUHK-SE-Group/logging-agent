	code	label
0	"public class A {@Overridepublic void appendJsonLog(ActionData actionData) {if (isJsonLogActive()) {String dir = ""gamelogsJson"";File saveDir = new File(dir);if (!saveDir.exists()) {saveDir.mkdirs();}actionData.sessionId = getSessionId();String logFileName = dir + File.separator + ""game-"" + actionData.gameId + "".json"";try (PrintWriter out =new PrintWriter(new BufferedWriter(new FileWriter(logFileName, true)))) {out.println(actionData.toJson());} catch (IOException e) {logger.error(""Cant write JSON game log file - "" + logFileName, e);}}}}"	No
1	public class A {public <K extends TBase<?, ?>, V extends TBase<?, ?>> V put(ThriftCacheKey<K> key, V t)throws BlurException {Tracer trace = Trace.trace(THRIFT_CACHE_PUT, Trace.param(KEY, key));try {synchronized (_lastModTimestamps) {Long lastModTimestamp = _lastModTimestamps.get(key.getTable());if (lastModTimestamp != null && key.getTimestamp() < lastModTimestamp) {return t;}}_cacheMap.put(key, new ThriftCacheValue<V>(t));return t;} finally {trace.done();}}}	Yes
2	"public class A {public void setName(final String s) {logger.trace(""setting name: {}"", s);name = s;}}"	No
3	"public class A {private String deleteAssetGroupDetails(final DeleteAssetGroupRequest deleteAssetGroupRequest)throws PacManException {if (assetGroupRepository.existsById(deleteAssetGroupRequest.getGroupId())) {AssetGroupDetails assetGroupDetails =assetGroupRepository.findById(deleteAssetGroupRequest.getGroupId()).get();boolean isDeleted = deleteAssetGroupAlias(assetGroupDetails);if (isDeleted) {try {assetGroupRepository.delete(assetGroupDetails);return ASSET_GROUP_DELETE_SUCCESS;} catch (Exception exception) {log.error(UNEXPECTED_ERROR_OCCURRED, exception);commonService.invokeAPI(""POST"", ALIASES, assetGroupDetails.getAliasQuery());throw new PacManException(UNEXPECTED_ERROR_OCCURRED.concat("": "").concat(exception.getMessage()));}} else {return ASSET_GROUP_DELETE_FAILED;}} else {throw new PacManException(ASSET_GROUP_NOT_EXITS);}}}"	No
4	"public class A {public void setAsTag(String refId) {try (PreparedStatement statement =prepareStatement(""UPDATE refs SET tag = true WHERE (refId = ? OR refName = ?) AND deleted = false"")) {statement.setString(1, sanitizeRefId(refId));statement.setString(2, sanitizeRefId(refId));statement.executeUpdate();execUpdate(String.format(""REVOKE INSERT, UPDATE, DELETE ON nodes%1$s, edges%1$s, artifacts%1$s FROM %2$s"",sanitizeRefId(refId), EmsConfig.get(""pg.user"")));} catch (Exception e) {} finally {close();}}}"	Yes
5	"public class A {@Overridevoid execute(ExoContainer exoContainer) {try {DocumentEditorProvider editorProvider = documentService.getEditorProvider(provider);Identity identity = userIdentity(userId);boolean allowed = editorProvider.isAvailableForUser(identity);List<String> availableProviders = service.getAllAvailableProviders(identity);String currentProvider = documentService.getCurrentDocumentProvider(fileId, workspace);boolean available = allowed && (currentProvider == null || provider.equals(currentProvider));service.sendCurrentProviderInfo(fileId, available, availableProviders);if (currentProvider == null) {setCurrentDocumentProvider(fileId, workspace, provider);}} catch (DocumentEditorProviderNotFoundException | RepositoryException e) {LOG.error(""Cannot send current provider info for fileId: "" + fileId + "", workspace: "" + workspace,e);}}}"	No
6	"public class A {private boolean isPrevEventMatchingCall(final BeforeOperationEvent beforeOperationEvent,final AbstractTraceEvent prevEvent,final Class<? extends CallOperationEvent> callClass) {if ((prevEvent != null)&& callClass.isAssignableFrom(prevEvent.getClass())&& (prevEvent.getOrderIndex() == (beforeOperationEvent.getOrderIndex() - 1))) {if (this.callsReferencedOperationOf((CallOperationEvent) prevEvent, beforeOperationEvent)) {return true;} else if (this.enhanceCallDetection) {final boolean isConstructor = beforeOperationEvent instanceof BeforeConstructorEvent;final CallOperationEvent callEvent = (CallOperationEvent) prevEvent;final Signature callSignature =ClassOperationSignaturePair.splitOperationSignatureStr(callEvent.getCalleeOperationSignature(),isConstructor && this.enhanceJavaConstructors).getSignature();final Signature afterSignature =ClassOperationSignaturePair.splitOperationSignatureStr(beforeOperationEvent.getOperationSignature(),isConstructor && this.enhanceJavaConstructors).getSignature();if (callSignature.equals(afterSignature)&& callEvent.getCalleeClassSignature().equals(beforeOperationEvent.getClassSignature())) {this.logger.debug(""Guessed call of \n\t{}\n\t{}"", callEvent, beforeOperationEvent);return true;}}}return false;}}"	No
7	public class A {@Overridepublic void apply() {try {for (int i = 0; i < TOP_CHANGE_CNT; i++) {if (failed.get()) return;Collection<String> names = new GridLeanSet<>(3);try {for (int j = 0; j < 3; j++) {if (failed.get()) return;String name = UUID.randomUUID().toString();Ignite g = startGrid(name);names.add(name);cb.apply(g);}} finally {for (String name : names) stopGrid(name);}}} catch (Exception e) {if (failed.compareAndSet(false, true)) throw F.wrap(e);}}}	Yes
8	public class A {@Overridepublic void bridgeStatusChanged(ThingStatusInfo bridgeStatusInfo) {Bridge bridge = getBridge();if (bridge != null) {initializeBridge(bridge.getHandler(), bridgeStatusInfo.getStatus());}}}	Yes
9	"public class A {public void update(EventBean[] newEvents, EventBean[] oldEvents, EPStatement statement, EPRuntime runtime) {if (newEvents == null) {return;}for (int i = 0; i < newEvents.length; i++) {if (log.isInfoEnabled()) {log.info(""IPAddress: ""+ newEvents[i].get(""ipAddress"")+ "" Avg Duration: ""+ newEvents[i].get(""avg(duration)""));}}}}"	No
10	"public class A {public void cleanUpTemporaryResources() {if (generatedCompilerWorkingDirectory != null && generatedCompilerWorkingDirectory.exists()) {removeAll(generatedCompilerWorkingDirectory);this.generatedCompilerWorkingDirectory = null;}if (generatedBatchappsHomePath != null && generatedBatchappsHomePath.exists()) {LOG.debug(""Deleting temporary batchapps directory: {}"", generatedBatchappsHomePath);removeAll(generatedBatchappsHomePath);this.generatedBatchappsHomePath = null;}}}"	Yes
11	"public class A {@Overridepublic Pixel read(Kryo kryo, Input input, Class<Pixel> type) {log.debug(""De-serializing Pixel..."");int X = input.readInt();int Y = input.readInt();int ResolutionX = input.readInt();int ResolutionY = input.readInt();boolean isDuplicate = input.readBoolean();int currentPartitionId = input.readInt();Pixel pixel = new Pixel(X, Y, ResolutionX, ResolutionY, isDuplicate, currentPartitionId);return pixel;}}"	No
12	"public class A {@SuppressWarnings(""unchecked"")public List<Role> getRoles() {log.debug(""Retrieving all role names..."");return entityManager.createQuery(""select r from Role r order by name"").getResultList();}}"	No
13	"public class A {@Overridepublic void updateClusterConfig(ClusterConfigRequest request) {if (clusterManager() != null) {OHazelcastPlugin plugin = clusterManager().getHazelcastPlugin();ODistributedConfiguration storageCfg = plugin.getDatabaseConfiguration(GraphStorage.DB_NAME);final OModifiableDistributedConfiguration newCfg = storageCfg.modify();for (ClusterServerConfig server : request.getServers()) {ServerRole newRole = server.getRole();ROLES newORole = ROLES.valueOf(newRole.name());ROLES oldRole = newCfg.getServerRole(server.getName());if (oldRole != newORole) {newCfg.setServerRole(server.getName(), newORole);}}String newWriteQuorum = request.getWriteQuorum();if (newWriteQuorum != null) {if (newWriteQuorum.equalsIgnoreCase(""all"") || newWriteQuorum.equalsIgnoreCase(""majority"")) {newCfg.getDocument().setProperty(""writeQuorum"", newWriteQuorum);} else {try {int newWriteQuorumInt = Integer.parseInt(newWriteQuorum);newCfg.getDocument().setProperty(""writeQuorum"", newWriteQuorumInt);} catch (Exception e) {throw new RuntimeException(""Unsupported write quorum value {"" + newWriteQuorum + ""}"");}}}Integer newReadQuorum = request.getReadQuorum();if (newReadQuorum != null) {newCfg.getDocument().setProperty(""readQuorum"", newReadQuorum);}plugin.updateCachedDatabaseConfiguration(GraphStorage.DB_NAME, newCfg, true);} else {throw error(BAD_REQUEST, ""error_cluster_status_only_available_in_cluster_mode"");}}}"	Yes
14	public class A {private void drawPoint(PdfContext context, Rectangle iconRect, Color fillColor, Color strokeColor) {float baseWidth = iconRect.getWidth() / 10;SymbolInfo symbol = styleInfo.getSymbol();if (symbol.getImage() != null) {try {Image pointImage = Image.getInstance(symbol.getImage().getHref());context.drawImage(pointImage, iconRect, iconRect);} catch (Exception ex) {}} else if (symbol.getRect() != null) {context.fillRectangle(iconRect, fillColor);context.strokeRectangle(iconRect, strokeColor, baseWidth / 2);} else {context.fillEllipse(iconRect, fillColor);context.strokeEllipse(iconRect, strokeColor, baseWidth / 2);}}}	Yes
15	"public class A {@Testpublic void badInputUnzipFileStr() throws Exception {File destFile = new File(destDir, ""badInputFileStr"");try {try {ZipUtil.unzip((File) null, destFile.getCanonicalPath());Assert.fail(""Unzip should fail when input File is null"");} catch (IllegalArgumentException e) {}try {ZipUtil.unzip(dummieFile, destFile.getCanonicalPath());logger.error(""Unzip should fail when input File doesn't exist"");Assert.fail(""Unzip should fail when input File doesn't exist"");} catch (FileNotFoundException e) {}try {ZipUtil.unzip(sampleZip, (String) null);logger.error(""Unzip should fail when destination filename is null"");Assert.fail(""Unzip should fail when destination filename is null"");} catch (IllegalArgumentException e) {}try {ZipUtil.unzip(sampleZip.getCanonicalPath(), """");logger.error(""Unzip should fail when destination filename is empty"");Assert.fail(""Unzip should fail when destination filename is empty"");} catch (IllegalArgumentException e) {logger.debug(""Detecting empty destination filename (File, String): OK"");}try {ZipUtil.unzip(srcFile, destFile.getCanonicalPath());Assert.fail(""Unzip should fail when the input File does not represent a zip file"");} catch (IllegalArgumentException e) {}try {ZipUtil.unzip(sampleZip, srcFile.getCanonicalPath());Assert.fail(""Unzip should fail when the destination filename does not represent a directory"");} catch (IllegalArgumentException e) {}} catch (Exception e) {Assert.fail(""Another exception was expected, but got ""+ e.getClass().getName()+ ""instead: ""+ e.getMessage());}}}"	Yes
16	public class A {protected Type loadType(Schema schema, XSType type, String fieldName)throws TypeBindingException {String name;if (type.getName() == null || type.isLocal()) {name = getAnonymousTypeName(type, fieldName);if (name == null) {return null;}} else {name = type.getName();}Type ecmType = getType(name);if (ecmType != null) {return ecmType;}ecmType = schema.getType(name);if (ecmType != null) {return ecmType;}if (type.getTargetNamespace().equals(NS_XSD)) {ecmType = XSDTypes.getType(name);if (ecmType == null) {}return ecmType;}if (type.isSimpleType()) {if (type instanceof XSListSimpleType) {ecmType = loadListType(schema, (XSListSimpleType) type);} else {ecmType = loadSimpleType(schema, type, fieldName);}} else {ecmType = loadComplexType(schema, name, type.asComplexType());}if (ecmType != null) {schema.registerType(ecmType);} else {}return ecmType;}}	Yes
17	"public class A {protected void reconfigureService(Collection<HostGeoInfo> targetHosts) {if (!isConfigured) {this.rememberedTargetHosts = MutableSet.copyOf(targetHosts);return;}webClient.login(username, password);Domain primaryDomain = webClient.getPrimaryDomain(primaryDomainName);if (primaryDomain == null)throw new NullPointerException(this + "" got null from web client for primary domain "" + primaryDomainName);SmartSubdomain smartSubdomain = primaryDomain.getSmartSubdomain(smartSubdomainName);if (smartSubdomain == null) {primaryDomain.createSmartSubdomain(smartSubdomainName);smartSubdomain = primaryDomain.getSmartSubdomain(smartSubdomainName);}if (smartSubdomain != null) {String script = GeoscalingScriptGenerator.generateScriptString(targetHosts);smartSubdomain.configure(PROVIDE_CITY_INFO, script);if (targetHosts.isEmpty()) {setServiceState(Lifecycle.CREATED);sensors().set(ROOT_URL, null);sensors().set(MAIN_URI, null);} else {setServiceState(Lifecycle.RUNNING);String domain = getAttribute(MANAGED_DOMAIN);if (!Strings.isEmpty(domain)) {sensors().set(ROOT_URL, ""http://"" + domain + ""/"");sensors().set(MAIN_URI, URI.create(""http://"" + domain + ""/""));}}} else {setServiceState(Lifecycle.ON_FIRE);}webClient.logout();}}"	Yes
18	"public class A {private void endOfTestHook(ITestResult result, RunResult outcome) {if (outcome != RunResult.SUCCESS) {try {takeScreenShot(result);} catch (Exception e) {LOGGER.info(""Saving screenshot FAILED: "" + e.getCause());}}try {dumpFalconStore(result);} catch (Exception e) {LOGGER.info(""Dumping of falcon store failed: "" + e);}LOGGER.info(String.format(""Testing going to end for: %s.%s(%s) ----- Status: %s"",result.getTestClass().getName(),result.getName(),Arrays.toString(result.getParameters()),outcome));NDC.pop();LOGGER.info(hr);}}"	No
19	"public class A {@Overridepublic void run() {KafkaCollector collector = null;try {collector = new KafkaCollector(props, name, topic);collector.run();} catch (Throwable e) {LOG.error(""Failed for "" + name + "" ,job: "" + collector == null? null: collector.getJob()+ "" failed for ""+ props.getProperty(INPUT_PATHS)+ "" Exception:""+ e.getLocalizedMessage());errorQueue.add(new SweeperError(name, props.get(INPUT_PATHS).toString(), e));}}}"	Yes
20	"public class A {protected Response JSONRepresentation(Object entity) {try {String jsonStr = toJson(entity);return OK(jsonStr);} catch (IOException e) {_logger.error(""Failed to convert "" + entity + "" to JSON response"", e);return serverError();}}}"	No
21	public class A {private static LoggingConfigurationType applyProfilingConfiguration(PrismObject<SystemConfigurationType> systemConfigurationPrism,ProfilingConfigurationType profilingConfig,boolean subsystemProfiling) {SystemConfigurationType systemConfig = systemConfigurationPrism.asObjectable();LoggingConfigurationType loggingConfig = systemConfig.getLogging();if (loggingConfig != null) {if (checkXsdBooleanValue(profilingConfig.isRequestFilter())) {ClassLoggerConfigurationType requestFilterLogger = new ClassLoggerConfigurationType();requestFilterLogger.setPackage(REQUEST_FILTER_LOGGER_CLASS_NAME);requestFilterLogger.setLevel(LoggingLevelType.TRACE);requestFilterLogger.getAppender().clear();requestFilterLogger.getAppender().add(APPENDER_IDM_PROFILE);loggingConfig.getClassLogger().add(requestFilterLogger);}if (subsystemProfiling) {ClassLoggerConfigurationType subsystemLogger = new ClassLoggerConfigurationType();subsystemLogger.setPackage(SUBSYSTEM_PROFILING_LOGGER);subsystemLogger.setLevel(LoggingLevelType.DEBUG);subsystemLogger.getAppender().clear();subsystemLogger.getAppender().add(APPENDER_IDM_PROFILE);loggingConfig.getClassLogger().add(subsystemLogger);}}return loggingConfig;}}	Yes
22	"public class A {public List findAll() {log.debug(""finding all NZielobjekt instances"");try {String queryString = ""from NZielobjekt"";Query queryObject = getSession().createQuery(queryString);return queryObject.list();} catch (RuntimeException re) {log.error(""find all failed"", re);throw re;}}}"	No
23	"public class A {private double computeLoadFactor() {ensureInEventLoop();long pendingRequestCountMin = Long.MAX_VALUE;long pendingRequestCountTotal = 0L;long channelCount = 0;for (Channel channel : this.availableChannels) {final RntbdRequestManager manager = channel.pipeline().get(RntbdRequestManager.class);if (manager == null) {logger.debug(""Channel({}) connection lost"", channel);continue;}final long pendingRequestCount = manager.pendingRequestCount();if (pendingRequestCount < pendingRequestCountMin) {pendingRequestCountMin = pendingRequestCount;}pendingRequestCountTotal += pendingRequestCount;channelCount++;}for (Channel channel : this.acquiredChannels.values()) {final RntbdRequestManager manager = channel.pipeline().get(RntbdRequestManager.class);if (manager != null) {final long pendingRequestCount = manager.pendingRequestCount();if (pendingRequestCount < pendingRequestCountMin) {pendingRequestCountMin = pendingRequestCount;}pendingRequestCountTotal += pendingRequestCount;}channelCount++;}return channelCount > 0? (double) pendingRequestCountTotal / (channelCount * this.maxRequestsPerChannel): 1D;}}"	No
24	"public class A {@SuppressWarnings(""unchecked"")static void findByQuery(final EntityManager em, final String query) {Query q = em.createNamedQuery(query);List<User> users = q.getResultList();if (users == null || users.isEmpty()) {return;}System.out.println(""#######################START##########################################"");printTweets(users);System.out.println(""#######################END############################################"");}}"	Yes
25	"public class A {public void start() {if (container.getState().isStarted())throw new IllegalArgumentException(""Container ""+ description+ "" failed to start because it is currently ""+ container.getState());LocalConfiguration config = getConfiguration();int servletPort = portSupplier.getAsInt();int containerRmiPort = portSupplier.getAsInt();int tomcatAjpPort = portSupplier.getAsInt();config.setProperty(ServletPropertySet.PORT, Integer.toString(servletPort));config.setProperty(GeneralPropertySet.RMI_PORT, Integer.toString(containerRmiPort));config.setProperty(TomcatPropertySet.AJP_PORT, Integer.toString(tomcatAjpPort));config.setProperty(GeneralPropertySet.PORT_OFFSET, ""0"");int jvmJmxPort = portSupplier.getAsInt();String jvmArgs = ""-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address="" + jvmJmxPort;if (SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_9)) {jvmArgs +="" --add-opens java.base/java.lang.module=ALL-UNNAMED""+ "" --add-opens java.base/jdk.internal.module=ALL-UNNAMED""+ "" --add-opens java.base/jdk.internal.reflect=ALL-UNNAMED""+ "" --add-opens java.base/jdk.internal.misc=ALL-UNNAMED""+ "" --add-opens java.base/jdk.internal.ref=ALL-UNNAMED""+ "" --add-opens java.base/jdk.internal.platform.cgroupv1=ALL-UNNAMED""+ "" --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED"";}config.setProperty(GeneralPropertySet.START_JVMARGS, jvmArgs);container.setConfiguration(config);try {writeSettings();container.start();} catch (Exception e) {throw new RuntimeException(""Something very bad happened to this container when starting. Check the cargo_logs folder""+ "" for container logs."",e);}}}"	Yes
26	"public class A {@Overrideprotected void execute(final Object event) throws Exception {if (this.countEvents) {this.eventCount++;}@SuppressWarnings(""unchecked"")final OutputPort<Object> selectedOutputPort =(OutputPort<Object>) this.selectOutputPort(this.rootEventMatcher, event);if (selectedOutputPort != null) {selectedOutputPort.send(event);} else {if (this.reportUnknown) {final String className = event.getClass().getCanonicalName();Integer hits = this.unknownRecords.get(className);if (hits == null) {this.unknownRecords.put(className, Integer.valueOf(1));} else {hits++;this.unknownRecords.put(className, hits);if ((hits % DynamicEventDispatcher.LOOP_COUNT) == 0) {}}}}}}"	Yes
27	"public class A {protected void setRecordCipher() {KeySet keySet = getKeySet(tlsContext);LOGGER.debug(""Setting new Cipher in RecordLayer"");RecordCipher recordCipher = RecordCipherFactory.getRecordCipher(tlsContext, keySet);tlsContext.getRecordLayer().setRecordCipher(recordCipher);}}"	No
28	"public class A {private boolean isMetadataRequest(ContainerRequestContext context, FedizContext fedConfig) {String requestPath = context.getUriInfo().getPath();if (requestPath.indexOf(FederationConstants.METADATA_PATH_URI) != -1|| requestPath.indexOf(getMetadataURI(fedConfig)) != -1) {if (LOG.isInfoEnabled()) {}FedizProcessor wfProc = FedizProcessorFactory.newFedizProcessor(fedConfig.getProtocol());try {HttpServletRequest request = messageContext.getHttpServletRequest();Document metadata = wfProc.getMetaData(request, fedConfig);String metadataStr = DOM2Writer.nodeToString(metadata);ResponseBuilder response = Response.ok(metadataStr, ""text/xml"");context.abortWith(response.build());return true;} catch (Exception ex) {LOG.error(""Failed to get metadata document: "" + ex.getMessage());throw ExceptionUtils.toInternalServerErrorException(ex, null);}}return false;}}"	Yes
29	public class A {public <T extends ComputeMetadata> T findObjectOfTypeForServerOrNull(Set<? extends T> supply,String type,final String objectId,final RegionAndId serverInRegion) {try {return find(supply,new Predicate<T>() {@Overridepublic boolean apply(T input) {return input.getId().equals(RegionAndId.fromRegionAndId(serverInRegion.getRegion(), objectId).slashEncode());}});} catch (NoSuchElementException e) {}return null;}}	Yes
30	"public class A {private void createACL(UnManagedCifsShareACL origACL, List<CifsShareACL> shareACLList, FileShare fileshare) {CifsShareACL shareACL = null;shareACL = new CifsShareACL();shareACL.setId(URIUtil.createId(CifsShareACL.class));String user = origACL.getUser();if (user != null) {shareACL.setUser(user);} else {shareACL.setGroup(origACL.getGroup());}String permissionText = null;switch (origACL.getPermission().toLowerCase()) {case ""read"":permissionText = FileControllerConstants.CIFS_SHARE_PERMISSION_READ;break;case ""change"":permissionText = FileControllerConstants.CIFS_SHARE_PERMISSION_CHANGE;break;case ""full"":case ""fullcontrol"":permissionText = FileControllerConstants.CIFS_SHARE_PERMISSION_FULLCONTROL;break;}shareACL.setPermission(permissionText);shareACL.setShareName(origACL.getShareName());shareACL.setFileSystemId(fileshare.getId());shareACLList.add(shareACL);_logger.info(""share ACLs details {}"", shareACL.toString());}}"	No
31	public class A {public static int getCategoriesCount(long groupId, long[] parentCategoryIds)throws RemoteException {try {int returnValue = MBCategoryServiceUtil.getCategoriesCount(groupId, parentCategoryIds);return returnValue;} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
32	"public class A {public void handle(final HttpServerRequest request) {Logger log = RequestLoggerFactory.getLogger(CORSHandler.class, request);addCORSHeaders(request, log);if (isOptionsRequest(request)) {log.info(""Got OPTIONS request. Respond with statusCode 200"");request.response().setStatusCode(StatusCode.OK.getStatusCode());request.response().end();}}}"	No
33	"public class A {static DirectoryStream<Path> getInstance(MCRDirectory dir, MCRPath path) throws IOException {DirectoryStream.Filter<Path> filter =(dir instanceof MCRFileCollection)? MCRFileCollectionFilter.FILTER: AcceptAllFilter.FILTER;LOGGER.debug(""Dir {}, class {}, filter {}"", path, dir.getClass(), filter.getClass());DirectoryStream<Path> baseDirectoryStream =Files.newDirectoryStream(dir.getLocalPath(), filter);LOGGER.debug(""baseStream {}"", baseDirectoryStream.getClass());if (baseDirectoryStream instanceof java.nio.file.SecureDirectoryStream) {LOGGER.debug(""Returning SecureDirectoryStream"");return new SecureDirectoryStream(dir, path, (java.nio.file.SecureDirectoryStream<Path>) baseDirectoryStream);}return new SimpleDirectoryStream(path, baseDirectoryStream);}}"	No
34	"public class A {@LogObject onDelete() {String fullName = user.getFullName();userManager.removeUser(user.getId().toString());alertManager.alert(Duration.TRANSIENT, Severity.SUCCESS, messages.format(""user.deleted"", fullName));logger.debug(""After deletion.. ready to return userList object"");return UserList.class;}}"	No
35	"public class A {@Testpublic void withFile() throws Exception {File temp = new File(tmpDir());File[] logFiles = temp.listFiles(SPRING_LOG_FILTER);for (File file : logFiles) {file.delete();}this.loggingSystem.beforeInitialize();this.logger.info(""Hidden"");this.loggingSystem.initialize(null, null, getLogFile(null, tmpDir()));this.logger.info(""Hello world"");String output = this.output.toString().trim();assertThat(output).contains(""Hello world"").doesNotContain(""Hidden"");assertThat(temp.listFiles(SPRING_LOG_FILTER).length).isGreaterThan(0);}}"	No
36	public class A {public void publishEvent(final EventPublishRequestDTO request, final Set<Subscription> involvedSubscriptions) {checkPublishRequestDTO(request);checkInvolvedSubscriptions(involvedSubscriptions);final EventPublishStartDTO eventPublishStartDTO =new EventPublishStartDTO(request, involvedSubscriptions);try {publishingQueue.put(eventPublishStartDTO);} catch (final Exception ex) {}}}	Yes
37	"public class A {public static String getStandardFileNameForResponses(String activityId,String studyId,String activityRunId,String participantId,String version) {LOGGER.entry(""begin getStandardFileNameForResponses()"");String fileName = null;try {fileName =new StringBuilder().append(""FDAHPHCI_"").append(new SimpleDateFormat(""MMddyyyyHHmmss"").format(new Date())).append(""_"").append(studyId).append(""_"").append(activityId).append(""_"").append(activityRunId).append(""_"").append(participantId).append(""_"").append(version).append("".json"").toString();} catch (Exception e) {LOGGER.error(""ERROR: StudyMetaDataUtil - getStandardFileNameForResponses()"", e);}LOGGER.exit(""getStandardFileNameForResponses() :: ends"");return fileName;}}"	No
38	"public class A {@GET@Path(""/callback"")public Response callback(@QueryParam(""state"") UUID loginSession, @QueryParam(""code"") String code) {if (!loginSessionRedirects.containsKey(loginSession)) {return Response.status(417).entity(""Login session unknown"").build();}try {final Optional<Tokens> userTokens = openIdClient.getUserTokens(code);final String value =userTokens.isPresent() ? userTokens.get().getBearerAccessToken().getValue() : ""no-token"";final URI userUri =UriBuilder.fromUri(loginSessionRedirects.get(loginSession)).queryParam(""sessionToken"", value).build();return Response.temporaryRedirect(userUri).build();} catch (IOException | ParseException e) {LOG.error(""Retrieval of userTokes failed"", e);return Response.serverError().build();}}}"	No
39	"public class A {public void adjustClientCipherAfterEarly() {try {context.setActiveClientKeySetType(Tls13KeySetType.HANDSHAKE_TRAFFIC_SECRETS);LOGGER.debug(""Setting cipher for client to use handshake secrets"");KeySet clientKeySet =KeySetGenerator.generateKeySet(context,context.getChooser().getSelectedProtocolVersion(),context.getActiveClientKeySetType());RecordCipher recordCipherClient =RecordCipherFactory.getRecordCipher(context, clientKeySet, context.getChooser().getSelectedCipherSuite());context.getRecordLayer().setRecordCipher(recordCipherClient);context.getRecordLayer().updateDecryptionCipher();context.setReadSequenceNumber(0);} catch (CryptoException | NoSuchAlgorithmException ex) {throw new WorkflowExecutionException(ex.toString());}}}"	Yes
40	"public class A {@OnWebSocketClosepublic void onClose(int statusCode, String reason) {if (statusCode != StatusCode.NORMAL) {logger.debug(""WebSocket Connection closed: {} - {}"", statusCode, reason);}if (session != null) {if (!session.isOpen()) {if (session != null) {session.close();}}session = null;}if (websocketHandler != null) {websocketHandler.onClose();}}}"	No
41	"public class A {private List<RemoteInfo> loadRemoteInfos(RepositoryInfo repo) {String repoId = repo.getId();if (null == repoId) {return new ArrayList<>();}ArrayList<RemoteInfo> list = new ArrayList<>();Repository geogig;try {geogig = RepositoryManager.get().getRepository(repoId);if (geogig != null) {ImmutableList<Remote> geogigRemotes = geogig.command(RemoteListOp.class).call();list = RemoteInfo.fromList(geogigRemotes);}} catch (Exception e) {LOGGER.warn(""Failed to load Remotes for repository"", e);}return list;}}"	No
42	"public class A {@Overridepublic BusinessObjectEntry getBusinessObjectEntryForConcreteClass(DataDictionaryIndex ddIndex, String className) {if (StringUtils.isBlank(className)) {throw new IllegalArgumentException(""invalid (blank) className"");}if (LOG.isDebugEnabled()) {LOG.debug(""calling getBusinessObjectEntry '"" + className + ""'"");}int index = className.indexOf(""$$"");if (index >= 0) {className = className.substring(0, index);}return ddIndex.getBusinessObjectEntries().get(className);}}"	No
43	"public class A {@Overridepublic synchronized void disconnect(boolean askForReconnect) {if (isConnected()) {sessionState = SessionState.DISCONNECTING;}if (connection == null || sessionState == SessionState.DISCONNECTED) {return;}try {if (callbackClient.isConnected()) {callbackClient.removeListener(callbackHandler);callbackClient.disconnect();}TransporterClient.destroyTransporterClient(server);} catch (Throwable ex) {}if (sessionState == SessionState.DISCONNECTING || sessionState == SessionState.CONNECTING) {sessionState = SessionState.DISCONNECTED;if (askForReconnect) {client.showError(""Network error. You have been disconnected from "" + connection.getHost());}client.disconnected(askForReconnect);pingTime.clear();}}}"	Yes
44	"public class A {public static com.liferay.commerce.inventory.model.CommerceInventoryWarehouseItemincreaseCommerceInventoryWarehouseItemQuantity(HttpPrincipal httpPrincipal, long commerceInventoryWarehouseItemId, int quantity)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommerceInventoryWarehouseItemServiceUtil.class,""increaseCommerceInventoryWarehouseItemQuantity"",_increaseCommerceInventoryWarehouseItemQuantityParameterTypes19);MethodHandler methodHandler =new MethodHandler(methodKey, commerceInventoryWarehouseItemId, quantity);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.inventory.model.CommerceInventoryWarehouseItem) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
45	"public class A {@Overridepublic void run() {try {started = true;gotLock = service.lock(""obj"", -1, -1);if (logger.isDebugEnabled()) {}} catch (VirtualMachineError e) {SystemFailure.initiateFailure(e);throw e;} catch (Throwable ex) {logger.warn(""[testLockIsNotInterruptible] Caught..."", ex);exception = ex;}wasFlagSet = Thread.currentThread().isInterrupted();}}"	Yes
46	"public class A {@PostConstructpublic void init() {if (log.isDebugEnabled()) {}if (conf == null) {throw new IllegalArgumentException(""QueryExpirationConfiguration is null"");}}}"	Yes
47	"public class A {@Overridepublic LdapEntry[] search(LdapConnectionHandler originalConnectionHandler, LdapEntry entry)throws IOException, NamingException {SearchControls searchControls = createSearchControl(recursive, attributeArray);Set<LdapEntry> foundEntries = new HashSet<LdapEntry>();LdapConnectionHandler connectionHandler = originalConnectionHandler;URI referralAddress = null;if ((referralAddress = entry.getReferralUri()) != null && preferOriginalConnection == false) {connectionHandler = connectionHandler.findForReferral(referralAddress);if (connectionHandler == null) {SECURITY_LOGGER.tracef(""Unable to obtain connection handler for referral URI %s"", referralAddress);return foundEntries.toArray(new LdapEntry[foundEntries.size()]);}} else {referralAddress = null;}Object[] searchParameter = getSearchParameter(entry);boolean trace = SECURITY_LOGGER.isTraceEnabled();if (trace) {SECURITY_LOGGER.tracef(""Performing search baseDn=%s, filterString=%s, searchParameter=%s"",baseDn, filterString, Arrays.toString(searchParameter));}NamingEnumeration<SearchResult> searchResults =connectionHandler.getConnection().search(baseDn, filterString, searchParameter, searchControls);if (trace && searchResults.hasMore() == false) {}while (searchResults.hasMore()) {SearchResult current = searchResults.next();Attributes attributes = current.getAttributes();if (attributes != null) {LdapEntry newEntry = convertToLdapEntry(current, attributes, referralAddress);SECURITY_LOGGER.tracef(""Adding %s"", newEntry);foundEntries.add(newEntry);} else {SECURITY_LOGGER.tracef(""No attributes found for %s"", current);}}return foundEntries.toArray(new LdapEntry[foundEntries.size()]);}}"	Yes
48	"public class A {protected Object executeScript(ScriptFactory scriptFactory,Map<String, Object> scriptVariables,HttpServletResponse response,String scriptUrl) {try {return scriptFactory.getScript(scriptUrl).execute(scriptVariables);} catch (ScriptNotFoundException e) {logger.error(""Script not found at "" + scriptUrl, e);response.setStatus(HttpServletResponse.SC_BAD_REQUEST);return singletonMap(errorMessageModelAttributeName, ""REST script not found"");} catch (Exception e) {Throwable cause = checkHttpStatusCodeAwareException(e, response);if (cause == null) {cause = checkValidationException(e, response);if (cause == null) {response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);}}return singletonMap(errorMessageModelAttributeName, cause != null ? cause.getMessage() : e.getMessage());}}}"	Yes
49	public class A {private static void loadBusinessProperties(String filename) {try {prop.load(new FileInputStream(filename));} catch (Exception e) {logger.debug(e.getMessage());throw new CloudRuntimeException(e.getMessage());}}}	Yes
50	public class A {@Overridepublic int truncate(String path, long size) {return -ErrorCodes.EOPNOTSUPP();}}	Yes
51	"public class A {private void doHousekeeping() {try {doClaimCleanup();updateStallStop();doRecovery();} catch (Throwable t) {logger.error(""Encountered problem during housekeeping"", t);}}}"	No
52	"public class A {public static com.liferay.commerce.product.model.CPOption addCPOption(HttpPrincipal httpPrincipal,java.util.Map<java.util.Locale, String> nameMap,java.util.Map<java.util.Locale, String> descriptionMap,String ddmFormFieldTypeName,boolean facetable,boolean required,boolean skuContributor,String key,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CPOptionServiceUtil.class, ""addCPOption"", _addCPOptionParameterTypes0);MethodHandler methodHandler =new MethodHandler(methodKey,nameMap,descriptionMap,ddmFormFieldTypeName,facetable,required,skuContributor,key,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.product.model.CPOption) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
53	"public class A {@Testpublic void testJmsProperties() throws Exception {QueueDeployment deployment = new QueueDeployment();deployment.setDuplicatesAllowed(true);deployment.setDurableSend(false);final String queueName = ""testQueue"";deployment.setName(queueName);manager.getQueueManager().deploy(deployment);ClientSession session = manager.getQueueManager().getSessionFactory().createSession();try {session.createConsumer(queueName).setMessageHandler(new Listener());session.start();ClientRequest request = new ClientRequest(generateURL(Util.getUrlPath(queueName)));ClientResponse<?> response = request.head();response.releaseConnection();Assert.assertEquals(200, response.getStatus());Link sender = getLinkByTitle(manager.getQueueManager().getLinkStrategy(), response, ""create"");log.debug(""create: "" + sender);{response =sender.request().body(""text/plain"", ""val"").header(""dummyHeader"", ""DummyValue"").header(HttpHeaderProperty.MESSAGE_PROPERTY_DISCRIMINATOR + ""property1"", ""val"").post();response.releaseConnection();Assert.assertEquals(201, response.getStatus());Listener.latch.await(2, TimeUnit.SECONDS);Assert.assertEquals(4, Listener.propertyNames.size());Assert.assertThat(Listener.propertyNames, hasItem(new SimpleString(""http_content$type"")));Assert.assertThat(Listener.propertyNames, hasItem(new SimpleString(""http_content$length"")));Assert.assertThat(Listener.propertyNames, hasItem(new SimpleString(POSTED_AS_HTTP_MESSAGE)));Assert.assertThat(Listener.propertyNames, hasItem(new SimpleString(""property1"")));Assert.assertThat(Listener.propertyNames, not(hasItem(new SimpleString(""dummyHeader""))));}} finally {session.close();}}}"	No
54	"public class A {public static String getParentName(ComposedSchema composedSchema, OpenAPI openAPI) {Map<String, Schema> allSchemas = OpenLOpenAPIUtils.getSchemas(openAPI);List<Schema> interfaces = OpenLOpenAPIUtils.getInterfaces(composedSchema);List<String> refedWithoutDiscriminator = new ArrayList<>();if (CollectionUtils.isNotEmpty(interfaces)) {for (Schema<?> schema : interfaces) {if (StringUtils.isNotEmpty(schema.get$ref())) {String parentName = OpenAPITypeUtils.getSimpleName(schema.get$ref());Schema<?> s = allSchemas.get(parentName);if (s == null) {LOGGER.error(""Failed to obtain schema from {}"", parentName);return ""UNKNOWN_PARENT_NAME"";} else if (hasOrInheritsDiscriminator(s, allSchemas)) {return parentName;} else {refedWithoutDiscriminator.add(parentName);}}}}if (refedWithoutDiscriminator.size() == 1) {return refedWithoutDiscriminator.get(0);}return null;}}"	No
55	"public class A {@SuppressWarnings(""unchecked"")public void shutdown(Database database) {getDatabaseService(database).shutdown(database);}}"	Yes
56	"public class A {public SendableEvent read() throws EPException {if (stateManager.getState() == AdapterState.DESTROYED || atEOF) {return null;}try {if (eventsToSend.isEmpty()) {if (beanClass != null) {return new SendableBeanEvent(newMapEvent(), beanClass, eventTypeName, totalDelay, scheduleSlot);} else {return new SendableMapEvent(newMapEvent(), eventTypeName, totalDelay, scheduleSlot);}} else {SendableEvent theEvent = eventsToSend.first();eventsToSend.remove(theEvent);return theEvent;}} catch (EOFException e) {if ((ExecutionPathDebugLog.isDebugEnabled) && (log.isDebugEnabled())) {log.debug("".read reached end of CSV file"");}atEOF = true;if (stateManager.getState() == AdapterState.STARTED) {stop();} else {destroy();}return null;}}}"	No
57	"public class A {public void run() {log.info(""Started event send"");try {long count = 0;while (count < numEvents) {env.sendEventBean(new SupportBean());count++;if (count % 10000 == 0) {log.info(""Sending event #"" + count);}}} catch (RuntimeException ex) {log.error(""Exception encountered: "" + ex.getMessage(), ex);exception = ex;}log.info(""Completed event send"");}}"	No
58	public class A {public static MTree deserializeFrom(File mtreeSnapshot) {try (MLogReader mLogReader = new MLogReader(mtreeSnapshot)) {return deserializeFromReader(mLogReader);} catch (IOException e) {return new MTree();} finally {limit = new ThreadLocal<>();offset = new ThreadLocal<>();count = new ThreadLocal<>();curOffset = new ThreadLocal<>();}}}	Yes
59	public class A {private void createMustUnderstandFault(SoapMessage soapResponse, List<QName> notUnderstoodHeaderNames, String[] actorsOrRoles) {if (logger.isWarnEnabled()) {}SoapBody responseBody = soapResponse.getSoapBody();SoapFault fault =responseBody.addMustUnderstandFault(mustUnderstandFaultString, mustUnderstandFaultStringLocale);if (!ObjectUtils.isEmpty(actorsOrRoles)) {fault.setFaultActorOrRole(actorsOrRoles[0]);}SoapHeader header = soapResponse.getSoapHeader();if (header instanceof Soap12Header) {Soap12Header soap12Header = (Soap12Header) header;for (QName headerName : notUnderstoodHeaderNames) {soap12Header.addNotUnderstoodHeaderElement(headerName);}}}}	Yes
60	"public class A {@Overridepublic void deleteAddress(AddressInfo addressInfo) throws Exception {if (logger.isDebugEnabled()) {logger.debug(""delete address "" + addressInfo);}try {server.removeAddressInfo(addressInfo.getName(), null, true);} catch (ActiveMQAddressDoesNotExistException expected) {} catch (Exception e) {logger.warn(e.getMessage(), e);}}}"	Yes
61	public class A {@Overridepublic String getContentType() {FileEntry fileEntry = getModel();try {FileVersion fileVersion = fileEntry.getLatestFileVersion();return fileVersion.getMimeType();} catch (Exception exception) {if (_log.isDebugEnabled()) {}return fileEntry.getMimeType();}}}	Yes
62	public class A {public void save(String fileName) {Gpr.toFileSerializeGz(fileName, this);}}	Yes
63	"public class A {@PUT@Timed@Path(""{name}/graph_read_mode"")@Consumes(APPLICATION_JSON)@Produces(APPLICATION_JSON_WITH_CHARSET)@RolesAllowed(""admin"")public Map<String, GraphReadMode> graphReadMode(@Context GraphManager manager, @PathParam(""name"") String name, GraphReadMode readMode) {LOG.debug(""Set graph read mode to: '{}' of graph '{}'"", readMode, name);E.checkArgument(readMode != null, ""Graph read mode can't be null"");HugeGraph g = graph(manager, name);g.readMode(readMode);return ImmutableMap.of(""graph_read_mode"", readMode);}}"	No
64	public class A {public static void sendApplicationInstanceTerminatedEvent(String appId, String instanceId) {if (log.isInfoEnabled()) {}ApplicationInstanceTerminatedEvent applicationTerminatedEvent =new ApplicationInstanceTerminatedEvent(appId, instanceId);publishEvent(applicationTerminatedEvent);}}	Yes
65	public class A {public static void applyDefaultConfiguration(Configuration configuration, @Nullable ConfigDescription configDescription) {if (configDescription != null) {for (ConfigDescriptionParameter parameter : configDescription.getParameters()) {String defaultValue = parameter.getDefault();if (defaultValue != null && configuration.get(parameter.getName()) == null) {if (parameter.isMultiple()) {if (defaultValue.contains(DEFAULT_LIST_DELIMITER)) {List<Object> values =(List<Object>)List.of(defaultValue.split(DEFAULT_LIST_DELIMITER)).stream().map(String::trim).filter(not(String::isEmpty)).map(value ->ConfigUtil.getDefaultValueAsCorrectType(parameter.getName(), parameter.getType(), value)).filter(Objects::nonNull).collect(Collectors.toList());Integer multipleLimit = parameter.getMultipleLimit();if (multipleLimit != null && values.size() > multipleLimit.intValue()) {LoggerFactory.getLogger(ConfigUtil.class)}configuration.put(parameter.getName(), values);} else {Object value = ConfigUtil.getDefaultValueAsCorrectType(parameter);if (value != null) {configuration.put(parameter.getName(), Arrays.asList(value));}}} else {Object value = ConfigUtil.getDefaultValueAsCorrectType(parameter);if (value != null) {configuration.put(parameter.getName(), value);}}}}}}}	Yes
66	"public class A {@Overridepublic PredictionOutcome predict(Task task, Map<String, Object> inputData) {final String confidenceThreshold =System.getProperty(""org.jbpm.task.prediction.service.confidence_threshold"");if (confidenceThreshold != null) {try {this.confidenceThreshold = Double.parseDouble(confidenceThreshold);} catch (NumberFormatException e) {}}Map<String, Object> outcomes = new HashMap<>();if (outcomeSet.size() >= 2) {model = new RandomForest(dataset, this.numberTrees);final double[] features = buildFeatures(inputData);final double[] posteriori = new double[outcomeSet.size()];double prediction = model.predict(features, posteriori);String predictionStr = dataset.responseAttribute().toString(prediction);outcomes.put(outcomeAttribute.getName(), predictionStr);final double confidence = posteriori[(int) prediction];outcomes.put(""confidence"", confidence);return new PredictionOutcome(confidence, this.confidenceThreshold, outcomes);} else {return new PredictionOutcome(0.0, this.confidenceThreshold, outcomes);}}}"	Yes
67	public class A {@Overridepublic GenericQueryConfiguration initialize(AccumuloClient client, Query settings, Set<Authorizations> auths) throws Exception {this.config = ShardQueryConfiguration.create(this, settings);if (log.isTraceEnabled())this.config.setExpandFields(true);this.config.setExpandValues(true);initialize(config, client, settings, auths);return config;}}	Yes
68	"public class A {@Overridepublic final void afterPropertiesSet() throws Exception {Object parentObject = null;if (ResourcesUtils.getResourceAsStream(""/org/springframework/web/context/WebApplicationContext.class"")!= null) {if (this.applicationContext instanceof WebApplicationContext) {parentObject = ((WebApplicationContext) this.applicationContext).getServletContext();}}Set<Class<?>> needCheckRepeat = new HashSet<>();if (this.loadModules != null) {for (String name : this.loadModules) {needCheckRepeat.add(this.applicationContext.getType(name));this.buildConfig.loadModules.add((Module) this.applicationContext.getBean(name));}}if (this.scanPackages != null && this.scanPackages.length > 0) {Predicate<Class<?>> classPredicate =needCheckRepeat.isEmpty()? Matchers.anyClass(): Matchers.anyClassExcludes(needCheckRepeat);AutoScanPackagesModule autoScanModule =new AutoScanPackagesModule(this.scanPackages, classPredicate);autoScanModule.setApplicationContext(Objects.requireNonNull(this.applicationContext));this.buildConfig.loadModules.add(autoScanModule);}this.realAppContext = this.buildConfig.build(parentObject, this.applicationContext).build(this);logger.info(""hasor Spring factory inited."");}}"	No
69	"public class A {@Overridepublic double get() {try (BufferedReader fileReaderMemoryMax = new BufferedReader(new FileReader(maxMemoryFile))) {return Long.parseLong(fileReaderMemoryMax.readLine());} catch (Exception e) {logger.debug(""Failed to read "" + maxMemoryFile + "" file"", e);return Double.NaN;}}}"	No
70	"public class A {@Overrideprotected RouteBuilder createRouteBuilder() throws Exception {return new RouteBuilder() {@Overridepublic void configure() throws Exception {getContext().setTracing(true);from(""direct:start"").delay(10).to(""mock:a"").process(new Processor() {public void process(Exchange exchange) throws Exception {}}).to(""mock:b"").toD(""direct:c"").to(""mock:result"").transform(simple(""${body}${body}""));from(""direct:c"").transform(constant(""Bye World"")).to(""mock:c"");}};}}"	Yes
71	public class A {@Overridepublic void run() {try {try (SmbResource f = createTestFile()) {try {} finally {try {f.delete();} catch (IOException e) {System.err.println(f.getLocator().getUNCPath());throw e;}}}this.completed = true;} catch (IOException | RuntimeException e) {}}}	Yes
72	"public class A {public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest request, AssertionType assertion) {AdhocQueryResponse response = null;try {if (request != null) {AdapterComponentDocRegistryProxyObjectFactory objFactory =new AdapterComponentDocRegistryProxyObjectFactory();AdapterComponentDocRegistryProxy registryProxy =objFactory.getAdapterComponentDocRegistryProxy();AdhocQueryRequest adhocQueryRequest = new AdhocQueryRequest();adhocQueryRequest.setAdhocQuery(request.getAdhocQuery());adhocQueryRequest.setResponseOption(request.getResponseOption());adhocQueryRequest.setComment(request.getComment());adhocQueryRequest.setFederated(request.isFederated());adhocQueryRequest.setFederation(request.getFederation());adhocQueryRequest.setId(request.getId());adhocQueryRequest.setMaxResults(request.getMaxResults());adhocQueryRequest.setRequestSlotList(request.getRequestSlotList());adhocQueryRequest.setStartIndex(request.getStartIndex());response = registryProxy.registryStoredQuery(request, assertion);} else {throw new IllegalArgumentException(""Request must be provided."");}} catch (Exception e) {RegistryErrorList errorList = new RegistryErrorList();response = new AdhocQueryResponse();response.setRegistryObjectList(new RegistryObjectListType());response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_FAILURE);RegistryError err = new RegistryError();errorList.getRegistryError().add(err);response.setRegistryErrorList(errorList);err.setValue(ERROR_VALUE);err.setSeverity(NhincConstants.XDS_REGISTRY_ERROR_SEVERITY_ERROR);err.setCodeContext(ERROR_CODE_CONTEXT);err.setErrorCode(DocumentConstants.XDS_ERRORCODE_REPOSITORY_ERROR);throw new ErrorEventException(e, response, ""Unable to query document registry."");}return response;}}"	Yes
73	"public class A {@Overridepublic MigrateState updateSecondaryIndex(CommandParamInfo paramInfo) {checkRequiredParameters(paramInfo);long startAllTables = System.currentTimeMillis();String currentTable = null;TransactionalDataSource sourceDataSource = databaseManager.getDataSource();ShardRecovery recovery = shardRecoveryDaoJdbc.getLatestShardRecovery(sourceDataSource);if (recovery != null&& recovery.getState() != null&& recovery.getState().getValue() > SECONDARY_INDEX_FINISHED.getValue()) {return state = SECONDARY_INDEX_FINISHED;} else {recovery = new ShardRecovery(SECONDARY_INDEX_STARTED);}durableTaskUpdateByState(state, 13.0, ""Secondary indexes creation..."");try (Connection sourceConnect = beginOrOpenConnection(sourceDataSource)) {for (TableInfo tableInfo : paramInfo.getTableInfoList()) {long start = System.currentTimeMillis();currentTable = tableInfo.getName();BatchedPaginationOperation paginationOperationHelper =helperFactory.createSelectInsertHelper(currentTable);processOneTableByHelper(paramInfo, sourceConnect, currentTable, start, paginationOperationHelper);recovery =updateShardRecoveryProcessedTableList(sourceConnect, currentTable, SECONDARY_INDEX_STARTED);incrementDurableTaskUpdateByPercent(1.8);}state = SECONDARY_INDEX_FINISHED;updateToFinalStepState(sourceConnect, recovery, state);sourceConnect.commit();durableTaskUpdateByState(state, 17.0, ""Secondary indexes created..."");} catch (Exception e) {log.error(""Error UPDATE S/Index processing table = '"" + currentTable + ""'"", e);sourceDataSource.rollback(false);state = MigrateState.FAILED;durableTaskUpdateByState(state, null, null);return state;} finally {if (sourceDataSource != null) {sourceDataSource.commit();}}log.debug(""UPDATE Processed table(s)=[{}] in {} sec"",paramInfo.getTableInfoList().size(),(System.currentTimeMillis() - startAllTables) / 1000);return state;}}"	Yes
74	public class A {public static int getGroupThreadsCount(long groupId, long userId, int status, boolean subscribed, boolean includeAnonymous)throws RemoteException {try {int returnValue =MBThreadServiceUtil.getGroupThreadsCount(groupId, userId, status, subscribed, includeAnonymous);return returnValue;} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
75	"public class A {public List findByExample(SysNotizen instance) {log.debug(""finding SysNotizen instance by example"");try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.SysNotizen"").add(Example.create(instance)).list();return results;} catch (RuntimeException re) {log.error(""find by example failed"", re);throw re;}}}"	Yes
76	public class A {@Overridepublic int abortMultipartUploads(S3FileTransferRequestParamsDto params, Date thresholdDate) {AmazonS3Client s3Client = getAmazonS3(params);int abortedMultipartUploadsCount = 0;try {String uploadIdMarker = null;String keyMarker = null;boolean truncated;do {ListMultipartUploadsRequest request =new ListMultipartUploadsRequest(params.getS3BucketName());request.setUploadIdMarker(uploadIdMarker);request.setKeyMarker(keyMarker);MultipartUploadListing uploadListing =s3Operations.listMultipartUploads(TransferManager.appendSingleObjectUserAgent(request), s3Client);for (MultipartUpload upload : uploadListing.getMultipartUploads()) {if (upload.getInitiated().compareTo(thresholdDate) < 0) {s3Operations.abortMultipartUpload(TransferManager.appendSingleObjectUserAgent(new AbortMultipartUploadRequest(params.getS3BucketName(), upload.getKey(), upload.getUploadId())),s3Client);abortedMultipartUploadsCount++;}}truncated = uploadListing.isTruncated();if (truncated) {uploadIdMarker = uploadListing.getNextUploadIdMarker();keyMarker = uploadListing.getNextKeyMarker();}} while (truncated);} finally {s3Client.shutdown();}return abortedMultipartUploadsCount;}}	Yes
77	public class A {public static long[] getCPDefinitionIds(long commercePricingClassId) throws RemoteException {try {long[] returnValue =CommercePricingClassCPDefinitionRelServiceUtil.getCPDefinitionIds(commercePricingClassId);return returnValue;} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
78	public class A {@Overridepublic void sessionIdle(NextFilter nextFilter, IoSession session, IdleStatus status)throws Exception {if (status == IdleStatus.BOTH_IDLE && SESSION_IDLE_TIMEOUT_KEY.get(session) != null) {if (logger.isDebugEnabled()) {}session.close(false);}super.sessionIdle(nextFilter, session, status);}}	Yes
79	public class A {private InternalFuture<Void> createRoleBindingsForExperimentRun(final ExperimentRun experimentRun) {ModelDBResourceEnum.ModelDBServiceResourceTypes modelDBServiceResourceType =ModelDBResourceEnum.ModelDBServiceResourceTypes.EXPERIMENT_RUN;String roleName = ModelDBConstants.ROLE_EXPERIMENT_RUN_OWNER;return FutureGrpc.ClientRequest(uac.getRoleService().setRoleBinding(SetRoleBinding.newBuilder().setRoleBinding(RoleBinding.newBuilder().setName(buildRoleBindingName(roleName,experimentRun.getId(),experimentRun.getOwner(),modelDBServiceResourceType.name())).setScope(RoleScope.newBuilder().build()).setRoleName(roleName).addEntities(Entities.newBuilder().addUserIds(experimentRun.getOwner()).build()).addResources(Resources.newBuilder().setService(ServiceEnum.Service.MODELDB_SERVICE).setResourceType(ResourceType.newBuilder().setModeldbServiceResourceType(modelDBServiceResourceType)).addResourceIds(experimentRun.getId()).build()).build()).build()),executor).thenAccept(response -> {},executor);}}	Yes
80	"public class A {protected void calculateActions(Game game) {currentScore = GameStateEvaluator.evaluate(playerId, game);if (!getNextAction(game)) {Game sim = createSimulation(game);SimulationNode.resetCount();root = new SimulationNode(null, sim, playerId);if (!isTestMode) addActionsTimed();else addActions(root, Integer.MIN_VALUE, Integer.MAX_VALUE);logger.info(name+ "" simulated ""+ nodeCount+ "" nodes in ""+ thinkTime / 1000000000.0+ ""s - average ""+ nodeCount / (thinkTime / 1000000000.0)+ "" nodes/s"");if (!root.children.isEmpty()) {root = root.children.get(0);actions = new LinkedList<>(root.abilities);combat = root.combat;}}}"	Yes
81	public class A {public static Error from(final GafferRuntimeException gex) {return new ErrorBuilder().status(gex.getStatus()).simpleMessage(gex.getMessage()).detailMessage(ExceptionUtils.getStackTrace(gex)).build();}}	Yes
82	"public class A {protected void updatePreferences(ActionRequest actionRequest, PortletPreferences preferences)throws Exception {String domainName = ParamUtil.getString(actionRequest, ""domainName"");String rules = ParamUtil.getString(actionRequest, ""rules"");long[] classNameIds = StringUtil.split(ParamUtil.getString(actionRequest, ""classNameIds""), 0L);if (Validator.isNull(domainName)) {SessionErrors.add(actionRequest, ""domainName"");} else if (Validator.isNull(rules)) {SessionErrors.add(actionRequest, ""rules"");} else if (classNameIds.length == 0) {SessionErrors.add(actionRequest, ""classNameIds"");} else {RulesResourceRetriever rulesResourceRetriever =new RulesResourceRetriever(new StringResourceRetriever(rules),String.valueOf(RulesLanguage.DROOLS_RULE_LANGUAGE));try {_rulesEngine.update(domainName, rulesResourceRetriever);} catch (RulesEngineException rulesEngineException) {_log.error(rulesEngineException, rulesEngineException);SessionErrors.add(actionRequest, ""rulesEngineException"");}}if (SessionErrors.isEmpty(actionRequest)) {preferences.setValue(""rules"", rules);preferences.setValue(""domain-name"", domainName);String userCustomAttributeNames =ParamUtil.getString(actionRequest, ""userCustomAttributeNames"");preferences.setValue(""user-custom-attribute-names"", userCustomAttributeNames);preferences.setValues(""class-name-ids"", ArrayUtil.toStringArray(classNameIds));}}}"	No
83	"public class A {@Overridepublic void streamClosed(Stream s) {log.debug(""Stream {} closed"", s.getName());}}"	No
84	"public class A {@Testpublic void testDescribeFeatureTypeManyTypes() {Document doc =getAsDOM(""wfs?request=DescribeFeatureType&version=1.1.0&typeName=gsml:MappedFeature,gsml:GeologicUnit,ex:FirstParentFeature,ex:SecondParentFeature"");checkGsmlExDescribeFeatureType(doc);}}"	Yes
85	"public class A {private void initializeSinkStub() {if (getChannelState().equals(ConnectivityState.READY)) {sinkStream = asyncStub.sinkStreaming(new EmptyMessageReceiver());} else {LOG.warn(""gRPC IPC server is not in ready state"");}}}"	Yes
86	"public class A {@Overridepublic Collection<AugmentedEvent> apply(Collection<AugmentedEvent> events) {if (this.sought.get()) {return events;} else {Collection<AugmentedEvent> soughtEvents = new ArrayList<>();for (AugmentedEvent event : events) {int partition = this.partitioner.apply(event, this.totalPartitions);if (this.partitionSought.get(partition)) {soughtEvents.add(event);} else if (this.partitionCheckpoint[partition] == null|| this.partitionCheckpoint[partition].compareTo(event.getHeader().getCheckpoint())< 0) {this.partitionSought.set(partition);this.sought.set(this.partitionSought.cardinality() == this.totalPartitions);soughtEvents.add(event);KafkaSeeker.LOG.info(String.format(""sought partition %d"", partition));}}if (soughtEvents.size() > 0) {return soughtEvents;} else {return null;}}}}"	No
87	"public class A {private void processAuthenticatedPasswordModify(LdapSession requestor, PasswordModifyRequest req, Dn userDn) {byte[] oldPassword = req.getOldPassword();byte[] newPassword = req.getNewPassword();Entry modifiedEntry = null;Dn principalDn = requestor.getCoreSession().getEffectivePrincipal().getDn();if ((userDn != null) && (!userDn.equals(principalDn))) {if (requestor.getCoreSession().isAdministrator()) {modifiedEntry = getModifiedEntry(requestor, req, userDn);if (modifiedEntry == null) {return;}modifyUserPassword(requestor.getCoreSession(), modifiedEntry, userDn, oldPassword, newPassword, req);} else {writeResult(requestor,req,ResultCodeEnum.INSUFFICIENT_ACCESS_RIGHTS,""Non-admin user cannot access another user's password to modify it"");}} else {modifiedEntry = getModifiedEntry(requestor, req, principalDn);if (modifiedEntry == null) {return;}modifyUserPassword(requestor.getCoreSession(), modifiedEntry, principalDn, oldPassword, newPassword, req);}}}"	Yes
88	"public class A {public Boolean hasUserPermissionToObject(final User user, final PermissionName permissionName, final SecurableModel securableModel) {if (user == null) {throw new IllegalArgumentException(""User can not be null."");}if (permissionName == null) {throw new IllegalArgumentException(""Permission Name can not be null."");}if (securableModel == null) {throw new IllegalArgumentException(""SecurableModel can not be null."");}if (hasUserPermissionToClass(user, permissionName, securableModel.getClass().getCanonicalName())) {return true;}final List<Long> userRoleIds = new ArrayList<>();for (Role role : user.getRoles()) {userRoleIds.add(role.getId());}final List<AclEntry> rolesAclEntries =aclEntryService.findAll(permissionName,AclSidType.ROLE,userRoleIds,AclClassName.getByName(securableModel.getClass().getCanonicalName()),securableModel.getId());if (rolesAclEntries.size() > 0) {if (log.isDebugEnabled()) {log.debug(""User ""+ user.getUsername()+ "" has permission ""+ permissionName+ "" to object ""+ securableModel.getClass().getCanonicalName()+ ""[id=""+ securableModel.getId()+ ""] based on the ACL security settings."");}return true;}if (securableModel.getCreatedBy() != null&& securableModel.getCreatedBy().getId().equals(user.getId())) {List<AclEntry> ownerAclEntries =aclEntryService.findAll(permissionName,AclSidType.OWNER,0L,AclClassName.getByName(securableModel.getClass().getCanonicalName()),securableModel.getId());if (ownerAclEntries.size() > 0) {if (log.isDebugEnabled()) {}return true;}}if (log.isDebugEnabled()) {}return false;}}"	Yes
89	"public class A {private void connectToCloudname() {final ServiceData myServiceData = new ServiceData();myServiceData.addEndpoint(new Endpoint(""http"", ""0.0.0.0"", httpPort));try (final ServiceHandle handle =service.registerService(ServiceCoordinate.parse(myCoordinate), myServiceData)) {final String[] ghostNames = new String[] {""pinky"", ""blinky"", ""inky"", ""clyde""};for (final String name : ghostNames) {final ServiceCoordinate ghostCoordinate =new ServiceCoordinate.Builder().fromCoordinate(ServiceCoordinate.parse(myCoordinate)).setService(name).build();service.addServiceListener(ghostCoordinate,new ServiceListener() {@Overridepublic void onServiceCreated(final InstanceCoordinate coordinate, final ServiceData serviceData) {publisher.publish(getCreateNotification(coordinate, serviceData));}@Overridepublic void onServiceDataChanged(final InstanceCoordinate coordinate, final ServiceData data) {}@Overridepublic void onServiceRemoved(final InstanceCoordinate coordinate) {publisher.publish(getRemoveNotification(coordinate));}});}LOG.info(""Connected, using coordinate "" + handle.getCoordinate().toCanonicalString());}}}"	Yes
90	"public class A {private boolean processRequest(final Socket socket, final URI socketURI, final InputStream in, final OutputStream out) {HttpResponseImpl response = null;try {response = process(socket, socketURI, in);return response != null;} catch (final Throwable t) {log.error(t.getMessage(), t);response = HttpResponseImpl.createError(t.getMessage(), t);return true;} finally {try {if (response != null) {response.writeMessage(out, false);if (print.size() > 0 && print.contains(Output.RESPONSE)) {response.writeMessage(new LoggerOutputStream(log, ""debug""), indent);}}} catch (final Throwable t2) {if (log.isDebugEnabled()) {log.debug(""Could not write response"", t2);} else {if (!SocketException.class.isInstance(t2)) {log.warning(""Could not write response:"" + t2);}}}}}}"	No
91	public class A {public CompletableFuture<String> asyncGet() {CompletableFuture<String> future = new CompletableFuture<>();get(new TradfriCoapHandler(future));return future;}}	Yes
92	"public class A {@Overridepublic void searchPlaces(final GeoQuery query) {getDispatcher().invokeLater(new AsyncTask(SEARCH_PLACES, listeners) {@Overridepublic void invoke(List<TwitterListener> listeners) throws TwitterException {ResponseList<Place> places = twitter.searchPlaces(query);for (TwitterListener listener : listeners) {try {listener.searchedPlaces(places);} catch (Exception e) {logger.warn(""Exception at searchPlaces"", e);}}}});}}"	No
93	"public class A {public static int getArticlesCount(HttpPrincipal httpPrincipal, long groupId, long folderId, int status) {try {MethodKey methodKey =new MethodKey(JournalArticleServiceUtil.class,""getArticlesCount"",_getArticlesCountParameterTypes31);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, folderId, status);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Integer) returnObj).intValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
94	"public class A {public void initSchema() {DbType dbType = getDbType();String initSqlPath = """";if (dbType != null) {switch (dbType) {case MYSQL:initSqlPath = ""/sql/create/release-1.0.0_schema/mysql/"";initSchema(initSqlPath);break;case POSTGRESQL:initSqlPath = ""/sql/create/release-1.2.0_schema/postgresql/"";initSchema(initSqlPath);break;default:logger.error(""not support sql type: {},can't upgrade"", dbType);throw new IllegalArgumentException(""not support sql type,can't upgrade"");}}}}"	No
95	"public class A {public void export(Dashboard dashboard, Path path, ExportType type) {DashboardSerializer serializer = serializerFor(type);validate(dashboard);Path temp = createTempDashboardFile();try (FileOutputStream fos = new FileOutputStream(temp.toFile())) {serializer.serialize(dashboard, fos);Files.move(temp, path, StandardCopyOption.REPLACE_EXISTING);} catch (FileNotFoundException e) {throw new IllegalArgumentException(""File not found: "" + path, e);} catch (IOException e) {throw new RuntimeException(""Error writing to file "" + path, e);} finally {try {Files.deleteIfExists(temp);} catch (IOException e) {}}}}"	Yes
96	"public class A {@Overridepublic void dispose() {super.dispose();try {XTextContent xTextContent = UNO.XTextContent(inputField);xTextContent.getAnchor().getText().removeTextContent(xTextContent);} catch (NoSuchElementException e) {LOGGER.info("""", e);}}}"	No
97	"public class A {public static <T> void attachOutputPortToInputPort(DefaultOutputPort<T> outputPort, final DefaultInputPort<T> inputPort) {outputPort.setSink(new Sink<Object>() {@Override@SuppressWarnings(""unchecked"")public void put(Object tuple) {LOG.debug(""processing tuple"");inputPort.process((T) tuple);}@Overridepublic int getCount(boolean reset) {return 0;}});}}"	No
98	"public class A {public static void compareFromSameFolder(final File sourceFolder,final IOFileFilter sourceFileFilter,final Transformer<String> toTargetFileName,final ResourcePreProcessor processor) {final Collection<File> files =FileUtils.listFiles(sourceFolder, sourceFileFilter, FalseFileFilter.INSTANCE);int processedNumber = 0;for (final File file : files) {File targetFile;try {targetFile = new File(sourceFolder, toTargetFileName.transform(file.getName()));} catch (Exception e) {throw WroRuntimeException.wrap(e);}try (InputStream sourceFileStream = new FileInputStream(file);InputStream targetFileStream = new FileInputStream(targetFile)) {try {compare(sourceFileStream,targetFileStream,new ResourcePostProcessor() {public void process(final Reader reader, final Writer writer) throws IOException {processor.process(Resource.create(""file:"" + file.getPath(), ResourceType.CSS), reader, writer);}});} catch (final ComparisonFailure e) {throw e;}processedNumber++;} catch (final IOException e) {} catch (final Exception e) {throw WroRuntimeException.wrap(e);}}logSuccess(processedNumber);}}"	Yes
99	"public class A {@Overridepublic JobExecution abandon(long jobExecutionId)throws NoSuchJobExecutionException, JobExecutionAlreadyRunningException {JobExecution jobExecution = findExecutionById(jobExecutionId);if (jobExecution.getStatus().isLessThan(BatchStatus.STOPPING)) {throw new JobExecutionAlreadyRunningException(""JobExecution is running or complete and therefore cannot be aborted"");}if (logger.isInfoEnabled()) {}jobExecution.upgradeStatus(BatchStatus.ABANDONED);jobExecution.setEndTime(new Date());jobRepository.update(jobExecution);return jobExecution;}}"	Yes
100	public class A {private void _generateImages(FileVersion sourceFileVersion, FileVersion destinationFileVersion)throws Exception {try {if (sourceFileVersion != null) {copy(sourceFileVersion, destinationFileVersion);return;}if (!PropsValues.DL_FILE_ENTRY_THUMBNAIL_ENABLED&& !PropsValues.DL_FILE_ENTRY_PREVIEW_ENABLED) {return;}try (InputStream inputStream = destinationFileVersion.getContentStream(false)) {byte[] bytes = FileUtil.getBytes(inputStream);ImageBag imageBag = ImageToolUtil.read(bytes);RenderedImage renderedImage = imageBag.getRenderedImage();if (renderedImage == null) {_fileVersionPreviewEventListener.onFailure(destinationFileVersion);return;}ColorModel colorModel = renderedImage.getColorModel();if (colorModel.getNumColorComponents() == 4) {Future<RenderedImage> future = ImageToolUtil.convertCMYKtoRGB(bytes, imageBag.getType());if (future == null) {_fileVersionPreviewEventListener.onFailure(destinationFileVersion);return;}String processIdentity = String.valueOf(destinationFileVersion.getFileVersionId());futures.put(processIdentity, future);RenderedImage convertedRenderedImage = future.get();if (convertedRenderedImage != null) {renderedImage = convertedRenderedImage;}}if (!_hasPreview(destinationFileVersion)) {_storePreviewImage(destinationFileVersion, renderedImage);}if (!hasThumbnails(destinationFileVersion)) {storeThumbnailImages(destinationFileVersion, renderedImage);}_fileVersionPreviewEventListener.onSuccess(destinationFileVersion);}} catch (NoSuchFileEntryException noSuchFileEntryException) {if (_log.isDebugEnabled()) {}_fileVersionPreviewEventListener.onFailure(destinationFileVersion);} finally {_fileVersionIds.remove(destinationFileVersion.getFileVersionId());}}}	Yes
101	"public class A {public void createHttpPrincipal(LocalKadmin kadmin) throws HasException {String httpPrincipal = getHttpPrincipal();IdentityBackend backend = kdcServer.getIdentityService();try {if (backend.getIdentity(httpPrincipal) == null) {kadmin.addPrincipal(httpPrincipal);} else {}} catch (KrbException e) {throw new HasException(""Failed to add principal, "" + e.getMessage());}}}"	Yes
102	"public class A {public List<Token> tokenize(final String pattern) {if (pattern == null) {return Arrays.asList(NullToken.INSTANCE);}if ("""".equals(pattern)) {return Arrays.asList(BlankToken.INSTANCE);}final List<Token> tokens;if (_predefinedTokens) {final List<PredefinedTokenDefinition> predefinedTokens = _configuration.getPredefinedTokens();final PredefinedTokenTokenizer tokenizer = new PredefinedTokenTokenizer(predefinedTokens);tokens = tokenizer.tokenize(pattern);for (final ListIterator<Token> it = tokens.listIterator(); it.hasNext(); ) {final Token token = it.next();final TokenType tokenType = token.getType();if (tokenType == TokenType.UNDEFINED) {final List<SimpleToken> replacementTokens = tokenizeInternal(token.getString());boolean replace = true;if (replacementTokens.size() == 1) {if (token.equals(replacementTokens.get(0))) {replace = false;}}if (replace) {it.remove();for (final SimpleToken replacementToken : replacementTokens) {it.add(replacementToken);}}}}} else {tokens = new ArrayList<>();tokens.addAll(tokenizeInternal(pattern));}return tokens;}}"	Yes
103	"public class A {public void execute(JobExecutionContext context) throws JobExecutionException {final JobDetail detail = context.getJobDetail();if (LOGGER.isTraceEnabled()) {}final JobDataMap jdm = detail.getJobDataMap();if (jdm.get(FileSystemMonitorSPI.TYPE_KEY) == FileSystemEventType.POLLING_EVENT) {final GBEventNotifier notifier = (GBEventNotifier) jdm.get(EVENT_NOTIFIER_KEY);notifier.notifyEvent(new File(Long.toString(System.currentTimeMillis())), FileSystemEventType.POLLING_EVENT);return;}FileAlterationObserver observer = null;if ((observer = getObserver(jdm)) == null) {try {long wait = WAITING_LOCK_TIME_DEFAULT;try {wait = jdm.getLong(WAITING_LOCK_TIME_KEY);} catch (ClassCastException cce) {}lock.tryLock(wait, TimeUnit.MILLISECONDS);if ((observer = getObserver(jdm)) == null) {if (LOGGER.isDebugEnabled()) LOGGER.debug(""Building the observer tree..."");observer = buildObserver(jdm);if (LOGGER.isDebugEnabled()) LOGGER.debug(""Observer tree complete."");}} catch (InterruptedException ex) {LOGGER.error(""GBFileSystemMonitorJob interrupted during setup"", ex);} catch (Exception ex) {LOGGER.error(""GBFileSystemMonitorJob interrupted during setup"", ex);} finally {lock.unlock();}}observer.checkAndNotify();if (LOGGER.isTraceEnabled()) {LOGGER.trace(""job named: "" + detail.getKey() + "" completed"");}}}"	Yes
104	"public class A {@Overridepublic void updateNonExistent(String testName) throws Exception {setupUpdateNonExistent();AcquisitionClient client = new AcquisitionClient();PoxPayloadOut multipart = createAcquisitionInstance(NON_EXISTENT_ID);Response res = client.update(NON_EXISTENT_ID, multipart);try {int statusCode = res.getStatus();if (logger.isDebugEnabled()) {logger.debug(testName + "": status = "" + statusCode);}Assert.assertTrue(testRequestType.isValidStatusCode(statusCode),invalidStatusCodeMessage(testRequestType, statusCode));Assert.assertEquals(statusCode, testExpectedStatusCode);} finally {res.close();}}}"	No
105	"public class A {private void reuse(OutOfOffHeapMemoryListener oooml,OffHeapMemoryStats newStats,long offHeapMemorySize,Slab[] slabs) {if (isClosed()) {throw new IllegalStateException(""Can not reuse a closed off-heap memory manager."");}if (oooml == null) {throw new IllegalArgumentException(""OutOfOffHeapMemoryListener is null"");}if (getTotalMemory() != offHeapMemorySize) {}if (!this.freeList.okToReuse(slabs)) {throw new IllegalStateException(""attempted to reuse existing off-heap memory even though new off-heap memory was""+ "" allocated"");}this.ooohml = oooml;newStats.initialize(this.stats);this.stats = newStats;}}"	Yes
106	"public class A {public IIdea getIdea(String code) {IIdea idea = null;try {idea = this.getIdeaManager().getIdea(code);if (null != idea && idea.getStatus() != IIdea.STATUS_APPROVED) {return null;}} catch (Throwable t) {throw new RuntimeException(""Errore in caricamento idea "" + code);}return idea;}}"	Yes
107	public class A {public Future<SummaryCollection> gather(ExecutorService es) {int numFiles = countFiles();if (numFiles == 0) {return CompletableFuture.completedFuture(new SummaryCollection());}int numRequest = Math.max(numFiles / 100_000, 1);List<CompletableFuture<SummaryCollection>> futures = new ArrayList<>();AtomicBoolean cancelFlag = new AtomicBoolean(false);TInfo tinfo = TraceUtil.traceInfo();for (int i = 0; i < numRequest; i++) {futures.add(CompletableFuture.supplyAsync(new GatherRequest(tinfo, i, numRequest, cancelFlag), es));}Future<SummaryCollection> future =CompletableFutureUtil.merge(futures,(sc1, sc2) -> SummaryCollection.merge(sc1, sc2, factory),SummaryCollection::new);return new CancelFlagFuture<>(future, cancelFlag);}}	Yes
108	public class A {@Overridepublic Promise<MethodWithMultipleByteBufferParametersDeferred>methodWithMultipleByteBufferParameters(Byte[] byteBufferArg1, Byte[] byteBufferArg2) {MethodWithMultipleByteBufferParametersDeferred deferred =new MethodWithMultipleByteBufferParametersDeferred();Byte[] result = IltUtil.concatenateByteArrays(byteBufferArg1, byteBufferArg2);deferred.resolve(result);return new Promise<MethodWithMultipleByteBufferParametersDeferred>(deferred);}}	Yes
109	public class A {@Merged@ViewChangedpublic CompletionStage<Void> viewChanged(ViewChangedEvent event) {if (this.cache.getAdvancedCache().getDistributionManager() != null) {this.views.put(event.getViewId(), event.isMergeView());} else {Membership previousMembership =new CacheMembership(event.getLocalAddress(), event.getOldMembers(), this);Membership membership =new CacheMembership(event.getLocalAddress(), event.getNewMembers(), this);for (Map.Entry<GroupListener, ExecutorService> entry : this.listeners.entrySet()) {GroupListener listener = entry.getKey();ExecutorService executor = entry.getValue();Runnable listenerTask =new Runnable() {@Overridepublic void run() {try {listener.membershipChanged(previousMembership, membership, event.isMergeView());} catch (Throwable e) {}}};try {executor.submit(listenerTask);} catch (RejectedExecutionException e) {}}}return CompletableFutures.completedNull();}}	Yes
110	"public class A {@Testpublic void testDeleteAllOlderThan() {try {long start = System.currentTimeMillis();doDeleteAllOlderThan();} catch (Exception e) {LOG.error(""error:"", e);fail(e.getMessage());}}}"	Yes
111	"public class A {public LocalParameter createKineticParameter(String id) {Reaction lastReaction = getLastElementOf(listOfReactions);KineticLaw lastKineticLaw = null;if (lastReaction == null) {logger.warn(MessageFormat.format(COULD_NOT_CREATE_ELEMENT_MSG, ""LocalParameter for KineticLaw"", ""reactions""));return null;} else {lastKineticLaw = lastReaction.getKineticLaw();if (lastKineticLaw == null) {return null;}}LocalParameter parameter = new LocalParameter(id, getLevel(), getVersion());lastKineticLaw.addLocalParameter(parameter);return parameter;}}"	No
112	"public class A {public void messageReceived(ChannelHandlerContext ctx, MobileStateHolder state, StringMessage message) {var splitBody = split2(message.body);var user = state.user;var energyAmountToAdd = Integer.parseInt(splitBody[0]);ResponseMessage response;if (splitBody.length == 2 && isValidTransactionId(splitBody[1])) {double price = calcPrice(energyAmountToAdd);insertPurchase(user.email, energyAmountToAdd, price, splitBody[1]);user.addEnergy(energyAmountToAdd);response = ok(message.id);} else {if (!wasErrorPrinted) {log.warn(""Purchase {} with invalid transaction id '{}'. {} ({})."",splitBody[0],splitBody[1],user.email,state.version);wasErrorPrinted = true;}response = notAllowed(message.id);}ctx.writeAndFlush(response, ctx.voidPromise());}}"	No
113	"public class A {@Overridepublic void startElement(String uri, String localName, String qName, Attributes attributes) {log.trace(String.format(""Start of element <%s>"", localName));String name = localName;if (uri != null && !"""".equals(uri)) name = uri + "":"" + name;events.start(name);for (int i = 0; i < attributes.getLength(); i++) {String k = attributes.getLocalName(i);String auri = attributes.getURI(i);if (auri != null && (XMLNS.equals(auri) || XML.equals(auri))) continue;if (auri != null && !"""".equals(auri)) k = auri + "":"" + k;events.start(""@"" + k);events.text(attributes.getValue(i));events.end();}}}"	No
114	"public class A {protected List<String> resolveTableSchema(@Nonnull final String schema, @Nonnull final String table) {List<String> columnSet = new Vector<>();try (final Statement st = conn.createStatement()) {st.execute(""use default"");String ddl = ""desc "" + HiveUtils.quoteIdentifier(schema, table);logger.info(""Resolving table schema [{}]"", ddl);ResultSet rs = doSelectSQL(st, ddl);while (rs.next()) {if (StringUtils.isEmpty(rs.getString(1))) {break;}columnSet.add(rs.getString(1));}} catch (SQLException e) {throw new RuntimeException(""Failed to inspect schema"", e);}return columnSet;}}"	No
115	"public class A {public void run() {logger.warn(""calling PollingKafkaConsumer.run()"");ConsumerIterator<byte[], byte[]> it = m_stream.iterator();try {while (it.hasNext()) {String message = new String(it.next().message());messages.add(message);}} catch (Exception e) {}latch.countDown();logger.warn(""Shutting down Thread: "" + m_threadNumber);}}"	Yes
116	"public class A {@Overridepublic void run() {boolean duplicateFound = false;for (RadioStation station : stationsList) {if (!duplicateFound && station.getName().equals(radioStation.getName())) {duplicateFound = true;deferred.reject(AddFavoriteStationErrorEnum.DUPLICATE_RADIOSTATION);break;}}if (!duplicateFound) {logger.info(PRINT_BORDER + ""addFavoriteStation("" + radioStation + "")"" + PRINT_BORDER);stationsList.add(radioStation);deferred.resolve(true);}}}"	No
117	"public class A {private void updateLogProperties(File karafHome, ExamSystem _system) throws IOException {DoNotModifyLogOption[] modifyLog = _system.getOptions(DoNotModifyLogOption.class);if (modifyLog != null && modifyLog.length != 0) {return;}LoggingBackend loggingBackend = getLoggingBackend(karafHome);String realLogLevel = retrieveRealLogLevel(_system);File customPropertiesFile =new File(karafHome, framework.getKarafEtc() + ""/org.ops4j.pax.logging.cfg"");Properties karafPropertyFile = new Properties();karafPropertyFile.load(new FileInputStream(customPropertiesFile));loggingBackend.updatePaxLoggingConfiguration(karafPropertyFile, realLogLevel);karafPropertyFile.store(new FileOutputStream(customPropertiesFile), ""updated by pax-exam"");}}"	Yes
118	"public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;deleteGatewayStoragePreference_result result = new deleteGatewayStoragePreference_result();if (e instanceof org.apache.airavata.model.error.InvalidRequestException) {result.ire = (org.apache.airavata.model.error.InvalidRequestException) e;result.setIreIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataClientException) {result.ace = (org.apache.airavata.model.error.AiravataClientException) e;result.setAceIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataSystemException) {result.ase = (org.apache.airavata.model.error.AiravataSystemException) e;result.setAseIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AuthorizationException) {result.ae = (org.apache.airavata.model.error.AuthorizationException) e;result.setAeIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {_LOGGER.error(""Exception inside handler"", e);msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}}"	Yes
119	"public class A {static OBSFileStatus innerFsGetObjectStatus(final OBSFileSystem owner, final Path f)throws IOException {final Path path = OBSCommonUtils.qualify(owner, f);String key = OBSCommonUtils.pathToKey(owner, path);LOG.debug(""Getting path status for {}  ({})"", path, key);if (key.isEmpty()) {LOG.debug(""Found root directory"");return new OBSFileStatus(path, owner.getUsername());}try {final GetAttributeRequest getAttrRequest = new GetAttributeRequest(owner.getBucket(), key);ObsFSAttribute meta = owner.getObsClient().getAttribute(getAttrRequest);owner.getSchemeStatistics().incrementReadOps(1);if (fsIsFolder(meta)) {LOG.debug(""Found file (with /): fake directory"");return new OBSFileStatus(path, OBSCommonUtils.dateToLong(meta.getLastModified()), owner.getUsername());} else {LOG.debug(""Found file (with /): real file? should not happen: {}"", key);return new OBSFileStatus(meta.getContentLength(),OBSCommonUtils.dateToLong(meta.getLastModified()),path,owner.getDefaultBlockSize(path),owner.getUsername());}} catch (ObsException e) {if (e.getResponseCode() == OBSCommonUtils.NOT_FOUND_CODE) {throw new FileNotFoundException(""No such file or directory: "" + path);}if (e.getResponseCode() == OBSCommonUtils.CONFLICT_CODE) {throw new FileConflictException(""file conflicts: "" + e.getResponseStatus());}throw OBSCommonUtils.translateException(""getFileStatus"", path, e);}}}"	Yes
120	"public class A {@Overridepublic void delete(ScriptVersionTraceKey scriptVersionTraceKey) {LOGGER.trace(MessageFormat.format(""Deleting ScriptVersionTrace {0}."", scriptVersionTraceKey.toString()));String deleteStatement = deleteStatement(scriptVersionTraceKey);getMetadataRepository().executeUpdate(deleteStatement);}}"	No
121	"public class A {@PostConstructpublic void init() {logger = LoggerFactory.getLogger(getClass());attributes = Attributes.getComponentAttributesFromFacesConfig(UIQueue.class, getClass());attributes.setAttribute(""rendered"", true);attributes.setAttribute(""requestDelay"", 750);}}"	Yes
122	"public class A {@SuppressWarnings({""rawtypes"", ""unchecked""})@Testpublic void testSqlSelect() {SelectOperator oper = new SelectOperator();oper.addIndex(new ColumnIndex(""b"", null));oper.addIndex(new ColumnIndex(""c"", null));BetweenCondition cond = new BetweenCondition(""a"", 0, 2);oper.setCondition(cond);CollectorTestSink sink = new CollectorTestSink();oper.outport.setSink(sink);oper.setup(null);oper.beginWindow(1);HashMap<String, Object> tuple = new HashMap<String, Object>();tuple.put(""a"", 0);tuple.put(""b"", 1);tuple.put(""c"", 2);oper.inport.process(tuple);tuple = new HashMap<String, Object>();tuple.put(""a"", 1);tuple.put(""b"", 3);tuple.put(""c"", 4);oper.inport.process(tuple);tuple = new HashMap<String, Object>();tuple.put(""a"", 2);tuple.put(""b"", 5);tuple.put(""c"", 6);oper.inport.process(tuple);tuple = new HashMap<String, Object>();tuple.put(""a"", 3);tuple.put(""b"", 7);tuple.put(""c"", 8);oper.inport.process(tuple);oper.endWindow();oper.teardown();}}"	Yes
123	"public class A {OpenCGAResult<Object> privateDelete(ClientSession clientSession, Document fileDocument, String status)throws CatalogDBException, CatalogParameterException, CatalogAuthorizationException {long tmpStartTime = startQuery();long fileUid = fileDocument.getLong(PRIVATE_UID);long studyUid = fileDocument.getLong(PRIVATE_STUDY_UID);String path = fileDocument.getString(QueryParams.PATH.key());Query query = new Query(QueryParams.STUDY_UID.key(), studyUid);if (File.Type.FILE.name().equals(fileDocument.getString(QueryParams.TYPE.key()))) {query.append(QueryParams.UID.key(), fileUid);} else {query.append(QueryParams.PATH.key(), ""~^"" + path + ""*"");}if (FileStatus.TRASHED.equals(status)) {Bson update =Updates.set(QueryParams.INTERNAL_STATUS.key(),getMongoDBDocument(new FileStatus(status), ""status""));QueryOptions multi = new QueryOptions(MongoDBCollection.MULTI, true);return endWrite(tmpStartTime, fileCollection.update(parseQuery(query), update, multi));} else {QueryOptions options =new QueryOptions().append(QueryOptions.SORT, QueryParams.PATH.key()).append(QueryOptions.ORDER, QueryOptions.DESCENDING);DBIterator<Document> iterator = nativeIterator(clientSession, query, options);long numFiles = 0;while (iterator.hasNext()) {Document tmpFile = iterator.next();long tmpFileUid = tmpFile.getLong(PRIVATE_UID);dbAdaptorFactory.getCatalogJobDBAdaptor().removeFileReferences(clientSession, studyUid, tmpFileUid, tmpFile);nestedPut(QueryParams.INTERNAL_STATUS.key(),getMongoDBDocument(new FileStatus(status), ""status""),tmpFile);deletedFileCollection.insert(clientSession, tmpFile, null);logger.debug(""Inserted file uid '{}' in DELETE collection"", tmpFileUid);Bson bsonQuery = parseQuery(new Query(QueryParams.UID.key(), tmpFileUid));DataResult remove = fileCollection.remove(clientSession, bsonQuery, null);if (remove.getNumMatches() == 0) {throw new CatalogDBException(""File "" + tmpFileUid + "" not found"");}if (remove.getNumDeleted() == 0) {throw new CatalogDBException(""File "" + tmpFileUid + "" could not be deleted"");}logger.debug(""File uid '{}' deleted from main FILE collection"", tmpFileUid);numFiles++;}logger.debug(""File {}({}) deleted"", path, fileUid);return endWrite(tmpStartTime, numFiles, 0, 0, numFiles, Collections.emptyList());}}}"	No
124	"public class A {@RequestMapping(value = ""/{id}"", method = RequestMethod.GET)public String handleRequest(Model model, @PathVariable Long id) {logger.info(""handleRequest"");LetterToAllophoneMapping letterToAllophoneMapping = letterToAllophoneMappingDao.read(id);model.addAttribute(""letterToAllophoneMapping"", letterToAllophoneMapping);List<Letter> letters = letterDao.readAllOrdered();model.addAttribute(""letters"", letters);List<Allophone> allophones = allophoneDao.readAllOrdered();model.addAttribute(""allophones"", allophones);return ""content/letter-to-allophone-mapping/edit"";}}"	No
125	public class A {@Overridepublic void addRelatedEntryFields(Document document, Object object) throws Exception {Comment comment = (Comment) object;FileEntry fileEntry = null;try {fileEntry = dlAppLocalService.getFileEntry(comment.getClassPK());} catch (Exception exception) {if (_log.isDebugEnabled()) {_log.debug(exception, exception);}return;}if (fileEntry instanceof LiferayFileEntry) {DLFileEntry dlFileEntry = (DLFileEntry) fileEntry.getModel();document.addKeyword(Field.FOLDER_ID, dlFileEntry.getFolderId());document.addKeyword(Field.HIDDEN, dlFileEntry.isInHiddenFolder());document.addKeyword(Field.TREE_PATH, StringUtil.split(dlFileEntry.getTreePath(), CharPool.SLASH));}}}	No
126	"public class A {@Overridepublic void merge(Collection<W> toBeMerged, W mergeResult) {if (LOG.isDebugEnabled()) {LOG.debug(""Merging {} into {}"", toBeMerged, mergeResult);}mergeResults.put(mergeResult, toBeMerged);}}"	No
127	public class A {protected final void flush0() {SelectionKey tmpKey = null;Selector writeSelector = null;int attempts = 0;try {while (true) {if (writeSelector == null) {writeSelector = SelectorFactory.getSelector();if (writeSelector == null) {return;}tmpKey = selectableChannel.register(writeSelector, SelectionKey.OP_WRITE);}if (writeSelector.select(1000) == 0) {attempts++;if (attempts > 2) {return;}} else {break;}}onWrite(selectableChannel.keyFor(writeSelector));} catch (ClosedChannelException cce) {onException(cce);close();} catch (IOException ioe) {onException(ioe);close();} finally {if (tmpKey != null) {tmpKey.cancel();tmpKey = null;}if (writeSelector != null) {try {writeSelector.selectNow();} catch (IOException e) {}SelectorFactory.returnSelector(writeSelector);}}}}	Yes
128	"public class A {@Overrideprotected String histItemFilterQueryProvider(FilterCriteria filter,int numberDecimalcount,String table,String simpleName,ZoneId timeZone) {logger.debug(""JDBC::getHistItemFilterQueryProvider filter = {}, numberDecimalcount = {}, table = {},""+ "" simpleName = {}"",StringUtilsExt.filterToString(filter),numberDecimalcount,table,simpleName);String filterString = """";if (filter.getBeginDate() != null) {filterString += filterString.isEmpty() ? "" WHERE"" : "" AND"";filterString +="" TIME>'""+ JDBC_DATE_FORMAT.format(filter.getBeginDate().withZoneSameInstant(timeZone))+ ""'"";}if (filter.getEndDate() != null) {filterString += filterString.isEmpty() ? "" WHERE"" : "" AND"";filterString +="" TIME<'""+ JDBC_DATE_FORMAT.format(filter.getEndDate().withZoneSameInstant(timeZone))+ ""'"";}filterString +=(filter.getOrdering() == Ordering.ASCENDING) ? "" ORDER BY time ASC"" : "" ORDER BY time DESC"";if (filter.getPageSize() != 0x7fffffff) {filterString +="" OFFSET ""+ filter.getPageSize()+ "" ROWS FETCH FIRST ""+ (filter.getPageNumber() * filter.getPageSize() + 1)+ "" ROWS ONLY"";}String queryString = ""SELECT time,"";if (""NUMBERITEM"".equalsIgnoreCase(simpleName) && numberDecimalcount > -1) {queryString += ""CAST(value 0."";for (int i = 0; i < numberDecimalcount; i++) {queryString += ""0"";}queryString += ""5 AS DECIMAL(31,"" + numberDecimalcount + ""))"";} else {queryString += "" value FROM "" + table.toUpperCase();}if (!filterString.isEmpty()) {queryString += filterString;}logger.debug(""JDBC::query queryString = {}"", queryString);return queryString;}}"	No
129	"public class A {@Overridepublic void migrate(Connection connection) throws Exception {int total = countScreenshotsWithoutHash(connection);LOGGER.info(""did find {} screenshots requiring a hash"", total);forEachScreenshotWithoutHash(total,connection,swh -> {try {updateScreenshotHash(connection,swh.getPkgScreenshotId(),HASH_FUNCTION.hashBytes(swh.getImageData()).toString());} catch (SQLException se) {throw new IllegalStateException(""unable to update a screenshot"", se);}});LOGGER.info(""did complete updating screenshots' hashes."");}}"	No
130	"public class A {@Overridepublic Object invoke(List<ServiceReference> services, Method method, Object... args)throws Throwable {for (ServiceReference ref : services) {Object service = bundleContext.getService(ref);try {method.invoke(service, args);} catch (InvocationTargetException e) {LOGGER.warn(""connector in composition threw an Exception in method call %s"", method.toString());LOGGER.debug(""ExceptionDetails: "", e);}}return null;}}"	No
131	"public class A {public String getSupportedInvocationType(final QName artifactType, final TArtifactTemplate artifactTemplate) {if (pluginRegistry.getInvocationPluginServices().containsKey(artifactType.toString())) {return artifactType.toString();} else {final Document properties = ToscaEngine.getEntityTemplateProperties(artifactTemplate);final String invocationType = getInvocationType(properties);if (invocationType != null) {if (pluginRegistry.getInvocationPluginServices().containsKey(invocationType)) {LOG.debug(""Found a supported invocation type in the artifact template properties"");return invocationType;}}}LOG.debug(""Artifact type was not found in the list of currently supported types: {}"",pluginRegistry.getInvocationPluginServices().toString());return null;}}"	Yes
132	public class A {@Overridepublic boolean process(Exchange exchange, final AsyncCallback callback) {final Object oldStepId = exchange.removeProperty(ExchangePropertyKey.STEP_ID);exchange.setProperty(ExchangePropertyKey.STEP_ID, stepId);EventHelper.notifyStepStarted(exchange.getContext(), exchange, stepId);return super.process(exchange,sync -> {boolean failed = exchange.isFailed();try {if (failed) {EventHelper.notifyStepFailed(exchange.getContext(), exchange, stepId);} else {EventHelper.notifyStepDone(exchange.getContext(), exchange, stepId);}} catch (Throwable t) {} finally {if (oldStepId != null) {exchange.setProperty(ExchangePropertyKey.STEP_ID, oldStepId);} else {exchange.removeProperty(ExchangePropertyKey.STEP_ID);}callback.done(sync);}});}}	Yes
133	"public class A {public static void deleteLiferayUser(PortletRequest request, org.eclipse.sw360.datahandler.thrift.users.User user) {try {User liferayUser = findLiferayUser(request, user);UserLocalServiceUtil.deleteUser(liferayUser);} catch (PortalException | SystemException e) {log.error(""Could not delete Liferay user"", e);}}}"	No
134	"public class A {@Overridepublic void afterMessageProcessed(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String, Object> context)throws ListenerException {FS fileSystem = getFileSystem();if ((rawMessageOrWrapper instanceof MessageWrapper)) {MessageWrapper<?> wrapper = (MessageWrapper<?>) rawMessageOrWrapper;if (StringUtils.isNotEmpty(getLogFolder())|| StringUtils.isNotEmpty(getErrorFolder())|| StringUtils.isNotEmpty(getProcessedFolder())) {log.warn(""cannot write [""+ wrapper.getId()+ ""] to logFolder, errorFolder or processedFolder after manual retry from""+ "" errorStorage"");}} else {@SuppressWarnings(""unchecked"")F rawMessage = (F) rawMessageOrWrapper;try {if (StringUtils.isNotEmpty(getLogFolder())) {FileSystemUtils.copyFile(fileSystem,rawMessage,getLogFolder(),isOverwrite(),getNumberOfBackups(),isCreateFolders());}if (isDelete() && (processResult.isSuccessful() || StringUtils.isEmpty(getErrorFolder()))) {fileSystem.deleteFile(rawMessage);return;}} catch (FileSystemException e) {throw new ListenerException(""Could not move or delete file ["" + fileSystem.getName(rawMessage) + ""]"", e);}}}}"	No
135	public class A {public StgRechteRolleItv merge(StgRechteRolleItv detachedInstance) {try {StgRechteRolleItv result =(StgRechteRolleItv) sessionFactory.getCurrentSession().merge(detachedInstance);return result;} catch (RuntimeException re) {throw re;}}}	Yes
136	"public class A {private void showNotSpecifiedError(@NonNls final String resourceId, List<String> modules, String editorNameToSelect) {String nameToSelect = null;final StringBuilder names = StringBuilderSpinAllocator.alloc();final String message;try {final int maxModulesToShow = 10;for (String name :modules.size() > maxModulesToShow ? modules.subList(0, maxModulesToShow) : modules) {if (nameToSelect == null) {nameToSelect = name;}if (names.length() > 0) {names.append("",\n"");}names.append(""\"""");names.append(name);names.append(""\"""");}if (modules.size() > maxModulesToShow) {names.append("",\n..."");}message = CompilerBundle.message(resourceId, modules.size(), names.toString());} finally {StringBuilderSpinAllocator.dispose(names);}if (ApplicationManager.getApplication().isUnitTestMode()) {LOG.error(message);}Messages.showMessageDialog(myProject, message, CommonBundle.getErrorTitle(), Messages.getErrorIcon());showConfigurationDialog(nameToSelect, editorNameToSelect);}}"	No
137	"public class A {private X509CRL getCrl(String url)throws CertificateException, CRLException, NoSuchProviderException, NoSuchParserException,StreamParsingException, MalformedURLException, IOException, ExecutionException {if (!(url.startsWith(""http://"") || url.startsWith(""https://""))) {return null;}String cacheKey = url.toLowerCase();X509CRL crl = crlCache.get(cacheKey);return crl;}}"	Yes
138	public class A {public void run() {try {Thread.sleep(1000);cubeService.updateOnNewSegmentReady(cubeName);} catch (Throwable ex) {}}}	Yes
139	"public class A {@Overridepublic void setUpCluster() throws Exception {util = getTestingUtil(getConf());LOG.debug(""Initializing/checking cluster has "" + SERVER_COUNT + "" servers"");util.initializeCluster(getMinServerCount());LOG.debug(""Done initializing/checking cluster"");cluster = util.getHBaseClusterInterface();deleteTableIfNecessary();loadTool = new LoadTestTool();loadTool.setConf(util.getConfiguration());initTable();}}"	No
140	"public class A {private synchronized void addComputation(String computationId,MapTask originalMapTask,Map<String, String> transformUserNameToStateFamily) {MapTask mapTask = fixMultiOutputInfos.apply(originalMapTask);if (!computationMap.containsKey(computationId)) {LOG.info(""Adding config for {}: {}"", computationId, mapTask);computationMap.put(computationId,new ComputationState(computationId,mapTask,workUnitExecutor,transformUserNameToStateFamily,stateCache.forComputation(computationId)));}}}"	No
141	"public class A {@Subscribe@SuppressWarnings(""unused"")public void listen(DeadEvent event) {LOG.trace(""No subscribers were interested in this event: "" + event.getEvent());}}"	No
142	public class A {@Overridepublic void deleteSchemaVersion(Long schemaVersionId)throws SchemaNotFoundException, SchemaLifecycleException {}}	Yes
143	public class A {@Overridepublic void contribute(Document document, KaleoInstanceToken kaleoInstanceToken) {document.addKeyword(KaleoInstanceTokenField.CLASS_NAME, kaleoInstanceToken.getClassName());document.addKeyword(Field.CLASS_PK, kaleoInstanceToken.getClassPK());document.addKeywordSortable(KaleoInstanceTokenField.COMPLETED, kaleoInstanceToken.isCompleted());document.addDateSortable(KaleoInstanceTokenField.COMPLETION_DATE, kaleoInstanceToken.getCompletionDate());document.addDateSortable(Field.CREATE_DATE, kaleoInstanceToken.getCreateDate());document.addKeywordSortable(KaleoInstanceTokenField.CURRENT_KALEO_NODE_NAME,kaleoInstanceToken.getCurrentKaleoNodeName());document.addNumberSortable(KaleoInstanceTokenField.KALEO_INSTANCE_ID, kaleoInstanceToken.getKaleoInstanceId());document.addKeyword(KaleoInstanceTokenField.KALEO_INSTANCE_TOKEN_ID,kaleoInstanceToken.getKaleoInstanceTokenId());document.addDateSortable(Field.MODIFIED_DATE, kaleoInstanceToken.getModifiedDate());document.addKeyword(KaleoInstanceTokenField.PARENT_KALEO_INSTANCE_TOKEN_ID,kaleoInstanceToken.getParentKaleoInstanceTokenId());try {KaleoInstance kaleoInstance =kaleoInstanceLocalService.getKaleoInstance(kaleoInstanceToken.getKaleoInstanceId());document.addKeyword(KaleoInstanceTokenField.KALEO_DEFINITION_NAME, kaleoInstance.getKaleoDefinitionName());} catch (PortalException portalException) {if (_log.isWarnEnabled()) {_log.warn(portalException, portalException);}}AssetEntry assetEntry = getAssetEntry(kaleoInstanceToken);if (assetEntry != null) {document.addLocalizedText(KaleoInstanceTokenField.ASSET_DESCRIPTION,LocalizationUtil.populateLocalizationMap(assetEntry.getDescriptionMap(),assetEntry.getDefaultLanguageId(),assetEntry.getGroupId()));document.addLocalizedText(KaleoInstanceTokenField.ASSET_TITLE,LocalizationUtil.populateLocalizationMap(assetEntry.getTitleMap(),assetEntry.getDefaultLanguageId(),assetEntry.getGroupId()));} else {WorkflowHandler<?> workflowHandler =WorkflowHandlerRegistryUtil.getWorkflowHandler(kaleoInstanceToken.getClassName());for (Locale availableLocale :LanguageUtil.getAvailableLocales(kaleoInstanceToken.getGroupId())) {document.addText(LocalizationUtil.getLocalizedName(KaleoInstanceTokenField.ASSET_TITLE, availableLocale.getLanguage()),workflowHandler.getTitle(kaleoInstanceToken.getClassPK(), availableLocale));}}}}	No
144	"public class A {private void setSideBySideRectangles(final Rectangle2D bounds,final List<Color> barElementColors,final double valRange,final AggregationMethod aggrMethod,final int baseLine,final HistogramHiliteCalculator calculator) {LOGGER.debug(""Entering setSideBySideRectangles""+ ""(bounds, barElementColors, valRange, aggrMethod, baseLine) ""+ ""of class BarDataModel."");final int barHeight = (int) bounds.getHeight();final double heightPerVal = barHeight / valRange;final int barX = (int) bounds.getX();final int barY = (int) bounds.getY();final int barWidth = (int) bounds.getWidth();final int noOfBars = barElementColors.size();final int elementWidth = calculateSideBySideElementWidth(barElementColors, barWidth);if (LOGGER.isDebugEnabled()) {LOGGER.debug(""Bar values (x,height,width, totalNoOf): ""+ barX+ "", ""+ barHeight+ "", ""+ barWidth+ noOfBars);LOGGER.debug(""Value range: "" + valRange + "" height per value:"" + heightPerVal);}int xCoord = barX;for (final Color elementColor : barElementColors) {final BarElementDataModel element = getElement(elementColor);if (element != null) {final double aggrVal = element.getAggregationValue(aggrMethod);final Rectangle elementRect =BarDataModel.calculateBarRectangle(baseLine, barHeight, barY, heightPerVal, aggrVal, xCoord, elementWidth);element.setRectangle(elementRect, calculator);}xCoord += elementWidth + AbstractHistogramVizModel.SPACE_BETWEEN_ELEMENTS;}LOGGER.debug(""Exiting setSideBySideRectangles""+ ""(bounds, barElementColors, valRange, aggrMethod, baseLine) ""+ ""of class BarDataModel."");}}"	No
145	"public class A {CacheSerializableRunnable getCacheSerializableRunnableForIndexUsageCheck() {SerializableRunnable PrIndexCheck =new CacheSerializableRunnable(""PrIndexCheck"") {@Overridepublic void run2() {Cache cache = getCache();QueryService qs = cache.getQueryService();LogWriter logger = cache.getLogger();Collection indexes = qs.getIndexes();Iterator it = indexes.iterator();while (it.hasNext()) {PartitionedIndex ind = (PartitionedIndex) it.next();int indexUsageWithSizeEstimation = 3;assertEquals(6, ind.getStatistics().getTotalUses());}}};return (CacheSerializableRunnable) PrIndexCheck;}}"	Yes
146	public class A {@Overridepublic CommerceChannelHealthStatus getCommerceChannelHealthStatus(String key) {if (Validator.isNull(key)) {return null;}ServiceWrapper<CommerceChannelHealthStatus> commerceChannelHealthStatusServiceWrapper =_commerceChannelHealthStatusRegistryMap.getService(key);if (commerceChannelHealthStatusServiceWrapper == null) {if (_log.isDebugEnabled()) {}return null;}return commerceChannelHealthStatusServiceWrapper.getService();}}	Yes
147	public class A {@Overridepublic void info(String message, Object... params) {if (params != null && params.length > 0) {message = String.format(message, params);}logger.info(message);}}	No
148	"public class A {public static void deleteProperty(String key) throws IOException, KuraException {Properties properties = KuranetConfig.getProperties();if (properties.containsKey(key)) {logger.debug(""Deleting property {}"", key);properties.remove(key);KuranetConfig.storeProperties(properties);} else {}}}"	Yes
149	public class A {public static void error(Object msg, Throwable ex) {Logger logger = LogUtil.getLogger();if (logger != null && logger.isErrorEnabled()) {}}}	Yes
150	"public class A {@Testpublic void b_getExperimentsInProject() {GetExperimentsInProject getExperiment =GetExperimentsInProject.newBuilder().setProjectId(project.getId()).build();GetExperimentsInProject.Response experimentResponse =experimentServiceStub.getExperimentsInProject(getExperiment);LOGGER.info(""GetExperimentsInProject.Response "" + experimentResponse.getExperimentsCount());assertEquals(""Experiments count not match with expected experiment count"",1,experimentResponse.getExperimentsList().size());assertEquals(""Experiment list not contain expected experiment"",experiment,experimentResponse.getExperimentsList().get(0));}}"	Yes
151	public class A {private void check3VehicleJourney1(Context context, VehicleJourney vj, ValidationParameters parameters) {if (isEmpty(vj.getVehicleJourneyAtStops())) {return;}long maxDiffTime = parameters.getInterStopDurationMax();List<VehicleJourneyAtStop> vjasList = vj.getVehicleJourneyAtStops();for (VehicleJourneyAtStop vjas : vjasList) {long diffTime =Math.abs(diffTime(vjas.getArrivalTime(),vjas.getArrivalDayOffset(),vjas.getDepartureTime(),vjas.getDepartureDayOffset()));if (diffTime > maxDiffTime) {DataLocation location = buildLocation(context, vj);DataLocation target = buildLocation(context, vjas.getStopPoint().getContainedInStopArea());ValidationReporter reporter = ValidationReporter.Factory.getInstance();reporter.addCheckPointReportError(context,VEHICLE_JOURNEY_1,location,Long.toString(diffTime),Long.toString(maxDiffTime),target);}}}}	Yes
152	"public class A {@Testpublic void testFirst() throws Exception {Flowable.just(""Camel"", ""rocks"", ""streams"", ""as"", ""well"").map(String::toUpperCase).doOnNext(LOG::info).subscribe();}}"	Yes
153	"public class A {private void addCommandReceptionTimer(final CoapContext context,final AtomicBoolean requestProcessed,final Handler<AsyncResult<Void>> responseReady,final long delaySecs,final Span waitForCommandSpan) {final Long timerId =vertx.setTimer(delaySecs * 1000L,id -> {if (requestProcessed.compareAndSet(false, true)) {setTtdStatus(context, TtdStatus.EXPIRED);waitForCommandSpan.log(String.format(""time to wait for command expired (%ds)"", delaySecs));responseReady.handle(Future.succeededFuture());} else {}});context.put(KEY_TIMER_ID, timerId);}}"	Yes
154	"public class A {public void sessionDestroyed(HttpSessionEvent se) {HttpSession session = se.getSession();Context context = (Context) session.getAttribute(Context.KEY);String sid = (String) session.getAttribute(""sid"");if (logger.isDebugEnabled()) {logger.debug(""sessionDestroyed:sid="" + sid + "",session id="" + session.getId());String key;for (@SuppressWarnings(""unchecked"") Enumeration<String> e = session.getAttributeNames();e.hasMoreElements(); ) {key = e.nextElement();}}WebUtils.getWac().publishEvent(new SessionDestroyedEvent(session, context, sid));}}"	Yes
155	"public class A {public static void checkIdentifierAgainstValidator(String identifier, IdentifierValidator validator) throws PatientIdentifierException {if (StringUtils.isBlank(identifier)) {throw new BlankIdentifierException(""PatientIdentifier.error.nullOrBlank"");}if (validator == null) {return;}try {if (!validator.isValid(identifier)) {throw new InvalidCheckDigitException(getMessage(""PatientIdentifier.error.checkDigitWithParameter"", identifier));}} catch (UnallowedIdentifierException e) {throw new InvalidCheckDigitException(getMessage(""PatientIdentifier.error.unallowedIdentifier"", identifier, validator.getName()));}}}"	Yes
156	"public class A {@Overrideprotected void doStop() throws Exception {super.doStop();if (stopClient && client != null && client.isConnected()) {String topic = getEndpoint().getTopic();if (getEndpoint().getConfiguration().isCleanStart()) {LOG.debug(""Unsubscribing client: {} from topic: {}"", clientId, topic);client.unsubscribe(topic);} else {LOG.debug(""Client: {} is durable so will not unsubscribe from topic: {}"", clientId, topic);}LOG.debug(""Disconnecting client: {} from broker: {}"",clientId,getEndpoint().getConfiguration().getBrokerUrl());client.disconnect();}client = null;}}"	No
157	public class A {public void addReport(Report report, boolean reportIsAnReportItem) {if (reportIsAnReportItem) {reportsFromBeingProcessed.get(report.getSourceObjectId()).get(report.getOutcomeObjectId()).addReport(report, false);} else {String sourceObjectId = report.getSourceObjectId();String outcomeObjectId = report.getOutcomeObjectId();if (StringUtils.isBlank(sourceObjectId) || StringUtils.isBlank(outcomeObjectId)) {return;}if (Report.NO_SOURCE_OBJECT_ID.equals(sourceObjectId)) {return;}if (aipIdToTransferredResourceIds.containsKey(outcomeObjectId)) {if (!aipIdToTransferredResourceIds.get(outcomeObjectId).contains(sourceObjectId)) {aipIdToTransferredResourceIds.get(outcomeObjectId).add(sourceObjectId);}} else {aipIdToTransferredResourceIds.computeIfAbsent(outcomeObjectId, key -> new ArrayList<>()).add(sourceObjectId);}if (transferredResourceToAipIds.containsKey(sourceObjectId)) {if (!transferredResourceToAipIds.get(sourceObjectId).contains(outcomeObjectId)) {transferredResourceToAipIds.get(sourceObjectId).add(outcomeObjectId);}} else {transferredResourceToAipIds.computeIfAbsent(sourceObjectId, key -> new ArrayList<>()).add(outcomeObjectId);}if (reportsFromBeingProcessed.get(sourceObjectId) != null) {reportsFromBeingProcessed.get(sourceObjectId).put(outcomeObjectId, report);allReports.get(sourceObjectId).put(outcomeObjectId, report);} else {Map<String, Report> innerReports = new HashMap<>();innerReports.put(outcomeObjectId, report);reportsFromBeingProcessed.put(sourceObjectId, innerReports);allReports.put(sourceObjectId, innerReports);}}}}	Yes
158	public class A {public void config(String message) {logger.info(message);}}	No
159	"public class A {private void entryMoved(PartitionTxn partitionTxn, Dn oldEntryDn, Entry modifiedEntry, String entryIdOld)throws LdapException {addEntry(modifiedEntry);String baseId = getEntryId(partitionTxn, modifiedEntry.getDn());ParentIdAndRdn parentIdAndRdn = getRdnIndex().reverseLookup(partitionTxn, baseId);IndexEntry indexEntry = new IndexEntry();indexEntry.setId(baseId);indexEntry.setKey(parentIdAndRdn);Cursor<IndexEntry<ParentIdAndRdn, String>> cursor =new SingletonIndexCursor<>(partitionTxn, indexEntry);String parentId = parentIdAndRdn.getParentId();Cursor<IndexEntry<String, String>> scopeCursor =new DescendantCursor(partitionTxn, this, baseId, parentId, cursor);try {while (scopeCursor.next()) {IndexEntry<String, String> entry = scopeCursor.get();if (entry.getId() != entryIdOld) {addEntry(fetch(partitionTxn, entry.getId()));}}scopeCursor.close();} catch (Exception e) {throw new LdapOperationException(e.getMessage(), e);}File file = getFile(oldEntryDn, DELETE);boolean deleted = deleteFile(file);LOG.warn(""move operation: deleted file {} {}"", file.getAbsoluteFile(), deleted);String dirName = file.getAbsolutePath();dirName = dirName.substring(0, dirName.indexOf(CONF_FILE_EXTN));deleted = deleteFile(new File(dirName));LOG.warn(""move operation: deleted dir {} {}"", dirName, deleted);}}"	No
160	"public class A {public <T> T getValueType(Field field, Object value) {if (value == null) {return (T) value;}if (MarketoClientUtils.isDateTypeField(field)) {Date dt = null;try {dt = new DateTime(String.valueOf(value), DateTimeZone.forID(""UTC"")).toDate();return (T) Long.valueOf(dt.getTime());} catch (Exception e) {return null;}}switch (MarketoClientUtils.getFieldType(field)) {case STRING:switch (field.name()) {case FIELD_FIELDS:case FIELD_DEDUPE_FIELDS:case FIELD_SEARCHABLE_FIELDS:case FIELD_RELATIONSHIPS:return (T) new Gson().toJson(value);default:return (T) value;}case INT:return (T) (Integer) Float.valueOf(value.toString()).intValue();case BOOLEAN:return (T) Boolean.valueOf(value.toString());case FLOAT:return (T) Float.valueOf(value.toString());case DOUBLE:return (T) Double.valueOf(value.toString());case LONG:return (T) Long.valueOf(value.toString());default:return (T) value;}}}"	Yes
161	"public class A {public AWSError parseAWSErrorFromContent(HttpRequest request, HttpResponse response) {if (response.getPayload() == null) return null;if (""text/plain"".equals(response.getPayload().getContentMetadata().getContentType()))return null;try {AWSError error =factory.create(errorHandlerProvider.get()).setContext(request).apply(response);if (error.getRequestId() == null)error.setRequestId(response.getFirstHeaderOrNull(requestId));error.setRequestToken(response.getFirstHeaderOrNull(requestToken));if (""SignatureDoesNotMatch"".equals(error.getCode())) {error.setStringSigned(signer.createStringToSign(request));error.setSignature(signer.sign(error.getStringSigned()));}return error;} catch (RuntimeException e) {logger.warn(e, ""error parsing error"");return null;}}}"	No
162	"public class A {public EntityType getEntityInfo(final Integer detailKeyId, final Integer detailtypeId)throws ValidationException {EntityType entity = null;try {final Accountdetailtype accountdetailtype = getAccountDetailById(detailtypeId);final Class<?> service = Class.forName(accountdetailtype.getFullQualifiedName());final String detailTypeName = service.getSimpleName();String dataType = """";final java.lang.reflect.Method method = service.getMethod(""getId"");dataType = method.getReturnType().getSimpleName();if (dataType.equals(""Long""))entity =(EntityType)persistenceService.find(""from "" + detailTypeName + "" where id=? order by name"",detailKeyId.longValue());elseentity =(EntityType)persistenceService.find(""from "" + detailTypeName + "" where id=? order by name"", detailKeyId);} catch (final Exception e) {final List<ValidationError> errors = new ArrayList<ValidationError>();errors.add(new ValidationError(""exp"", e.getMessage()));throw new ValidationException(errors);}return entity;}}"	Yes
163	"public class A {@Testpublic void testMethodName() {Logger logger = LoggerFactory.getLogger(""my-log4j2-logger"");String result =recording.execute(new Runnable() {@Overridepublic void run() {logger.warn(""hello"");}});assertTrue(result.contains("".run:""));}}"	No
164	public class A {@Overridepublic void schemaSourceRegistered(final Iterable<PotentialSchemaSource<?>> sources) {final Map<ModuleKey, Module> newModules = new HashMap<>();for (PotentialSchemaSource<?> potentialYangSource :Iterables.filter(sources, YANG_SCHEMA_SOURCE)) {final YangIdentifier moduleName =new YangIdentifier(potentialYangSource.getSourceIdentifier().getName());final Module newModule =new ModuleBuilder().setName(moduleName).setRevision(RevisionUtils.fromYangCommon(potentialYangSource.getSourceIdentifier().getRevision())).setSchema(getUrlForModule(potentialYangSource.getSourceIdentifier())).build();newModules.put(newModule.key(), newModule);}if (newModules.isEmpty()) {return;}WriteTransaction tx = dataBroker.newWriteOnlyTransaction();tx.merge(LogicalDatastoreType.OPERATIONAL,InstanceIdentifier.create(ModulesState.class),new ModulesStateBuilder().setModule(newModules).build());tx.commit().addCallback(new FutureCallback<CommitInfo>() {@Overridepublic void onSuccess(final CommitInfo result) {}@Overridepublic void onFailure(final Throwable throwable) {}},MoreExecutors.directExecutor());}}	Yes
165	"public class A {@Overridepublic void handleKillbillEvent(final ExtBusEvent killbillEvent) {logger.info(""Received external event {}"", killbillEvent.toString());if (killbillEvent.getEventType() == ExtBusEventType.BLOCKING_STATE) {if (countPerToken.get(killbillEvent.getUserToken()) == null) {countPerToken.put(killbillEvent.getUserToken(), new AtomicInteger());}final Integer seen = countPerToken.get(killbillEvent.getUserToken()).incrementAndGet();if (!seen.toString().equalsIgnoreCase(killbillEvent.getMetaData())) {testDao.insertExternalKey(""error-"" + seen);throw new NotificationPluginApiRetryException();} else {testDao.insertExternalKey(killbillEvent.getAccountId().toString());return;}}if (killbillEvent.getEventType() != ExtBusEventType.ACCOUNT_CREATION) {return;}testDao.insertExternalKey(killbillEvent.getAccountId().toString());}}"	No
166	"public class A {@Testpublic void syncAddTempDelete() throws Exception {File f = copyToFile(randomStream(0, 4 * 1024), folder.newFile());String id = getIdForInputStream(f);FileInputStream fin = new FileInputStream(f);closer.register(fin);DataRecord rec = dataStore.addRecord(fin, new BlobOptions().setUpload(SYNCHRONOUS));assertEquals(id, rec.getIdentifier().toString());assertFile(rec.getStream(), f, folder);Collection<File> files =FileUtils.listFiles(new File(dsPath, ""tmp""), FileFilterUtils.prefixFileFilter(""upload""), null);assertEquals(0, files.size());}}"	Yes
167	"public class A {@Testpublic void testLoadAllNotes() {Note note;try {assertEquals(0, notebook.getAllNotes().size());note = notebook.createNote(""note1"", anonymous);Paragraph p1 = note.addNewParagraph(AuthenticationInfo.ANONYMOUS);Map<String, Object> config = p1.getConfig();config.put(""enabled"", true);p1.setConfig(config);p1.setText(""hello world"");notebook.saveNote(note, anonymous);} catch (IOException fe) {logger.warn(""Failed to create note and paragraph. Possible problem with persisting note, safe to""+ "" ignore"",fe);}assertEquals(1, notebook.getAllNotes().size());}}"	No
168	"public class A {@Testpublic void findProjectsByMultipleAttributeConditionTest() {List<KeyValueQuery> predicates = new ArrayList<>();Value numValue = Value.newBuilder().setNumberValue(0.6543210).build();KeyValueQuery keyValueQuery =KeyValueQuery.newBuilder().setKey(""attributes.attribute_1"").setValue(numValue).setOperator(OperatorEnum.Operator.LTE).build();predicates.add(keyValueQuery);numValue = Value.newBuilder().setNumberValue(0.31).build();KeyValueQuery keyValueQuery2 =KeyValueQuery.newBuilder().setKey(""attributes.attribute_2"").setValue(numValue).setOperator(OperatorEnum.Operator.EQ).build();predicates.add(keyValueQuery2);FindProjects findProjects =FindProjects.newBuilder().addAllProjectIds(projectMap.keySet()).addAllPredicates(predicates).setIdsOnly(true).build();FindProjects.Response response = projectServiceStub.findProjects(findProjects);assertEquals(""Project count not match with expected project count"", 1, response.getProjectsCount());assertEquals(""Project not match with expected project"",project2.getId(),response.getProjectsList().get(0).getId());assertNotEquals(""Project not match with expected project"", project2, response.getProjectsList().get(0));assertEquals(""Total records count not matched with expected records count"",1,response.getTotalRecords());}}"	Yes
169	"public class A {@POST@Path(""/setExpire"")@Transactional(propagation = Propagation.REQUIRED,isolation = Isolation.DEFAULT,rollbackFor = Throwable.class)public Response setExpire(@Context HttpServletRequest req, JsonNode json) {Message message = null;try {String userName = SecurityFilter.getLoginUsername(req);if (StringUtils.isEmpty(userName)) {throw new UDFException(""UserName is Empty!"");}Long udfId = json.get(""udfId"").getLongValue();if (StringUtils.isEmpty(udfId)) {throw new UDFException(""udfId is Empty!"");}String udfName = json.get(""udfName"").getTextValue();if (StringUtils.isEmpty(udfName)) {throw new UDFException(""udfName is Empty!"");}Long shareUDFId = udfService.getAllShareUDFInfoIdByUDFId(userName, udfName);udfService.setSharedUDFInfoExpire(shareUDFId);udfService.setUDFSharedInfo(false, udfId);message = Message.ok();} catch (Throwable e) {logger.error(""Failed to setExpire: "", e);}return Message.messageToResponse(message);}}"	Yes
170	public class A {@Overridepublic String getSummary(long classPK, PortletRequest portletRequest, PortletResponse portletResponse) {try {AssetRenderer<?> assetRenderer = getAssetRenderer(classPK);if (assetRenderer != null) {return assetRenderer.getSummary(portletRequest, portletResponse);}} catch (Exception exception) {if (_log.isWarnEnabled()) {_log.warn(exception, exception);}}return null;}}	No
171	"public class A {@Overridepublic void updateExperimentRunName(String experimentRunId, String experimentRunName) {try (Session session = modelDBHibernateUtil.getSessionFactory().openSession()) {ExperimentRunEntity experimentRunEntity =session.load(ExperimentRunEntity.class, experimentRunId, LockMode.PESSIMISTIC_WRITE);experimentRunEntity.setName(experimentRunName);long currentTimestamp = Calendar.getInstance().getTimeInMillis();experimentRunEntity.setDate_updated(currentTimestamp);Transaction transaction = session.beginTransaction();session.update(experimentRunEntity);transaction.commit();LOGGER.debug(""ExperimentRun name updated successfully"");} catch (Exception ex) {if (ModelDBUtils.needToRetry(ex)) {updateExperimentRunName(experimentRunId, experimentRunName);} else {throw ex;}}}}"	No
172	"public class A {public String getAspectSpeed(@Nonnull String aspect, @Nonnull jmri.SignalSystem system) {String property = (String) system.getProperty(aspect, ""speed"");return property;}}"	Yes
173	public class A {public static com.liferay.portal.kernel.model.EmailAddressSoap getEmailAddress(long emailAddressId) throws RemoteException {try {com.liferay.portal.kernel.model.EmailAddress returnValue =EmailAddressServiceUtil.getEmailAddress(emailAddressId);return com.liferay.portal.kernel.model.EmailAddressSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
174	"public class A {@AfterClasspublic static void tearDown() {File file = new File(""audit.log"");if (FileUtils.deleteQuietly(file)) {LOG.info(""{} has been deleted as all tests have completed."", file.getName());} else {}}}"	Yes
175	"public class A {private boolean downloadFernflowerJar(PackageConfig packageConfig, Path fernflowerJar) {String downloadURL =String.format(""https://jitpack.io/com/github/fesh0r/fernflower/%s/fernflower-%s.jar"",packageConfig.fernflower.hash, packageConfig.fernflower.hash);try (BufferedInputStream in = new BufferedInputStream(new URL(downloadURL).openStream());FileOutputStream fileOutputStream = new FileOutputStream(fernflowerJar.toFile())) {byte[] dataBuffer = new byte[1024];int bytesRead;while ((bytesRead = in.read(dataBuffer, 0, 1024)) != -1) {fileOutputStream.write(dataBuffer, 0, bytesRead);}return true;} catch (IOException e) {log.error(""Unable to download Fernflower from "" + downloadURL, e);return false;}}}"	No
176	"public class A {@Overridepublic SpiResponse<List<SpiTrustedBeneficiaries>> requestTrustedBeneficiariesList(@NotNull SpiContextData spiContextData,SpiAccountReference accountReference,@NotNull SpiAccountConsent spiAccountConsent,@NotNull SpiAspspConsentDataProvider spiAspspConsentDataProvider) {SpiTrustedBeneficiaries trustedBeneficiaries =new SpiTrustedBeneficiaries(""mocked trusted beneficiaries id"",SpiAccountReference.builder().iban(""mocked debtor iban"").build(),SpiAccountReference.builder().iban(""mocked creditor iban"").build(),""mocked creditor agent"",""mocked creditor name"",""mocked creditor alias"",""mocked creditor id"",new SpiAddress(""mocked street name"",""mocked building number"",""mocked town name"",""mocked post code"",""mocked country""));return SpiResponse.<List<SpiTrustedBeneficiaries>>builder().payload(Collections.singletonList(trustedBeneficiaries)).build();}}"	Yes
177	"public class A {public void createOverallProcess()throws ProcessGenerationException, IOException, DAOException, CommandException {final long begin = System.nanoTime();ProcessGenerator processGenerator = new ProcessGenerator();processGenerator.generateProcess(templateId, projectId);overallProcess = processGenerator.getGeneratedProcess();overallProcess.setTitle(getTitle());ProcessService.checkTasks(overallProcess, overallWorkpiece.getRootElement().getType());processService.saveToDatabase(overallProcess);ServiceManager.getFileService().createProcessLocation(overallProcess);overallWorkpiece.setId(overallProcess.getId().toString());overallWorkpiece.getRootElement().getMetadata().addAll(overallMetadata);addToBatch(overallProcess);logger.info(""Process {} (ID {}) successfully created."",overallProcess.getTitle(),overallProcess.getId());if (logger.isTraceEnabled()) {logger.trace(""Creating {} took {} ms."",overallProcess.getTitle(),TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - begin));}}}"	Yes
178	"public class A {@Overridepublic void retrieve(String depositId, File working, Progress progress, String optFilePath)throws Exception {String fileDir = TivoliStorageManager.TEMP_PATH_PREFIX + ""/"" + depositId;String filePath = fileDir + ""/"" + working.getName();if (!Files.exists(Paths.get(fileDir))) {Files.createDirectory(Paths.get(fileDir));}for (int r = 0; r < TivoliStorageManager.maxRetries; r++) {ProcessBuilder pb =new ProcessBuilder(""dsmc"",""retrieve"",filePath,""-description="" + depositId,""-optfile="" + optFilePath,""-replace=true"");Process p = pb.start();p.waitFor();if (p.exitValue() != 0) {InputStream error = p.getErrorStream();for (int i = 0; i < error.available(); i++) {}if (r == (TivoliStorageManager.maxRetries - 1)) {throw new Exception(""Retrieval of "" + working.getName() + "" failed. "");}logger.info(""Retrieval of ""+ working.getName()+ "" failed. Retrying in ""+ TivoliStorageManager.retryTime+ "" mins"");TimeUnit.MINUTES.sleep(TivoliStorageManager.retryTime);} else {if (Files.exists(Paths.get(filePath))) {Files.move(Paths.get(filePath),Paths.get(working.getAbsolutePath()),StandardCopyOption.REPLACE_EXISTING);}Files.delete(Paths.get(fileDir));break;}}}}"	Yes
179	"public class A {private static void startServer() throws InterruptedException {LOG.info(""Starting submarine server"");try {jettyWebServer.start();} catch (Exception e) {System.exit(-1);}Runtime.getRuntime().addShutdownHook(new Thread(() -> {try {jettyWebServer.stop();Thread.sleep(3000);} catch (Exception e) {}}));jettyWebServer.join();}}"	Yes
180	public class A {private void createFeatureTypes(Collection<Pair<ArcGISLayer, DataGroupInfo>> layersAndParents) {List<FeatureCreator> tasks =layersAndParents.stream().filter(lp -> !lp.getFirstObject().isSingleFusedMapCache()).map(lp -> new FeatureCreator(lp.getFirstObject(), lp.getSecondObject())).collect(Collectors.toList());try {myExecutor.invokeAll(tasks);} catch (InterruptedException e) {LOGGER.error(e, e);}}}	No
181	"public class A {public static void trace(ResourceRequest req, String src) {if (isTrace) {List<String> attrNames = Collections.list(req.getAttributeNames());StringBuilder txt = new StringBuilder(128);txt.append(src);txt.append(""\nAttribute names: "").append(attrNames);txt.append(""\nasync_request_uri:      "").append((String) req.getAttribute(""javax.servlet.async.request_uri""));txt.append(""\nasync_context_path:      "").append((String) req.getAttribute(""javax.servlet.async.context_path""));txt.append(""\nasync_servlet_path:      "").append((String) req.getAttribute(""javax.servlet.async.servlet_path""));txt.append(""\nasync_path_info:      "").append((String) req.getAttribute(""javax.servlet.async.path_info""));txt.append(""\nasync_query_string:      "").append((String) req.getAttribute(""javax.servlet.async.query_string""));txt.append(""\nforward_request_uri:      "").append((String) req.getAttribute(""javax.servlet.forward.request_uri""));txt.append(""\nforward_context_path:      "").append((String) req.getAttribute(""javax.servlet.forward.context_path""));txt.append(""\nforward_servlet_path:      "").append((String) req.getAttribute(""javax.servlet.forward.servlet_path""));txt.append(""\nforward_path_info:      "").append((String) req.getAttribute(""javax.servlet.forward.path_info""));txt.append(""\nforward_query_string:      "").append((String) req.getAttribute(""javax.servlet.forward.query_string""));txt.append(""\ninclude_request_uri:      "").append((String) req.getAttribute(""javax.servlet.include.request_uri""));txt.append(""\ninclude_context_path:      "").append((String) req.getAttribute(""javax.servlet.include.context_path""));txt.append(""\ninclude_servlet_path:      "").append((String) req.getAttribute(""javax.servlet.include.servlet_path""));txt.append(""\ninclude_path_info:      "").append((String) req.getAttribute(""javax.servlet.include.path_info""));txt.append(""\ninclude_query_string:      "").append((String) req.getAttribute(""javax.servlet.include.query_string""));txt.append(""\nmethod_context_path:      "").append(req.getContextPath());logger.debug(txt.toString());}}}"	No
182	"public class A {@Overridepublic boolean takeLead(UUID leaderId, int ttl) {ResultSet lwtResult =session.execute(takeLeadPrepStmt.bind(leaderId, reaperInstanceId, AppContext.REAPER_INSTANCE_ADDRESS, ttl));if (lwtResult.wasApplied()) {LOG.debug(""Took lead on segment {}"", leaderId);return true;}return false;}}"	Yes
183	"public class A {@Overrideprotected boolean begin() {_log.info(""+------------------------------------------+"");_log.info(""|                                          |"");_log.info(""|               Take Assert                |"");_log.info(""|                                          |"");_log.info(""+------------------------------------------+"");DfDBFluteTaskStatus.getInstance().setTaskType(TaskType.TakeAssert);return true;}}"	No
184	"public class A {@Overridepublic void run() {try {LOG.info(""Starting ChaosMonkey"");monkey.start();monkey.waitForStop();} catch (Exception e) {LOG.warn(StringUtils.stringifyException(e));}}}"	No
185	"public class A {@Overridepublic void printError(CallContext context, Exception ex, HttpServletRequest request, HttpServletResponse response) {ErrorInfo errorInfo = extractError(ex);if (response.isCommitted()) {LOG.warn(""Failed to send error message to client. "" + ""Response is already committed."", ex);return;}String token =(context instanceof BrowserCallContextImpl? ((BrowserCallContextImpl) context).getToken(): null);if (token == null) {response.resetBuffer();CALL.setStatus(request, response, errorInfo.statusCode);String message = ex.getMessage();if (!(ex instanceof CmisBaseException)) {message = ""An error occurred!"";}JSONObject jsonResponse = new JSONObject();jsonResponse.put(ERROR_EXCEPTION, errorInfo.exceptionName);jsonResponse.put(ERROR_MESSAGE, errorInfo.message);String st = ExceptionHelper.getStacktraceAsString(ex);if (st != null) {jsonResponse.put(ERROR_STACKTRACE, st);}try {CALL.writeJSON(jsonResponse, request, response);} catch (IOException e) {LOG.error(e.getMessage(), e);try {response.sendError(errorInfo.statusCode, message);} catch (IOException en) {}}} else {CALL.setStatus(request, response, SC_OK);response.setContentType(AbstractBrowserServiceCall.HTML_MIME_TYPE);response.setContentLength(0);if (context != null) {CALL.setCookie(request,response,context.getRepositoryId(),token,CALL.createCookieValue(errorInfo.statusCode, null, errorInfo.exceptionName, ex.getMessage()));}}}}"	No
186	public class A {public String print(String xmlDeclaration, String indent) {Transformer serializer;try {serializer = tf.newTransformer();serializer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, xmlDeclaration);serializer.setOutputProperty(OutputKeys.INDENT, indent);serializer.setOutputProperty(OutputPropertiesFactory.S_KEY_CONTENT_HANDLER,org.apache.xml.serializer.ToXMLStream.class.getName());StringWriter writer = new StringWriter();serializer.transform(new DOMSource(document), new StreamResult(writer));return writer.toString();} catch (TransformerFactoryConfigurationError | TransformerException e) {}return null;}}	Yes
187	public class A {public static boolean isReachable(String url) {try {return isReachable(new URL(url));} catch (MalformedURLException e) {return false;}}}	Yes
188	public class A {protected void performSystemPing() {try {InetAddress destinationAddress = destination.getValue();if (destinationAddress == null) {return;}networkUtils.nativePing(pingMethod, destinationAddress.getHostAddress(), timeoutInMS).ifPresent(o -> {if (o.isSuccess()) {PresenceDetectionValue v =updateReachableValue(PresenceDetectionType.ICMP_PING,getLatency(o, preferResponseTimeAsLatency));updateListener.partialDetectionResult(v);}});} catch (IOException e) {} catch (InterruptedException e) {}}}	Yes
189	"public class A {public void createClientWith2Pools(VM client,final int[] serverPorts1,final int[] serverPorts2,final String serverHost,final String redundancyLevel) {client.invoke(() -> {getCache().getQueryService();AttributesFactory regionFactory0 = new AttributesFactory();AttributesFactory regionFactory1 = new AttributesFactory();regionFactory0.setScope(Scope.LOCAL);regionFactory1.setScope(Scope.LOCAL);if (redundancyLevel != null) {ClientServerTestCase.configureConnectionPoolWithNameAndFactory(regionFactory0,serverHost,serverPorts1,true,Integer.parseInt(redundancyLevel),-1,(String) null,""testPoolA"",PoolManager.createFactory(),-1,-1,-2,-1);ClientServerTestCase.configureConnectionPoolWithNameAndFactory(regionFactory1,serverHost,serverPorts2,true,Integer.parseInt(redundancyLevel),-1,(String) null,""testPoolB"",PoolManager.createFactory(),-1,-1,-2,-1);} else {ClientServerTestCase.configureConnectionPoolWithNameAndFactory(regionFactory0,serverHost,serverPorts1,true,-1,-1,(String) null,""testPoolA"",PoolManager.createFactory(),-1,-1,-2,-1);ClientServerTestCase.configureConnectionPoolWithNameAndFactory(regionFactory1,serverHost,serverPorts2,true,-1,-1,(String) null,""testPoolB"",PoolManager.createFactory(),-1,-1,-2,-1);}createRegion(regions[0], regionFactory0.create());createRegion(regions[1], regionFactory1.create());});}}"	Yes
190	public class A {private void setLocationFromBoundingBox(MetacardImpl metacard, String north, String south, String east, String west) {try {Envelope envelope =new Envelope(Double.parseDouble(east.trim()),Double.parseDouble(west.trim()),Double.parseDouble(south.trim()),Double.parseDouble(north.trim()));String wkt = WKT_WRITER_THREAD_LOCAL.get().write(factory.toGeometry(envelope));if (wkt != null) {metacard.setAttribute(Core.LOCATION, wkt);}} catch (NumberFormatException nfe) {}}}	Yes
191	"public class A {@Overrideprotected void persistBlobs(String key, long sizeOfBlobs, List<Map<String, String>> blobInfos) {synchronized (this) {StorageEntry entry = getStorageEntry(key);if (entry == null) {if (sizeOfBlobs > 0) {incrementStorageSize(sizeOfBlobs);}entry = new StorageEntry();} else {incrementStorageSize(sizeOfBlobs - entry.getSize());}entry.setSize(sizeOfBlobs);entry.setBlobInfos(blobInfos);if (log.isDebugEnabled()) {log.debug(String.format(""Setting blobs %s in StorageEntry stored at key %s"", blobInfos, key));}putStorageEntry(key, entry);}}}"	No
192	public class A {private Option<DublinCoreCatalog> isNew(DublinCoreCatalog dc)throws SeriesServiceDatabaseException {final String id = dc.getFirst(DublinCore.PROPERTY_IDENTIFIER);if (id != null) {try {return equals(persistence.getSeries(id), dc) ? Option.<DublinCoreCatalog>none() : some(dc);} catch (NotFoundException e) {return some(dc);}} else {dc.set(DublinCore.PROPERTY_IDENTIFIER, UUID.randomUUID().toString());return some(dc);}}}	Yes
193	public class A {@Overridepublic IQ handle(IQ iq) {LOGGER.debug(String.format(Messages.Log.RECEIVING_REMOTE_REQUEST_S, iq.getID()));String orderJsonStr = unmarshalOrder(iq);String className = unmarshalClassName(iq);IQ response = IQ.createResultIQ(iq);Gson gson = new Gson();Order order = null;try {order = (Order) gson.fromJson(orderJsonStr, Class.forName(className));String senderId =IntercomponentUtil.getSender(iq.getFrom().toBareJID(), SystemConstants.XMPP_SERVER_NAME_PREFIX);RemoteFacade.getInstance().activateOrder(senderId, order);} catch (Throwable e) {XmppExceptionToErrorConditionTranslator.updateErrorCondition(response, e);}return response;}}	No
194	"public class A {@Overridepublic Map<CacheKey, Long> loadAll(Iterable<? extends CacheKey> keys) throws Exception {int size = Iterables.size(keys);if (size == 0) {return ImmutableMap.of();}LOG.debug(""Loading %s exact ranges from Accumulo"", size);CacheKey anyKey = stream(keys).findAny().get();if (stream(keys).anyMatch(k ->!k.getSchema().equals(anyKey.getSchema())|| !k.getTable().equals(anyKey.getTable())|| !k.getFamily().equals(anyKey.getFamily())|| !k.getQualifier().equals(anyKey.getQualifier()))) {throw new PrestoException(FUNCTION_IMPLEMENTATION_ERROR,""loadAll called with a non-homogeneous collection of cache keys"");}Map<Range, CacheKey> rangeToKey =stream(keys).collect(Collectors.toMap(CacheKey::getRange, Function.identity()));LOG.debug(""rangeToKey size is %s"", rangeToKey.size());String metricsTable = getMetricsTableName(anyKey.getSchema(), anyKey.getTable());Text columnFamily =new Text(getIndexColumnFamily(anyKey.getFamily().getBytes(UTF_8), anyKey.getQualifier().getBytes(UTF_8)).array());BatchScanner scanner = connector.createBatchScanner(metricsTable, anyKey.getAuths(), 10);try {scanner.setRanges(stream(keys).map(CacheKey::getRange).collect(Collectors.toList()));scanner.fetchColumn(columnFamily, CARDINALITY_CQ_AS_TEXT);Map<CacheKey, Long> rangeValues = new HashMap<>();stream(keys).forEach(key -> rangeValues.put(key, 0L));for (Entry<Key, Value> entry : scanner) {rangeValues.put(rangeToKey.get(Range.exact(entry.getKey().getRow())),parseLong(entry.getValue().toString()));}return rangeValues;} finally {if (scanner != null) {scanner.close();}}}}"	No
195	"public class A {@Overridepublic void execute() {if (!resultInjectedFromCache) {try {LoadPolymorphicCnAElementById command =new LoadPolymorphicCnAElementById(new Integer[] {rootElmt});command = getCommandService().executeCommand(command);CnATreeElement root = command.getElements().get(0);List<Process> processList = new ArrayList<Process>(0);if (root instanceof Organization || root instanceof Audit) {processList.addAll(getProcesses(root));} else if (root instanceof Process) {processList.add((Process) root);}for (Process p : processList) {List<CnATreeElement> assets = loadLinkedProcesses(p);for (CnATreeElement asset : assets) {List<CnATreeElement> scenarios = loadLinkedIncidentSzenarios(asset);for (CnATreeElement scenario : scenarios) {if (affectsCIA(scenario)) {scenario =(IncidentScenario)getDaoFactory().getDAO(IncidentScenario.TYPE_ID).initializeAndUnproxy(scenario);CnATreeElement parent = loadScenarioParent(scenario);if (!isScenarioGroupRoot(parent, scenario)) {int riskColor = getRiskColour(asset, scenario);setRiskColourForParentScenarioGroup(parent.getUuid(), riskColor);}}}}}generateResult();} catch (CommandException e) {log.error(""Error while executing command"", e);}}}}"	No
196	"public class A {@Overridepublic void execute(State state) throws WorkflowExecutionException {TlsContext tlsContext = state.getTlsContext(connectionAlias);if (isExecuted()) {throw new WorkflowExecutionException(""Action already executed!"");}messages = new LinkedList<>();messages.add(new WorkflowConfigurationFactory(state.getConfig()).createClientKeyExchangeMessage(AlgorithmResolver.getKeyExchangeAlgorithm(tlsContext.getChooser().getSelectedCipherSuite())));String sending = getReadableString(messages);if (hasDefaultAlias()) {} else {}try {MessageActionResult result = sendMessageHelper.sendMessages(messages, records, tlsContext);messages = new ArrayList<>(result.getMessageList());records = new ArrayList<>(result.getRecordList());setExecuted(true);} catch (IOException E) {tlsContext.setReceivedTransportHandlerException(true);setExecuted(false);}}}"	Yes
197	"public class A {protected void rollback() {try {connection.rollback();} catch (Exception e) {log.warn(""An error occurred while trying to rollback a connection"", e);}}}"	No
198	"public class A {@Overridepublic void run() {try {switch (request.getCommandCode()) {case RxAARequest.code:handleEvent(new Event(true, factory.createAARequest(request), null));break;case RxSessionTermRequest.code:handleEvent(new Event(true, factory.createSessionTermRequest(request), null));break;default:listener.doOtherEvent(session, new AppRequestEventImpl(request), null);break;}} catch (Exception e) {logger.debug(""Failed to process request message"", e);}}}"	No
199	public class A {private void addToNode(Node node, List<WMSLayerState> layerStates) {for (WMSLayerState layerState : layerStates) {try {XMLUtilities.marshalJAXBObjectToElement(layerState, node);} catch (JAXBException e) {LOGGER.error(e.getMessage(), e);}}}}	No
200	"public class A {@Overridepublic void abort(String why, Throwable e) {LOG.warn(""Aborting ReplicationHFileCleaner because "" + why, e);this.aborted = true;stop(why);}}"	No
201	public class A {public static void initCredentialsForCluster(Job job, Configuration conf) throws IOException {UserProvider userProvider = UserProvider.instantiate(job.getConfiguration());if (userProvider.isHBaseSecurityEnabled()) {try {Connection peerConn = ConnectionFactory.createConnection(conf);try {TokenUtil.addTokenForJob(peerConn, userProvider.getCurrent(), job);} finally {peerConn.close();}} catch (InterruptedException e) {Thread.interrupted();}}}}	Yes
202	"public class A {@Overridepublic List<Map<String, String>> getInfectedItems(String infectedJcrNodePath) {String infectedJcrNodeIdentifier = getJcrNodeIdentifier(infectedJcrNodePath);String jcrNodeWorkspace = getJcrNodeWorkspace(infectedJcrNodePath);List<Map<String, String>> infectedNodes = new ArrayList<Map<String, String>>();long startTime = System.currentTimeMillis();try {ExtendedSession session =(ExtendedSession)WCMCoreUtils.getSystemSessionProvider().getSession(jcrNodeWorkspace, repositoryService.getCurrentRepository());Property infectedJcrNodeProperty = session.getPropertyByIdentifier(infectedJcrNodeIdentifier);if (infectedJcrNodeProperty.getName().equals(NodetypeConstant.JCR_DATA)) {Node infectedJcrContentNode = infectedJcrNodeProperty.getParent();Node infectedJcrNode = infectedJcrContentNode.getParent();Map<String, String> infectedNode = new HashMap<String, String>();infectedNode.put(INFECTED_ITEM_ID, ((NodeImpl) infectedJcrNode).getIdentifier());infectedNode.put(INFECTED_JCR_NODE_WORKSPACE, jcrNodeWorkspace);infectedNode.put(INFECTED_ITEM_NAME, infectedJcrNode.getName());infectedNode.put(INFECTED_ITEM_LAST_MODIFIER,infectedJcrNode.getProperty(NodetypeConstant.EXO_LAST_MODIFIER).getString());infectedNodes.add(infectedNode);long endTime = System.currentTimeMillis();}} catch (ItemNotFoundException e) {long endTime = System.currentTimeMillis();LOGGER.warn(""service={} operation={} parameters=\""infectedJcrNodePath:{}\"" status=ko duration_ms={}""+ "" error_msg=\""The jcr node may be already cleaned by a previous malware detection""+ "" operation:{}\"""",MALWARE_DETECTION_FEATURE,MALWARE_INFECTED_JCR_NODE_DETECTION,infectedJcrNodePath,endTime - startTime);} catch (Exception e) {long endTime = System.currentTimeMillis();LOGGER.error(""service={} operation={} parameters=\""infectedJcrNodePath:{}\"" status=ko duration_ms={}""+ "" error_msg=\""Error when trying to get the infected jcr node information:{}\"""",MALWARE_DETECTION_FEATURE,MALWARE_INFECTED_JCR_NODE_DETECTION,infectedJcrNodePath,endTime - startTime,e);}return infectedNodes;}}"	Yes
203	"public class A {public String getUrlLink(final Map<String, Object> document) {final FessConfig fessConfig = ComponentUtil.getFessConfig();String url = DocumentUtil.getValue(document, fessConfig.getIndexFieldUrl(), String.class);if (StringUtil.isBlank(url)) {return ""#not-found-""+ DocumentUtil.getValue(document, fessConfig.getIndexFieldDocId(), String.class);}final boolean isSmbUrl = url.startsWith(""smb:"") || url.startsWith(""smb1:"");final boolean isFtpUrl = url.startsWith(""ftp:"");final boolean isSmbOrFtpUrl = isSmbUrl || isFtpUrl;url = ComponentUtil.getPathMappingHelper().replaceUrl(url);final boolean isHttpUrl = url.startsWith(""http:"") || url.startsWith(""https:"");if (isSmbUrl) {url = url.replace(""smb:"", ""file:"");url = url.replace(""smb1:"", ""file:"");}if (isHttpUrl && isSmbOrFtpUrl) {final StringBuilder buf = new StringBuilder(url.length() + 100);for (final char c : url.toCharArray()) {if (CharUtil.isUrlChar(c)) {buf.append(c);} else {try {buf.append(URLEncoder.encode(String.valueOf(c), urlLinkEncoding));} catch (final UnsupportedEncodingException e) {buf.append(c);}}}url = buf.toString();} else if (url.startsWith(""file:"")) {url = updateFileProtocol(url);if (encodeUrlLink) {return appendQueryParameter(document, url);}if (!isSmbOrFtpUrl) {try {url = URLDecoder.decode(url.replace(""+"", ""%2B""), urlLinkEncoding);} catch (final Exception e) {if (logger.isDebugEnabled()) {logger.warn(""Failed to decode {}"", url, e);}}}}return appendQueryParameter(document, url);}}"	No
204	"public class A {@Overridepublic void setEnabled(boolean enabled) throws Exception {if (enabled) {List<Driver> enabledDrivers = new ArrayList<>();try {for (Driver driver : getDrivers()) {driver.setEnabled(true);enabledDrivers.add(driver);}this.enabled = true;} catch (Exception e) {Collections.reverse(enabledDrivers);for (Driver driver : enabledDrivers) {try {driver.setEnabled(false);} catch (Exception e1) {}}fireMachineEnableFailed(e.getMessage());throw e;}fireMachineEnabled();} else {this.setHomed(false);fireMachineAboutToBeDisabled(""User requested stop."");Exception e = null;List<Driver> enabledDrivers = new ArrayList<>();enabledDrivers.addAll(getDrivers());Collections.reverse(enabledDrivers);for (Driver driver : enabledDrivers) {try {driver.setEnabled(false);} catch (Exception e1) {e = e1;}}this.enabled = false;if (e != null) {fireMachineDisableFailed(e.getMessage());throw e;}fireMachineDisabled(""User requested stop."");}}}"	Yes
205	public class A {@Overridepublic void onLogoutSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication)throws IOException, ServletException {if (authentication != null) {userDirectoryService.invalidate(authentication.getName());} else {}super.onLogoutSuccess(request, response, authentication);}}	Yes
206	"public class A {public String getValueFromServer(String url) throws Exception {RemoteUrl remoteUrl = new RemoteUrl(url, hostList);ValueVo confItemVo =restfulMgr.getJsonData(ValueVo.class, remoteUrl, retryTime, retrySleepSeconds);LOGGER.debug(""remote server return: "" + confItemVo.toString());if (confItemVo.getStatus().equals(Constants.NOTOK)) {throw new Exception(""status is not ok."");}return confItemVo.getValue();}}"	No
207	"public class A {private void findConfigurationsInsideVfModule(DelegateExecution execution,String vnfId,String vfModuleId,List<Resource> resourceList,List<Pair<WorkflowType, String>> aaiResourceIds) {try {org.onap.aai.domain.yang.VfModule aaiVfModule =bbInputSetupUtils.getAAIVfModule(vnfId, vfModuleId);AAIResultWrapper vfModuleWrapper =new AAIResultWrapper(new AAICommonObjectMapperProvider().getMapper().writeValueAsString(aaiVfModule));Optional<Relationships> relationshipsOp;relationshipsOp = vfModuleWrapper.getRelationships();if (relationshipsOp.isPresent()) {relationshipsOp = workflowActionUtils.extractRelationshipsVnfc(relationshipsOp.get());addConfigToResources(relationshipsOp, resourceList, aaiResourceIds);}} catch (Exception ex) {logger.error(""Exception in findConfigurationsInsideVfModule"", ex);buildAndThrowException(execution, ""Failed to find Configuration object from the vfModule."");}}}"	No
208	"public class A {@Overridepublic List<Long> getRunningSecStorageVmListByMsid(SecondaryStorageVm.Role role, long msid) {List<Long> l = new ArrayList<Long>();TransactionLegacy txn = TransactionLegacy.currentTxn();;PreparedStatement pstmt = null;try {String sql;if (role == null) {sql =""SELECT s.id FROM secondary_storage_vm s, vm_instance v, host h ""+ ""WHERE s.id=v.id AND v.state='Running' AND v.host_id=h.id AND h.mgmt_server_id=?"";} else {sql =""SELECT s.id FROM secondary_storage_vm s, vm_instance v, host h WHERE s.id=v.id AND""+ "" v.state='Running' AND s.role=? AND v.host_id=h.id AND h.mgmt_server_id=?"";}pstmt = txn.prepareAutoCloseStatement(sql);if (role == null) {pstmt.setLong(1, msid);} else {pstmt.setString(1, role.toString());pstmt.setLong(2, msid);}ResultSet rs = pstmt.executeQuery();while (rs.next()) {l.add(rs.getLong(1));}} catch (SQLException e) {s_logger.debug(""Caught SQLException: "", e);}return l;}}"	No
209	"public class A {@Overridepublic void shutDown() {if (initialized.compareAndSet(true, false)) {stop();configuration.removeChangeListener(this);instrumentation.removeTransformer(this);Thread t = transformThread;transformThread = null;if (t != null && !t.isInterrupted()) {t.interrupt();}cleanUp.set(true);try {instrumentApplication();} catch (Throwable e) {LOG.warn(""Failed to shutdown due "" + e.getMessage() + "". This exception is ignored."", e);}}}}"	No
210	public class A {protected <T extends Comparable<T>> void assertSorted(String message, Iterable<T> list, boolean reverse) {if (!reverse) {assertTrue(Ordering.natural().isOrdered(list), message);} else {assertTrue(Ordering.natural().reverse().isOrdered(list), message);}}}	Yes
211	"public class A {private static SSLContext createEasySSLContext() {try {SSLContext context = SSLContext.getInstance(""TLS"");context.init(null, new TrustManager[] {new DefaultX509TrustManager(null)}, null);return context;} catch (Exception e) {LOG.error(e.getMessage(), e);throw new HttpClientError(e.toString());}}}"	No
212	public class A {@Overridepublic long length() {try {return fs.getFileStatus(hdfsPath).getLen();} catch (IOException e) {return 0;}}}	Yes
213	"public class A {@Overridepublic String execute() {myValidate();if (!hasActionErrors()) {try {getBean().copyTo(pingTarget);PingTargetManager pingTargetMgr = WebloggerFactory.getWeblogger().getPingTargetManager();pingTargetMgr.savePingTarget(pingTarget);WebloggerFactory.getWeblogger().flush();addMessage(isAdd() ? ""pingTarget.created"" : ""pingTarget.updated"", pingTarget.getName());return SUCCESS;} catch (WebloggerException ex) {addError(""generic.error.check.logs"");}}return INPUT;}}"	Yes
214	public class A {@Aspect(advice = org.support.project.ormapping.transaction.Transaction.class)private List<PointUserHistoriesEntity> reCalcPointUserHistoryOnUser(Integer userId, int offset2) {List<PointUserHistoriesEntity> list;list = PointUserHistoriesDao.get().selectOnUser(userId, limit, offset2, Order.ASC);for (PointUserHistoriesEntity item : list) {item.setBeforeTotal(calcTotal);calcTotal += item.getPoint();item.setTotal(calcTotal);PointUserHistoriesDao.get().physicalUpdate(item);}return list;}}	Yes
215	public class A {@Overridepublic MBStatsUser findByPrimaryKey(Serializable primaryKey) throws NoSuchStatsUserException {MBStatsUser mbStatsUser = fetchByPrimaryKey(primaryKey);if (mbStatsUser == null) {if (_log.isDebugEnabled()) {}throw new NoSuchStatsUserException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return mbStatsUser;}}	Yes
216	public class A {protected void refreshMe() {if (logger.isDebugEnabled()) {}for (Iterator widgetIter = widgets.keySet().iterator(); widgetIter.hasNext(); ) {IPropertyEditorWidget control = (IPropertyEditorWidget) widgets.get(widgetIter.next());control.cleanup();((Control) control).dispose();}widgets.clear();if (logger.isDebugEnabled()) {}for (Iterator groupNameWidgetIter = groupNameWidgets.keySet().iterator();groupNameWidgetIter.hasNext(); ) {Control control = (Control) groupNameWidgets.get(groupNameWidgetIter.next());control.dispose();}groupNameWidgets.clear();if (conceptModel != null) {List usedGroups = PropertyGroupHelper.getUsedGroups(conceptModel);for (Iterator groupIter = usedGroups.iterator(); groupIter.hasNext(); ) {String groupName = (String) groupIter.next();Control groupNameWidget = new GroupNameWidget(widgetArea, SWT.NONE, groupName);addWidget(groupNameWidget);groupNameWidgets.put(groupName, groupNameWidget);List usedPropertiesForGroup =PropertyGroupHelper.getUsedPropertiesForGroup(groupName, conceptModel);for (Iterator propIter = usedPropertiesForGroup.iterator(); propIter.hasNext(); ) {String propertyId = (String) propIter.next();ConceptPropertyInterface prop =(ConceptPropertyInterface) conceptModel.getEffectiveProperty(propertyId);if (logger.isDebugEnabled()) {}IPropertyEditorWidget widget =PropertyEditorWidgetFactory.getWidget(prop.getType(),widgetArea,SWT.NONE,conceptModel,prop.getId(),context,securityReference);if (widget != null) {addWidget((Control) widget);widgets.put(prop.getId(), widget);focusWidget(prop.getId());} else {}resizeWidgetArea();}}}}}	Yes
217	"public class A {private static void debugCommandStart(String desc, List<String> argv) {if (log.isDebugEnabled()) {log.debug(""START {} ################# "", desc);}}}"	Yes
218	public class A {@Overrideprotected void postBusEventFromTransaction(final AccountModelDao account,final AccountModelDao savedAccount,final ChangeType changeType,final EntitySqlDaoWrapperFactory entitySqlDaoWrapperFactory,final InternalCallContext context)throws BillingExceptionBase {switch (changeType) {case INSERT:break;default:return;}final Long recordId = savedAccount.getRecordId();final InternalCallContext rehydratedContext =internalCallContextFactory.createInternalCallContext(savedAccount, recordId, context);final AccountCreationInternalEvent creationEvent =new DefaultAccountCreationEvent(new DefaultAccountData(savedAccount),savedAccount.getId(),rehydratedContext.getAccountRecordId(),rehydratedContext.getTenantRecordId(),rehydratedContext.getUserToken());try {eventBus.postFromTransaction(creationEvent, entitySqlDaoWrapperFactory.getHandle().getConnection());} catch (final EventBusException e) {}}}	Yes
219	"public class A {@Testpublic void createAndDestroyEnvironment()throws EnvironmentDriverException, InterruptedException {final Semaphore mutex = new Semaphore(0);ObjectWrapper<Throwable> exceptionWrapper = new ObjectWrapper<>();String dummyImageId = ""abcd1234"";String dummyRepoUrl = ""test.repo.url/repo"";final StartedEnvironment startedEnv =environmentDriver.startEnvironment(dummyImageId,dummyRepoUrl,SystemImageType.DOCKER_IMAGE,DUMMY_REPOSITORY_CONFIGURATION,new DebugData(false),""put-access-token-here"",false,Collections.emptyMap());Consumer<RunningEnvironment> onEnvironmentStarted =(runningEnvironment) -> {boolean containerDestroyed = false;try {assertThatContainerIsRunning(runningEnvironment);destroyEnvironment(runningEnvironment);containerDestroyed = true;assertThatContainerIsNotRunning(runningEnvironment);mutex.release();} catch (Throwable e) {exceptionWrapper.set(e);} finally {if (!containerDestroyed) {destroyEnvironmentWithReport(runningEnvironment);}}mutex.release();};Consumer<Exception> onError =(e) -> {try {startedEnv.destroyEnvironment();mutex.release();} catch (EnvironmentDriverException e1) {}fail(""Failed to init builder. "" + e.getMessage());};startedEnv.monitorInitialization(onEnvironmentStarted, onError);boolean completed = mutex.tryAcquire(TEST_EXECUTION_TIMEOUT, TimeUnit.SECONDS);Throwable exception = exceptionWrapper.get();if (exception != null) {fail(exception.getMessage());}assertTrue(""timeout reached, test has not complete."", completed);}}"	Yes
220	"public class A {public static <T> T getFromJobExecutionContext(ExecutionContext context, String key, Type typeOfT) {Object valueString = context.get(key);if (valueString != null) {if (valueString instanceof String) {Gson gson = new Gson();return (T) gson.fromJson((String) valueString, typeOfT);} else {logger.error(""invalid data type saved into execution context: ""+ valueString.getClass()+ "", ""+ valueString);}}return null;}}"	No
221	public class A {@Overridepublic void close() {try {if (_writer == null) {return;}_writer.close();_writer = null;} catch (IOException ioException) {if (_log.isDebugEnabled()) {_log.debug(ioException, ioException);}_hasError = true;}}}	No
222	"public class A {public static void waitForServerToBeUp() {ZooKeeper zk = null;while (true) {try {log.debug(""ZooKeeper server is starting..."");Thread.sleep(2000);if (zk == null) {zk = zooKeeper(60000, null);}} catch (InterruptedException e) {}ZooKeeper.States st = zk.getState();if (st == ZooKeeper.States.CONNECTED) {break;}}}}"	Yes
223	"public class A {@SuppressWarnings(""rawtypes"")@Test(groups = ""Live"")public void testJcloudsCreateBogStandard() throws Exception {log.info(""TEST testJcloudsCreateBogStandard"");JcloudsSshMachineLocation m1 = obtainMachine(ImmutableMap.of());Map details =MutableMap.of(""id"",m1.getJcloudsId(),""hostname"",m1.getAddress().getHostAddress(),""user"",m1.getUser());log.info(""got machine "" + m1 + "" at "" + jcloudsLocation + "": "" + details + ""; now trying to rebind"");String result;result = execWithOutput(m1, Arrays.asList(""echo trying  m1"", ""hostname"", ""date""));Assert.assertTrue(result.contains(""trying m1""));JcloudsSshMachineLocation m2 =(JcloudsSshMachineLocation) jcloudsLocation.registerMachine(details);result = execWithOutput(m2, Arrays.asList(""echo trying  m2"", ""hostname"", ""date""));Assert.assertTrue(result.contains(""trying m2""));}}"	Yes
224	"public class A {private static void count() {DbConn cnx = null;try {cnx = Helpers.getNewDbSession();jqmlogger.info(""Existing nodes: "" + MetaService.getNodes(cnx).size());} catch (Exception e) {throw new JqmRuntimeException(""Could not fetch node count"", e);} finally {Helpers.closeQuietly(cnx);}}}"	No
225	"public class A {@Overrideprotected byte[] getData(Attributes attributes) {if (isRelative(uri)) {File img = OmFileHelper.getUserProfilePicture(userId, uri);try (InputStream is = new FileInputStream(img)) {return IOUtils.toByteArray(is);} catch (Exception e) {log.error(""failed to get bytes from image"", e);}}return null;}}"	No
226	"public class A {private boolean stoppingCriteriaSatisfied() {if (candidates.isEmpty()) {return true;}boolean timeout = isTimeExpired();if (timeout) {logger.info(""Stopping algorithm: Max. execution time was reached."");return true;}SearchTreeNode bestNode = candidates.last();boolean perfectDefinitionFound = bestNode.getAccuracy() == 1.0;if (stopOnFirstDefinition && perfectDefinitionFound) {logger.info(""Stopping algorithm: Perfect definition found."");return true;}return false;}}"	Yes
227	"public class A {public boolean transitionToFailed(Throwable throwable) {cleanupQueryQuietly();queryStateTimer.endQuery();requireNonNull(throwable, ""throwable is null"");failureCause.compareAndSet(null, toFailure(throwable));QueryState oldState = queryState.trySet(FAILED);if (oldState.isDone()) {return false;}try {QUERY_STATE_LOG.debug(throwable, ""Query %s failed"", queryId);session.getTransactionId().ifPresent(transactionId -> {try {if (transactionManager.transactionExists(transactionId)&& transactionManager.isAutoCommit(transactionId)) {transactionManager.asyncAbort(transactionId);return;}} catch (RuntimeException e) {QUERY_STATE_LOG.error(e,""Error aborting transaction for failed query. Transaction will be failed""+ "" directly"");}transactionManager.fail(transactionId);});} finally {if (oldState.ordinal() <= PLANNING.ordinal()) {finalQueryInfo.compareAndSet(Optional.empty(), Optional.of(getQueryInfo(Optional.empty())));}}return true;}}"	Yes
228	public class A {public void logInfo(String string) {logger.info(string);}}	No
229	"public class A {@Test(groups = ""Integration"")public void test_localhost() throws Exception {PostgreSqlNode pgsql =app.createAndManageChild(EntitySpec.create(PostgreSqlNode.class).configure(DatastoreCommon.CREATION_SCRIPT_CONTENTS, CREATION_SCRIPT).configure(PostgreSqlNode.MAX_CONNECTIONS, 10).configure(PostgreSqlNode.SHARED_MEMORY, ""512kB""));app.start(ImmutableList.of(loc));String url = pgsql.getAttribute(DatastoreCommon.DATASTORE_URL);new VogellaExampleAccess(""org.postgresql.Driver"", url).readModifyAndRevertDataBase();}}"	Yes
230	"public class A {private void setupWsClient()throws ExecutionException, IOException, InterruptedException, TimeoutException {if (wsClient != null) {wsClient.addHandler(recordingNameTopic,true,new Handler() {@Overridepublic void onMessage(String type, String topic, Object data) {numSubscribers = Integer.valueOf((String) data);logger.info(""Number of subscribers for recording started at {} is now {}"",getStartTime(),numSubscribers);}@Overridepublic void onClose() {numSubscribers = 0;}});}}}"	No
231	"public class A {public String save() throws Exception {try {this.scope.setDisplayName(this.scope.getDisplayName().trim());this.scope.setId(this.scope.getDisplayName());updateDynamicScripts();updateClaims();saveAttributesJson();if (update) {try {scopeService.updateScope(this.scope);oxTrustAuditService.audit(""OPENID SCOPE ""+ this.scope.getInum()+ "" **""+ this.scope.getDisplayName()+ ""** UPDATED"",identity.getUser(),(HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest());} catch (BasePersistenceException ex) {facesMessages.add(FacesMessage.SEVERITY_ERROR,""Failed to update scope '#{updateScopeAction.scope.displayName}'"");return OxTrustConstants.RESULT_FAILURE;}facesMessages.add(FacesMessage.SEVERITY_INFO,""Scope '#{updateScopeAction.scope.displayName}' updated successfully"");} else {this.inum = scopeService.generateInumForNewScope();String dn = scopeService.getDnForScope(this.inum);this.scope.setDn(dn);this.scope.setInum(this.inum);try {scopeService.addScope(this.scope);oxTrustAuditService.audit(""OPENID SCOPE ""+ this.scope.getInum()+ "" **""+ this.scope.getDisplayName()+ ""** ADDED"",identity.getUser(),(HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest());} catch (Exception ex) {facesMessages.add(FacesMessage.SEVERITY_ERROR, ""Failed to add new scope"");return OxTrustConstants.RESULT_FAILURE;}facesMessages.add(FacesMessage.SEVERITY_INFO,""New scope '#{updateScopeAction.scope.displayName}' added successfully"");conversationService.endConversation();this.update = true;}log.debug("" returning success updating or saving scope"");return OxTrustConstants.RESULT_SUCCESS;} catch (Exception e) {return OxTrustConstants.RESULT_FAILURE;}}}"	Yes
232	"public class A {protected void doDeletePersistentVolumeClaim(Exchange exchange, String operation)throws Exception {String pvcName =exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_PERSISTENT_VOLUME_CLAIM_NAME, String.class);String namespaceName =exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME, String.class);if (ObjectHelper.isEmpty(pvcName)) {throw new IllegalArgumentException(""Delete a specific Persistent Volume Claim require specify a Persistent Volume Claim""+ "" name"");}if (ObjectHelper.isEmpty(namespaceName)) {throw new IllegalArgumentException(""Delete a specific Persistent Volume Claim require specify a namespace name"");}boolean pvcDeleted =getEndpoint().getKubernetesClient().persistentVolumeClaims().inNamespace(namespaceName).withName(pvcName).delete();MessageHelper.copyHeaders(exchange.getIn(), exchange.getOut(), true);exchange.getOut().setBody(pvcDeleted);}}"	Yes
233	public class A {@Overridepublic void apply(Context resources) {RunningState runningState = resources.getRepository();BinaryStore binaryStore = runningState.binaryStore();try {if (binaryStore instanceof FileSystemBinaryStore) {((FileSystemBinaryStore) binaryStore).upgradeTrashContentFormat();}} catch (BinaryStoreException e) {}}}	Yes
234	"public class A {protected void processTXOriginatorRecoveryMessage(final ClusterDistributionManager dm, final TXOriginatorRecoveryMessage msg) {ReplyException replyException = null;try {TXCommitMessage.getTracker().waitToProcess(msg.txLockId, dm);} catch (RuntimeException t) {{replyException = new ReplyException(t);}} finally {TXOriginatorRecoveryReplyMessage replyMsg = new TXOriginatorRecoveryReplyMessage();replyMsg.txLockId = txLockId;replyMsg.setProcessorId(getProcessorId());replyMsg.setRecipient(getSender());replyMsg.setException(replyException);if (getSender().equals(dm.getId())) {logger.info(""[processTXOriginatorRecoveryMessage] locally process reply"");replyMsg.setSender(dm.getId());replyMsg.dmProcess(dm);} else {logger.info(""[processTXOriginatorRecoveryMessage] send reply"");dm.putOutgoing(replyMsg);}}}}"	Yes
235	public class A {public static void delete(File file) throws HyracksDataException {try {if (file.isDirectory()) {if (!file.exists()) {return;} else if (!FileUtils.isSymlink(file)) {cleanDirectory(file);}}Files.delete(file.toPath());} catch (NoSuchFileException | FileNotFoundException e) {} catch (IOException e) {throw HyracksDataException.create(ErrorCode.CANNOT_DELETE_FILE, e, file.getAbsolutePath());}}}	Yes
236	"public class A {private void _initLayoutTemplates(final PluginPackage pluginPackage) {ServiceDependencyManager serviceDependencyManager = new ServiceDependencyManager();serviceDependencyManager.addServiceDependencyListener(new ServiceDependencyListener() {@Overridepublic void dependenciesFulfilled() {try {if (_log.isDebugEnabled()) {_log.debug(""Initialize layout templates"");}ServletContext servletContext = getServletContext();List<LayoutTemplate> layoutTemplates =LayoutTemplateLocalServiceUtil.init(servletContext,new String[] {StreamUtil.toString(servletContext.getResourceAsStream(""/WEB-INF/liferay-layout-"" + ""templates.xml"")),StreamUtil.toString(servletContext.getResourceAsStream(""/WEB-INF/liferay-layout-"" + ""templates-ext.xml""))},pluginPackage);servletContext.setAttribute(WebKeys.PLUGIN_LAYOUT_TEMPLATES, layoutTemplates);} catch (Exception exception) {}}@Overridepublic void destroy() {}});Registry registry = RegistryUtil.getRegistry();Collection<Filter> filters = new ArrayList<>();for (String langType : LayoutTemplateLocalServiceImpl.supportedLangTypes) {StringBundler sb = new StringBundler(5);sb.append(""(&(language.type="");sb.append(langType);sb.append("")(objectClass="");sb.append(TemplateManager.class.getName());sb.append(""))"");filters.add(registry.getFilter(sb.toString()));}serviceDependencyManager.registerDependencies(filters.toArray(new Filter[0]));}}"	Yes
237	public class A {public void logDebug(String message) {String msgWithId = addMsgIdToMsg(LogMessageIdentifier.DEBUG, message);systemLogger.debug(msgWithId);}}	No
238	"public class A {public static boolean canPublishEndpoint(String listenAddress) {if (StringUtils.isEmpty(listenAddress)) {LOGGER.info(""listenAddress is null, can not publish."");return false;}IpPort ipPort = NetUtils.parseIpPortFromURI(""http://"" + listenAddress);if (ipPort == null) {return false;}if (NetUtils.canTcpListen(ipPort.getSocketAddress().getAddress(), ipPort.getPort())) {return false;}return true;}}"	Yes
239	"public class A {public static Process startProcess(List<String> command) {String commandString = Joiner.on("" "").join(command);log.info(""Starting: %s"", commandString);ProcessBuilder processBuilder = new ProcessBuilder(command);Process process = startProcess(processBuilder);closeInput(process);pipeStdout(commandString, process);pipeStderr(commandString, process);return process;}}"	No
240	"public class A {@Overridepublic String decrypt(String encryptedData) {if (encryptedData != null && encryptedData.length() != 0) {try {byte[] cryptobytes = DatatypeConverter.parseBase64Binary(encryptedData);byte[] clearbytes = decryptCipher.doFinal(cryptobytes);return new String(clearbytes, Charset.defaultCharset());} catch (IllegalBlockSizeException | BadPaddingException e) {return encryptedData;}} else {LOG.warn(""encryptedData is empty or null."");return encryptedData;}}}"	Yes
241	"public class A {@POST@Path(""/{cmdletId}/stop"")public Response stop(@PathParam(""cmdletId"") String cmdletId) {Long longNumber = Long.parseLong(cmdletId);try {smartEngine.getCmdletManager().disableCmdlet(longNumber);return new JsonResponse<>(Response.Status.OK).build();} catch (Exception e) {logger.error(""Exception in CmdletRestApi while stop cmdlet "" + longNumber, e);return new JsonResponse<>(Response.Status.INTERNAL_SERVER_ERROR,e.getMessage(),ExceptionUtils.getStackTrace(e)).build();}}}"	No
242	public class A {@PreDestroypublic void destroy() {if (_taskScheduler != null) {_taskScheduler.shutdown();}}}	Yes
243	"public class A {private SuperheroNamedEntityFound getAllSuperheroNamesFromDBpediaMatchingPositions(String question) {String serviceUrl = ""http://dbpedia.org/sparql"";String query =""PREFIX dbr: <http://dbpedia.org/resource/>\n""+ ""PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n""+ ""PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n""+ ""PREFIX pt: <http://purl.org/dc/terms/>\n""+ ""SELECT ?hero (str(?herolabel) as ?herolabelString) (lang(?herolabel) as""+ "" ?herolabelLang)\n""+ ""WHERE {\n""+ ""  ?hero pt:subject dbr:Category:Superhero_film_characters .\n""+ ""  ?hero rdfs:label ?herolabel.\n""+ ""}\n""+ ""LIMIT 10000"";QueryExecution qe = QueryExecutionFactory.sparqlService(serviceUrl, query);ResultSet rs = qe.execSelect();while (rs.hasNext()) {QuerySolution s = rs.nextSolution();String characterName = this.getCharacterName(s);if (nameFound(question, characterName)) {String resource = this.getResource(s);int[] index = this.getIndexOfName(question, characterName);return new SuperheroNamedEntityFound(characterName, resource, index[0], index[1]);}}logger.warn(""no matching names could be found"");return null;}}"	Yes
244	public class A {@Overridepublic List<Study> findByTitle(String title) {List<Study> study = null;if (title != null) {try {study = studyDAO.findByTitle(title.trim());} catch (Exception exception) {}}return study;}}	Yes
245	"public class A {@Testpublic void testProcessInstanceSignalEvent() throws Exception {String processId = ""org.drools.core.event"";String cmd = """";cmd += ""<batch-execution lookup='ksession1'>\n"";cmd += ""  <start-process processId='"" + processId + ""'>\n"";cmd += ""  </start-process>\n"";cmd += ""</batch-execution>\n"";logger.debug(cmd);String outXml = new String((byte[]) template.requestBody(""direct:test-with-session"", cmd));assertNotNull(outXml);int processInstanceId = 1;cmd = """";cmd += ""<batch-execution lookup='ksession1'>\n"";cmd +=""   <signal-event process-instance-id= '"" + processInstanceId + ""' event-type='MyEvent'>"";cmd += ""      <string>MyValue</string>"";cmd += ""   </signal-event>"";cmd += ""</batch-execution>\n"";outXml = new String((byte[]) template.requestBody(""direct:test-with-session"", cmd));logger.debug(outXml);}}"	No
246	"public class A {private void tagFrontLoadLastPeriods() {List<Period> periodList = examination.getPeriodList();int frontLoadLastPeriodSize =examination.getConstraintConfiguration().getFrontLoadLastPeriodSize();if (frontLoadLastPeriodSize == 0) {return;}int minimumPeriodId = periodList.size() - frontLoadLastPeriodSize;if (minimumPeriodId < 0) {logger.warn(""The frontLoadLastPeriodSize (""+ frontLoadLastPeriodSize+ "") is bigger than periodListSize (""+ periodList.size()+ ""). Tagging all periods as frontLoadLast..."");minimumPeriodId = 0;}for (Period period : periodList.subList(minimumPeriodId, periodList.size())) {period.setFrontLoadLast(true);}}}"	No
247	"public class A {@Overridepublic Response getResourceMetaWithDocId(String docId, Set<String> extensions) {log.debug(""start to get resource meta"");if (StringUtils.isBlank(docId)) {return Response.status(Response.Status.BAD_REQUEST).entity(""missing id"").build();}HProjectIteration hProjectIteration = retrieveAndCheckIteration(false);EntityTag etag = eTagUtils.generateETagForDocument(hProjectIteration, docId, extensions);Response.ResponseBuilder response = request.evaluatePreconditions(etag);if (response != null) {return response.build();}HDocument doc = documentDAO.getByDocIdAndIteration(hProjectIteration, docId);if (doc == null) {return Response.status(Response.Status.NOT_FOUND).entity(""document not found"").build();}ResourceMeta entity = new ResourceMeta(doc.getDocId());resourceUtils.transferToAbstractResourceMeta(doc, entity);resourceUtils.transferToResourceExtensions(doc, entity.getExtensions(true), extensions);log.debug(""successfuly get resource meta: {}"", entity);return Response.ok().entity(entity).tag(etag).build();}}"	No
248	public class A {private void notifyAsynchronousCommand(final ZToolPacket packet) {final AsynchronousCommandListener[] listeners;synchronized (asynchrounsCommandListeners) {listeners = asynchrounsCommandListeners.toArray(new AsynchronousCommandListener[] {});}for (final AsynchronousCommandListener listener : listeners) {try {listener.receivedAsynchronousCommand(packet);} catch (Throwable e) {}}}}	Yes
249	"public class A {private boolean needReloadContainerProviders(List<ContainerProvider> providers) {for (ContainerProvider provider : providers) {if (provider.needsReload()) {LOG.info(""Detected container provider [{}] needs to be reloaded. Reloading all providers."",provider);return true;}}return false;}}"	No
250	"public class A {@Overridepublic Optional<ActionResultOutput> get(ActionResultOutputKey actionResultOutputKey) {try {String query =""select RUN_ID, PRC_ID, ACTION_ID, OUT_NM, OUT_VAL from ""+ getMetadataRepository().getTableNameByLabel(""ActionResultOutputs"")+ "" where RUN_ID = ""+ SQLTools.getStringForSQL(actionResultOutputKey.getRunId())+ "" and ACTION_ID = ""+ SQLTools.getStringForSQL(actionResultOutputKey.getActionId())+ "" and OUT_NM = ""+ SQLTools.getStringForSQL(actionResultOutputKey.getOutputName())+ "" and PRC_ID = ""+ actionResultOutputKey.getProcessId()+ "";"";CachedRowSet cachedRowSet = getMetadataRepository().executeQuery(query, ""reader"");if (cachedRowSet.size() == 0) {return Optional.empty();} else if (cachedRowSet.size() > 1) {LOGGER.warn(MessageFormat.format(""Found multiple implementations for ActionResultOutput {0}. Returning first""+ "" implementation"",actionResultOutputKey.toString()));}cachedRowSet.next();return Optional.of(new ActionResultOutput(actionResultOutputKey, cachedRowSet.getString(""OUT_VAL"")));} catch (SQLException e) {throw new RuntimeException(e);}}}"	No
251	"public class A {public TimerInstance configureSLATimer(String slaDueDateExpression) {slaDueDateExpression = resolveVariable(slaDueDateExpression);if (slaDueDateExpression == null || slaDueDateExpression.trim().isEmpty()) {logger.debug(""Sla due date expression resolved to no value '{}'"", slaDueDateExpression);return null;}InternalKnowledgeRuntime kruntime = getKnowledgeRuntime();long duration;if (kruntime.getEnvironment().get(""jbpm.business.calendar"") != null) {BusinessCalendar businessCalendar =(BusinessCalendar) kruntime.getEnvironment().get(""jbpm.business.calendar"");duration = businessCalendar.calculateBusinessTimeAsDuration(slaDueDateExpression);} else {duration = DateTimeUtils.parseDuration(slaDueDateExpression);}TimerInstance timerInstance = new TimerInstance();timerInstance.setTimerId(-1);timerInstance.setDelay(duration);timerInstance.setPeriod(0);if (useTimerSLATracking()) {ProcessInstanceJobDescription description =ProcessInstanceJobDescription.of(-1L, DurationExpirationTime.after(duration), getStringId(), getProcessId());timerInstance.setId((KogitoProcessRuntime.asKogitoProcessRuntime(kruntime.getProcessRuntime()).getJobsService().scheduleProcessInstanceJob(description)));}return timerInstance;}}"	Yes
252	public class A {@Overridepublic void processMessage(final ObjectMessage message) throws JMSException {String correlationUid = null;String messageType = null;String organisationIdentification = null;String deviceIdentification = null;String notificationMessage;NotificationType notificationType;ResponseMessageResultType resultType;String resultDescription;Serializable dataObject;try {correlationUid = message.getJMSCorrelationID();messageType = message.getJMSType();organisationIdentification = message.getStringProperty(Constants.ORGANISATION_IDENTIFICATION);deviceIdentification = message.getStringProperty(Constants.DEVICE_IDENTIFICATION);resultType = ResponseMessageResultType.valueOf(message.getStringProperty(Constants.RESULT));resultDescription = message.getStringProperty(Constants.DESCRIPTION);notificationMessage = message.getStringProperty(Constants.DESCRIPTION);notificationType = NotificationType.valueOf(messageType);dataObject = message.getObject();} catch (final JMSException | IllegalArgumentException | NullPointerException e) {return;}try {final CorrelationIds ids =new CorrelationIds(organisationIdentification, deviceIdentification, correlationUid);this.handleMessage(ids, messageType, resultType, resultDescription, dataObject);} catch (final Exception e) {this.handleError(e, correlationUid, organisationIdentification, deviceIdentification, notificationType);return;}this.sendNotification(organisationIdentification,deviceIdentification,resultType.name(),correlationUid,notificationMessage,notificationType);}}	Yes
253	"public class A {public static List<CartridgeInfoBean> fetchSubscriptionDataList()throws ArtifactLoadingException {String cartridgeString =readUrl(System.getProperty(Constants.BASE_URL400) + Constants.URL_SUBSCRIPTION);String cartridgeListString;if (cartridgeString != null) {cartridgeListString =cartridgeString.substring(cartridgeString.indexOf('['), (cartridgeString.lastIndexOf(']') + 1));} else {String msg = ""Error while fetching subscription data list"";log.error(msg);throw new ArtifactLoadingException(msg);}return gson.fromJson(cartridgeListString, new TypeToken<List<CartridgeInfoBean>>() {}.getType());}}"	No
254	"public class A {public static void register(final Logger LOG) {synchronized (SignalHandler.class) {if (registered) {return;}registered = true;final String[] SIGNALS =OperatingSystem.isWindows()? new String[] {""TERM"", ""INT""}: new String[] {""TERM"", ""HUP"", ""INT""};StringBuilder bld = new StringBuilder();bld.append(""Registered UNIX signal handlers for ["");String separator = """";for (String signalName : SIGNALS) {try {new Handler(signalName, LOG);bld.append(separator);bld.append(signalName);separator = "", "";} catch (Exception e) {}}bld.append(""]"");LOG.info(bld.toString());}}}"	Yes
255	public class A {protected void onStreamUnstalled(IStream stream) {Long time = streamsStalls.remove(stream);if (time != null) {long stallTime = System.nanoTime() - time;streamsStallTime.addAndGet(stallTime);if (LOG.isDebugEnabled())}}}	Yes
256	"public class A {@Overridepublic void generateJson(String prefix, PrintWriter pw, VWorkspace vWorkspace) {HNodePath currentColumnPath = null;Worksheet worksheet = workspace.getWorksheet(worksheetId);List<HNodePath> paths = worksheet.getHeaders().getAllPaths();for (HNodePath path : paths) {if (path.getLeaf().getId().equals(hNodeId)) {currentColumnPath = path;break;}}SemanticTypeColumnModel model =new SemanticTypeUtil().predictColumnSemanticType(workspace, worksheet, currentColumnPath, 4, selection);OntologyManager ontMgr = workspace.getOntologyManager();Alignment alignment = AlignmentManager.Instance().getAlignment(workspace.getId(), worksheetId);ColumnNode columnNode = alignment.getColumnNodeByHNodeId(hNodeId);if (columnNode.getLearnedSemanticTypes() == null) {logger.debug(""adding learned semantic types to the column "" + hNodeId);columnNode.setLearnedSemanticTypes(new SemanticTypeUtil().getSuggestedTypes(ontMgr, columnNode, model));if (columnNode.getLearnedSemanticTypes().isEmpty()) {}}JSONObject result;if (model != null) {if (classUri == null) result = model.getAsJSONObject(ontMgr, alignment);else {model =new SemanticTypeUtil().predictColumnSemanticType(workspace, worksheet, currentColumnPath, 4, selection);result = model.getAsJSONObject(classUri, ontMgr, 4);}} else {result = new JSONObject();result.put(""Labels"", new JSONArray());}pw.println(result.toString());}}"	Yes
257	"public class A {@Overridepublic void close() {setClosing();synchronized (this) {if (pollingTimer != null) {pollingTimer.cancel(true);}pollingScheduler.shutdown();stopRetryTimer();}synchronized (transactionListeners) {for (SpiListener listener : transactionListeners) {listener.transactionComplete();}}timer.shutdownNow();executor.shutdownNow();try {parserThread.interrupt();parserThread.join();logger.debug(""SpiFrameHandler close complete."");} catch (InterruptedException e) {}}}"	Yes
258	"public class A {protected void processRequest(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException {final HttpServletRequest httpRequest = request;final HttpServletResponse httpResponse = response;httpResponse.setContentType(""application/jrd+json"");PrintWriter out = httpResponse.getWriter();String resource = httpRequest.getParameter(RESOURCE);String rel = httpRequest.getParameter(REL);log.debug(""Attempting to request OpenID Connect Discovery: ""+ resource+ "", ""+ rel+ "", Is Secure = ""+ httpRequest.isSecure());try {if (OpenIdConnectDiscoveryParamsValidator.validateParams(resource, rel)) {if (rel == null || rel.equals(REL_VALUE)) {JSONObject jsonObj = new JSONObject();jsonObj.put(SUBJECT, resource);JSONArray linksJsonArray = new JSONArray();JSONObject linkJsonObject = new JSONObject();linkJsonObject.put(REL, REL_VALUE);linkJsonObject.put(HREF, appConfiguration.getIssuer());linksJsonArray.put(linkJsonObject);jsonObj.put(LINKS, linksJsonArray);out.println(jsonObj.toString(4).replace(""\\/"", ""/""));}}} catch (JSONException e) {log.error(e.getMessage(), e);}out.close();}}"	No
259	"public class A {public ImportLocalizedAssetBody importLocalizedAssetForContent(Long assetId,Long localeId,String content,ImportLocalizedAssetBody.StatusForEqualTarget statusForEqualTarget,FilterConfigIdOverride filterConfigIdOverride,List<String> filterOptions) {logger.debug(""Import localized asset with asset id = {}, locale id = {}"", assetId, localeId);UriComponentsBuilder uriBuilder =UriComponentsBuilder.fromPath(getBasePathForResource(assetId, ""localized"", localeId, ""import""));ImportLocalizedAssetBody importLocalizedAssetBody = new ImportLocalizedAssetBody();importLocalizedAssetBody.setContent(content);importLocalizedAssetBody.setStatusForEqualTarget(statusForEqualTarget);importLocalizedAssetBody.setFilterConfigIdOverride(filterConfigIdOverride);importLocalizedAssetBody.setFilterOptions(filterOptions);return authenticatedRestTemplate.postForObject(uriBuilder.toUriString(), importLocalizedAssetBody, ImportLocalizedAssetBody.class);}}"	No
260	public class A {public void addBytes(String fileName, byte[] bytes) {try {fileName = MimeUtility.decodeText(fileName);} catch (UnsupportedEncodingException unsupportedEncodingException) {if (_log.isWarnEnabled()) {}}_bytesOVPs.add(new ObjectValuePair<String, byte[]>(fileName, bytes));}}	Yes
261	"public class A {public void expandLibs() throws IOException {StartLog.debug(""Expanding Libs"");for (String rawlibref : rawLibs) {StartLog.debug(""rawlibref = "" + rawlibref);String libref = properties.expand(rawlibref);StartLog.debug(""expanded = "" + libref);libref = libref.replaceAll(""\\\\([^\\\\])"", ""\\\\\\\\$1"");for (Path libpath : baseHome.getPaths(libref)) {classpath.addComponent(libpath.toFile());}}}}"	No
262	public class A {@Overridepublic void selectBlockers(Ability source, Game game, UUID defendingPlayerId) {List<Permanent> blockers = getAvailableBlockers(game);CombatSimulator sim = simulateBlock(CombatSimulator.load(game), blockers, game);List<CombatGroup> groups = game.getCombat().getGroups();for (int i = 0; i < groups.size(); i++) {for (CreatureSimulator creature : sim.groups.get(i).blockers) {groups.get(i).addBlocker(creature.id, playerId, game);}}}}	Yes
263	public class A {@Testpublic void currentClassLoader() {}}	Yes
264	public class A {@Overridepublic AuditEvent remove(Serializable primaryKey) throws NoSuchEventException {Session session = null;try {session = openSession();AuditEvent auditEvent = (AuditEvent) session.get(AuditEventImpl.class, primaryKey);if (auditEvent == null) {if (_log.isDebugEnabled()) {_log.debug(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}throw new NoSuchEventException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return remove(auditEvent);} catch (NoSuchEventException noSuchEntityException) {throw noSuchEntityException;} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}}	No
265	"public class A {private boolean isModelClass(String classname, Bundle bundle) {LOGGER.debug(""Check if class '{}' is a model class"", classname);Class<?> clazz;try {clazz = bundle.loadClass(classname);} catch (ClassNotFoundException e) {LOGGER.warn(""Bundle could not load its own class: '{}' bundle: '{}'"",classname,bundle.getSymbolicName());LOGGER.debug(""Exact error: "", e);return false;} catch (NoClassDefFoundError e) {return false;} catch (Error e) {LOGGER.warn(""Error while loading class: '{}' in bundle: '{}'"", classname, bundle.getSymbolicName());LOGGER.debug(""Exact error: "", e);return false;}return clazz.isAnnotationPresent(Model.class);}}"	No
266	"public class A {@SuppressWarnings(""unchecked"")public void run() {long lastTime = 0;while (true) {int[] copiedSelectedPositionIndices;List<NavigationPosition> copiedPositions;boolean recenter;synchronized (notificationMutex) {try {notificationMutex.wait(250);} catch (InterruptedException e) {}if (!running) return;if (!hasPositions()) continue;if (!isVisible()) continue;long currentTime = currentTimeMillis();if (haveToRecenterMap|| haveToRepaintSelectionImmediately|| (haveToRepaintSelection && (currentTime - lastTime > 500))) {log.fine(""Woke up to update selected positions: ""+ selectionUpdateReason+ "" haveToRepaintSelection: ""+ haveToRepaintSelection+ "" haveToRepaintSelectionImmediately: ""+ haveToRepaintSelectionImmediately+ "" haveToRecenterMap: ""+ haveToRecenterMap);recenter = haveToRecenterMap;haveToRecenterMap = false;haveToRepaintSelectionImmediately = false;haveToRepaintSelection = false;copiedSelectedPositionIndices = new int[selectedPositionIndices.length];System.arraycopy(selectedPositionIndices,0,copiedSelectedPositionIndices,0,copiedSelectedPositionIndices.length);copiedPositions = new ArrayList<>(positionsModel.getRoute().getPositions());} else continue;}List<NavigationPosition> render =new ArrayList<>(positionReducer.reduceSelectedPositions(copiedPositions, copiedSelectedPositionIndices));render.addAll(selectedPositions);NavigationPosition centerPosition =render.size() > 0 ? new BoundingBox(render).getCenter() : null;selectPositions(render, recenter ? centerPosition : null);lastTime = currentTimeMillis();}}}"	Yes
267	"public class A {private static Map<String, RSAPublicKey> getJwksFromUrl(final URL url, SSLContext sslContext, HostnameVerifier hostnameVerifier) {JsonObject response = null;try {URLConnection connection = url.openConnection();if (connection instanceof HttpsURLConnection) {HttpsURLConnection conn = (HttpsURLConnection) connection;conn.setRequestMethod(""GET"");conn.setSSLSocketFactory(sslContext.getSocketFactory());conn.setHostnameVerifier(hostnameVerifier);conn.setConnectTimeout(CONNECTION_TIMEOUT);conn.setReadTimeout(CONNECTION_TIMEOUT);conn.connect();InputStream inputStream = conn.getInputStream();response = Json.createReader(inputStream).readObject();}} catch (IOException e) {log.warn(""Unable to connect to "" + url.toString());return null;}if (response == null) {return null;}JsonArray jwks = response.getJsonArray(""keys"");if (jwks == null) {log.warn(""Unable to parse jwks"");return null;}Map<String, RSAPublicKey> res = new LinkedHashMap<>();for (int i = 0; i < jwks.size(); i++) {JsonObject jwk = jwks.getJsonObject(i);String kid = jwk.getString(""kid"", null);String kty = jwk.getString(""kty"", null);String e1 = jwk.getString(""e"", null);String n1 = jwk.getString(""n"", null);if (kid == null) {log.tokenRealmJwkMissingClaim(""kid"");continue;}if (!""RSA"".equals(kty)) {log.tokenRealmJwkMissingClaim(""kty"");continue;}if (e1 == null) {log.tokenRealmJwkMissingClaim(""e"");continue;}if (n1 == null) {log.tokenRealmJwkMissingClaim(""n"");continue;}BigInteger e = new BigInteger(1, Base64.getUrlDecoder().decode(e1));BigInteger n = new BigInteger(1, Base64.getUrlDecoder().decode(n1));RSAPublicKeySpec keySpec = new RSAPublicKeySpec(n, e);try {RSAPublicKey publicKey =(RSAPublicKey) KeyFactory.getInstance(""RSA"").generatePublic(keySpec);res.put(kid, publicKey);} catch (InvalidKeySpecException | NoSuchAlgorithmException ex) {log.info(""Fetched jwk could not be parsed, ignoring..."");ex.printStackTrace();continue;}}return res;}}"	Yes
268	public class A {private void updateTaskWithChangedElementProperties() {if (!changedElementProperties.isEmpty()) {getTaskService().updateChangedElementProperties(task.getId(), changedElementProperties);changedElementProperties.clear();}}}	Yes
269	"public class A {protected void restoreBackup(String backupSubFolder) throws ApsSystemException {try {this.restoreLocalDump(this.getEntandoTableMapping(), backupSubFolder);List<Component> components = this.getComponents();for (int i = 0; i < components.size(); i++) {Component componentConfiguration = components.get(i);this.restoreLocalDump(componentConfiguration.getTableMapping(), backupSubFolder);}} catch (Throwable t) {throw new ApsSystemException(""Error while restoring local backup"", t);}}}"	Yes
270	public class A {@Override@Transactionalpublic void registerChannel(ChannelRequest channelRequest) {addOrUpdate(ChannelBuilder.fromChannelRequest(channelRequest).build());}}	Yes
271	public class A {@Overridepublic void startStream() {task = executor.submit(new WebHdfsPersistReaderTask(this));}}	Yes
272	public class A {private NetworkTopology getNetworkDescriptor(String filename)throws JAXBException, IOException, ResourceException, SAXException {InputStream stream = null;try {URL url = new URL(filename);stream = url.openStream();} catch (MalformedURLException ignore) {stream = new FileInputStream(filename);}NetworkTopology rd = loadNetworkDescriptor(stream);return rd;}}	Yes
273	"public class A {public static void removeRedundantSubClassAxioms(OWLReasoner reasoner, Map<String, String> options) {logger.info(""Removing redundant subclass axioms..."");OWLOntology ontology = reasoner.getRootOntology();OWLOntologyManager manager = ontology.getOWLOntologyManager();OWLDataFactory dataFactory = manager.getOWLDataFactory();for (OWLClass thisClass : ontology.getClassesInSignature()) {if (thisClass.isOWLNothing() || thisClass.isOWLThing()) {continue;}Set<OWLClass> inferredSuperClasses = new HashSet<>();for (Node<OWLClass> node : reasoner.getSuperClasses(thisClass, true)) {for (OWLClass inferredSuperClass : node) {inferredSuperClasses.add(inferredSuperClass);}}for (OWLSubClassOfAxiom subClassAxiom : ontology.getSubClassAxiomsForSubClass(thisClass)) {if (OptionsHelper.optionIsTrue(options, ""preserve-annotated-axioms"")) {if (subClassAxiom.getAnnotations().size() > 0) {continue;}}if (subClassAxiom.getSuperClass().isAnonymous()) {continue;}OWLClass assertedSuperClass = subClassAxiom.getSuperClass().asOWLClass();if (inferredSuperClasses.contains(assertedSuperClass)) {continue;}manager.removeAxiom(ontology, dataFactory.getOWLSubClassOfAxiom(thisClass, assertedSuperClass));}}logger.info(""Ontology now has {} axioms."", ontology.getAxioms().size());}}"	No
274	"public class A {public synchronized boolean deleteAll() {logger.info(""Start deleting all storage groups' timeseries"");syncCloseAllProcessor();for (PartialPath storageGroup : IoTDB.metaManager.getAllStorageGroupPaths()) {this.deleteAllDataFilesInOneStorageGroup(storageGroup);}return true;}}"	No
275	"public class A {private boolean doBindToDevice() {try {return device.bindToLocal(cluster.getId());} catch (ZigBeeNetworkManagerException e) {log.debug(""Unable to bind to device {} on cluster {}"", device, cluster.getId());log.error(""Binding failed"", e);return false;}}}"	No
276	"public class A {private void readAndCheckEntry(JarFile jarFile, JarEntry entry) throws VerifyFailedException {InputStream is = null;byte[] buffer = new byte[8192];try {is = jarFile.getInputStream(entry);while ((is.read(buffer, 0, buffer.length)) != -1);} catch (java.lang.SecurityException ex) {throw new VerifyFailedException(""Verify failed."" + ex.getMessage(), ex);} catch (IOException ex) {throw new VerifyFailedException(""Verify failed."" + ex.getMessage(), ex);} finally {if (is != null) {try {is.close();} catch (IOException ex) {}}}}}"	Yes
277	"public class A {public void superAddValues(RecordingObject recordingObject) throws Exception {Group root = getRoot();String path = ""/"" + recordingObject.getVariable().replace(""."", ""/"");HObject v = FileFormat.findObject(recordingsH5File, path);if (v == null) {_logger.warn(""Creating variable "" + recordingObject.getVariable() + "" "" + i++);String[] splitByPeriod = recordingObject.getVariable().split(""\\."");Group current = root;String currentTag = recordingObject.getVariable();String currentPath = """";for (int s = 0; s < splitByPeriod.length - 1; s++) {currentTag = splitByPeriod[s];currentPath = currentPath.concat(""/"" + currentTag);current = createGroup(current, currentTag, currentPath, root);}currentTag = splitByPeriod[splitByPeriod.length - 1];this.createDataSet(recordingObject, current, currentTag);}}}"	No
278	"public class A {@Overridepublic void onAccuracyChanged(Sensor sensor, int accuracy) {logger.debug(String.format(""accuracy changed to %d for %s"", accuracy, sensor.getName()));}}"	No
279	"public class A {@Overridepublic Number readByValue(Integer value) throws DataAccessException {try {return (Number)em.createQuery(""SELECT n "" + ""FROM Number n "" + ""WHERE n.value = :value"").setParameter(""value"", value).getSingleResult();} catch (NoResultException e) {return null;}}}"	Yes
280	"public class A {@Overridepublic void onContainerStopped(ContainerId containerId) {if (LOG.isDebugEnabled()) {LOG.debug(""Succeeded to stop Container "" + containerId);}containers.remove(containerId);}}"	No
281	"public class A {@Overrideprotected AccountImpl createAccount() {AuthenticationCommand command =new AuthenticationCommand() {@Overridepublic Access call() {return new DummyAccess(accountConfig.getAuthUrl());}@Overridepublic String getUrl() {return ""abc"";}};Access access = new DummyAccess(accountConfig.getAuthUrl());LOG.info(""JOSS / Applying preferred region: ""+ (accountConfig.getPreferredRegion() == null? ""none"": accountConfig.getPreferredRegion()));return new AccountImpl(command,mHttpClient,access,accountConfig.isAllowCaching(),accountConfig.getTempUrlHashPrefixSource(),accountConfig.getDelimiter());}}"	Yes
282	"public class A {@Overridepublic void reloadEntitySearchRecords(String id, IApsEntity entity) {Connection conn = null;try {conn = this.getConnection();conn.setAutoCommit(false);this.executeReloadEntitySearchRecords(id, entity, conn);conn.commit();} catch (Throwable t) {this.executeRollback(conn);throw new RuntimeException(""Error detected while reloading references"", t);} finally {this.closeConnection(conn);}}}"	Yes
283	"public class A {@Overridepublic void before(Object target,String className,String methodName,String parameterDescription,Object[] args) {final InterceptorScopeInvocation transaction = scope.getCurrentInvocation();if (transaction.tryEnter(policy)) {try {this.delegate.before(target, className, methodName, parameterDescription, args);} catch (Throwable t) {exceptionHandler.handleException(t);}} else {if (debugEnabled) {logger.debug(""tryBefore() returns false: interceptorScopeTransaction: {}, executionPoint: {}. Skip""+ "" interceptor {}"",transaction,policy,delegate.getClass());}}}}"	No
284	public class A {private void submitParentCreateRequest(Context context, CreateRequest createRequest)throws IngestException, SourceUnavailableException {List<Metacard> createdMetacards = catalogFramework.create(createRequest).getCreatedMetacards();List<String> createdIds =createdMetacards.stream().map(Metacard::getId).collect(Collectors.toList());context.setParentMetacard(createdMetacards.get(createdMetacards.size() - 1));}}	Yes
285	"public class A {private URI buildResourceUri(final String... path) {final UriBuilder uriBuilder = uriInfo.getBaseUriBuilder();uriBuilder.segment(path);URI uri = uriBuilder.build();try {final String scheme =getFirstHeaderValue(PROXY_SCHEME_HTTP_HEADER, FORWARDED_PROTO_HTTP_HEADER);final String hostHeaderValue =getFirstHeaderValue(PROXY_HOST_HTTP_HEADER, FORWARDED_HOST_HTTP_HEADER);final String portHeaderValue =getFirstHeaderValue(PROXY_PORT_HTTP_HEADER, FORWARDED_PORT_HTTP_HEADER);final String host = WebUtils.determineProxiedHost(hostHeaderValue);final String port = WebUtils.determineProxiedPort(hostHeaderValue, portHeaderValue);String allowedContextPaths = properties.getAllowedContextPaths();String resourcePath = WebUtils.getResourcePath(uri, httpServletRequest, allowedContextPaths);int uriPort = uri.getPort();if (port != null) {if (StringUtils.isWhitespace(port)) {uriPort = -1;} else {try {uriPort = Integer.parseInt(port);} catch (final NumberFormatException nfe) {logger.warn(String.format(""Unable to parse proxy port HTTP header '%s'. Using port from request URI""+ "" '%s'."",port, uriPort));}}}uri =new URI((StringUtils.isBlank(scheme)) ? uri.getScheme() : scheme,uri.getUserInfo(),(StringUtils.isBlank(host)) ? uri.getHost() : host,uriPort,resourcePath,uri.getQuery(),uri.getFragment());} catch (final URISyntaxException use) {throw new UriBuilderException(use);}return uri;}}"	No
286	"public class A {protected boolean abortExecution() {final boolean abort = engine.exceedsRuntimeLimit();if (abort) {final AutoFormattingTime aft =new AutoFormattingTime(engine.getRuntimeLimitInNanoseconds(), -1, 4);logger.info(""Aborting execution (cleanly) because the runtime has exceeded the requested maximum ""+ aft);}return abort;}}"	No
287	"public class A {private void removeProcessControlTags(Process process, ConfigurationElementReport processReport) {LOGGER.debug(""Removing Process control tags for process "" + process.getId());Long aliveTagId = process.getAliveTagId();if (aliveTagId != null) {ConfigurationElementReport tagReport =new ConfigurationElementReport(Action.REMOVE, Entity.CONTROLTAG, aliveTagId);processReport.addSubReport(tagReport);controlTagConfigHandler.removeControlTag(aliveTagId, tagReport);}Long stateTagId = process.getStateTagId();ConfigurationElementReport tagReport =new ConfigurationElementReport(Action.REMOVE, Entity.CONTROLTAG, stateTagId);processReport.addSubReport(tagReport);controlTagConfigHandler.removeControlTag(stateTagId, tagReport);}}"	No
288	"public class A {@Override@SuppressWarnings(""rawtypes"")public long getCommittedWindowId(String appId, int operatorId) {try {beginTransaction();BytesMessage message = (BytesMessage) consumer.receive();long windowId = message.readLong();writeWindowId(appId, operatorId, windowId);commitTransaction();logger.debug(""Retrieved windowId {}"", windowId);return windowId;} catch (JMSException ex) {throw new RuntimeException(ex);}}}"	Yes
289	"public class A {@Overridepublic void reply(Message request, MessageReply reply) {if (Boolean.valueOf(request.getHeaderEntry(CloudBus.HEADER_NO_NEED_REPLY_MSG))) {if (logger.isTraceEnabled()) {logger.trace(String.format(""%s in message%s is set, drop reply%s"",CloudBus.HEADER_NO_NEED_REPLY_MSG,wire.dumpMessage(request),wire.dumpMessage(reply)));}return;}AMQP.BasicProperties.Builder builder = new AMQP.BasicProperties.Builder();reply.setAMQPProperties(builder.deliveryMode(1).build());reply.getHeaders().put(CloudBus.HEADER_IS_MESSAGE_REPLY, Boolean.TRUE.toString());reply.putHeaderEntry(CloudBus.HEADER_CORRELATION_ID, request.getId());reply.setServiceId(request.getHeaderEntry(CloudBus.HEADER_REPLY_TO));buildResponseMessageMetaData(reply);if (request instanceof NeedReplyMessage) {callReplyPreSendingExtensions(reply, (NeedReplyMessage) request);}wire.send(reply, false);}}"	No
290	public class A {public void stopBeans() {with(new WithComponentLifeCycle() {@Overridepublic void with(ComponentLifecycle lifecycle) {lifecycle.stop();}});}}	Yes
291	"public class A {public static void incrementFailedLoginAttemptsCounter(final Principal principal) {try {final PropertyKey<Integer> passwordAttemptsKey =StructrApp.key(Principal.class, ""passwordAttempts"");Integer failedAttempts = principal.getProperty(passwordAttemptsKey);if (failedAttempts == null) {failedAttempts = 0;}failedAttempts++;principal.setProperty(passwordAttemptsKey, failedAttempts);} catch (FrameworkException fex) {logger.warn(""Exception while incrementing failed login attempts counter"", fex);}}}"	No
292	"public class A {public void printLayout() {LOGGER.info(HORIZONTAL_RULER);LOGGER.info(""Cluster layout"");LOGGER.info(HORIZONTAL_RULER);for (WorkersPerAgent workersPerAgent : workersPerAgentList) {Set<String> agentVersionSpecs = workersPerAgent.getVersionSpecs();int agentMemberWorkerCount = workersPerAgent.count(""member"");int agentClientWorkerCount = workersPerAgent.workers.size() - agentMemberWorkerCount;int totalWorkerCount = agentMemberWorkerCount + agentClientWorkerCount;String message = ""    Agent %s (%s) members: %s, clients: %s"";if (totalWorkerCount > 0) {message += "", mode: %s, version specs: %s"";} else {message += "" (no workers)"";}LOGGER.info(format(message,workersPerAgent.agent.formatIpAddresses(),workersPerAgent.agent.getAddress(),formatLong(agentMemberWorkerCount, 2),formatLong(agentClientWorkerCount, 2),padLeft(workersPerAgent.agent.getAgentWorkerMode().toString(), WORKER_MODE_LENGTH),agentVersionSpecs));}}}"	No
293	"public class A {private void deletePermOrgunitInheritances() throws BuildException {if (delpermorgunitinheritances == null) {return;}for (Delpermorgunitinheritance delpermorgunitinheritance : delpermorgunitinheritances) {List<Relationship> orgs = delpermorgunitinheritance.getRelationships();for (Relationship relationship : orgs) {try {dAdminMgr.deleteInheritance(new OrgUnit(relationship.getParent(), OrgUnit.Type.PERM),new OrgUnit(relationship.getChild(), OrgUnit.Type.PERM));} catch (SecurityException se) {LOG.warn(""deletePermOrgunitInheritances tenant={} parent={} child={} caught""+ "" SecurityException={}"",getTenant(),relationship.getParent(),relationship.getChild(),se);}}}}}"	Yes
294	"public class A {public void completed(final HttpResponse response3) {try {httpclient.close();} catch (IOException e) {LOGGER.error(""Httpclient  close failed"" + e);}}}"	Yes
295	public class A {public void testFindDuplicates() {Map<Integer, Set<DocumentProtos.DocumentMetadata>> duplicates =duplicateWorkService.findDuplicates(documentWrappers, null);for (Map.Entry<Integer, Set<DocumentProtos.DocumentMetadata>> entry : duplicates.entrySet()) {for (DocumentProtos.DocumentMetadata documentMetadata : entry.getValue()) {}}Assert.assertEquals(duplicates.size(), 2);for (Map.Entry<Integer, Set<DocumentProtos.DocumentMetadata>> entry : duplicates.entrySet()) {if (entry.getValue().contains(documentWrapper1)) {Assert.assertEquals(entry.getValue().size(), 3);} else if (entry.getValue().contains(documentWrapper5)) {Assert.assertEquals(entry.getValue().size(), 2);} else {Assert.fail();}}}}	Yes
296	public class A {@Overridepublic StubDownloader build(StubRunnerOptions stubRunnerOptions) {return new AetherStubDownloader(AetherStubDownloaderFactory.this.repoSystem,AetherStubDownloaderFactory.this.project.getRemoteProjectRepositories(),repoSession,AetherStubDownloaderFactory.this.settings);}}	Yes
297	"public class A {@Overridepublic Set<T> discoverPlugins(Configuration conf) {Set<T> detectedPlugins = new LinkedHashSet<>();String classNamesStr = conf.get(this.propertyName);if (StringUtils.isBlank(classNamesStr)) {return detectedPlugins;}Set<String> classNames = new LinkedHashSet<>();Collections.addAll(classNames, classNamesStr.split("",""));for (String className : classNames) {try {Class<?> plugin = StramUtils.classForName(className, Object.class);if (klass.isAssignableFrom(plugin)) {detectedPlugins.add(StramUtils.newInstance(plugin.asSubclass(klass)));} else {}} catch (IllegalArgumentException e) {}}return detectedPlugins;}}"	Yes
298	"public class A {@Testpublic void errorLevel_exceptionMessage_loggedInBefore_failsInLocator() {given(LOCATOR, () -> logger.error(EXCEPTION_MESSAGE));Result result = runTest(ExecuteTaskBefore.class);assertThat(getFailure(result)).isInstanceOf(AssertionError.class).hasMessageContaining(""error"").hasMessageContaining(EXCEPTION_MESSAGE);}}"	No
299	public class A {protected <TransformT extends PTransform<? super PInput, POutput>>TransformEvaluator<TransformT> translate(TransformHierarchy.Node node, TransformT transform) {Map<TupleTag<?>, PCollection<?>> pValues;if (node.getInputs().isEmpty()) {pValues = node.getOutputs();} else {pValues = node.getInputs();}PCollection.IsBounded isNodeBounded = isBoundedCollection(pValues.values());return isNodeBounded.equals(PCollection.IsBounded.BOUNDED)? translator.translateBounded(transform): translator.translateUnbounded(transform);}}	Yes
300	"public class A {private void removeConnectionFromNote(String noteId, NotebookSocket socket) {LOGGER.debug(""Remove connection {} from note: {}"", socket, noteId);synchronized (noteSocketMap) {List<NotebookSocket> socketList = noteSocketMap.get(noteId);if (socketList != null) {socketList.remove(socket);}checkCollaborativeStatus(noteId, socketList);}}}"	No
301	public class A {public Stream<Record> fetchAsStream() throws IOException {int retryCount = 0;final QueryStatistics.Measurer statTracker = new QueryStatistics.Measurer();statTracker.recordQueryPrepStart();PreparedStatement preparedStatement = getPreparedStatementStreaming();statTracker.recordQueryPrepEnd();while (true) {try {statTracker.recordQueryExecStart();RecordIterator itr =QueryFetcher.getQueryResultsStream(preparedStatement, selectedColumns, dbConnection);itr.addStatisticsMeasurer(statTracker);Iterable<Record> i = () -> itr;Stream<Record> stream = StreamSupport.stream(i.spliterator(), false);stream = stream.onClose(() -> itr.close());return stream;} catch (SQLRecoverableException e) {if (++retryCount > MAX_CONNECTION_RETRIES) {throw new IOException(e);}} catch (SQLException e) {throw new IOException(e);}}}}	Yes
302	"public class A {private static void checkSampleTask() {final List<SlowServiceCheckTask> tasksCopy = new ArrayList<>(tasks);final Iterator<SlowServiceCheckTask> iterator = tasksCopy.iterator();final long currentTime = System.currentTimeMillis();final String currentTimeAsString = getCurrentTime();while (iterator.hasNext()) {final SlowServiceCheckTask task = iterator.next();long maxProcessTime =task.maxProcessTime.isPresent() ? task.maxProcessTime.get() : MAX_PROCESS_TIME;MDC.put(SoaSystemEnvProperties.KEY_LOGGER_SESSION_TID,task.sessionTid.map(DapengUtil::longToHexStr).orElse(""0""));if (logger.isInfoEnabled()) {logger.info(""slow service check {}:{}:{};maxProcessTime:{} "",task.serviceName,task.versionName,task.methodName,maxProcessTime);}final long ptime = currentTime - task.startTime;if (ptime >= maxProcessTime) {final StackTraceElement[] stackElements = task.currentThread.getStackTrace();if (stackElements != null && stackElements.length > 0) {final StringBuilder builder = new StringBuilder(task.toString());builder.append(""--[""+ currentTimeAsString+ ""]:task info:[""+ task.serviceName+ "":""+ task.methodName+ "":""+ task.versionName+ ""]"").append(""\n"");final String firstStackInfo = stackElements[0].toString();if (lastStackInfo.containsKey(task.currentThread)&& lastStackInfo.get(task.currentThread).equals(firstStackInfo)) {builder.append(""Same as last check..."");} else {builder.append(""-- The task has been executed "").append(ptime).append(""ms and Currently is executing:"");lastStackInfo.put(task.currentThread, firstStackInfo);builder.append(""\n   at "").append(firstStackInfo);for (int i = 1; i < stackElements.length; i++) {builder.append(""\n   at "" + stackElements[i]);}}builder.append(""\n"").append(""\n"");logger.error(""SlowProcess:{}"", builder.toString());}} else {lastStackInfo.remove(task.currentThread);}}tasksCopy.clear();}}"	No
303	"public class A {@Overridepublic Long getRunningCollectionDataCount() {Long collectionCountSinceLastRestart = 0L;Client client = ClientBuilder.newBuilder().register(JacksonFeature.class).build();try {WebTarget webResource = client.target(fetchMainUrl + ""/manage/count"");Response clientResponse = webResource.request(MediaType.APPLICATION_JSON).get();String jsonString = clientResponse.readEntity(String.class);JSONParser parser = new JSONParser();JSONObject jsonResponse = (JSONObject) parser.parse(jsonString);collectionCountSinceLastRestart = (Long) jsonResponse.get(""count"");} catch (Exception e) {}return collectionCountSinceLastRestart;}}"	Yes
304	"public class A {protected boolean objectExistsInRegistry(String pid) throws StorageDeviceException {Connection conn = null;PreparedStatement s = null;ResultSet results = null;try {conn = m_connectionPool.getReadOnlyConnection();s = conn.prepareStatement(REGISTERED_PID_QUERY);s.setString(1, pid);results = s.executeQuery();return results.next();} catch (SQLException sqle) {throw new StorageDeviceException(""Unexpected error from SQL database: "" + sqle.getMessage(), sqle);} finally {try {if (results != null) {results.close();}if (s != null) {s.close();}if (conn != null) {m_connectionPool.free(conn);}} catch (SQLException sqle) {throw new StorageDeviceException(""Unexpected error from SQL database: "" + sqle.getMessage(), sqle);} finally {results = null;s = null;}}}}"	Yes
305	"public class A {public void logout(KeycloakDeployment deployment) {try {ServerRequest.invokeLogout(deployment, refreshToken);} catch (Exception e) {log.error(""failed to invoke remote logout"", e);}}}"	No
306	"public class A {@Overridepublic Status update(String table, String key, Map<String, ByteIterator> values) {try {Set<String> fields = values.keySet();PreparedStatement stmt = updateStmts.get(fields);if (stmt == null) {Update updateStmt = QueryBuilder.update(table);for (String field : fields) {updateStmt.with(QueryBuilder.set(field, QueryBuilder.bindMarker()));}updateStmt.where(QueryBuilder.eq(YCSB_KEY, QueryBuilder.bindMarker()));stmt = session.prepare(updateStmt);stmt.setConsistencyLevel(writeConsistencyLevel);if (trace) {stmt.enableTracing();}PreparedStatement prevStmt = updateStmts.putIfAbsent(new HashSet(fields), stmt);if (prevStmt != null) {stmt = prevStmt;}}if (logger.isDebugEnabled()) {logger.debug(stmt.getQueryString());logger.debug(""key = {}"", key);for (Map.Entry<String, ByteIterator> entry : values.entrySet()) {logger.debug(""{} = {}"", entry.getKey(), entry.getValue());}}ColumnDefinitions vars = stmt.getVariables();BoundStatement boundStmt = stmt.bind();for (int i = 0; i < vars.size() - 1; i++) {boundStmt.setString(i, values.get(vars.getName(i)).toString());}boundStmt.setString(vars.size() - 1, key);session.execute(boundStmt);return Status.OK;} catch (Exception e) {logger.error(MessageFormatter.format(""Error updating key: {}"", key).getMessage(), e);}return Status.ERROR;}}"	No
307	"public class A {public static void get(HttpServletRequest request, HttpServletResponse response, boolean v1)throws IOException {response.setContentType(""application/json; charset=utf-8"");boolean allParameters = false;String param = request.getParameter(""param"");String url = request.getRequestURI();String fileName = ManagementInterfaceUtils.getFileName(url);if (!(fileName.startsWith(""agent_""))) {response.setStatus(HttpServletResponse.SC_BAD_REQUEST);response.getWriter().println(""{\""success\"":\""false\"",""+ ""\""error\"":\""Agent file name must start with 'agent_'\""}"");return;}if (param == null) {allParameters = true;} else if (param.equals("""")) {response.setStatus(HttpServletResponse.SC_BAD_REQUEST);response.getWriter().println(""{\""success\"":\""false\"",\""error\"":\""Parse error, empty parameter (param_name). Check""+ "" it for errors\""}"");LOGGER.error(""Parse error, empty parameter (param_name). Check it for errors."");return;}String pathToFile;if (v1) {pathToFile = url.substring(29);} else {pathToFile = url.substring(26);}File file = new File(pathToFile);if (file.exists()) {FileInputStream fileInputStream = new FileInputStream(file);Properties properties = new Properties();properties.load(fileInputStream);JSONObject jsonObject = new JSONObject();if (allParameters) {jsonObject.put(""agent"", properties);} else {String property = properties.getProperty(param);if (property != null) {jsonObject.put(param, properties.getProperty(param));} else {response.setStatus(HttpServletResponse.SC_BAD_REQUEST);response.getWriter().println(""{\""success\"":\""false\"",""+ ""\""result\"":\""Param '""+ param+ ""' not found in the agent\""}"");return;}}response.getWriter().println(""{\""success\"":\""true\"",\""result\"":"" + jsonObject + """");response.setStatus(HttpServletResponse.SC_OK);} else {response.getWriter().println(""{\""success\"":\""false\"",\""result\"":\""File not found in the path received\""}"");response.setStatus(HttpServletResponse.SC_BAD_REQUEST);}}}"	Yes
308	"public class A {@Overridepublic PutObjectResult putObject(PutObjectRequest putObjectRequest, AmazonS3 s3Client) {String s3BucketName = putObjectRequest.getBucketName();InputStream inputStream = putObjectRequest.getInputStream();ObjectMetadata metadata = putObjectRequest.getMetadata();if (metadata == null) {metadata = new ObjectMetadata();}File file = putObjectRequest.getFile();if (file != null) {try {inputStream = new FileInputStream(file);metadata.setContentLength(file.length());} catch (FileNotFoundException e) {throw new IllegalArgumentException(""File not found "" + file, e);}}String s3ObjectKey = putObjectRequest.getKey();String s3ObjectVersion =MOCK_S3_BUCKET_NAME_VERSIONING_ENABLED.equals(putObjectRequest.getBucketName())? UUID.randomUUID().toString(): null;String s3ObjectKeyVersion = s3ObjectKey + (s3ObjectVersion != null ? s3ObjectVersion : """");byte[] s3ObjectData;try {s3ObjectData = IOUtils.toByteArray(inputStream);metadata.setContentLength(s3ObjectData.length);} catch (IOException e) {throw new IllegalArgumentException(""Error converting input stream into byte array"", e);} finally {try {inputStream.close();} catch (IOException e) {}}metadata.setLastModified(new Date());MockS3Bucket mockS3Bucket = getOrCreateBucket(s3BucketName);MockS3Object mockS3Object = new MockS3Object();mockS3Object.setKey(s3ObjectKey);mockS3Object.setVersion(s3ObjectVersion);mockS3Object.setData(s3ObjectData);mockS3Object.setObjectMetadata(metadata);if (putObjectRequest.getTagging() != null) {mockS3Object.setTags(putObjectRequest.getTagging().getTagSet());}mockS3Bucket.getObjects().put(s3ObjectKey, mockS3Object);mockS3Bucket.getVersions().put(s3ObjectKeyVersion, mockS3Object);return new PutObjectResult();}}"	Yes
309	"public class A {@Overridepublic void close() throws GuacamoleException {AuthenticatedUser authenticatedUser = session.getAuthenticatedUser();fireTunnelClosedEvent(authenticatedUser, authenticatedUser.getCredentials(), tunnel);long connectionEndTime = System.currentTimeMillis();long duration = connectionEndTime - connectionStartTime;try {session.removeTunnel(getUUID().toString());super.close();} catch (GuacamoleUnauthorizedException e) {if (authenticationService.destroyGuacamoleSession(authToken))logger.debug(""Implicitly invalidated session for token \""{}\""."", authToken);throw e;}}}"	Yes
310	"public class A {@POST(path = ""/backend/config/gauges/update"", permission = ""agent:config:edit:gauge"")String updateGauge(@BindAgentId String agentId, @BindRequest GaugeConfigDto gaugeConfigDto)throws Exception {GaugeConfig gaugeConfig = gaugeConfigDto.convert();String version = gaugeConfigDto.version().get();try {configRepository.updateGaugeConfig(agentId, gaugeConfig, version);} catch (DuplicateMBeanObjectNameException e) {throw new JsonServiceException(CONFLICT, ""mbeanObjectName"");}return getGaugeResponse(agentId, gaugeConfig);}}"	Yes
311	public class A {@Overridepublic void backup(final Collection colection, final SAXSerializer serializer) {for (final Plug plugin : jacks.values()) {if (plugin instanceof BackupHandler) {try {((BackupHandler) plugin).backup(colection, serializer);} catch (final Exception e) {LOG.error(e.getMessage(), e);}}}}}	No
312	"public class A {@Overridepublic void onSuccessfulConnection(Address address) {logger.info(""Successful connection: "" + address);}}"	No
313	"public class A {@Overridepublic SimpleExchangeManagementResponseMessageType listOrganizationByHCIDList(ListOrganizationsByHCIDListRequestMessageType request) {SimpleExchangeManagementResponseMessageType response;String exchangeName =StringUtils.isBlank(request.getExchangeName()) ? null : request.getExchangeName().trim();if (CollectionUtils.isEmpty(request.getHcidList())) {return buildSimpleResponse(Boolean.FALSE, ""HCID is required."");}try {OrganizationListType orglist =buildOrganizationListType(getExchangeManager().getOrganizationSet(request.getHcidList(), exchangeName));response = buildSimpleResponse(Boolean.TRUE, ACT_SUCCESSFUL);response.setOrganizationList(orglist);} catch (ExchangeManagerException ex) {response = buildSimpleResponse(Boolean.FALSE, ACT_FAIL);}return response;}}"	Yes
314	public class A {public void addReasonerFactories(Set<ProtegeOWLReasonerPlugin> plugins) {for (ProtegeOWLReasonerPlugin plugin : plugins) {try {ProtegeOWLReasonerInfo factory = plugin.newInstance();factory.initialise();reasonerFactories.add(factory);} catch (Throwable t) {}}}}	Yes
315	"public class A {protected void registerDevice(String ownId, OpenWebNetThingHandler thingHandler) {if (registeredDevices.containsKey(ownId)) {logger.warn(""registering device with an existing ownId={}"", ownId);}registeredDevices.put(ownId, thingHandler);logger.debug(""registered device ownId={}, thing={}"", ownId, thingHandler.getThing().getUID());}}"	No
316	"public class A {public MbZielobjZusatz findById(sernet.gs.reveng.MbZielobjZusatzId id) {try {MbZielobjZusatz instance =(MbZielobjZusatz)sessionFactory.getCurrentSession().get(""sernet.gs.reveng.MbZielobjZusatz"", id);if (instance == null) {log.debug(""get successful, no instance found"");} else {log.debug(""get successful, instance found"");}return instance;} catch (RuntimeException re) {throw re;}}}"	Yes
317	"public class A {public static void deleteHTable(TableName tableName) throws IOException {Admin admin = HBaseConnection.get(KylinConfig.getInstanceFromEnv().getStorageUrl()).getAdmin();try {if (admin.tableExists(tableName)) {logger.info(""disabling hbase table "" + tableName);admin.disableTable(tableName);logger.info(""deleting hbase table "" + tableName);admin.deleteTable(tableName);}} finally {IOUtils.closeQuietly(admin);}}}"	No
318	"public class A {@Overridepublic void visit(FilterModelChange change) {FilterModel model = change.getFilterModel();Set<String> done = new HashSet<>();if (change.getKind() == OpCode.ADD && model.isDynamic()) {for (OsgiContextModel ocm : change.getContextModels()) {String contextPath = ocm.getContextPath();if (!done.add(contextPath)) {continue;}LOG.info(""Adding dynamic filter to context {}"", contextPath);OsgiContextModel highestRankedModel = null;for (OsgiContextModel cm : model.getContextModels()) {if (cm.getContextPath().equals(contextPath)) {highestRankedModel = cm;break;}}if (highestRankedModel == null) {highestRankedModel = ocm;}PaxWebServletContextHandler sch = contextHandlers.get(contextPath);OsgiServletContext context = osgiServletContexts.get(highestRankedModel);ServletHandler servletHandler = sch.getServletHandler();List<PaxWebFilterMapping> mapping = configureFilterMappings(model);PaxWebFilterHolder holder = new PaxWebFilterHolder(model, context);for (PaxWebFilterMapping m : mapping) {servletHandler.addFilter(holder, m);}}}}}"	No
319	"public class A {@Overridepublic RepositoryCreationResponse createSCMRepository(String scmUrl,Boolean preBuildSyncEnabled,JobNotificationType jobType,Consumer<RepositoryCreated> consumer,Optional<BuildConfiguration> buildConfiguration) {log.trace(""Received request to start RC creation with url autodetect: ""+ scmUrl+ "" (sync enabled? ""+ preBuildSyncEnabled+ "")"");if (StringUtils.isEmpty(scmUrl))throw new InvalidEntityException(""You must specify the SCM URL."");if (scmUrl.contains(config.getInternalScmAuthority())) {validateInternalRepository(scmUrl);validateRepositoryWithInternalURLDoesNotExist(scmUrl, null);SCMRepository scmRepository = createSCMRepositoryFromValues(null, scmUrl, false);consumer.accept(new RepositoryCreated(null, Integer.valueOf(scmRepository.getId())));return new RepositoryCreationResponse(scmRepository);} else {validateRepositoryWithExternalURLDoesNotExist(scmUrl, null);boolean sync = preBuildSyncEnabled == null || preBuildSyncEnabled;Integer taskId = startRCreationTask(scmUrl, sync, jobType, consumer, buildConfiguration);return new RepositoryCreationResponse(taskId);}}}"	No
320	"public class A {public void start(final ZigBeePort serialPort) {this.serialPort = serialPort;timeoutScheduler = ZigBeeExecutors.newSingleThreadScheduledExecutor(""TelegesisTimer"");parserThread =new Thread(""TelegesisFrameHandler"") {@Overridepublic void run() {logger.debug(""TelegesisFrameHandler thread started"");while (!closeHandler) {try {synchronized (commandLock) {if (sentCommand == null) {sendNextFrame();}}int[] responseData = getPacket();if (responseData == null) {continue;}StringBuilder builder = new StringBuilder();for (int value : responseData) {builder.append(String.format(""%c"", value));}logger.debug(""RX Telegesis Data:{}"", builder.toString());TelegesisEvent event = TelegesisEventFactory.getTelegesisFrame(responseData);if (event != null) {notifyEventReceived(event);continue;}synchronized (commandLock) {if (sentCommand != null) {boolean done;try {done = sentCommand.deserialize(responseData);} catch (Exception e) {logger.debug(""Exception deserialising frame {}. Transaction will complete. "",builder.toString(),e);done = true;}if (done) {notifyTransactionComplete(sentCommand);sentCommand = null;}}}} catch (Exception e) {logger.error(""TelegesisFrameHandler exception"", e);}}logger.debug(""TelegesisFrameHandler thread exited."");}};parserThread.setDaemon(true);parserThread.start();}}"	No
321	"public class A {public Boolean setupServer(String key) throws IOException {LOGGER.debug(""Setup all bits on agent: "" + config.getAgentHostname());try {com.trilead.ssh2.Connection sshConnection =SSHCmdHelper.acquireAuthorizedConnection(config.getAgentIp(), config.getAgentSshUserName(), config.getAgentSshPassword());if (sshConnection == null) {throw new ConfigurationException(String.format(""Unable to "" + ""connect to server(IP=%1$s, username=%2$s, "" + ""password=%3$s"",config.getAgentIp(), config.getAgentSshUserName(), config.getAgentSshPassword()));}SCPClient scp = new SCPClient(sshConnection);String userDataScriptDir = ""scripts/vm/hypervisor/ovm3/"";String userDataScriptPath = Script.findScript("""", userDataScriptDir);if (userDataScriptPath == null) {throw new ConfigurationException(""Can not find "" + userDataScriptDir);}String mkdir = ""mkdir -p "" + config.getAgentScriptsDir();if (!SSHCmdHelper.sshExecuteCmd(sshConnection, mkdir)) {throw new ConfigurationException(""Failed "" + mkdir + "" on "" + config.getAgentHostname());}for (String script : config.getAgentScripts()) {script = userDataScriptPath + ""/"" + script;scp.put(script, config.getAgentScriptsDir(), ""0755"");}String prepareCmd =String.format(config.getAgentScriptsDir()+ ""/""+ config.getAgentScript()+ "" --ssl=""+ c.getUseSsl()+ "" ""+ ""--port=""+ c.getPort());if (!SSHCmdHelper.sshExecuteCmd(sshConnection, prepareCmd)) {throw new ConfigurationException(""Failed to insert module on "" + config.getAgentHostname());} else {Thread.sleep(5000);}CloudstackPlugin cSp = new CloudstackPlugin(c);cSp.ovsUploadSshKey(config.getAgentSshKeyFileName(), FileUtils.readFileToString(getSystemVMKeyFile(key)));cSp.dom0CheckStorageHealthCheck(config.getAgentScriptsDir(),config.getAgentCheckStorageScript(),config.getCsHostGuid(),config.getAgentStorageCheckTimeout(),config.getAgentStorageCheckInterval());} catch (Exception es) {LOGGER.error(""Unexpected exception "", es);String msg = ""Unable to install module in agent"";throw new CloudRuntimeException(msg);}return true;}}"	No
322	public class A {public byte[] loadRenderedOutput(ReportRequest request) {try {File outputFile = getReportOutputFile(request);if (outputFile.exists()) {return ReportUtil.readByteArrayFromFile(outputFile);}} catch (Exception e) {}return null;}}	Yes
323	public class A {@Overridepublic void deletePortletFileEntry(long fileEntryId) throws PortalException {try {LocalRepository localRepository =_repositoryProvider.getFileEntryLocalRepository(fileEntryId);if (_isAttachment(localRepository.getFileEntry(fileEntryId))) {_run(FileEntry.class,() -> {localRepository.deleteFileEntry(fileEntryId);return null;});} else {_run(() -> {localRepository.deleteFileEntry(fileEntryId);return null;});}} catch (NoSuchFileEntryException noSuchFileEntryException) {if (_log.isWarnEnabled()) {_log.warn(noSuchFileEntryException, noSuchFileEntryException);}}}}	No
324	public class A {@Overridepublic void logError(Throwable e) {ILogger logger = getLogger();if (e instanceof PartitionStateVersionMismatchException) {if (logger.isFineEnabled()) {logger.fine(e.getMessage(), e);} else {logger.info(e.getMessage());}return;}if (!nodeStartCompleted && e instanceof IllegalStateException) {logger.warning(e.getMessage());if (logger.isFineEnabled()) {logger.fine(e);}return;}super.logError(e);}}	No
325	"public class A {@Overrideprotected void doPost(final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse)throws ServletException {try {if (Math.random() > 0.7d) {httpServletResponse.setStatus(404);httpServletResponse.getWriter().println(""The chaos monkey strikes again!"");httpServletResponse.flushBuffer();} else if (Math.random() < 0.3d) {httpServletResponse.setStatus(401);httpServletResponse.getWriter().println(""The chaos monkey strikes again!"");httpServletResponse.flushBuffer();} else {super.doPost(httpServletRequest, httpServletResponse);}} catch (IOException ioe) {log.debug(""Chaos Monkey ran into problem"", ioe);}}}"	No
326	public class A {private void printSummary(long processedCosmicLines, long ignoredCosmicLines) {NumberFormat formatter = NumberFormat.getInstance();if (invalidPositionLines > 0) {}if (invalidSubstitutionLines > 0) {}if (invalidInsertionLines > 0) {}if (invalidDeletionLines > 0) {}if (invalidDuplicationLines > 0) {}if (invalidMutationCDSOtherReason > 0) {}}}	Yes
327	"public class A {@RequestMapping(value = Constants.WHITELIST_DELETE, method = RequestMethod.DELETE)public void deleteWhitelist(@PathVariable(value = ""id"") String id) {whitelistService.delete(Long.valueOf(id), GtasSecurityUtils.fetchLoggedInUserId());}}"	Yes
328	"public class A {@Overridepublic void onClick(final AjaxRequestTarget target, final UserTO ignore) {model.setObject(restClient.read(model.getObject().getKey()));target.add(altDefaultModal.setContent(new AuditHistoryModal<UserTO>(altDefaultModal,AuditElements.EventCategoryType.LOGIC,""UserLogic"",model.getObject(),IdRepoEntitlement.USER_UPDATE,pageRef) {private static final long serialVersionUID = 959378158400669867L;@Overrideprotected void restore(final String json, final AjaxRequestTarget target) {UserTO original = model.getObject();try {UserTO updated = MAPPER.readValue(json, UserTO.class);UserUR updateReq = AnyOperations.diff(updated, original, false);updateReq.setPassword(null);updateReq.setSecurityAnswer(null);ProvisioningResult<UserTO> result =restClient.update(original.getETagValue(), updateReq);model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));target.add(container);} catch (Exception e) {SyncopeConsoleSession.get().onException(e);}((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);}}));altDefaultModal.header(new Model<>(getString(""auditHistory.title"", new Model<>(new AnyWrapper<>(model.getObject())))));altDefaultModal.show(true);}}"	Yes
329	"public class A {private void GetPercentageFromErrorStream(String input) {Matcher matcher;try {matcher = CACHE.get(PATTERN_FFMPEG).matcher(input);if (matcher.find()) {String dauer = matcher.group().trim();String[] hms = dauer.split("":"");totalSecs =Integer.parseInt(hms[0]) * 3600+ Integer.parseInt(hms[1]) * 60+ Double.parseDouble(hms[2]);}matcher = CACHE.get(PATTERN_SIZE).matcher(input);if (matcher.find()) {String s = matcher.group().trim();if (!s.isEmpty()) {try {final long aktSize = Integer.parseInt(StringUtils.replace(s, ""kB"", """"));mVFilmSize.setAktSize(aktSize * 1_000);long akt = start.startZeit.diffInSekunden();if (oldSecs < akt - 5) {start.bandbreite = (aktSize - oldSize) * 1_000 / (akt - oldSecs);oldSecs = akt;oldSize = aktSize;}} catch (NumberFormatException ignored) {}}}matcher = CACHE.get(PATTERN_TIME).matcher(input);if (totalSecs > 0 && matcher.find()) {String zeit = matcher.group();if (zeit.contains("":"")) {String[] hms = zeit.split("":"");final double aktSecs =Integer.parseInt(hms[0]) * 3600+ Integer.parseInt(hms[1]) * 60+ Double.parseDouble(hms[2]);double d = aktSecs / totalSecs * 100;meldenDouble(d);} else {double aktSecs = Double.parseDouble(zeit);double d = aktSecs / totalSecs * 100;meldenDouble(d);}}} catch (Exception ex) {MessageBus.getMessageBus().publishAsync(new DownloadProgressChangedEvent());}}}"	Yes
330	"public class A {@Overridepublic TSStatus executeNonQueryPlan(PhysicalPlan plan) {TSStatus result;long startTime = Timer.Statistic.META_GROUP_MEMBER_EXECUTE_NON_QUERY.getOperationStartTime();if (PartitionUtils.isGlobalMetaPlan(plan)) {logger.debug(""receive a global meta plan {}"", plan);result = processNonPartitionedMetaPlan(plan);} else {logger.warn(""receive a plan {} could not be processed in local"", plan);result = StatusUtils.UNSUPPORTED_OPERATION;}Timer.Statistic.META_GROUP_MEMBER_EXECUTE_NON_QUERY.calOperationCostTimeFromStart(startTime);return result;}}"	No
331	"public class A {@Overridepublic void onMessage(final Message message) {try {configureAuthentication();updateService.updateDocumentElement((DocumentElement) ((ObjectMessage) message).getObject());} catch (final JMSException e) {LOGGER.warn(""Error loading riksdagen document"", e);} finally {clearAuthentication();}}}"	No
332	"public class A {private Map<String, List<String>> validationMessages(Set<ConstraintViolation<?>> failures) {Map<String, List<String>> mp = new HashMap<>();for (ConstraintViolation<?> failure : failures) {logger.debug(failure.getPropertyPath().toString() + "": "" + failure.getMessage());String property = failure.getPropertyPath().toString();if (mp.containsKey(property)) {mp.get(failure.getPropertyPath().toString()).add(failure.getMessage());} else {List<String> list = new ArrayList<>();list.add(failure.getMessage());mp.put(property, list);}}return mp;}}"	No
333	public class A {@Overrideprotected boolean generate(ByteBufferPool.Lease lease) {int dataRemaining = getDataBytesRemaining();int sessionSendWindow = getSendWindow();int streamSendWindow = stream.updateSendWindow(0);int window = Math.min(streamSendWindow, sessionSendWindow);if (window <= 0 && dataRemaining > 0) return false;int length = Math.min(dataRemaining, window);DataFrame dataFrame = (DataFrame) frame;int frameBytes = generator.data(lease, dataFrame, length);this.frameBytes += frameBytes;this.frameRemaining += frameBytes;int dataBytes = frameBytes - Frame.HEADER_LENGTH;this.dataBytes += dataBytes;this.dataRemaining -= dataBytes;if (LOG.isDebugEnabled())flowControl.onDataSending(stream, dataBytes);stream.updateClose(dataFrame.isEndStream(), CloseState.Event.BEFORE_SEND);return true;}}	Yes
334	"public class A {private List<GluuSimplePerson> loadSourceServerEntries(CacheRefreshConfiguration cacheRefreshConfiguration,LdapServerConnection[] sourceServerConnections)throws SearchException {Filter customFilter =cacheRefreshService.createFilter(cacheRefreshConfiguration.getCustomLdapFilter());String[] keyAttributes = getCompoundKeyAttributes(cacheRefreshConfiguration);String[] keyAttributesWithoutValues =getCompoundKeyAttributesWithoutValues(cacheRefreshConfiguration);String[] keyObjectClasses = getCompoundKeyObjectClasses(cacheRefreshConfiguration);String[] sourceAttributes = getSourceAttributes(cacheRefreshConfiguration);String[] twoLettersArray = createTwoLettersArray();String[] returnAttributes =ArrayHelper.arrayMerge(keyAttributesWithoutValues, sourceAttributes);Set<String> addedDns = new HashSet<String>();List<GluuSimplePerson> sourcePersons = new ArrayList<GluuSimplePerson>();for (LdapServerConnection sourceServerConnection : sourceServerConnections) {String sourceServerName = sourceServerConnection.getSourceServerName();PersistenceEntryManager sourcePersistenceEntryManager =sourceServerConnection.getPersistenceEntryManager();String[] baseDns = sourceServerConnection.getBaseDns();for (String keyAttributeStart : twoLettersArray) {Filter filter =cacheRefreshService.createFilter(keyAttributes, keyObjectClasses, keyAttributeStart, customFilter);if (log.isDebugEnabled()) {log.trace(""Using next filter to load entris from source server: {}"", filter);}for (String baseDn : baseDns) {List<GluuSimplePerson> currentSourcePersons =sourcePersistenceEntryManager.findEntries(baseDn,GluuSimplePerson.class,filter,SearchScope.SUB,returnAttributes,null,0,0,cacheRefreshConfiguration.getLdapSearchSizeLimit());for (GluuSimplePerson currentSourcePerson : currentSourcePersons) {currentSourcePerson.setSourceServerName(sourceServerName);String currentSourcePersonDn = currentSourcePerson.getDn().toLowerCase();if (!addedDns.contains(currentSourcePersonDn)) {sourcePersons.add(currentSourcePerson);addedDns.add(currentSourcePersonDn);}}}}}return sourcePersons;}}"	No
335	"public class A {@Override@SuppressFBWarnings(""BC_UNCONFIRMED_CAST_OF_RETURN_VALUE"")protected NetconfServerSession getSession(NetconfServerSessionListener sessionListener, Channel channel, NetconfHelloMessage message) {Optional<NetconfHelloMessageAdditionalHeader> additionalHeader = message.getAdditionalHeader();NetconfHelloMessageAdditionalHeader parsedHeader;if (additionalHeader.isPresent()) {parsedHeader = additionalHeader.get();} else {parsedHeader =new NetconfHelloMessageAdditionalHeader(UNKNOWN,getHostName(channel.localAddress()).getValue(),getHostName(channel.localAddress()).getKey(),""tcp"",""client"");}return new NetconfServerSession(sessionListener, channel, getSessionPreferences().getSessionId(), parsedHeader);}}"	Yes
336	public class A {@Overridepublic PublicKey getPublicKey() {if (publicKey != null) {return publicKey;}Path keyPath = securityConfig.getKeyLocation(component);if (OzoneSecurityUtil.checkIfFileExist(keyPath, securityConfig.getPublicKeyFileName())) {try {publicKey = keyCodec.readPublicKey();} catch (InvalidKeySpecException | NoSuchAlgorithmException | IOException e) {}}return publicKey;}}	Yes
337	"public class A {public JSONArray getDDMFormFieldTypesJSONArray() throws PortalException {List<DDMFormFieldType> availableDDMFormFieldTypes =_removeDDMFormFieldTypesOutOfScope(_ddmFormFieldTypeServicesTracker.getDDMFormFieldTypes());String serializedFormFieldTypes = serialize(availableDDMFormFieldTypes);JSONArray jsonArray = jsonFactory.createJSONArray(serializedFormFieldTypes);HttpServletRequest httpServletRequest = formAdminRequestHelper.getRequest();HttpServletResponse httpServletResponse = PortalUtil.getHttpServletResponse(renderResponse);for (int i = 0; i < jsonArray.length(); i++) {DDMFormFieldType ddmFormFieldType = availableDDMFormFieldTypes.get(i);JSONObject jsonObject = jsonArray.getJSONObject(i);Class<?> ddmFormFieldTypeSettings = ddmFormFieldType.getDDMFormFieldTypeSettings();DDMForm ddmForm = DDMFormFactory.create(ddmFormFieldTypeSettings);DDMFormLayout ddmFormLayout = DDMFormLayoutFactory.create(ddmFormFieldTypeSettings);DDMFormRenderingContext ddmFormRenderingContext = new DDMFormRenderingContext();ddmFormRenderingContext.setHttpServletRequest(httpServletRequest);ddmFormRenderingContext.setHttpServletResponse(httpServletResponse);ddmFormRenderingContext.setContainerId(""settings"");ddmFormRenderingContext.setLocale(LocaleUtil.fromLanguageId(getDefaultLanguageId()));ddmFormRenderingContext.setPortletNamespace(renderResponse.getNamespace());ddmFormRenderingContext.setViewMode(true);try {Map<String, Object> ddmFormTemplateContext =_ddmFormTemplateContextFactory.create(ddmForm, ddmFormLayout, ddmFormRenderingContext);jsonObject.put(""settingsContext"",jsonFactory.createJSONObject(jsonFactory.looseSerializeDeep(ddmFormTemplateContext)));ThemeDisplay themeDisplay =(ThemeDisplay) httpServletRequest.getAttribute(WebKeys.THEME_DISPLAY);if ((themeDisplay != null) && StringUtil.equals(ddmFormFieldType.getName(), ""rich_text"")) {EditorConfiguration editorConfiguration =EditorConfigurationFactoryUtil.getEditorConfiguration(StringPool.BLANK,ddmFormFieldType.getName(),""ckeditor_classic"",new HashMap<String, Object>(),themeDisplay,RequestBackedPortletURLFactoryUtil.create(httpServletRequest));Map<String, Object> editorConfigurationData = editorConfiguration.getData();jsonObject.put(""editorConfig"", editorConfigurationData.get(""editorConfig""));}} catch (PortalException portalException) {}}return jsonArray;}}"	Yes
338	"public class A {public String getLimitClause() {String ret = limit == 0 ? """" : concat(LIMIT, limit.toString(), OFFSET, offset.toString());LOGGER.debug(concat(""getLimitClause() returns: "", ret));return ret;}}"	No
339	public class A {@Overridepublic Detecting.Detection detect(ByteBuffer buffer) {if (LOG.isDebugEnabled())boolean needMoreBytes = true;for (Detecting detectingConnectionFactory : _detectingConnectionFactories) {Detecting.Detection detection = detectingConnectionFactory.detect(buffer);if (detection == Detecting.Detection.RECOGNIZED) {if (LOG.isDebugEnabled())return Detecting.Detection.RECOGNIZED;}needMoreBytes &= detection == Detection.NEED_MORE_BYTES;}if (LOG.isDebugEnabled())return needMoreBytes ? Detection.NEED_MORE_BYTES : Detection.NOT_RECOGNIZED;}}	Yes
340	"public class A {@Overridepublic void startTimedTask() {executorService.scheduleWithFixedDelay(() -> {try {syncAll();} catch (Exception e) {logger.error(""Sync failed"", e);}},SyncConstant.SYNC_PROCESS_DELAY,SyncConstant.SYNC_PROCESS_PERIOD,TimeUnit.SECONDS);}}"	No
341	public class A {public static void deleteOrganization(long organizationId) throws RemoteException {try {OrganizationServiceUtil.deleteOrganization(organizationId);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
342	"public class A {public static String getSchema() {Connection conn = null;PreparedStatement pstmt = null;ResultSet resultSet = null;try {conn = dataSource.getConnection();pstmt = conn.prepareStatement(""select current_schema()"");resultSet = pstmt.executeQuery();while (resultSet.next()) {if (resultSet.isFirst()) {return resultSet.getString(1);}}} catch (SQLException e) {} finally {ConnectionUtils.releaseResource(resultSet, pstmt, conn);}return """";}}"	Yes
343	"public class A {public void onProcessUnstructuredSSRequest(ProcessUnstructuredSSRequest procUnstrReqInd) {this.logger.debug(""onProcessUnstructuredSSRequest"");TestEvent te =TestEvent.createReceivedEvent(EventType.ProcessUnstructuredSSRequestIndication, procUnstrReqInd, sequence++);this.observerdEvents.add(te);}}"	No
344	"public class A {private boolean downloadBuild(String fileName, URL downloadLink) throws IOException {try (ReadableByteChannel readableByteChannel = Channels.newChannel(downloadLink.openStream());FileOutputStream fos = new FileOutputStream(fileName)) {if (Thread.currentThread().isInterrupted()) {LOGGER.debug(String.format(""Current Thread (%s) is interrupted, clearing interruption."",Thread.currentThread().getId()));Thread.interrupted();}fos.getChannel().transferFrom(readableByteChannel, 0, Long.MAX_VALUE);LOGGER.info(""Successfully Transferred..."");return false;} catch (ClosedByInterruptException ie1) {LOGGER.error(""Getting Error: "" + ie1.getMessage(), ie1);return true;}}}"	Yes
345	"public class A {public UberfireRestResponse updateGroupPermissions(final String groupName, final UpdateSettingRequest permissionsRequest) {UberfireRestResponse response = new UberfireRestResponse();try {Group group = groupManagerService.get(groupName);AuthorizationPolicy authzPolicy = permissionManager.getAuthorizationPolicy();if (permissionsRequest.getHomePage() != null&& permissionValidator.isValidResourceType(ActivityResourceType.PERSPECTIVE, permissionsRequest.getHomePage())) {authzPolicy.setHomePerspective(group, permissionsRequest.getHomePage());}if (permissionsRequest.getPriority() != null) {authzPolicy.setPriority(group, permissionsRequest.getPriority());}PermissionCollection pc = authzPolicy.getPermissions(group);generatePermissionCollection(pc, permissionsRequest);authzPolicy.setPermissions(group, pc);authorizationService.savePolicy(authzPolicy);response.setStatus(Response.Status.OK);response.setMessage(""Group "" + groupName + "" permissions are updated successfully."");} catch (GroupNotFoundException e) {response.setStatus(Response.Status.BAD_REQUEST);response.setMessage(""Group with name "" + groupName + ""doesn't exists"");} catch (Exception e) {String errMsg =e.getClass().getSimpleName()+ "" thrown when trying to update permissions for  '""+ groupName+ ""': ""+ e.getMessage();response.setStatus(Response.Status.INTERNAL_SERVER_ERROR);response.setMessage(errMsg);}return response;}}"	Yes
346	public class A {@Overridepublic void exec(final Agent agent) throws IOException {final XML before =new StrictXML(Deck.UPGRADE.transform(new XMLDocument(new File(this.path))), Deck.SCHEMA);final XML after = new XMLDocument(new Xembler(agent.exec(before)).applyQuietly(before.node()));FileUtils.write(new File(this.path), new StrictXML(after, Deck.SCHEMA).toString(), CharEncoding.UTF_8);}}	Yes
347	"public class A {@Overrideprotected Locale resolveLocale(SiteContext siteContext, HttpServletRequest request) {if (isNotEmpty(request.getHeader(headerName))) {Enumeration<Locale> locales = request.getLocales();while (locales.hasMoreElements()) {Locale locale = locales.nextElement();if (isSupported(locale)) {logger.debug(""Found supported locale '{}' requested by the client"", locale);return locale;} else {logger.debug(""Locale '{}' requested by the client is not supported, will be skipped"", locale);}}} else {}return null;}}"	Yes
348	"public class A {public void setIdleTime(String idleTime) {log.warn(""Parameter 'idleTime' is not supported anymore. ""+ ""Please use 'maxIdleTime' in the repository configuration."");this.idleTime = idleTime;}}"	No
349	"public class A {@Overridepublic boolean supports(AuthenticationToken token) {boolean supported =token != null && token.getCredentials() != null && token instanceof SAMLAuthenticationToken;if (supported) {LOGGER.debug(""Token {} is supported by {}."", token.getClass(), SamlRealm.class.getName());} else if (token != null) {LOGGER.debug(""Token {} is not supported by {}."", token.getClass(), SamlRealm.class.getName());} else {}return supported;}}"	Yes
350	public class A {public static Stream<String> getTopLevelClassesInClasspath(Class<?> clazz) {ClassLoader classLoader = Thread.currentThread().getContextClassLoader();String packageName = clazz.getPackage().getName();String path = packageName.replace('.', '/');Enumeration<URL> resources = null;try {resources = classLoader.getResources(path);} catch (IOException e) {}List<File> directories = new ArrayList<>();while (Objects.requireNonNull(resources).hasMoreElements()) {URL resource = resources.nextElement();try {directories.add(new File(resource.toURI()));} catch (URISyntaxException e) {}}List<String> classes = new ArrayList<>();for (File directory : directories) {classes.addAll(findClasses(directory, packageName));}return classes.stream();}}	Yes
351	"public class A {@PostConstructpublic void init() {logger = LoggerFactory.getLogger(getClass());attributes =Attributes.getComponentAttributesFromFacesConfig(UIDragIndicator.class, getClass());attributes.setAttribute(""rendered"", true);}}"	Yes
352	"public class A {@RestAccessControl(permission = Permission.SUPERUSER)@RequestMapping(value = ""/directory"",method = RequestMethod.DELETE,produces = MediaType.APPLICATION_JSON_VALUE)public ResponseEntity<RestResponse<Map, Map>> deleteDirectory(@RequestParam String currentPath, @RequestParam Boolean protectedFolder) {logger.debug(""delete directory {} - protected {}"", currentPath, protectedFolder);this.getFileBrowserService().deleteDirectory(currentPath, protectedFolder);return this.executeDirectoryRespose(currentPath, protectedFolder);}}"	No
353	"public class A {void put(Source<KeyValueSlice> source, long size) throws IOException, InterruptedException {long t0 = -1;if (LOG.isDebugEnabled()) {t0 = System.currentTimeMillis();}File file = createTemporaryFile();boolean success = false;try {try (DataOutputStream output = createBlockFileOutput(file)) {while (source.next()) {KeyValueSlice slice = source.get();output.writeInt(slice.getKeyLength());output.writeInt(slice.getValueLength());output.write(slice.getBytes(), slice.getSliceOffset(), slice.getSliceLength());}output.writeInt(-1);}files.add(file);success = true;} finally {if (success == false) {deleteTemporaryFile(file);}}if (LOG.isDebugEnabled()) {long t1 = System.currentTimeMillis();LOG.debug(MessageFormat.format(""saved block file: {0} (data={1}->{2}bytes, compress={3}, elapsed={4}ms)"",file, size, file.length(), compress, t1 - t0));}totalSize += size;}}"	No
354	"public class A {@Overridepublic Collection<InputFile> next(SizeValidator validator) {int size = inputs.size();if (size == 0) return Collections.EMPTY_SET;Collection<InputFile> list = new HashSet<>();if (size < fc.getMaxFlags()) {list.addAll(inputs);inputs.clear();} else {int count = 0;Iterator<InputFile> it = inputs.iterator();while (it.hasNext() && (count < fc.getMaxFlags())) {InputFile inFile = it.next();int maps = inFile.getMaps();if (maps > fc.getMaxFlags()) {log.warn(""Estimated map count ({}) for file exceeds maxFlags ({}). Consider increasing""+ "" maxFlags to accommodate larger files, or split this file into smaller chunks.""+ "" File: {}"",maps,fc.getMaxFlags(),inFile.getFileName());}count += maps;if (count > fc.getMaxFlags()) {break;}list.add(inFile);if (validator.isValidSize(fc, list) || (list.size() == 1)) {it.remove();} else {list.remove(inFile);break;}}}return list;}}"	No
355	"public class A {@Overridepublic void invoke(List<TwitterListener> listeners) throws TwitterException {ResponseList<Status> statuses = twitter.getRetweets(statusId);for (TwitterListener listener : listeners) {try {listener.gotRetweets(statuses);} catch (Exception e) {logger.warn(""Exception at getRetweets"", e);}}}}"	No
356	public class A {private void cancelRefreshJob() {synchronized (this) {if (refreshJob != null) {refreshJob.cancel(true);refreshJob = null;}}}}	Yes
357	"public class A {@Overridepublic void update(EventBean[] arg0, EventBean[] arg1) {for (EventBean bean : arg0) {try {beanForwardQueue.put(bean);} catch (InterruptedException e) {log.error(""Could not update due to '{}', exception '{}'"", e.getMessage(), e);return;}}}}"	No
358	"public class A {protected final synchronized void enterState(final DestState current, final DestState next)throws IllegalStateException {verifyState(current);LOG.debug(""{}: entering state {}"", this, next);state = next;}}"	No
359	"public class A {private void readOldEntries() {logger.trace(""Reading old entries"");try (InputStream is = Files.newInputStream(historyFilePath);InputStreamReader isr = new InputStreamReader(is);LineNumberReader in = new LineNumberReader(isr)) {String entryLine;while ((entryLine = in.readLine()) != null) {MVUsedUrl oldHistoryEntry = MVUsedUrl.getUrlAusZeile(entryLine);final var url = oldHistoryEntry.getUrl();if (url.startsWith(""rtmp:"")) {continue;}var okHttpUrl = HttpUrl.parse(url);if (okHttpUrl == null) {continue;}if (oldHistoryEntry.getDatum().isBlank()) continue;historyEntries.add(oldHistoryEntry);}} catch (Exception ex) {logger.error(""readOldEntries()"", ex);}}}"	Yes
360	"public class A {private Class<?> determineExpectedClass(final Node node, final Class<?> fallbackType) {final NamedNodeMap attributes = node.getAttributes();if (attributes != null) {final Node attribute = attributes.getNamedItem(""class"");if (attribute != null) {final String className = attribute.getTextContent();if (!StringUtils.isNullOrEmpty(className)) {try {return Class.forName(className);} catch (final ClassNotFoundException e) {}}}}return fallbackType;}}"	Yes
361	"public class A {private ListenableFuture<ResultSet> rollupOneFromChildren(int rollupLevel,String agentRollupId,String gaugeName,List<String> childAgentRollupIds,long captureTime,int adjustedTTL)throws Exception {List<ListenableFuture<ResultSet>> futures = new ArrayList<>();for (String childAgentRollupId : childAgentRollupIds) {BoundStatement boundStatement = readValueForRollupFromChildPS.bind();int i = 0;boundStatement.setString(i++, childAgentRollupId);boundStatement.setString(i++, gaugeName);boundStatement.setTimestamp(i++, new Date(captureTime));futures.add(session.executeAsync(boundStatement));}return Futures.transformAsync(Futures.allAsList(futures),new AsyncFunction<List<ResultSet>, ResultSet>() {@Overridepublic ListenableFuture<ResultSet> apply(@Nullable List<ResultSet> results)throws Exception {checkNotNull(results);List<Row> rows = new ArrayList<>();for (int i = 0; i < results.size(); i++) {Row row = results.get(i).one();if (row == null) {logger.warn(""no gauge value table records found for agentRollupId={},""+ "" gaugeName={}, captureTime={}, level={}"",childAgentRollupIds.get(i),gaugeName,captureTime,rollupLevel);} else {rows.add(row);}}if (rows.isEmpty()) {return Futures.immediateFuture(DummyResultSet.INSTANCE);}return rollupOneFromRows(rollupLevel, agentRollupId, gaugeName, captureTime, adjustedTTL, rows);}},MoreExecutors.directExecutor());}}"	No
362	public class A {@Overridepublic boolean clientConnected(Client client) {if (!clients.containsKey(client.getClientId())) {clients.putIfAbsent(client.getClientId(), (IpPortBasedClient) client);}return true;}}	Yes
363	"public class A {public Map<String, Class> mapAllClasses(String uri) throws IOException, ClassNotFoundException {Map<String, String> map = mapAllStrings(uri);Map<String, Class> classes = new HashMap<>(map != null ? map.size() : 0);if (map == null) {throw new IllegalStateException(""Null strings map produced for uri: "" + uri);}for (Map.Entry<String, String> entry : map.entrySet()) {String string = entry.getKey();String className = entry.getValue();Class clazz = classLoaderInterface.loadClass(className);classes.put(string, clazz);}return classes;}}"	Yes
364	public class A {@Overridepublic void warn(Object msg) {try {} catch (Exception exception) {printMsg(msg);}}}	Yes
365	"public class A {@RequestMapping(value = ""/getAllCrisisTypes.action"",method = {RequestMethod.GET})@ResponseBodypublic Map<String, Object> getAllCrisis() {try {return getUIWrapper(taggerService.getAllCrisisTypes(), true);} catch (AidrException e) {logger.error(""Error while fetching all crisisTypes"", e);return getUIWrapper(false, e.getMessage());}}}"	No
366	"public class A {@Overridepublic Void call() throws ChunkException {if (!myInitialized) {throw new IllegalStateException(""Not initialized."");}myChunkProvider =VideoChunkProviderFactory.getInstance().createProvider(myStream, myStreamSpan.getStart(), myApproxSizeMS, myFeedName);boolean success = myChunkProvider.provideChunks(this, myNonVideoContentHandler);if (!success) {myChunkProvider =VideoChunkProviderFactory.getInstance().createFailOverProvider(myChunkProvider, myFeedName);if (myChunkProvider != null) {myChunkProvider.provideChunks(this, myNonVideoContentHandler);} else {}}return null;}}"	Yes
367	"public class A {@Overridepublic WonMessage process(final WonMessage message) throws WonMessageProcessingException {WonMessageType type = message.getMessageType();if (type == WonMessageType.SUCCESS_RESPONSE) {type = message.getRespondingToMessageType();}URI webId = message.getRecipientAtomURI();if (type.isConnectionSpecificMessage()) {Optional<URI> connectionURI =WonLinkedDataUtils.getConnectionURIForIncomingMessage(message, linkedDataSource);if (connectionURI.isPresent()) {try {logger.debug(""invalidating events list for atom ""+ message.getRecipientAtomURI()+ "" for connection ""+ connectionURI.get());URI messageContainerUri =WonRelativeUriHelper.createMessageContainerURIForConnection(connectionURI.get());invalidate(messageContainerUri, webId);if (type.causesConnectionStateChange()) {invalidate(connectionURI.get(), webId);}} catch (Exception e) {}}}if (type.causesNewConnection()) {try {URI connectionsListUri =WonRelativeUriHelper.createConnectionContainerURIForAtom(message.getRecipientAtomURI());invalidate(connectionsListUri, webId);} catch (Exception e) {}}if (type.causesAtomStateChange()) {invalidate(message.getRecipientAtomURI(), webId);}return message;}}"	Yes
368	public class A {@Overridepublic void visitValue(PValue value, TransformHierarchy.Node producer) {if (!isStreaming) {if (value instanceof PCollection&& ((PCollection) value).isBounded() == PCollection.IsBounded.UNBOUNDED) {isStreaming = true;}}}}	Yes
369	public class A {public synchronized void beginTransaction() {if (supportsOptimisticConcurrency) {lockManager.lock();}}}	Yes
370	"public class A {private TChannelMessage decodeCallFrame(ChannelHandlerContext ctx, CallFrame frame) {ArgScheme scheme;if (frame.getType() == FrameType.CallRequest) {scheme =ArgScheme.toScheme(((CallRequestFrame) frame).getHeaders().get(TransportHeaders.ARG_SCHEME_KEY));} else {scheme =ArgScheme.toScheme(((CallResponseFrame) frame).getHeaders().get(TransportHeaders.ARG_SCHEME_KEY));}if (!ArgScheme.isSupported(scheme)) {if (frame.getType() == FrameType.CallRequest) {sendError(ErrorType.BadRequest, ""Arg Scheme not specified or unsupported"", frame.getId(), ctx);} else {logger.error(""Arg Scheme not specified or unsupported: {}"", scheme);}return null;}List<CallFrame> frames = new ArrayList<>();frames.add(frame);frame.retain();final TChannelMessage result;boolean release = true;try {if (!hasMore(frame)) {result = MessageCodec.decodeCallFrames(frames);} else {callFrames.put(frame.getId(), frames);result = null;}release = false;} finally {if (release) {frame.release();}}if (result != null) {result.touch(""finished MessageDefragmenter.decodeCallFrame"");}return result;}}"	No
371	"public class A {@Test(groups = {""TestScaleService""})public void testFindSwapDisk() {DiskEntity swapDisk = scaleService.findSwapDisk(nodeEntity);Assert.assertTrue(swapDisk.getName() == SWAP_DISK_NAME, ""swap disk should be "" + SWAP_DISK_NAME);}}"	Yes
372	public class A {@Benchmarkpublic void fastLogger_infoLogStatement_lambda_benchmark_02() {fastLogger.info(() -> message);}}	No
373	"public class A {public StgMbBaustTxt merge(StgMbBaustTxt detachedInstance) {log.debug(""merging StgMbBaustTxt instance"");try {StgMbBaustTxt result =(StgMbBaustTxt) sessionFactory.getCurrentSession().merge(detachedInstance);log.debug(""merge successful"");return result;} catch (RuntimeException re) {throw re;}}}"	Yes
374	"public class A {public static InetAddress getLocalHost(Properties props) {String addr = props.getProperty(""jcifs.smb.client.laddr"");if (addr != null) {try {return InetAddress.getByName(addr);} catch (UnknownHostException uhe) {}}return null;}}"	Yes
375	"public class A {public boolean awaitTermination(long timeout, @NotNull TimeUnit unit)throws InterruptedException {if (!executor.isShutdown())throw new IllegalStateException(String.format(""AsyncProcessor{%s} hasn't been shut down yet"", name));if (executor.awaitTermination(timeout, unit)) {return true;} else {return false;}}}"	Yes
376	public class A {public void setGiverRelationship(com.secretpal.model.SPPerson value) {if (_SPSecretPal.LOG.isDebugEnabled()) {}if (er.extensions.eof.ERXGenericRecord.InverseRelationshipUpdater.updateInverseRelationships()) {setGiver(value);} else if (value == null) {com.secretpal.model.SPPerson oldValue = giver();if (oldValue != null) {removeObjectFromBothSidesOfRelationshipWithKey(oldValue, _SPSecretPal.GIVER_KEY);}} else {addObjectToBothSidesOfRelationshipWithKey(value, _SPSecretPal.GIVER_KEY);}}}	Yes
377	"public class A {protected void initSystemZNode() {try {persist(getMasterZNodeParentPath(), """");persist(getWorkerZNodeParentPath(), """");persist(getDeadZNodeParentPath(), """");logger.info(""initialize server nodes success."");} catch (Exception e) {logger.error(""init system znode failed"", e);}}}"	No
378	"public class A {@Overridepublic void refresh() {try {TokenRefreshResponse refreshResponse = tokenRefresher.getNewToken(refreshToken);if (refreshResponse == null) {throw new InvalidOauthTokenException();}apiToken = refreshResponse.getAccessToken();tokenExpiration = new TokenExpiration(refreshResponse.getExpiresIn());} catch (IOException e) {LOG.error(""Exception while attempting to refresh access token"");throw new RuntimeException(e);}}}"	No
379	"public class A {private void handleLinkButtonNotPressed(LinkButtonException ex) {updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.CONFIGURATION_ERROR,""@text/offline.conf-error-press-pairing-button"");}}"	Yes
380	public class A {public static void tryDeleteFile(@Nullable File file) {if (file != null) {if (!file.delete()) {file.deleteOnExit();}}}}	Yes
381	"public class A {private static Value min(Value value) {if (value.type == ValueType.LIST) {Value min = null;for (Value v : value.getList()) {if (min == null) {min = v;} else if (min.type.canBeLong() && v.type.canBeLong()) {min = min.getLong() <= v.getLong() ? min : v;} else if (min.type.canBeDouble() && v.type.canBeDouble()) {min = min.getDouble() <= v.getDouble() ? min : v;} else {throw new IllegalArgumentException(""min("" + value + "")"");}}if (min == null) {throw new IllegalArgumentException(""min of 0 values"");}return min;} else {return value;}}}"	Yes
382	"public class A {public void processReadyCommand(final Command cmd) {final ReadyCommand ready = (ReadyCommand) cmd;Boolean humanReadable = ready.getEnableHumanReadableSizes();if (humanReadable != null) {NumbersUtil.enableHumanReadableSizes = humanReadable;}if (ready.getHostId() != null) {setId(ready.getHostId());}processManagementServerList(ready.getMsHostList(), ready.getLbAlgorithm(), ready.getLbCheckInterval());s_logger.info(""Ready command is processed for agent id = "" + getId());}}"	Yes
383	"public class A {public static com.liferay.layout.page.template.model.LayoutPageTemplateCollectionaddLayoutPageTemplateCollection(HttpPrincipal httpPrincipal,long groupId,String name,String description,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(LayoutPageTemplateCollectionServiceUtil.class,""addLayoutPageTemplateCollection"",_addLayoutPageTemplateCollectionParameterTypes0);MethodHandler methodHandler =new MethodHandler(methodKey, groupId, name, description, serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.layout.page.template.model.LayoutPageTemplateCollection) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
384	"public class A {OpenCGAResult<Object> privateDelete(ClientSession clientSession, Document jobDocument)throws CatalogDBException {long tmpStartTime = startQuery();String jobId = jobDocument.getString(QueryParams.ID.key());long jobUid = jobDocument.getLong(PRIVATE_UID);long studyUid = jobDocument.getLong(PRIVATE_STUDY_UID);nestedPut(QueryParams.INTERNAL_STATUS.key(),getMongoDBDocument(new Status(Status.DELETED), ""status""),jobDocument);Bson query =new Document().append(QueryParams.ID.key(), jobId).append(PRIVATE_STUDY_UID, studyUid);deletedJobCollection.update(clientSession,query,new Document(""$set"", jobDocument),new QueryOptions(MongoDBCollection.UPSERT, true));query = new Document().append(PRIVATE_UID, jobUid).append(PRIVATE_STUDY_UID, studyUid);DataResult remove = jobCollection.remove(clientSession, query, null);if (remove.getNumMatches() == 0) {throw new CatalogDBException(""Job "" + jobId + "" not found"");}if (remove.getNumDeleted() == 0) {throw new CatalogDBException(""Job "" + jobId + "" could not be deleted"");}return endWrite(tmpStartTime, 1, 0, 0, 1, null);}}"	Yes
385	"public class A {protected <T> T deserialize(String content, Class<T> type) {if (content == null || content.isEmpty()) {return null;}try {return marshaller.unmarshall(content, type);} catch (MarshallingException e) {throw new KieServicesException(""Error while deserializing data received from server!"", e);}}}"	Yes
386	public class A {private void takeAndProcessTask() {while (true) {try {buildQueue.take(task -> {processBuildTask(task);});} catch (InterruptedException e) {break;}}}}	Yes
387	"public class A {public void doServeResource(PortletWindow portletWindow, HttpServletRequest request, HttpServletResponse response)throws PortletException, IOException, PortletContainerException {ensureInitialized();debugWithName(""Resource request received for portlet: ""+ portletWindow.getPortletDefinition().getPortletName());PortletRequestContextService rcService =getContainerServices().getPortletRequestContextService();PortletEnvironmentService envService = getContainerServices().getPortletEnvironmentService();PortletInvokerService invoker = getContainerServices().getPortletInvokerService();PortletResourceRequestContext requestContext =rcService.getPortletResourceRequestContext(this, request, response, portletWindow);PortletResourceResponseContext responseContext =rcService.getPortletResourceResponseContext(this, request, response, portletWindow, requestContext);responseContext.setPropsAllowed(true);ResourceRequest portletRequest =envService.createResourceRequest(requestContext, responseContext);ResourceResponse portletResponse =envService.createResourceResponse(responseContext, requestContext.getCacheability());requestContext.setResponse(portletResponse);FilterManager filterManager =filterInitialisation(portletWindow, PortletRequest.RESOURCE_PHASE);try {invoker.serveResource(requestContext, portletRequest, portletResponse, filterManager);} finally {if (!request.isAsyncSupported() || !request.isAsyncStarted()) {responseContext.close();responseContext.release();} else {}}debugWithName(""Portlet resource done for: "" + portletWindow.getPortletDefinition().getPortletName());}}"	Yes
388	public class A {public static com.liferay.push.notifications.model.PushNotificationsDeviceSoapdeletePushNotificationsDevice(String token) throws RemoteException {try {com.liferay.push.notifications.model.PushNotificationsDevice returnValue =PushNotificationsDeviceServiceUtil.deletePushNotificationsDevice(token);return com.liferay.push.notifications.model.PushNotificationsDeviceSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
389	"public class A {@Testpublic void testCounty() throws Exception {log.info(""------  testCounty  ------"");String county = ""'clackamas'"";String query = GroupedNormalField.LARGE_COUNTIES.name() + EQ_OP + county;runTest(query, query);}}"	No
390	"public class A {public String toString(String tabs, double thresholdEntropy, double thresholdP, int thresholdCount) {if (getTotalCount() == 0) return """";StringBuilder sb = new StringBuilder();double p[] = p();for (int idx = 0; idx < 4; idx++) {char base = BASES[idx];AcgtTree n = nodes[idx];if (n != null) {sb.append(String.format(""%s%s%s: %d\te:%4.3f\tp:%4.2f\n"",tabs, name, base, counts[idx], n.entropy(), p[idx]));if (((n.entropy() <= thresholdEntropy) || (p[idx] >= thresholdP))&& (counts[idx] >= thresholdCount)) {sb.append(n.toString(tabs + ""\t"", thresholdEntropy, thresholdP, thresholdCount));}}}return sb.toString();}}"	Yes
391	public class A {@Overridepublic boolean verify(byte[] document, Signature signature, Credential credential) {Objects.requireNonNull(document);SigData sigData;SignatureCredential signatureCredential;signatureCredential = getSignatureCredential(credential);sigData = getSigData(signature);if (log.isTraceEnabled()) {}sigData.setVerified(Crypto.verify(sigData.bytes(), document, signatureCredential.getKey()));if (log.isTraceEnabled()) {}return sigData.isVerified();}}	Yes
392	"public class A {@Overridepublic void start() {try {Class.forName(this.dbConsumerConfiguration.getDriver());connection =DriverManager.getConnection(this.dbConsumerConfiguration.getUrl(),this.dbConsumerConfiguration.getUsername(),this.dbConsumerConfiguration.getPassword());logger.info(""  - Started embedded managed component [DbMessageProvider]"");} catch (Exception e) {throw new RuntimeException(e);}}}"	No
393	public class A {@Overridepublic boolean isValidRequestState(final WebContext context) {final String state = context.getRequestParameter(AuthorizeRequestParam.STATE);final Object sessionState = context.getSessionAttribute(getName() + SESSION_STATE_PARAMETER);final boolean emptySessionState = StringHelper.isEmptyString(sessionState);if (emptySessionState) {return false;}final boolean result = StringHelper.equals(state, (String) sessionState);return result;}}	Yes
394	"public class A {private void calculateBestImplementationDACandidates(final AbstractNodeTemplate nodeTemplate,final List<AbstractNodeTypeImplementation> impls,final List<IPlanBuilderPrePhaseDAPlugin<?>> plugins,final List<AbstractNodeTemplate> infraNodes,final OperationChain chain) {final List<DANodeTypeImplCandidate> candidates = new ArrayList<>();for (final AbstractNodeTypeImplementation impl : impls) {LOG.debug(""Checking DAs of NodeTypeImpl {} and NodeTemplate {}"",impl.getName(),nodeTemplate.getId());final DANodeTypeImplCandidate candidate = new DANodeTypeImplCandidate(nodeTemplate, impl);final List<AbstractDeploymentArtifact> effectiveDAs =calculateEffectiveDAs(nodeTemplate, impl);for (final AbstractDeploymentArtifact da : effectiveDAs) {for (final AbstractNodeTemplate infraNode : infraNodes) {for (final IPlanBuilderPrePhaseDAPlugin plugin : plugins) {if (plugin.canHandle(da, infraNode.getType())) {candidate.add(da, infraNode, plugin);}}}}if (candidate.isValid()) {LOG.debug(""Generated Candidate was valid, adding to all Candidates"");candidates.add(candidate);} else {}}chain.daCandidates = candidates;}}"	Yes
395	"public class A {public static Integer getNullLabelID(int attributeID) {String sql =""select nominalLabelID from nominal_label where nominalAttributeID=""+ attributeID+ "" and nominalLabelCode='null'"";Connection conn = null;PreparedStatement query = null;ResultSet result = null;try {conn = getMySqlConnection();query = conn.prepareStatement(sql);result = query.executeQuery();if (result.next()) {return result.getInt(1);}} catch (SQLException ex) {logger.error(""Error in executing SQL statement: "" + sql, ex);} finally {close(result);close(query);close(conn);}return null;}}"	No
396	"public class A {@Overridepublic Void call(Object arg) throws Exception {_logger.info(""Shutdown of asynchbase client complete."");return null;}}"	No
397	"public class A {private void jsonError(String message) {setResponse(""{\""error\"":\"""" + message + ""\""}"");LOG.debug(""Error message return from RPC call: {}"", message);}}"	No
398	"public class A {private CredentialsProvider determineCredentialsProvider() {final CredentialsProvider provider = innerBuilder.getCredentialsProvider();if (provider == null) {ensureNotNull(""cluster id"", clusterId);ensureNotNull(""client id"", clientId);ensureNotNull(""client secret"", clientSecret);final OAuthCredentialsProviderBuilder builder = new OAuthCredentialsProviderBuilder();return builder.audience(String.format(""%s.%s"", clusterId, BASE_ADDRESS)).clientId(clientId).clientSecret(clientSecret).authorizationServerUrl(BASE_AUTH_URL).build();} else {Loggers.LOGGER.debug(""Expected to use 'cluster id', 'client id' and 'client secret' to set credentials""+ "" provider in the client cloud builder, but overwriting with explicitly defined""+ "" credentials provider."");return provider;}}}"	No
399	"public class A {@Overridepublic Maybe<Object> getConfigRaw(ConfigKey<?> key, boolean includeInherited) {if (ownConfig.containsKey(key)) {return Maybe.of(ownConfig.get(key));}for (String deprecatedName : key.getDeprecatedNames()) {ConfigKey<?> deprecatedKey = ConfigKeys.newConfigKeyRenamed(deprecatedName, key);if (ownConfig.containsKey(deprecatedKey)) {return Maybe.of(ownConfig.get(deprecatedKey));}}if (key instanceof AbstractStructuredConfigKey) {Object result = ((AbstractStructuredConfigKey) key).rawValue(ownConfig);if (result instanceof Iterable) {if (!((Iterable) result).iterator().hasNext())return Maybe.absent(""No value for structured collection key "" + key);} else if (result instanceof Map) {if (((Map) result).isEmpty()) return Maybe.absent(""No value for structured map key "" + key);} else {}return Maybe.ofDisallowingNull(result);}if (!includeInherited || getParent() == null) return Maybe.absent();return getParentInternal().config().getInternalConfigMap().getConfigRaw(key, includeInherited);}}"	Yes
400	public class A {@Overridepublic LayoutPageTemplateStructure remove(Serializable primaryKey)throws NoSuchPageTemplateStructureException {Session session = null;try {session = openSession();LayoutPageTemplateStructure layoutPageTemplateStructure =(LayoutPageTemplateStructure)session.get(LayoutPageTemplateStructureImpl.class, primaryKey);if (layoutPageTemplateStructure == null) {if (_log.isDebugEnabled()) {_log.debug(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}throw new NoSuchPageTemplateStructureException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return remove(layoutPageTemplateStructure);} catch (NoSuchPageTemplateStructureException noSuchEntityException) {throw noSuchEntityException;} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}}	No
401	"public class A {public static PubsubSubscription fromPath(String path) {if (path.startsWith(SUBSCRIPTION_RANDOM_TEST_PREFIX)|| path.startsWith(SUBSCRIPTION_STARTING_SIGNAL)) {return new PubsubSubscription(Type.FAKE, """", path);}String projectName, subscriptionName;Matcher v1beta1Match = V1BETA1_SUBSCRIPTION_REGEXP.matcher(path);if (v1beta1Match.matches()) {LOG.warn(""Saw subscription in v1beta1 format. Subscriptions should be in the format ""+ ""projects/<project_id>/subscriptions/<subscription_name>"");projectName = v1beta1Match.group(1);subscriptionName = v1beta1Match.group(2);} else {Matcher match = SUBSCRIPTION_REGEXP.matcher(path);if (!match.matches()) {throw new IllegalArgumentException(""Pubsub subscription is not in ""+ ""projects/<project_id>/subscriptions/<subscription_name> format: ""+ path);}projectName = match.group(1);subscriptionName = match.group(2);}validateProjectName(projectName);validatePubsubName(subscriptionName);return new PubsubSubscription(Type.NORMAL, projectName, subscriptionName);}}"	No
402	public class A {public void shutdown() {for (int i = 0; i < numberOfPartition; i++) {executors.get(i).shutdown();}try {for (int i = 0; i < numberOfPartition; i++) {executors.get(i).awaitTermination(threadTerminationMaxTime, TimeUnit.NANOSECONDS);}} catch (InterruptedException e) {}}}	Yes
403	"public class A {@Overridepublic void opening(String table, String shard, BlurIndex index) {Map<String, String> properties = _configuration.getProperties();for (Entry<String, String> entry : properties.entrySet()) {if (isFilterAlias(entry.getKey())) {String value = entry.getValue();if (value == null || value.isEmpty()) {continue;}String filterAlias = getFilterAlias(entry.getKey());String filterQuery = value;Map<String, String> map = getThisTablesMap(table);LOG.info(""Loading filter alias [{0}] with query [{1}] for table [{2}]"",filterAlias, filterQuery, table);map.put(filterAlias, filterQuery);}}}}"	No
404	"public class A {private MongoClientURI parseURL(String url, Properties defaults) {if (url == null) {return null;}if (!StringUtils.startsWithIgnoreCase(url, PREFIX)) {return null;}if (defaults.getProperty(""user"") != null && defaults.getProperty(""password"") != null) {url =url.replace(PREFIX,PREFIX + defaults.getProperty(""user"") + "":"" + defaults.getProperty(""password"") + ""@"");}LOGGER.info(""Mongodb url:"" + url);String options = MongoClientPropertyHelper.formatProperties(defaults);LOGGER.debug(""the options:{}"", options);try {return new MongoClientURI(options == null ? url : url + ""?"" + options);} catch (Exception e) {LOGGER.error(""parseURLError"", e);return null;}}}"	No
405	"public class A {private CacheEntry getCache(ProceedingJoinPoint pjp) {String name = getCacheName(pjp);CacheEntry entry = _entries.get(name);if (entry == null) {Method method = _cacheableMethodKeyFactoryManager.getMatchingMethodForJoinPoint(pjp);CacheableMethodKeyFactory keyFactory = getKeyFactory(pjp, method);boolean valueSerializable = isValueSerializable(pjp, method);Cache cache = _cacheManager.getCache(name);if (cache == null) {cache = createCache(pjp, name);if (cache == null) {if (!_cacheManager.cacheExists(name))try {_cacheManager.addCache(name);} catch (ObjectExistsException oee) {}cache = _cacheManager.getCache(name);} else {try {_cacheManager.addCache(cache);} catch (ObjectExistsException oee) {}}}synchronized (_entries) {entry = new CacheEntry(keyFactory, valueSerializable, cache);if (_entries.containsKey(name)) {_log.warn(""concurrent attempt to create cache = "" + name);} else {_entries.put(name, entry);}}}return _entries.get(name);}}"	Yes
406	public class A {private List<Log> getLogsFromOneLogDataFile(File file, Pair<Long, Long> startAndEndOffset) {List<Log> result = new ArrayList<>();if (file.getName().equals(getCurrentLogDataFile().getName())) {forceFlushLogBufferWithoutCloseFile();}try (FileInputStream fileInputStream = new FileInputStream(file);BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream)) {long bytesSkip = bufferedInputStream.skip(startAndEndOffset.left);if (bytesSkip != startAndEndOffset.left) {return result;}long currentReadOffset = bytesSkip;while (currentReadOffset <= startAndEndOffset.right) {int logSize = ReadWriteIOUtils.readInt(bufferedInputStream);Log log = null;log =parser.parse(ByteBuffer.wrap(ReadWriteIOUtils.readBytes(bufferedInputStream, logSize)));result.add(log);currentReadOffset = currentReadOffset + Integer.BYTES + logSize;}} catch (UnknownLogTypeException e) {} catch (IOException e) {}return result;}}	Yes
407	"public class A {private void cleanSCMNodes(String sourceTool, String almKeyProcessedIndex, String almKeysIndex) {GraphDBHandler dbHandler = new GraphDBHandler();try {int processedRecords = 1;while (processedRecords > 0) {long st = System.currentTimeMillis();String scmCleanUpCypher =""MATCH (n:SCM:DATA) where not n:RAW and exists(n.""+ almKeyProcessedIndex+ "") ""+ ""WITH distinct n limit ""+ dataBatchSize+ "" remove n.""+ almKeyProcessedIndex+ "" return count(n)"";GraphResponse response = dbHandler.executeCypherQuery(scmCleanUpCypher);processedRecords =response.getJson().get(ConfigOptions.RESULTS).getAsJsonArray().get(0).getAsJsonObject().get(""data"").getAsJsonArray().get(0).getAsJsonObject().get(""row"").getAsJsonArray().get(0).getAsInt();}} catch (InsightsCustomException e) {log.error(""Unable to extract "" + sourceTool + "" keys from SCM Commit messages"", e);}}}"	Yes
408	"public class A {public void activate(BeanManager bm) {for (Class<?> c : class2Anno.keySet()) {sortedAnnotatedClassNames.add(c.getCanonicalName());}Collections.sort(sortedAnnotatedClassNames);for (Class<?> cls : class2Anno.keySet()) {Set<Bean<?>> beans = bm.getBeans(cls);Bean<?> bean = bm.resolve(beans);assert bean != null;context2Anno.put(bean, class2Anno.get(cls));}if (isTrace) {StringBuilder txt = new StringBuilder(128);txt.append(""RedirectScopedBeanHolder configuration."");txt.append("" Annotated Beans: "");txt.append(getConfigAsString());}}}"	Yes
409	"public class A {private void processUndeployRequest(UUID nodeId, GridDeploymentRequest req) {if (log.isDebugEnabled())log.debug(""Received undeploy request [nodeId="" + nodeId + "", req="" + req + ']');ctx.deploy().undeployTask(nodeId, req.resourceName());}}"	No
410	"public class A {public ShellyDeviceProfile getDeviceProfile(String thingType) throws ShellyApiException {String json = request(SHELLY_URL_SETTINGS);if (json.contains(""\""type\"":\""SHDM-"")) {logger.trace(""{}: Detected a Shelly Dimmer: fix Json (replace lights[] tag with dimmers[]"", thingName);json = fixDimmerJson(json);}profile.initialize(thingType, json);profile.thingName = profile.hostname;if (profile.isLight && (profile.numMeters == 0)) {logger.debug(""{}: Get number of meters from light status"", thingName);ShellyStatusLight status = getLightStatus();profile.numMeters = status.meters != null ? status.meters.size() : 0;}if (profile.isSense) {profile.irCodes = getIRCodeList();logger.debug(""{}: Sense stored key list loaded, {} entries."", thingName, profile.irCodes.size());}return profile;}}"	No
411	"public class A {public void add(Integer columnIndex, Object columnValue, Long columnCount, StructField columnField) {StandardColumnStatistics newColumnStatistics;if (!columnStatisticsMap.containsKey(columnIndex)) {DataType columnDataType = columnField.dataType();switch (columnDataType.simpleString()) {case ""tinyint"":newColumnStatistics = new ByteColumnStatistics(columnField, profilerConfiguration);break;case ""smallint"":newColumnStatistics = new ShortColumnStatistics(columnField, profilerConfiguration);break;case ""int"":newColumnStatistics = new IntegerColumnStatistics(columnField, profilerConfiguration);break;case ""bigint"":newColumnStatistics = new LongColumnStatistics(columnField, profilerConfiguration);break;case ""float"":newColumnStatistics = new FloatColumnStatistics(columnField, profilerConfiguration);break;case ""double"":newColumnStatistics = new DoubleColumnStatistics(columnField, profilerConfiguration);break;case ""string"":newColumnStatistics = new StringColumnStatistics(columnField, profilerConfiguration);break;case ""boolean"":newColumnStatistics = new BooleanColumnStatistics(columnField, profilerConfiguration);break;case ""date"":newColumnStatistics = new DateColumnStatistics(columnField, profilerConfiguration);break;case ""timestamp"":newColumnStatistics = new TimestampColumnStatistics(columnField, profilerConfiguration);break;default:String decimalTypeRegex = ""decimal\\S+"";if (columnDataType.simpleString().matches(decimalTypeRegex)) {newColumnStatistics =new BigDecimalColumnStatistics(columnField, profilerConfiguration);} else {if (log.isWarnEnabled()) {}newColumnStatistics =new UnsupportedColumnStatistics(columnField, profilerConfiguration);}}columnStatisticsMap.put(columnIndex, newColumnStatistics);}StandardColumnStatistics currentColumnStatistics = columnStatisticsMap.get(columnIndex);currentColumnStatistics.accomodate(columnValue, columnCount);}}"	Yes
412	public class A {@Overridepublic void basicBridgeInvalidate(Object key,Object p_callbackArg,ClientProxyMembershipID memberId,boolean fromClient,EntryEventImpl clientEvent)throws TimeoutException, EntryNotFoundException, CacheWriterException {Lock lock = getDistributedLockIfGlobal(key);try {super.basicBridgeInvalidate(key, p_callbackArg, memberId, fromClient, clientEvent);} finally {if (lock != null) {lock.unlock();}}}}	Yes
413	public class A {public void setDescription(String description) {}}	Yes
414	"public class A {private static void startCleanupThread(final AccumuloConfiguration conf, final Supplier<Map<String, String>> contextConfigSupplier) {ThreadPools.createGeneralScheduledExecutorService(conf).scheduleWithFixedDelay(Threads.createNamedRunnable(className + ""-cleanup"",() -> {LOG.trace(""{}-cleanup thread, properties: {}"", className, conf);Set<String> contextsInUse =contextConfigSupplier.get().keySet().stream().map(p ->p.substring(Property.VFS_CONTEXT_CLASSPATH_PROPERTY.getKey().length())).collect(Collectors.toSet());AccumuloVFSClassLoader.removeUnusedContexts(contextsInUse);}),60_000,60_000,TimeUnit.MILLISECONDS);LOG.debug(""Context cleanup timer started at 60s intervals"");}}"	Yes
415	"public class A {@Transactional(propagation = Propagation.NOT_SUPPORTED)@Overridepublic void markAsDeleted(final O obj) throws AccessException {Validate.notNull(obj);if (obj.getId() == null) {final String msg = ""Could not delete object unless id is not given:"" + obj.toString();throw new RuntimeException(msg);}accessChecker.checkRestrictedOrDemoUser();final O dbObj = em.find(clazz, obj.getId());checkLoggedInUserDeleteAccess(obj, dbObj);internalMarkAsDeleted(obj);}}"	Yes
416	"public class A {@Overrideprotected void processFilter(HttpServletRequest httpServletRequest,HttpServletResponse httpServletResponse,FilterChain filterChain)throws Exception {httpServletRequest.setAttribute(SKIP_FILTER, Boolean.TRUE);String key = getCacheKey(httpServletRequest);String pAuth = httpServletRequest.getParameter(""p_auth"");if (Validator.isNotNull(pAuth)) {try {AuthTokenUtil.checkCSRFToken(httpServletRequest, CacheFilter.class.getName());} catch (PortalException portalException) {if (_log.isDebugEnabled()) {_log.debug(""Request is not cacheable "" + key + "", invalid token received"", portalException);}processFilter(CacheFilter.class.getName(), httpServletRequest, httpServletResponse, filterChain);return;}key = StringUtil.replace(key, StringUtil.toUpperCase(pAuth), ""VALID"");}long companyId = PortalInstances.getCompanyId(httpServletRequest);CacheResponseData cacheResponseData = CacheUtil.getCacheResponseData(companyId, key);if ((cacheResponseData == null) || !cacheResponseData.isValid()) {if (!_isValidCache(cacheResponseData) || !isCacheableData(companyId, httpServletRequest)) {if (_log.isDebugEnabled()) {_log.debug(""Request is not cacheable "" + key);}if (cacheResponseData == null) {if (_log.isInfoEnabled()) {_log.info(""Caching request with invalid state "" + key);}CacheUtil.putCacheResponseData(companyId, key, new CacheResponseData());}processFilter(CacheFilter.class.getName(), httpServletRequest, httpServletResponse, filterChain);return;}if (_log.isInfoEnabled()) {_log.info(""Caching request "" + key);}BufferCacheServletResponse bufferCacheServletResponse =new BufferCacheServletResponse(httpServletResponse);processFilter(CacheFilter.class.getName(), httpServletRequest, bufferCacheServletResponse, filterChain);cacheResponseData = new CacheResponseData(bufferCacheServletResponse);LastPath lastPath = (LastPath) httpServletRequest.getAttribute(WebKeys.LAST_PATH);if (lastPath != null) {cacheResponseData.setAttribute(WebKeys.LAST_PATH, lastPath);}String cacheControl =GetterUtil.getString(bufferCacheServletResponse.getHeader(HttpHeaders.CACHE_CONTROL));if (isCacheableResponse(bufferCacheServletResponse)&& !cacheControl.contains(HttpHeaders.PRAGMA_NO_CACHE_VALUE)&& isCacheableRequest(httpServletRequest)) {CacheUtil.putCacheResponseData(companyId, key, cacheResponseData);}} else {LastPath lastPath = (LastPath) cacheResponseData.getAttribute(WebKeys.LAST_PATH);if (lastPath != null) {HttpSession session = httpServletRequest.getSession();session.setAttribute(WebKeys.LAST_PATH, lastPath);}}CacheResponseUtil.write(httpServletResponse, cacheResponseData);}}"	No
417	public class A {public static void createWithParents(ZooKeeper zk, String node, byte[] data)throws KeeperException {try {if (node == null) {return;}zk.create(node, data, createACL(zk, node), CreateMode.PERSISTENT);} catch (KeeperException.NodeExistsException nee) {return;} catch (KeeperException.NoNodeException nne) {createWithParents(zk, getParent(node));createWithParents(zk, node, data);} catch (InterruptedException ie) {}}}	Yes
418	"public class A {@POST@Path(""/updateMetadata"")@Produces(MediaType.TEXT_XML)@RestQuery(name = ""update"",description =""Update metadata of an published media package. This endpoint does not update any media""+ "" files. If you want to update the whole media package, use the publish endpoint."",returnDescription = ""The job that can be used to update the metadata of an media package"",restParameters = {@RestParameter(name = ""mediapackage"",isRequired = true,description = ""The updated media package"",type = Type.TEXT),@RestParameter(name = ""channel"",isRequired = true,description = ""The channel name"",type = Type.STRING),@RestParameter(name = ""flavors"",isRequired = true,description = ""The element flavors to be updated, separated by '"" + SEPARATOR + ""'"",type = Type.STRING),@RestParameter(name = ""tags"",isRequired = true,description = ""The element tags to be updated, separated by '"" + SEPARATOR + ""'"",type = Type.STRING),@RestParameter(name = ""checkAvailability"",isRequired = false,description = ""Whether to check for availability"",type = Type.BOOLEAN,defaultValue = ""true"")},responses = {@RestResponse(responseCode = SC_OK,description = ""An XML representation of the publication job"")})public Response updateMetadata(@FormParam(""mediapackage"") String mediaPackageXml,@FormParam(""channel"") String channel,@FormParam(""flavors"") String flavors,@FormParam(""tags"") String tags,@FormParam(""checkAvailability"") @DefaultValue(""true"") boolean checkAvailability)throws Exception {final Job job;try {final MediaPackage mediaPackage = MediaPackageParser.getFromXml(mediaPackageXml);job =service.updateMetadata(mediaPackage, channel, split(flavors), split(tags), checkAvailability);} catch (IllegalArgumentException e) {return Response.status(Status.BAD_REQUEST).build();} catch (Exception e) {return Response.serverError().build();}return Response.ok(new JaxbJob(job)).build();}}"	Yes
419	"public class A {@Overridepublic boolean apply(UUID nodeId, Object msg) {assertEquals(ignite2, g);try {log.info(""Received new message [msg="" + msg + "", senderNodeId="" + nodeId + "", topic=default]"");if (!nodeId.equals(ignite1.cluster().localNode().id())) {log.error(""Unexpected sender node: "" + nodeId);error.set(true);return false;}if (!MSG_3.equals(msg)) {log.error(""Unexpected message "" + msg + "" for topic: default"");error.set(true);return false;}rcvMsgs.add(msg);return true;} finally {rcvLatch.countDown();}}}"	No
420	public class A {public void startup() {transientProducerScheduler.start();for (CloudJobConfigurationPOJO each : configService.loadAll()) {schedule(each);}}}	Yes
421	public class A {private boolean readCommitsEnabled(String commitEnabled) {boolean isCommitEnabled = false;try {isCommitEnabled = Boolean.parseBoolean(readParameterValue(commitEnabled));} catch (ParameterNotFoundException e) {}return isCommitEnabled;}}	Yes
422	"public class A {@Overridepublic void setOutputProperties(final Properties properties) {super.setOutputProperties(properties);final String option = outputProperties.getProperty(EXistOutputKeys.INDENT_SPACES, ""4"");try {indentAmount = Integer.parseInt(option);} catch (final NumberFormatException e) {LOG.warn(""Invalid indentation value: '{}'"", option);}indent = ""yes"".equals(outputProperties.getProperty(OutputKeys.INDENT, ""no""));}}"	No
423	"public class A {@SuppressWarnings(""unchecked"")private void execute(Entity target, String command, String type, String memberId, boolean highlight) {if (Entities.isNoLongerManaged(target)) return;Lifecycle state = target.getAttribute(Attributes.SERVICE_STATE_ACTUAL);if (state == Lifecycle.STOPPING || state == Lifecycle.STOPPED) return;Collection<? extends Location> locations =Locations.getLocationsCheckingAncestors(target.getLocations(), target);Maybe<SshMachineLocation> machine =Machines.findUniqueMachineLocation(locations, SshMachineLocation.class);if (machine.isAbsentOrNull()) {return;}String executionDir = config().get(EXECUTION_DIR);String sshCommand =SshCommandSensor.makeCommandExecutingInDirectory(command, executionDir, target);Map<String, Object> env = MutableMap.of();env.putAll(MutableMap.copyOf(entity.config().get(BrooklynConfigKeys.SHELL_ENVIRONMENT)));env.putAll(MutableMap.copyOf(config().get(BrooklynConfigKeys.SHELL_ENVIRONMENT)));env.put(EVENT_TYPE, type);env.put(MEMBER_ID, memberId);try {env = (Map<String, Object>) Tasks.resolveDeepValueWithoutCoercion(env, getExecutionContext());} catch (InterruptedException | ExecutionException e) {throw Exceptions.propagate(e);}ShellEnvironmentSerializer serializer = new ShellEnvironmentSerializer(getManagementContext());SshEffectorTasks.SshEffectorTaskFactory<String> task =SshEffectorTasks.ssh(sshCommand).machine(machine.get()).requiringZeroAndReturningStdout().summary(""group-"" + CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_HYPHEN, type)).environmentVariables(serializer.serialize(env));Task<String> taskI = DynamicTasks.submit(task.newTask(), target);if (highlight) {highlightAction(""Run at "" + machine.get().getAddress().getHostAddress(), taskI);}String output = taskI.getUnchecked();}}"	Yes
424	"public class A {protected Document requestAnnotations(Document document) throws GerbilException {LOGGER.info(""Started request for {}"", document.getDocumentURI());HttpGet request = null;try {String url = createRequestUrl(document.getText());request = createGetRequest(url);} catch (Exception e) {throw new GerbilException(""Couldn't create HTTP request."", e, ErrorTypes.UNEXPECTED_EXCEPTION);}request.addHeader(HttpHeaders.ACCEPT, ""text/turtle"");request.addHeader(HttpHeaders.ACCEPT_CHARSET, ""UTF-8"");HttpEntity entity = null;CloseableHttpResponse response = null;try {response = sendRequest(request);entity = response.getEntity();try {document = nifParser.getDocumentFromNIFReader(replaceDenotesUri(entity.getContent()));} catch (Exception e) {LOGGER.error(""Couldn't parse the response."", e);throw new GerbilException(""Couldn't parse the response."", e, ErrorTypes.UNEXPECTED_EXCEPTION);}if (document == null) {throw new GerbilException(""The response didn't contain a document."", ErrorTypes.UNEXPECTED_EXCEPTION);}} finally {closeRequest(request);if (entity != null) {try {EntityUtils.consume(entity);} catch (IOException e1) {}}IOUtils.closeQuietly(response);}return document;}}"	Yes
425	"public class A {protected TimeoutTask createTimeoutTask() {if (timeout <= 0) {return null;}return TimeoutManager.getInstance().addTimeoutTarget(() -> {logger.warn(""Process is terminated due to {} second exceeded."", timeout);ComponentUtil.getProcessHelper().destroyProcess(sessionId);processTimeout = true;},timeout,false);}}"	No
426	"public class A {private Set<String> getRequestingUserDepts() {Set<String> requestingUserDepts = Sets.newHashSet();ModerationService.Iface client = thriftClients.makeModerationClient();try {requestingUserDepts = client.getRequestingUserDepts();} catch (TException e) {log.error(""Error geeting requesting user departments"", e);}return requestingUserDepts;}}"	No
427	"public class A {@SuppressWarnings(""unchecked"")@Overridepublic void writeData(Object[] data) throws HyracksDataException {if (!open) {throw new HyracksDataException(""Writing to SerializingDataWriter that has not been opened"");}tb.reset();for (int i = 0; i < data.length; ++i) {Object instance = data[i];if (LOGGER.isTraceEnabled()) {LOGGER.trace(i + "" "" + LogRedactionUtil.userData(instance.toString()));}tb.addField(recordDescriptor.getFields()[i], instance);}FrameUtils.appendToWriter(frameWriter, tupleAppender, tb.getFieldEndOffsets(), tb.getByteArray(), 0, tb.getSize());}}"	No
428	"public class A {private void writeEventBatchToSerializer() throws InterruptedException, WriteException {try {timedCall(new CallRunner1<Void>() {@Overridepublic Void call() throws InterruptedException, StreamingException {try {for (Event event : batch) {try {serializer.write(txnBatch, event);} catch (SerializationError err) {LOG.info(""Parse failed : {}  : {}"", err.getMessage(), new String(event.getBody()));}}return null;} catch (IOException e) {throw new StreamingIOFailure(e.getMessage(), e);}}});batch.clear();} catch (StreamingException e) {throw new WriteException(endPoint, txnBatch.getCurrentTxnId(), e);} catch (TimeoutException e) {throw new WriteException(endPoint, txnBatch.getCurrentTxnId(), e);}}}"	No
429	"public class A {@Override@RestAccessControl(permission = Permission.SUPERUSER)@RequestMapping(value = ""/{modelId}"",produces = MediaType.APPLICATION_JSON_VALUE,method = RequestMethod.DELETE)public ResponseEntity<SimpleRestResponse<Map<String, String>>> deleteContentModel(@PathVariable Long modelId) {logger.info(""deleting content model {}"", modelId);contentModelService.delete(modelId);Map<String, String> result = Collections.singletonMap(""modelId"", String.valueOf(modelId));return ResponseEntity.ok(new SimpleRestResponse<>(result));}}"	No
430	public class A {private void assertEvictionTime(int expectedSeconds, int error) {long startTime = System.currentTimeMillis();while (true) {if (dbPoolManager.getConnectionPool().getNumIdle() == minIdleConnections) {long waitSeconds = getSecondsSince(startTime);assertInRange(waitSeconds, expectedSeconds, expectedSeconds + error);break;} else {sleepMillis(500);}}}}	Yes
431	"public class A {private void downloadAndCopyJars(Set<String> jarsToDownload, Path destinationPath)throws IOException {Set<String> copiedJars = new HashSet<>();for (String jar : jarsToDownload) {if (!copiedJars.contains(jar)) {Path jarPath = Paths.get(jar);if (destinationPath == null || jarPath == null) {throw new IllegalArgumentException(""null destinationPath or jarPath"");}Path jarFileName = jarPath.getFileName();if (jarFileName == null) {throw new IllegalArgumentException(""null farFileName"");}File destPath = Paths.get(destinationPath.toString(), jarFileName.toString()).toFile();try (InputStream src = fileStorage.download(jar);FileOutputStream dest = new FileOutputStream(destPath)) {IOUtils.copy(src, dest);copiedJars.add(jar);}}}}}"	Yes
432	"public class A {@Overridepublic List<String> getURLsFromPage(Document page) {List<String> imageURLs = new ArrayList<>();int x = 1;Elements pageImages = page.getElementsByClass(""c-tile"");for (Element thumb : pageImages) {if (thumb.attr(""href"").contains(""/comics/album/"")) {String subUrl = ""https://www.8muses.com"" + thumb.attr(""href"");try {sendUpdate(STATUS.LOADING_RESOURCE, subUrl);Document subPage = Http.url(subUrl).get();List<String> subalbumImages = getURLsFromPage(subPage);} catch (IOException e) {}} else if (thumb.attr(""href"").contains(""/comics/picture/"")) {if (super.isStopped()) break;String image = null;if (thumb.hasAttr(""data-cfsrc"")) {image = thumb.attr(""data-cfsrc"");} else {String rawJson =deobfuscateJSON(page.select(""script#ractive-public"").html().replaceAll(""&gt;"", "">"").replaceAll(""&lt;"", ""<"").replace(""&amp;"", ""&""));JSONObject json = new JSONObject(rawJson);try {for (int i = 0; i != json.getJSONArray(""pictures"").length(); i++) {image =""https://www.8muses.com/image/fl/""+ json.getJSONArray(""pictures"").getJSONObject(i).getString(""publicUri"");URL imageUrl = new URL(image);addURLToDownload(imageUrl,getPrefixShort(x),getSubdir(page.select(""title"").text()),this.url.toExternalForm(),cookies,"""",null,true);x++;if (isThisATest()) {break;}}return imageURLs;} catch (MalformedURLException e) {}}if (!image.contains(""8muses.com"")) {continue;}imageURLs.add(image);if (isThisATest()) break;}}return imageURLs;}}"	Yes
433	"public class A {private void awaitInitializeProxy(IgniteCacheProxyImpl<?, ?> jcache) {if (jcache != null) {CountDownLatch initLatch = jcache.getInitLatch();try {while (initLatch.getCount() > 0) {initLatch.await(2000, TimeUnit.MILLISECONDS);if (log.isInfoEnabled())log.info(""Failed to wait proxy initialization, cache=""+ jcache.getName()+ "", localNodeId=""+ ctx.localNodeId());}} catch (InterruptedException e) {Thread.currentThread().interrupt();}}}}"	No
434	"public class A {public int getSymLinkDepth() {int value = 0;try {value = Integer.parseInt(line.getOptionValue(ARGUMENT.SYM_LINK_DEPTH, ""0""));if (value < 0) {value = 0;}} catch (NumberFormatException ex) {LOGGER.debug(""Symbolic link was not a number"");}return value;}}"	No
435	public class A {protected Object getRawNodeValue(final JsonNode fieldNode, final DataType dataType, final String fieldName)throws IOException {if (fieldNode == null || fieldNode.isNull()) {return null;}if (fieldNode.isNumber()) {return fieldNode.getNumberValue();}if (fieldNode.isBinary()) {return fieldNode.getBinaryValue();}if (fieldNode.isBoolean()) {return fieldNode.getBooleanValue();}if (fieldNode.isTextual()) {final String textValue = fieldNode.getTextValue();if (dataType == null) {return textValue;}switch (dataType.getFieldType()) {case DATE:case TIME:case TIMESTAMP:try {return DataTypeUtils.convertType(textValue,dataType,LAZY_DATE_FORMAT,LAZY_TIME_FORMAT,LAZY_TIMESTAMP_FORMAT,fieldName);} catch (final Exception e) {return textValue;}default:return textValue;}}if (fieldNode.isArray()) {final ArrayNode arrayNode = (ArrayNode) fieldNode;final int numElements = arrayNode.size();final Object[] arrayElements = new Object[numElements];int count = 0;final DataType elementDataType;if (dataType != null && dataType.getFieldType() == RecordFieldType.ARRAY) {final ArrayDataType arrayDataType = (ArrayDataType) dataType;elementDataType = arrayDataType.getElementType();} else if (dataType != null && dataType.getFieldType() == RecordFieldType.CHOICE) {List<DataType> possibleSubTypes = ((ChoiceDataType) dataType).getPossibleSubTypes();for (DataType possibleSubType : possibleSubTypes) {if (possibleSubType.getFieldType() == RecordFieldType.ARRAY) {ArrayDataType possibleArrayDataType = (ArrayDataType) possibleSubType;DataType possibleElementType = possibleArrayDataType.getElementType();final Object[] possibleArrayElements = new Object[numElements];int elementCounter = 0;for (final JsonNode node : arrayNode) {final Object value = getRawNodeValue(node, possibleElementType, fieldName);possibleArrayElements[elementCounter++] = value;}if (DataTypeUtils.isArrayTypeCompatible(possibleArrayElements, possibleElementType, true)) {return possibleArrayElements;}}}elementDataType = dataType;} else {elementDataType = dataType;}for (final JsonNode node : arrayNode) {final Object value = getRawNodeValue(node, elementDataType, fieldName);arrayElements[count++] = value;}return arrayElements;}if (fieldNode.isObject()) {RecordSchema childSchema = null;if (dataType != null && RecordFieldType.MAP == dataType.getFieldType()) {return getMapFromRawValue(fieldNode, dataType, fieldName);}return getRecordFromRawValue(fieldNode, dataType);}return null;}}	Yes
436	"public class A {@Overridepublic <T extends HttpUpgradeHandler> T upgrade(Class<T> handlerClass)throws IOException, ServletException {Response response = _channel.getResponse();if (response.getStatus() != HttpStatus.SWITCHING_PROTOCOLS_101)throw new IllegalStateException(""Response status should be 101"");if (response.getHeader(""Upgrade"") == null)throw new IllegalStateException(""Missing Upgrade header"");if (!""Upgrade"".equalsIgnoreCase(response.getHeader(""Connection"")))throw new IllegalStateException(""Invalid Connection header"");if (response.isCommitted())throw new IllegalStateException(""Cannot upgrade committed response"");if (_metaData == null || _metaData.getHttpVersion() != HttpVersion.HTTP_1_1)throw new IllegalStateException(""Only requests over HTTP/1.1 can be upgraded"");ServletOutputStream outputStream = response.getOutputStream();ServletInputStream inputStream = getInputStream();HttpChannelOverHttp httpChannel11 = (HttpChannelOverHttp) _channel;HttpConnection httpConnection = (HttpConnection) _channel.getConnection();T upgradeHandler;try {upgradeHandler = handlerClass.getDeclaredConstructor().newInstance();} catch (Exception e) {throw new ServletException(""Unable to instantiate handler class"", e);}httpChannel11.servletUpgrade();AsyncContext asyncContext = forceStartAsync();outputStream.flush();httpConnection.getGenerator().servletUpgrade();httpConnection.addEventListener(new Connection.Listener() {@Overridepublic void onClosed(Connection connection) {try {asyncContext.complete();} catch (Exception e) {}try {upgradeHandler.destroy();} catch (Exception e) {}}@Overridepublic void onOpened(Connection connection) {}});upgradeHandler.init(new WebConnection() {@Overridepublic void close() throws Exception {try {inputStream.close();} finally {outputStream.close();}}@Overridepublic ServletInputStream getInputStream() {return inputStream;}@Overridepublic ServletOutputStream getOutputStream() {return outputStream;}});return upgradeHandler;}}"	Yes
437	public class A {@Overrideprotected final Object getEndpointInternal(MessageContext messageContext) throws Exception {String key = getLookupKeyForMessage(messageContext);if (!StringUtils.hasLength(key)) {return null;}if (logger.isDebugEnabled()) {}return lookupEndpoint(key);}}	Yes
438	public class A {private void deferLedgerLockRelease(final long ledgerId) {long gracePeriod = this.openLedgerRereplicationGracePeriod;TimerTask timerTask =new TimerTask() {@Overridepublic void run() {LedgerHandle lh = null;try {lh = admin.openLedgerNoRecovery(ledgerId);if (isLastSegmentOpenAndMissingBookies(lh)) {lh = admin.openLedger(ledgerId);}Set<LedgerFragment> fragments = getUnderreplicatedFragments(lh);for (LedgerFragment fragment : fragments) {if (!fragment.isClosed()) {lh = admin.openLedger(ledgerId);break;}}} catch (InterruptedException e) {Thread.currentThread().interrupt();} catch (BKNoSuchLedgerExistsException bknsle) {} catch (BKException e) {} finally {try {if (lh != null) {lh.close();}} catch (InterruptedException e) {Thread.currentThread().interrupt();} catch (BKException e) {} finally {try {underreplicationManager.releaseUnderreplicatedLedger(ledgerId);} catch (UnavailableException e) {shutdown();}}}}};pendingReplicationTimer.schedule(timerTask, gracePeriod);}}	Yes
439	"public class A {public static void main(String[] args) {try {restConfig = ConfigManager.getRestConfiguration();cellConfig = ConfigManager.getCellConfiguration();List apiIds = createGlobalAPIs();publishGlobalAPIs(apiIds);generateApiConfigJson();microgatewaySetup();log.info(""Microgateway setup success"");microgatewayBuild();unzipTargetFile();moveUnzippedFolderToMountLocation();} catch (APIException e) {System.exit(Constants.Utils.ERROR_EXIT_CODE);} catch (IOException e) {System.exit(Constants.Utils.ERROR_EXIT_CODE);} catch (InterruptedException e) {log.error(""Error occurred while waiting for the process completion"", e);System.exit(Constants.Utils.ERROR_EXIT_CODE);}}}"	Yes
440	"public class A {protected void rotateOutputFile() throws IOException {long start = System.currentTimeMillis();synchronized (this.writeLock) {closeOutputFile();cleanupCallback();LOG.debug(""Performing {} file rotation actions."", this.rotationActions.size());for (RotationAction action : this.rotationActions) {action.execute(this.fs, this.currentFile);}}long time = System.currentTimeMillis() - start;LOG.info(""File rotation took {} ms"", time);}}"	Yes
441	public class A {@Overridepublic void destroy() throws Exception {executorService.shutdownNow();executorService.awaitTermination(10, TimeUnit.SECONDS);}}	Yes
442	"public class A {@Overridepublic void start() {wdh = new DataWormHoleWorker(""DataWormHoleWorker"", this.feature, ""dwhhandlers"");wdhThread = Executors.newSingleThreadExecutor();wdhThread.execute(wdh);if (log.isTraceEnable()) {log.info(this, ""DataWormHoleWorker started"");}}}"	No
443	"public class A {public static boolean hasLink(WiserMessage emailMessage, LinkType linkType) {log.info(""Query {} has a {} link"", emailMessage, linkType.name());Pattern linkPattern = getLinkRegex(linkType);Matcher matcher = linkPattern.matcher(HasEmailRule.getEmailContent(emailMessage));return matcher.find();}}"	No
444	"public class A {@Overridepublic Connection getConnection() throws ProcessException {try {if (ugi != null) {getLogger().trace(""getting UGI instance"");if (kerberosUserReference.get() != null) {KerberosUser kerberosUser = kerberosUserReference.get();getLogger().debug(""kerberosUser is "" + kerberosUser);try {getLogger().debug(""checking TGT on kerberosUser "" + kerberosUser);kerberosUser.checkTGTAndRelogin();} catch (LoginException e) {throw new ProcessException(""Unable to relogin with kerberos credentials for "" + kerberosUser.getPrincipal(),e);}} else {getLogger().debug(""kerberosUser was null, will not refresh TGT with KerberosUser"");ugi.checkTGTAndReloginFromKeytab();}try {return ugi.doAs((PrivilegedExceptionAction<Connection>) () -> dataSource.getConnection());} catch (UndeclaredThrowableException e) {Throwable cause = e.getCause();if (cause instanceof SQLException) {throw (SQLException) cause;} else {throw e;}}} else {getLogger().info(""Simple Authentication"");return dataSource.getConnection();}} catch (SQLException | IOException | InterruptedException e) {getLogger().error(""Error getting Hive connection"", e);throw new ProcessException(e);}}}"	No
445	"public class A {private void processRequest(Request req) {if (!req.hasYamcsInstance()) {sendErrorReturn(0, ""instance not present in the request"");return;}ReplicationMaster master = masters.get(req.getYamcsInstance());if (master == null) {sendErrorReturn(req.getRequestSeq(),""No replication master registered for instance '"" + req.getYamcsInstance() + ""''"");return;}ChannelPipeline pipeline = channelHandlerContext.channel().pipeline();pipeline.remove(this);pipeline.addLast(master.newChannelHandler(req));}}"	Yes
446	"public class A {@Overridepublic void stop() {logger.info(""IRC sink {} stopping"", this.getName());destroyConnection();super.stop();logger.debug(""IRC sink {} stopped. Metrics:{}"", this.getName(), counterGroup);}}"	No
447	"public class A {private boolean lockMultiple(IgniteInternalTx tx, Iterable<IgniteTxEntry> entries)throws IgniteCheckedException {assert tx.optimistic() || !tx.local();long remainingTime = tx.remainingTime();long timeout = remainingTime < 0 ? 0 : remainingTime;GridCacheVersion serOrder = (tx.serializable() && tx.optimistic()) ? tx.nearXidVersion() : null;for (IgniteTxEntry txEntry1 : entries) {if (!txEntry1.markPrepared() || txEntry1.explicitVersion() != null) continue;GridCacheContext cacheCtx = txEntry1.context();while (true) {cctx.database().checkpointReadLock();try {GridCacheEntryEx entry1 = txEntry1.cached();assert entry1 != null : txEntry1;assert !entry1.detached(): ""Expected non-detached entry for near transaction ""+ ""[locNodeId=""+ cctx.localNodeId()+ "", entry=""+ entry1+ ']';GridCacheVersion serReadVer = txEntry1.entryReadVersion();assert serReadVer == null || (tx.optimistic() && tx.serializable()) : txEntry1;boolean read = serOrder != null && txEntry1.op() == READ;entry1.unswap();if (!entry1.tmLock(tx, timeout, serOrder, serReadVer, read)) {for (IgniteTxEntry txEntry2 : entries) {if (txEntry2 == txEntry1) break;txUnlock(tx, txEntry2);}return false;}break;} catch (GridCacheEntryRemovedException ignored) {if (log.isDebugEnabled())try {txEntry1.cached(cacheCtx.cache().entryEx(txEntry1.key(), tx.topologyVersion()));} catch (GridDhtInvalidPartitionException e) {assert tx.dht(): ""Received invalid partition for non DHT transaction [tx=""+ tx+ "", invalidPart=""+ e.partition()+ ']';tx.addInvalidPartition(cacheCtx.cacheId(), e.partition());break;}} catch (GridDistributedLockCancelledException ignore) {tx.setRollbackOnly();throw new IgniteCheckedException(""Entry lock has been cancelled for transaction: "" + tx);} finally {cctx.database().checkpointReadUnlock();}}}return true;}}"	Yes
448	"public class A {private void runUpdate() {try {updateFromControllerInfo();startTouchJob();updateStatus(ThingStatus.ONLINE);} catch (NanoleafUnauthorizedException nae) {logger.warn(""Status update unauthorized: {}"", nae.getMessage());updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.COMMUNICATION_ERROR,""@text/error.nanoleaf.controller.invalidToken"");String localAuthToken = getAuthToken();if (localAuthToken == null || localAuthToken.isEmpty()) {updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.CONFIGURATION_PENDING,""@text/error.nanoleaf.controller.noToken"");}} catch (NanoleafException ne) {logger.warn(""Status update failed: {}"", ne.getMessage());updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.COMMUNICATION_ERROR,""@text/error.nanoleaf.controller.communication"");} catch (RuntimeException e) {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.NONE, ""@text/error.nanoleaf.controller.runtime"");}}}"	Yes
449	public class A {@Overridepublic void start() {super.start();RestrictionTracker<OffsetHolder, ?> tracker =restrictionTrackers.get(restrictionTrackers.keySet().iterator().next());this.history = (List<byte[]>) tracker.currentRestriction().history;}}	Yes
450	"public class A {@Overridepublic MemberRequest findByKey(String key) throws NoSuchMemberRequestException {MemberRequest memberRequest = fetchByKey(key);if (memberRequest == null) {StringBundler sb = new StringBundler(4);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""key="");sb.append(key);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchMemberRequestException(sb.toString());}return memberRequest;}}"	Yes
451	"public class A {@GemfireFunction(id = CREATE_INDEX_FUNCTION_ID)public boolean createIndex(IndexDefinition indexDefinition) {Cache gemfireCache = resolveCache();if (isNonExistingIndex(gemfireCache, indexDefinition)) {if (logger.isInfoEnabled()) {logger.info(""Creating Index with name [{}] having expression [{}] on Region [{}] with type [{}]"",indexDefinition.getName(),indexDefinition.getExpression(),indexDefinition.getFromClause(),indexDefinition.getIndexType());}QueryService queryService = gemfireCache.getQueryService();try {switch (indexDefinition.getIndexType()) {case KEY:case PRIMARY_KEY:queryService.createKeyIndex(indexDefinition.getName(),indexDefinition.getExpression(),indexDefinition.getFromClause());return true;case HASH:queryService.createHashIndex(indexDefinition.getName(),indexDefinition.getExpression(),indexDefinition.getFromClause());return true;case FUNCTIONAL:queryService.createIndex(indexDefinition.getName(),indexDefinition.getExpression(),indexDefinition.getFromClause());return true;default:return false;}} catch (QueryException cause) {throw GemfireCacheUtils.convertGemfireAccessException(cause);}} else {if (logger.isInfoEnabled()) {logger.info(""Index with name [{}] already exists"", indexDefinition.getName());}return false;}}}"	No
452	"public class A {private ActionCallbackDto manageBarrierResults(StratioStreamingMessage message, ActionCallbackDto reply, String path, Boolean success)throws Exception {ActionCallbackDto clusterReply = reply;if (!success) {logger.debug(""Leaving ACK barrier for path: {} WITH NO SUCCESS"", path);clusterReply =new ActionCallbackDto(ReplyCode.KO_NODE_NOT_REPLY.getCode(), ReplyCode.KO_NODE_NOT_REPLY.getMessage());} else {if (reply.getErrorCode() == ReplyCode.OK.getCode()) {Gson gson = new Gson();Boolean koResponse = false;for (int i = 0; i < nodesToCheck.size() && !koResponse; i++) {String nodePath = path.concat(""/"").concat(nodesToCheck.get(i));String data = new String(client.getData().forPath(nodePath));ActionCallbackDto parsedResponse = gson.fromJson(data, ActionCallbackDto.class);if (parsedResponse.getErrorCode() != ReplyCode.OK.getCode()) {clusterReply = parsedResponse;koResponse = true;}}}}zkUtils.createZNodeJsonReply(message, clusterReply);client.delete().deletingChildrenIfNeeded().forPath(path);return clusterReply;}}"	Yes
453	"public class A {@Overrideprotected String formatQuery(String query) {try {Objects.requireNonNull(query);return this.formatter.format(query);} catch (Exception e) {log.error(""Query formatter failed!"", e);}return ""FORMATTER ERROR!"";}}"	No
454	public class A {@Overridepublic boolean isSatisified() throws Exception {return resumedCount.get() >= WORKER_COUNT;}}	Yes
455	"public class A {private Collection<DataObject> getAllItemsInDatabox(URI databoxUri) throws NotFoundException {PrivacyPreference databox = this.getResourceStore().get(databoxUri, PrivacyPreference.class);Collection<Resource> itemUris = databox.getAllAppliesToResource_as().asList();Collection<DataObject> items = new ArrayList<DataObject>();for (Resource item : itemUris) {try {items.add(this.getResourceStore().get(item.asURI(), DataObject.class));} catch (NotFoundException e) {logger.warn(""Item ""+ item.asURI()+ "" is in databox ""+ databox.asURI()+ "" but it is does not exist."");}}return items;}}"	No
456	"public class A {public ServerConfiguration getServerConfiguration() {if (containsRadiusServerConfiguration() == false) return null;try {return persistenceEntryManager.find(ServerConfiguration.class, getServerConfigurationDn());} catch (MappingException e) {log.error(""Failed to load radius server configuration"", e);}return null;}}"	No
457	"public class A {private void checkExecutionRequests() {synchronized (lock) {log.debug(MessageFormat.format(""executionrequestmonitor=({0}) still executing"",executionRequestThreadMap.keySet().stream().map(MetadataKey::toString).collect(Collectors.joining("", ""))));for (Map.Entry<ExecutionRequestKey, ThreadTimeCombination> executionRequestThreadEntry :executionRequestThreadMap.entrySet()) {if (isTerminated(executionRequestThreadEntry.getKey())) {executionRequestThreadMap.remove(executionRequestThreadEntry.getKey());} else if (executionRequestThreadEntry.getValue().startTimestamp.plus(timeout, ChronoUnit.MINUTES).isBefore(LocalDateTime.now())) {try {executionRequestThreadEntry.getValue().thread.interrupt();executionRequestThreadEntry.getValue().thread.join(5000);} catch (InterruptedException e) {log.warn(MessageFormat.format(""executionrequestmonitor=unable to close blocking Execution Request {}"",executionRequestThreadEntry.getKey().toString()));}ExecutionRequestConfiguration.getInstance().get(executionRequestThreadEntry.getKey()).ifPresent(executionRequest -> {executionRequest.getScriptExecutionRequests().forEach(this::markAborted);ExecutionRequestConfiguration.getInstance().update(executionRequest);});executionRequestThreadMap.remove(executionRequestThreadEntry.getKey());}}}}}"	Yes
458	public class A {public static ElideNamespaceConfig stringToElideNamespaceConfigPojo(String fileName,String content,Map<String, Object> variables,DynamicConfigSchemaValidator schemaValidator)throws IOException {ElideNamespaceConfig namespaceconfig = new ElideNamespaceConfig();String jsonConfig = hjsonToJson(resolveVariables(content, variables));try {if (schemaValidator.verifySchema(Config.NAMESPACEConfig, jsonConfig, fileName)) {namespaceconfig = getModelPojo(jsonConfig, ElideNamespaceConfig.class);}} catch (ProcessingException e) {throw new IOException(e);}return namespaceconfig;}}	Yes
459	"public class A {@Overridepublic void cleanUp() {try {loadLog.close();new File(syncFolderPath, SyncConstant.SYNC_LOG_NAME).delete();new File(syncFolderPath, SyncConstant.LOAD_LOG_NAME).delete();FileUtils.deleteDirectory(new File(syncFolderPath, SyncConstant.RECEIVER_DATA_FOLDER_NAME));FileLoaderManager.getInstance().removeFileLoader(senderName);} catch (IOException e) {LOGGER.error(""Can not clean up sync resource."", e);}}}"	Yes
460	"public class A {@Overridepublic Entity add(PersistencePackage persistencePackage, DynamicEntityDao dynamicEntityDao, RecordHelper helper)throws ServiceException {Entity entity = persistencePackage.getEntity();try {PersistencePerspective persistencePerspective =persistencePackage.getPersistencePerspective();OfferCode offerCodeInstance = (OfferCode) Class.forName(entity.getType()[0]).newInstance();Map<String, FieldMetadata> offerCodeProperties =helper.getSimpleMergedProperties(OfferCode.class.getName(), persistencePerspective);offerCodeInstance =(OfferCode)helper.createPopulatedInstance(offerCodeInstance, entity, offerCodeProperties, false);Entity errorEntity = validateOfferCode(entity, offerCodeInstance);if (errorEntity != null) {return errorEntity;}offerCodeInstance = dynamicEntityDao.merge(offerCodeInstance);return helper.getRecord(offerCodeProperties, offerCodeInstance, null, null);} catch (Exception e) {LOG.error(""Unable to execute persistence activity"", e);throw new ServiceException(""Unable to add entity for "" + entity.getType()[0], e);}}}"	No
461	public class A {@Overridepublic void write(byte[] buf, int off, int len) throws IOException {if (LOG.isDebugEnabled()) {}byte[] wrapped = cryptoAES.wrap(buf, off, len);DataOutputStream dob = new DataOutputStream(out);dob.writeInt(wrapped.length);dob.write(wrapped, 0, wrapped.length);dob.flush();}}	Yes
462	"public class A {@GET@Path(""/list"")@SubmarineApipublic Response list(@QueryParam(""dictCode"") String dictCode,@QueryParam(""itemText"") String itemText,@QueryParam(""itemValue"") String itemValue,@QueryParam(""column"") String column,@QueryParam(""field"") String field,@QueryParam(""order"") String order,@QueryParam(""pageNo"") int pageNo,@QueryParam(""pageSize"") int pageSize) {List<SysDictItem> list = null;SqlSession sqlSession = MyBatisUtil.getSqlSession();SysDictItemMapper sysDictItemMapper = sqlSession.getMapper(SysDictItemMapper.class);try {Map<String, Object> where = new HashMap<>();where.put(""dictCode"", dictCode);where.put(""itemText"", itemText);where.put(""itemValue"", itemValue);list = sysDictItemMapper.selectAll(where, new RowBounds(pageNo, pageSize));} catch (Exception e) {return new JsonResponse.Builder<>(Response.Status.OK).success(false).build();} finally {sqlSession.close();}PageInfo<SysDictItem> page = new PageInfo<>(list);ListResult<SysDictItem> listResult = new ListResult(list, page.getTotal());return new JsonResponse.Builder<ListResult>(Response.Status.OK).success(true).result(listResult).build();}}"	Yes
463	"public class A {@Overridepublic void release(Throwable cause) {Preconditions.checkState(slotContextFuture.isDone(),""Releasing of the shared slot is expected only from its successfully allocated physical""+ "" slot ({})"",physicalSlotRequestId);LOG.debug(""Release shared slot ({})"", physicalSlotRequestId);Map<ExecutionVertexID, CompletableFuture<SingleLogicalSlot>> logicalSlotFutures =requestedLogicalSlots.keySetA().stream().collect(Collectors.toMap(executionVertexId -> executionVertexId, requestedLogicalSlots::getValueByKeyA));for (Map.Entry<ExecutionVertexID, CompletableFuture<SingleLogicalSlot>> entry :logicalSlotFutures.entrySet()) {LOG.debug(""Release {}"", getLogicalSlotString(entry.getKey()));CompletableFuture<SingleLogicalSlot> logicalSlotFuture = entry.getValue();Preconditions.checkNotNull(logicalSlotFuture);Preconditions.checkState(logicalSlotFuture.isDone(),""Logical slot future must already done when release call comes from the successfully""+ "" allocated physical slot ({})"",physicalSlotRequestId);logicalSlotFuture.thenAccept(logicalSlot -> logicalSlot.release(cause));}requestedLogicalSlots.clear();releaseExternally();}}"	No
464	"public class A {private void reinitialize() {logger.debug(""Reinitialize thing handler ({}). haId={}"", getThingLabel(), getThingHaId());stopRetryRegistering();stopOfflineMonitor1();stopOfflineMonitor2();unregisterEventListener();initialize();}}"	No
465	"public class A {@Overridepublic void setSessionTimeout(Integer minutes, HttpContext httpContext) {serverModel.runSilently(() -> {final Batch batch = new Batch(""Session timeout configuration"");WebContainerContext ctx = unify(httpContext);OsgiContextModel contextModel =serverModel.getOrCreateOsgiContextModel(ctx, serviceBundle, PaxWebConstants.DEFAULT_CONTEXT_PATH, batch);contextModel.setSessionTimeout(minutes);serverController.sendBatch(batch);return null;});}}"	Yes
466	"public class A {public void updated(Map<String, Object> properties) {logger.debug(""updated..."");this.properties = properties;if (this.properties != null) {Object enabledVal = this.properties.get(""enabled"");if (enabledVal != null) {this.configEnabled = (Boolean) enabledVal;}if (!this.configEnabled) {return;}if (this.properties.get(""pingInterval"") != null) {this.pingInterval = (Integer) this.properties.get(""pingInterval"");if (this.future != null) {this.future.cancel(false);while (!this.future.isDone()) {try {Thread.sleep(500);} catch (InterruptedException e) {Thread.currentThread().interrupt();}}}this.future =this.executor.scheduleAtFixedRate(() -> {Thread.currentThread().setName(getClass().getSimpleName());if (WatchdogServiceImpl.this.configEnabled) {doWatchdogLoop();}},0,this.pingInterval,TimeUnit.MILLISECONDS);}}}}"	Yes
467	public class A {@Overridepublic void initContext(AgentSession agentSession) {}}	Yes
468	"public class A {@Testpublic void testTensorflow() throws InterpreterException {String callTensorflowFunc =""import tensorflow as tf\n"" + ""print('Installed TensorFlow version:' + tf.__version__)"";InterpreterContext intpContext = getIntpContext();InterpreterResult intpResult = pySubmarineIntp.interpret(callTensorflowFunc, intpContext);assertEquals(InterpreterResult.Code.SUCCESS, intpResult.code());String tfVersionInfo = intpContext.out().getCurrentOutput().toString();boolean getVersion = tfVersionInfo.contains(""Installed TensorFlow version:"");assertTrue(tfVersionInfo, getVersion);}}"	Yes
469	"public class A {public DfAlterCheckFinalInfo savePrevious() {_log.info("""");_log.info(""|   Save Previous   |"");deleteAllNGMark();final DfAlterCheckFinalInfo finalInfo = new DfAlterCheckFinalInfo();finalInfo.setResultMessage(""Save Previous"");if (!checkSavePreviousInvalidStatus(finalInfo)) {return finalInfo;}final long before = System.currentTimeMillis();_unreleasedAlterAgent.finishReleasedAlterSql();deleteExtractedPreviousResource();final List<File> copyToFileList = copyToPreviousResource();compressPreviousResource();finalInfo.setResultMessage(finalInfo.getResultMessage() + "": saved="" + copyToFileList.size() + "" file(s)"");final long after = System.currentTimeMillis();finalInfo.setProcessPerformanceMillis(after - before);if (!checkSavedPreviousResource(finalInfo)) {return finalInfo;}markPreviousOK(copyToFileList);deleteSavePreviousMark();finalInfo.addDetailMessage(""o (all resources saved)"");return finalInfo;}}"	Yes
470	public class A {@Overridepublic void run() {try {Result result;while (true) {if ((result = scanner.next()) != null) {while (running && !resultQueue.offer(result)) {Thread.sleep(sleepMillis);}}}} catch (Exception e) {threadFailureReason = e.getMessage();} finally {scanner.close();}}}	Yes
471	"public class A {public double calcAverageRate(T key, long timeIntervalSecs) {OffsetDataStats stats = get(key);if (stats == null) {if (log.isDebugEnabled()) log.debug(""No stats data found key="" + key);return -1;}long now = System.currentTimeMillis();long mostRecentThreashold = now - timeIntervalSecs * (long) (staleThresholdPercent * 1000);OffsetData newestOffsetData = stats.mostRecentDataPoint();if (newestOffsetData == null || newestOffsetData.olderThan(mostRecentThreashold)) {return -1;}long then = newestOffsetData.getTimestamp() - timeIntervalSecs * 1000L;long thenDelta = timeIntervalSecs * (long) (ageThresholdPercent * 1000);OffsetData oldestOffsetData = null;long minDiff = -1;long lastDiff = -1;for (OffsetData offsetData : stats.getOffsetDataList()) {long diff = offsetData.within(then, thenDelta);if (diff < 0) continue;if (minDiff == -1 || minDiff < diff) {minDiff = diff;oldestOffsetData = offsetData;}if (minDiff != -1 && lastDiff != -1 && diff > lastDiff) {break;}lastDiff = diff;}if (oldestOffsetData == null) {return -1;}return newestOffsetData.averageRate(oldestOffsetData);}}"	Yes
472	"public class A {public void validateAccessToken(String accessToken, String oxdId) {if (StringUtils.isBlank(accessToken)) {throw new HttpException(ErrorResponseCode.BLANK_ACCESS_TOKEN);}final RpSyncService rpSyncService =ServerLauncher.getInjector().getInstance(RpSyncService.class);final Rp rp = rpSyncService.getRp(oxdId);final IntrospectionResponse introspectionResponse = introspect(accessToken, oxdId);if (StringUtils.isBlank(introspectionResponse.getClientId())) {throw new HttpException(ErrorResponseCode.NO_CLIENT_ID_IN_INTROSPECTION_RESPONSE);}if (!introspectionResponse.getScope().contains(""oxd"")) {throw new HttpException(ErrorResponseCode.ACCESS_TOKEN_INSUFFICIENT_SCOPE);}if (introspectionResponse.getClientId().equals(rp.getClientId())) {return;}throw new HttpException(ErrorResponseCode.INVALID_ACCESS_TOKEN);}}"	Yes
473	"public class A {@GET@Path(""/select"")@Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})public Response search(@QueryParam(""q"") final String query,@QueryParam(""rows"") @DefaultValue(""10"") final String rows,@QueryParam(""start"") @DefaultValue(""0"") final String start,@QueryParam(""hl"") @DefaultValue(""false"") final String highlight,@QueryParam(""hl.simple.pre"") @DefaultValue(""<b>"") final String highlightPre,@QueryParam(""hl.simple.post"") @DefaultValue(""</b>"") final String highlightPost,@QueryParam(""wt"") @DefaultValue(""xml"") final String writerType,@QueryParam(""facet"") @DefaultValue(""false"") final String facet,@Context final HttpServletRequest request) {try {return ok(search(new SearchRequest.SearchRequestBuilder().setRows(rows).setStart(start).setQuery(query).setHighlight(highlight).setHighlightPre(highlightPre).setHighlightPost(highlightPost).setFormat(writerType).setFacet(facet).build(),request));} catch (IllegalArgumentException e) {return badRequest(e.getMessage());} catch (QueryException qe) {throw RestServiceHelper.createWebApplicationException(qe, request);} catch (Exception e) {return internalServerError(""Unexpected error"");}}}"	Yes
474	"public class A {protected LogEventRequestType getLogEventRequestType(EDXLDistribution body,AssertionType assertion,String direction,NhinTargetSystemType target,String _interface) {LOG.trace(""Entering ADTransform-getLogEventRequestType() method."");LogEventRequestType result = new LogEventRequestType();AuditMessageType auditMsg = new AuditMessageType();boolean bRequiredFieldsAreNull = areRequiredUserTypeFieldsNull(assertion);if (bRequiredFieldsAreNull) {return null;}UserType userInfo = assertion.getUserInfo();CodedValueType eventID;eventID =AuditDataTransformHelper.createEventId(AuditDataTransformConstants.EVENT_ID_CODE_SYS_NAME_T63,AuditDataTransformConstants.EVENT_ID_DISPLAY_NAME_ADMIN_DIST,AuditDataTransformConstants.EVENT_ID_CODE_SYS_NAME_T63,AuditDataTransformConstants.EVENT_ID_DISPLAY_NAME_ADMIN_DIST);auditMsg.setEventIdentification(AuditDataTransformHelper.createEventIdentification(AuditDataTransformConstants.EVENT_ACTION_CODE_CREATE,AuditDataTransformConstants.EVENT_OUTCOME_INDICATOR_SUCCESS,eventID));AuditMessageType.ActiveParticipant participant =AuditDataTransformHelper.createActiveParticipantFromUser(userInfo, true);auditMsg.getActiveParticipant().add(participant);String communityId =getAdminDistributionMessageCommunityID(assertion, direction, _interface, target);AuditSourceIdentificationType auditSource =AuditDataTransformHelper.createAuditSourceIdentification(communityId, communityId);auditMsg.getAuditSourceIdentification().add(auditSource);result.setAuditMessage(auditMsg);result.setDirection(_interface + "" "" + direction);result.setRemoteHCID(HomeCommunityMap.formatHomeCommunityId(communityId));result.setEventType(NhincConstants.NHIN_ADMIN_DIST_SERVICE_NAME);result.setEventID(auditMsg.getEventIdentification().getEventID().getDisplayName());result.setEventOutcomeIndicator(auditMsg.getEventIdentification().getEventOutcomeIndicator());result.setEventTimestamp(auditMsg.getEventIdentification().getEventDateTime());result.setAssertion(assertion);result.setRelatesTo(getRelatesTo(assertion));result.setRequestMessageId(assertion.getMessageId());LOG.trace(""Exiting ADTransform-getLogEventRequestType() method."");return result;}}"	Yes
475	"public class A {public void setRootLogLevel(String level) {ch.qos.logback.classic.Logger root =(ch.qos.logback.classic.Logger) LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME);if (level == null || level.length() == 0) {stopLogging();return;} else if (""debug"".equalsIgnoreCase(level)) {root.setLevel(ch.qos.logback.classic.Level.DEBUG);} else if (""info"".equalsIgnoreCase(level)) {root.setLevel(ch.qos.logback.classic.Level.INFO);} else if (""warn"".equalsIgnoreCase(level)) {root.setLevel(ch.qos.logback.classic.Level.WARN);} else if (""error"".equalsIgnoreCase(level)) {root.setLevel(ch.qos.logback.classic.Level.ERROR);} else {}if (!isLogging) {root.addAppender(this);}getLogLevel();broadcastState();}}"	Yes
476	"public class A {private TextUnit getNextTextUnit() throws NoSuchElementException {TextUnitDTOWithComments textUnitDTO = textUnitsIterator.next();if (logger.isDebugEnabled()) {}TextUnit textUnit = new TextUnit("""");textUnit.setName(textUnitDTO.getName());textUnitUtils.replaceSourceString(textUnit, textUnitDTO.getSource());TextContainer targetTextContainer = new TextContainer(textUnitDTO.getTarget());textUnit.setTarget(targetLocale, targetTextContainer);ImportExportNote importExportNote = new ImportExportNote();importExportNote.setSourceComment(textUnitDTO.getComment());importExportNote.setTargetComment(textUnitDTO.getTargetComment());importExportNote.setStatus(textUnitDTO.getStatus());importExportNote.setIncludedInLocalizedFile(textUnitDTO.isIncludedInLocalizedFile());importExportNote.setCreatedDate(textUnitDTO.getCreatedDate());importExportNote.setVariantComments(textUnitDTO.getTmTextUnitVariantComments());importExportNote.setPluralForm(textUnitDTO.getPluralForm());importExportNote.setPluralFormOther(textUnitDTO.getPluralFormOther());importExportTextUnitUtils.setImportExportNote(textUnit, importExportNote);textUnit.setPreserveWhitespaces(true);return textUnit;}}"	Yes
477	"public class A {private void processCacheGroup(CacheGroupContext grp) throws IgniteCheckedException {assert grp.offheap() instanceof GridCacheOffheapManager;PendingEntriesTree oldPendingTree;final IgniteCacheDatabaseSharedManager db = grp.shared().database();db.checkpointReadLock();try {IndexStorage indexStorage = ((GridCacheOffheapManager) grp.offheap()).getIndexStorage();RootPage pendingRootPage = indexStorage.allocateIndex(PENDING_ENTRIES_TREE_NAME);if (pendingRootPage.isAllocated()) {log.info(""No pending tree found for cache group: [grpId=""+ grp.groupId()+ "", grpName=""+ grp.name()+ ']');indexStorage.dropIndex(PENDING_ENTRIES_TREE_NAME);return;}oldPendingTree =new PendingEntriesTree(grp,PENDING_ENTRIES_TREE_NAME,grp.dataRegion().pageMemory(),pendingRootPage.pageId().pageId(),((GridCacheOffheapManager) grp.offheap()).reuseListForIndex(null),false,null,PageIdAllocator.FLAG_IDX);} finally {db.checkpointReadUnlock();}processPendingTree(grp, oldPendingTree);if (Thread.currentThread().isInterrupted()) return;db.checkpointReadLock();try {oldPendingTree.destroy();} finally {db.checkpointReadUnlock();}}}"	No
478	"public class A {private void respondWithFiles(HttpServletResponse response, JSONArray filesJson)throws IOException {JSONObject responseObject = new JSONObject();try {responseObject.put(""files"", filesJson);} catch (JSONException e) {}String responseString = responseObject.toString();log.info(""response string: {}"", responseString);response.setContentType(""application/json"");PrintWriter writer = response.getWriter();writer.write(responseString);writer.close();}}"	Yes
479	public class A {public static void error(final Logger logger, final String format, final Supplier<Object> supplier) {if (logger.isErrorEnabled()) {logger.error(format, supplier.get());}}}	No
480	"public class A {public Response addRelease(Release release) throws SW360Exception {log.debug(""create Release { name='""+ release.getName()+ ""', version='""+ release.getVersion()+ ""' }"");final AddDocumentRequestSummary addDocumentRequestSummary =componentDatabaseHandler.addRelease(release, user);final String releaseId = addDocumentRequestSummary.getId();if (releaseId == null || releaseId.isEmpty()) {throw new SW360Exception(""Id of added release should not be empty. "" + addDocumentRequestSummary.toString());}return new Response(releaseId,AddDocumentRequestStatus.SUCCESS.equals(addDocumentRequestSummary.getRequestStatus()));}}"	No
481	"public class A {@Overridepublic void getRateLimitStatus(final String... resources) {getDispatcher().invokeLater(new AsyncTask(RATE_LIMIT_STATUS, listeners) {@Overridepublic void invoke(List<TwitterListener> listeners) throws TwitterException {Map<String, RateLimitStatus> rateLimitStatus =twitter.getRateLimitStatus(resources);for (TwitterListener listener : listeners) {try {listener.gotRateLimitStatus(rateLimitStatus);} catch (Exception e) {logger.warn(""Exception at getRateLimitStatus"", e);}}}});}}"	No
482	public class A {private Collection evaluateGetInternal(EventBean event) {Object value = getter.get(event);if (value == null) {return null;}if (!(value.getClass().isArray())) {return null;}if (componentType.getType().isPrimitive()) {return new ArrayWrappingCollection(value);}return Arrays.asList((Object[]) value);}}	Yes
483	"public class A {@Testpublic void testDisambiguation() throws ParseException, IOException {AGDISTIS post = new AGDISTIS();String subjectString = ""Tom Cruise"";String objectString = ""Katie Holmes"";String preAnnotatedText =""<entity>"" + subjectString + ""</entity><entity>"" + objectString + ""</entity>"";HashMap<String, String> realResults = new LinkedHashMap<String, String>();realResults.put(""Katie Holmes"", ""http://dbpedia.org/resource/Katie_Holmes"");realResults.put(""Tom Cruise"", ""http://dbpedia.org/resource/Tom_Cruise"");HashMap<String, String> results = post.runDisambiguation(preAnnotatedText);for (String namedEntity : results.keySet()) {Assert.assertTrue(results.get(namedEntity).equals(realResults.get(namedEntity)));}}}"	Yes
484	"public class A {public Future<?> submitCarbondataAutoCleanupTask(ScheduledExecutorService executorService) {Future<?> result = null;if (null != executorService) {result = executorService.submit(new CarbondataAutoCleanerTask());log.debug(""Submitting task to Vacuum Cleaner thread pool"");}return result;}}"	No
485	"public class A {@Overridepublic CompletionStage<?> handleSubscribe(final String applicationId,final Topic topic,final MessageHandler handler,final ErrorHandler<? extends Throwable> errorHandler) {return subscribe(applicationId,topic,(messageTopic, payload) -> {logger.debug(""Received message for: {}"", topic);try {handleMessage(handler, payload);} catch (final Exception e) {try {errorHandler.handleError(e, null);} catch (final Exception e1) {throw e1;} catch (final Throwable e1) {throw new Exception(e1);}}});}}"	No
486	"public class A {@Overridepublic CompletableFuture<Void> stop() {abortPendingSnapshots();if (snapshotListener != null) {raft.getPersistedSnapshotStore().removeSnapshotListener(snapshotListener);}try {raft.getPersistedSnapshotStore().purgePendingSnapshots().join();} catch (final Exception e) {log.warn(""Failed to purge pending snapshots, which may result in unnecessary disk usage and should""+ "" be monitored"",e);}return super.stop();}}"	No
487	"public class A {private void markOutputPathForDeletion(final int projectId,final VirtualFile outputPath,final String classname,final String srcUrl) {final SourceUrlClassNamePair pair = new SourceUrlClassNamePair(srcUrl, classname);synchronized (myDataLock) {final Outputs outputs = myOutputsToDelete.get(projectId);try {outputs.put(outputPath.getPath(), pair);if (LOG.isDebugEnabled() || DEBUG_MODE) {final String message = ""ADD path to delete: "" + outputPath + ""; source: "" + srcUrl;if (DEBUG_MODE) {System.out.println(message);}}} finally {outputs.release();}}}}"	Yes
488	"public class A {public static synchronized void updateAccumuloVersion(VolumeManager fs, int oldVersion) {for (Volume volume : fs.getVolumes()) {try {if (getAccumuloPersistentVersion(volume) == oldVersion) {Path dataVersionLocation = ServerConstants.getDataVersionLocation(volume);fs.create(new Path(dataVersionLocation, Integer.toString(ServerConstants.DATA_VERSION))).close();Path prevDataVersionLoc = new Path(dataVersionLocation, Integer.toString(oldVersion));if (!fs.delete(prevDataVersionLoc)) {throw new RuntimeException(""Could not delete previous data version location (""+ prevDataVersionLoc+ "") for ""+ volume);}}} catch (IOException e) {throw new RuntimeException(""Unable to set accumulo version: an error occurred."", e);}}}}"	Yes
489	"public class A {@Testpublic void testTxLoadFromStore() throws Exception {Ignite ignite0 = ignite(0);final IgniteTransactions txs = ignite0.transactions();for (CacheConfiguration<Integer, Integer> ccfg : cacheConfigurations()) {if (ccfg.getCacheStoreFactory() == null) continue;logCacheInfo(ccfg);try {IgniteCache<Integer, Integer> cache = ignite0.createCache(ccfg);List<Integer> keys = testKeys(cache);for (Integer key : keys) {log.info(""Test key: "" + key);Integer storeVal = -1;storeMap.put(key, storeVal);try (Transaction tx = txs.txStart(OPTIMISTIC, SERIALIZABLE)) {Integer val = cache.get(key);assertEquals(storeVal, val);tx.commit();}checkValue(key, storeVal, cache.getName());cache.remove(key);try (Transaction tx = txs.txStart(OPTIMISTIC, SERIALIZABLE)) {Integer val = cache.get(key);assertNull(val);tx.commit();}checkValue(key, null, cache.getName());}} finally {destroyCache(ccfg.getName());}}}}"	No
490	"public class A {public void pushChange(String indexName) {lock.executeInWriteLock(() -> {pushCounter.increment();LOGGER.trace(""index added for refresh: %s"", indexName);indexToMaxRefreshTime.put(indexName, getTime());});}}"	No
491	public class A {void completeAndAddScreenshotToRun(Screenshot screenshot, ScreenshotRun screenshotRun) {screenshot.setScreenshotRun(screenshotRun);for (ScreenshotTextUnit screenshotTextUnit : screenshot.getScreenshotTextUnits()) {completeScreenshotTextUnit(screenshotTextUnit, screenshot);}Screenshot existingScreenshot =screenshotRepository.findByScreenshotRunAndNameAndLocale(screenshotRun, screenshot.getName(), screenshot.getLocale());if (existingScreenshot != null) {screenshotRepository.delete(existingScreenshot);screenshotRepository.flush();}screenshotRepository.save(screenshot);}}	Yes
492	"public class A {@Overridepublic void implementsInterfaces(TypeRef[] interfaces) {if (m_baseClass) {List<String> result = new ArrayList<String>();for (int i = 0; i < interfaces.length; i++) {if (!interfaces[i].getBinary().equals(""scala/ScalaObject"")) {result.add(interfaces[i].getFQN());}}m_interfaces = result.toArray(new String[result.size()]);}}}"	Yes
493	"public class A {@Overridepublic void processOpts() {super.processOpts();String specDir = this.additionalProperties.get(SPEC_DIR) + """";if (!Files.isDirectory(Paths.get(specDir))) {LOGGER.warn(""base part for include markup lambda not found: ""+ specDir+ "" as ""+ Paths.get(specDir).toAbsolutePath());}this.includeSpecMarkupLambda = new IncludeMarkupLambda(SPEC_DIR, specDir);additionalProperties.put(""specinclude"", this.includeSpecMarkupLambda);String snippetDir = this.additionalProperties.get(SNIPPET_DIR) + """";if (!Files.isDirectory(Paths.get(snippetDir))) {LOGGER.warn(""base part for include markup lambda not found: ""+ snippetDir+ "" as ""+ Paths.get(snippetDir).toAbsolutePath());}this.includeSnippetMarkupLambda = new IncludeMarkupLambda(SNIPPET_DIR, snippetDir);additionalProperties.put(""snippetinclude"", this.includeSnippetMarkupLambda);this.linkSnippetMarkupLambda = new LinkMarkupLambda(snippetDir);additionalProperties.put(""snippetlink"", this.linkSnippetMarkupLambda);processBooleanFlag(HEADER_ATTRIBUTES_FLAG, headerAttributes);processBooleanFlag(USE_INTRODUCTION_FLAG, useIntroduction);processBooleanFlag(SKIP_EXAMPLES_FLAG, skipExamples);processBooleanFlag(USE_METHOD_AND_PATH_FLAG, useMethodAndPath);processBooleanFlag(USE_TABLE_TITLES_FLAG, useTableTitles);}}"	No
494	public class A {public static void warn(final Object message, final Throwable t) {Logger logger = Logger.getLogger(getCallerClassName());if (verbose) setVerboseLogger(logger);logger.warn(message, t);}}	No
495	"public class A {public void saveToFile() {synchronized (voyages) {VoyageStore voyageStore = new VoyageStore(this);try {FileOutputStream fileOut = new FileOutputStream(VOYAGESFILE);ObjectOutputStream objectOut = new ObjectOutputStream(fileOut);objectOut.writeObject(voyageStore);objectOut.close();fileOut.close();} catch (IOException e) {LOG.error(""Failed to save routes file: "" + e.getMessage());}}}}"	No
496	"public class A {@Testpublic void testApplication() throws IOException, Exception {for (final Locality l : Locality.values()) {logger.debug(""Running the with {} locality"", l);LocalMode.runApp(new Benchmark.AbstractApplication() {@Overridepublic Locality getLocality() {return l;}},60000);}}}"	No
497	"public class A {@Overridepublic void initialize(ServerConfiguration conf,LedgerManager ledgerManager,LedgerDirsManager ledgerDirsManager,LedgerDirsManager indexDirsManager,StateManager stateManager,CheckpointSource checkpointSource,Checkpointer checkpointer,StatsLogger statsLogger,ByteBufAllocator allocator)throws IOException {long writeCacheMaxSize =getLongVariableOrDefault(conf, WRITE_CACHE_MAX_SIZE_MB, DEFAULT_WRITE_CACHE_MAX_SIZE_MB)* MB;long readCacheMaxSize =getLongVariableOrDefault(conf, READ_AHEAD_CACHE_MAX_SIZE_MB, DEFAULT_READ_CACHE_MAX_SIZE_MB)* MB;this.allocator = allocator;this.numberOfDirs = ledgerDirsManager.getAllLedgerDirs().size();log.info(""Started Db Ledger Storage"");log.info("" - Number of directories: {}"", numberOfDirs);log.info("" - Write cache size: {} MB"", writeCacheMaxSize / MB);log.info("" - Read Cache: {} MB"", readCacheMaxSize / MB);if (readCacheMaxSize + writeCacheMaxSize > PlatformDependent.maxDirectMemory()) {throw new IOException(""Read and write cache sizes exceed the configured max direct memory size"");}long perDirectoryWriteCacheSize = writeCacheMaxSize / numberOfDirs;long perDirectoryReadCacheSize = readCacheMaxSize / numberOfDirs;gcExecutor =Executors.newSingleThreadScheduledExecutor(new DefaultThreadFactory(""GarbageCollector""));ledgerStorageList = Lists.newArrayList();for (File ledgerDir : ledgerDirsManager.getAllLedgerDirs()) {File[] dirs = new File[1];dirs[0] = ledgerDir.getParentFile();LedgerDirsManager ldm =new LedgerDirsManager(conf, dirs, ledgerDirsManager.getDiskChecker(), statsLogger);ledgerStorageList.add(newSingleDirectoryDbLedgerStorage(conf,ledgerManager,ldm,indexDirsManager,stateManager,checkpointSource,checkpointer,statsLogger,gcExecutor,perDirectoryWriteCacheSize,perDirectoryReadCacheSize));ldm.getListeners().forEach(ledgerDirsManager::addLedgerDirsListener);}this.stats =new DbLedgerStorageStats(statsLogger,() ->ledgerStorageList.stream().mapToLong(SingleDirectoryDbLedgerStorage::getWriteCacheSize).sum(),() ->ledgerStorageList.stream().mapToLong(SingleDirectoryDbLedgerStorage::getWriteCacheCount).sum(),() ->ledgerStorageList.stream().mapToLong(SingleDirectoryDbLedgerStorage::getReadCacheSize).sum(),() ->ledgerStorageList.stream().mapToLong(SingleDirectoryDbLedgerStorage::getReadCacheCount).sum());}}"	No
498	public class A {@Testpublic void testSingleAspInAs() throws Exception {server.start();Thread.sleep(100);client.start();Thread.sleep(10000);assertEquals(AspState.getState(remAsp.getPeerFSM().getState().getName()), AspState.ACTIVE);assertEquals(AsState.getState(remAs.getLocalFSM().getState().getName()), AsState.ACTIVE);assertEquals(AspState.getState(localAsp.getLocalFSM().getState().getName()), AspState.ACTIVE);assertEquals(AsState.getState(localAs.getPeerFSM().getState().getName()), AsState.ACTIVE);client.sendRkmRegister();Thread.sleep(2000);assertEquals(serverM3uaMgmt.getAppServers().size(), 2);assertEquals(serverM3uaMgmt.getRoute().size(), 3);client.sendRkmDeregister();Thread.sleep(2000);assertEquals(serverM3uaMgmt.getAppServers().size(), 1);assertEquals(serverM3uaMgmt.getRoute().size(), 1);client.stop();server.stop();Thread.sleep(100);}}	Yes
499	"public class A {private JCheckBox getActivationCheckBox() {if (myActiveCheckBox == null) {myActiveCheckBox = new JCheckBox(""Active"");myActiveCheckBox.setFocusPainted(false);myActiveCheckBox.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent e) {EventQueueUtilities.waitCursorRun(myActiveCheckBox,() -> {try {new DefaultDataGroupActivator(myToolbox.getEventManager()).setGroupActive(myDGI, myActiveCheckBox.isSelected());} catch (InterruptedException e1) {if (LOGGER.isDebugEnabled()) {LOGGER.debug(e1, e1);}}});}});}return myActiveCheckBox;}}"	No
500	"public class A {protected Set<BookieId> addDefaultRackBookiesIfMinNumRacksIsEnforced(Set<BookieId> excludeBookies) {Set<BookieId> comprehensiveExclusionBookiesSet;if (enforceMinNumRacksPerWriteQuorum) {Set<BookieId> bookiesInDefaultRack = null;Set<Node> defaultRackLeaves = topology.getLeaves(getDefaultRack());for (Node node : defaultRackLeaves) {if (node instanceof BookieNode) {if (bookiesInDefaultRack == null) {bookiesInDefaultRack = new HashSet<BookieId>(excludeBookies);}bookiesInDefaultRack.add(((BookieNode) node).getAddr());} else {LOG.error(""found non-BookieNode: {} as leaf of defaultrack: {}"", node, getDefaultRack());}}if ((bookiesInDefaultRack == null) || bookiesInDefaultRack.isEmpty()) {comprehensiveExclusionBookiesSet = excludeBookies;} else {comprehensiveExclusionBookiesSet = new HashSet<BookieId>(excludeBookies);comprehensiveExclusionBookiesSet.addAll(bookiesInDefaultRack);LOG.info(""enforceMinNumRacksPerWriteQuorum is enabled, so Excluding bookies of defaultRack: {}"",bookiesInDefaultRack);}} else {comprehensiveExclusionBookiesSet = excludeBookies;}return comprehensiveExclusionBookiesSet;}}"	No
501	"public class A {@Overridepublic Response toResponse(Throwable exception) {try {log.error(""Jersey error."", exception);return Response.temporaryRedirect(new URI(getRedirectURI())).build();} catch (Exception e) {log.error(""Jersey error."", e);return Response.status(500).entity(""Something bad happened. Please try again later!"").type(""text/plain"").build();}}}"	No
502	"public class A {private RuleServiceResult createSessionAndExecuteRules(KieBase kbase, RuleServiceRequest req) {logger.info(""Entering createSessionAndExecuteRules() and creating Stateless session."");StatelessKieSession ksession = kbase.newStatelessKieSession();ksession.setGlobal(RuleServiceConstants.RULE_RESULT_LIST_NAME, new ArrayList<Object>());final RuleExecutionStatistics stats = new RuleExecutionStatistics();List<EventListener> listeners = createEventListeners(stats);RuleEventListenerUtils.addEventListenersToKieSEssion(ksession, listeners);logger.debug(""About to run rules."");Collection<?> requestObjects = req.getRequestObjects();ksession.execute(requestObjects);logger.debug(""ran rules against kie (knowledge is everything)"");Globals globals = ksession.getGlobals();Collection<String> keys = globals.getGlobalKeys();Iterator<String> iter = keys.iterator();RuleServiceResult res = null;while (iter.hasNext()) {if (iter.next().equals(RuleServiceConstants.RULE_RESULT_LIST_NAME)) {@SuppressWarnings(""unchecked"")List<RuleHitDetail> resList =(List<RuleHitDetail>) globals.get(RuleServiceConstants.RULE_RESULT_LIST_NAME);res = new BasicRuleServiceResult(resList, stats);}}logger.info(""Retrieved Rule execution result objects and exit createSessionAndExecuteRules()."");return res;}}"	Yes
503	"public class A {@Overridepublic void reserve(NicProfile nic,Network network,VirtualMachineProfile vm,DeployDestination dest,ReservationContext context)throws InsufficientAddressCapacityException, ConcurrentOperationException,InsufficientVirtualNetworkCapacityException {if (dest.getHost().getHypervisorType() != HypervisorType.BareMetal) {super.reserve(nic, network, vm, dest, context);return;}HostVO host = _hostDao.findById(dest.getHost().getId());_hostDao.loadDetails(host);String intentIp = host.getDetail(ApiConstants.IP_ADDRESS);if (intentIp == null) {super.reserve(nic, network, vm, dest, context);return;}String oldIp = nic.getIPv4Address();boolean getNewIp = false;if (oldIp == null) {getNewIp = true;} else {final IPAddressVO ipVO = _ipAddressDao.findByIpAndSourceNetworkId(network.getId(), oldIp);if (ipVO != null) {PodVlanMapVO mapVO = _podVlanDao.listPodVlanMapsByVlan(ipVO.getVlanId());if (mapVO.getPodId() != dest.getPod().getId()) {Transaction.execute(new TransactionCallbackNoReturn() {@Overridepublic void doInTransactionWithoutResult(TransactionStatus status) {_ipAddrMgr.markIpAsUnavailable(ipVO.getId());_ipAddressDao.unassignIpAddress(ipVO.getId());}});nic.setIPv4Address(null);getNewIp = true;}}}if (getNewIp) {getBaremetalIp(nic, dest.getPod(), vm, network, intentIp);}DataCenter dc = _dcDao.findById(network.getDataCenterId());nic.setIPv4Dns1(dc.getDns1());nic.setIPv4Dns2(dc.getDns2());s_logger.debug(""Allocated a nic "" + nic + "" for "" + vm);}}"	No
504	"public class A {@Overridepublic void commitReservation(UUID reservationId) throws VcProviderException {removeReservation(reservationId);logger.info(""current VMs Cloning is done, commit Reservation."");}}"	No
505	"public class A {protected void checkSchema(final JsonNode node, final URI uri)throws JsonModelValidationException {try {final String jsonString = objectMapper.writeValueAsString(node);objectMapper.readValue(jsonString, Schema.class);} catch (final IOException e) {ModelTest.log.warn(""The file '"" + uri + ""' did not pass validation."", e);throw new JsonModelValidationException(""Invalid JSON content in resource: "" + uri.toString(), e);}}}"	No
506	"public class A {@Overridepublic boolean startup(IPentahoSession arg0) {ISystemConfig systemSettings = PentahoSystem.get(ISystemConfig.class);Boolean enableAsyncLoading = true;if (systemSettings != null) {String disableLoadAsyncStr =systemSettings.getProperty(""system.enable-async-default-content-loading"");enableAsyncLoading = Boolean.valueOf(disableLoadAsyncStr);}Runnable runnable =new Runnable() {@Overridepublic void run() {try {SecurityHelper.getInstance().runAsSystem(new Callable<Void>() {@Overridepublic Void call() throws Exception {String solutionPath =PentahoSystem.getApplicationContext().getSolutionPath(DEFAULT_CONTENT_FOLDER);File directory = new File(solutionPath);IPlatformImporter importer = PentahoSystem.get(IPlatformImporter.class);ArchiveLoader archiveLoader = new ArchiveLoader(importer);archiveLoader.loadAll(directory, ArchiveLoader.ZIPS_FILTER);return null;}});} catch (Exception e) {}}};if (enableAsyncLoading) {Thread t = new Thread(runnable);t.setDaemon(true);t.setName(""Default Content Loader Thread"");t.start();} else {runnable.run();}return true;}}"	Yes
507	"public class A {public static String checkHeartbeatNamespace(ServiceUnitId ns) {Matcher m = HEARTBEAT_NAMESPACE_PATTERN.matcher(ns.getNamespaceObject().toString());if (m.matches()) {return String.format(""http://%s"", m.group(1));} else {return null;}}}"	Yes
508	"public class A {private void sendResponse(UUID nodeId, Object resTopic, long reqId, @Nullable Throwable err, boolean forceLocDep) {byte[] errBytes;try {errBytes = err != null ? U.marshal(marsh, err) : null;} catch (Exception e) {U.error(log, ""Failed to marshal error [err="" + err + "", marshErr="" + e + ']', e);errBytes = marshErrBytes;}DataStreamerResponse res = new DataStreamerResponse(reqId, errBytes, forceLocDep);try {ctx.io().sendToCustomTopic(nodeId, resTopic, res, threadIoPolicy());} catch (IgniteCheckedException e) {if (ctx.discovery().alive(nodeId))U.error(log, ""Failed to respond to node [nodeId="" + nodeId + "", res="" + res + ']', e);else if (log.isDebugEnabled()) log.debug(""Node has left the grid: "" + nodeId);}}}"	No
509	public class A {public static void reactiveInvoke(Invocation invocation, AsyncResponse asyncResp) {try {invocation.onStart(null, System.nanoTime());invocation.setSync(false);ReactiveResponseExecutor respExecutor = new ReactiveResponseExecutor();invocation.setResponseExecutor(respExecutor);invocation.onStartHandlersRequest();invocation.next(ar -> {ContextUtils.setInvocationContext(invocation.getParentContext());try {invocation.getInvocationStageTrace().finishHandlersResponse();invocation.onFinish(ar);asyncResp.handle(ar);} finally {ContextUtils.removeInvocationContext();}});} catch (Throwable e) {invocation.getInvocationStageTrace().finishHandlersResponse();Response response = Response.createConsumerFail(e);invocation.onFinish(response);asyncResp.handle(response);}}}	Yes
510	"public class A {protected void upgradeResourcePermission(String name) throws Exception {StringBundler sb1 = new StringBundler(4);sb1.append(""select resourceActionId, bitwiseValue from "");sb1.append(""ResourceAction where actionId = 'ADD_ENTRY' and name = '"");sb1.append(name);sb1.append(""'"");StringBundler sb2 = new StringBundler(5);sb2.append(""select resourcePermissionId, companyId, scope, primKey, "");sb2.append(""primKeyId, roleId, actionIds from ResourcePermission "");sb2.append(""where name = '"");sb2.append(name);sb2.append(""'"");try (PreparedStatement preparedStatement1 = connection.prepareStatement(sb1.toString());ResultSet resultSet1 = preparedStatement1.executeQuery()) {if (!resultSet1.next()) {if (!_ignoreMissingAddEntryResourceAction) {}return;}long bitwiseValue = resultSet1.getLong(""bitwiseValue"");try (PreparedStatement preparedStatement2 = connection.prepareStatement(sb2.toString());ResultSet resultSet = preparedStatement2.executeQuery()) {while (resultSet.next()) {long actionIds = resultSet.getLong(""actionIds"");if ((bitwiseValue & actionIds) == 0) {continue;}long resourcePermissionId = resultSet.getLong(""resourcePermissionId"");long companyId = resultSet.getLong(""companyId"");int scope = resultSet.getInt(""scope"");String primKey = resultSet.getString(""primKey"");long primKeyId = resultSet.getLong(""primKeyId"");updateResourcePermission(resourcePermissionId, actionIds - bitwiseValue);if (scope == ResourceConstants.SCOPE_INDIVIDUAL) {if (primKey.contains(""_LAYOUT_"")) {primKey = String.valueOf(companyId);primKeyId = companyId;scope = ResourceConstants.SCOPE_COMPANY;} else {continue;}}long roleId = resultSet.getLong(""roleId"");addAnnouncementsAdminViewResourcePermission(companyId, scope, primKey, primKeyId, roleId);}}long resourceActionId = resultSet1.getLong(""resourceActionId"");deleteResourceAction(resourceActionId);}}}"	Yes
511	"public class A {@Override@SuppressWarnings(""unchecked"")public K apply(File... files) {try (Context context = defaultContext()) {Map<File, ExecResult> execResults =execRecursive(APPLY, files, Comparator.comparing(File::getName).reversed());for (Map.Entry<File, ExecResult> entry : execResults.entrySet()) {if (!entry.getValue().exitStatus()) {}}return (K) this;}}}"	Yes
512	"public class A {@Overridepublic void updateAccessList(LoadBalancerEndpointConfiguration config, LoadBalancer loadBalancer)throws InsufficientRequestException, StmRollBackException {if (loadBalancer.getAccessLists() != null && !loadBalancer.getAccessLists().isEmpty()) {String name = ZxtmNameBuilder.genVSName(loadBalancer);LOG.info(String.format(""Updating Access List on '%s'..."", name));updateProtection(config, loadBalancer);LOG.info(String.format(""Successfully updated Access List on '%s'..."", name));}}}"	No
513	"public class A {@Nonnullpublic static TextDiffType getDiffType(boolean hasDeleted, boolean hasInserted) {if (hasDeleted && hasInserted) {return TextDiffType.MODIFIED;} else if (hasDeleted) {return TextDiffType.DELETED;} else if (hasInserted) {return TextDiffType.INSERTED;} else {LOG.error(""Diff fragment should not be empty"");return TextDiffType.MODIFIED;}}}"	No
514	"public class A {private AccessToken executePost(OkHttpClient httpClient, Request newRequest)throws AccessTokenAcquisitionException {try {Response response = httpClient.newCall(newRequest).execute();String body = response.body().string();if (response.code() >= 300) {getLogger().error(String.format(""Bad response from the server during oauth2 request:\n%s"", body));throw new AccessTokenAcquisitionException(String.format(""Got HTTP %d during oauth2 request."", response.code()));}return parseTokenResponse(body);} catch (IOException e) {throw new AccessTokenAcquisitionException(e);}}}"	No
515	"public class A {@Overridepublic MockHost getHost(String guid) {TransactionLegacy txn = TransactionLegacy.open(TransactionLegacy.SIMULATOR_DB);try {txn.start();MockHost _host = _mockHostDao.findByGuid(guid);txn.commit();if (_host != null) {return _host;} else {s_logger.error(""Host with guid "" + guid + "" was not found"");return null;}} catch (Exception ex) {txn.rollback();throw new CloudRuntimeException(""Unable to get host "" + guid + "" due to "" + ex.getMessage(), ex);} finally {txn.close();txn = TransactionLegacy.open(TransactionLegacy.CLOUD_DB);txn.close();}}}"	No
516	"public class A {@MCRCommand(syntax = ""repair mcrdata.xml for derivate {0} in content store {1}"",help =""repair the entries in mcrdata.xml with data from content store {1} for MCRDerivate {0}"")public static void repairMcrdataXmlForDerivate(String derivateId, String contentStore) {MCRObjectID mcrDerivateId;try {mcrDerivateId = MCRObjectID.getInstance(derivateId);} catch (MCRException e) {LOGGER.error(""Wrong derivate parameter, it is not a MCRObjectID"");return;}if (contentStore == null || contentStore.length() == 0) {LOGGER.error(""Empty content store parameter"");return;}MCRContentStore store = MCRContentStoreFactory.getStore(contentStore);if (!(store instanceof MCRCStoreIFS2)) {LOGGER.error(""The content store is not a IFS2 type"");return;}try {MCRFileCollection fileCollection =((MCRCStoreIFS2) store).getIFS2FileCollection(mcrDerivateId);fileCollection.repairMetadata();} catch (IOException e) {LOGGER.error(""Error while repair derivate with ID {}"", mcrDerivateId);}}}"	Yes
517	"public class A {@GET@Path(""capture/{agent}/upcoming"")@Produces(MediaType.APPLICATION_JSON)@RestQuery(name = ""upcomingcapture"",description = ""Get the upcoming capture event catalog as JSON"",returnDescription = ""The upcoming capture event catalog as JSON"",pathParameters = {@RestParameter(name = ""agent"",isRequired = true,type = Type.STRING,description = ""The agent identifier"")},responses = {@RestResponse(responseCode = HttpServletResponse.SC_OK,description = ""DublinCore of the upcomfing capture event is in the body of response""),@RestResponse(responseCode = HttpServletResponse.SC_NOT_FOUND,description = ""There is no upcoming recording""),@RestResponse(responseCode = HttpServletResponse.SC_SERVICE_UNAVAILABLE,description = ""The agent is not ready to communicate"")})public Response upcomingCapture(@PathParam(""agent"") String agentId) throws NotFoundException {if (service == null || agentService == null)return Response.serverError().status(Response.Status.SERVICE_UNAVAILABLE).entity(""Scheduler service is unavailable, please wait..."").build();try {Opt<MediaPackage> upcoming = service.getUpcomingRecording(agentId);if (upcoming.isNone()) {throw new NotFoundException(""No recording to stop found for agent: "" + agentId);} else {DublinCoreCatalog catalog =DublinCoreUtil.loadEpisodeDublinCore(workspace, upcoming.get()).get();return Response.ok(catalog.toJson()).build();}} catch (NotFoundException e) {throw e;} catch (Exception e) {throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);}}}"	Yes
518	"public class A {@Overridepublic void initialize() throws InitializationException {CacheConfiguration cacheConfiguration = new CacheConfiguration(""localization."" + getId());try {this.documentBundlesCache = this.cacheManager.createNewCache(cacheConfiguration);} catch (CacheException e) {this.logger.error(""Failed to create cache [{}]"", cacheConfiguration.getConfigurationId(), e);}}}"	No
519	public class A {public static void runZKFromConfig(ServerConfig config, ServerCnxnFactory cnxnFactory)throws IOException {FileTxnSnapLog txnLog = null;try {ZooKeeperServer zkServer = new ZooKeeperServer();txnLog = new FileTxnSnapLog(new File(config.getDataDir()), new File(config.getDataDir()));zkServer.setTxnLogFactory(txnLog);zkServer.setTickTime(config.getTickTime());zkServer.setMinSessionTimeout(config.getMinSessionTimeout());zkServer.setMaxSessionTimeout(config.getMaxSessionTimeout());cnxnFactory = ServerCnxnFactory.createFactory();cnxnFactory.configure(config.getClientPortAddress(), config.getMaxClientCnxns());cnxnFactory.startup(zkServer);cnxnFactory.join();if (zkServer.isRunning()) {zkServer.shutdown();}} catch (InterruptedException e) {System.exit(1);} finally {if (txnLog != null) {txnLog.close();}}}}	Yes
520	"public class A {protected void internalCompleteAnnotation(AjaxRequestTarget aTarget, CAS aCas)throws IOException, AnnotationException {AnnotatorState state = getModelObject();LOG.trace(""actionAnnotate() updating progress information"");int sentenceNumber = getSentenceNumber(aCas, state.getSelection().getBegin());state.setFocusUnitIndex(sentenceNumber);editorPage.writeEditorCas(aCas);LOG.trace(""actionAnnotate() remembering feature editor values"");state.rememberFeatures();loadFeatureEditorModels(aTarget);autoScroll(aCas);getForwardAnnotationTextField().setModelObject(null);if (state.getSelection().getAnnotation().isNotSet()) {if (layerSelectionPanel.getSelectableLayers().isEmpty()) {state.setSelectedAnnotationLayer(new AnnotationLayer());} else if (state.getSelectedAnnotationLayer() == null) {if (state.getRememberedSpanLayer() == null) {state.setSelectedAnnotationLayer(layerSelectionPanel.getSelectableLayers().get(0));} else {state.setSelectedAnnotationLayer(state.getRememberedSpanLayer());}}}}}"	No
521	"public class A {private void onNextAttemptCompleted(Boolean success, Throwable error) {assert executor.inEventLoop();if (success) {LOG.debug(""[{}] Reconnection successful"", logPrefix);reallyStop();} else {if (error != null && !(error instanceof CancellationException)) {Loggers.warnWithException(LOG, ""[{}] Uncaught error while starting reconnection attempt"", logPrefix, error);}if (state == State.STOP_AFTER_CURRENT) {reallyStop();} else {assert state == State.ATTEMPT_IN_PROGRESS;scheduleNextAttempt();}}}}"	No
522	"public class A {protected void exportPreview(PortletDataContext portletDataContext,FileEntry fileEntry,Element fileEntryElement,String binPathSuffix,String previewType,int fileIndex)throws Exception {if (portletDataContext.isPerformDirectBinaryImport()) {return;}FileVersion fileVersion = fileEntry.getFileVersion();if (!hasPreview(fileVersion, previewType)) {if (_log.isWarnEnabled()) {_log.warn(""No preview found for file entry "" + fileEntry.getFileEntryId());}return;}String binPathSegment = null;if (fileIndex < 0) {binPathSegment = previewType;} else {binPathSegment = String.valueOf(fileIndex + 1);}String binPath = getBinPath(portletDataContext, fileEntry, binPathSegment);StringBundler sb = new StringBundler(4);sb.append(""bin-path-preview-"");sb.append(binPathSegment);sb.append(""-"");sb.append(binPathSuffix);String binPathName = sb.toString();fileEntryElement.addAttribute(binPathName, binPath);if (fileIndex < 0) {fileIndex = 0;} else {fileIndex++;}try (InputStream inputStream = doGetPreviewAsStream(fileVersion, fileIndex, previewType)) {exportBinary(portletDataContext, fileEntryElement, fileVersion, inputStream, binPath, binPathName);}}}"	No
523	"public class A {@Testpublic void multipleNamesFirstProfileActive() throws Exception {this.environment.setActiveProfiles(""production"");initialize(""multi-profile-names.xml"");this.out.expect(containsString(""Hello""));}}"	Yes
524	"public class A {@Overridepublic void setupProperties() {oauthClientId.setValue("""");oauthClientSecret.setValue("""");if (_logger.isTraceEnabled()) {_logger.trace(""Properties set "" + System.identityHashCode(this));}}}"	No
525	"public class A {@Transition(to = ""INIT"", from = ""RUNNING"")public void onBecomeInitFromRunning(Message msg, NotificationContext context) {String taskPartition = msg.getPartitionName();if (_taskRunner == null) {throw new IllegalStateException(String.format(""Invalid state transition. There is no running task for partition %s."",taskPartition));}_taskRunner.cancel();TaskResult r = _taskRunner.waitTillDone();_taskRunner = null;}}"	Yes
526	"public class A {public HttpResponse<String> getOperationalEnvById(String id) {Properties headers = createHeaders();String url =String.format(""%s%s%s/%s"",aaiConfig.getHttpRequestConfig().getServerRootUrl(),aaiConfig.getHttpRequestConfig().getResourceNamespaces().get(OPERATIONAL_ENV_RESOURCE_CONFIG_PARAM),OPERATIONAL_ENV_RESOURCE,id);SupplierThrows<HttpResponse<String>, Exception> httpGet =() -> HttpRequest.get(url, headers, aaiConfig.getHttpClientConfig());long maxRetries = aaiConfig.getHttpClientConfig().getNumOfRetries();try {return FunctionalInterfaces.retryMethodOnException(httpGet, this::retryOnException, maxRetries);} catch (Exception e) {logger.debug(""Request failed with exception {}"", getCause(e).getMessage());return Responses.INTERNAL_SERVER_ERROR;}}}"	No
527	"public class A {public void refresh() {Map<String, UnderDatabaseFactory> map = new HashMap<>();String libDir = PathUtils.concatPath(ServerConfiguration.global().get(PropertyKey.HOME), ""lib"");List<File> files = new ArrayList<>();try (DirectoryStream<Path> stream =Files.newDirectoryStream(Paths.get(libDir), UDB_EXTENSION_PATTERN)) {for (Path entry : stream) {if (entry.toFile().isFile()) {files.add(entry.toFile());}}} catch (IOException e) {}for (File jar : files) {try {URL extensionURL = jar.toURI().toURL();ClassLoader extensionsClassLoader =new ExtensionsClassLoader(new URL[] {extensionURL}, ClassLoader.getSystemClassLoader());for (UnderDatabaseFactory factory :ServiceLoader.load(UnderDatabaseFactory.class, extensionsClassLoader)) {UnderDatabaseFactory existingFactory = map.get(factory.getType());if (existingFactory != null) {}map.put(factory.getType(), factory);}} catch (Throwable t) {}}for (UnderDatabaseFactory factory :ServiceLoader.load(UnderDatabaseFactory.class, UnderDatabaseRegistry.class.getClassLoader())) {UnderDatabaseFactory existingFactory = map.get(factory.getType());if (existingFactory != null) {}map.put(factory.getType(), factory);}mFactories = map;}}"	Yes
528	"public class A {private long getRowCountFromTable(String tableName, Text signalColumn, Authorizations authorizations) {try {LOGGER.debug(""BEGIN getRowCountFromTable(%s)"", tableName);Scanner scanner = createScanner(tableName, null, authorizations);try {scanner.fetchColumnFamily(signalColumn);IteratorSetting countingIterator =new IteratorSetting(100, CountingIterator.class.getSimpleName(), CountingIterator.class);scanner.addScanIterator(countingIterator);GRAPH_LOGGER.logStartIterator(tableName, scanner);long count = 0;for (Map.Entry<Key, Value> entry : scanner) {Long countForKey = LongCombiner.FIXED_LEN_ENCODER.decode(entry.getValue().get());LOGGER.debug(""getRowCountFromTable(%s): %s: %d"", tableName, entry.getKey().getRow(), countForKey);count += countForKey;}LOGGER.debug(""getRowCountFromTable(%s): TOTAL: %d"", tableName, count);return count;} finally {scanner.close();}} catch (TableNotFoundException ex) {throw new VertexiumException(""Could not get count from table: "" + tableName, ex);}}}"	No
529	"public class A {public void startSelfTest(@Identification final String deviceIdentification,@Identification final String organisationIdentification,final String correlationUid,final String messageType,final int messagePriority)throws FunctionalException {LOGGER.debug(""startSelfTest called with organisation {} and device {}"",organisationIdentification,deviceIdentification);this.findOrganisation(organisationIdentification);final Device device = this.findActiveDevice(deviceIdentification);this.osgpCoreRequestMessageSender.send(new RequestMessage(correlationUid, organisationIdentification, deviceIdentification, null),messageType,messagePriority,device.getIpAddress());}}"	No
530	"public class A {public Boolean createVbds(Xen.Vm vm, VirtualMachineTO spec) {if (spec.getDisks() == null) {return false;}for (DiskTO disk : spec.getDisks()) {try {if (disk.getType() == Volume.Type.ROOT) {VolumeObjectTO vol = (VolumeObjectTO) disk.getData();String diskFile =processor.getVirtualDiskPath(vol.getUuid(), vol.getDataStore().getUuid());vm.addRootDisk(diskFile);vm.setPrimaryPoolUuid(vol.getDataStore().getUuid());} else if (disk.getType() == Volume.Type.ISO) {DataTO isoTO = disk.getData();if (isoTO.getPath() != null) {TemplateObjectTO template = (TemplateObjectTO) isoTO;DataStoreTO store = template.getDataStore();if (!(store instanceof NfsTO)) {throw new CloudRuntimeException(""unsupported protocol"");}NfsTO nfsStore = (NfsTO) store;String secPoolUuid = pool.setupSecondaryStorage(nfsStore.getUrl());String isoPath =config.getAgentSecStoragePath() + ""/"" + secPoolUuid + ""/"" + template.getPath();vm.addIso(isoPath);}} else if (disk.getType() == Volume.Type.DATADISK) {VolumeObjectTO vol = (VolumeObjectTO) disk.getData();String diskFile =processor.getVirtualDiskPath(vol.getUuid(), vol.getDataStore().getUuid());vm.addDataDisk(diskFile);} else {throw new CloudRuntimeException(""Unknown disk type: "" + disk.getType());}} catch (Exception e) {throw new CloudRuntimeException(""Exception"" + e.getMessage(), e);}}return true;}}"	Yes
531	"public class A {@Overridepublic Authentication authenticate(Authentication authentication) throws AuthenticationException {Authentication authed = null;Cache userCache = cacheManager.getCache(""UserCache"");md.reset();byte[] hashKey =md.digest((authentication.getName() + authentication.getCredentials()).getBytes());String userKey = Arrays.toString(hashKey);Element authedUser = userCache.get(userKey);if (null != authedUser) {authed = (Authentication) authedUser.getObjectValue();SecurityContextHolder.getContext().setAuthentication(authed);} else {try {authed = super.authenticate(authentication);userCache.put(new Element(userKey, authed));} catch (AuthenticationException e) {logger.error(""Failed to auth user: "" + authentication.getName(), e);throw e;}UserDetails user =new User(authentication.getName(), ""skippped-ldap"", authed.getAuthorities());if (!userService.userExists(authentication.getName())) {userService.createUser(user);} else {userService.updateUser(user);}}return authed;}}"	No
532	"public class A {@Overridepublic void upgrade() {final FindIterable<Document> documentsWithMissingFields =collection.find(or(not(exists(ContentPack.FIELD_META_ID)),not(exists(ContentPack.FIELD_META_REVISION))));for (Document document : documentsWithMissingFields) {final ObjectId objectId = document.getObjectId(""_id"");final String id = document.get(""id"", objectId.toHexString());final int rev = document.get(""rev"", 0);document.put(""id"", id);document.put(""rev"", rev);final UpdateResult updateResult = collection.replaceOne(eq(""_id"", objectId), document);if (updateResult.wasAcknowledged()) {} else {}}}}"	Yes
533	public class A {public static NamedRelatedResourceRep toNamedRelatedResource(NamedURI resource) {ResourceTypeEnum resourceType = null;try {resourceType = ResourceTypeMapping.getResourceType(URIUtil.getModelClass(resource.getURI()));} catch (Exception e) {}return new NamedRelatedResourceRep(resource.getURI(), toLink(resourceType, resource.getURI()), resource.getName());}}	Yes
534	"public class A {private Response putObjectToNetwork(final String nwcId, final String path, final Object body) {log.debug("">>  [networkId : '{}']"", this.networkId);try {Response resp = sendRequest(nwcId, Request.Method.PUT, path, LogMessage.getSavedTxid(), body);if (resp.isError(""PUT"")) {log.warn(""invalid PUT({}) to {}: '{}' {}"", resp.statusCode, nwcId, path, resp.getBodyValue());}return resp;} catch (Exception e) {log.error(""Recieved Message Exception."", e);return new Response(Response.INTERNAL_SERVER_ERROR, null);}}}"	No
535	public class A {public PageResponse getPageDetailResponse() {PageResponse pageResponse = null;try {IPage draftPage = null;IPage onlinePage = null;String check = this.checkSelectedNode(this.getPageCode());if (null == check) {draftPage = this.getPage(this.getPageCode());onlinePage = this.getOnlinePage(this.getPageCode());}pageResponse = new PageResponse(this, draftPage, onlinePage);} catch (Throwable t) {this.getServletResponse().setStatus(Status.INTERNAL_SERVER_ERROR.getStatusCode());return null;}return pageResponse;}}	Yes
536	"public class A {@Overridepublic void close() {liveClosed.set(true);log.info(""Shutting down live query server. Disabled finding this job from mqm."");SearchRunner.shutdownSearchPool();super.close();}}"	No
537	"public class A {@Testvoid profileExpressionMatchFirst() throws Exception {this.environment.setActiveProfiles(""production"");initialize(""profile-expression.xml"");assertThat(this.output).contains(""Hello"");}}"	Yes
538	"public class A {private void checkForAttributesKey(String keyValue) {if (ArcConstants.ATTRIBUTES_KEY.equals(keyValue)) {if (LOGGER.isTraceEnabled()) {}if (myCurrentHasAttributes || myCurrentHasGeometry) {if (myCurrentHasAttributes && myCurrentHasGeometry) {createGeometryFromCurrent();} else {LOGGER.error(""Incomplete feature from document, abandoning"");clearFeatureState();}}myState = ArcSaxState.COLLECT_ATTRIBUTES;}}}"	Yes
539	"public class A {@Overridepublic final void handleRequest(final Exchange exchange) {LOG.debug(""running handler for resource [/{}] on vert.x context"", resource.getName());adapterContext.runOnContext(s -> resource.handleRequest(exchange));}}"	No
540	"public class A {@Overridepublic void afterFireAllRules(KieSession kieSession, TestGenKieSessionJournal journal, TestGenKieSessionFireAllRules fire) {KieSession uncorruptedSession = scoreDirector.createKieSession();for (TestGenKieSessionInsert insert : journal.getInitialInserts()) {Object object = insert.getFact().getInstance();uncorruptedSession.insert(object);}uncorruptedSession.fireAllRules();uncorruptedSession.dispose();Score<?> uncorruptedScore = extractScore(uncorruptedSession);Score<?> workingScore = extractScore(kieSession);if (!workingScore.equals(uncorruptedScore)) {LOGGER.debug(""    Score: working[{}], uncorrupted[{}]"", workingScore, uncorruptedScore);throw new TestGenCorruptedScoreException(workingScore, uncorruptedScore);}}}"	No
541	public class A {public static com.liferay.commerce.model.CPDAvailabilityEstimateSoapupdateCPDAvailabilityEstimate(long cpdAvailabilityEstimateId,long cpDefinitionId,long commerceAvailabilityEstimateId,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.commerce.model.CPDAvailabilityEstimate returnValue =CPDAvailabilityEstimateServiceUtil.updateCPDAvailabilityEstimate(cpdAvailabilityEstimateId,cpDefinitionId,commerceAvailabilityEstimateId,serviceContext);return com.liferay.commerce.model.CPDAvailabilityEstimateSoap.toSoapModel(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
542	"public class A {public CompletableFuture<? extends AbstractWatcher> start() {initInternals();this.selector = LabelsHelper.forKind(entityName, prefix);boolean ok = checkIntegrity();if (!ok) {return CompletableFuture.completedFuture(null);}log.info(""Starting {} for namespace {}"", operatorName, namespace);if (isCrd) {this.crd =crdDeployer.initCrds(client,prefix,entityName,shortNames,pluralName,additionalPrinterColumnNames,additionalPrinterColumnPaths,additionalPrinterColumnTypes,infoClass,isOpenshift);}onInit();CompletableFuture<? extends AbstractWatcher<T>> future = initializeWatcher();future.thenApply(res -> {this.watch = res;log.info(""{}{} running{} for namespace {}"",AnsiColors.gr(),operatorName,AnsiColors.xx(),Optional.ofNullable(namespace).orElse(""'all'""));return res;}).exceptionally(e -> {return null;});return future;}}"	Yes
543	"public class A {@Disabled@Testpublic void testCancelRelease() throws Exception {final com.braintreegateway.Result result = requestBody(""direct://CANCELRELEASE"", null);assertNotNull(result, ""cancelRelease result"");LOG.debug(""cancelRelease: "" + result);}}"	No
544	public class A {public void release() throws IOException {try {if (this.client != null) {this.client.release();}} catch (Exception e) {throw new IOException(e.getMessage());} finally {parser = null;buffer.clear();remAllConnectionListener();}}}	Yes
545	"public class A {@Overridepublic TqlElement visitLiteralComparison(TqlParser.LiteralComparisonContext ctx) {LOG.debug(""Visit literal comparison: "" + ctx.getText());TqlElement fieldTqlElement = ctx.getChild(0).accept(this);TqlParser.ComparisonOperatorContext comparisonOperator =ctx.getChild(TqlParser.ComparisonOperatorContext.class, 0);ComparisonOperator comparisonOperatorTqlElement =(ComparisonOperator) comparisonOperator.accept(this);TqlParser.LiteralValueContext literalValue =ctx.getChild(TqlParser.LiteralValueContext.class, 0);LiteralValue literalValueTqlElement = (LiteralValue) literalValue.accept(this);ComparisonExpression comparisonExpression =new ComparisonExpression(comparisonOperatorTqlElement, fieldTqlElement, literalValueTqlElement);LOG.debug(""End visit literal comparison: "" + ctx.getText());return comparisonExpression;}}"	No
546	"public class A {private void addReportingTaskFingerprint(final StringBuilder builder, final ReportingTaskDTO dto) {builder.append(dto.getId());builder.append(dto.getType());builder.append(dto.getName());addBundleFingerprint(builder, dto.getBundle());builder.append(dto.getComments());builder.append(dto.getSchedulingPeriod());builder.append(dto.getSchedulingStrategy());builder.append(dto.getAnnotationData());final BundleCoordinate coordinate = getCoordinate(dto.getType(), dto.getBundle());final ConfigurableComponent configurableComponent =extensionManager.getTempComponent(dto.getType(), coordinate);if (configurableComponent == null) {logger.warn(""Unable to get ReportingTask of type {}; its default properties will be fingerprinted""+ "" instead of being ignored."",dto.getType());}addPropertiesFingerprint(builder, configurableComponent, dto.getProperties());}}"	No
547	public class A {public static com.liferay.portal.kernel.model.UserGroupSoap[] getUserGroups(long companyId, String name, int start, int end) throws RemoteException {try {java.util.List<com.liferay.portal.kernel.model.UserGroup> returnValue =UserGroupServiceUtil.getUserGroups(companyId, name, start, end);return com.liferay.portal.kernel.model.UserGroupSoap.toSoapModels(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
548	"public class A {void restoreTransientState(ProxyPreparer preparer) throws RemoteException {if (operationsLogger.isDebugEnabled()) {LogUtils.entering(operationsLogger, TxnManagerTransaction.class, ""restoreTransientState"");}ParticipantHandle[] phs = parthandles();if (phs == null) return;int size = phs.length;ParticipantHandle[] handles = new ParticipantHandle[size];int j = 0;for (ParticipantHandle ph : phs) {handles[++j] = ph;}for (int i = 0; i < handles.length; i++) {handles[i].restoreTransientState(preparer);if (transactionsLogger.isTraceEnabled()) {}}if (operationsLogger.isDebugEnabled()) {LogUtils.exiting(operationsLogger, TxnManagerTransaction.class, ""restoreTransientState"");}}}"	Yes
549	"public class A {FileUtils.FileCopyResult getSegmentFiles(String region, String container, String path, File outDir) throws SegmentLoadingException {CloudFilesObjectApiProxy objectApi =new CloudFilesObjectApiProxy(cloudFilesApi, region, container);final CloudFilesByteSource byteSource = new CloudFilesByteSource(objectApi, path);try {final FileUtils.FileCopyResult result =CompressionUtils.unzip(byteSource, outDir, CloudFilesUtils.CLOUDFILESRETRY, false);return result;} catch (Exception e) {try {FileUtils.deleteDirectory(outDir);} catch (IOException ioe) {log.warn(ioe,""Failed to remove output directory [%s] for segment pulled from [%s]"",outDir.getAbsolutePath(),path);}throw new SegmentLoadingException(e, e.getMessage());} finally {try {byteSource.closeStream();} catch (IOException ioe) {log.warn(ioe, ""Failed to close payload for segmente pulled from [%s]"", path);}}}}"	Yes
550	"public class A {@Pollable(message = ""Updating merged asset text units"")void updateLastSuccessfulAsseteExtraction(Asset asset, MultiBranchState currentState, @ParentTask PollableTask currentTask) {AssetExtraction lastSuccessfulAssetExtraction = getOrCreateLastSuccessfulAssetExtraction(asset);MultiBranchState lastSuccessfulMultiBranchState =updateAssetExtractionWithState(lastSuccessfulAssetExtraction.getId(), currentState, AssetContentMd5s.of());}}"	Yes
551	"public class A {protected Future<Message> processRemoveCmdHandlingAdapterInstance(final Message request,final ResourceIdentifier targetAddress,final SpanContext spanContext) {final String tenantId = targetAddress.getTenantId();final String deviceId = MessageHelper.getDeviceId(request);final String adapterInstanceId =MessageHelper.getApplicationProperty(request.getApplicationProperties(),MessageHelper.APP_PROPERTY_ADAPTER_INSTANCE_ID,String.class);final Span span =TracingHelper.buildServerChildSpan(tracer,spanContext,SPAN_NAME_REMOVE_CMD_HANDLING_ADAPTER_INSTANCE,getClass().getSimpleName()).start();final Future<Message> resultFuture;if (tenantId == null || deviceId == null || adapterInstanceId == null) {TracingHelper.logError(span, ""missing tenant, device and/or adapter instance id"");resultFuture =Future.failedFuture(new ClientErrorException(HttpURLConnection.HTTP_BAD_REQUEST));} else {TracingHelper.TAG_TENANT_ID.set(span, tenantId);TracingHelper.TAG_DEVICE_ID.set(span, deviceId);span.setTag(MessageHelper.APP_PROPERTY_ADAPTER_INSTANCE_ID, adapterInstanceId);logger.debug(""removing command handling adapter instance for tenant [{}], device [{}] with value {}"",tenantId,deviceId,adapterInstanceId);resultFuture =getService().removeCommandHandlingAdapterInstance(tenantId, deviceId, adapterInstanceId, span).map(res ->DeviceConnectionConstants.getAmqpReply(DeviceConnectionConstants.DEVICE_CONNECTION_ENDPOINT,tenantId,request,res));}return finishSpanOnFutureCompletion(span, resultFuture);}}"	No
552	"public class A {@Overridepublic void stateHasChanged(SharedTriStateReader reader, SharedTriState.STATE value)throws Exception {if (log.isTraceEnabled()) {log.trace(""table:""+ tableName+ "" stateHasChanged(""+ reader+ "", ""+ value+ ""). This listener does nothing"");}}}"	No
553	"public class A {@Overridepublic void done(boolean doneSync) {try {if (exception == null) {exchange.removeProperty(ExchangePropertyKey.FAILURE_ENDPOINT);} else {exchange.setException(exception);exchange.setProperty(ExchangePropertyKey.EXCEPTION_CAUGHT, exception);}if (!doneSync) {ExchangeHelper.prepareOutToIn(exchange);if (LOG.isTraceEnabled()) {LOG.trace(""Processing complete for exchangeId: {} >>> {}"", exchange.getExchangeId(), exchange);}}} finally {callback.done(doneSync);}}}"	No
554	"public class A {private static void logWeighedThrottlingSetting() {if (connectionWeightEnabled) {LOG.info(""Weighed connection throttling is enabled. ""+ ""But it will only be effective if connection throttling is enabled"");LOG.info(""The weights for different session types are: global {} renew {} local {}"",DEFAULT_GLOBAL_SESSION_WEIGHT,DEFAULT_RENEW_SESSION_WEIGHT,DEFAULT_LOCAL_SESSION_WEIGHT);} else {LOG.info(""Weighed connection throttling is disabled"");}}}"	No
555	"public class A {@Overridepublic void doExceptionAction(final HttpServletResponse httpResponse, final RuntimeException e)throws IOException {LOGGER.error(""Error in Authentication"", e);httpResponse.sendError(HttpServletResponse.SC_FORBIDDEN, ""Error in Authentication"");}}"	No
556	"public class A {private Boolean loadPatient(Integer demographicNo) {demographic = demographicDao.getDemographicById(demographicNo);if (demographic == null) {log.error(""Demographic "".concat(demographicNo.toString()).concat("" can't be loaded""));return false;}active = ""AC"".equals(demographic.getPatientStatus());try {allergies = allergyDao.findAllergies(demographicNo);} catch (Exception e) {log.error(""loadPatient - Failed to load Allergies"", e);allergies = null;}try {measurements = assembleMeasurements(demographicNo);} catch (Exception e) {measurements = null;}try {encounters = caseManagementNoteDao.getNotesByDemographic(demographicNo.toString());} catch (Exception e) {log.error(""loadPatient - Failed to load Encounters"", e);encounters = null;}try {immunizations = new ArrayList<Immunization>();List<Prevention> preventions = preventionDao.findNotDeletedByDemographicId(demographicNo);for (Prevention prevention : preventions) {List<PreventionExt> preventionExts =preventionExtDao.findByPreventionId(prevention.getId());immunizations.add(new Immunization(prevention, preventionExts));}} catch (Exception e) {immunizations = null;}try {labs = assembleLabs(demographicNo);} catch (Exception e) {labs = null;}try {drugs = drugDao.findByDemographicId(demographicNo);} catch (Exception e) {drugs = null;}try {problems = dxResearchDao.getDxResearchItemsByPatient(demographicNo);} catch (Exception e) {log.error(""loadPatient - Failed to load Problems"", e);problems = null;}parseCaseManagement(demographicNo);return true;}}"	Yes
557	"public class A {@Testpublic void testSyncCommandBasicExportImportSmallBatchSize() {try {createTestNodes(TestOne.class, 100);app.command(SyncCommand.class).execute(toMap(""mode"", ""export"", ""file"", EXPORT_FILENAME));final Path exportFile = Paths.get(EXPORT_FILENAME);assertTrue(""Export file doesn't exist!"", Files.exists(exportFile));cleanDatabaseAndSchema();app.command(SyncCommand.class).execute(toMap(""mode"", ""import"", ""file"", EXPORT_FILENAME, ""batchSize"", 20L));try (final Tx tx = app.tx()) {assertEquals(100, app.nodeQuery(TestOne.class).getAsList().size());}Files.delete(exportFile);} catch (Exception ex) {fail(""Unexpected exception."");}}}"	Yes
558	"public class A {static boolean initValidateSchema(ConfigMap configurationMap) {LOGGER.trace(""Extract 'schema validation enabled' from configuration map"");return configurationMap.getTypedOr(VALIDATE_SCHEMA, true);}}"	No
559	"public class A {private void unloadModule() {try {if (module != null) {loader.unload(conf.getProjectName(), module);}} catch (Exception x) {logger.debug(""unload module resulted in exception"", x);} finally {module = null;}}}"	No
560	public class A {@Deprecatedpublic static void executeChangelog(String changelog, Map<String, Object> userInput)throws DatabaseUpdateException {executeChangelog(changelog, (ChangeSetExecutorCallback) null);}}	Yes
561	"public class A {@Overridepublic void start(long checkpointId, CheckpointOptions checkpointOptions) {ChannelStateWriteResult result = new ChannelStateWriteResult();ChannelStateWriteResult put =results.computeIfAbsent(checkpointId,id -> {Preconditions.checkState(results.size() < maxCheckpoints,String.format(""%s can't start %d, results.size() > maxCheckpoints: %d > %d"",taskName, checkpointId, results.size(), maxCheckpoints));enqueue(new CheckpointStartRequest(checkpointId, result, checkpointOptions.getTargetLocation()),false);return result;});Preconditions.checkArgument(put == result, taskName + "" result future already present for checkpoint "" + checkpointId);}}"	Yes
562	"public class A {@ApiOperation(value = ""Returns information about a specified custom query."")@ApiResponses(value = {@ApiResponse(code = 500, message = ""Unexpected error""),@ApiResponse(code = 404, message = ""Query definition with given name not found""),@ApiResponse(code = 200,response = QueryDefinition.class,message = ""Successful response"",examples =@Example(value = {@ExampleProperty(mediaType = JSON, value = QUERY_DEF_RESPONSE_JSON)}))})@GET@Path(QUERY_DEF_GET_URI)@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})public Response getQuery(@Context HttpHeaders headers,@ApiParam(value = ""identifier of the query definition to be retrieved"",required = true,example = ""customQuery"")@PathParam(""queryName"")String queryName) {Variant v = getVariant(headers);Header conversationIdHeader = buildConversationIdHeader("""", context, headers);try {QueryDefinition queryDefinition = queryDataServiceBase.getQuery(queryName);return createCorrectVariant(queryDefinition, headers, Response.Status.OK, conversationIdHeader);} catch (QueryNotFoundException e) {return notFound(MessageFormat.format(QUERY_NOT_FOUND, queryName), v, conversationIdHeader);} catch (Exception e) {return internalServerError(errorMessage(e), v, conversationIdHeader);}}}"	Yes
563	"public class A {@Overridepublic Method addingService(ServiceReference<Method> serviceReference) {Registry registry = RegistryUtil.getRegistry();Method method = registry.getService(serviceReference);String token = method.getToken();Map<String, Method> methods = _methodRegistry.get(token);if (methods == null) {methods = new HashMap<>();_methodRegistry.put(token, methods);}String methodName = method.getMethodName();Method registeredMethod = methods.get(methodName);if (registeredMethod != null) {if (_log.isWarnEnabled()) {_log.warn(StringBundler.concat(""There is already an XML-RPC method registered "",""with name "",methodName,"" at "",token));}} else {methods.put(methodName, method);}return method;}}"	No
564	"public class A {@Override@SecurityCheckpublic StorageResourceDescription getStorageResource(AuthzToken authzToken, String storageResourceId)throws InvalidRequestException, AiravataClientException, AiravataSystemException,AuthorizationException, TException {RegistryService.Client regClient = registryClientPool.getResource();try {StorageResourceDescription result = regClient.getStorageResource(storageResourceId);registryClientPool.returnResource(regClient);return result;} catch (Exception e) {logger.error(storageResourceId, ""Error while retrieving storage resource..."", e);AiravataSystemException exception = new AiravataSystemException();exception.setAiravataErrorType(AiravataErrorType.INTERNAL_ERROR);exception.setMessage(""Error while retrieving storage resource. More info : "" + e.getMessage());registryClientPool.returnBrokenResource(regClient);throw exception;}}}"	No
565	"public class A {public int saveContentDefinition(JsonObject registerContentJson) throws InsightsCustomException {int contentId = -1;Gson gson = new Gson();try {InsightsContentConfig contentConfig = new InsightsContentConfig();int kpiId = registerContentJson.get(AssessmentReportAndWorkflowConstants.KPIID).getAsInt();contentId =registerContentJson.get(AssessmentReportAndWorkflowConstants.CONTENTID).getAsInt();boolean isActive =registerContentJson.get(AssessmentReportAndWorkflowConstants.ISACTIVE).getAsBoolean();String contentName =registerContentJson.get(AssessmentReportAndWorkflowConstants.CONTENT_NAME).getAsString();String contentString = gson.toJson(registerContentJson);contentConfig.setContentId(contentId);InsightsKPIConfig kpiConfig = reportConfigDAL.getKPIConfig(kpiId);if (kpiConfig == null) {throw new InsightsCustomException(""KPI not exists"");}InsightsContentConfig contentDBConfig = reportConfigDAL.getContentConfig(contentId);if (contentDBConfig != null) {throw new InsightsCustomException(""Content Definition already exists"");}String category = kpiConfig.getCategory();contentConfig.setKpiConfig(kpiConfig);contentConfig.setActive(isActive);contentConfig.setContentJson(contentString);contentConfig.setContentName(contentName);contentConfig.setCategory(category);reportConfigDAL.saveContentConfig(contentConfig);} catch (Exception e) {throw new InsightsCustomException(e.getMessage());}return contentId;}}"	Yes
566	"public class A {private List<String> _getJSPImportNames(String directoryName) {if (_jspImportNamesMap.containsKey(directoryName)) {return _jspImportNamesMap.get(directoryName);}List<String> importNames = new ArrayList<>();String fileName = directoryName + ""/init.jsp"";File file = new File(fileName);if (file.exists()) {try {List<String> curImportNames = JSPImportsFormatter.getImportNames(FileUtil.read(file));importNames.addAll(curImportNames);} catch (IOException ioException) {if (_log.isDebugEnabled()) {_log.debug(ioException, ioException);}}}int x = directoryName.lastIndexOf(CharPool.SLASH);if ((x != -1) && !directoryName.endsWith(""/resources"") && !directoryName.endsWith(""/docroot"")) {importNames.addAll(_getJSPImportNames(directoryName.substring(0, x)));}_jspImportNamesMap.put(directoryName, importNames);return importNames;}}"	No
567	"public class A {@Override@SuppressWarnings(""unchecked"")protected <T> T doRegister(Context ctx, XAnnotatedObject xObject, Element element, String extensionId) {String id = computeId(ctx, xObject, element);if (shouldRemove(ctx, xObject, element, extensionId)) {contributions.remove(id);return null;}if (RESERVED_VAR_NAMES.contains(id)) {log.error(""The context helper with id '{}' cannot be registered: this identifier is reserved. ""+ ""Please use another one (reserved identifiers: {})"",id,RESERVED_VAR_NAMES);return null;}Object contrib;Object existing = contributions.get(id);if (shouldMerge(ctx, xObject, element, extensionId, id, existing)) {contrib = getMergedInstance(ctx, xObject, element, existing);if (existing != null) {log.warn(""The context helper id/alias '{}' is overridden by the following helper: {}"",id,contrib);}} else {contrib = getInstance(ctx, xObject, element);}contributions.put(id, contrib);Boolean enable = shouldEnable(ctx, xObject, element, extensionId);if (enable != null) {if (Boolean.TRUE.equals(enable)) {disabled.remove(id);} else {disabled.add(id);}}return (T) contrib;}}"	No
568	"public class A {@Testpublic void testFlushGivenGroupNoData() throws ClassNotFoundException {Class.forName(Config.JDBC_DRIVER_NAME);try (Connection connection =DriverManager.getConnection(Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");Statement statement = connection.createStatement()) {statement.execute(""SET STORAGE GROUP TO root.nodatagroup1"");statement.execute(""SET STORAGE GROUP TO root.nodatagroup2"");statement.execute(""SET STORAGE GROUP TO root.nodatagroup3"");statement.execute(""FLUSH root.nodatagroup1"");statement.execute(""FLUSH root.nodatagroup2"");statement.execute(""FLUSH root.nodatagroup3"");statement.execute(""FLUSH root.nodatagroup1, root.nodatagroup2"");} catch (Exception e) {fail(e.getMessage());}}}"	Yes
569	"public class A {public void shareKieObjectsWithMap(InternalKieModule kModule, String compilationID, Map<String, Object> kieMap, Log log) {if (kModule != null && compilationID != null) {KieMetaInfoBuilder builder = new KieMetaInfoBuilder(kModule);KieModuleMetaInfo modelMetaInfo = builder.getKieModuleMetaInfo();if (modelMetaInfo != null) {StringBuilder sbModelMetaInfo =new StringBuilder(compilationID).append(""."").append(KieModuleMetaInfo.class.getName());kieMap.put(sbModelMetaInfo.toString(), modelMetaInfo);log.info(""KieModelMetaInfo available in the map shared with the Maven Embedder with key:""+ sbModelMetaInfo.toString());}if (kModule != null) {StringBuilder sbkModule =new StringBuilder(compilationID).append(""."").append(FileKieModule.class.getName());kieMap.put(sbkModule.toString(), kModule);log.info(""KieModule available in the map shared with the Maven Embedder with key:""+ sbkModule.toString());}}}}"	No
570	"public class A {@Overridepublic Set<Location> getAllItems() {try {return locationService.findAll();} catch (Exception e) {LOGGER.warn(""Cannot find directory-objects: "" + e.getMessage());showError(e);}return Collections.emptySet();}}"	No
571	"public class A {private PoxPayloadOut createObjectExitInstance(String depositorRefName, String exitNumber, String exitDateDisplayDate) throws Exception {this.exitNumber = exitNumber;this.depositorRefName = depositorRefName;this.exitDateGroup.setDateDisplayDate(exitDateDisplayDate);this.exitDateGroup.setDateDisplayDate(exitDateDisplayDate);ObjectexitCommon objectexit = new ObjectexitCommon();StructuredDateGroup oeExitDateGroup = new StructuredDateGroup();objectexit.setDepositor(depositorRefName);objectexit.setExitNumber(exitNumber);oeExitDateGroup.setDateDisplayDate(exitDateDisplayDate);objectexit.setExitDateGroup(oeExitDateGroup);PoxPayloadOut multipart = new PoxPayloadOut(ObjectExitClient.SERVICE_PAYLOAD_NAME);PayloadOutputPart commonPart =multipart.addPart(new ObjectExitClient().getCommonPartName(), objectexit);logger.debug(""to be created, objectexit common: ""+ objectAsXmlString(objectexit, ObjectexitCommon.class));return multipart;}}"	No
572	"public class A {@Overridepublic void stop() throws ConnectException {log.info(""Stopping HDFS Sink Task {}"", connectorNameAndTaskId);if (hdfsWriter != null) {hdfsWriter.stop();}}}"	No
573	"public class A {public MbB2mDel findById(sernet.gs.reveng.MbB2mDelId id) {try {MbB2mDel instance =(MbB2mDel) sessionFactory.getCurrentSession().get(""sernet.gs.reveng.MbB2mDel"", id);if (instance == null) {log.debug(""get successful, no instance found"");} else {}return instance;} catch (RuntimeException re) {throw re;}}}"	Yes
574	"public class A {private void constructInstallProposal() throws ProposalException {try {createNetModeTransaction();} catch (IOException exp) {throw new ProposalException(""IO Error while creating install proposal"", exp);}}}"	Yes
575	"public class A {public Response serve(String uri, String method, Properties header, Properties parms, Socket socket) {log.info(method + "" '"" + uri + ""' "");Enumeration e = header.propertyNames();while (e.hasMoreElements()) {String value = (String) e.nextElement();log.info(""  HDR: '"" + value + ""' = '"" + header.getProperty(value) + ""'"");}e = parms.propertyNames();while (e.hasMoreElements()) {String value = (String) e.nextElement();log.info(""  PRM: '"" + value + ""' = '"" + parms.getProperty(value) + ""'"");}return serveFile(uri, header, new File("".""), true);}}"	No
576	"public class A {public void generateCertificates(Kafka kafka,ClusterCa clusterCa,Set<String> externalBootstrapDnsName,Map<Integer, Set<String>> externalDnsNames,boolean isMaintenanceTimeWindowsSatisfied) {try {brokerCerts =clusterCa.generateBrokerCerts(kafka, externalBootstrapDnsName, externalDnsNames, isMaintenanceTimeWindowsSatisfied);} catch (IOException e) {log.warn(""Error while generating certificates"", e);}}}"	Yes
577	public class A {private boolean lookupQuad(GridSubset grid, long[] idx) {BufferedImage mat = matrices.get(grid.getName())[(int) idx[2]];long[] gridCoverage = grid.getCoverage((int) idx[2]);int baseX = (int) (idx[0] - gridCoverage[0]);int baseY = (int) (gridCoverage[3] - idx[1]);int width = mat.getWidth();int height = mat.getHeight();int x = baseX;int y = baseY;boolean hasData = false;int[] xOffsets = {0, 1, 0, 1};int[] yOffsets = {0, 0, 1, 1};synchronized (mat) {try {for (int i = 0; i < 4 && !hasData; i++) {x = baseX + xOffsets[i];y = baseY - yOffsets[i];if (x > -1 && x < width && y > -1 && y < height) {if (mat.getRaster().getSample(x, y, 0) == 0) {hasData = true;}}}} catch (ArrayIndexOutOfBoundsException aioob) {}}return hasData;}}	Yes
578	"public class A {protected KafkaServer getKafkaServer(int brokerId, File tmpFolder) throws Exception {Properties kafkaProperties = new Properties();kafkaProperties.put(""advertised.host.name"", KAFKA_HOST);kafkaProperties.put(""broker.id"", Integer.toString(brokerId));kafkaProperties.put(""log.dir"", tmpFolder.toString());kafkaProperties.put(""zookeeper.connect"", zookeeperConnectionString);kafkaProperties.put(""message.max.bytes"", String.valueOf(50 * 1024 * 1024));kafkaProperties.put(""replica.fetch.max.bytes"", String.valueOf(50 * 1024 * 1024));kafkaProperties.put(""transaction.max.timeout.ms"", Integer.toString(1000 * 60 * 60 * 2));kafkaProperties.put(""zookeeper.session.timeout.ms"", zkTimeout);kafkaProperties.put(""zookeeper.connection.timeout.ms"", zkTimeout);if (config.getKafkaServerProperties() != null) {kafkaProperties.putAll(config.getKafkaServerProperties());}final int numTries = 5;for (int i = 1; i <= numTries; i++) {int kafkaPort = NetUtils.getAvailablePort();kafkaProperties.put(""port"", Integer.toString(kafkaPort));if (config.isHideKafkaBehindProxy()) {NetworkFailuresProxy proxy = createProxy(KAFKA_HOST, kafkaPort);kafkaProperties.put(""advertised.port"", proxy.getLocalPort());}if (config.isSecureMode()) {kafkaProperties.put(""listeners"", ""SASL_PLAINTEXT://"" + KAFKA_HOST + "":"" + kafkaPort);kafkaProperties.put(""advertised.listeners"", ""SASL_PLAINTEXT://"" + KAFKA_HOST + "":"" + kafkaPort);kafkaProperties.putAll(getSecureProperties());}KafkaConfig kafkaConfig = new KafkaConfig(kafkaProperties);try {scala.Option<String> stringNone = scala.Option.apply(null);KafkaServer server =new KafkaServer(kafkaConfig, Time.SYSTEM, stringNone, new ArraySeq<KafkaMetricsReporter>(0));server.startup();return server;} catch (KafkaException e) {if (e.getCause() instanceof BindException) {} else {throw e;}}}throw new Exception(""Could not start Kafka after "" + numTries + "" retries due to port conflicts."");}}"	Yes
579	"public class A {@Overrideprotected void setUp() throws Exception {super.setUp();try {logger.info(""Starting in-memory HSQL database for unit tests"");Class.forName(""org.hsqldb.jdbcDriver"");connection = DriverManager.getConnection(""jdbc:hsqldb:mem:unit-testing-jpa"", ""sa"", """");} catch (Exception ex) {ex.printStackTrace();fail(""Exception during HSQL database startup."");}try {logger.info(""Building JPA EntityManager for unit tests"");emFactory = Persistence.createEntityManagerFactory(""ResourceCore-test"");if (emFactory == null) fail(""Persistence.createEntityManagerFactory didn't give us one :(."");em = emFactory.createEntityManager();} catch (Exception ex) {ex.printStackTrace();fail(""Exception during JPA EntityManager instanciation."");}}}"	Yes
580	"public class A {private static Batch getRunningBatch(BatchBD batchBD, String codBatch) throws ServiceException {Batch batch = null;if (GovpayConfig.getInstance().getClusterId() == null) return null;try {batch = batchBD.get(codBatch);} catch (NotFoundException nfe) {return null;}if (batch.getNodo() == null) {return null;} else {long inizio = batch.getInizio().getTime();long aggiornamento =batch.getAggiornamento() != null ? batch.getAggiornamento().getTime() : inizio;long delay = new Date().getTime() - aggiornamento;if (delay > GovpayConfig.getInstance().getTimeoutBatch()) {return null;} else {log.trace(""Batch "" + codBatch + "" in esecuzione sul nodo "" + batch.getNodo() + ""."");return batch;}}}}"	Yes
581	"public class A {@ParallelNamespaceTest@Tag(LOADBALANCER_SUPPORTED)void testRegenerateCertExternalAddressChange(ExtensionContext extensionContext) {final String namespaceName =extensionContext.getStore(ExtensionContext.Namespace.GLOBAL).get(Constants.NAMESPACE_KEY).toString();final String clusterName = mapWithClusterNames.get(extensionContext.getDisplayName());resourceManager.createResource(extensionContext, KafkaTemplates.kafkaPersistent(clusterName, 3, 1).build());final String brokerSecret = clusterName + ""-kafka-brokers"";Secret secretsWithoutExt = kubeClient(namespaceName).getSecret(namespaceName, brokerSecret);KafkaResource.replaceKafkaResourceInSpecificNamespace(clusterName,kafka -> {ArrayOrObjectKafkaListeners lst =new ArrayOrObjectKafkaListeners(asList(new GenericKafkaListenerBuilder().withName(Constants.PLAIN_LISTENER_DEFAULT_NAME).withPort(9092).withType(KafkaListenerType.INTERNAL).withTls(false).build(),new GenericKafkaListenerBuilder().withName(Constants.EXTERNAL_LISTENER_DEFAULT_NAME).withPort(9094).withType(KafkaListenerType.LOADBALANCER).withTls(true).withNewConfiguration().withFinalizers(LB_FINALIZERS).endConfiguration().build()));kafka.getSpec().getKafka().setListeners(lst);},namespaceName);StatefulSetUtils.waitTillSsHasRolled(namespaceName,kafkaStatefulSetName(clusterName),3,StatefulSetUtils.ssSnapshot(namespaceName, kafkaStatefulSetName(clusterName)));Secret secretsWithExt = kubeClient(namespaceName).getSecret(namespaceName, brokerSecret);kubeClient(namespaceName).listPodsByPrefixInName(namespaceName, KafkaResources.kafkaStatefulSetName(clusterName)).forEach(kafkaPod -> {String kafkaPodName = kafkaPod.getMetadata().getName();assertThat(secretsWithExt.getData().get(kafkaPodName + "".crt""),is(not(secretsWithoutExt.getData().get(kafkaPodName + "".crt""))));assertThat(secretsWithExt.getData().get(kafkaPodName + "".key""),is(not(secretsWithoutExt.getData().get(kafkaPodName + "".key""))));});}}"	Yes
582	"public class A {protected void addContentTypeRequestHeader(HttpState state, HttpConnection conn)throws IOException, HttpException {if (!parameters.isEmpty()) {StringBuffer buffer = new StringBuffer(MULTIPART_FORM_CONTENT_TYPE);if (Part.getBoundary() != null) {buffer.append(""; boundary="");buffer.append(Part.getBoundary());}setRequestHeader(""Content-Type"", buffer.toString());}}}"	Yes
583	"public class A {public void addDocumentTerms(DocumentPostingList terms) {TempLex.insert(terms);DocCount++;String reason = null;if (DocCount % 10 == 0 && memCheck.checkMemory()) {reason = ""memory threshold hit"";} else if (DocCount % DocumentsPerLexicon == 0) {reason = ""doc count exceeded"";}if (reason != null) {if (logger.isDebugEnabled()) logger.debug(""flushing lexicon because of "" + reason);writeTemporaryLexicon();TempLexCount++;TempLex.clear();memCheck.reset();}}}"	No
584	public class A {@Overridepublic void setOutputStream(final OutputStream os) {if (logger.isTraceEnabled()) {this.os =new ByteArrayOutputStream() {@Overridepublic void flush() throws IOException {os.write(buf, 0, size());os.flush();}};} else {this.os = os;}jw.reset(this.os);}}	Yes
585	"public class A {@Overridepublic void onMessage(final Message message) {try {configureAuthentication();updateService.updateDocumentData(riksdagenApi.getDocumentStatus((String) ((ObjectMessage) message).getObject()));} catch (final DataFailureException | JMSException e) {LOGGER.warn(""Error loading riksdagen documentstatus:"", e);} finally {clearAuthentication();}}}"	No
586	"public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;shareResourceWithGroups_result result = new shareResourceWithGroups_result();if (e instanceof org.apache.airavata.model.error.InvalidRequestException) {result.ire = (org.apache.airavata.model.error.InvalidRequestException) e;result.setIreIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataClientException) {result.ace = (org.apache.airavata.model.error.AiravataClientException) e;result.setAceIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataSystemException) {result.ase = (org.apache.airavata.model.error.AiravataSystemException) e;result.setAseIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AuthorizationException) {result.ae = (org.apache.airavata.model.error.AuthorizationException) e;result.setAeIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {_LOGGER.error(""Exception writing to internal frame buffer"", ex);fb.close();}}}"	Yes
587	"public class A {public void shutdown() {if (!executorService.isShutdown()) {LOG.info(""shutting down async handler executor"");this.executorService.shutdownNow();}}}"	No
588	"public class A {private static String getValue(final Configuration configuration, String key, String type) {String value = configuration.get(key);Preconditions.checkArgument(!isNullOrEmpty(value), String.format(""%s must be supplied via %s"", type, key));return value;}}"	Yes
589	"public class A {@Overridepublic int execute(final String fullCommand, final CommandLine cl, final Shell shellState)throws Exception {try (final PrintFile printFile = getOutputFile(cl)) {final String tableName = OptUtil.getTableOpt(cl, shellState);final Class<? extends Formatter> formatter = getFormatter(cl, tableName, shellState);final ScanInterpreter interpeter = getInterpreter(cl, tableName, shellState);String classLoaderContext = null;if (cl.hasOption(contextOpt.getOpt())) {classLoaderContext = cl.getOptionValue(contextOpt.getOpt());}final Authorizations auths = getAuths(cl, shellState);final Scanner scanner = shellState.getAccumuloClient().createScanner(tableName, auths);if (classLoaderContext != null) {scanner.setClassLoaderContext(classLoaderContext);}addScanIterators(shellState, cl, scanner, tableName);scanner.setRange(getRange(cl, interpeter));fetchColumns(cl, scanner, interpeter);scanner.setTimeout(getTimeout(cl), TimeUnit.MILLISECONDS);setupSampling(tableName, cl, shellState, scanner);scanner.setExecutionHints(ShellUtil.parseMapOpt(cl, executionHintsOpt));final FormatterConfig config = new FormatterConfig();config.setPrintTimestamps(cl.hasOption(timestampOpt.getOpt()));if (cl.hasOption(showFewOpt.getOpt())) {final String showLength = cl.getOptionValue(showFewOpt.getOpt());try {final int length = Integer.parseInt(showLength);config.setShownLength(length);} catch (NumberFormatException nfe) {Shell.log.error(""Arg must be an integer."", nfe);} catch (IllegalArgumentException iae) {}}printRecords(cl, shellState, config, scanner, formatter, printFile);}return 0;}}"	Yes
590	"public class A {private static <T extends DataObject> boolean deleteIfExists(final InstanceIdentifier<Node> vppIid,final Set<InstanceIdentifier<T>> iids,byte retryCounter) {LOG.trace(""Netconf DELETE transaction started. Data will be read at first. RetryCounter: {}"",retryCounter);Preconditions.checkNotNull(vppIid);final ReadWriteTransaction rwTx =VbdNetconfTransaction.NODE_DATA_BROKER_MAP.get(vppIid).getKey().newReadWriteTransaction();Set<InstanceIdentifier<T>> alreadyRemoved = new HashSet<>();for (InstanceIdentifier<T> iid : iids) {short microReadRetries = 3;while (microReadRetries > 0) {try {if (rwTx.read(LogicalDatastoreType.CONFIGURATION, iid).get().isPresent()) {rwTx.delete(LogicalDatastoreType.CONFIGURATION, iid);} else {LOG.warn(""Node {} does not exist. It won't be removed."", iid.getPathArguments());alreadyRemoved.add(iid);}break;} catch (InterruptedException | ExecutionException e) {LOG.warn(""Failed to read {}. Retrying... "", iid.getPathArguments());microReadRetries--;}}}alreadyRemoved.forEach(t -> iids.remove(t));try {final CheckedFuture<Void, TransactionCommitFailedException> futureTask = rwTx.submit();futureTask.get();return true;} catch (Exception e) {if (retryCounter > 0) {LOG.warn(""Netconf DELETE transaction failed to {}. Restarting transaction ... "", e.getMessage());return deleteIfExists(vppIid, iids, --retryCounter);} else {return false;}}}}"	Yes
591	"public class A {@Overridepublic Schema create(SchemaPlus parentSchema, String name, Map<String, Object> operand) {Object config = operand.get(""config"");Validate.notNull(config, ""No configuration file given. Please specify operand 'config'...'"");ScraperConfiguration configuration;try {configuration =ScraperConfiguration.fromFile(config.toString(), ScraperConfigurationTriggeredImpl.class);} catch (IOException e) {throw new IllegalArgumentException(""Unable to load configuration file!"", e);}Object limit = operand.get(""limit"");Validate.notNull(limit, ""No limit for the number of rows for a table. Please specify operand 'config'...'"");long parsedLimit;try {parsedLimit = Long.parseLong(limit.toString());} catch (NumberFormatException e) {throw new IllegalArgumentException(""Given limit '"" + limit + ""' cannot be parsed to valid long!"", e);}try {return new Plc4xSchema(configuration, parsedLimit);} catch (ScraperException e) {LOGGER.warn(""Could not evaluate Plc4xSchema"", e);return null;}}}"	No
592	"public class A {void redoRemoveOverflow(final RemoveOverflowLoggable loggable) {try {final Page page = getPage(loggable.pageNum);page.read();final PageHeader pageHeader = page.getPageHeader();if ((!pageHeader.getLsn().equals(Lsn.LSN_INVALID)) && requiresRedo(loggable, page)) {unlinkPages(page);}} catch (final IOException e) {LOG.warn(""Failed to undo {}: {}"", loggable.dump(), e.getMessage(), e);}}}"	No
593	"public class A {protected Set<NormalizedContentInterface> normalize(NormalizedContentInterface normalizedContent) {String eventFieldName = normalizedContent.getEventFieldName();if (log.isDebugEnabled()) {log.debug(""event field name is "" + eventFieldName + "" in "" + normalizedContent);}String indexedFieldName = normalizedContent.getIndexedFieldName();if (log.isDebugEnabled()) {log.debug(""indexed field name is "" + indexedFieldName + "" in "" + normalizedContent);}if (this.isIndexedField(eventFieldName) || this.isIndexedField(indexedFieldName)) {if (log.isDebugEnabled()) {}Collection<datawave.data.type.Type<?>> dataTypes =getDataTypes(normalizedContent.getIndexedFieldName());HashSet<NormalizedContentInterface> values = new HashSet<>(dataTypes.size());for (datawave.data.type.Type<?> dataType : dataTypes) {if (dataType instanceof OneToManyNormalizerType) {values.addAll(normalize(normalizedContent, (OneToManyNormalizerType) dataType));} else {values.add(normalize(normalizedContent, dataType));}if (log.isDebugEnabled()) {log.debug(""added normalized field "" + normalizedContent + "" to values "" + values);}}return values;}if (this.isNormalizedField(eventFieldName) || this.isNormalizedField(indexedFieldName)) {if (log.isDebugEnabled()) {log.debug(""eventFieldName=""+ eventFieldName+ "", indexedFieldName =""+ indexedFieldName+ "" we have a normalized field here ""+ normalizedContent);}Collection<datawave.data.type.Type<?>> dataTypes =getDataTypes(normalizedContent.getIndexedFieldName());HashSet<NormalizedContentInterface> values = new HashSet<>(dataTypes.size());for (datawave.data.type.Type<?> dataType : dataTypes) {values.add(normalizeFieldValue(normalizedContent, dataType));if (log.isDebugEnabled()) {log.debug(""added normalized field "" + normalizedContent + "" to values "" + values);}}return values;} else {if (log.isDebugEnabled()) {}Collection<datawave.data.type.Type<?>> dataTypes =getDataTypes(normalizedContent.getIndexedFieldName());HashSet<NormalizedContentInterface> values = new HashSet<>(dataTypes.size());for (datawave.data.type.Type<?> dataType : dataTypes) {values.add(normalize(normalizedContent, dataType));if (log.isDebugEnabled()) {log.debug(""added normalized field "" + normalizedContent + "" to values "" + values);}}return values;}}}"	Yes
594	public class A {public void sleep(final long sleepTimeMillis) {try {Thread.sleep(sleepTimeMillis);} catch (final InterruptedException e) {}}}	Yes
595	"public class A {@Overridepublic Completable processBulk(Collection<? extends Bulkable> entries) {for (Bulkable entry : entries) {if (entry instanceof CreateDocumentRequest) {CreateDocumentRequest request = (CreateDocumentRequest) entry;storeEvents.put(request.getIndex() + ""-"" + request.getId(), request.getDoc());} else if (entry instanceof DeleteDocumentRequest) {DeleteDocumentRequest request = (DeleteDocumentRequest) entry;deleteEvents.add(request.getIndex() + ""-"" + request.getId());} else if (entry instanceof UpdateDocumentRequest) {UpdateDocumentRequest request = (UpdateDocumentRequest) entry;updateEvents.put(request.getIndex() + ""-"" + request.getId(), request.getDoc());} else if (entry instanceof BulkRequest) {BulkRequest request = (BulkRequest) entry;processBulk(request.getRequests());} else {}}bulkRequests.addAll(entries);return Completable.complete();}}"	Yes
596	"public class A {private KeyManager[] getKeyManagers() {KeyManager[] kmList = null;String credentialProviderPath =MiscUtil.getStringProperty(props, RANGER_POLICYMGR_CLIENT_KEY_FILE_CREDENTIAL);String keyStoreAlias = RANGER_POLICYMGR_CLIENT_KEY_FILE_CREDENTIAL_ALIAS;String keyStoreFile = MiscUtil.getStringProperty(props, RANGER_POLICYMGR_CLIENT_KEY_FILE);String keyStoreFilepwd = MiscUtil.getCredentialString(credentialProviderPath, keyStoreAlias);if (StringUtils.isNotEmpty(keyStoreFile) && StringUtils.isNotEmpty(keyStoreFilepwd)) {InputStream in = null;try {in = getFileInputStream(keyStoreFile);if (in != null) {String keyStoreType =MiscUtil.getStringProperty(props, RANGER_POLICYMGR_CLIENT_KEY_FILE_TYPE);keyStoreType =StringUtils.isNotEmpty(keyStoreType)? keyStoreType: RANGER_POLICYMGR_CLIENT_KEY_FILE_TYPE_DEFAULT;KeyStore keyStore = KeyStore.getInstance(keyStoreType);keyStore.load(in, keyStoreFilepwd.toCharArray());KeyManagerFactory keyManagerFactory =KeyManagerFactory.getInstance(RANGER_SSL_KEYMANAGER_ALGO_TYPE);keyManagerFactory.init(keyStore, keyStoreFilepwd.toCharArray());kmList = keyManagerFactory.getKeyManagers();} else {LOG.error(""Unable to obtain keystore from file ["" + keyStoreFile + ""]"");}} catch (KeyStoreException e) {} catch (NoSuchAlgorithmException e) {} catch (CertificateException e) {LOG.error(""Unable to obtain the requested certification "", e);} catch (FileNotFoundException e) {} catch (IOException e) {} catch (UnrecoverableKeyException e) {} finally {close(in, keyStoreFile);}}return kmList;}}"	Yes
597	"public class A {@Overridepublic void tearDown() throws Exception {super.tearDown();if (proxy != null) {log.debug(""stop the proxy server."");proxy.stop();}}}"	No
598	"public class A {private void safeUnscheduleJob(String jobId) {if (LOGGER.isDebugEnabled()) {}try {assertArgumentNotNull(""ScheduledJobID"", jobId);scheduler.unscheduleJob(triggerKey(jobId, JOB_GROUP_NAME));} catch (SchedulerException e) {}}}"	Yes
599	"public class A {@Overridepublic void invoke(List<TwitterListener> listeners) throws TwitterException {User user = twitter.verifyCredentials();for (TwitterListener listener : listeners) {try {listener.verifiedCredentials(user);} catch (Exception e) {logger.warn(""Exception at verifyCredentials"", e);}}}}"	No
600	"public class A {@Overridepublic void doFilter(ServletRequest req, ServletResponse resp, FilterChain chain)throws IOException, ServletException {HttpServletRequest request = (HttpServletRequest) req;if (request != null && request.getSession() != null) {if (request.getSession().getMaxInactiveInterval() == NO_MAX_INACTIVE_INTERVAL_SET) {logger.trace(""Setting maxInactiveInterval to ""+ RestConstants.MAX_INACTIVE_INTERVAL+ "" on request @""+ request.getRequestURL());request.getSession().setMaxInactiveInterval(RestConstants.MAX_INACTIVE_INTERVAL);}}chain.doFilter(req, resp);if (request != null && HttpServletRequest.DIGEST_AUTH.equals(request.getAuthType())) {logger.trace(""Invalidating digest request."");request.getSession().invalidate();} else if (request.getHeader(""Authorization"") != null) {logger.trace(""Invalidating digest request."");HttpSession session = request.getSession(false);if (session != null) {session.invalidate();} else {logger.trace(""Too late to run invalidate, the request is already committed ({})."",request.getRequestURI());}}}}"	No
601	"public class A {@Overridepublic void accept(Channel<Integer> channel) {if (!(channel instanceof IntegerWriteChannel)) {this.log.error(""Channel [""+ channel.address()+ ""] is not an IntegerWriteChannel! Unable to register \""onSetNextWrite\""-Listener!"");return;}((IntegerWriteChannel) channel).onSetNextWrite(value -> {channel.getComponent().channel(this.targetChannelId).setNextValue(value);});}}"	No
602	"public class A {@Overridepublic DlmsConnection connect(final DlmsDevice device, final DlmsMessageListener dlmsMessageListener) throws OsgpException {this.checkDevice(device);this.checkIpAddress(device);try {return this.createConnection(device, dlmsMessageListener);} catch (final UnknownHostException e) {LOGGER.error(""The IP address is not found: {}"", device.getIpAddress(), e);throw new TechnicalException(ComponentType.PROTOCOL_DLMS, ""The IP address is not found: "" + device.getIpAddress());} catch (final IOException e) {if (this.secretManagementService.hasNewSecretOfType(device.getDeviceIdentification(), E_METER_ENCRYPTION)) {this.recoverKeyProcessInitiator.initiate(device.getDeviceIdentification(), device.getIpAddress());}final String msg =String.format(""Error creating connection for device %s with Ip address:%s Port:%d UseHdlc:%b""+ "" UseSn:%b Message:%s"",device.getDeviceIdentification(),device.getIpAddress(),device.getPort(),device.isUseHdlc(),device.isUseSn(),e.getMessage());throw new ConnectionException(msg, e);} catch (final EncrypterException e) {throw new FunctionalException(FunctionalExceptionType.INVALID_DLMS_KEY_FORMAT, ComponentType.PROTOCOL_DLMS, e);}}}"	Yes
603	"public class A {public static void compileSchema(File[] srcFiles, File dest, LicenseHeaders licenseHeader)throws IOException {Schema.Parser parser = new Schema.Parser();for (File src : srcFiles) {LOG.info(""Compiling: {}"", src.getAbsolutePath());Schema originalSchema = parser.parse(src);Schema newSchema = originalSchema;GoraCompiler compiler = new GoraCompiler(newSchema);compiler.setTemplateDir(DEFAULT_TEMPLATES_PATH);compiler.compileToDestination(src, dest);Path path = Paths.get(generateDestinationFileName(dest.toString(), newSchema));String content = new String(Files.readAllBytes(path), StandardCharsets.UTF_8);content = licenseHeader.getLicense() + content.substring(content.indexOf(""package""));Files.write(path, content.getBytes(StandardCharsets.UTF_8));LOG.info(""Compiled into: {}"", dest.getAbsolutePath());}}}"	No
604	"public class A {private void analyzeFile(ESRIShapefile aFile) {myColumnTypes.clear();myImportConfig.getColumnNames().clear();myValuesSet.clear();List<String> columnNames = ShapeFileReadUtilities.getHeader(aFile);if (!CollectionUtilities.hasContent(columnNames)) {LOGGER.error(""Shapefile header is empty."");}myValuesSet.addAll(ShapeFileReadUtilities.getDataSample(aFile, 200));myImportConfig.getColumnNames().clear();myImportConfig.getColumnNames().addAll(columnNames);int numPreviewLines = myValuesSet.size();boolean hadError = numPreviewLines == 0;int lineIndex = -1;if (numPreviewLines == 0) {JOptionPane.showMessageDialog(myMainPanel,""Error loading: "" + aFile.getFilePath() + ""\n\nShapefile contains no data"",""Shapefile Loading Error"",JOptionPane.ERROR_MESSAGE);}if (hadError) {myState = ImportState.ERROR;changeState();} else {myInfoLabel.setText(""Read "" + lineIndex + "" Lines From File. Analyzing..."");if (myImportConfig.getColumnNames().size() > 0) {for (int i = 0; i < myImportConfig.getColumnNames().size(); i++) {myColumnTypes.add(ColumnType.OTHER);}myImportConfig.setDateColumn(-1);myImportConfig.setTimeColumn(-1);myImportConfig.setLobColumn(-1);LegacyImportWizardUtil.determineColumns(myImportConfig);LegacyImportWizardUtil.determineColumnsLiberal(myImportConfig);LegacyImportWizardUtil.graspAtStraws(myImportConfig);LegacyImportWizardUtil.setupColumnTypes(myImportConfig, myColumnTypes);}myProgressBar.setValue(100);myProgressBar.setIndeterminate(false);myInfoLabel.setText(""Analysis Complete"");}}}"	No
605	public class A {@Overridepublic void doStop() throws Exception {super.doStop();if (rec != null) {if (getStartupRecorderDuration() < 0) {System.gc();rec.stop();}FlightRecorder.unregister(FlightRecorderStartupStep.class);if (frl != null) {FlightRecorder.removeListener(frl);}rec = null;frl = null;}}}	Yes
606	"public class A {@Overridepublic AnswerItem<TestDataLib> readByKey(int testDataLibID) {AnswerItem<TestDataLib> answer = new AnswerItem<>();MessageEvent msg;TestDataLib result;final String query =""SELECT * FROM testdatalib tdl  LEFT OUTER JOIN testdatalibdata tdd ON tdl.TestDataLibID =""+ "" tdd.TestDataLibID and tdd.Subdata=''  WHERE tdl.`TestDataLibID` = ? ;"";if (LOG.isDebugEnabled()) {LOG.debug(""SQL : "" + query);}Connection connection = this.databaseSpring.connect();try {PreparedStatement preStat = connection.prepareStatement(query);preStat.setInt(1, testDataLibID);try {ResultSet resultSet = preStat.executeQuery();try {if (resultSet.first()) {result = this.loadFromResultSet(resultSet);msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_OK);msg.setDescription(msg.getDescription().replace(""%ITEM%"", OBJECT_NAME).replace(""%OPERATION%"", ""SELECT""));answer.setItem(result);} else {msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_NO_DATA_FOUND);}} catch (SQLException exception) {msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED);msg.setDescription(msg.getDescription().replace(""%DESCRIPTION%"", exception.toString()));} finally {if (resultSet != null) {resultSet.close();}}} catch (SQLException exception) {msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED);msg.setDescription(msg.getDescription().replace(""%DESCRIPTION%"", exception.toString()));} finally {if (preStat != null) {preStat.close();}}} catch (SQLException exception) {msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED);msg.setDescription(msg.getDescription().replace(""%DESCRIPTION%"", exception.toString()));} finally {try {if (!this.databaseSpring.isOnTransaction()) {if (connection != null) {connection.close();}}} catch (SQLException ex) {}}answer.setResultMessage(msg);return answer;}}"	Yes
607	"public class A {@Overridepublic T decode(ByteBuf body, ProtocolVersion version) {if (ProtocolVersion.SUPPORTED.contains(version)) {logger.error(""Received invalid message for supported protocol version {}"", version);}throw new ProtocolException(""Unsupported message"");}}"	No
608	"public class A {protected void secondPassCompile() throws MappingException {log.trace(""Starting secondPassCompile() processing"");{if (!isDefaultProcessed) {final Object isDelimited = reflectionManager.getDefaults().get(""delimited-identifier"");if (isDelimited != null && isDelimited == Boolean.TRUE) {getProperties().put(Environment.GLOBALLY_QUOTED_IDENTIFIERS, ""true"");}AnnotationBinder.bindDefaults(createMappings());isDefaultProcessed = true;}}{metadataSourceQueue.syncAnnotatedClasses();metadataSourceQueue.processMetadata(determineMetadataSourcePrecedence());}{for (CacheHolder holder : caches) {if (holder.isClass) {applyCacheConcurrencyStrategy(holder);} else {applyCollectionCacheConcurrencyStrategy(holder);}}caches.clear();}try {inSecondPass = true;processSecondPassesOfType(PkDrivenByDefaultMapsIdSecondPass.class);processSecondPassesOfType(SetSimpleValueTypeSecondPass.class);processSecondPassesOfType(CopyIdentifierComponentSecondPass.class);processFkSecondPassInOrder();processSecondPassesOfType(CreateKeySecondPass.class);processSecondPassesOfType(SecondaryTableSecondPass.class);originalSecondPassCompile();inSecondPass = false;} catch (RecoverableException e) {throw (RuntimeException) e.getCause();}for (Map.Entry<Table, List<UniqueConstraintHolder>> tableListEntry :uniqueConstraintHoldersByTable.entrySet()) {final Table table = tableListEntry.getKey();final List<UniqueConstraintHolder> uniqueConstraints = tableListEntry.getValue();int uniqueIndexPerTable = 0;for (UniqueConstraintHolder holder : uniqueConstraints) {uniqueIndexPerTable++;final String keyName =StringHelper.isEmpty(holder.getName()) ? ""key"" + uniqueIndexPerTable : holder.getName();buildUniqueKeyFromColumnNames(table, keyName, holder.getColumns());}}applyConstraintsToDDL();}}"	No
609	"public class A {public void extract() throws IOException {log.debug(""Extract content of '{}' to '{}'"", source, destination);if (destination.exists() && destination.isDirectory()) {FileUtils.delete(destination.toPath());}try (ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(source))) {ZipEntry zipEntry;while ((zipEntry = zipInputStream.getNextEntry()) != null) {File file = new File(destination, zipEntry.getName());File dir = new File(file.getParent());mkdirsOrThrow(dir);if (zipEntry.isDirectory()) {mkdirsOrThrow(file);} else {byte[] buffer = new byte[1024];int length;try (FileOutputStream fos = new FileOutputStream(file)) {while ((length = zipInputStream.read(buffer)) >= 0) {fos.write(buffer, 0, length);}}}}}}}"	No
610	"public class A {private void doUpdate(Map<String, Object> properties) {this.options = new BluetoothLeOptions(properties);this.startTime = 0;if (this.options.isEnableScan()) {this.worker = Executors.newScheduledThreadPool(2);this.bluetoothAdapter = this.bluetoothService.getBluetoothAdapter(this.options.getIname());if (this.bluetoothAdapter != null) {logger.info(""Bluetooth adapter interface => {}"", this.options.getIname());if (!this.bluetoothAdapter.isEnabled()) {this.bluetoothAdapter.enable();}this.scanHandle =this.worker.scheduleAtFixedRate(this::performScan, 0, 1, TimeUnit.SECONDS);this.readHandle =this.worker.scheduleAtFixedRate(this::readTiSensorTags, 0, this.options.getPeriod(), TimeUnit.SECONDS);} else {logger.info(""Bluetooth adapter {} not found."", this.options.getIname());}}}}"	Yes
611	"public class A {private static void installLinuxPRNGSecureRandom() throws SecurityException {if (Build.VERSION.SDK_INT > VERSION_CODE_JELLY_BEAN_MR2) {return;}Provider[] secureRandomProviders = Security.getProviders(""SecureRandom.SHA1PRNG"");if ((secureRandomProviders == null)|| (secureRandomProviders.length < 1)|| (!LinuxPRNGSecureRandomProvider.class.equals(secureRandomProviders[0].getClass()))) {Security.insertProviderAt(new LinuxPRNGSecureRandomProvider(), 1);}SecureRandom rng1 = new SecureRandom();if (!LinuxPRNGSecureRandomProvider.class.equals(rng1.getProvider().getClass())) {throw new SecurityException(""new SecureRandom() backed by wrong Provider: "" + rng1.getProvider().getClass());}SecureRandom rng2;try {rng2 = SecureRandom.getInstance(""SHA1PRNG"");} catch (NoSuchAlgorithmException e) {throw new SecurityException(""SHA1PRNG not available"", e);}if (!LinuxPRNGSecureRandomProvider.class.equals(rng2.getProvider().getClass())) {throw new SecurityException(""SecureRandom.getInstance(\""SHA1PRNG\"") backed by wrong""+ "" Provider: ""+ rng2.getProvider().getClass());}}}"	Yes
612	"public class A {public static void createHelixClusterIfNeeded(String helixClusterName, String zkPath) {final HelixAdmin admin = new ZKHelixAdmin(zkPath);if (admin.getClusters().contains(helixClusterName)) {LOGGER.info(""cluster already exist, skipping it.. ********************************************* "");return;}admin.addCluster(helixClusterName, false);LOGGER.info(""Enable auto join."");final HelixConfigScope scope =new HelixConfigScopeBuilder(ConfigScopeProperty.CLUSTER).forCluster(helixClusterName).build();final Map<String, String> props = new HashMap<String, String>();props.put(ZKHelixManager.ALLOW_PARTICIPANT_AUTO_JOIN, String.valueOf(true));props.put(MessageType.STATE_TRANSITION + ""."" + HelixTaskExecutor.MAX_THREADS, String.valueOf(1));admin.setConfig(scope, props);LOGGER.info(""Adding state model definition named : ""+ PinotHelixSegmentOnlineOfflineStateModelGenerator.PINOT_SEGMENT_ONLINE_OFFLINE_STATE_MODEL+ "" generated using : ""+ PinotHelixSegmentOnlineOfflineStateModelGenerator.class.toString()+ "" ********************************************** "");admin.addStateModelDef(helixClusterName,PinotHelixSegmentOnlineOfflineStateModelGenerator.PINOT_SEGMENT_ONLINE_OFFLINE_STATE_MODEL,PinotHelixSegmentOnlineOfflineStateModelGenerator.generatePinotStateModelDefinition());LOGGER.info(""Adding state model definition named : ""+ PinotHelixBrokerResourceOnlineOfflineStateModelGenerator.PINOT_BROKER_RESOURCE_ONLINE_OFFLINE_STATE_MODEL+ "" generated using : ""+ PinotHelixBrokerResourceOnlineOfflineStateModelGenerator.class.toString()+ "" ********************************************** "");admin.addStateModelDef(helixClusterName,PinotHelixBrokerResourceOnlineOfflineStateModelGenerator.PINOT_BROKER_RESOURCE_ONLINE_OFFLINE_STATE_MODEL,PinotHelixBrokerResourceOnlineOfflineStateModelGenerator.generatePinotStateModelDefinition());LOGGER.info(""Adding empty ideal state for Broker!"");HelixHelper.updateResourceConfigsFor(new HashMap<String, String>(),CommonConstants.Helix.BROKER_RESOURCE_INSTANCE,helixClusterName,admin);IdealState idealState =PinotTableIdealStateBuilder.buildEmptyIdealStateForBrokerResource(admin, helixClusterName);admin.setResourceIdealState(helixClusterName, CommonConstants.Helix.BROKER_RESOURCE_INSTANCE, idealState);LOGGER.info(""New Cluster setup completed... ********************************************** "");}}"	Yes
613	public class A {private Remote getRemote(Request baseRequest) {Remote remote = (Remote) baseRequest.getAttribute(REMOTE);if (remote != null) return remote;String ip = getRemoteIP(baseRequest);if (ip == null) return null;int limit = getThreadLimit(ip);if (limit <= 0) return null;remote = _remotes.get(ip);if (remote == null) {Remote r = new Remote(ip, limit);remote = _remotes.putIfAbsent(ip, r);if (remote == null) remote = r;}baseRequest.setAttribute(REMOTE, remote);return remote;}}	Yes
614	"public class A {@VisibleForTestingprotected Extension loadFromFile(File localFile) throws InvalidConfigException {Preconditions.checkNotNull(localFile);Preconditions.checkState(localFile.exists());Closer closer = Closer.create();try {InputStream fileIn = closer.register(new FileInputStream(localFile));Extension extension = factory.build(fileIn);extension.setRowType(normalizeRowType(extension.getRowType()));return extension;} catch (IOException e) {throw new InvalidConfigException(TYPE.INVALID_EXTENSION, ""Can't access local extension file"");} catch (SAXException e) {throw new InvalidConfigException(TYPE.INVALID_EXTENSION, ""Can't parse local extension file: "" + e.getMessage());} catch (ParserConfigurationException e) {throw new InvalidConfigException(TYPE.INVALID_EXTENSION, ""Can't create sax parser"");} finally {try {closer.close();} catch (IOException e) {}}}}"	Yes
615	"public class A {public void testTempDestRace() throws Exception {bridgeBrokers(BROKER_A, BROKER_B, false, 3);bridgeBrokers(BROKER_B, BROKER_A, false, 3);bridgeBrokers(BROKER_B, BROKER_C, false, 3);bridgeBrokers(BROKER_C, BROKER_B, false, 3);startAllBrokers();waitForBridgeFormation(1);HashSet<NetworkBridge> bridgesStart = new HashSet<>();for (NetworkConnector networkConnector : networkConnectors) {bridgesStart.addAll(networkConnector.activeBridges());}slowDownAdvisoryDispatch();noConsumerAdvisory();forwardFailureAdvisory();ExecutorService respondentThreadPool = Executors.newFixedThreadPool(50);BrokerItem brokerA = brokers.get(BROKER_A);ActiveMQConnectionFactory brokerAFactory =new ActiveMQConnectionFactory(brokerA.broker.getTransportConnectorByScheme(""tcp"").getName()+ ""?jms.watchTopicAdvisories=false"");brokerAFactory.setAlwaysSyncSend(true);for (int i = 0; i < NUM_RESPONDENTS; i++) {respondentThreadPool.execute(new EchoRespondent(brokerAFactory));}ExecutorService senderThreadPool = Executors.newCachedThreadPool();BrokerItem brokerC = brokers.get(BROKER_C);ActiveMQConnectionFactory brokerCFactory =new ActiveMQConnectionFactory(brokerC.broker.getTransportConnectorByScheme(""tcp"").getName()+ ""?jms.watchTopicAdvisories=false"");for (int i = 0; i < NUM_SENDS; i++) {senderThreadPool.execute(new MessageSender(brokerCFactory));}senderThreadPool.shutdown();senderThreadPool.awaitTermination(30, TimeUnit.SECONDS);TimeUnit.SECONDS.sleep(10);shutdown.compareAndSet(false, true);HashSet<NetworkBridge> bridgesEnd = new HashSet<>();for (NetworkConnector networkConnector : networkConnectors) {bridgesEnd.addAll(networkConnector.activeBridges());}assertEquals(""no new bridges created"", bridgesStart, bridgesEnd);assertEquals(""success or error"",NUM_SENDS,respondentSendError.get()+ forwardFailures.get()+ responseReceived.get()+ sendsWithNoConsumers.get());}}"	Yes
616	"public class A {public static void initLog4j(String defaultFile) throws Exception {if (!log4jInitialized) {String log4jPropertiesFileName = null;if (System.getProperty(""cmb.log4j.propertyFile"") != null) {log4jPropertiesFileName = System.getProperty(""cmb.log4j.propertyFile"");} else if (System.getProperty(""log4j.propertyFile"") != null) {log4jPropertiesFileName = System.getProperty(""log4j.propertyFile"");} else if (new File(""config/"" + defaultFile).exists()) {log4jPropertiesFileName = ""config/"" + defaultFile;} else if (new File(defaultFile).exists()) {log4jPropertiesFileName = defaultFile;} else {throw new IllegalArgumentException(""Missing VM parameter cmb.log4j.propertyFile"");}PropertyConfigurator.configure(log4jPropertiesFileName);logger.info(""event=init_log4j file="" + log4jPropertiesFileName);log4jInitialized = true;}}}"	No
617	"public class A {public void cleanJobDefaultCheckpointPath() {String jobCheckpointPath = getJobDefaultCheckpointPath();Path notePath = new Path(jobCheckpointPath);if (notePath.depth() <= 3) {submarineUI.outputLog(""ERROR"", ""Checkpoint path depth must be greater than 3"");return;}try {String message = ""Clean up the checkpoint directory: "" + jobCheckpointPath;submarineUI.outputLog("""", message);hdfsClient.delete(notePath);} catch (IOException e) {}}}"	Yes
618	"public class A {private VoLimitedTextField getJAgeFromTextField() {if (jAgeFromTextField == null) {jAgeFromTextField = new VoLimitedTextField(3, 2);jAgeFromTextField.setText(""0"");jAgeFromTextField.setMinimumSize(new Dimension(100, 50));ageFrom = 0;jAgeFromTextField.addFocusListener(new FocusListener() {@Overridepublic void focusLost(FocusEvent e) {try {ageFrom = Integer.parseInt(jAgeFromTextField.getText());if (ageFrom < 0 || ageFrom > 200) {jAgeFromTextField.setText("""");MessageDialog.error(OpdBrowser.this, ""angal.opd.insertavalidage.msg"");}} catch (NumberFormatException ex) {jAgeFromTextField.setText("""");}}@Overridepublic void focusGained(FocusEvent e) {}});}return jAgeFromTextField;}}"	No
619	"public class A {public AbstractListPage deleteSelected() {getTable().clickButton(""Delete"");waitUntil(ExpectedConditions.visibilityOfElementLocated(By.id(""dialog"")));WebElement dialogElement = getDriver().findElements(By.cssSelector(""#dialog *"")).get(0);clickOk();waitUntil(ExpectedConditions.stalenessOf(dialogElement));WebElement workingDialogText = findElementIfExists(By.cssSelector(""#dialog p:first-of-type""));if (workingDialogText != null) {waitUntil(ExpectedConditions.stalenessOf(workingDialogText));}WebElement errorDialog = getDriver().findElement(By.id(""dialog""));if (errorDialog != null && errorDialog.isDisplayed()) {clickOk();return null;}return constructor.apply(getDriver());}}"	Yes
620	"public class A {@DocPath(method = PUT, path = ""/alert/{alertId}"", name = ""Get an existing Alert."")@DocParameters(value = {@DocParameter(name = ""alertId"",required = true,path = true,description = ""Get an existing Alert.""),@DocParameter(name = ""thin"",type = Boolean.class,description = ""Return only a thin alert, do not include: evalSets, resolvedEvalSets."")})@DocResponses(value = {@DocResponse(code = 200, message = ""Success, Alert found."", response = Alert.class),@DocResponse(code = 404, message = ""Alert not found."", response = ApiError.class),@DocResponse(code = 500, message = ""Internal server error."", response = ApiError.class),})public void getAlert(RoutingContext routing) {routing.vertx().executeBlocking(future -> {String tenantId = checkTenant(routing);boolean thin = false;String alertId = routing.request().getParam(""alertId"");if (routing.request().params().get(PARAM_THIN) != null) {thin = Boolean.valueOf(routing.request().params().get(PARAM_THIN));}Alert found;try {found = alertsService.getAlert(tenantId, alertId, thin);log.debugf(""Alert: "", found);} catch (IllegalArgumentException e) {throw new BadRequestException(""Bad arguments: "" + e.getMessage());} catch (Exception e) {throw new InternalServerException(e.toString());}if (found == null) {throw new NotFoundException(""alertId: "" + alertId + "" not found"");}future.complete(found);},res -> result(routing, res));}}"	Yes
621	"public class A {@Overridepublic SortedMap<String, HibernateMetric> getGenericStats() {logger.debug(""Get general statistics related to Hibernate."");return cacheHandlerRepository.getGenericStats();}}"	No
622	"public class A {@Testpublic void suffixPatternWithTag() throws InterruptedException {setMockServerAndConfigure(1, ""test/something [%thread] %logger %msg"");String logMsg = ""hello"";logger.debug(logMsg);mockServer.join(8000);assertTrue(mockServer.isFinished());assertEquals(1, mockServer.getMessageList().size());String msg = new String(mockServer.getMessageList().get(0));String threadName = Thread.currentThread().getName();String expected = ""<"" + (SyslogConstants.LOG_MAIL + SyslogConstants.DEBUG_SEVERITY) + "">"";assertTrue(msg.startsWith(expected));checkRegexMatch(msg,SYSLOG_PREFIX_REGEX+ ""test/something \\[""+ threadName+ ""\\] ""+ loggerName+ "" ""+ logMsg);}}"	No
623	"public class A {@Test@Ignorepublic void testOverwrittenPacketHandling() throws Exception {final ZToolPacket[] packets = new ZToolPacket[1];final int TOTAL_GOD_PACKET = 26;ZigBeePortEmulator serial;final ZToolPacketParser parser;serial =new ZigBeePortEmulator(ZToolPacketParserTest.class.getResourceAsStream(""overwritten.packet.fsm""), false);serial.open();parser =new ZToolPacketParser(serial.getInputStream(),new ZToolPacketHandler() {public void error(Throwable th) {}public void handlePacket(ZToolPacket packet) {synchronized (nPackets) {if (nPackets[0] < 0) {return;}packets[0] = packet;if (packet.isError()) {nPackets[0] = -1;} else {nPackets[0]++;}logger.debug(""Received packet, total packet received is {}"", nPackets[0]);}}});final long delta = 250;long time = 0;synchronized (nPackets) {while (nPackets[0] >= 0&& nPackets[0] < TOTAL_GOD_PACKET&& parser.isAlive()&& time < delta * 10) {logger.debug(""Waiting for one of the following: ""+ ""BAD PACKET, enough packet received, parser dead, timout {}"",delta * 10);try {nPackets.wait(delta);} catch (InterruptedException e) {}time += delta;}}serial.close();assertTrue(""Notified of a bad packet"", packets[0].isError() == false);assertEquals(""Parsed less input packet then available"", TOTAL_GOD_PACKET, nPackets[0]);}}"	No
624	"public class A {public void rollback(long batchId) throws CanalClientException {int times = 0;while (times < retryTimes) {try {currentConnector.rollback(batchId);return;} catch (Throwable t) {logger.warn(String.format(""something goes wrong when rollbacking data from server:%s"",currentConnector != null ? currentConnector.getAddress() : ""null""),t);times++;restart();logger.info(""restart the connector for next round retry."");}}throw new CanalClientException(""failed to rollback after "" + times + "" times retry"");}}"	No
625	"public class A {@Overridepublic Optional<CalendarEvent> deleteCalendarEvent(DeleteCalendarEventOptions options)throws IOException {String url = buildCanvasUrl(""/calendar_events/"" + options.getId(), Collections.emptyMap());Response response = canvasMessenger.deleteFromCanvas(oauthToken, url, options.getOptionsMap());LOG.debug(""response "" + response.toString());if (response.getErrorHappened() || response.getResponseCode() != 200) {LOG.debug(""Failed to delete assignment, error message: "" + response.toString());return Optional.empty();}return responseParser.parseToObject(CalendarEvent.class, response);}}"	Yes
626	public class A {@Overridepublic String getArcDateStr() {String dateStr = header.getDate();if (bIsWarc) {try {Date warcDate = warcDateFormat.parse(dateStr);dateStr = arcDateFormat.format(warcDate);return dateStr;} catch (Exception e) {}}return dateStr;}}	Yes
627	"public class A {@Scheduled(cron = ""00 00 06 * * *"")public synchronized void execute() {logger.info(""Calculating usage count for Words"");Map<String, Integer> wordFrequencyMap = new HashMap<>();Language language = Language.valueOf(ConfigHelper.getProperty(""content.language""));List<StoryBook> storyBooks = storyBookDao.readAllOrdered();for (StoryBook storyBook : storyBooks) {logger.info(""storyBook.getTitle(): "" + storyBook.getTitle());List<String> paragraphs = new ArrayList<>();List<StoryBookChapter> storyBookChapters = storyBookChapterDao.readAll(storyBook);for (StoryBookChapter storyBookChapter : storyBookChapters) {List<StoryBookParagraph> storyBookParagraphs =storyBookParagraphDao.readAll(storyBookChapter);for (StoryBookParagraph storyBookParagraph : storyBookParagraphs) {paragraphs.add(storyBookParagraph.getOriginalText());}}Map<String, Integer> wordFrequencyMapForBook =WordFrequencyHelper.getWordFrequency(paragraphs, language);for (String key : wordFrequencyMapForBook.keySet()) {int wordFrequency = wordFrequencyMapForBook.get(key);String word = key;if (!wordFrequencyMap.containsKey(word)) {wordFrequencyMap.put(word, wordFrequency);} else {wordFrequencyMap.put(word, wordFrequencyMap.get(word) + wordFrequency);}}}for (String key : wordFrequencyMap.keySet()) {String wordLowerCase = key.toLowerCase();Word word = wordDao.readByText(wordLowerCase);if (word != null) {word.setUsageCount(wordFrequencyMap.get(wordLowerCase));wordDao.update(word);}}logger.info(""execute complete"");}}"	Yes
628	"public class A {protected Answer execute(PrepareCreateTemplateCommand cmd) {com.trilead.ssh2.Connection sshConnection = new com.trilead.ssh2.Connection(_ip, 22);try {sshConnection.connect(null, 60000, 60000);if (!sshConnection.authenticateWithPassword(_username, _password)) {s_logger.debug(""SSH Failed to authenticate"");throw new ConfigurationException(String.format(""Cannot connect to PING PXE server(IP=%1$s, username=%2$s, password=%3$s"",_ip, _username, _password));}String script =String.format(""python /usr/bin/prepare_tftp_bootfile.py backup %1$s %2$s %3$s %4$s %5$s %6$s %7$s""+ "" %8$s %9$s %10$s %11$s"",_tftpDir,cmd.getMac(),_storageServer,_share,_dir,cmd.getTemplate(),_cifsUserName,_cifsPassword,cmd.getIp(),cmd.getNetMask(),cmd.getGateWay());if (!SSHCmdHelper.sshExecuteCmd(sshConnection, script)) {return new Answer(cmd, false, ""prepare for creating template failed, command:"" + script);}s_logger.debug(""Prepare for creating template successfully"");return new Answer(cmd, true, ""Success"");} catch (Exception e) {s_logger.debug(""Prepare for creating baremetal template failed"", e);return new Answer(cmd, false, e.getMessage());} finally {if (sshConnection != null) {sshConnection.close();}}}}"	No
629	public class A {public void updateCommentInCase(String containerId,String caseId,String commentId,String author,List<String> restrictions,String comment,String marshallingType) {verifyContainerId(containerId, caseId);author = getUser(author);String actualComment =marshallerHelper.unmarshal(containerId,comment,marshallingType,String.class,new ByCaseIdContainerLocator(caseId));caseService.updateCaseComment(caseId,commentId,author,actualComment,restrictions.toArray(new String[restrictions.size()]));}}	Yes
630	public class A {private void getLogicalSwitchGroupByName() {LogicalSwitchGroup logicalSwitchGroup = client.getByName(LOGICAL_SWITCH_GROUP_NAME).get(0);}}	Yes
631	"public class A {@Testpublic void testByteArrayToStringConversion() throws UnsupportedEncodingException {ByteArrayToStringConverterOperator testop = new ByteArrayToStringConverterOperator();String test1 = ""hello world with UTF8"";byte[] utf8Bytes = test1.getBytes(""UTF-8"");String test2 = ""hello world@#'!!!.: with UTF-16"";byte[] asciiBytes = test2.getBytes(""UTF-16"");CollectorTestSink<String> testsink = new CollectorTestSink<String>();TestUtils.setSink(testop.output, testsink);testop.beginWindow(0);testop.setCharacterEncoding(""UTF-8"");testop.input.put(utf8Bytes);testop.setCharacterEncoding(""UTF-16"");testop.input.put(asciiBytes);testop.endWindow();Assert.assertEquals(2, testsink.collectedTuples.size());for (String output : testsink.collectedTuples) {logger.debug(""output is {}"", output);Assert.assertEquals(test1, output);test1 = test2;}}}"	No
632	public class A {private void closeSession(WebSocketSession session) {try {session.close(CloseStatus.SERVER_ERROR);} catch (Exception e) {LOGGER.warn(e.getMessage(), e);}}}	No
633	"public class A {void showStage(AnchorPane pane, boolean localTabOpen) {anchorRoot = pane;stage = new Stage();stage.setTitle(""Merge"");stage.setScene(new Scene(anchorRoot));stage.initModality(Modality.APPLICATION_MODAL);stage.setOnCloseRequest(event -> logger.info(""Closed merge window""));stage.show();if (localTabOpen) mergeTypePane.getSelectionModel().select(localBranchTab);this.notificationPaneController.setAnchor(stage);}}"	No
634	public class A {private void init() {if (realizations != null) return;synchronized (this) {if (realizations != null) return;if (realizationEntries == null || realizationEntries.size() == 0) return;RealizationRegistry registry = RealizationRegistry.getInstance(config);List<IRealization> realizationList = Lists.newArrayList();for (int i = 0; i < realizationEntries.size(); i++) {IRealization realization =registry.getRealization(realizationEntries.get(i).getType(), realizationEntries.get(i).getRealization());if (realization == null) {continue;}if (realization.isReady() == false) {continue;}realizationList.add(realization);}LinkedHashSet<TblColRef> columns = new LinkedHashSet<TblColRef>();LinkedHashSet<TblColRef> dimensions = new LinkedHashSet<TblColRef>();LinkedHashSet<MeasureDesc> measures = new LinkedHashSet<MeasureDesc>();dateRangeStart = 0;dateRangeEnd = Long.MAX_VALUE;for (IRealization realization : realizationList) {columns.addAll(realization.getAllColumns());dimensions.addAll(realization.getAllDimensions());measures.addAll(realization.getMeasures());if (realization.isReady()) isReady = true;if (dateRangeStart == 0 || realization.getDateRangeStart() < dateRangeStart)dateRangeStart = realization.getDateRangeStart();if (dateRangeStart == Long.MAX_VALUE || realization.getDateRangeEnd() > dateRangeEnd)dateRangeEnd = realization.getDateRangeEnd();}allDimensions = Lists.newArrayList(dimensions);allColumns = columns;allColumnDescs = asColumnDescs(allColumns);allMeasures = Lists.newArrayList(measures);Collections.sort(realizationList,new Comparator<IRealization>() {@Overridepublic int compare(IRealization o1, IRealization o2) {long i1 = o1.getDateRangeStart();long i2 = o2.getDateRangeStart();long comp = i1 - i2;if (comp != 0) {return comp > 0 ? 1 : -1;}i1 = o1.getDateRangeEnd();i2 = o2.getDateRangeEnd();comp = i1 - i2;if (comp != 0) {return comp > 0 ? 1 : -1;}return 0;}});this.realizations = realizationList.toArray(new IRealization[realizationList.size()]);}}}	Yes
635	"public class A {public void openURL(String url, long timeout) {final String decryptedURL = getEnvArgURL(cryptoTool.decryptByPattern(url, CRYPTO_PATTERN));this.pageURL = decryptedURL;WebDriver drv = getDriver();DriverListener.setMessages(Messager.OPENED_URL.getMessage(url), Messager.NOT_OPENED_URL.getMessage(url));Future<?> future =Executors.newSingleThreadExecutor().submit(new Callable<Void>() {public Void call() {try {Messager.OPENING_URL.info(url);drv.get(decryptedURL);} catch (UnhandledAlertException e) {drv.switchTo().alert().accept();}return null;}});try {LOGGER.debug(""starting driver.get call..."");future.get(timeout, TimeUnit.SECONDS);} catch (java.util.concurrent.TimeoutException e) {String message = ""Unable to open url during "" + timeout + ""sec!"";LOGGER.error(message);Assert.fail(message, e);} catch (InterruptedException e) {String message = ""Unable to open url during "" + timeout + ""sec!"";LOGGER.error(message);Assert.fail(message, e);Thread.currentThread().interrupt();} catch (ExecutionException e) {String message = ""ExecutionException error on open url: "" + e.getMessage();LOGGER.error(message);Assert.fail(message, e);} catch (Exception e) {String message = ""Undefined error on open url detected: "" + e.getMessage();LOGGER.error(message);Assert.fail(message, e);} finally {LOGGER.debug(""finished driver.get call."");}}}"	No
636	"public class A {@Overridepublic Option get(int index, Class<?> type, Annotation[] annotations) {if (this.index >= values.length) {return Option.empty();}final Object value = values[this.index];if (type.isPrimitive()) {if (value == null) {return Option.empty();}if (TypeUtils.getWrapperOf(type) == value.getClass()) {prepareNextCandidate();return Option.withValue(value);}} else {if (type.isInstance(value)) {prepareNextCandidate();return Option.withValue(value);} else {if (logger.isDebugEnabled()) {logger.debug(""argument miss match index:{}, type:{} value:{} typeCl:{}, valueCl:{}"",this.index,type,value,type.getClassLoader(),getClassLoader(value));}}}return Option.empty();}}"	No
637	public class A {public void cleanup() throws IOException, InterruptedException {int count = resources.size();if (LOG.isDebugEnabled()) {}try {for (RuntimeResource resource : resources) {if (LOG.isDebugEnabled()) {}resource.cleanup(configuration);}} finally {this.resources = Collections.emptyList();}if (LOG.isDebugEnabled()) {}}}	Yes
638	"public class A {private Transformer createTransformer() {try {Transformer transformer = transformerFactory.newTransformer();transformer.setOutputProperty(OutputKeys.INDENT, ""yes"");transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, ""yes"");transformer.setOutputProperty(""{http://xml.apache.org/xslt}indent-amount"", ""2"");return transformer;} catch (TransformerConfigurationException e) {logger.error(Markers.APP_LOG, ""Error creating transformer."", e);throw new IllegalStateException(e.getMessage());}}}"	No
639	"public class A {public String oAuthGetAccessToken() throws JSONException {String oxAuthAuthorizeUrl = getAuthorizationUrl();String oxAuthHost = getOxAuthHost(oxAuthAuthorizeUrl);if (StringHelper.isEmpty(oxAuthHost)) {facesMessages.add(FacesMessage.SEVERITY_ERROR, LOGIN_FAILED_OX_TRUST);return OxTrustConstants.RESULT_NO_PERMISSIONS;}Map<String, String> requestParameterMap =FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap();Map<String, Object> requestCookieMap =FacesContext.getCurrentInstance().getExternalContext().getRequestCookieMap();String authorizationCode = requestParameterMap.get(OxTrustConstants.OXAUTH_CODE);String authorizationState = requestParameterMap.get(OxTrustConstants.OXAUTH_STATE);String stateSession = (String) identity.getSessionMap().get(OxTrustConstants.OXAUTH_STATE);if (!StringHelper.equals(stateSession, authorizationState)) {String error = requestParameterMap.get(OxTrustConstants.OXAUTH_ERROR);String errorDescription = requestParameterMap.get(OxTrustConstants.OXAUTH_ERROR_DESCRIPTION);facesMessages.add(FacesMessage.SEVERITY_ERROR, LOGIN_FAILED_OX_TRUST);return OxTrustConstants.RESULT_NO_PERMISSIONS;}Object sessionStateCookie = requestCookieMap.get(OxTrustConstants.OXAUTH_SESSION_STATE);String sessionState = null;if (sessionStateCookie != null) {sessionState = ((Cookie) sessionStateCookie).getValue();}if (authorizationCode == null) {String error = requestParameterMap.get(OxTrustConstants.OXAUTH_ERROR);String errorDescription = requestParameterMap.get(OxTrustConstants.OXAUTH_ERROR_DESCRIPTION);facesMessages.add(FacesMessage.SEVERITY_ERROR, LOGIN_FAILED_OX_TRUST);return OxTrustConstants.RESULT_NO_PERMISSIONS;}String scopes = requestParameterMap.get(OxTrustConstants.OXAUTH_SCOPE);String clientID = appConfiguration.getOxAuthClientId();String clientPassword = appConfiguration.getOxAuthClientPassword();if (clientPassword != null) {try {clientPassword = encryptionService.decrypt(clientPassword);} catch (EncryptionException ex) {}}String result =requestAccessToken(oxAuthHost, authorizationCode, sessionState, scopes, clientID, clientPassword);if (OxTrustConstants.RESULT_NO_PERMISSIONS.equals(result)) {facesMessages.add(FacesMessage.SEVERITY_ERROR, LOGIN_FAILED_OX_TRUST);} else if (OxTrustConstants.RESULT_FAILURE.equals(result)) {facesMessages.add(FacesMessage.SEVERITY_ERROR, ""Login failed"");}return result;}}"	Yes
640	"public class A {@Overridepublic Response toResponse(NotFoundException exception) {logger.info(String.format(""%s. Returning %s response."", exception, Response.Status.NOT_FOUND));if (logger.isDebugEnabled()) {logger.debug(StringUtils.EMPTY, exception);}return Responses.notFound().entity(""The specified resource could not be found."").type(""text/plain"").build();}}"	No
641	"public class A {@Overridepublic DatanodeStorageInfo chooseReplicaToDelete(BlockCollection bc,Block block,short replicationFactor,Collection<DatanodeStorageInfo> first,Collection<DatanodeStorageInfo> second,List<StorageType> excessTypes) {LOG.info(""chooseReplicaToDelete rep ["" + replicationFactor + ""]"");String path = bc.getName();String shardServer = _serverLookup.getShardServer(path);if (shardServer == null) {return super.chooseReplicaToDelete(bc, block, replicationFactor, first, second, excessTypes);}DatanodeDescriptor shardServerDatanodeDescriptor =_serverLookup.getDatanodeDescriptor(shardServer);if (replicationFactor > 1) {Collection<DatanodeStorageInfo> firstCopy = new ArrayList<DatanodeStorageInfo>();for (DatanodeStorageInfo info : first) {DatanodeDescriptor datanodeDescriptor = info.getDatanodeDescriptor();if (!datanodeDescriptor.equals(shardServerDatanodeDescriptor)) {firstCopy.add(info);}}Collection<DatanodeStorageInfo> secondCopy = new ArrayList<DatanodeStorageInfo>();for (DatanodeStorageInfo info : second) {DatanodeDescriptor datanodeDescriptor = info.getDatanodeDescriptor();if (!datanodeDescriptor.equals(shardServerDatanodeDescriptor)) {secondCopy.add(info);}}return super.chooseReplicaToDelete(bc, block, replicationFactor, firstCopy, secondCopy, excessTypes);} else {for (DatanodeStorageInfo info : first) {DatanodeDescriptor datanodeDescriptor = info.getDatanodeDescriptor();if (!datanodeDescriptor.equals(shardServerDatanodeDescriptor)) {return info;}}for (DatanodeStorageInfo info : second) {DatanodeDescriptor datanodeDescriptor = info.getDatanodeDescriptor();if (!datanodeDescriptor.equals(shardServerDatanodeDescriptor)) {return info;}}throw new RuntimeException(""Should never happen!!!"");}}}"	No
642	"public class A {private void init() {boolean success = false;if (!success) {try {javax.xml.parsers.SAXParserFactory spf = javax.xml.parsers.SAXParserFactory.newInstance();spf.setNamespaceAware(true);javax.xml.parsers.SAXParser saxParser = spf.newSAXParser();parser = saxParser.getXMLReader();success = true;} catch (ParserConfigurationException | SAXException e) {logger.warn(""Could not instantiate JAXP/SAX XML reader: "", e.getMessage());}}if (!success) {try {parser =(XMLReader)this.getClass().getClassLoader().loadClass(""gnu.xml.aelfred2.XmlReader"").newInstance();success = true;} catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {logger.warn(""Could not instantiate Aelfred2 XML reader!"");}}if (!success) {try {parser =(XMLReader)this.getClass().getClassLoader().loadClass(""org.apache.xerces.parsers.SAXParser"").newInstance();success = true;} catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {logger.warn(""Could not instantiate Xerces XML reader!"");}}if (!success) {logger.error(""Could not instantiate any XML parser!"");}}}"	Yes
643	"public class A {@Overridepublic String findPerson(String sessionToken, String isbn) {log.debug(""\n\nFinding Entity..."");WebResource.Builder findBuilder =webResource.path(Constants.KUNDERA_API_PATH + ""/crud/PersonnelUni1ToM/"" + isbn).accept(mediaType).type(mediaType).header(Constants.SESSION_TOKEN_HEADER_NAME, sessionToken);;ClientResponse findResponse = (ClientResponse) findBuilder.get(ClientResponse.class);InputStream is = findResponse.getEntityInputStream();String personkStr = StreamUtils.toString(is);log.debug(""Found Entity:"" + personkStr);return personkStr;}}"	No
644	"public class A {public void printHelp(Log log) {IGenerator generator = executor.getGenerator();if (generator instanceof IJoynrGenerator) {IJoynrGenerator joynrGenerator = (IJoynrGenerator) generator;Set<String> parameters = joynrGenerator.supportedParameters();StringBuffer sb = new StringBuffer();sb.append(""Supported configuration parameters by the generator: "");if (parameters != null && parameters.size() > 0) {for (String parameter : parameters) {sb.append(parameter + "","");}sb.deleteCharAt(sb.length() - 1);} else {sb.append(""none"");}} else {}}}"	Yes
645	"public class A {public long getSize() {try {return getDataRecord().getLength();} catch (DataStoreException e) {log.warn(""getSize for "" + identifier + "" failed"", e);return -1;}}}"	No
646	"public class A {static Set<Method> findSetterMethods(Class<?> clazz,String name,Object value,boolean allowBuilderPattern,boolean allowPrivateSetter,boolean ignoreCase) {Set<Method> candidates =findSetterMethods(clazz, name, allowBuilderPattern, allowPrivateSetter, ignoreCase);if (candidates.isEmpty()) {return candidates;} else if (candidates.size() == 1) {return candidates;} else {LOG.trace(""Found {} suitable setter methods for setting {}"", candidates.size(), name);for (Method method : candidates) {if (method.getParameterTypes()[0].isInstance(value)) {LOG.trace(""Method {} is the best candidate as it has parameter with same instance type"",method);candidates.clear();candidates.add(method);return candidates;}}return candidates;}}}"	No
647	"public class A {public static void safeClose(Object... objects) {boolean debugEnabled = logger.isDebugEnabled();if (objects == null || objects.length == 0) {logger.info(""safeClose(...) was invoked with null or empty array: {}"", objects);return;}for (Object obj : objects) {if (obj != null) {if (debugEnabled) {logger.debug(""Trying to safely close {}"", obj);}if (obj instanceof Flushable) {try {((Flushable) obj).flush();} catch (Exception e) {if (debugEnabled) {logger.debug(""Flushing Flushable failed"", e);}}}if (obj instanceof AutoCloseable) {try {((AutoCloseable) obj).close();} catch (Exception e) {if (debugEnabled) {}}} else {logger.info(""obj was not AutoCloseable, trying to find close() method via reflection."");try {Method method = obj.getClass().getMethod(""close"", new Class[0]);if (method == null) {} else {method.setAccessible(true);method.invoke(obj);}} catch (InvocationTargetException e) {logger.warn(""Invoking close() by reflection threw exception"", e);} catch (Exception e) {logger.warn(""Could not invoke close() by reflection"", e);}}}}}}"	Yes
648	"public class A {public void attachDirty(MbGefaehr instance) {log.debug(""attaching dirty MbGefaehr instance"");try {sessionFactory.getCurrentSession().saveOrUpdate(instance);} catch (RuntimeException re) {throw re;}}}"	Yes
649	"public class A {@Overridepublic void resume() {switch (state()) {case CREATED:case RUNNING:case RESTORING:log.trace(""Skip resuming since state is {}"", state());break;case SUSPENDED:try {stateMgr.deleteCheckPointFileIfEOSEnabled();log.debug(""Deleted check point file upon resuming with EOS enabled"");} catch (final IOException ioe) {log.error(""Encountered error while deleting the checkpoint file due to this exception"", ioe);}transitionTo(State.RESTORING);log.info(""Resumed to restoring state"");break;case CLOSED:throw new IllegalStateException(""Illegal state "" + state() + "" while resuming active task "" + id);default:throw new IllegalStateException(""Unknown state "" + state() + "" while resuming active task "" + id);}timeCurrentIdlingStarted = Optional.empty();}}"	No
650	"public class A {@Overridepublic void doBuildListing(SequenceFile.Writer fileListWriter, DistCpOptions options)throws IOException {try {for (Path path : options.getSourcePaths()) {FileSystem sourceFS = path.getFileSystem(getConf());final boolean preserveAcls = options.shouldPreserve(FileAttribute.ACL);final boolean preserveXAttrs = options.shouldPreserve(FileAttribute.XATTR);final boolean preserveRawXAttrs = options.shouldPreserveRawXattrs();path = makeQualified(path);FileStatus rootStatus = sourceFS.getFileStatus(path);Path sourcePathRoot = computeSourceRootPath(rootStatus, options);FileStatus[] sourceFiles = sourceFS.listStatus(path);boolean explore = (sourceFiles != null && sourceFiles.length > 0);if (!explore || rootStatus.isDirectory()) {CopyListingFileStatus rootCopyListingStatus =DistCpUtils.toCopyListingFileStatus(sourceFS, rootStatus, preserveAcls, preserveXAttrs, preserveRawXAttrs);writeToFileListingRoot(fileListWriter, rootCopyListingStatus, sourcePathRoot, options);}if (explore) {for (FileStatus sourceStatus : sourceFiles) {if (LOG.isDebugEnabled()) {LOG.debug(""Recording source-path: {} for copy."", sourceStatus.getPath());}CopyListingFileStatus sourceCopyListingStatus =DistCpUtils.toCopyListingFileStatus(sourceFS,sourceStatus,preserveAcls && sourceStatus.isDirectory(),preserveXAttrs && sourceStatus.isDirectory(),preserveRawXAttrs && sourceStatus.isDirectory());writeToFileListing(fileListWriter, sourceCopyListingStatus, sourcePathRoot, options);if (isDirectoryAndNotEmpty(sourceFS, sourceStatus)) {if (LOG.isDebugEnabled()) {}traverseNonEmptyDirectory(fileListWriter, sourceStatus, sourcePathRoot, options);}}}}fileListWriter.close();fileListWriter = null;} finally {if (fileListWriter != null) {try {fileListWriter.close();} catch (IOException e) {if (LOG.isDebugEnabled()) {}}}}}}"	Yes
651	"public class A {public void toMapfishPrintPdf(Exchange ex)throws JSONException, DocumentException, URISyntaxException, IOException {String mfprintJsonSpec = ex.getIn().getBody(String.class);Assert.notNull(this.mapPrinter);ByteArrayOutputStream baos = new ByteArrayOutputStream();Message m = ex.getIn();try {PJsonObject mfSpec = MapPrinter.parseSpec(mfprintJsonSpec);this.mapPrinter.print(mfSpec, baos);} catch (Exception e) {log.error(""Error generating PDF, returning a blank pdf with the error message"", e);baos = generateErrorPdf(e);} finally {m.setBody(baos.toByteArray());ex.setOut(m);}}}"	No
652	"public class A {private static <T> void assertAttributeEqualsContinually(Entity x, AttributeSensor<T> sensor, T value) {try {EntityTestUtils.assertAttributeEqualsContinually(ImmutableMap.of(""timeout"", Duration.millis(25)), x, sensor, value);} catch (Throwable e) {log.warn(""Expected "" + x + "" continually to have "" + sensor + "" = "" + value + ""; instead:"");Entities.dumpInfo(x);throw Exceptions.propagate(e);}}}"	No
653	"public class A {@Overrideprotected void doExceptionCaught(IoSessionEx session, Throwable cause) throws Exception {if (logger.isDebugEnabled()) {String message = format(""Error on HTTP connection attempt: %s"", cause);if (logger.isTraceEnabled()) {} else {logger.debug(message);}}session.close(true);ConnectFuture httpConnectFuture = HTTP_CONNECT_FUTURE_KEY.remove(session);if (httpConnectFuture != null) {httpConnectFuture.setException(cause);}}}"	Yes
654	public class A {public static <T> void multDimensionCheck(final T[][] x, final T[][] y) {final int m = y.length;final int n = x[0].length;if (n != m) {final String msg = format(COL_ROW_MISMATCH, n, m);throw new IllegalArgumentException(msg);}}}	Yes
655	"public class A {@Overridepublic void processResult(int rc, String path, Object ctx, String name) {if (rc != KeeperException.Code.OK.intValue()) {LOG.error(""Could not create node for ledger : path = {}, rc = {}"",path,KeeperException.Code.get(rc));ledgerCb.operationComplete(rc, null);} else {metadata.setVersion(new ZkVersion(0));ledgerCb.operationComplete(rc, lid);}}}"	No
656	"public class A {private void cleanRemote() {long started = System.nanoTime();LOGGER.info(format(""Cleaning Worker homes of %s machines..."", registry.agentCount()));final String cleanCommand =format(""rm -fr hazelcast-simulator-%s/workers/*"", getSimulatorVersion());ThreadSpawner spawner = new ThreadSpawner(""clean"", true);for (final AgentData agent : registry.getAgents()) {spawner.spawn(() -> {LOGGER.info(format(""Cleaning %s"", agent.getPublicAddress()));bash.ssh(agent.getPublicAddress(), cleanCommand);});}spawner.awaitCompletion();long elapsed = getElapsedSeconds(started);LOGGER.info(format(""Finished cleaning Worker homes of %s machines (%s seconds)"",registry.agentCount(), elapsed));}}"	No
657	"public class A {private void deleteFloatingIP(Exchange exchange) throws Exception {String ipAddress =exchange.getIn().getHeader(DigitalOceanHeaders.FLOATING_IP_ADDRESS, String.class);if (ObjectHelper.isEmpty(ipAddress)) {throw new IllegalArgumentException(DigitalOceanHeaders.FLOATING_IP_ADDRESS + "" must be specified"");}Delete delete = getEndpoint().getDigitalOceanClient().deleteFloatingIP(ipAddress);exchange.getMessage().setBody(delete);}}"	Yes
658	"public class A {public void registerProvider(String providerName, Class<? extends T> provider) {if (providerName != null && !isRegistered(providerName)) {providers.put(providerName.toLowerCase(), provider);providerInstances.put(providerName.toLowerCase(), newInstance(providerName));} else {logger.warn(String.format(""Cannot register %s. It's either empty or already registered."", provider));}}}"	No
659	"public class A {@Overridepublic RequestCtx handleRequest(HttpServletRequest request, HttpServletResponse response)throws IOException, ServletException {if (logger.isDebugEnabled()) {}String[] parts = getPathParts(request);if (parts.length < 3) {logger.error(""Not enough path components on the URI: {}"", request.getRequestURI());throw new ServletException(""Not enough path components on the URI: "" + request.getRequestURI());}String pid = parts[1];String asOfDateTime = request.getParameter(""asOfDateTime"");if (!isDate(asOfDateTime)) {asOfDateTime = null;}RequestCtx req = null;Map<URI, AttributeValue> actions = new HashMap<URI, AttributeValue>();Map<URI, AttributeValue> resAttr;try {resAttr = ResourceAttributes.getResources(pid);if (parts.length > 3) {if (""methods"".equals(parts[2])) {String sDefPid = parts[3];if (sDefPid != null && !sDefPid.isEmpty()) {resAttr.put(Constants.SDEF.PID.getURI(), new StringAttribute(sDefPid));}}}if (asOfDateTime != null && !asOfDateTime.isEmpty()) {resAttr.put(Constants.DATASTREAM.AS_OF_DATETIME.getURI(),DateTimeAttribute.getInstance(asOfDateTime));}actions.put(Constants.ACTION.ID.getURI(), Constants.ACTION.LIST_METHODS.getStringAttribute());actions.put(Constants.ACTION.API.getURI(), Constants.ACTION.APIA.getStringAttribute());req =getContextHandler().buildRequest(getSubjects(request), actions, resAttr, getEnvironment(request));LogUtil.statLog(request.getRemoteUser(), Constants.ACTION.LIST_METHODS.uri, pid, null);} catch (Exception e) {logger.error(e.getMessage(), e);throw new ServletException(e.getMessage(), e);}return req;}}"	Yes
660	"public class A {protected void writeIndex(Index index, LockedFile f) {try {LOG.debug(""Write jandex index file '{}'"", f);new IndexWriter(f.newOutputStream()).write(index);} catch (Exception ex) {}}}"	Yes
661	"public class A {@Overridepublic BlogsStatsUser findByG_U(long groupId, long userId) throws NoSuchStatsUserException {BlogsStatsUser blogsStatsUser = fetchByG_U(groupId, userId);if (blogsStatsUser == null) {StringBundler sb = new StringBundler(6);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""groupId="");sb.append(groupId);sb.append("", userId="");sb.append(userId);sb.append(""}"");if (_log.isDebugEnabled()) {_log.debug(sb.toString());}throw new NoSuchStatsUserException(sb.toString());}return blogsStatsUser;}}"	No
662	public class A {@Overridepublic void onUpdateAll(InterpreterOutput out) {try {intpEventClient.onInterpreterOutputUpdateAll(noteId, paragraphId, out.toInterpreterResultMessage());} catch (IOException e) {LOGGER.error(e.getMessage(), e);}}}	No
663	"public class A {@RequestMapping(path = ""/v1/{assetGroup}/ec2/{resourceId}/aws-notifications/details"",method = RequestMethod.POST)public ResponseEntity<Object> getAwsNotificationDetails(@RequestBody(required = true) PageFilterRequest request,@PathVariable(name = ""resourceId"", required = true) String instanceId) {Map<String, Object> response = new HashMap<>();if (Strings.isNullOrEmpty(instanceId)) {return ResponseUtils.buildFailureResponse(new Exception(AssetConstants.ERROR_INSTANCEID));}int from = request.getFrom();if (from < 0) {return ResponseUtils.buildFailureResponse(new Exception(AssetConstants.ERROR_FROM_NEGATIVE));}int size = request.getSize();Map<String, String> filter = request.getFilter();List<Map<String, Object>> detailInfo = new ArrayList<>();try {detailInfo = assetService.getNotificationDetails(instanceId, filter, request.getSearchText());response.put(""response"", detailInfo);if (detailInfo.isEmpty()) {throw new NoDataFoundException(""No data found"");}if (from >= detailInfo.size()) {return ResponseUtils.buildFailureResponse(new Exception(AssetConstants.ERROR_FROM_EXCEEDS));}int endIndex = 0;if ((from + size) > detailInfo.size()) {endIndex = detailInfo.size();} else {endIndex = from + size;}if (endIndex == 0) {endIndex = detailInfo.size();}List<Map<String, Object>> subDetailList = detailInfo.subList(from, endIndex);return ResponseUtils.buildSucessResponse(subDetailList);} catch (Exception e) {List<Map<String, Object>> subDetailList = new ArrayList<>();return ResponseUtils.buildSucessResponse(subDetailList);}}}"	Yes
664	public class A {public static void sendCommitInfoToOthers(RemoteCommit remoteCommit) {if (logger.isDebugEnabled()) {}ITopic<RemoteCommit> topic = getHazelcastInstance().getTopic(FF_COMMIT_TOPIC_NAME);topic.publish(remoteCommit);}}	Yes
665	"public class A {@Overridepublic void handleReport(VloReport report) {logger.info((noop ? ""NOT sending"" : ""Sending"") + "" reports to statsd server {}:{} with prefix '{}'"",statsdHost,statsdPort,statsdPrefix);final StatsDClient client = newClient();try {final VloReport previousReport = getPreviousReport();try {client.gauge(""nrRecords"", report.getRecordCount());report.getCollections().stream().forEach((collection) -> {client.gauge(COLLECTION_METRIC_PREFIX + normaliseMetricName(collection.getCollection()),collection.getCount());});report.getFacets().stream().forEach((facet) -> {client.gauge(FACET_METRIC_PREFIX + normaliseMetricName(facet.getName()),facet.getValueCount());});if (previousReport != null) {resetRemovedCollections(previousReport, report, client);resetRemovedFacets(previousReport, report, client);}} finally {try {client.stop();} finally {updateReportHistory(report);}}} catch (JAXBException ex) {throw new RuntimeException(""Could not (un)marshall report history for statsd"", ex);}}}"	No
666	public class A {private boolean handleUpgradeEndCommand(UpgradeEndCommand command) {if (status != ZigBeeOtaServerStatus.OTA_TRANSFER_IN_PROGRESS&& status != ZigBeeOtaServerStatus.OTA_TRANSFER_COMPLETE) {cluster.sendDefaultResponse(command, ZclStatus.UNKNOWN);return true;}if (otaFile == null|| !command.getManufacturerCode().equals(otaFile.getManufacturerCode())|| !command.getFileVersion().equals(otaFile.getFileVersion())|| !command.getImageType().equals(otaFile.getImageType())) {cluster.sendDefaultResponse(command, ZclStatus.NO_IMAGE_AVAILABLE);return true;}stopTransferTimer();percentComplete = 100;switch (command.getStatus()) {case INVALID_IMAGE:updateStatus(ZigBeeOtaServerStatus.OTA_UPGRADE_FAILED);break;case REQUIRE_MORE_IMAGE:updateStatus(ZigBeeOtaServerStatus.OTA_WAITING);break;default:updateStatus(ZigBeeOtaServerStatus.OTA_TRANSFER_COMPLETE);if (autoUpgrade) {completeUpgrade(command);}break;}cluster.sendDefaultResponse(command, ZclStatus.SUCCESS);return true;}}	Yes
667	public class A {@Overridepublic void initializeForN(SieveParams sieveParams, int mergedBaseSize) {this.pMinIndex = sieveParams.pMinIndex;int pMax = sieveParams.pMax;this.initializer = sieveParams.initializer;this.sieveArraySize = sieveParams.sieveArraySize;int sieveAllocationSize = Math.max(pMax + 1, 2 * sieveArraySize);sieveArrayAddress = UnsafeUtil.allocateMemory(sieveAllocationSize);if (DEBUG)if (ANALYZE) initDuration = sieveDuration = collectDuration = 0;}}	Yes
668	"public class A {@Overridepublic void render(RenderContext glRenderContext) {long begin = System.currentTimeMillis();ViewParams params = glRenderContext.getViewParams();GL context = glRenderContext.getContext();params.getViewFrustum().getEyePos();Set<WorldRenderableObject> buildings = getObjects(params);if (!buildings.isEmpty()) {if (LOG.isDebugEnabled()) {LOG.debug(""Number of buildings from viewparams: "" + buildings.size());}context.glPushAttrib(GL.GL_CURRENT_BIT | GL.GL_LIGHTING_BIT);Iterator<WorldRenderableObject> it = buildings.iterator();while (it.hasNext()) {WorldRenderableObject b = it.next();context.glPushMatrix();b.renderPrepared(glRenderContext, geometryBuffer);context.glPopMatrix();}context.glPopAttrib();if (LOG.isDebugEnabled()) {}} else {}}}"	Yes
669	"public class A {private static Analyzer createInstance(final Class<?> clazz,final Class<?>[] vcParamClasses,final Object[] vcParamValues,final boolean warnOnError) {final String className = clazz.getName();MethodType constructorType = methodType(void.class);for (final Class<?> vcParamClazz : vcParamClasses) {constructorType = constructorType.appendParameterTypes(vcParamClazz);}try {final MethodHandle methodHandle = LOOKUP.findConstructor(clazz, constructorType);if (LOG.isDebugEnabled()) {LOG.debug(String.format(""Using analyzer %s"", className));}return (Analyzer) methodHandle.invokeWithArguments(vcParamValues);} catch (final NoSuchMethodException e) {final String message =String.format(""Could not find matching analyzer class constructor %s: %s"",className, e.getMessage());if (warnOnError) {} else {LOG.error(message, e);}} catch (final Throwable e) {if (e instanceof InterruptedException) {Thread.currentThread().interrupt();}final String message =String.format(""Exception while instantiating analyzer class %s: %s"", className, e.getMessage());if (warnOnError) {} else {LOG.error(message, e);}}return null;}}"	Yes
670	"public class A {public static void main(String[] args) throws IOException, ModelException, TranslateException {if (!""PyTorch"".equals(Engine.getInstance().getEngineName())) {return;}Path imageFile1 = Paths.get(""src/test/resources/kana1.jpg"");Image img1 = ImageFactory.getInstance().fromFile(imageFile1);Path imageFile2 = Paths.get(""src/test/resources/kana2.jpg"");Image img2 = ImageFactory.getInstance().fromFile(imageFile2);float[] feature1 = FeatureExtraction.predict(img1);float[] feature2 = FeatureExtraction.predict(img2);}}"	Yes
671	"public class A {private void addPeekedEvents(List<GatewaySenderEventImpl> batch, int batchSize) {if (this.resetLastPeeked) {Object[] helpArray = peekedEvents.toArray();if (helpArray.length > 0) {for (int i = helpArray.length - 1; i >= 0; i--) {GatewaySenderEventImpl event = (GatewaySenderEventImpl) helpArray[i];final int bucketId = event.getBucketId();final PartitionedRegion region = (PartitionedRegion) event.getRegion();if (!region.getRegionAdvisor().isPrimaryForBucket(bucketId)) {peekedEvents.remove(event);BucketRegionQueue brq = getBucketRegionQueueByBucketId(getRandomShadowPR(), bucketId);if (brq != null) {brq.pushKeyIntoQueue(event.getShadowKey());}}}}if (this.peekedEventsProcessingInProgress) {addPreviouslyPeekedEvents(batch, batchSize);} else if (peekedEvents.size() <= batchSize) {batch.addAll(peekedEvents);this.resetLastPeeked = false;} else {this.peekedEventsProcessing.addAll(this.peekedEvents);this.peekedEventsProcessingInProgress = true;addPreviouslyPeekedEvents(batch, batchSize);}if (logger.isDebugEnabled()) {StringBuffer buffer = new StringBuffer();for (Object ge : batch) {buffer.append(""event :"");buffer.append(ge);}}}}}"	Yes
672	"public class A {public byte inferByteRowDelimiter(byte[] bytes, int byteLen, int expectedSplits)throws IOException {if (expectedSplits > this.splitBuffers.length)throw new IOException(""expectSplits can not be greater than split buffer size"");boolean delimiterFound = false;byte foundDelimiter = 0;for (int i = 0; i < bytes.length; ++i) {byte c = bytes[i];if (!Character.isLetterOrDigit((char) c)) {try {int actualSplits = this.split(bytes, byteLen, c);if (actualSplits == expectedSplits) {if (!delimiterFound) {delimiterFound = true;foundDelimiter = c;} else if (c != foundDelimiter) {throw new IOException(""Duplicate delimiter found, found delimiter is : ""+ foundDelimiter+ "" new delimiter is ""+ c);}}} catch (Exception e) {}}}if (delimiterFound) return foundDelimiter;else throw new IOException(""No delimiter found"");}}"	Yes
673	"public class A {public static String getEffectiveAddress(Exchange exchange, String defaultAddress) {String retval = exchange.getIn().getHeader(Exchange.DESTINATION_OVERRIDE_URL, String.class);if (retval == null) {retval = defaultAddress;} else {LOG.trace(""Client address is overridden by header '{}' to value '{}'"",Exchange.DESTINATION_OVERRIDE_URL,retval);}return retval;}}"	No
674	"public class A {public CSVRecord getCSVRecord(String csvEntry) throws IOException {log.debug(""Parsing del record CSV: [""+ csvEntry+ ""] [Delimiter: ""+ csvFormat.getDelimiter()+ "" Escape:""+ csvFormat.getEscapeCharacter()+ ""]"");CSVParser p = CSVParser.parse(csvEntry, csvFormat);CSVRecord r = p.getRecords().get(0);if (log.isDebugEnabled()) {log.debug(""Parsing completed:"");for (int i = 0; i < r.size(); i++) {log.debug(i + "": ["" + r.get(i) + ""]"");}}return r;}}"	No
675	public class A {@Overridepublic void dispose() {cancelJobReference(liveDataPollingJobReference);cancelJobReference(aggregateDataPollingJobReference);webInterface.dispose();}}	Yes
676	"public class A {private static RemoteHoodieTableFileSystemView createRemoteFileSystemView(SerializableConfiguration conf,FileSystemViewStorageConfig viewConf,HoodieTableMetaClient metaClient) {LOG.info(""Creating remote view for basePath ""+ metaClient.getBasePath()+ "". Server=""+ viewConf.getRemoteViewServerHost()+ "":""+ viewConf.getRemoteViewServerPort()+ "", Timeout=""+ viewConf.getRemoteTimelineClientTimeoutSecs());return new RemoteHoodieTableFileSystemView(viewConf.getRemoteViewServerHost(),viewConf.getRemoteViewServerPort(),metaClient,viewConf.getRemoteTimelineClientTimeoutSecs());}}"	No
677	"public class A {public void processSubscribe(RequestEvent requestEvent, ServerTransaction serverTransaction) {SipProvider sipProvider = (SipProvider) requestEvent.getSource();Request request = requestEvent.getRequest();try {LOG.debug(""SipPresenceAgentListener request: {}"", request);EventHeader eventHeader = (EventHeader) request.getHeader(EventHeader.NAME);if (eventHeader == null) {return;}Response response = null;ServerTransaction st = requestEvent.getServerTransaction();if (st == null) {st = sipProvider.getNewServerTransaction(request);}boolean isInitial = requestEvent.getDialog() == null;if (isInitial) {String toTag = UUID.randomUUID().toString();response =sipPresenceAgent.getConfiguration().getMessageFactory().createResponse(202, request);ToHeader toHeader = (ToHeader) response.getHeader(ToHeader.NAME);toHeader.setTag(toTag);this.dialog = st.getDialog();this.dialog.terminateOnBye(false);} else {response =sipPresenceAgent.getConfiguration().getMessageFactory().createResponse(200, request);}response.addHeader(sipPresenceAgent.getConfiguration().getContactHeader());response.addHeader(sipPresenceAgent.getConfiguration().getExpiresHeader());st.sendResponse(response);LOG.debug(""SipPresenceAgentListener: Sent OK Message"");LOG.debug(""SipPresenceAgentListener response: {}"", response);sendNotification(eventHeader, isInitial, request.getContent());} catch (Exception e) {LOG.error(""Exception thrown during Notify processing in the SipPresenceAgentListener."", e);}}}"	Yes
678	"public class A {@PostMapping(value = ""/login"")public String authenticate(@Valid @ModelAttribute(""loginRequest"") LoginRequest loginRequest,BindingResult bindingResult,Model model,HttpServletRequest request,HttpServletResponse response)throws JsonProcessingException, UnsupportedEncodingException {logger.entry(String.format(""%s request"", request.getRequestURI()));AuditLogEventRequest auditRequest = AuditEventMapper.fromHttpServletRequest(request);String tempRegId = cookieHelper.getCookieValue(request, TEMP_REG_ID_COOKIE);String appId = cookieHelper.getCookieValue(request, APP_ID_COOKIE);String loginChallenge = cookieHelper.getCookieValue(request, LOGIN_CHALLENGE_COOKIE);String mobilePlatform = cookieHelper.getCookieValue(request, MOBILE_PLATFORM_COOKIE);String source = cookieHelper.getCookieValue(request, SOURCE_COOKIE);String appName = cookieHelper.getCookieValue(request, APP_NAME_COOKIE);boolean attrsAdded = addAttributesToModel(model, mobilePlatform, source);if (!attrsAdded) {return ERROR_VIEW_NAME;}if (StringUtils.isNotEmpty(tempRegId)) {return redirectToLoginOrConsentPage(tempRegId, loginChallenge, response);}ValidationErrorResponse errors = validateRequiredParams(request, ""email"", ""password"");if (bindingResult.hasErrors() || errors.hasErrors()) {logger.error(String.format(""hasBindingErrors=%b and missing required params=%b, error code=%s"",bindingResult.hasErrors(), errors.hasErrors(), ErrorCode.INVALID_LOGIN_CREDENTIALS));model.addAttribute(ERROR_DESCRIPTION, ErrorCode.INVALID_LOGIN_CREDENTIALS.getDescription());return LOGIN_VIEW_NAME;}UserRequest user = new UserRequest();user.setEmail(loginRequest.getEmail());user.setPassword(loginRequest.getPassword());user.setAppId(appId);user.setAppName(appName);AuthenticationResponse authenticationResponse = userService.authenticate(user, auditRequest);if (UserAccountStatus.PENDING_CONFIRMATION.getStatus()== authenticationResponse.getAccountStatus()) {String redirectUrl = redirectConfig.getAccountActivationUrl(mobilePlatform, source);String url = String.format(""%s?email=%s"", redirectUrl, loginRequest.getEmail());return redirect(response, url);}if (authenticationResponse.is2xxSuccessful()) {logger.exit(""authentication success, redirect to consent page"");cookieHelper.addCookie(response, USER_ID_COOKIE, authenticationResponse.getUserId());cookieHelper.addCookie(response,ACCOUNT_STATUS_COOKIE,String.valueOf(authenticationResponse.getAccountStatus()));} else {return LOGIN_VIEW_NAME;}return redirectToConsentPage(loginChallenge, authenticationResponse.getUserId(), response);}}"	No
679	"public class A {@Transactionalpublic void cleanExpiredAuthorizationCodes() {List<OrcidOauth2AuthoriziationCodeDetail> allAuthorizationCodes =orcidOauth2AuthoriziationCodeDetailDao.getAll();Date now = new Date();for (OrcidOauth2AuthoriziationCodeDetail authorizationCode : allAuthorizationCodes) {Date creationDate = authorizationCode.getDateCreated();Calendar c = Calendar.getInstance();c.setTime(creationDate);c.add(Calendar.MINUTE, authorizationCodeExpiration);Date expirationDate = c.getTime();if (expirationDate.before(now)) {LOG.info(""Authorization code is expired and will be deleted: "" + authorizationCode.getId());orcidOauth2AuthoriziationCodeDetailDao.remove(authorizationCode.getId());}}}}"	No
680	public class A {public static String getUrlTitleMapAsXML(long cpDefinitionId) throws RemoteException {try {String returnValue = CPDefinitionServiceUtil.getUrlTitleMapAsXML(cpDefinitionId);return returnValue;} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
681	"public class A {protected void testSuccess(MailClient mailClient, MailMessage email, AdditionalAsserts asserts) {Async async = testContext.async();PassOnce pass = new PassOnce(s -> testContext.fail(s));mailClient.sendMail(email,result -> {log.info(""mail finished"");pass.passOnce();mailClient.close();if (result.succeeded()) {log.info(result.result().toString());if (asserts != null) {try {asserts.doAsserts();} catch (Exception e) {testContext.fail(e);}}async.complete();} else {testContext.fail(result.cause());}});}}"	Yes
682	"public class A {private void putSettings() throws IOException {ClusterUpdateSettingsRequest request = new ClusterUpdateSettingsRequest();String transientSettingKey =RecoverySettings.INDICES_RECOVERY_MAX_BYTES_PER_SEC_SETTING.getKey();int transientSettingValue = 10;Settings transientSettings =Settings.builder().put(transientSettingKey, transientSettingValue, ByteSizeUnit.BYTES).build();request.transientSettings(transientSettings);ClusterUpdateSettingsResponse response =client.cluster().putSettings(request, RequestOptions.DEFAULT);if (response == null) {String message = ""elasticsearch put settings fail."";throw new RuntimeException(message);}}}"	Yes
683	"public class A {private boolean updateSuccessfullJobStatus(String objectKey) {LOG.trace(""Update successful job: for {}"", objectKey);if (objectKey.endsWith(""/"")) {objectKey = objectKey.substring(0, objectKey.length() - 1);}if (!mCachedSparkJobsStatus.containsKey(objectKey)) {mCachedSparkJobsStatus.put(objectKey, Boolean.TRUE);}return true;}}"	No
684	"public class A {@Overridepublic List<String> getURLsFromPage(Document doc) {List<String> imageURLs = new ArrayList<>();JSONObject json;try {getXAuthToken();if (xAuthToken == null || xAuthToken.isEmpty()) {throw new IOException(""No xAuthToken found."");}json =Http.url(jsonurl).cookies(cookies).data(""X-Auth"", xAuthToken).data(""hash"", getGID(url)).data(""_"", Long.toString(System.currentTimeMillis())).getJSON();} catch (IOException e) {return imageURLs;}JSONArray imageArray = json.getJSONArray(""images"");for (int i = 0; i < imageArray.length(); i++) {imageURLs.add(""https:"" + imageArray.getJSONObject(i).getString(""imageUrl""));}return imageURLs;}}"	Yes
685	"public class A {protected void handleConBeeState(ConBeeDeviceState deviceState) {logger.debug(""ConBeeDeviceState={}"", deviceState);synchronized (transmitSync) {if (sentFrame != null) {return;}if (deviceState.isDataIndication()) {ConBeeReadReceivedDataRequest readRequest = new ConBeeReadReceivedDataRequest();outputFrame(readRequest);} else if (deviceState.isDataRequest() && !sendQueue.isEmpty()) {try {ConBeeFrameRequest txFrame = sendQueue.take();outputFrame(txFrame);} catch (InterruptedException e) {}} else if (deviceState.isDataConfirm()) {ConBeeQuerySendDataRequest queryRequest = new ConBeeQuerySendDataRequest();outputFrame(queryRequest);} else if (deviceState.isConfigChanged()) {}}}}"	Yes
686	"public class A {public static java.util.List<com.liferay.portal.kernel.model.Group> getUserOrganizationsGroups(HttpPrincipal httpPrincipal, long userId, int start, int end)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(GroupServiceUtil.class,""getUserOrganizationsGroups"",_getUserOrganizationsGroupsParameterTypes22);MethodHandler methodHandler = new MethodHandler(methodKey, userId, start, end);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<com.liferay.portal.kernel.model.Group>) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
687	"public class A {private UserInfo getUserInfo(boolean retry, String vertaId, CommonConstants.UserIdentifier vertaIdentifier) {try (ai.verta.modeldb.common.authservice.AuthServiceChannel authServiceChannel =getAuthServiceChannel()) {GetUser getUserRequest;if (vertaIdentifier == CommonConstants.UserIdentifier.EMAIL_ID) {getUserRequest = GetUser.newBuilder().setEmail(vertaId).build();} else if (vertaIdentifier == CommonConstants.UserIdentifier.USER_NAME) {getUserRequest = GetUser.newBuilder().setUsername(vertaId).build();} else {getUserRequest = GetUser.newBuilder().setUserId(vertaId).build();}UserInfo userInfo = authServiceChannel.getUacServiceBlockingStub().getUser(getUserRequest);LOGGER.trace(CommonMessages.AUTH_SERVICE_RES_RECEIVED_MSG);if (userInfo == null || userInfo.getVertaInfo() == null) {throw new NotFoundException(""User not found with the provided metadata"");} else {return userInfo;}} catch (StatusRuntimeException ex) {return (UserInfo)CommonUtils.retryOrThrowException(ex,retry,(RetryCallInterface<UserInfo>)(retry1) -> getUserInfo(retry1, vertaId, vertaIdentifier),timeout);}}}"	Yes
688	"public class A {public SysUser getUserByName(String name, String password) throws Exception {SysUser sysUser = null;try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {HashMap<String, Object> mapParams = new HashMap<>();mapParams.put(""name"", name);mapParams.put(""password"", password);Map<String, Object> params = new HashMap<>();params.put(""mapParams"", mapParams);sysUser = sqlSession.selectOne(GET_USER_BY_NAME_STATEMENT, params);} catch (Exception e) {LOG.error(e.getMessage(), e);throw new Exception(e);}return sysUser;}}"	No
689	public class A {public ExoSocialActivity process(ExoSocialActivity i18nActivity, Locale selectedLocale) {if (i18nActivity.getTitleId() != null) {if (activityTypeRegistered(i18nActivity)) {ResourceBundle resourceBundle = getResourceBundle(i18nActivity, selectedLocale);if (resourceBundle == null) {return i18nActivity;}if (!getMessageBundleKeys(i18nActivity)) {return i18nActivity;}transformKeys(i18nActivity, resourceBundle);}}return i18nActivity;}}	Yes
690	"public class A {@Testpublic void testSuccessfulAuthAfterResettingCookieStore() {ResponseEntity<String> result = authenticatedRestTemplate.getForEntity("""", String.class);Assert.assertEquals(HttpStatus.SC_OK, result.getStatusCode().value());logger.debug(""Muck with cookie store (ie. maybe a session got changed on a prevous random request"");CookieStore cookieStore = authenticatedRestTemplate.getRestTemplate().getCookieStore();cookieStore.clear();logger.debug(""The subsequent request is still fine"");result = authenticatedRestTemplate.getForEntity("""", String.class);Assert.assertEquals(HttpStatus.SC_OK, result.getStatusCode().value());}}"	No
691	"public class A {private void writeMenu() throws IOException {writeln(""<div class='noPrint'> "");writeln(""<div id='menuBox' class='menuHide'>"");writeln(""  <ul id='menuTab'><li><a href='javascript:toggleMenuBox();'><img id='menuToggle'""+ "" src='?resource=menu.png' alt='menu' /></a></li></ul>"");writeln(""  <div id='menuLinks'><div id='menuDeco'>"");for (final Map.Entry<String, String> entry : menuTextsByAnchorName.entrySet()) {final String anchorName = entry.getKey();final String menuText = entry.getValue();writeDirectly(""    <div class='menuButton'><a href='#"" + anchorName + ""'>"" + menuText + ""</a></div>"");writeln("""");}final String customReports = Parameter.CUSTOM_REPORTS.getValue();if (customReports != null) {for (final String customReport : customReports.split("","")) {final String customReportName = customReport.trim();final String customReportPath = Parameters.getParameterValueByName(customReportName);if (customReportPath == null) {LOG.debug(""Parameter not defined in web.xml for custom report: "" + customReportName);continue;}writeDirectly(""    <div class='menuButton'><a href='?report=""+ URLEncoder.encode(customReportName, ""UTF-8"")+ ""'>""+ htmlEncode(customReportName)+ ""</a></div>"");writeln("""");}}if (SessionListener.getCurrentSession() != null) {writeDirectly(""    <div class='menuButton'><a href='?action=logout""+ getCsrfTokenUrlPart()+ ""'>""+ I18N.getString(""logout"")+ ""</a></div>"");writeln("""");}writeln(""  </div></div>"");writeln(""</div></div>"");}}"	No
692	"public class A {private boolean maybeSendAndPollTransactionalRequest() {if (transactionManager.hasInFlightRequest()) {client.poll(retryBackoffMs, time.milliseconds());return true;}if (transactionManager.hasAbortableError() || transactionManager.isAborting()) {if (accumulator.hasIncomplete()) {RuntimeException exception = transactionManager.lastError();if (exception == null) {exception = new TransactionAbortedException();}accumulator.abortUndrainedBatches(exception);}}if (transactionManager.isCompleting() && !accumulator.flushInProgress()) {accumulator.beginFlush();}TransactionManager.TxnRequestHandler nextRequestHandler =transactionManager.nextRequest(accumulator.hasIncomplete());if (nextRequestHandler == null) return false;AbstractRequest.Builder<?> requestBuilder = nextRequestHandler.requestBuilder();Node targetNode = null;try {FindCoordinatorRequest.CoordinatorType coordinatorType = nextRequestHandler.coordinatorType();targetNode =coordinatorType != null? transactionManager.coordinator(coordinatorType): client.leastLoadedNode(time.milliseconds());if (targetNode != null) {if (!awaitNodeReady(targetNode, coordinatorType)) {maybeFindCoordinatorAndRetry(nextRequestHandler);return true;}} else if (coordinatorType != null) {maybeFindCoordinatorAndRetry(nextRequestHandler);return true;} else {transactionManager.retry(nextRequestHandler);client.poll(retryBackoffMs, time.milliseconds());return true;}if (nextRequestHandler.isRetry()) time.sleep(nextRequestHandler.retryBackoffMs());long currentTimeMs = time.milliseconds();ClientRequest clientRequest =client.newClientRequest(targetNode.idString(),requestBuilder,currentTimeMs,true,requestTimeoutMs,nextRequestHandler);log.debug(""Sending transactional request {} to node {} with correlation ID {}"",requestBuilder,targetNode,clientRequest.correlationId());client.send(clientRequest, currentTimeMs);transactionManager.setInFlightCorrelationId(clientRequest.correlationId());client.poll(retryBackoffMs, time.milliseconds());return true;} catch (IOException e) {maybeFindCoordinatorAndRetry(nextRequestHandler);return true;}}}"	Yes
693	public class A {private static @Nullable Method getTargetMethod(Method bridgeMethod, Class<?> clazz) {List<Method> possibleTargetMethods = getPossibleTargetMethods(bridgeMethod, clazz);if (possibleTargetMethods.isEmpty()) {}if (possibleTargetMethods.size() == 1) {return possibleTargetMethods.get(0);}return null;}}	Yes
694	"public class A {public static <T extends ObjectType> List<PrismObject<T>> searchObjects(Class<T> type,ObjectQuery query,Collection<SelectorOptions<GetOperationOptions>> options,OperationResult result,PageBase page,PrismObject<UserType> principal) {LOGGER.debug(""Searching {} with oid {}, options {}"",new Object[] {type.getSimpleName(), query, options});OperationResult subResult;if (result != null) {subResult = result.createMinorSubresult(OPERATION_SEARCH_OBJECTS);} else {subResult = new OperationResult(OPERATION_SEARCH_OBJECTS);}List<PrismObject<T>> objects = new ArrayList<PrismObject<T>>();try {Task task = createSimpleTask(subResult.getOperation(), principal, page.getTaskManager());List<PrismObject<T>> list =page.getModelService().searchObjects(type, query, options, task, subResult);if (list != null) {objects.addAll(list);}} catch (Exception ex) {subResult.recordFatalError(""WebModelUtils.couldntSearchObjects"", ex);LoggingUtils.logUnexpectedException(LOGGER, ""Couldn't search objects"", ex);} finally {subResult.computeStatus();}if (result == null && WebComponentUtil.showResultInPage(subResult)) {page.showResult(subResult);}LOGGER.debug(""Loaded ({}) with result {}"", new Object[] {objects.size(), subResult});return objects;}}"	No
695	"public class A {protected Entity setupAndCheckTestEntityInBasicYamlWith(String... extras) throws Exception {managementContextInjected.set(false);configKeys.clear();Entity app = createAndStartApplication(loadYaml(""test-entity-basic-template.yaml"", extras));waitForApplicationTasks(app);Assert.assertEquals(app.getDisplayName(), ""test-entity-basic-template"");log.info(""App started:"");Entities.dumpInfo(app);Assert.assertTrue(app.getChildren().iterator().hasNext(), ""Expected app to have child entity"");Entity entity = app.getChildren().iterator().next();Assert.assertTrue(entity instanceof TestEntity, ""Expected TestEntity, found "" + entity.getClass());return (TestEntity) entity;}}"	No
696	"public class A {public static String json2xml(String jsonStr, Boolean pretty) {try {JSONObject jsonObj = new JSONObject(jsonStr);if (pretty) {return XmlTool.normalize(toXMLString(jsonObj, null));} else {return toXMLString(jsonObj, null);}} catch (Exception e) {logger.debug(""json2xml(): unable to parse json and convert to xml. Exception was: {}"",e.toString(),e);return null;}}}"	No
697	"public class A {@Overridepublic void handleHeader(HttpRequest request, CharSequence header, CharSequence value) {Session session = request.session;if (request.isCompleted()) {if (trace) {}return;}if (trace) {log.trace(""#{} Received header {}: {}"", session.uniqueId(), header, value);}try {HttpCache httpCache = HttpCache.get(session);if (request.cacheControl.invalidate) {if (AsciiString.contentEqualsIgnoreCase(header, HttpHeaderNames.LOCATION)|| AsciiString.contentEqualsIgnoreCase(header, HttpHeaderNames.CONTENT_LOCATION)) {httpCache.invalidate(request.authority, value);}}if (headerHandlers != null) {for (HeaderHandler handler : headerHandlers) {handler.handleHeader(request, header, value);}}httpCache.responseHeader(request, header, value);} catch (SessionStopException e) {throw e;} catch (Throwable t) {request.statistics().incrementInternalErrors(request.startTimestampMillis());request.markInvalid();session.stop();}}}"	Yes
698	"public class A {public String getEncoding(String fileName) throws Exception {String path;if (fileName.endsWith("".tmp"")) {path = PentahoSystem.getApplicationContext().getSolutionPath(TMP_FILE_PATH);} else {String relativePath =PentahoSystem.getSystemSetting(""file-upload-defaults/relative-path"",String.valueOf(DEFAULT_RELATIVE_UPLOAD_FILE_PATH));path = PentahoSystem.getApplicationContext().getSolutionPath(relativePath);}String fileLocation = path + fileName;String encoding;try {byte[] bytes = new byte[1024];InputStream inputStream = new FileInputStream(new File(fileLocation));inputStream.read(bytes);CharsetDetector charsetDetector = new CharsetDetector();charsetDetector.setText(bytes);CharsetMatch charsetMatch = charsetDetector.detect();encoding = charsetMatch.getName();inputStream.close();} catch (Exception e) {log.error(e);throw e;}return encoding;}}"	No
699	"public class A {@SuppressFBWarnings(value = ""PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS"",justification = ""prefix() is called with different StringBuilders"")public Instant fetchLeftOffTime() {log.info(""Checking for left off time from the updater"");StringBuilder b = SchemaDotOrg.prefix(new StringBuilder());b.append(""SELECT * WHERE { <"").append(uris.root()).append(""> schema:dateModified ?date }"");Instant leftOffTime = dateFromQuery(b.toString());if (leftOffTime != null) {log.info(""Found left off time from the updater"");return leftOffTime;}log.info(""Checking for left off time from the dump"");b = Ontology.prefix(SchemaDotOrg.prefix(new StringBuilder()));b.append(""SELECT * WHERE { ontology:Dump schema:dateModified ?date } ORDER BY ASC(?date) LIMIT 1"");return dateFromQuery(b.toString());}}"	No
700	public class A {public boolean saveAgentConfigFromUI(String agentId,String toolCategory,String labelName,String toolName,JsonObject agentJson,String agentVersion,String osversion,Date updateDate,boolean vault,boolean isWebhook) {AgentConfig agentConfig = new AgentConfig();try {setAgentConfigValues(agentConfig,toolCategory,labelName,agentId,toolName,agentJson,agentVersion,osversion,updateDate,vault,isWebhook);save(agentConfig);} catch (Exception e) {log.error(e.getMessage());throw e;}return Boolean.TRUE;}}	No
701	public class A {public void checkProduce(T item) {if (countdownLatch.getCount() < numWorkers) {drain();start();}produce(item);}}	Yes
702	"public class A {public MatchingResult match(List<HashMap<String, String>> travelers, Set<String> foundDerogIds) {this.prepareAttributes(travelers);HashMap<String, DerogResponse> responses = new HashMap<>();String gtasId;DerogResponse thisResponse;for (HashMap<String, String> trav : travelers) {thisResponse = matchTraveler(trav, foundDerogIds);gtasId = thisResponse.getGtasId();if (responses.containsKey(gtasId)) {responses.get(gtasId).addDerogIds(thisResponse.getDerogIds());} else {responses.put(thisResponse.getGtasId(), thisResponse);}}for (HashMap<String, String> trav : travelers) {if (!responses.containsKey(trav.get(""gtasId""))) {}}int totalHits = 0;for (DerogResponse resp : responses.values()) {totalHits += resp.getDerogIds().size();}return new MatchingResult(totalHits, responses);}}"	Yes
703	"public class A {@Overridepublic void orderBefore(@NotNull AccessControlEntry srcEntry, @Nullable AccessControlEntry destEntry)throws RepositoryException {EntryImpl src = validateEntry(srcEntry);EntryImpl dest = (destEntry == null) ? null : validateEntry(destEntry);if (src.equals(dest)) {return;}int index = -1;if (dest != null) {index = entries.indexOf(dest);if (index < 0) {throw new AccessControlException(""Destination entry not contained in this AccessControlList."");}}if (entries.remove(src)) {if (index != -1) {entries.add(index, src);} else {entries.add(src);}} else {throw new AccessControlException(""Source entry not contained in this AccessControlList"");}}}"	Yes
704	"public class A {public boolean deleteAffinityGroup(final String affinityGroupName, final long endTime)throws MicrosoftAzureException, TimeoutException, InterruptedException {if (!affinityExists(affinityGroupName)) {return true;}logger.info(""Deleting affinity group : "" + affinityGroupName);ClientResponse response = doDelete(""/affinitygroups/"" + affinityGroupName);String requestId = extractRequestId(response);waitForRequestToFinish(requestId, endTime);logger.fine(""Deleted affinity group : "" + affinityGroupName);return true;}}"	No
705	"public class A {private boolean addConnectionIfUnderMaximum() {for (; ; ) {int opened = open.get();if (opened >= options().getMaxConnectionsPerHost(hostDistance)) return false;if (open.compareAndSet(opened, opened + 1)) break;}if (phase.get() != Phase.READY) {open.decrementAndGet();return false;}try {Connection newConnection = tryResurrectFromTrash();if (newConnection == null) {logger.debug(""Creating new connection on busy pool to {}"", host);newConnection = manager.connectionFactory().open(this);}connections.add(newConnection);newConnection.state.compareAndSet(RESURRECTING, OPEN);if (isClosed() && !newConnection.isClosed()) {close(newConnection);open.decrementAndGet();return false;}signalAvailableConnection();return true;} catch (InterruptedException e) {Thread.currentThread().interrupt();open.decrementAndGet();return false;} catch (ConnectionException e) {open.decrementAndGet();logger.debug(""Connection error to {} while creating additional connection"", host);return false;} catch (AuthenticationException e) {open.decrementAndGet();return false;} catch (UnsupportedProtocolVersionException e) {open.decrementAndGet();logger.error(""UnsupportedProtocolVersionException error while creating additional connection (error""+ "" is: {})"",e.getMessage());return false;} catch (ClusterNameMismatchException e) {open.decrementAndGet();logger.error(""ClusterNameMismatchException error while creating additional connection (error is: {})"",e.getMessage());return false;}}}"	Yes
706	public class A {public RequestStatus deleteObligations(String id, User user) throws SW360Exception {Obligation oblig = obligRepository.get(id);assertNotNull(oblig);if (PermissionUtils.isUserAtLeast(UserGroup.SW360_ADMIN, user)) {obligRepository.remove(oblig);return RequestStatus.SUCCESS;} else {return RequestStatus.ACCESS_DENIED;}}}	Yes
707	"public class A {@Overridepublic void exceptionCaught(final ChannelHandlerContext ctx, final Throwable cause)throws Exception {final String channelId = ctx.channel().id().asLongText();if (this.isConnectionReset(cause)) {this.logger.info(""Channel [{}] - Connection was (as expected) reset by the device."", channelId);} else {this.logger.warn(""Channel [{}] - Unexpected exception from downstream."", channelId, cause);this.callbackHandlers.get(channelId).getDeviceResponseHandler().handleException(cause);this.callbackHandlers.remove(channelId);}ctx.channel().close();super.exceptionCaught(ctx, cause);}}"	No
708	"public class A {@Testpublic void monitorShouldNotifyWhenConditionIsSatisfied() throws InterruptedException {AtomicInteger polled = new AtomicInteger(0);Supplier<Boolean> condition =() -> {log.info(""Validating condition ..."");if (polled.incrementAndGet() > 1) {return true;} else {return false;}};CancellableCompletableFuture<Void> monitor =pollingMonitor.monitor(condition, 100, 500, TimeUnit.MILLISECONDS);monitor.exceptionally(t -> {Assert.fail(""Monitoring failed: "" + t.getMessage());return null;});try {monitor.get(1, TimeUnit.SECONDS);} catch (ExecutionException | TimeoutException e) {Assert.fail(""Did not receive complete notification."" + e.getMessage());}Assert.assertEquals(2, polled.get());}}"	Yes
709	"public class A {public List<DrugSearchTo1> fullSearch(String s) {RxDrugRef dr = new RxDrugRef();List<DrugSearchTo1> drugs = new ArrayList<DrugSearchTo1>();try {Vector<Hashtable> v = (Vector<Hashtable>) dr.list_drug_element(s);DrugSearchTo1 temp;for (Hashtable h : v) {temp = new DrugSearchTo1();temp.setName((String) h.get(""name""));if (h.containsKey(""isInactive"")) {temp.setActive(!((Boolean) h.get(""isInactive"")));}temp.setId((Integer) h.get(""id""));temp.setCategory((Integer) h.get(""category""));drugs.add(temp);}} catch (Exception e) {logger.error(""fullSearch Error"", e);return null;}return drugs;}}"	No
710	public class A {@PermitAllpublic void updateMetric(BaseQueryMetric metric) throws Exception {DatawavePrincipal dp = getPrincipal();if (metric.getLastWrittenHash() != metric.hashCode()) {metric.setLastWrittenHash(metric.hashCode());try {metric.setLastUpdated(new Date());sendQueryMetric(dp, metric);Iterator<PageMetric> itr = metric.getPageTimes().iterator();while (metric.getPageTimes().size() > 1) {itr.next();itr.remove();}} catch (Exception e) {}}}}	Yes
711	"public class A {private void process(FileDataObject object) {URI id = object.getID();try {int minimumArrayLength = mimeTypeIdentifier.getMinArrayLength();int bufferSize = Math.max(minimumArrayLength, 8192);BufferedInputStream buffer = new BufferedInputStream(object.getContent(), bufferSize);buffer.mark(minimumArrayLength + 10);byte[] bytes = IOUtil.readBytes(buffer, minimumArrayLength);String mimeType = mimeTypeIdentifier.identify(bytes, null, id);if (mimeType != null) {RDFContainer metadata = object.getMetadata();metadata.add(NIE.mimeType, mimeType);buffer.reset();Set extractors = extractorRegistry.get(mimeType);if (!extractors.isEmpty()) {ExtractorFactory factory = (ExtractorFactory) extractors.iterator().next();Extractor extractor = factory.get();extractor.extract(id, buffer, null, mimeType, metadata);}}} catch (Exception e) {logger.error(""ExtractorException while processing "" + id, e);}}}"	No
712	"public class A {@Overridepublic void start() throws Exception {directoryChangesListener.start();lifecycleHelper.applyCurrentConfigs();if (configuration.isVisibleToBaragonService()) {leaderLatch.start();if (configuration.isRegisterOnStartup()) {lifecycleHelper.notifyService(""startup"");}LOG.info(""Updating BaragonGroup information..."");loadBalancerDatastore.updateGroupInfo(configuration.getLoadBalancerConfiguration().getName(),configuration.getLoadBalancerConfiguration().getDefaultDomain(),configuration.getLoadBalancerConfiguration().getDomains(),configuration.getLoadBalancerConfiguration().getDomainAliases());knownAgentsDatastore.addKnownAgent(configuration.getLoadBalancerConfiguration().getName(),BaragonKnownAgentMetadata.fromAgentMetadata(baragonAgentMetadata, System.currentTimeMillis()));LOG.info(""Starting agent heartbeat..."");requestWorkerFuture =executorService.scheduleAtFixedRate(agentHeartbeatWorker,0,configuration.getHeartbeatIntervalSeconds(),TimeUnit.SECONDS);curatorFramework.getConnectionStateListenable().addListener(resyncListener);}LOG.info(""Starting config checker"");configCheckerFuture =executorService.scheduleAtFixedRate(configChecker, 0, configuration.getConfigCheckIntervalSecs(), TimeUnit.SECONDS);if (configuration.isEnablePollingStateValidation()) {stateCheckerFuture =executorService.scheduleAtFixedRate(internalStateChecker,configuration.getStateCheckIntervalSecs(),configuration.getStateCheckIntervalSecs(),TimeUnit.SECONDS);}lifecycleHelper.writeStateFileIfConfigured();if (configuration.getLoadBalancerConfiguration().getLogRotateCommand().isPresent()) {executorService.scheduleAtFixedRate(lbAdapter::triggerLogrotate,configuration.getLoadBalancerConfiguration().getRotateIntervalMillis(),configuration.getLoadBalancerConfiguration().getRotateIntervalMillis(),TimeUnit.MILLISECONDS);}agentState.set(BaragonAgentState.ACCEPTING);}}"	Yes
713	"public class A {@BeforeAll@SuppressWarnings({""unchecked"", ""rawtypes""})public static void startThriftServer() throws Exception {processor = new Calculator.Processor(new CalculatorSyncServerImpl());TSSLTransportFactory.TSSLTransportParameters sslParams =new TSSLTransportFactory.TSSLTransportParameters();sslParams.setKeyStore(KEY_STORE_SOURCE, SECURITY_STORE_PASSWORD);serverTransport =TSSLTransportFactory.getServerSocket(THRIFT_TEST_PORT, THRIFT_CLIENT_TIMEOUT, InetAddress.getByName(""localhost""), sslParams);TThreadPoolServer.Args args = new TThreadPoolServer.Args(serverTransport);args.processor(processor);server = new TThreadPoolServer(args);Runnable simple =new Runnable() {public void run() {server.serve();}};new Thread(simple).start();}}"	Yes
714	"public class A {public void start() {List<Callable<Object>> storageJobs = createStorageJobs(threadCount, batchSize, batchCount);Collections.shuffle(storageJobs);prepareForBenchmark();StopWatch stopWatch = new StopWatch();stopWatch.start(""Storing events"");try {executorService.invokeAll(storageJobs);} catch (InterruptedException e) {throw new IllegalStateException(""Benchmark was interrupted"", e);}stopWatch.stop();stopWatch.start(""Waiting for event processor to catch up"");try {remainingEvents.await(1, TimeUnit.MINUTES);} catch (InterruptedException e) {throw new IllegalStateException(""Benchmark was interrupted"", e);}stopWatch.stop();cleanUpAfterBenchmark();}}"	Yes
715	"public class A {@Overridepublic void notifyChannelInactive(Channel channel) {if (isClosed()) {RedisException closed = new RedisException(""Connection closed"");cancelCommands(""Connection closed"", drainCommands(), it -> it.completeExceptionally(closed));}sharedLock.doExclusive(() -> {if (debugEnabled) {logger.debug(""{} deactivating endpoint handler"", logPrefix());}connectionFacade.deactivated();});if (this.channel == channel) {this.channel = null;}}}"	No
716	public class A {public void updateUser() throws ImejiException {if (user != null) {UserController controller = new UserController(getSessionUser());user.setQuota(QuotaUtil.getQuotaInBytes(quota.getQuota()));try {controller.update(user, getSessionUser());reloadPage();} catch (UnprocessableError e) {BeanHelper.error(e, getLocale());}}}}	Yes
717	"public class A {private PercentilesResult queryGraphQueryWithPercentilesAggregation(String propertyName,Visibility visibility,Authorizations authorizations,double... percents) {Query q = graph.query(authorizations).limit(0);PercentilesAggregation agg =new PercentilesAggregation(""percentiles"", propertyName, visibility);agg.setPercents(percents);if (!q.isAggregationSupported(agg)) {return null;}q.addAggregation(agg);return q.vertices().getAggregationResult(""percentiles"", PercentilesResult.class);}}"	Yes
718	"public class A {public boolean unmount(final SheetCallback callback, final Runnable disconnected) {if (log.isDebugEnabled()) {}if (this.isConnected()) {if (preferences.getBoolean(""browser.disconnect.confirm"")) {final NSAlert alert =NSAlert.alert(MessageFormat.format(LocaleFactory.localizedString(""Disconnect from {0}""),pool.getHost().getHostname()),LocaleFactory.localizedString(""The connection will be closed.""),LocaleFactory.localizedString(""Disconnect""),LocaleFactory.localizedString(""Cancel""),null);alert.setShowsSuppressionButton(true);alert.suppressionButton().setTitle(LocaleFactory.localizedString(""Don't ask again"", ""Configuration""));this.alert(alert,new SheetCallback() {@Overridepublic void callback(int returncode) {if (alert.suppressionButton().state() == NSCell.NSOnState) {preferences.setProperty(""browser.disconnect.confirm"", false);}callback.callback(returncode);}});return false;}}this.doUnmount(disconnected);return true;}}"	Yes
719	"public class A {private final String getFilter(String userid) {String m = FilterSetup.getFilterNameAbbrev(FILTER_NAME) + "" getFilter() "";logger.debug(""{}>"", m);String filter = null;try {filter = new String(FILTER);filter = filter.replaceFirst(""\\{0}"", userid);} catch (Throwable th) {if (LOG_STACK_TRACES) {logger.error(m + ""couldn't set up filter for dir search"", th);} else {logger.error(m + ""couldn't set up filter for dir search"" + th.getMessage());}} finally {logger.debug(""{}< {}"", m, filter);}return filter;}}"	No
720	"public class A {public void handleCluster(ZigBeeEndpoint endpoint, ClusterMessage c) {try {ResponseImpl response = new ResponseImpl(c, ID);AlarmResponse alarm = new AlarmResponseImpl(response);ArrayList<AlarmListener> localCopy;synchronized (listeners) {localCopy = new ArrayList<AlarmListener>(listeners);}log.debug(""Notifying {} AlarmListener"", localCopy.size());for (AlarmListener alarmListner : localCopy) {try {log.debug(""Notifying {}:{}"", alarmListner.getClass().getName(), alarmListner);alarmListner.alarm(alarm.getAllarmCode(), alarm.getClusterID());} catch (Exception e) {}}} catch (ZigBeeClusterException e) {e.printStackTrace();}}}"	Yes
721	public class A {@Overridepublic String getContent() {try {String original = generateInMemoryDatasourcesXml();EntityResolver loader = new PentahoEntityResolver();Document originalDocument = XmlDom4JHelper.getDocFromString(original, loader);if (PentahoXmlaServlet.logger.isDebugEnabled()) {}Document modifiedDocument = (Document) originalDocument.clone();List<Node> nodesToRemove = getNodesToRemove(modifiedDocument);if (PentahoXmlaServlet.logger.isDebugEnabled()) {}for (Node node : nodesToRemove) {node.detach();}if (PentahoXmlaServlet.logger.isDebugEnabled()) {}return modifiedDocument.asXML();} catch (XmlParseException e) {return null;}}}	Yes
722	"public class A {private void setDbUpdateDate(String dateString, String timeString) {try {Date date = new SimpleDateFormat(DB_UPDATE_DATE_FORMAT).parse(dateString + "" "" + timeString);if (this.lastDbUpdateDate == null || date.after(this.lastDbUpdateDate)) {scanForDevices();this.lastDbUpdateDate = date;}} catch (ParseException e) {logger.warn(""Failed to parse DB update date {} {}"", dateString, timeString);}}}"	No
723	"public class A {private void testAndCreateColumnFamilyDef(MultiTenantColumnFamilyDefinition columnFamily)throws ConnectionException {final KeyspaceDefinition keyspaceDefinition = keyspace.describeKeyspace();final ColumnFamilyDefinition existing =keyspaceDefinition.getColumnFamily(columnFamily.getColumnFamily().getName());if (existing != null) {logger.info(""Not creating columnfamily {}, it already exists."",columnFamily.getColumnFamily().getName());return;}keyspace.createColumnFamily(columnFamily.getColumnFamily(), columnFamily.getOptions());astyanaxWaitForSchemaAgreement();}}"	Yes
724	"public class A {private static ImmutableList<File> getStandaloneDescriptors(@Nullable File pluginsDir) {if (pluginsDir == null) {return ImmutableList.of();}File[] pluginDescriptorFiles =pluginsDir.listFiles(new FilenameFilter() {@Overridepublic boolean accept(File dir, String name) {return name.endsWith("".json"");}});if (pluginDescriptorFiles == null) {return ImmutableList.of();}return ImmutableList.copyOf(pluginDescriptorFiles);}}"	Yes
725	"public class A {public static void logError(final Span span, final Throwable error) {if (error instanceof NullPointerException|| error instanceof IllegalArgumentException|| error instanceof IllegalStateException) {LOG.warn(""An unexpected error occurred!"", error);}if (span != null) {logError(span, getErrorLogItems(error));}}}"	No
726	"public class A {public static com.liferay.portal.kernel.repository.model.Folder copyFolder(HttpPrincipal httpPrincipal,long repositoryId,long sourceFolderId,long parentFolderId,String name,String description,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DLAppServiceUtil.class, ""copyFolder"", _copyFolderParameterTypes15);MethodHandler methodHandler =new MethodHandler(methodKey,repositoryId,sourceFolderId,parentFolderId,name,description,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.repository.model.Folder) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
727	"public class A {@Overridepublic void filter(final ContainerRequestContext request) throws IOException {if (logger.isDebugEnabled()) {logger.debug(""=== LogFilter BEGIN ==="");logger.debug(""Method: {}"", request.getMethod());logger.debug(""URL: {}"", UriUtil.encode(request.getUriInfo().getAbsolutePath()));for (final String key : request.getHeaders().keySet()) {logger.debug(key + "" : "" + request.getHeaders().get(key));}final List<MediaType> mediaTypes =Lists.newArrayList(MediaType.APPLICATION_JSON_TYPE,MediaType.APPLICATION_XML_TYPE,MediaType.TEXT_PLAIN_TYPE,MediaType.TEXT_XML_TYPE,MediaType.TEXT_HTML_TYPE);if (request.getMediaType() != null && mediaTypes.contains(request.getMediaType())) {if (request.hasEntity()) {final String body = IOUtils.toString(request.getEntityStream());request.setEntityStream(IOUtils.toInputStream(body));logger.debug(""Body: {}"", body);}}logger.debug(""=== LogFilter END ==="");}}}"	No
728	"public class A {private void updateChannel(@Nullable MiIoBasicChannel basicChannel, String param, JsonElement value) {JsonElement val = value;if (basicChannel == null) {return;}final String transformation = basicChannel.getTransfortmation();if (transformation != null) {JsonElement transformed = Conversions.execute(transformation, val);logger.debug(""Transformed with '{}': {} {} -> {} "",transformation,basicChannel.getFriendlyName(),val,transformed);val = transformed;}try {String[] chType = basicChannel.getType().toLowerCase().split("":"");switch (chType[0]) {case ""number"":quantityTypeUpdate(basicChannel, val, chType.length > 1 ? chType[1] : """");break;case ""dimmer"":updateState(basicChannel.getChannel(), new PercentType(val.getAsBigDecimal()));break;case ""string"":updateState(basicChannel.getChannel(), new StringType(val.getAsString()));break;case ""switch"":if (val.getAsJsonPrimitive().isNumber()) {updateState(basicChannel.getChannel(), val.getAsInt() > 0 ? OnOffType.ON : OnOffType.OFF);} else {String strVal = val.getAsString().toLowerCase();updateState(basicChannel.getChannel(),""on"".equals(strVal) || ""true"".equals(strVal) ? OnOffType.ON : OnOffType.OFF);}break;case ""color"":Color rgb = new Color(val.getAsInt());HSBType hsb = HSBType.fromRGB(rgb.getRed(), rgb.getGreen(), rgb.getBlue());updateState(basicChannel.getChannel(), hsb);break;default:logger.debug(""No update logic for channeltype '{}' "", basicChannel.getType());}} catch (Exception e) {}}}"	Yes
729	"public class A {private void preprocessProperties(final Properties properties) {final FileUtils base = SystemInstance.get().getBase();final File confDir = SystemInstance.get().getConf(null);final File baseDir = base.getDirectory();final File userDir = new File(""foo"").getParentFile();final File[] paths = {confDir, baseDir, userDir};final List<File> missing = new ArrayList<>();for (final Map.Entry<Object, Object> entry : properties.entrySet()) {final String key = (String) entry.getKey();final String value = (String) entry.getValue();if (key.endsWith("".File"")) {boolean found = false;for (int i = 0; i < paths.length && !found; i++) {final File path = paths[i];final File logfile = new File(path, value);if (logfile.getParentFile().exists()) {properties.setProperty(key, logfile.getAbsolutePath());found = true;}}if (!found) {final File logfile = new File(paths[0], value);missing.add(logfile);}}}if (missing.size() > 0) {final org.apache.log4j.Logger logger = getFallabckLogger();logger.error(""Logging may not operate as expected.  The directories for the following files do not""+ "" exist so no file can be created.  See the list below."");for (int i = 0; i < missing.size(); i++) {final File file = missing.get(i);logger.error(""["" + i + ""] "" + file.getAbsolutePath());}}}}"	No
730	public class A {public void save() {originalProperties = System.getProperties();System.setProperties(copyOf(originalProperties));}}	Yes
731	public class A {public void rpcFlowAddAll(int flowsPerDpn, int batchSize) {Set<String> nodeIdSet = getAllNodes();if (nodeIdSet.isEmpty()) {} else {for (String dpId : nodeIdSet) {FlowRPCHandlerTask addFlowRpcTask = new FlowRPCHandlerTask(dpId, flowsPerDpn, batchSize);flowPusher.execute(addFlowRpcTask);}}}}	Yes
732	"public class A {public void attachClean(StgMapMas instance) {try {sessionFactory.getCurrentSession().lock(instance, LockMode.NONE);log.debug(""attach successful"");} catch (RuntimeException re) {log.error(""attach failed"", re);throw re;}}}"	Yes
733	"public class A {public void startMockServerWithExpectations() {MockServerClient mockServer = startClientAndServer(1080);List<MockRequest> mockRequests = getAllMockRequestsFromJson();String response = null;Iterator<MockRequest> mockIterator = mockRequests.iterator();while (mockIterator.hasNext()) {MockRequest request = mockIterator.next();List<Parameter> parameterList = new ArrayList<>();if (request.isResponseJson()) {response = request.getResponse().get(0).toString();} else {response = request.getResponse().toString();}if (request.getParameters() != null) {for (Map.Entry<String, String> paramEntry : request.getParameters().entrySet()) {Parameter param = new Parameter(paramEntry.getKey(), paramEntry.getValue());parameterList.add(param);}}mockServer.when(request().withPath(request.getPath()).withQueryStringParameters(parameterList)).respond(response().withStatusCode(200).withBody(response));log.debug(""Expectation created for the path {} with query string parmeters {}"",request.getPath(),parameterList);}log.info(""Mock Server Started"");}}"	No
734	public class A {private SocketChannel createAsyncChannel(String host, int port, LRMIMethod lrmiMethod)throws IOException {if (_logger.isDebugEnabled()) {}Conversation conversation = new Conversation(new InetSocketAddress(host, port));if (_protocolValidationEnabled) {conversation.addChat(new WriteBytesChat(ProtocolValidation.getProtocolHeaderBytes()));}RequestPacket requestPacket =new RequestPacket(new HandshakeRequest(PlatformLogicalVersion.getLogicalVersion()));requestPacket.operationPriority =getOperationPriority(lrmiMethod, LRMIInvocationContext.getCurrentContext());conversation.addChat(new LRMIChat(requestPacket));try {SettableFuture<Conversation> future = clientConversationRunner.addConversation(conversation);if (_config.getSocketConnectTimeout() == 0) {future.get();} else {future.get(_config.getSocketConnectTimeout(), TimeUnit.MILLISECONDS);}conversation.channel().configureBlocking(true);return conversation.channel();} catch (Throwable t) {conversation.close(t);throw new IOException(t);}}}	Yes
735	"public class A {private void loadInitialConfig() {try {T newValue = loadConfig();if (newValue == null) {RecordLog.warn(""[SpringCloudConfigDataSource] WARN: initial application is null, you may have to check""+ "" your data source"");}getProperty().updateValue(newValue);} catch (Exception ex) {}}}"	Yes
736	"public class A {protected void registerConfigurers(Bundle bundle, List<BaseService> resolvers) {if (canSee(bundle, GeneratedPropertyConfigurer.class)) {Map<String, String> configurers = new HashMap<>();for (Enumeration<?> e = bundle.getEntryPaths(META_INF_CONFIGURER);e != null && e.hasMoreElements(); ) {String path = (String) e.nextElement();String name = path.substring(path.lastIndexOf(""/"") + 1);configurers.put(name, path);}if (!configurers.isEmpty()) {resolvers.add(new BundleConfigurerResolver(bundle, configurers));}}}}"	Yes
737	public class A {public void provide(V v) throws Throwable {if (this.executor == null) {assert this.exception == null;this.consumer.accept(v);} else if (this.exception != null) {throw this.throwException();} else {try {this.queue.put(v);} catch (InterruptedException e) {;}}}}	Yes
738	"public class A {protected boolean handleOutbound(MessageContext msgContext) {logger.trace(""Handling Outbound Message"");SOAPMessageContext ctx = (SOAPMessageContext) msgContext;SOAPMessage soapMessage = ctx.getMessage();Element assertion = (Element) ctx.get(SAML2Constants.SAML2_ASSERTION_PROPERTY);if (assertion == null) {assertion = getAssertionFromSubject();}if (assertion == null) {logger.trace(""We did not find any assertion"");return true;}Document document = soapMessage.getSOAPPart();Element soapHeader = Util.findOrCreateSoapHeader(document.getDocumentElement());try {Element wsse = getSecurityHeaderElement(document);wsse.setAttributeNS(soapHeader.getNamespaceURI(), soapHeader.getPrefix() + "":mustUnderstand"", ""1"");if (assertion != null) {if (document != assertion.getOwnerDocument()) {wsse.appendChild(document.importNode(assertion, true));} else {wsse.appendChild(assertion);}}soapHeader.insertBefore(wsse, soapHeader.getFirstChild());} catch (Exception e) {return false;}return true;}}"	Yes
739	public class A {List<URL> getTemplateExportedURLs(URL subscribedURL, List<ServiceInstance> serviceInstances) {DubboMetadataService dubboMetadataService = getProxy(serviceInstances);List<URL> templateExportedURLs = emptyList();if (dubboMetadataService != null) {templateExportedURLs = getExportedURLs(dubboMetadataService, subscribedURL);} else {if (logger.isWarnEnabled()) {}}return templateExportedURLs;}}	Yes
740	public class A {public void deactivate() {}}	Yes
741	"public class A {private void testUnlockWithoutLock() {try {WonesysProtocolSession session =(WonesysProtocolSession) getSession(resourceId, hostIpAddress, hostPort);ProteusOpticalSwitch opticalSwitch1 = new ProteusOpticalSwitch();opticalSwitch1.setName(resourceId);WonesysCommand c = new UnlockNodeCommand();c.initialize();String response = (String) session.sendReceive(c.message());Response resp = c.checkResponse(response);Assert.assertTrue(resp.getStatus().equals(Status.ERROR));Assert.assertTrue(resp.getErrors().contains(""Node is not locked""));session.disconnect();} catch (ProtocolException e) {log.error(""Error happened!!!!"", e);Assert.fail();} catch (CommandException e) {log.error(""Error happened!!!!"", e);Assert.fail();}}}"	Yes
742	public class A {@Overridepublic void startBundle(GwtXSRFToken xsrfToken, String bundleId) throws GwtKuraException {checkXSRFToken(xsrfToken);SystemService systemService = ServiceLocator.getInstance().getService(SystemService.class);Bundle[] bundles = systemService.getBundles();for (Bundle b : bundles) {if (b.getBundleId() == Long.parseLong(bundleId)) {try {b.start();return;} catch (BundleException e) {throw new GwtKuraException(GwtKuraErrorCode.INTERNAL_ERROR);}}}throw new GwtKuraException(GwtKuraErrorCode.INTERNAL_ERROR);}}	Yes
743	"public class A {@SuppressFBWarnings(value = ""RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"",justification = ""False positive by try with resources."")public Locale[] getAvailableLocales() {synchronized (LOCKS.get(LocksKeys.LOCALES)) {if (locales == null) {List<Locale> l = new ArrayList<>();try (InputStream in = SettingsService.class.getResourceAsStream(LOCALES_FILE)) {String[] lines = StringUtil.readLines(in);for (String line : lines) {l.add(StringUtil.parseLocale(line));}} catch (IOException x) {if (LOG.isErrorEnabled()) {LOG.error(""Failed to resolve list of locales."", x);}l.add(Locale.ENGLISH);}locales = l.toArray(new Locale[0]);}}return locales;}}"	No
744	"public class A {@Overridepublic long getUpperBound() {MongoDBAuditBackend auditService =(MongoDBAuditBackend) Framework.getService(AuditReader.class);QueryBuilder queryBuilder =new AuditQueryBuilder().predicate(Predicates.gt(""eventDate"", new Date(0)));queryBuilder.order(OrderByExprs.desc(LOG_ID));queryBuilder.limit(1);List<LogEntry> entries = auditService.queryLogs(queryBuilder);if (entries.isEmpty()) {return -1;}return entries.get(0).getId();}}"	Yes
745	"public class A {public Page<DatabaseConnectionDto> findAllDatabaseConnections(final Pageable pageable) {log.debug(""findAllDatabaseConnections() - pageable: {}"", pageable);final Page<DatabaseConnection> databaseConnections =databaseConnectionService.findAll(pageable);return databaseConnectionToDatabaseConnectionDtoConverter.convertToPage(databaseConnections);}}"	No
746	"public class A {@Overridepublic void addStringField(String fieldName, String value) {if (logger.isTraceEnabled()) {logger.trace(""addStringField fieldName: {}; value: {}"", fieldName, value);}fieldList.add(new JSONFieldHolder(fieldName, value, FieldType.STRING));}}"	No
747	"public class A {@Overridepublic synchronized void addRemoteQueueListener(String endpoint, URI remoteEndpoint)throws CamelConfigurationFailedException {endpoint = remoteEndpoint.getScheme() + endpoint;if (camelContext.hasEndpoint(endpoint) != null) {return;}logger.debug(""Adding route for listening to remote queue {} "", endpoint);OwnerApplicationListenerRouteBuilder ownerApplicationListenerRouteBuilder =new OwnerApplicationListenerRouteBuilder(camelContext, endpoint, remoteEndpoint);try {camelContext.addRoutes(ownerApplicationListenerRouteBuilder);} catch (Exception e) {throw new CamelConfigurationFailedException(""adding route to camel context failed"", e);}}}"	Yes
748	"public class A {private static Map<String, InetAddress> testResolve0(DnsNameResolver resolver, Set<String> excludedDomains, DnsRecordType cancelledType)throws InterruptedException {assertThat(resolver.isRecursionDesired(), is(true));final Map<String, InetAddress> results = new HashMap<String, InetAddress>();final Map<String, Future<InetAddress>> futures =new LinkedHashMap<String, Future<InetAddress>>();for (String name : DOMAINS) {if (excludedDomains.contains(name)) {continue;}resolve(resolver, futures, name);}for (Entry<String, Future<InetAddress>> e : futures.entrySet()) {String unresolved = e.getKey();InetAddress resolved = e.getValue().sync().getNow();logger.info(""{}: {}"", unresolved, resolved.getHostAddress());assertThat(resolved.getHostName(), is(unresolved));boolean typeMatches = false;for (InternetProtocolFamily f : resolver.resolvedInternetProtocolFamiliesUnsafe()) {Class<?> resolvedType = resolved.getClass();if (f.addressType().isAssignableFrom(resolvedType)) {typeMatches = true;}}assertThat(typeMatches, is(true));results.put(resolved.getHostName(), resolved);}assertQueryObserver(resolver, cancelledType);return results;}}"	No
749	public class A {@Overridepublic BookieAuthProvider newProvider(BookieConnectionPeer addr, final AuthCallbacks.GenericCallback<Void> completeCb) {return new BookieAuthProvider() {AuthCallbacks.GenericCallback<Void> completeCallback = completeCb;@Overridepublic void onProtocolUpgrade() {try {boolean secureBookieSideChannel = addr.isSecure();Collection<Object> certificates = addr.getProtocolPrincipals();if (secureBookieSideChannel&& !certificates.isEmpty()&& certificates.iterator().next() instanceof X509Certificate) {X509Certificate tempCert = (X509Certificate) certificates.iterator().next();String[] certRole = CertUtils.getRolesFromOU(tempCert);if (certRole == null || certRole.length == 0) {completeCallback.operationComplete(BKException.Code.UnauthorizedAccessException, null);return;}boolean authorized = false;for (String allowedRole : allowedRoles) {if (certRole[0].equals(allowedRole)) {authorized = true;}}if (authorized) {addr.setAuthorizedId(new BookKeeperPrincipal(certRole[0]));completeCallback.operationComplete(BKException.Code.OK, null);} else {completeCallback.operationComplete(BKException.Code.UnauthorizedAccessException, null);}} else {if (!secureBookieSideChannel) {} else if (certificates.isEmpty()) {} else {}completeCallback.operationComplete(BKException.Code.UnauthorizedAccessException, null);}} catch (Exception e) {completeCallback.operationComplete(BKException.Code.UnauthorizedAccessException, null);}}@Overridepublic void process(AuthToken m, AuthCallbacks.GenericCallback<AuthToken> cb) {}};}}	Yes
750	"public class A {private synchronized @Nullable WorkItemServiceState execute(WorkItemStatus status)throws IOException {WorkItemServiceState result = workUnitClient.reportWorkItemStatus(status);if (result != null) {nextReportIndex = result.getNextReportIndex();if (nextReportIndex == null && !status.getCompleted()) {LOG.error(""Missing next work index in {} when reporting {}."", result, status);}commitMetrics();}if (status.getCompleted()) {checkState(!finalStateSent, ""cannot reportUpdates after sending a final state"");finalStateSent = true;}return result;}}"	No
751	public class A {public static void revokeAllOAuth2Authorizations(long oAuth2ApplicationId)throws RemoteException {try {OAuth2AuthorizationServiceUtil.revokeAllOAuth2Authorizations(oAuth2ApplicationId);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
752	"public class A {private void mapTracks(Rep trackRep) throws IOException, URISyntaxException {Set<String> paths = getVariants(trackRep.origMpfile);for (String path : paths) {String name = FilenameUtils.getName(path);if (repMap.containsKey(name)) {Rep rep = repMap.get(name);rep.newMpuri = trackRep.track.getURI().relativize(rep.origMpuri);rep.newfileName = relativize(trackRep.origMpuri, rep.origMpuri);fileMap.put(path, rep.newfileName);rep.relPath = path;} else {logger.warn(""Adaptive Playlist referenced track not found in mediapackage"");}}}}"	No
753	public class A {public Object next(EntityMetadata m) {Object entity = null;HBaseData result = ((HBaseReader) hbaseReader).next();List<HBaseData> results = new ArrayList<HBaseData>();List output = new ArrayList();results.add(result);try {output =onRead(m.getSchema(),m.getEntityClazz(),m,output,gethTable(m.getSchema()),entity,m.getRelationNames(),results);} catch (IOException e) {throw new KunderaException(e);}return output != null && !output.isEmpty() ? output.get(0) : output;}}	Yes
754	public class A {@Overridepublic void onMessage(final ClusterNode node, final GridDhtPartitionsSingleMessage msg) {GridDhtPartitionExchangeId exchangeId = msg.exchangeId();if (exchangeId != null) {GridDhtPartitionsExchangeFuture fut = exchangeFuture(exchangeId);boolean fastReplied = fut.fastReplyOnSingleMessage(node, msg);if (fastReplied) {if (log.isInfoEnabled())return;}} else {GridDhtPartitionsExchangeFuture cur = lastTopologyFuture();if (!cur.isDone() && cur.changedAffinity() && !msg.restoreState()) {cur.listen(new IgniteInClosure<IgniteInternalFuture<AffinityTopologyVersion>>() {@Overridepublic void apply(IgniteInternalFuture<AffinityTopologyVersion> fut) {}});return;}}processSinglePartitionUpdate(node, msg);}}	Yes
755	public class A {public void checkIn(Pipeline pipeline) {if (log.isTraceEnabled()) {}pipeline.clear();checkedOut.remove(pipeline);checkedIn.add(pipeline);}}	Yes
756	"public class A {@Overridepublic List<String> associateAddresses(NodeMetadata node) {IaasProvider iaasInfo = getIaasProvider();ComputeServiceContext context = iaasInfo.getComputeService().getContext();CloudStackApi cloudStackApi = context.unwrapApi(CloudStackApi.class);String ip = null;ListPublicIPAddressesOptions listPublicIPAddressesOptions = new ListPublicIPAddressesOptions();listPublicIPAddressesOptions.zoneId(iaasInfo.getProperty(CloudControllerConstants.AVAILABILITY_ZONE));Set<PublicIPAddress> publicIPAddresses =cloudStackApi.getAddressApi().listPublicIPAddresses(listPublicIPAddressesOptions);String id = node.getProviderId();for (PublicIPAddress publicIPAddress : publicIPAddresses) {if (publicIPAddress.getVirtualMachineId().equals(id)) {ip = publicIPAddress.getIPAddress();break;}}if (ip == null || ip.isEmpty()) {String msg = ""No address associated for node with id: "" + node.getId();throw new CloudControllerException(msg);}List<String> associatedIPs = new ArrayList<String>();associatedIPs.add(ip);return associatedIPs;}}"	Yes
757	public class A {public void close() {if (pending.isEmpty()) {try {if (dir.fileExists(INDEXING_QUEUE_FILE)) {dir.deleteFile(INDEXING_QUEUE_FILE);}} catch (IOException e) {}}}}	Yes
758	"public class A {public static long getUserPlacedCommerceOrdersCount(HttpPrincipal httpPrincipal, long companyId, long groupId, String keywords)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommerceOrderServiceUtil.class,""getUserPlacedCommerceOrdersCount"",_getUserPlacedCommerceOrdersCountParameterTypes29);MethodHandler methodHandler = new MethodHandler(methodKey, companyId, groupId, keywords);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Long) returnObj).longValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
759	"public class A {@Overrideprotected ServiceTunnelResponse tunnel(final ServiceTunnelRequest serviceRequest) {if (LOG.isDebugEnabled()) {LOG.debug(""requestSequence {} {}.{}"",serviceRequest.getRequestSequence(),serviceRequest.getServiceInterfaceClassName(),serviceRequest.getOperation());}final long requestSequence = serviceRequest.getRequestSequence();final RemoteServiceInvocationCallable remoteInvocationCallable =createRemoteServiceInvocationCallable(serviceRequest);final IFuture<ServiceTunnelResponse> future =Jobs.schedule(remoteInvocationCallable,Jobs.newInput().withRunContext(RunContext.CURRENT.get().copy()).withName(createServiceRequestName(requestSequence)).withExceptionHandling(null, false)).whenDone(event -> {if (event.isCancelled()) {remoteInvocationCallable.cancel();}},RunContext.CURRENT.get().copy().withRunMonitor(BEANS.get(RunMonitor.class)));try {return future.awaitDoneAndGet();} catch (ThreadInterruptedError e) {future.cancel(true);return new ServiceTunnelResponse(new ThreadInterruptedError(""UserInterrupted""));} catch (FutureCancelledError e) {return new ServiceTunnelResponse(new FutureCancelledError(""UserInterrupted""));}}}"	No
760	"public class A {public synchronized EditorKit createAndSetupNewEditorKit(EditorKitFactory editorKitFactory, URI uri) throws Exception {logger.debug(""[ProtegeManager] Creating and setting up new EditorKit.  Factory: {}, URI: {}"",editorKitFactory,uri);if (editorKitFactory != null) {boolean success = false;EditorKit editorKit = editorKitFactory.createEditorKit();try {if (editorKit.handleLoadFrom(uri)) {getEditorKitManager().addEditorKit(editorKit);success = true;if (getEditorKitManager().getEditorKitCount() == 1) {firstEditorKit = new WeakReference<>(editorKit);}closeFirstEditorKitIfNotModified();return editorKit;}} finally {if (!success) {editorKit.dispose();}}}return null;}}"	No
761	"public class A {@Override@Transactionalpublic void publishDerivedComponents(String componentSetId, List<Component> components) {if (StringUtils.isBlank(componentSetId)) {throw new RiceIllegalArgumentException(""componentSetId was a null or blank value"");}components = validateAndNormalizeComponents(componentSetId, components);LOG.info(""Requesting to publish ""+ components.size()+ "" derived components for componentSetId=""+ componentSetId);ComponentSetBo componentSet = getDataObjectService().find(ComponentSetBo.class, componentSetId);if (componentSet == null) {componentSet = new ComponentSetBo();componentSet.setComponentSetId(componentSetId);}String checksum = calculateChecksum(components);if (!checksum.equals(componentSet.getChecksum())) {componentSet.setChecksum(checksum);componentSet.setLastUpdateTimestamp(new Timestamp(System.currentTimeMillis()));if (getComponentSetDao().saveIgnoreLockingFailure(componentSet)) {updateDerivedComponents(componentSetId, components);}} else {LOG.info(""Checksums were the same, no derived component update needed for componentSetId=""+ componentSetId);}}}"	Yes
762	"public class A {@Overridepublic Void call(DeleteAssetsOfBranchJobInput input) throws Exception {logger.debug(""DeleteAssetsOfBranchJob"");assetService.deleteAssetsOfBranch(input.getAssetIds(), input.getBranchId());return null;}}"	No
763	"public class A {private BulkProcessor.Listener buildListener() {return new Listener() {@Overridepublic void beforeBulk(long executionId, BulkRequest request) {if (requestToRecord != null && inFlightRequests != null) {List<SinkRecord> sinkRecords = new ArrayList<>(request.requests().size());for (DocWriteRequest<?> req : request.requests()) {sinkRecords.add(requestToRecord.get(req));requestToRecord.remove(req);}inFlightRequests.put(executionId, sinkRecords);}}@Overridepublic void afterBulk(long executionId, BulkRequest request, BulkResponse response) {for (BulkItemResponse bulkItemResponse : response) {handleResponse(bulkItemResponse, executionId);}removeFromInFlightRequests(executionId);numRecords.addAndGet(-response.getItems().length);}@Overridepublic void afterBulk(long executionId, BulkRequest request, Throwable failure) {try {BulkResponse bulkResponse =callWithRetries(""retrying bulk request"", () -> client.bulk(request, RequestOptions.DEFAULT));afterBulk(executionId, request, bulkResponse);} catch (ConnectException e) {removeFromInFlightRequests(executionId);error.compareAndSet(null, new ConnectException(""Bulk request failed."", e.getCause()));numRecords.addAndGet(-request.requests().size());}}};}}"	Yes
764	"public class A {private CompletableFuture<Message> processReadRequest(LogServiceRequestProto proto) {ReadLogRequestProto msgProto = proto.getReadNextQuery();long startRecordId = msgProto.getStartRecordId();int num = msgProto.getNumRecords();Throwable t = verifyState(State.OPEN);List<byte[]> list = new ArrayList<byte[]>();LOG.info(""Start Index: {}"", startRecordId);if (t == null) {for (long index = startRecordId; index < startRecordId + num; index++) {try {LogEntryProto entry = log.get(index);if (entry == null || entry.hasConfigurationEntry()) {continue;}list.add(entry.getStateMachineLogEntry().getLogData().toByteArray());} catch (RaftLogIOException e) {t = e;list = null;break;}}}return CompletableFuture.completedFuture(Message.valueOf(LogServiceProtoUtil.toReadLogReplyProto(list, t).toByteString()));}}"	Yes
765	public class A {public static com.liferay.commerce.discount.model.CommerceDiscountAccountRelSoapaddCommerceDiscountAccountRel(long commerceDiscountId,long commerceAccountId,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.commerce.discount.model.CommerceDiscountAccountRel returnValue =CommerceDiscountAccountRelServiceUtil.addCommerceDiscountAccountRel(commerceDiscountId, commerceAccountId, serviceContext);return com.liferay.commerce.discount.model.CommerceDiscountAccountRelSoap.toSoapModel(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
766	"public class A {@BeforeClasspublic static void initialSetup() {TestBeeline.beelineUrl = System.getProperty(URL);TestBeeline.beelineUser = System.getProperty(USER);TestBeeline.beelinePasswd = System.getProperty(PASSWD);if (beelineUser != null && beelineUser != """" && beelinePasswd != null && beelinePasswd != """") {beelineBaseCommand.addArgument(""-u"").addArgument(beelineUrl).addArgument(""-n"").addArgument(beelineUser).addArgument(""-p"").addArgument(beelinePasswd);} else if (beelineUser != null && beelineUser != """") {beelineBaseCommand.addArgument(""-u"").addArgument(beelineUrl).addArgument(""-n"").addArgument(beelineUser);} else {beelineBaseCommand.addArgument(""-u"").addArgument(beelineUrl);}LOG.info(""URL is "" + beelineUrl);LOG.info(""User is "" + beelineUser);LOG.info(""Passwd is "" + beelinePasswd);LOG.info(""Passwd is null "" + (beelinePasswd == null));}}"	No
767	"public class A {@Overridepublic void closeCqs(final String regionName) throws CqException {Collection<? extends InternalCqQuery> cqs = this.getAllCqs(regionName);if (cqs != null) {String cqName = null;for (InternalCqQuery cq : cqs) {try {cqName = cq.getName();if (isServer()) {cq.close(false);} else {boolean keepAlive = this.cache.keepDurableSubscriptionsAlive();if (cq.isDurable() && keepAlive) {cq.close(false);} else {cq.close(true);}}} catch (QueryException | CqClosedException e) {if (logger.isDebugEnabled()) {logger.debug(""Failed to close the CQ, CqName : {} Error : {}"", cqName, e.getMessage());}}}}}}"	Yes
768	"public class A {public void send(Collection<String> paths, boolean recursive, boolean preserve, int bufferSize)throws IOException {ScpAckInfo ackInfo = readAck(false);boolean debugEnabled = log.isDebugEnabled();if (debugEnabled) {log.debug(""send({}) ACK={}"", paths, ackInfo);}validateOperationReadyCode(""send"", ""Paths"", ackInfo);LinkOption[] options = IoUtils.getLinkOptions(true);for (String pattern : paths) {pattern = pattern.replace('/', File.separatorChar);int idx = pattern.indexOf('*');if (idx >= 0) {String basedir = """";String fixedPart = pattern.substring(0, idx);int lastSep = fixedPart.lastIndexOf(File.separatorChar);if (lastSep >= 0) {basedir = pattern.substring(0, lastSep);pattern = pattern.substring(lastSep + 1);}Session session = getSession();Path basePath = resolveLocalPath(basedir);Iterable<Path> included = opener.getMatchingFilesToSend(session, basePath, pattern);for (Path file : included) {if (opener.sendAsRegularFile(session, file, options)) {sendFile(file, preserve, bufferSize);} else if (opener.sendAsDirectory(session, file, options)) {if (!recursive) {if (debugEnabled) {log.debug(""send({}) {}: not a regular file"", this, file);}String path = basePath.relativize(file).toString();sendWarning(path.replace(File.separatorChar, '/') + "" not a regular file"");} else {sendDir(file, preserve, bufferSize);}} else {if (debugEnabled) {log.debug(""send({}) {}: unknown file type"", this, file);}String path = basePath.relativize(file).toString();sendWarning(path.replace(File.separatorChar, '/') + "" unknown file type"");}}} else {send(resolveLocalPath(pattern), recursive, preserve, bufferSize, options);}}}}"	No
769	public class A {@RequestMapping(method = RequestMethod.POST)@ApiOperation(value = ApiDocumentation.Attachment.CREATE_OPERATION)public ResponseEntity<ResourceId> createAttachment(@ApiParam(value = ApiDocumentation.Attachment.CREATE_REQUEST_BODY) @RequestBodycloud.fogbow.ras.api.parameters.Attachment attachment,@ApiParam(value = cloud.fogbow.common.constants.ApiDocumentation.Token.SYSTEM_USER_TOKEN)@RequestHeader(required = false, value = CommonKeys.SYSTEM_USER_TOKEN_HEADER_KEY)String systemUserToken)throws FogbowException {try {LOGGER.info(String.format(Messages.Log.RECEIVING_CREATE_REQUEST_S, ORDER_CONTROLLER_TYPE));String attachmentId =ApplicationFacade.getInstance().createAttachment(attachment.getOrder(), systemUserToken);return new ResponseEntity<>(new ResourceId(attachmentId), HttpStatus.CREATED);} catch (Exception e) {LOGGER.debug(String.format(Messages.Exception.GENERIC_EXCEPTION_S, e.getMessage()), e);throw e;}}}	No
770	"public class A {public static HtmlEmail getHtmlEmail(String smtpServer,String smtpPort,String smtpUser,String smtpPassword,String connectionSecurity)throws EmailException {logger.debug(""smtpServer=""+ smtpServer+ "", smtpSslPort=""+ smtpPort+ "", smtpUser=""+ smtpUser+ "", smtpPassword=""+ smtpPassword+ "",connectionSecurity=""+ connectionSecurity);HtmlEmail email = null;if (RECIPIENT_OVERRIDE_KEY != null || printInsteadOfSend) email = new HtmlEmailWrapper();else email = new HtmlEmail();email.setHostName(smtpServer);if (smtpUser != null && smtpPassword != null) email.setAuthentication(smtpUser, smtpPassword);Session session = email.getMailSession();if (connectionSecurity != null) {if (connectionSecurity.equals(CONNECTION_SECURITY_STARTTLS)) {session.getProperties().setProperty(Email.MAIL_TRANSPORT_TLS, ""true"");email.setTLS(true);} else if (connectionSecurity.equals(CONNECTION_SECURITY_SSL)) {email.setSSL(true);}}if (smtpPort != null) {email.setSslSmtpPort(smtpPort);}Properties properties = session.getProperties();properties.setProperty(""mail.smtp.connectiontimeout"", ""20000"");properties.setProperty(""mail.smtp.timeout"", ""20000"");return (email);}}"	No
771	public class A {private void purgeTask(TaskInProgress tip, boolean wasFailure) throws IOException {if (tip != null) {removeTaskFromJob(tip.getTask().getJobID(), tip);tip.jobHasFinished(wasFailure);}}}	Yes
772	"public class A {public static MetricConfigDTO getMetricConfigFromNameAndDataset(String metricName, String dataset) {MetricConfigDTO metricConfig = null;try {metricConfig =CACHE_REGISTRY.getMetricConfigCache().get(new MetricDataset(metricName, dataset));} catch (ExecutionException e) {LOG.error(""Exception while fetching metric by name {} and dataset {}"", metricName, dataset, e);}return metricConfig;}}"	No
773	"public class A {@Overridepublic HmilyTransaction findByTransId(final Long transId) {String path = node.getHmilyTransactionRealPath(transId);try {if (checkPath(path, true)) {return null;}byte[] data = zooKeeper.getData(path, false, null);if (data == null) {return null;}return hmilySerializer.deSerialize(data, HmilyTransaction.class);} catch (KeeperException | InterruptedException e) {LOGGER.error(""findByTransId occur a exception"", e);}return null;}}"	No
774	public class A {public void unsetMediator(final SilvercrestWifiSocketMediator mitsubishiMediator) {this.mediator = null;}}	Yes
775	"public class A {void handleAReleaseRPCollision() throws IOException {enterState(State.Sta12);LOG.info(""{} << A-RELEASE-RP"", name);encoder.writeAReleaseRP();closeSocketDelayed();}}"	No
776	public class A {public void onButtonUpJustPressed() {}}	Yes
777	"public class A {private void setupTasks() {int poolSize = getEndpoint().getConcurrentConsumers();if (executor == null) {executor =getEndpoint().getCamelContext().getExecutorServiceManager().newFixedThreadPool(this, getEndpoint().getEndpointUri(), poolSize);}int tasks = poolSize - taskCount.get();LOG.debug(""Creating {} consumer tasks with poll timeout {} ms."", tasks, pollTimeout);for (int i = 0; i < tasks; i++) {executor.execute(this);}}}"	No
778	"public class A {protected List<? extends BaseCountry> loadJson(String filename, Class<? extends BaseCountry> clazz) {List<BaseCountry> countries = new ArrayList<>();InputStream is = CountryServiceBase.class.getClassLoader().getResourceAsStream(filename);Gson gson = new Gson();JsonReader reader;try {reader = new JsonReader(new InputStreamReader(is, ""UTF-8""));reader.beginArray();while (reader.hasNext()) {BaseCountry country = gson.fromJson(reader, clazz);countries.add(country);}} catch (Exception e) {}return countries;}}"	Yes
779	"public class A {@Overridepublic Map<K, ICacheElement<K, V>> getCacheElements(Set<K> names) {if (names == null) {log.warn(""Bad input names cannot be null."");return Collections.emptyMap();}if (!ensureInit()) {return Collections.emptyMap();}@SuppressWarnings(""unchecked"")Set<K>[] dividedNames = new Set[this.getNumberOfPartitions()];for (K key : names) {int partition = getPartitionNumberForKey(key);if (dividedNames[partition] == null) {dividedNames[partition] = new HashSet<>();}dividedNames[partition].add(key);}Map<K, ICacheElement<K, V>> result = new HashMap<>();for (int i = 0; i < partitions.length; i++) {if (dividedNames[i] != null && !dividedNames[i].isEmpty()) {result.putAll(partitions[i].getCacheElements(dividedNames[i]));}}return result;}}"	No
780	"public class A {@Testpublic void oneStringKeyAndValue() throws Exception {if (LOGGER.isInfoEnabled()) {}ISerializerDeserializer[] fieldSerdes = {new UTF8StringSerializerDeserializer(), new UTF8StringSerializerDeserializer()};ITupleReference lowKey = TupleUtils.createTuple(fieldSerdes, ""cbf"");ITupleReference highKey = TupleUtils.createTuple(fieldSerdes, ""cc7"");for (BTreeLeafFrameType leafFrameType : leafFrameTypesToTest) {runTest(fieldSerdes, 1, leafFrameType, lowKey, highKey, null, null);}}}"	Yes
781	public class A {public static void stopServerInTransaction() {if (doByteman.get()) {new Thread() {@Overridepublic void run() {try {server.stop();} catch (Exception e) {e.printStackTrace();} finally {brokerStopLatch.countDown();}}}.start();}}}	Yes
782	public class A {public static com.liferay.bookmarks.model.BookmarksEntrySoap[] getGroupEntries(long groupId, int start, int end) throws RemoteException {try {java.util.List<com.liferay.bookmarks.model.BookmarksEntry> returnValue =BookmarksEntryServiceUtil.getGroupEntries(groupId, start, end);return com.liferay.bookmarks.model.BookmarksEntrySoap.toSoapModels(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
783	"public class A {@Testpublic void testGetInstanceWithClass() {final VitamUILogger logger = VitamUILoggerFactory.getInstance(VitamUILoggerTest.class);assertNotNull(""Logger should be created."", logger);assertEquals(""Logger name isn't correctly set."", VitamUILoggerTest.class.getName(), logger.getName());assertTrue(""Log messages should be empty."", buf.length() == 0);logger.info(""Message"");assertTrue(""Log message should be written."", buf.length() > 0);}}"	No
784	"public class A {public StingrayRestClient loadSTMRestClient(LoadBalancerEndpointConfiguration config)throws InsufficientRequestException {URI restEndpoint = config.getRestEndpoint();LOG.debug(""Building new STM client using endpoint: "" + restEndpoint);return new StingrayRestClient(restEndpoint, config.getUsername(), config.getPassword());}}"	No
785	"public class A {public void updateSampleOrdinals_v092() {subjDefs = new HashMap();this.unsetTypeExpected();this.setTypeExpected(1, TypeNames.INT);this.setTypeExpected(2, TypeNames.INT);this.setTypeExpected(3, TypeNames.INT);this.setTypeExpected(3, TypeNames.INT);ArrayList rows =select(""SELECT study_event_id, study_event_definition_id, study_subject_id, sample_ordinal""+ "" FROM study_event ORDER BY study_subject_id ASC, study_event_definition_id ASC,""+ "" sample_ordinal ASC"");for (int i = 0; i < rows.size(); i++) {HashMap row = (HashMap) rows.get(i);Integer studyEventId = (Integer) row.get(""study_event_id"");Integer studyEventDefinitionId = (Integer) row.get(""study_event_definition_id"");Integer studySubjectId = (Integer) row.get(""study_subject_id"");addEvent(studySubjectId, studyEventDefinitionId, studyEventId);}Iterator keysIt = subjDefs.keySet().iterator();while (keysIt.hasNext()) {String key = (String) keysIt.next();ArrayList events = (ArrayList) subjDefs.get(key);for (int i = 0; i < events.size(); i++) {Integer id = (Integer) events.get(i);if (id != null) {int ordinal = i + 1;}}}}}"	Yes
786	"public class A {@Overrideprotected Event handleStartSubDocument(Event event) {overallStopWatch.start(""Starts processing XLIFF"");StartSubDocument startSubDocument = event.getStartSubDocument();initAsset(startSubDocument);if (!isSourceXliff()) {initTmTextUnitIdsByMd5ForAsset();}return super.handleStartSubDocument(event);}}"	Yes
787	"public class A {private synchronized void refresh() {final boolean sellOffTriggered = defaults.isSelloffStarted() != lastCheckedSellOffStarted;final boolean exitStrategyTriggered =defaults.getMonthsBeforeExit() != lastCheckedMonthsBeforeExit;final boolean needsReinit = !wasCheckedOnce || sellOffTriggered || exitStrategyTriggered;if (!needsReinit) {LOGGER.trace(""Not reinitializing."");return;}LOGGER.debug(""Exit strategy triggered: {}."", exitStrategyTriggered);LOGGER.debug(""Sell-off triggered: {}."", sellOffTriggered);this.wasCheckedOnce = true;this.lastCheckedMonthsBeforeExit = defaults.getMonthsBeforeExit();this.lastCheckedSellOffStarted = defaults.isSelloffStarted();this.primaryMarketplaceFilters = refreshPrimaryMarketplaceFilters();this.secondaryMarketplaceFilters = refreshSecondaryMarketplaceFilters();this.sellFilters = refreshSellFilters();}}"	No
788	"public class A {@Testpublic void testMRIncrementalLoadWithPutSortReducer() throws Exception {doIncrementalLoadTest(false, false, true, ""testMRIncrementalLoadWithPutSortReducer"");}}"	Yes
789	public class A {@Overridepublic boolean processAttribute(String elementName,String attributeName,String value,String uri,String prefix,boolean isLastAttribute,Object contextObject) {if (logger.isDebugEnabled()) {}if (contextObject instanceof XMLNode) {XMLNode xmlNode = (XMLNode) contextObject;xmlNode.addAttr(attributeName, value, uri, prefix);} else {return false;}return true;}}	Yes
790	"public class A {@Overridepublic void moveCategory(MCRCategoryID id, MCRCategoryID newParentID, int index) {withoutFlush(MCREntityManagerProvider.getCurrentEntityManager(),true,e -> {MCRCategoryImpl subTree =getByNaturalID(MCREntityManagerProvider.getCurrentEntityManager(), id);MCRCategoryImpl oldParent = (MCRCategoryImpl) subTree.getParent();MCRCategoryImpl newParent =getByNaturalID(MCREntityManagerProvider.getCurrentEntityManager(), newParentID);MCRCategoryImpl commonAncestor =getCommonAncestor(MCREntityManagerProvider.getCurrentEntityManager(), oldParent, newParent);subTree.detachFromParent();LOGGER.debug(""Add subtree to new Parent at index: {}"", index);newParent.getChildren().add(index, subTree);subTree.parent = newParent;MCREntityManagerProvider.getCurrentEntityManager().flush();int left = commonAncestor.getLeft();commonAncestor.calculateLeftRightAndLevel(Integer.MAX_VALUE / 2, commonAncestor.getLevel());e.flush();commonAncestor.calculateLeftRightAndLevel(left, commonAncestor.getLevel());updateTimeStamp();updateLastModified(id.getRootID());});}}"	No
791	"public class A {@Test(dataProvider = ""testName"",dataProviderClass = AbstractServiceTestImpl.class,dependsOnMethods = {""createWithAuthRefs""})public void readAndCheckAuthRefs(String testName) throws Exception {testSetup(STATUS_OK, ServiceRequestType.READ);PottagClient pottagClient = new PottagClient();Response res = pottagClient.read(knownResourceId);try {assertStatusCode(res, testName);PoxPayloadIn input = new PoxPayloadIn(res.readEntity(String.class));PottagsCommon pottagCommon =(PottagsCommon) extractPart(input, pottagClient.getCommonPartName(), PottagsCommon.class);Assert.assertNotNull(pottagCommon);} finally {if (res != null) {res.close();}}res = pottagClient.getAuthorityRefs(knownResourceId);AuthorityRefList list = null;try {assertStatusCode(res, testName);list = res.readEntity(AuthorityRefList.class);Assert.assertNotNull(list);} finally {if (res != null) {res.close();}}int expectedAuthRefs = personIdsCreated.size();List<AuthorityRefList.AuthorityRefItem> items = list.getAuthorityRefItem();int numAuthRefsFound = items.size();if (logger.isDebugEnabled()) {}boolean iterateThroughList = true;if (iterateThroughList && logger.isDebugEnabled()) {int i = 0;for (AuthorityRefList.AuthorityRefItem item : items) {i++;}}Assert.assertEquals(numAuthRefsFound,expectedAuthRefs,""Did not find all expected authority references! ""+ ""Expected ""+ expectedAuthRefs+ "", found ""+ numAuthRefsFound);}}"	Yes
792	public class A {public static long createTask(TaskConstants.TaskType taskType, DetectionPipelineTaskInfo taskInfo) {String taskInfoJson = null;try {taskInfoJson = OBJECT_MAPPER.writeValueAsString(taskInfo);} catch (JsonProcessingException e) {}TaskDTO taskDTO = TaskUtils.buildTask(taskInfo.getConfigId(), taskInfoJson, taskType);long id = DAORegistry.getInstance().getTaskDAO().save(taskDTO);return id;}}	Yes
793	"public class A {public EditorPage translateTargetAtRowIndex(final int rowIndex, String text) {log.info(""Enter at {} the text {}"", rowIndex, text);setTargetContent(rowIndex, text, TARGET_ID_FMT, Plurals.SourceSingular);return new EditorPage(getDriver());}}"	No
794	public class A {private SearchResponse validateAndGetSearchResponse(MultiSearchResponse.Item item, String table) {if (item.isFailure()) {return null;}SearchResponse response = item.getResponse();if (null == response.getAggregations()) {return null;}return response;}}	Yes
795	public class A {@Overridepublic void onError(Throwable throwable) {WebSocketFrameService.removeObserver(streamId);}}	Yes
796	"public class A {private void respondWithError(ChannelHandlerContext ctx, Throwable error, InputChannelID sourceId) {LOG.debug(""Responding with error: {}."", error.getClass());ctx.writeAndFlush(new NettyMessage.ErrorResponse(error, sourceId));}}"	No
797	"public class A {private int internalCheckConsistency(String[] uuids, boolean recursive)throws RepositoryException {int count = 0;if (uuids == null) {try {Map<NodeId, NodeInfo> batch = pm.getAllNodeInfos(null, NODESATONCE);Map<NodeId, NodeInfo> allInfos = batch;NodeId lastId = null;while (!batch.isEmpty()) {for (Map.Entry<NodeId, NodeInfo> entry : batch.entrySet()) {lastId = entry.getKey();count++;if (count % 1000 == 0) {log.info(pm + "": loaded "" + count + "" infos..."");}}batch = pm.getAllNodeInfos(lastId, NODESATONCE);allInfos.putAll(batch);}if (lastId == null) {log.info(""No nodes exists, skipping"");} else if (pm.exists(lastId)) {for (Map.Entry<NodeId, NodeInfo> entry : allInfos.entrySet()) {checkBundleConsistency(entry.getKey(), entry.getValue(), allInfos);}} else {log.info(""Failed to read all nodes, starting over"");internalCheckConsistency(uuids, recursive);}} catch (ItemStateException e) {throw new RepositoryException(""Error loading nodes"", e);} finally {NodeInfo.clearPool();}} else {List<NodeId> idList = new ArrayList<NodeId>(uuids.length);for (final String uuid : uuids) {try {idList.add(new NodeId(uuid));} catch (IllegalArgumentException e) {error(uuid, ""Invalid id for consistency check, skipping: '"" + uuid + ""': "" + e);}}for (int i = 0; i < idList.size(); i++) {NodeId id = idList.get(i);try {final NodePropBundle bundle = pm.loadBundle(id);if (bundle == null) {if (!isVirtualNode(id)) {error(id.toString(), ""No bundle found for id '"" + id + ""'"");}} else {checkBundleConsistency(id, new NodeInfo(bundle), Collections.<NodeId, NodeInfo>emptyMap());if (recursive) {for (NodePropBundle.ChildNodeEntry entry : bundle.getChildNodeEntries()) {idList.add(entry.getId());}}count++;if (count % 1000 == 0 && listener == null) {log.info(pm + "": checked "" + count + ""/"" + idList.size() + "" bundles..."");}}} catch (ItemStateException ignored) {}}}return count;}}"	Yes
798	public class A {private ComponentInstance createComponent(boolean needLock,Component containerComponent,Component origComponent,ComponentInstance resourceInstance,User user) {boolean failed = false;try {lockIfNeed(needLock, containerComponent);return createComponentInstanceOnGraph(containerComponent, origComponent, resourceInstance, user);} catch (ComponentException e) {failed = true;throw e;} finally {if (needLock) {unlockComponent(failed, containerComponent);}}}}	Yes
799	"public class A {@Overridepublic @Nullable ThingUID getThingUID(RemoteDevice device) {if (device.getDetails().getManufacturerDetails().getManufacturer() != null) {if (device.getDetails().getManufacturerDetails().getManufacturer().toUpperCase().contains(""SONOS"")) {String modelName = getModelName(device);switch (modelName) {case ""ZP80"":modelName = ""CONNECT"";break;case ""ZP100"":modelName = ""CONNECTAMP"";break;case ""One SL"":modelName = ""OneSL"";break;case ""Arc SL"":modelName = ""ArcSL"";break;default:break;}ThingTypeUID thingUID = new ThingTypeUID(SonosBindingConstants.BINDING_ID, modelName);if (!SonosBindingConstants.SUPPORTED_KNOWN_THING_TYPES_UIDS.contains(thingUID)) {thingUID = new ThingTypeUID(SonosBindingConstants.BINDING_ID, modelName.toUpperCase());if (!SonosBindingConstants.SUPPORTED_KNOWN_THING_TYPES_UIDS.contains(thingUID)) {thingUID = SonosBindingConstants.ZONEPLAYER_THING_TYPE_UID;}}logger.debug(""Discovered a Sonos '{}' thing with UDN '{}'"",thingUID,device.getIdentity().getUdn().getIdentifierString());return new ThingUID(thingUID, device.getIdentity().getUdn().getIdentifierString());}}return null;}}"	No
800	public class A {@Nullablepublic ResolvableInetSocketAddress getRemoteAddress() {if (msgBuilder.hasRemote()) {final JournalMessages.RemoteAddress address = msgBuilder.getRemote();final InetAddress inetAddr;try {inetAddr =InetAddress.getByAddress(address.getResolved(), address.getAddress().toByteArray());} catch (UnknownHostException e) {return null;}final int port = address.hasPort() ? address.getPort() : 0;return ResolvableInetSocketAddress.wrap(new InetSocketAddress(inetAddr, port));}return null;}}	Yes
801	"public class A {@Overridepublic void execute(JobExecutionContext jobExecutionContext) throws JobExecutionException {try {execute((FileUploadServiceCleaner)jobExecutionContext.getJobDetail().getJobDataMap().get(JOB_PARAM_PARENT));} catch (Exception e) {throw new JobExecutionException(""An error occurred while cleaning file upload jobs"", e);}logger.info(""Finished file upload service cleaner"");}}"	Yes
802	"public class A {public String getName() {try {String name = this.getCertificateSubjectDN().getProperty(""CN"");int pos;pos = name.indexOf(':');if (pos > 0) {return name.substring(0, pos);}return name;} catch (Exception e) {logger.info(e.getMessage());return null;}}}"	No
803	"public class A {@Overrideprotected boolean selectTargetServer(RouteContext ctx, List<TargetServerInfo> infos) {TService ts = (TService) ctx.obj;if (ts == null) {return false;}try {Instance ins = nacosNamingService.selectOneHealthyInstance(ts.name, group);if (ins != null) {ctx.targetHost = ins.getIp();ctx.targetPort = ins.getPort();return true;}} catch (NacosException e) {log.debug(""selectOneHealthyInstance fail"", e);}return false;}}"	No
804	"public class A {public static void error(JFrame parent, String message, String title) {Log.note(""Creating error dialog with title '"" + title + ""'."");URL iconURL = Dialog.class.getResource(Config.RES_ICON_ERROR);if (iconURL == null) {Log.note(""Unable to get icon from "" + Config.RES_ICON_ERROR + ""; reverting to defaults."");}if (parent == null) {parent = new JFrame(Config.APP_NAME);parent.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);}try {if (iconURL != null) {ImageIcon icon = new ImageIcon(iconURL);JOptionPane.showMessageDialog(parent, message, title, JOptionPane.INFORMATION_MESSAGE, icon);} else {JOptionPane.showMessageDialog(parent, message, title, JOptionPane.ERROR_MESSAGE);}} catch (Exception ex) {}}}"	Yes
805	public class A {@Overridepublic void onContainersAllocated(List<Container> allocatedContainers) {allocatedCount.addAndGet(allocatedContainers.size());startContainerLaunchingThreads(allocatedContainers);}}	Yes
806	"public class A {public void setCstlProfileURL(String cstlProfileURL) {LOGGER.info(""CSTL Profile page changed to "" + cstlProfileURL);this.cstlProfileURL = cstlProfileURL;}}"	No
807	"public class A {public List findByExample(StgMapMsk instance) {try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.StgMapMsk"").add(Example.create(instance)).list();return results;} catch (RuntimeException re) {log.error(""find by example failed"", re);throw re;}}}"	Yes
808	"public class A {@Overridepublic void doMonitor(ServiceEmitter emitter) {final CacheStats oldStats = priorStats.get();final CacheStats newStats = cache.stats();final CacheStats deltaStats = newStats.minus(oldStats);final ServiceMetricEvent.Builder builder = ServiceMetricEvent.builder();emitter.emit(builder.build(""query/cache/caffeine/delta/requests"", deltaStats.requestCount()));emitter.emit(builder.build(""query/cache/caffeine/total/requests"", newStats.requestCount()));emitter.emit(builder.build(""query/cache/caffeine/delta/loadTime"", deltaStats.totalLoadTime()));emitter.emit(builder.build(""query/cache/caffeine/total/loadTime"", newStats.totalLoadTime()));emitter.emit(builder.build(""query/cache/caffeine/delta/evictionBytes"", deltaStats.evictionWeight()));emitter.emit(builder.build(""query/cache/caffeine/total/evictionBytes"", newStats.evictionWeight()));if (!priorStats.compareAndSet(oldStats, newStats)) {}}}"	Yes
809	"public class A {public org.talend.mdm.webservice.WSDataModelPKArray getDataModelPKs(org.talend.mdm.webservice.WSRegexDataModelPKs arg0) {LOG.info(""Executing operation getDataModelPKs"");System.out.println(arg0);try {org.talend.mdm.webservice.WSDataModelPKArray _return = null;return _return;} catch (java.lang.Exception ex) {ex.printStackTrace();throw new RuntimeException(ex);}}}"	No
810	public class A {@Overridepublic void loadComponents(final AsyncCallback<List<Component>> callback) {final List<Component> components = new ArrayList<Component>();final ModelNode operation = new ModelNode();final ModelNode address = Baseadress.get();operation.get(OP).set(READ_CHILDREN_NAMES_OPERATION);operation.get(CHILD_TYPE).set(MODULE);address.add(SUBSYSTEM, SWITCHYARD);operation.get(OP_ADDR).set(address);_dispatcher.execute(new DMRAction(operation),new AsyncCallback<DMRResponse>() {@Overridepublic void onFailure(Throwable caught) {callback.onFailure(caught);}@Overridepublic void onSuccess(DMRResponse result) {final ModelNode response = result.get().get(RESULT);if (response.isDefined()) {for (final ModelNode componentNode : response.asList()) {try {final Component component = _factory.component().as();component.setName(componentNode.asString());components.add(component);} catch (IllegalArgumentException e) {Log.error(PARSE_ERROR_MESSAGE, e);}}}callback.onSuccess(components);}});}}	No
811	"public class A {@RequestMapping(value = ""/{token:.+}"", method = RequestMethod.GET)public ResponseEntity<Space> getSpace(@PathVariable String token,@ApiIgnore @RequestHeader(value = Constants.HTTP_TENANT_HEADER, required = false)String tenant) {Tenant t = null;try {t = this.tenantRepository.getTenant(tenant);} catch (Exception e) {return new ResponseEntity<Space>(HttpStatus.NOT_FOUND);}try {final Space s =SpaceRepository.FILTER.findOne(this.spaceRepository.findBySecondaryKey(t.getTenantToken(), token));return new ResponseEntity<Space>(s, HttpStatus.OK);} catch (EntityNotFoundException enfe) {return new ResponseEntity<Space>(HttpStatus.NOT_FOUND);}}}"	Yes
812	"public class A {void run() {if (channel.isShutdown() || SERVICE_DISCOVER_FREQ_SECONDS < 1) {return;}if (seviceDiscovery == null) {seviceDiscovery =Executors.newSingleThreadScheduledExecutor(r -> {Thread t = Executors.defaultThreadFactory().newThread(r);t.setDaemon(true);return t;}).scheduleAtFixedRate(() -> {logger.debug(format(""Channel %s starting service rediscovery after %d seconds."",channelName, SERVICE_DISCOVER_FREQ_SECONDS));fullNetworkDiscovery(true);},SERVICE_DISCOVER_FREQ_SECONDS,SERVICE_DISCOVER_FREQ_SECONDS,TimeUnit.SECONDS);}}}"	No
813	public class A {@Testpublic void testError_Object_Object_Object_Object() throws Exception {ILoggingTool logger = getLoggingTool();logger.error(this, this, this, this);}}	No
814	"public class A {private static GwtCloudEntry pubSubToGwt(final ComponentDescriptionDTO component) {if (Arrays.stream(component.serviceInterfaces).noneMatch(intf -> CLOUD_PUBLISHER.equals(intf) || CLOUD_SUBSCRIBER.equals(intf))) {return null;}final String ccsfFactoryPidPropName =CloudConnectionConstants.CLOUD_CONNECTION_FACTORY_PID_PROP_NAME.value();final Object ccsfFactoryPid = component.properties.get(ccsfFactoryPidPropName);final Object factoryPid = component.properties.get(""service.pid"");final Object defaultFactoryPid = component.properties.get(KURA_UI_CSF_PID_DEFAULT);final Object defaultFactoryPidRegex = component.properties.get(KURA_UI_CSF_PID_REGEX);if (!(factoryPid instanceof String)) {logger.warn(""component {} defines a CloudPublisher or CloudSubscriber but does not specify the""+ "" service.pid property, ignoring it"",component.name);return null;}if (!(ccsfFactoryPid instanceof String)) {logger.warn(""component {} defines a CloudPublisher or CloudSubscriber but does not specify the {}""+ "" property, ignoring it"",component.name,ccsfFactoryPidPropName);return null;}final GwtCloudEntry entry = new GwtCloudEntry();entry.setPid((String) factoryPid);entry.setFactoryPid((String) ccsfFactoryPid);entry.setDefaultFactoryPid((String) defaultFactoryPid);entry.setDefaultFactoryPidRegex((String) defaultFactoryPidRegex);return entry;}}"	No
815	"public class A {private void runAndTrapExceptions() {try {decodedEntities = new ArrayList<>();if (""OSMHeader"".equals(blobType)) {processOsmHeader(readBlobContent());} else if (""OSMData"".equals(blobType)) {processOsmPrimitives(readBlobContent());} catch (IOException e) {throw new RuntimeException(""Unable to process PBF blob"", e);}}}"	Yes
816	"public class A {private void handleConnectionFailure(int curRetries, Exception ioe) throws Exception {closeConnection();final boolean retry;try {retry = connectionRetryPolicy.shouldRetry(ioe, curRetries);} catch (Exception e) {throw e instanceof IOException ? (IOException) e : new IOException(e);}if (!retry) {throw ioe;}LOG.info(""Retrying connect to server: ""+ serverAddress+ "". Already tried ""+ curRetries+ "" time(s); retry policy is ""+ connectionRetryPolicy);}}"	No
817	"public class A {@Overridepublic void completed(final IOSession session) {final AsyncClientExchangeHandler internalExchangeHandler =new AsyncClientExchangeHandler() {@Overridepublic void releaseResources() {exchangeHandler.releaseResources();}@Overridepublic void failed(final Exception cause) {exchangeHandler.failed(cause);}@Overridepublic void cancel() {failed(new RequestFailedException(""Request aborted""));}@Overridepublic void produceRequest(final RequestChannel channel, final HttpContext context1)throws HttpException, IOException {channel.sendRequest(request, entityDetails, context1);}@Overridepublic int available() {return exchangeHandler.available();}@Overridepublic void produce(final DataStreamChannel channel) throws IOException {exchangeHandler.produce(channel);}@Overridepublic void consumeInformation(final HttpResponse response, final HttpContext context1)throws HttpException, IOException {exchangeHandler.consumeInformation(response, context1);}@Overridepublic void consumeResponse(final HttpResponse response,final EntityDetails entityDetails,final HttpContext context1)throws HttpException, IOException {exchangeHandler.consumeResponse(response, entityDetails, context1);}@Overridepublic void updateCapacity(final CapacityChannel capacityChannel) throws IOException {exchangeHandler.updateCapacity(capacityChannel);}@Overridepublic void consume(final ByteBuffer src) throws IOException {exchangeHandler.consume(src);}@Overridepublic void streamEnd(final List<? extends Header> trailers)throws HttpException, IOException {exchangeHandler.streamEnd(trailers);}};if (LOG.isDebugEnabled()) {final String exchangeId = ExecSupport.getNextExchangeId();session.enqueue(new RequestExecutionCommand(new LoggingAsyncClientExchangeHandler(LOG, exchangeId, internalExchangeHandler),pushHandlerFactory,cancellable,clientContext),Command.Priority.NORMAL);} else {session.enqueue(new RequestExecutionCommand(internalExchangeHandler, pushHandlerFactory, cancellable, clientContext),Command.Priority.NORMAL);}}}"	Yes
818	"public class A {private void addSegAndJob(CubeInstance cube) {if (includeSegments) {addRequired(CubeInstance.concatResourcePath(cube.getName()));for (CubeSegment segment : cube.getSegments(SegmentStatusEnum.READY)) {addRequired(CubeSegment.getStatisticsResourcePath(cube.getName(), segment.getUuid()));if (includeSegmentDetails) {for (String dictPat : segment.getDictionaryPaths()) {addRequired(dictPat);}for (String snapshotPath : segment.getSnapshotPaths()) {addRequired(snapshotPath);}}if (includeJobs) {String lastJobId = segment.getLastBuildJobID();if (StringUtils.isEmpty(lastJobId)) {throw new RuntimeException(""No job exist for segment :"" + segment);} else {try {if (onlyJobOutput) {addRequired(ResourceStore.EXECUTE_OUTPUT_RESOURCE_ROOT + ""/"" + lastJobId);} else {ExecutablePO executablePO = executableDao.getJob(lastJobId);addRequired(ResourceStore.EXECUTE_RESOURCE_ROOT + ""/"" + lastJobId);addRequired(ResourceStore.EXECUTE_OUTPUT_RESOURCE_ROOT + ""/"" + lastJobId);for (ExecutablePO task : executablePO.getTasks()) {addRequired(ResourceStore.EXECUTE_RESOURCE_ROOT + ""/"" + task.getUuid());addRequired(ResourceStore.EXECUTE_OUTPUT_RESOURCE_ROOT + ""/"" + task.getUuid());}}} catch (PersistentException e) {throw new RuntimeException(""PersistentException"", e);}}}}} else {if (includeJobs) {logger.warn(""It's useless to set includeJobs to true when includeSegments is set to false"");}cube.setStatus(RealizationStatusEnum.DISABLED);cubesToTrimAndSave.add(cube);}}}"	No
819	"public class A {@Overridepublic void run() {try (AutoLock l = _lock.lock()) {_task = null;if (!isRunning()) return;int rate = _rate.getRate();if (rate > _acceptRateLimit) {schedule();return;}if (_limiting) {_limiting = false;LOG.warn(""AcceptLimit rate OK {}<={} on {}"", rate, _acceptRateLimit, _connectors);unlimit();}}}}"	No
820	public class A {@Overrideprotected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);int connections = rnd.nextInt(10) + 1;((TcpCommunicationSpi) cfg.getCommunicationSpi()).setConnectionsPerNode(connections);((TcpCommunicationSpi) cfg.getCommunicationSpi()).setUsePairedConnections(rnd.nextBoolean());((TcpCommunicationSpi) cfg.getCommunicationSpi()).setSharedMemoryPort(-1);cfg.setClientMode(client);return cfg;}}	Yes
821	"public class A {private void verifyEndpointsMetrics(final Endpoints endpoints) throws Exception {for (Endpoint endpoint : endpoints.getEndpoints()) {if (!endpoint.getLabel().equals(""/users"")) {continue;}for (String metricName : ALL_ENDPOINT_METRICS) {verifyMetrics(graphql, metricName, endpoint.getKey(), startTime);}for (String metricName : ALL_ENDPOINT_MULTIPLE_LINEAR_METRICS) {verifyPercentileMetrics(graphql, metricName, endpoint.getKey(), startTime);}}}}"	Yes
822	"public class A {public void runFromConfig(ServerConfig config) throws IOException, AdminServerException {FileTxnSnapLog txnLog = null;try {try {metricsProvider =MetricsProviderBootstrap.startMetricsProvider(config.getMetricsProviderClassName(), config.getMetricsProviderConfiguration());} catch (MetricsProviderLifeCycleException error) {throw new IOException(""Cannot boot MetricsProvider "" + config.getMetricsProviderClassName(), error);}ServerMetrics.metricsProviderInitialized(metricsProvider);ProviderRegistry.initialize();txnLog = new FileTxnSnapLog(config.dataLogDir, config.dataDir);JvmPauseMonitor jvmPauseMonitor = null;if (config.jvmPauseMonitorToRun) {jvmPauseMonitor = new JvmPauseMonitor(config);}final ZooKeeperServer zkServer =new ZooKeeperServer(jvmPauseMonitor,txnLog,config.tickTime,config.minSessionTimeout,config.maxSessionTimeout,config.listenBacklog,null,config.initialConfig);txnLog.setServerStats(zkServer.serverStats());final CountDownLatch shutdownLatch = new CountDownLatch(1);zkServer.registerServerShutdownHandler(new ZooKeeperServerShutdownHandler(shutdownLatch));adminServer = AdminServerFactory.createAdminServer();adminServer.setZooKeeperServer(zkServer);adminServer.start();boolean needStartZKServer = true;if (config.getClientPortAddress() != null) {cnxnFactory = ServerCnxnFactory.createFactory();cnxnFactory.configure(config.getClientPortAddress(),config.getMaxClientCnxns(),config.getClientPortListenBacklog(),false);cnxnFactory.startup(zkServer);needStartZKServer = false;}if (config.getSecureClientPortAddress() != null) {secureCnxnFactory = ServerCnxnFactory.createFactory();secureCnxnFactory.configure(config.getSecureClientPortAddress(),config.getMaxClientCnxns(),config.getClientPortListenBacklog(),true);secureCnxnFactory.startup(zkServer, needStartZKServer);}containerManager =new ContainerManager(zkServer.getZKDatabase(),zkServer.firstProcessor,Integer.getInteger(""znode.container.checkIntervalMs"", (int) TimeUnit.MINUTES.toMillis(1)),Integer.getInteger(""znode.container.maxPerMinute"", 10000),Long.getLong(""znode.container.maxNeverUsedIntervalMs"", 0));containerManager.start();ZKAuditProvider.addZKStartStopAuditLog();shutdownLatch.await();shutdown();if (cnxnFactory != null) {cnxnFactory.join();}if (secureCnxnFactory != null) {secureCnxnFactory.join();}if (zkServer.canShutdown()) {zkServer.shutdown(true);}} catch (InterruptedException e) {} finally {if (txnLog != null) {txnLog.close();}if (metricsProvider != null) {try {metricsProvider.stop();} catch (Throwable error) {LOG.warn(""Error while stopping metrics"", error);}}}}}"	Yes
823	"public class A {public ValidationResult afterFormFinishTable(Repository<Properties> repo) throws Exception {connection.BlobSchema = selectedContainerNames.getValue();connection.QueueSchema = selectedQueueNames.getValue();connection.TableSchema = selectedTableNames.getValue();String repoLoc =repo.storeProperties(connection, connection.name.getValue(), repositoryLocation, null);String storeId;if (selectedContainerNames.getValue() != null) {for (NamedThing nl : selectedContainerNames.getValue()) {String containerId = nl.getName();AzureStorageContainerProperties containerProps =new AzureStorageContainerProperties(containerId);containerProps.init();containerProps.connection = connection;containerProps.container.setValue(containerId);containerProps.schema.schema.setValue(getContainerSchema());repo.storeProperties(containerProps, formatSchemaName(containerId), repoLoc, ""schema.schema"");}}if (selectedQueueNames.getValue() != null) {for (NamedThing nl : selectedQueueNames.getValue()) {String queueId = nl.getName();AzureStorageQueueProperties queueProps = new AzureStorageQueueProperties(queueId);queueProps.init();queueProps.connection = connection;queueProps.queueName.setValue(queueId);queueProps.schema.schema.setValue(getQueueSchema());repo.storeProperties(queueProps, formatSchemaName(queueId), repoLoc, ""schema.schema"");}}if (selectedTableNames.getValue() != null) {for (NamedThing nl : selectedTableNames.getValue()) {String tableId = nl.getName();AzureStorageTableProperties tableProps = new AzureStorageTableProperties(tableId);tableProps.init();tableProps.connection = connection;tableProps.tableName.setValue(tableId);try {Schema schema = AzureStorageTableSourceOrSink.getSchema(null, connection, tableId);tableProps.schema.schema.setValue(schema);repo.storeProperties(tableProps, formatSchemaName(tableId), repoLoc, ""schema.schema"");} catch (IOException e) {LOGGER.error(e.getLocalizedMessage());}}}return ValidationResult.OK;}}"	No
824	public class A {@Overridepublic void run() {FileUtils.deleteQuietly(new File(_tableDataDir, segmentId));}}	Yes
825	"public class A {public boolean write() throws ServletException, IOException {final PageContext pageContext = getPageContext();if (pageContext == null) {return false;}final LayoutContext savedContext = this.context;final LayoutContext currentContext = LayoutContext.lookup(pageContext);log.debug(""Render component \"""", this.component, ""\"" in "", getCurrentPage());for (LayoutContext context = savedContext == null ? currentContext : savedContext.getPrevious();context != null;context = context.getPrevious()) {if (!context.getComponents().containsKey(this.component)) {continue;}this.context = context;final LayoutContext savedNext = context.getNext();final String savedComponent = context.getComponent();final boolean savedComponentRenderPhase = context.isComponentRenderPhase();final boolean savedSilent = context.getOut().isSilent();try {context.setNext(null);context.setComponentRenderPhase(true);context.setComponent(this.component);context.getOut().setSilent(true, pageContext);context.doInclude(pageContext, context.getRenderPage());if (context.getComponent() == null) {return true;}} finally {context.setNext(savedNext);context.setComponent(savedComponent);context.setComponentRenderPhase(savedComponentRenderPhase);context.getOut().setSilent(savedSilent, pageContext);this.context = savedContext;}}return false;}}"	Yes
826	"public class A {private Map<String, DimensionEncoding> getDimensionEncodings(FragmentMetaInfo fragmentMetaInfo, List<DimensionMetaInfo> allDimensions, Path dataPath)throws IOException {Map<String, Dictionary> dictionaryMap;try (FSDataInputStream dictInputStream = fs.open(dataPath)) {dictionaryMap = readAllDimensionsDictionary(fragmentMetaInfo, dictInputStream);}Map<String, DimensionEncoding> result = Maps.newHashMap();for (DimensionMetaInfo dimension : allDimensions) {TblColRef col = cubeDesc.getModel().findColumn(dimension.getName());RowKeyColDesc colDesc = cubeDesc.getRowkey().getColDesc(col);if (colDesc.isUsingDictionary()) {@SuppressWarnings({""unchecked""})Dictionary<String> dict = dictionaryMap.get(dimension.getName());if (dict == null) {logger.error(""No dictionary found for dict-encoding column "" + col);throw new IllegalStateException(""No dictionary found for dict-encoding column "" + col);} else {result.put(dimension.getName(), new DictionaryDimEnc(dict));}} else {result.put(dimension.getName(),DimensionEncodingFactory.create(colDesc.getEncodingName(),colDesc.getEncodingArgs(),colDesc.getEncodingVersion()));}}return result;}}"	No
827	"public class A {public void stopServer() throws Exception {webServer.stop();LOG.info(""Stopped RestAPI Server"");}}"	Yes
828	"public class A {public void end(Context context, WorkflowAction action) throws ActionExecutorException {context.setEndData(WorkflowAction.Status.OK, action.getExternalStatus());LOG.info(""Action ended with external status [{0}]"", action.getExternalStatus());}}"	No
829	"public class A {@Overridepublic Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {if (bean instanceof SecurityFilterChain && !ignore.contains(beanName)) {logger.info(""Processing security filter chain "" + beanName);SecurityFilterChain fc = (SecurityFilterChain) bean;Filter uaaFilter = new HttpsEnforcementFilter(beanName, redirectToHttps.contains(beanName));fc.getFilters().add(0, uaaFilter);if (additionalFilters != null) {for (Entry<FilterPosition, Filter> entry : additionalFilters.entrySet()) {int position = entry.getKey().getPosition(fc);if (position > fc.getFilters().size()) {fc.getFilters().add(entry.getValue());} else {fc.getFilters().add(position, entry.getValue());}}}}return bean;}}"	No
830	"public class A {private String getDeploymentName(File zipFolder) {File deployment = new File(zipFolder, DEPLOYMENT_DESCRIPTOR_FILE_NAME + "".xml"");String deploymentName = ""openl_rules_"" + System.currentTimeMillis();if (deployment.exists()) {return deploymentName;}deployment = new File(zipFolder, DEPLOYMENT_DESCRIPTOR_FILE_NAME + "".yaml"");if (deployment.exists()) {try {Yaml yaml = new Yaml();Map properties = yaml.loadAs(new FileInputStream(deployment), Map.class);return Optional.ofNullable(properties.get(""name"")).map(Object::toString).filter(StringUtils::isNotBlank).orElse(deploymentName);} catch (IOException e) {}return deploymentName;}return null;}}"	Yes
831	"public class A {private Tool refreshContainer(final long containerId, final long userId) {Tool tool = toolDAO.findById(containerId);String gitUrl = tool.getGitUrl();Map<String, String> gitMap = SourceCodeRepoFactory.parseGitUrl(gitUrl);if (gitMap == null) {throw new CustomWebApplicationException(""Could not parse Git URL:"" + gitUrl + "" Unable to refresh tool!"",HttpStatus.SC_INTERNAL_SERVER_ERROR);}List<Token> tokens = tokenDAO.findByUserId(userId);Token quayToken = Token.extractToken(tokens, TokenType.QUAY_IO);Token githubToken = Token.extractToken(tokens, TokenType.GITHUB_COM);Token gitlabToken = Token.extractToken(tokens, TokenType.GITLAB_COM);Token bitbucketToken = Token.extractToken(tokens, TokenType.BITBUCKET_ORG);checkTokens(quayToken, githubToken, bitbucketToken, gitlabToken);final SourceCodeRepoInterface sourceCodeRepo =SourceCodeRepoFactory.createSourceCodeRepo(tool.getGitUrl(),bitbucketToken == null ? null : bitbucketToken.getContent(),gitlabToken == null ? null : gitlabToken.getContent(),githubToken);ImageRegistryFactory factory = new ImageRegistryFactory(quayToken);final AbstractImageRegistry abstractImageRegistry =factory.createImageRegistry(tool.getRegistryProvider());if (abstractImageRegistry == null) {throw new CustomWebApplicationException(""unable to establish connection to registry, check that you have linked your accounts"",HttpStatus.SC_NOT_FOUND);}return abstractImageRegistry.refreshTool(containerId,userId,userDAO,toolDAO,tagDAO,fileDAO,fileFormatDAO,sourceCodeRepo,eventDAO,dashboardPrefix);}}"	Yes
832	"public class A {@Overridepublic String getObject() {try {ExpressionType value = baseModel.getObject();if (value == null) {return null;}List<JAXBElement<?>> evaluatros = value.getExpressionEvaluator();if (CollectionUtils.isEmpty(evaluatros)) {return null;}if (evaluatros.size() > 1) {}JAXBElement<?> evaluator = evaluatros.get(0);if (evaluator == null) {return null;}return ExpressionUtil.serialize(evaluator, pageBase.getPrismContext());} catch (SchemaException e) {LoggingUtils.logUnexpectedException(LOGGER, ""Cannot serialize filter"", e);}return null;}}"	Yes
833	"public class A {private static GateProfile loadProfile(TestContext testContext, WindGateProcessDescription description) throws IOException {assert testContext != null;assert description != null;String profileName = description.getProfileName();ProfileContext profileContext = createProfileContext(testContext);URL url =profileContext.getClassLoader().getResource(MessageFormat.format(TESTING_PROFILE_PATH, profileName));if (url == null) {url =findResourceOnHomePath(testContext, MessageFormat.format(PRODUCTION_PROFILE_PATH, profileName));}if (url == null) {throw new IOException(MessageFormat.format(Messages.getString(""WindGateTestHelper.errorMissingProfile""),description.getClass().getName(),description.getProfileName()));}try {Properties p = new Properties();try (InputStream input = url.openStream()) {p.load(input);}GateProfile profile = GateProfile.loadFrom(profileName, p, profileContext);return profile;} catch (Exception e) {throw new IOException(MessageFormat.format(Messages.getString(""WindGateTestHelper.errorFailedToLoadProfile""),description.getClass().getName(),description.getProfileName(),url),e);}}}"	Yes
834	public class A {@Testpublic void testWorkerRestartWithBlockInConnectorStop() throws Exception {createConnectorWithBlock(BlockingConnector.class, CONNECTOR_STOP);waitForConnectorStart(BLOCKING_CONNECTOR_NAME);createNormalConnector();waitForConnectorStart(NORMAL_CONNECTOR_NAME);connect.removeWorker();Block.waitForBlock();connect.addWorker();waitForConnectorStart(BLOCKING_CONNECTOR_NAME);verifyNormalConnector();}}	Yes
835	public class A {@Deprecatedpublic Session getSession() {EntityManager currentEntityManager = MCREntityManagerProvider.getCurrentEntityManager();Session session = currentEntityManager.unwrap(Session.class);if (!session.isOpen()) {}if (LOGGER.isDebugEnabled()) {}return session;}}	Yes
836	"public class A {public static boolean hasAdministratorAccess(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response)throws IOException {ConfigurationSource conf =(ConfigurationSource) servletContext.getAttribute(CONF_CONTEXT_ATTRIBUTE);if (!conf.getBoolean(CommonConfigurationKeys.HADOOP_SECURITY_AUTHORIZATION, false)) {return true;}String remoteUser = request.getRemoteUser();if (remoteUser == null) {response.sendError(HttpServletResponse.SC_FORBIDDEN,""Unauthenticated users are not "" + ""authorized to access this page."");return false;}if (servletContext.getAttribute(ADMINS_ACL) != null&& !userHasAdministratorAccess(servletContext, remoteUser)) {response.sendError(HttpServletResponse.SC_FORBIDDEN,""Unauthenticated users are not "" + ""authorized to access this page."");LOG.warn(""User {} is unauthorized to access the page {}."", remoteUser, request.getRequestURI());return false;}return true;}}"	No
837	public class A {@Overridepublic void saveRequestHistoryUpdate(SingularityRequestHistory requestHistory) {if (LOG.isTraceEnabled()) {}try {history.insertRequestHistory(requestHistory.getRequest().getId(),requestHistory.getRequest(),new Date(requestHistory.getCreatedAt()),requestHistory.getEventType().name(),getUserField(requestHistory.getUser()),getMessageField(requestHistory.getMessage()));} catch (Throwable t) {if (Throwables.getCausalChain(t).stream().anyMatch(exn -> exn instanceof SQLIntegrityConstraintViolationException)) {} else {throw t;}}}}	Yes
838	"public class A {@VisibleForTestingstatic @Nullable Manifest getManifest(Class<?> clazz) throws IOException {URL classURL = clazz.getResource(clazz.getSimpleName() + "".class"");if (classURL == null) {return null;}String externalForm = classURL.toExternalForm();if (!externalForm.startsWith(""jar:"")) {return null;}URL manifestURL =new URL(externalForm.substring(0, externalForm.lastIndexOf('!')) + ""!/META-INF/MANIFEST.MF"");Closer closer = Closer.create();try {InputStream manifestIn = closer.register(manifestURL.openStream());return new Manifest(manifestIn);} catch (Throwable t) {throw closer.rethrow(t);} finally {closer.close();}}}"	Yes
839	"public class A {private void onFutureCompleted(EvictionFuture fut, long topVer) {if (!busyLock.enterBusy()) return;try {GridBiTuple<Collection<EvictionInfo>, Collection<EvictionInfo>> t;try {t = fut.get();} catch (GridFutureCancelledException ignored) {assert false : ""Future has been cancelled, but manager is not stopping: "" + fut;return;} catch (GridException e) {U.error(log, ""Eviction future finished with error (all entries will be touched): "" + fut, e);if (plcEnabled) {for (EvictionInfo info : fut.entries()) touch0(info.entry());}return;}if (fut.topologyVersion() != topVer) {if (log.isDebugEnabled())log.debug(""Topology has changed, all entries will be touched: "" + fut);if (plcEnabled) {for (EvictionInfo info : fut.entries()) touch0(info.entry());}return;}GridCacheVersion obsoleteVer = null;Collection<EvictionInfo> evictedEntries = t.get1();for (EvictionInfo info : evictedEntries) {GridCacheEntryEx<K, V> entry = info.entry();try {for (GridBiTuple<GridNode, Long> r : fut.evictedReaders(entry.key())) {UUID readerId = r.get1().id();Long msgId = r.get2();((GridDhtCacheEntry<K, V>) entry).removeReader(readerId, msgId);}if (obsoleteVer == null) obsoleteVer = cctx.versions().next();evict0(cctx.cache(), entry, obsoleteVer, versionFilter(info), false);} catch (GridException e) {} catch (GridCacheEntryRemovedException ignored) {if (log.isDebugEnabled())}}Collection<EvictionInfo> rejectedEntries = t.get2();if (plcEnabled && !rejectedEntries.isEmpty()) {for (EvictionInfo info : rejectedEntries) touch0(info.entry());}} finally {busyLock.leaveBusy();signal();}}}"	Yes
840	public class A {public static com.liferay.commerce.discount.model.CommerceDiscountRelSoap getCommerceDiscountRel(long commerceDiscountRelId) throws RemoteException {try {com.liferay.commerce.discount.model.CommerceDiscountRel returnValue =CommerceDiscountRelServiceUtil.getCommerceDiscountRel(commerceDiscountRelId);return com.liferay.commerce.discount.model.CommerceDiscountRelSoap.toSoapModel(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
841	"public class A {public List<SmartHomeBaseDevice> getSmarthomeDeviceList()throws IOException, URISyntaxException, InterruptedException {try {String json = makeRequestAndReturnString(alexaServer + ""/api/phoenix"");logger.debug(""getSmartHomeDevices result: {}"", json);JsonNetworkDetails networkDetails = parseJson(json, JsonNetworkDetails.class);Object jsonObject = gson.fromJson(networkDetails.networkDetail, Object.class);List<SmartHomeBaseDevice> result = new ArrayList<>();searchSmartHomeDevicesRecursive(jsonObject, result);return result;} catch (Exception e) {logger.warn(""getSmartHomeDevices fails: {}"", e.getMessage());throw e;}}}"	No
842	"public class A {@Testpublic void testAggregateRawList() throws Exception {String xml1 = read(this.getClass().getResourceAsStream(""/jaxb/raw-list-1.xml""));String xml2 = read(this.getClass().getResourceAsStream(""/jaxb/raw-list-2.xml""));JaxbXMLResponseAggregator aggregate = new JaxbXMLResponseAggregator();List<String> data = new ArrayList<>();data.add(xml1);data.add(xml2);String result = aggregate.aggregate(data);Document xml = toXml(result);assertNotNull(xml);NodeList processes = xml.getElementsByTagName(""value"");assertNotNull(processes);assertEquals(5, processes.getLength());}}"	Yes
843	public class A {@Deprecatedpublic Domain generateDomain(String connectionName, String tableName, String dbType, String query, String datasourceName)throws Exception {initKettle();try {DatabaseMeta database = AgileHelper.getDatabaseMeta();IModelerSource source;if (tableName != null) {source = new TableModelerSource(database, tableName, null, datasourceName);} else {source = new InlineSqlModelerSource(connectionName, dbType, query, datasourceName);}return source.generateDomain();} catch (Exception e) {logger.error(e);throw new Exception(e.getLocalizedMessage());}}}	No
844	"public class A {@Overridepublic void initialize() {updateStatus(ThingStatus.OFFLINE);Bridge controller = getBridge();if (controller == null) {initializePanel(new ThingStatusInfo(ThingStatus.OFFLINE, ThingStatusDetail.BRIDGE_UNINITIALIZED, """"));} else if (ThingStatus.OFFLINE.equals(controller.getStatus())) {initializePanel(new ThingStatusInfo(ThingStatus.OFFLINE,ThingStatusDetail.BRIDGE_OFFLINE,""@text/error.nanoleaf.panel.controllerOffline""));} else {initializePanel(controller.getStatusInfo());}}}"	Yes
845	"public class A {public static Map<String, Map<String, URL>> processUrlRoot(boolean ignoreNotFound, String root, URL[] resources) throws IOException {List<URL> baseUrls =Collections.list(GenericConfigItemFactory.class.getClassLoader().getResources(root));if (baseUrls.size() == 0) {if (ignoreNotFound) {return new HashMap<String, Map<String, URL>>();} else {throw new IllegalStateException(""Failed to find ["" + root + ""]"");}}Map<String, Map<String, URL>> config = new TreeMap<String, Map<String, URL>>();outer:for (URL resource : resources) {String name = null;String path = null;for (URL baseUrl : baseUrls) {String base = baseUrl.toExternalForm();String fullUrl = resource.toExternalForm();if (!fullUrl.startsWith(base)) {continue;}String part = trimLeading(fullUrl.substring(base.length()));int idx = StringUtils.indexOfAny(part, ""/"", ""\\"");if (idx != -1) {name = part.substring(0, idx);path = part.substring(idx);break;}}if (name == null) {log.error(""Ignoring resource [{}] can not find it realtive to root [{}]"", resource, root);continue;}path = trimLeading(path);if (StringUtils.isBlank(path) || path.endsWith(""/"") || path.endsWith(""\\"")) {continue;}for (String part : path.split(""[/\\\\]"")) {if (AbstractCachingResourceRoot.shouldIgnore(null, part)) {continue outer;}}Map<String, URL> urlMapping = config.get(name);if (urlMapping == null) {urlMapping = new TreeMap<String, URL>();config.put(name, urlMapping);}urlMapping.put(path, resource);}return config;}}"	No
846	"public class A {@Test(timeout = 60 * 1000)public void testRequestReply() throws Exception {final MessageProducer remoteProducer = remoteSession.createProducer(null);MessageConsumer remoteConsumer = remoteSession.createConsumer(included);remoteConsumer.setMessageListener(new MessageListener() {@Overridepublic void onMessage(Message msg) {try {TextMessage textMsg = (TextMessage) msg;String payload = ""REPLY: "" + textMsg.getText();Destination replyTo;replyTo = msg.getJMSReplyTo();textMsg.clearBody();textMsg.setText(payload);remoteProducer.send(replyTo, textMsg);} catch (JMSException e) {e.printStackTrace();}}});TopicRequestor requestor = new TopicRequestor((TopicSession) localSession, included);Thread.sleep(5000);for (int i = 0; i < MESSAGE_COUNT; i++) {TextMessage msg = localSession.createTextMessage(""test msg: "" + i);TextMessage result = (TextMessage) requestor.request(msg);assertNotNull(result);LOG.info(result.getText());}}}"	No
847	public class A {public void dispose() {removeListSelectionListener(selListener);frame.removeFrameListener(listener);for (OWLFrameListPopupMenuAction<R> action : actions) {try {action.dispose();} catch (Exception e) {}}frame.dispose();editorKit.getOWLModelManager().removeListener(modelManagerListener);}}	Yes
848	"public class A {static Map<String, WalState> _getWals(ServerContext c) throws Exception {while (true) {try {Map<String, WalState> result = new HashMap<>();WalStateManager wals = new WalStateManager(c);for (Entry<Path, WalState> entry : wals.getAllState().entrySet()) {result.put(entry.getKey().toString(), entry.getValue());}return result;} catch (WalMarkerException wme) {if (wme.getCause() instanceof NoNodeException) {log.debug(""WALs changed while reading, retrying"", wme);} else {throw wme;}}}}}"	No
849	"public class A {public static Member addGroupMember(Directory directoryClient, String groupKey, Member member)throws IOException {LOG.debug(""addGroupMember() - add {} to {}"", member, groupKey);Directory.Members.Insert request = null;try {request = directoryClient.members().insert(groupKey, member);} catch (IOException e) {LOG.error(""An unknown error occurred: "" + e);}return (Member) execute(request);}}"	No
850	"public class A {@Overridepublic Void call() {try {EsriFullLayer fullLayer =ArcGISDescribeLayerEnvoy.query(myToolbox.getDataRegistry(), myLayer.getFullURL());if (fullLayer.getCapabilities().contains(""Query"")) {DefaultDataTypeInfo dataType = createFeatureType(myLayer);myLayerInfoProvider.updateDataType(dataType, fullLayer);myLayerGroup.addMember(dataType, this);}} catch (QueryException e) {}return null;}}"	Yes
851	"public class A {@Overrideprotected void init(final VaadinRequest request) {VaadinSession.getCurrent().setErrorHandler(new UiInstanceErrorHandler(this));setSizeFull();springNavigator.addView(CRLF_REPLACEMENT, mainView);setNavigator(springNavigator);final Page currentPage = Page.getCurrent();final String requestUrl = currentPage.getLocation().toString();final String language = request.getLocale().getLanguage();final UserConfiguration userConfiguration =configurationManager.getUserConfiguration(requestUrl, language);currentPage.setTitle(userConfiguration.getAgency().getAgencyName()+ "":""+ userConfiguration.getPortal().getPortalName()+ "":""+ userConfiguration.getLanguage().getLanguageName());if (getSession().getUIs().isEmpty()) {final WebBrowser webBrowser = currentPage.getWebBrowser();final CreateApplicationSessionRequest serviceRequest = new CreateApplicationSessionRequest();serviceRequest.setSessionId(RequestContextHolder.currentRequestAttributes().getSessionId());final String ipInformation = WebBrowserUtil.getIpInformation(webBrowser);serviceRequest.setIpInformation(ipInformation);serviceRequest.setTimeZone(webBrowser.getTimeZoneId());serviceRequest.setScreenSize(webBrowser.getScreenWidth() + ""x"" + webBrowser.getScreenHeight());serviceRequest.setUserAgentInformation(webBrowser.getBrowserApplication());serviceRequest.setLocale(webBrowser.getLocale().toString());serviceRequest.setOperatingSystem(WebBrowserUtil.getOperatingSystem(webBrowser));serviceRequest.setSessionType(ApplicationSessionType.ANONYMOUS);final ServiceResponse serviceResponse = applicationManager.service(serviceRequest);}}}"	Yes
852	"public class A {public void create() {try {LOG.debug(""Starting RedisClusterProvider ... configuration:"" + getRedisConfiguration());JedisPoolConfig poolConfig = createPoolConfig();String password = redisConfiguration.getPassword();pool =new JedisCluster(hosts(getRedisConfiguration().getServers()),redisConfiguration.getConnectionTimeout(),redisConfiguration.getSoTimeout(),redisConfiguration.getMaxRetryAttempts(),password,poolConfig);testConnection();LOG.debug(""RedisClusterProvider started."");} catch (Exception e) {LOG.error(""Failed to start RedisClusterProvider."");throw new IllegalStateException(""Error starting RedisClusterProvider"", e);}}}"	No
853	"public class A {@RequestMapping(value = ""/removeAgentId"")@ResponseBodypublic String removeAgentId(@RequestParam(value = ""applicationName"", required = true) String applicationName,@RequestParam(value = ""agentId"", required = true) String agentId) {try {adminService.removeAgentId(applicationName, agentId);return ""OK"";} catch (Exception e) {return e.getMessage();}}}"	Yes
854	public class A {public ComputationExceptionBuilder addFileIfExists(@Nullable Path path) {if (path == null || !Files.exists(path)) {return this;}try {byte[] bytes = Files.readAllBytes(path);bytesByFileName.put(path.getFileName().toString(), bytes);} catch (IOException e) {}return this;}}	Yes
855	"public class A {@Overridepublic void printStatusMessage() {synchronized (this) {super.printStatusMessage();if ((this.getSuccessCount() > 0) || (this.getErrorCount() > 0)) {final String minTinStr =new StringBuilder().append(this.minTin).append("" ("").append(LoggingTimestampConverter.convertLoggingTimestampToUTCString(this.timeunit.toNanos(this.minTin))).append(',').append(LoggingTimestampConverter.convertLoggingTimestampLocalTimeZoneString(this.minTin)).append(')').toString();final String maxToutStr =new StringBuilder().append(this.maxTout).append("" ("").append(LoggingTimestampConverter.convertLoggingTimestampToUTCString(this.timeunit.toNanos(this.maxTout))).append(',').append(LoggingTimestampConverter.convertLoggingTimestampLocalTimeZoneString(this.maxTout)).append(')').toString();this.logger.debug(""First timestamp: {}"", minTinStr);this.logger.debug(""Last timestamp: {}"", maxToutStr);}}}}"	No
856	"public class A {public static void main(String[] args) {try {SysPerfBaseliner sysPerfBaseliner = new SysPerfBaseliner();Collection<RunResult> jmhResults = sysPerfBaseliner.runBenchmarks();logger.info(""SysPerfData (selected details for EB):\n""+ new SysPerfData(jmhResults, SysPerfData.currentVersion).toString());} catch (Exception e) {throw new RuntimeException(e);}}}"	No
857	"public class A {public void handlePushCommand(String command, String payload) {switch (command) {case ""PUSH_VOLUME_CHANGE"":JsonCommandPayloadPushVolumeChange volumeChange =Objects.requireNonNull(gson.fromJson(payload, JsonCommandPayloadPushVolumeChange.class));Connection connection = this.findConnection();Integer volumeSetting = volumeChange.volumeSetting;Boolean muted = volumeChange.isMuted;if (muted != null && muted) {updateState(CHANNEL_VOLUME, new PercentType(0));}if (volumeSetting != null&& connection != null&& !connection.isSequenceNodeQueueRunning()) {lastKnownVolume = volumeSetting;updateState(CHANNEL_VOLUME, new PercentType(lastKnownVolume));}break;case ""PUSH_EQUALIZER_STATE_CHANGE"":updateEqualizerState();break;default:AccountHandler account = this.account;Device device = this.device;if (account != null && device != null) {this.disableUpdate = false;updateState(account, device, null, null, null, null, null, null);}}}}"	Yes
858	"public class A {public void bulkUpdatePoolsFromStack(Set<Consumer> consumers,List<Pool> pools,Collection<String> alreadyDeletedPools,boolean deleteIfNoStackedEnts) {log.debug(""Bulk updating {} pools for {} consumers."", pools.size(), consumers.size());List<Entitlement> stackingEntitlements = findStackingEntitlementsOf(pools);log.debug(""found {} stacking entitlements."", stackingEntitlements.size());List<Entitlement> filteredEntitlements = filterByConsumers(consumers, stackingEntitlements);Map<String, List<Entitlement>> entitlementsByStackingId =groupByStackingId(filteredEntitlements);updatePoolsWithStackingEntitlements(pools, entitlementsByStackingId);if (deleteIfNoStackedEnts) {List<Pool> poolsToDelete =filterPoolsWithoutStackingEntitlements(pools, entitlementsByStackingId);if (!poolsToDelete.isEmpty()) {this.poolManager.deletePools(poolsToDelete, alreadyDeletedPools);}}}}"	No
859	public class A {@Overridepublic void onError(Throwable t) {waitStatus.finished();if (disconnected.compareAndSet(false, true)) {}}}	Yes
860	"public class A {@SuppressWarnings(""deprecation"")@Overrideprotected Query getQuery(QueryManager qm, ExecutionContext context) throws RepositoryException {StringBuilder statement = new StringBuilder(""/jcr:root/"");statement.append(((String) context.getMap().get(ScalabilityBlobSearchSuite.CTX_ROOT_NODE_NAME_PROP))).append(""//element(*, "").append(context.getMap().get(ScalabilityBlobSearchSuite.CTX_FILE_NODE_TYPE_PROP)).append("")"");statement.append(""[(("");for (MimeType mt : MimeType.values()) {statement.append(""jcr:content/@"").append(NodeTypeConstants.JCR_MIMETYPE).append("" = '"").append(mt.getValue()).append(""' or "");}statement.delete(statement.lastIndexOf("" or ""), statement.length());statement.append(""))]"");LOG.debug(""{}"", statement);return qm.createQuery(statement.toString(), Query.XPATH);}}"	No
861	public class A {@NotNull@Overridepublic Set<Principal> getMembershipPrincipals(@NotNull Principal principal) {if (!GroupPrincipals.isGroup(principal)) {try {if (principal instanceof ItemBasedPrincipal) {Tree t = root.getTree(((ItemBasedPrincipal) principal).getPath());return getGroupPrincipals(t);} else {return getGroupPrincipals(userManager.getAuthorizable(principal));}} catch (RepositoryException e) {log.debug(e.getMessage());}}return ImmutableSet.of();}}	No
862	"public class A {@SuppressWarnings(""unchecked"")protected void setSensor(Object v) {if (Entities.isNoLongerManaged(entity)) {if (Tasks.isInterrupted()) return;log.warn(""""+ entity+ "" is not managed; feed ""+ this+ "" setting ""+ sensor+ "" to ""+ v+ "" at this time is not supported (""+ Tasks.current()+ "")"");}if (v == FeedConfig.UNCHANGED) {} else if (v == FeedConfig.REMOVE) {((EntityInternal) entity).sensors().remove(sensor);feed.onRemoveSensor(sensor);} else if (sensor == FeedConfig.NO_SENSOR) {} else {Object coercedV = TypeCoercions.coerce(v, sensor.getType());if (suppressDuplicates && Objects.equal(coercedV, entity.getAttribute(sensor))) {} else {entity.sensors().set(sensor, coercedV);feed.onPublishSensor(sensor, coercedV);}}}}"	No
863	"public class A {private String generateJMXConfig(JmxTransSpec spec, int numOfBrokers)throws JsonProcessingException {JmxTransServers servers = new JmxTransServers();servers.setServers(new ArrayList<>());ObjectMapper mapper = new ObjectMapper();String headlessService = KafkaCluster.headlessServiceName(cluster);for (int brokerNumber = 0; brokerNumber < numOfBrokers; brokerNumber++) {String brokerServiceName =KafkaCluster.externalServiceName(clusterName, brokerNumber) + ""."" + headlessService;servers.getServers().add(convertSpecToServers(spec, brokerServiceName));}try {return mapper.writeValueAsString(servers);} catch (JsonProcessingException e) {log.error(""Could not create JmxTrans config json because: "" + e.getMessage());throw e;}}}"	No
864	public class A {@Overridepublic List<HumanLabeledDocumentDTO> getHumanLabeledDocumentsByCrisisCodeUserName(String crisisCode, String userName, Integer count) {try {CollectionDTO crisis = remoteCrisisEJB.getCrisisByCode(crisisCode);if (crisis != null) {return remoteTaskManager.getHumanLabeledDocumentsByCrisisIDUserName(crisis.getCrisisID(), userName, count);} else {return null;}} catch (Exception e) {return null;}}}	Yes
865	"public class A {private void doUpdate(final TimerOptions options) {shutdownExecutor();try {if (""SIMPLE"".equalsIgnoreCase(options.getType())) {this.timerExecutor = Optional.of(new SimpleTimerExecutor(options, this.wireSupport));} else {this.timerExecutor = Optional.of(new CronTimerExecutor(options, this.wireSupport));}} catch (final Exception e) {logger.warn(""failed to start timer"", e);}}}"	No
866	public class A {protected Map<String, Set<Obs>> separateObs(Set<Obs> obsSet, boolean includeImagingStudy) {Map<String, Set<Obs>> obsSetsMap = new HashMap<>();obsSetsMap.put(FHIRConstants.DIAGNOSTIC_REPORT_NAME, new HashSet<Obs>());obsSetsMap.put(FHIRConstants.DIAGNOSTIC_REPORT_STATUS, new HashSet<Obs>());obsSetsMap.put(FHIRConstants.DIAGNOSTIC_REPORT_RESULT, new HashSet<Obs>());obsSetsMap.put(FHIRConstants.DIAGNOSTIC_REPORT_PRESENTED_FORM, new HashSet<Obs>());if (includeImagingStudy) {obsSetsMap.put(FHIRConstants.DIAGNOSTIC_REPORT_IMAGING_STUDY, new HashSet<Obs>());}for (Obs obs : obsSet) {try {obsSetsMap.get(getFieldName(obs.getConcept())).add(obs);} catch (NoSuchFieldException e) {log.error(e.getMessage());}}return obsSetsMap;}}	No
867	"public class A {public Map<String, List<String>> findAnnotationValueWithHostAnnotation(String annotationType, boolean searchMeta, Set<String> visited) {if (dimensions > 0) {return Collections.emptyMap();}if (!visited.add(this.getName())) {return Collections.emptyMap();}Map<String, List<String>> collectedResults = new LinkedHashMap<>();if (node.visibleAnnotations != null) {for (AnnotationNode an : node.visibleAnnotations) {if (an.desc.equals(annotationType)) {List<Object> values = an.values;if (values != null) {for (int i = 0; i < values.size(); i += 2) {if (values.get(i).equals(""value"")) {List<String> importedReferences =((List<org.objectweb.asm.Type>) values.get(i + 1)).stream().map(t -> t.getDescriptor()).collect(Collectors.toList());collectedResults.put(this.getName().replace(""/"", "".""), importedReferences);}}}}}if (searchMeta) {for (AnnotationNode an : node.visibleAnnotations) {Type annoType = null;try {annoType = typeSystem.Lresolve(an.desc);} catch (MissingTypeException mte) {continue;}collectedResults.putAll(annoType.findAnnotationValueWithHostAnnotation(annotationType, searchMeta, visited));}}}return collectedResults;}}"	Yes
868	"public class A {@Overridepublic MessageListener getMessageListener() throws JMSException {if (ActiveMQRALogger.LOGGER.isTraceEnabled()) {ActiveMQRALogger.LOGGER.trace(""getMessageListener()"");}throw new IllegalStateException(""Method not allowed"");}}"	No
869	public class A {@Overridepublic Void call() throws Exception {int restartGrid = GRID_CNT - RESTARTED_NODE_CNT;while (!stopRestartThread.get() && System.currentTimeMillis() < endTime) {stopGrid(restartGrid);Thread.sleep(500);startGrid(restartGrid);GridTestUtils.waitForCondition(new GridAbsPredicate() {@Overridepublic boolean apply() {return !stopRestartThread.get();}},RESTART_TIMEOUT);restartGrid++;if (restartGrid >= GRID_CNT) restartGrid = GRID_CNT - RESTARTED_NODE_CNT;awaitPartitionMapExchange();}return null;}}	Yes
870	public class A {@Overridepublic void onError(final RaftException e) {}}	Yes
871	"public class A {@Overridepublic void windowWillBeginSheet(final NSNotification notification) {if (log.isDebugEnabled()) {log.debug(String.format(""Attach sheet for window %s"", window));}}}"	No
872	"public class A {@Overridepublic FileVisitResult visitFile(Path filePath, BasicFileAttributes basicFileAttributes)throws IOException {Path fileNamePath = filePath.getFileName();String fileName = StringUtil.toLowerCase(fileNamePath.toString());if (!fileName.endsWith("".jar"")) {return FileVisitResult.CONTINUE;}if (_isValid(fileName)) {jarPaths.add(filePath.toAbsolutePath());return FileVisitResult.CONTINUE;}if (_log.isWarnEnabled()) {_log.warn(""Override static jar "" + fileName + "" has an invalid name and will be ignored"");}return FileVisitResult.CONTINUE;}}"	No
873	public class A {Future<Void> removeAndUndeploy(String srvcId) {return deployments.get(srvcId).compose(res -> {if (res == null) {return Future.failedFuture(new OkapiError(ErrorType.NOT_FOUND, srvcId));}return removeAndUndeploy(res);});}}	Yes
874	"public class A {public static String post(String requestURL, String params, Map<String, String> headers) {CloseableHttpResponse response = null;try {HttpPost httpPost = new HttpPost(requestURL);if (MapUtils.isNotEmpty(headers)) {for (Map.Entry<String, String> entry : headers.entrySet()) {httpPost.addHeader(entry.getKey(), entry.getValue());}}StringEntity entity = new StringEntity(params);httpPost.setEntity(entity);response = httpclient.execute(httpPost);int status = response.getStatusLine().getStatusCode();if (status >= 200 && status < 300) {HttpEntity httpEntity = response.getEntity();byte[] bytes = EntityUtils.toByteArray(httpEntity);StatusLine sl = response.getStatusLine();logger.debug(""Response from post call : "" + sl.getStatusCode() + "" - "" + sl.getReasonPhrase());return new String(bytes);} else {getErrorResponse(response, ""POST"");return """";}} catch (Exception ex) {logger.error(""Exception occurred while calling Post method"", ex);return """";} finally {if (null != response) {try {response.close();} catch (Exception ex) {logger.error(""Exception occurred while closing Post response object"", ex);}}}}}"	No
875	"public class A {public CassandraPartitionResult getPartitions(CassandraTableHandle cassandraTableHandle, TupleDomain<ColumnHandle> tupleDomain) {CassandraTable table = cassandraSession.getTable(cassandraTableHandle.getSchemaTableName());List<CassandraColumnHandle> partitionKeys = table.getPartitionKeyColumns();List<CassandraPartition> allPartitions = getCassandraPartitions(table, tupleDomain);List<CassandraPartition> partitions =allPartitions.stream().filter(partition -> tupleDomain.overlaps(partition.getTupleDomain())).collect(toList());TupleDomain<ColumnHandle> remainingTupleDomain = TupleDomain.none();if (!tupleDomain.isNone()) {if (partitions.size() == 1 && partitions.get(0).isUnpartitioned()) {remainingTupleDomain = tupleDomain;} else {List<ColumnHandle> partitionColumns = ImmutableList.copyOf(partitionKeys);remainingTupleDomain =tupleDomain.filter((column, domain) -> !partitionColumns.contains(column));}}if ((partitions.size() == 1) && partitions.get(0).isUnpartitioned()) {Map<ColumnHandle, Domain> domains = tupleDomain.getDomains().get();List<ColumnHandle> indexedColumns = new ArrayList<>();StringBuilder sb = new StringBuilder();for (Map.Entry<ColumnHandle, Domain> entry : domains.entrySet()) {CassandraColumnHandle column = (CassandraColumnHandle) entry.getKey();Domain domain = entry.getValue();if (column.isIndexed() && domain.isSingleValue()) {sb.append(CassandraCqlUtils.validColumnName(column.getName())).append("" = "").append(column.getCassandraType().toCqlLiteral(entry.getValue().getSingleValue()));indexedColumns.add(column);break;}}if (sb.length() > 0) {CassandraPartition partition = partitions.get(0);TupleDomain<ColumnHandle> filterIndexedColumn =TupleDomain.withColumnDomains(Maps.filterKeys(remainingTupleDomain.getDomains().get(), not(in(indexedColumns))));partitions = new ArrayList<>();partitions.add(new CassandraPartition(partition.getKey(), sb.toString(), filterIndexedColumn, true));return new CassandraPartitionResult(partitions, filterIndexedColumn);}}return new CassandraPartitionResult(partitions, remainingTupleDomain);}}"	Yes
876	public class A {protected void initJaversWithCurrentVersions() {if (!metadataManagementProperties.getServer().getInstanceIndex().equals(0)) {return;}List<CdoSnapshot> snapshots =javers.findSnapshots(QueryBuilder.byClass(domainObjectClass).limit(1).build());if (snapshots.isEmpty()) {repository.streamAllBy().forEach(currentVersion -> {javers.commit(currentVersion.getLastModifiedBy(), currentVersion);});}}}	Yes
877	"public class A {private void updateContent(VirtualFileImpl virtualFile,String mediaType,InputStream content,String lockToken,boolean updateMediaType)throws ForbiddenException, ServerException {if (!virtualFile.isFile()) {throw new ForbiddenException(String.format(""Unable update content. Item '%s' is not file. "", virtualFile.getPath()));}if (systemFilter.accept(workspaceId, virtualFile.getVirtualFilePath())) {if (!hasPermission(virtualFile, BasicPermissions.WRITE, true)) {throw new ForbiddenException(String.format(""Unable update content of file '%s'. Operation not permitted. "",virtualFile.getPath()));}}if (!validateLockTokenIfLocked(virtualFile, lockToken)) {throw new ForbiddenException(String.format(""Unable update content of file '%s'. File is locked. "", virtualFile.getPath()));}if (updateMediaType) {doUpdateContent(virtualFile, mediaType, content);} else {doUpdateContent(virtualFile, content);}if (searcherProvider != null) {try {searcherProvider.getSearcher(this, true).update(virtualFile);} catch (ServerException e) {LOG.error(e.getMessage(), e);}}eventService.publish(new UpdateContentEvent(workspaceId, virtualFile.getPath()));}}"	No
878	public class A {@Overridepublic Integer call() throws Exception {int counter = 0;int i = 0;while (i < limit) {incrementCounter();counter++;i++;}return counter;}}	Yes
879	public class A {public void onNodeMovedAsMaster(UDNode node, UDGroup group) {}}	Yes
880	"public class A {public void setState(int state) {LOG.debug().$(""state change [old="").$(this.state).$("", new="").$(state).$(']').$();this.state = state;jsonLexer.clear();}}"	No
881	public class A {private WriteResult tryWriteLockOnce(StaticBuffer key, StaticBuffer del, StoreTransaction txh) {Throwable t = null;final Timer writeTimer = times.getTimer().start();StaticBuffer newLockCol = serializer.toLockCol(writeTimer.getStartTime(), rid, times);Entry newLockEntry = StaticArrayEntry.of(newLockCol, zeroBuf);try {StoreTransaction newTx = overrideTimestamp(txh, writeTimer.getStartTime());store.mutate(key,Arrays.asList(newLockEntry),null == del ? KeyColumnValueStore.NO_DELETIONS : Arrays.asList(del),newTx);} catch (BackendException e) {t = e;}writeTimer.stop();return new WriteResult(writeTimer.elapsed(), writeTimer.getStartTime(), newLockCol, t);}}	Yes
882	public class A {@Overridepublic org.apache.blur.thrift.generated.Response reconnect(long instanceExecutionId)throws BlurException, TimeoutException, TException {try {Response response = _commandManager.reconnect(instanceExecutionId);return CommandUtil.fromObjectToThrift(response, _serDe);} catch (Exception e) {if (e instanceof org.apache.blur.command.TimeoutException) {throw new TimeoutException(((org.apache.blur.command.TimeoutException) e).getInstanceExecutionId());}if (e instanceof BlurException) {throw (BlurException) e;}throw new BException(e.getMessage(), e);}}}	Yes
883	"public class A {@Overridepublic synchronized Map<NodeId, NodeInfo> getAllNodeInfos(NodeId bigger, int maxCount)throws ItemStateException {ResultSet rs = null;try {String sql = bundleSelectAllBundlesSQL;NodeId lowId = null;Object[] keys = new Object[0];if (bigger != null) {sql = bundleSelectAllBundlesFromSQL;lowId = bigger;keys = getKey(bigger);}if (getStorageModel() == SM_LONGLONG_KEYS && maxCount > 0) {maxCount += 10;}rs = conHelper.exec(sql, keys, false, maxCount);Map<NodeId, NodeInfo> result = new LinkedHashMap<NodeId, NodeInfo>(maxCount);while ((maxCount == 0 || result.size() < maxCount) && rs.next()) {NodeId current;if (getStorageModel() == SM_BINARY_KEYS) {current = new NodeId(rs.getBytes(1));} else {long high = rs.getLong(1);long low = rs.getLong(2);current = new NodeId(high, low);}if (getStorageModel() == SM_LONGLONG_KEYS && lowId != null) {if (current.compareTo(lowId) <= 0) {continue;}}NodePropBundle bundle =readBundle(current, rs, getStorageModel() == SM_LONGLONG_KEYS ? 3 : 2);NodeInfo nodeInfo = new NodeInfo(bundle);result.put(nodeInfo.getId(), nodeInfo);}return result;} catch (SQLException e) {String msg = ""getAllNodeIds failed."";throw new ItemStateException(msg, e);} finally {DbUtility.close(rs);}}}"	Yes
884	"public class A {private boolean queuePrimaryEvent(GatewaySenderEventImpl gatewayEvent)throws IOException, CacheException {GatewaySenderStats statistics = this.sender.getStatistics();if (logger.isDebugEnabled()) {logger.debug(""{}: Queueing event ({}): {}"",sender.getId(),(statistics.getEventsQueued() + 1),gatewayEvent);}if (!sender.beforeEnqueue(gatewayEvent)) {if (logger.isDebugEnabled()) {logger.debug(""Event {} is not added to queue."", gatewayEvent);}statistics.incEventsFiltered();return false;}long start = statistics.startTime();boolean putDone = false;try {putDone = this.queue.put(gatewayEvent);} catch (InterruptedException e) {Thread.currentThread().interrupt();getSender().getCancelCriterion().checkCancelInProgress(e);}statistics.endPut(start);if (logger.isDebugEnabled()) {logger.debug(""{}: Queued event ({}): {}"",sender.getId(),(statistics.getEventsQueued()),gatewayEvent);}int queueSize = eventQueueSize();statistics.incQueueSize(1);if (!this.eventQueueSizeWarning && queueSize >= AbstractGatewaySender.QUEUE_SIZE_THRESHOLD) {logger.warn(""{}: The event queue has reached {} events. Processing will continue."",sender.getId(),Integer.valueOf(AbstractGatewaySender.QUEUE_SIZE_THRESHOLD));this.eventQueueSizeWarning = true;}return putDone;}}"	No
885	"public class A {@Test(groups = {""wso2.cep""},description = ""Testing logger connection"",expectedExceptions = AxisFault.class)public void testConnection() throws AxisFault {BasicOutputAdapterPropertyDto[] outputPropertyConfiguration =new BasicOutputAdapterPropertyDto[] {};try {eventPublisherAdminServiceClient.testConnection(""logger"", ""logger"", outputPropertyConfiguration, ""xml"");} catch (AxisFault e) {throw new AxisFault(e.getMessage(), e);} catch (RemoteException e) {Assert.fail(""Exception: "" + e.getMessage());}}}"	Yes
886	"public class A {@ApiOperation(value = ""Queries cases by variables and tasks"",response = CaseInstanceCustomVarsList.class)@POST@Path(RestURI.VARIABLES_CASES_URI)@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})@KieServerEndpoint(categories = {EndpointType.DEFAULT, EndpointType.HISTORY})public Response queryCaseByVariables(@Context HttpHeaders headers,String payload,@ApiParam(value = ""optional pagination - at which page to start, defaults to 0 (meaning first)"",required = false)@QueryParam(""page"")@DefaultValue(""0"")Integer page,@ApiParam(value = ""optional pagination - size of the result, defaults to 10"",required = false)@QueryParam(""pageSize"")@DefaultValue(""10"")Integer pageSize) {Header conversationIdHeader = buildConversationIdHeader("""", context, headers);Variant v = getVariant(headers);try {String type = getContentType(headers);CaseInstanceCustomVarsList processVariableSummaryList =caseManagementRuntimeDataServiceBase.queryCasesByVariables(payload, type, new QueryContext(page * pageSize, pageSize));return createCorrectVariant(processVariableSummaryList, headers, Response.Status.OK, conversationIdHeader);} catch (Exception e) {return internalServerError(errorMessage(e), v, conversationIdHeader);}}}"	Yes
887	"public class A {private void _validateNetworkHostAddresses(Dictionary<String, Object> properties)throws Exception {String[] networkHostAddresses =GetterUtil.getStringValues(properties.get(""networkHostAddresses""));for (String networkHostAddress : networkHostAddresses) {if (!Validator.isBlank(networkHostAddress)) {return;}}_log.error(""Unable to validate network host addresses"");throw new Exception(_getMessage(""please-set-at-least-one-network-host-address""));}}"	No
888	"public class A {protected Model getModelFromTdbDS() {logger.debug(""Retrieving TDB Repo default model from Dataset "" + tdbDS);Dataset ds = getTdbDS(false);getTdbDS(true).begin(ReadWrite.READ);Model m = tdbDS.getDefaultModel();tdbDS.end();if (ds == null) {closeTdbDS();}return m;}}"	No
889	"public class A {public void sendToCli(String srcFullName, String cmd) {Connection c = getConnection(stdCliUuid);if (c == null || c.get(""cli"") == null) {log.info(""starting interactive mode"");startInteractiveMode();sleep(1000);}c = getConnection(stdCliUuid);if (c != null && c.get(""cli"") != null) {((InProcessCli) c.get(""cli"")).process(srcFullName, cmd);} else {log.error(""could not start interactive mode"");}}}"	No
890	"public class A {private Hashtable<String, String> loadConfigurationSettings(InputStream stream) {try {configurationFromFile = new Yaml().loadAs(stream, LinkedHashMap.class);} catch (Exception e) {ConfigurationException exception =new ConfigurationException(""Configuration from "" + configurationInputSourceName + "" is not correctly formatted"");throw exception;} finally {IOUtils.closeQuietly(stream);}if (configurationFromFile == null) {configurationFromFile = new LinkedHashMap<>();}return mapToDDoc4JDocConfiguration();}}"	Yes
891	"public class A {public synchronized boolean reportStorageGroupStatus(StorageGroupInfo storageGroupInfo, TsFileProcessor tsFileProcessor)throws WriteProcessRejectException {long delta =storageGroupInfo.getMemCost()- reportedStorageGroupMemCostMap.getOrDefault(storageGroupInfo, 0L);totalStorageGroupMemCost += delta;if (logger.isDebugEnabled()) {logger.debug(""Report Storage Group Status to the system. ""+ ""After adding {}, current sg mem cost is {}."",delta,totalStorageGroupMemCost);}reportedStorageGroupMemCostMap.put(storageGroupInfo, storageGroupInfo.getMemCost());storageGroupInfo.setLastReportedSize(storageGroupInfo.getMemCost());if (totalStorageGroupMemCost < FLUSH_THERSHOLD) {return true;} else if (totalStorageGroupMemCost >= FLUSH_THERSHOLD&& totalStorageGroupMemCost < REJECT_THERSHOLD) {chooseMemTablesToMarkFlush(tsFileProcessor);return true;} else {rejected = true;if (chooseMemTablesToMarkFlush(tsFileProcessor)) {if (totalStorageGroupMemCost < memorySizeForWrite) {return true;} else {throw new WriteProcessRejectException(""Total Storage Group MemCost ""+ totalStorageGroupMemCost+ "" is over than memorySizeForWriting ""+ memorySizeForWrite);}} else {return false;}}}}"	Yes
892	public class A {private static void usage() {logger.info(usageString);System.exit(0);}}	No
893	"public class A {@Overridepublic boolean isExecutable() {logger.trace(""[{}] isExecutable()"", name);return file.canExecute();}}"	No
894	"public class A {@Overridepublic boolean isCommentable() {try {Calendar calendar = _calendarBooking.getCalendar();return calendar.isEnableComments();} catch (Exception exception) {_log.error(""Unable to check commentable"", exception);}return false;}}"	No
895	public class A {private Column getTextContentColumn(MutableTable table, String preferredColumnName) {MutableColumn column = null;for (Column col : table.getColumns()) {if (NATIVE_TYPE_TEXT.equals(col.getNativeType())) {column = (MutableColumn) col;break;}}if (column == null && preferredColumnName != null) {column =new MutableColumn(preferredColumnName + TEXT_CONTENT_TEMP_SUFFIX,ColumnType.STRING,table,table.getColumnCount(),true);column.setNativeType(NATIVE_TYPE_TEXT);table.addColumn(column);}return column;}}	Yes
896	"public class A {public Object run() throws IOException, URISyntaxException {Credentials creds = new Credentials();collectTokens(FileSystem.get(conf), twrapper, creds, ugi.getShortUserName());Collection<String> URIs = conf.getStringCollection(""mapreduce.job.hdfs-servers"");for (String uri : URIs) {collectTokens(FileSystem.get(new URI(uri), conf), twrapper, creds, ugi.getShortUserName());}return null;}}"	Yes
897	"public class A {public synchronized int sync() {List<JDBCJournalRecord> recordRef;synchronized (records) {if (records.isEmpty()) {return 0;}recordRef = new ArrayList<>(records);records.clear();}if (!started || failed.get()) {executeCallbacks(recordRef, false);return 0;}List<Long> deletedRecords = new ArrayList<>();List<Long> committedTransactions = new ArrayList<>();TransactionHolder holder;try (Connection connection = connectionProvider.getConnection();PreparedStatement deleteJournalRecords =connection.prepareStatement(this.deleteJournalRecords);PreparedStatement deleteJournalTxRecords =connection.prepareStatement(this.deleteJournalTxRecords);PreparedStatement insertJournalRecords =connection.prepareStatement(this.insertJournalRecords)) {connection.setAutoCommit(false);for (JDBCJournalRecord record : recordRef) {if (logger.isTraceEnabled()) {logger.trace(""sync::preparing JDBC statement for "" + record);}switch (record.getRecordType()) {case JDBCJournalRecord.DELETE_RECORD:deletedRecords.add(record.getId());record.writeDeleteRecord(deleteJournalRecords);break;case JDBCJournalRecord.ROLLBACK_RECORD:deleteJournalTxRecords.setLong(1, record.getTxId());deleteJournalTxRecords.addBatch();break;case JDBCJournalRecord.COMMIT_RECORD:holder = transactions.get(record.getTxId());for (RecordInfo info : holder.recordsToDelete) {deletedRecords.add(record.getId());deletedRecords.add(info.id);deleteJournalRecords.setLong(1, info.id);deleteJournalRecords.addBatch();}record.writeRecord(insertJournalRecords);committedTransactions.add(record.getTxId());break;default:record.writeRecord(insertJournalRecords);break;}}insertJournalRecords.executeBatch();deleteJournalRecords.executeBatch();deleteJournalTxRecords.executeBatch();connection.commit();if (logger.isTraceEnabled()) {logger.trace(""JDBC commit worked"");}if (cleanupTxRecords(deletedRecords, committedTransactions, deleteJournalTxRecords)) {deleteJournalTxRecords.executeBatch();connection.commit();logger.trace(""JDBC commit worked on cleanupTxRecords"");}executeCallbacks(recordRef, true);return recordRef.size();} catch (Exception e) {handleException(recordRef, e);return 0;}}}"	No
898	public class A {public String[] getAccessibleWorkspaceNames() throws RepositoryException {sanityCheck();List<String> names = new ArrayList<String>();WorkspaceManager manager = context.getRepositoryContext().getWorkspaceManager();for (String name : manager.getWorkspaceNames()) {try {if (context.getAccessManager().canAccess(name)) {names.add(name);}} catch (NoSuchWorkspaceException e) {}}return names.toArray(new String[names.size()]);}}	Yes
899	"public class A {public static String getCanonicalNameForWebAppTmpDir(WebAppContext context) {StringBuffer canonicalName = new StringBuffer();canonicalName.append(""jetty-"");Server server = context.getServer();if (server != null) {Connector[] connectors = context.getServer().getConnectors();if (connectors.length > 0) {String host = null;int port = 0;if (connectors != null && (connectors[0] instanceof NetworkConnector)) {NetworkConnector connector = (NetworkConnector) connectors[0];host = connector.getHost();port = connector.getLocalPort();if (port < 0) port = connector.getPort();}if (host == null) host = ""0.0.0.0"";canonicalName.append(host);canonicalName.append(""-"");canonicalName.append(port);canonicalName.append(""-"");}}try {Resource resource = context.getBaseResource();if (resource == null) {if (context.getWar() == null || context.getWar().length() == 0)throw new IllegalStateException(""No resourceBase or war set for context"");resource = context.newResource(context.getWar());}String resourceBaseName = getResourceBaseName(resource);canonicalName.append(resourceBaseName);canonicalName.append(""-"");} catch (Exception e) {canonicalName.append(""-"");}String contextPath = context.getContextPath();contextPath = contextPath.replace('/', '_');contextPath = contextPath.replace('\\', '_');canonicalName.append(contextPath);canonicalName.append(""-"");String[] vhosts = context.getVirtualHosts();if (vhosts == null || vhosts.length <= 0) canonicalName.append(""any"");else canonicalName.append(vhosts[0]);for (int i = 0; i < canonicalName.length(); i++) {char c = canonicalName.charAt(i);if (!Character.isJavaIdentifierPart(c) && ""-."".indexOf(c) < 0)canonicalName.setCharAt(i, '.');}canonicalName.append(""-"");return StringUtil.sanitizeFileSystemName(canonicalName.toString());}}"	Yes
900	public class A {private GridCoverage2D transformResult(final GridCoverage2D coverage,final Rectangle pixelDimension,final GeoWaveRasterReaderState state) {if (state.getRequestEnvelopeXformed() == state.getRequestedEnvelope()) {return coverage;}GridCoverage2D result = null;result =(GridCoverage2D)RasterUtils.getCoverageOperations().resample(coverage, state.getRequestedEnvelope().getCoordinateReferenceSystem());return coverageFactory.create(result.getName(), result.getRenderedImage(), result.getEnvelope());}}	Yes
901	"public class A {@Overridepublic void onTrigger(final ProcessContext context, final ProcessSession session)throws ProcessException {synchronized (this.consumerStreamsReady) {if (this.executor == null || this.executor.isShutdown()) {this.executor = Executors.newCachedThreadPool();}if (!this.consumerStreamsReady.get()) {Future<Void> f =this.executor.submit(new Callable<Void>() {@Overridepublic Void call() throws Exception {createConsumers(context);return null;}});try {f.get(this.deadlockTimeout, TimeUnit.MILLISECONDS);} catch (InterruptedException e) {shutdownConsumer();f.cancel(true);Thread.currentThread().interrupt();} catch (ExecutionException e) {throw new IllegalStateException(e);} catch (TimeoutException e) {shutdownConsumer();f.cancel(true);getLogger().warn(""Timed out after ""+ this.deadlockTimeout+ "" milliseconds while waiting to get connection"",e);}}}if (this.consumerStreamsReady.get()) {Future<Void> consumptionFuture =this.executor.submit(new Callable<Void>() {@Overridepublic Void call() throws Exception {ConsumerIterator<byte[], byte[]> iterator = getStreamIterator();if (iterator != null) {consumeFromKafka(context, session, iterator);}return null;}});try {consumptionFuture.get(this.deadlockTimeout, TimeUnit.MILLISECONDS);} catch (InterruptedException e) {shutdownConsumer();consumptionFuture.cancel(true);Thread.currentThread().interrupt();getLogger().warn(""Interrupted while consuming messages"", e);} catch (ExecutionException e) {throw new IllegalStateException(e);} catch (TimeoutException e) {shutdownConsumer();consumptionFuture.cancel(true);getLogger()}}}}"	Yes
902	public class A {@Overrideprotected void printResult(MetadataListResult res, Logger log) {for (BinaryMetadata m : res.metadata()) {}}}	Yes
903	public class A {@Overridepublic void warn(final Object message, final Throwable t) {if (getLogger().isWarnEnabled()) {}}}	Yes
904	"public class A {private void handleRequest(final ServerProtocol protocol, final Peer peer, final RequestType requestType)throws IOException, NotAuthorizedException, BadRequestException, RequestExpiredException {LOG.debug(""Request type from {} is {}"", protocol, requestType);switch (requestType) {case NEGOTIATE_FLOWFILE_CODEC:protocol.negotiateCodec(peer);break;case RECEIVE_FLOWFILES:protocol.getPort().transferFlowFiles(peer, protocol);break;case SEND_FLOWFILES:protocol.getPort().receiveFlowFiles(peer, protocol);break;case REQUEST_PEER_LIST:final Optional<ClusterNodeInformation> nodeInfo =(nodeInformant == null)? Optional.empty(): Optional.of(nodeInformant.getNodeInformation());String remoteInputHostVal = nifiProperties.getRemoteInputHost();if (remoteInputHostVal == null) {remoteInputHostVal = InetAddress.getLocalHost().getHostName();}final Boolean isSiteToSiteSecure = nifiProperties.isSiteToSiteSecure();final Integer apiPort =isSiteToSiteSecure ? nifiProperties.getSslPort() : nifiProperties.getPort();final NodeInformation self =new NodeInformation(remoteInputHostVal,nifiProperties.getRemoteInputPort(),nifiProperties.getRemoteInputHttpPort(),apiPort != null ? apiPort : 0,isSiteToSiteSecure,0);protocol.sendPeerList(peer, nodeInfo, self);break;case SHUTDOWN:protocol.shutdown(peer);break;}}}"	No
905	"public class A {@POST@Consumes(MediaType.APPLICATION_JSON)@Produces(MediaType.APPLICATION_JSON)public Response registeriOSVariant(iOSApplicationUploadForm form,@PathParam(""pushAppID"") String pushApplicationID,@Context UriInfo uriInfo) {PushApplication pushApp = getSearch().findByPushApplicationIDForDeveloper(pushApplicationID);if (pushApp == null) {return Response.status(Status.NOT_FOUND).entity(ErrorBuilder.forPushApplications().notFound().build()).build();}try {validateModelClass(form);} catch (ConstraintViolationException cve) {logger.trace(""Unable to validate given form upload"");ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());return builder.build();}iOSVariant iOSVariant = new iOSVariant();iOSVariant.setName(form.getName());iOSVariant.setDescription(form.getDescription());iOSVariant.setPassphrase(form.getPassphrase());iOSVariant.setCertificate(form.getCertificate());iOSVariant.setProduction(form.getProduction());iOSVariant.setVariantID(form.getVariantID());iOSVariant.setSecret(form.getSecret());try {validateModelClass(iOSVariant);} catch (ConstraintViolationException cve) {logger.trace(""Unable to create iOS variant entity"");ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());return builder.build();}logger.trace(""Register iOS variant with Push Application '{}'"", pushApplicationID);variantService.addVariant(iOSVariant);pushAppService.addVariant(pushApp, iOSVariant);return Response.created(uriInfo.getAbsolutePathBuilder().path(String.valueOf(iOSVariant.getVariantID())).build()).entity(iOSVariant).build();}}"	No
906	"public class A {protected static void doMultiUserGets(final int num, final int numOfUsers, final int[] expectedResults) {if (numOfUsers != expectedResults.length) {fail(""SecurityTestUtils.doMultiUserGets(): numOfUsers = ""+ numOfUsers+ "", but expected results ""+ expectedResults.length);}for (int i = 0; i < numOfUsers; i++) {logger.info(""GET: MultiUser# "" + i);doGetsP(num, i, expectedResults[i], false);}}}"	No
907	"public class A {public void rollback(JmsTransactionInfo transactionInfo,JmsTransactionInfo nextTransactionInfo,final AsyncResult request)throws ProviderException {if (!transactionInfo.getId().equals(current)) {if (!transactionInfo.isInDoubt() && current == null) {throw new ProviderIllegalStateException(""Rollback called with no active Transaction."");} else if (!transactionInfo.isInDoubt() && current != null) {throw new ProviderIllegalStateException(""Attempt to rollback a transaction other than the current one"");} else {request.onSuccess();return;}}preRollback();DischargeCompletion completion = new DischargeCompletion(request, nextTransactionInfo, false);coordinator.discharge(current, completion);current = null;if (completion.isPipelined()) {if (!completion.isComplete()) {begin(nextTransactionInfo.getId(), completion.getDeclareCompletion());} else {completion.getDeclareCompletion().onFailure(completion.getFailureCause());}}}}"	Yes
908	"public class A {private void updateRow(Context context, long sqlviewid, String sharing)throws SQLException, JsonProcessingException {String updatedSharing = SharingUtils.withAccess(sharing, Sharing::copyMetadataToData);try (PreparedStatement statement =context.getConnection().prepareStatement(""update sqlview set sharing = ?::json where sqlviewid = ?"")) {statement.setLong(2, sqlviewid);statement.setString(1, updatedSharing);log.info(""Executing sharing migration query: ["" + statement + ""]"");statement.executeUpdate();} catch (SQLException e) {log.error(e.getMessage());throw e;}}}"	No
909	"public class A {public void convertFormXMLToDb(Integer formId) {CaisiForm form = caisiFormDao.find(formId);SurveyDocument model = null;try {model = SurveyDocument.Factory.parse(new StringReader(form.getSurveyData()));} catch (Exception e) {logger.error(""Error"", e);return;}int page = 1;int section = 0;String id = """";LinkedHashMap<String, String> keyMap = new LinkedHashMap<String, String>();List<CaisiFormQuestion> ofqs = new ArrayList<CaisiFormQuestion>();for (Page p : model.getSurvey().getBody().getPageArray()) {section = 0;for (Page.QContainer container : p.getQContainerArray()) {if (container.isSetQuestion()) {Question q = container.getQuestion();id = page + ""_"" + section + ""_"" + q.getId();CaisiFormQuestion ofq = new CaisiFormQuestion();ofq.setDescription(q.getDescription());ofq.setFormId(formId);ofq.setPage(page);ofq.setSection(section);ofq.setQuestion(q.getId());ofq.setType(getTypeAsString(q));ofqs.add(ofq);keyMap.put(id, q.getDescription());} else {for (Question q : container.getSection().getQuestionArray()) {Section s = container.getSection();section = s.getId();id = page + ""_"" + section + ""_"" + q.getId();CaisiFormQuestion ofq = new CaisiFormQuestion();ofq.setDescription(q.getDescription());ofq.setFormId(formId);ofq.setPage(page);ofq.setSection(section);ofq.setQuestion(q.getId());ofq.setType(getTypeAsString(q));ofqs.add(ofq);keyMap.put(id, q.getDescription());}}}page++;}for (CaisiFormQuestion cfq : caisiFormQuestionDao.findByFormId(formId)) {caisiFormQuestionDao.remove(cfq.getId());}for (CaisiFormQuestion ofq : ofqs) {caisiFormQuestionDao.persist(ofq);}}}"	No
910	"public class A {private int waitForComplete(LinkedList<Future<?>> futures) {assert futures != null;int failureCount = 0;while (futures.isEmpty() == false) {Future<?> future = futures.removeFirst();try {future.get(100, TimeUnit.MILLISECONDS);} catch (TimeoutException e) {futures.addLast(future);} catch (InterruptedException e) {WGLOG.warn(e, ""W00002"", sessionId, profile.getName(), script.getName());futures.addLast(future);cancelAll(futures);} catch (ExecutionException e) {failureCount++;WGLOG.warn(e, ""W00003"", sessionId, profile.getName(), script.getName());cancelAll(futures);if (e.getCause() instanceof Error) {throw (Error) e.getCause();}} catch (CancellationException e) {failureCount++;WGLOG.warn(e, ""W00004"", sessionId, profile.getName(), script.getName());}}return failureCount;}}"	No
911	"public class A {@SuppressWarnings(""squid:S2696"")private void initialize(JobContext context) {Configuration conf = context.getConfiguration();try {if (zoomLevel == -1) {zoomLevel = Integer.parseInt(conf.get(MrGeoAccumuloConstants.MRGEO_ACC_KEY_ZOOMLEVEL));}table = conf.get(MrGeoAccumuloConstants.MRGEO_ACC_KEY_OUTPUT_TABLE);username = conf.get(MrGeoAccumuloConstants.MRGEO_ACC_KEY_USER);instanceName = conf.get(MrGeoAccumuloConstants.MRGEO_ACC_KEY_INSTANCE);zooKeepers = conf.get(MrGeoAccumuloConstants.MRGEO_ACC_KEY_ZOOKEEPERS);String pl = conf.get(MrGeoConstants.MRGEO_PROTECTION_LEVEL);if (pl != null) {colViz = new ColumnVisibility(pl);} else if (colViz == null) {vizStr = conf.get(MrGeoAccumuloConstants.MRGEO_ACC_KEY_VIZ);if (vizStr == null) {colViz = new ColumnVisibility();} else {colViz = new ColumnVisibility(vizStr);}}password = conf.get(MrGeoAccumuloConstants.MRGEO_ACC_KEY_PASSWORD);String isEnc = conf.get(MrGeoAccumuloConstants.MRGEO_ACC_KEY_PWENCODED64, ""false"");if (isEnc.equalsIgnoreCase(""true"")) {password = Base64Utils.decodeToString(password);}if (_innerFormat != null) {return;}_innerFormat = AccumuloOutputFormat.class.newInstance();AuthenticationToken token = new PasswordToken(password.getBytes());boolean connSet = ConfiguratorBase.isConnectorInfoSet(AccumuloOutputFormat.class, conf);if (!connSet) {OutputConfigurator.setConnectorInfo(AccumuloOutputFormat.class, conf, username, token);ClientConfiguration cc = ClientConfiguration.loadDefault().withInstance(instanceName);cc.setProperty(ClientProperty.INSTANCE_ZK_HOST, zooKeepers);OutputConfigurator.setZooKeeperInstance(AccumuloOutputFormat.class, conf, cc);OutputConfigurator.setDefaultTableName(AccumuloOutputFormat.class, conf, table);OutputConfigurator.setCreateTables(AccumuloOutputFormat.class, conf, true);outputInfoSet = true;}} catch (InstantiationException| IOException| ClassNotFoundException| AccumuloSecurityException| IllegalAccessException e) {}}}"	Yes
912	public class A {private void unmanageVMNics(VirtualMachineProfile profile, VMInstanceVO vm) {Boolean preserveNics = UnmanagedVMsManager.UnmanageVMPreserveNic.valueIn(vm.getDataCenterId());if (BooleanUtils.isTrue(preserveNics)) {profile.setParameter(VirtualMachineProfile.Param.PreserveNics, true);}_networkMgr.unmanageNics(profile);}}	Yes
913	"public class A {public static com.liferay.sync.model.SyncDLObject checkOutFileEntry(HttpPrincipal httpPrincipal,long fileEntryId,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(SyncDLObjectServiceUtil.class,""checkOutFileEntry"",_checkOutFileEntryParameterTypes4);MethodHandler methodHandler = new MethodHandler(methodKey, fileEntryId, serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.sync.model.SyncDLObject) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
914	"public class A {private Message getNextElement() {if (zipInputStream == null) {return null;}try {ZipEntry current = getNextEntry();if (current != null) {Message answer = new DefaultMessage(exchange.getContext());answer.getHeaders().putAll(exchange.getIn().getHeaders());answer.setHeader(""zipFileName"", current.getName());answer.setHeader(Exchange.FILE_NAME, current.getName());answer.setBody(new ZipInputStreamWrapper(zipInputStream));return answer;} else {LOGGER.trace(""close zipInputStream"");return null;}} catch (IOException exception) {throw new RuntimeCamelException(exception);}}}"	Yes
915	"public class A {@Testpublic void testBboxSpatialFilter() {String bboxCorners = ""0,10,20,30"";OpenSearchQuery query = new OpenSearchQuery(0, 10, ""relevance"", ""desc"", 30000, FILTER_BUILDER);query.addBBoxSpatialFilter(bboxCorners);Filter filter = query.getFilter();VerificationVisitor verificationVisitor = new VerificationVisitor();filter.accept(verificationVisitor, null);HashMap<String, FilterStatus> map =(HashMap<String, FilterStatus>) verificationVisitor.getMap();printFilterStatusMap(map);List<Filter> filters = getFilters(map, IntersectsImpl.class.getName());assertEquals(1, filters.size());IntersectsImpl containsFilter = (IntersectsImpl) filters.get(0);Literal literalWrapper = (Literal) containsFilter.getExpression2();SurfaceImpl bbox = (SurfaceImpl) literalWrapper.evaluate(null);String[] expectedCoords = bboxCorners.split("","");double[] lowerCornerCoords = bbox.getEnvelope().getLowerCorner().getCoordinate();LOGGER.debug(""lowerCornerCoords:  [0] = {},   [1] = {}"", lowerCornerCoords[0], lowerCornerCoords[1]);assertEquals(Double.parseDouble(expectedCoords[0]), lowerCornerCoords[0], DOUBLE_DELTA);assertEquals(Double.parseDouble(expectedCoords[1]), lowerCornerCoords[1], DOUBLE_DELTA);double[] upperCornerCoords = bbox.getEnvelope().getUpperCorner().getCoordinate();LOGGER.debug(""upperCornerCoords:  [0] = {},   [1] = {}"", upperCornerCoords[0], upperCornerCoords[1]);assertEquals(Double.parseDouble(expectedCoords[2]), upperCornerCoords[0], DOUBLE_DELTA);assertEquals(Double.parseDouble(expectedCoords[3]), upperCornerCoords[1], DOUBLE_DELTA);}}"	No
916	"public class A {@Override@SuppressWarnings({""unchecked"", ""rawtypes""})public List<JPAObject> getJPAObjectHistory(String oid, long from, long to) throws EDBException {synchronized (entityManager) {CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();CriteriaQuery<JPAObject> query = criteriaBuilder.createQuery(JPAObject.class);Root f = query.from(JPAObject.class);query.select(f);Predicate predicate1 = criteriaBuilder.equal(f.get(""oid""), oid);Predicate predicate2 = criteriaBuilder.between(f.get(""timestamp""), from, to);query.where(criteriaBuilder.and(predicate1, predicate2));query.orderBy(criteriaBuilder.asc(f.get(""timestamp"")));TypedQuery<JPAObject> typedQuery = entityManager.createQuery(query);return typedQuery.getResultList();}}}"	Yes
917	"public class A {public IBaseResource loadResource(IRestfulClient theClient) {if (myResource != null) {return myResource;}IdDt resourceId = getReference();if (resourceId == null || isBlank(resourceId.getValue())) {throw new IllegalStateException(""Reference has no resource ID defined"");}if (isBlank(resourceId.getBaseUrl()) || isBlank(resourceId.getResourceType())) {throw new IllegalStateException(""Reference is not complete (must be in the form [baseUrl]/[resource type]/[resource ID])""+ "" - Reference is: ""+ resourceId.getValue());}String resourceUrl = resourceId.getValue();ourLog.debug(""Loading resource at URL: {}"", resourceUrl);RuntimeResourceDefinition definition =theClient.getFhirContext().getResourceDefinition(resourceId.getResourceType());Class<? extends IBaseResource> resourceType = definition.getImplementingClass();myResource = theClient.fetchResourceFromUrl(resourceType, resourceUrl);myResource.setId(resourceUrl);return myResource;}}"	No
918	public class A {@Overridepublic void thingUpdated(final Thing thing, ThingTrackerEvent thingTrackerEvent) {ThingUID thingUID = thing.getUID();if (thingUpdatedLock.contains(thingUID)) {replaceThing(getThing(thingUID), thing);} else {Lock lock1 = getLockForThing(thing.getUID());try {lock1.lock();Thing oldThing = getThing(thingUID);ThingHandler thingHandler = replaceThing(oldThing, thing);if (thingHandler != null) {if (ThingHandlerHelper.isHandlerInitialized(thing) || isInitializing(thing)) {if (oldThing != null) {oldThing.setHandler(null);}thing.setHandler(thingHandler);safeCaller.create(thingHandler, ThingHandler.class).build().thingUpdated(thing);} else {if (thingHandler.getThing() == thing) {if (oldThing != null) {oldThing.setHandler(null);}thing.setHandler(thingHandler);initializeHandler(thing);} else {ThingHandlerFactory thingHandlerFactory = getThingHandlerFactory(thing);if (thingHandlerFactory != null) {unregisterHandler(thingHandler.getThing(), thingHandlerFactory);} else {}registerAndInitializeHandler(thing, thingHandlerFactory);}}} else {registerAndInitializeHandler(thing, getThingHandlerFactory(thing));}} finally {lock1.unlock();}}}}	Yes
919	"public class A {public AnomalyDetectionInputContextBuilder setFunction(AnomalyFunctionDTO anomalyFunctionSpec,AnomalyDetectionInputContext anomalyDetectionInputContext)throws Exception {this.anomalyFunctionSpec = anomalyFunctionSpec;this.anomalyFunction = anomalyFunctionFactory.fromSpec(anomalyFunctionSpec);this.anomalyDetectionInputContext = anomalyDetectionInputContext;this.dataset = this.anomalyFunctionSpec.getCollection();DatasetConfigDTO datasetConfig = DAO_REGISTRY.getDatasetConfigDAO().findByDataset(dataset);if (datasetConfig == null) {LOG.error(""Dataset ["" + dataset + ""] is not found"");throw new IllegalArgumentException(""Dataset [""+ dataset+ ""] is not found with function : ""+ anomalyFunctionSpec.toString());}this.collectionDimensions = datasetConfig.getDimensions();return this;}}"	No
920	"public class A {@Overridepublic void run() {try {Zip.zipfiles(selectedFile, inputAdapters, progressMon, false);} catch (final IOException e) {if (!selectedFile.delete() && LOGGER.isTraceEnabled()) {}JOptionPane.showMessageDialog(parent,""Error encountered while saving export file"",""File Save Error"",JOptionPane.ERROR_MESSAGE);}progressMon.close();}}"	Yes
921	"public class A {protected void process() throws Exception {final R4ExamplesDriver driver = new R4ExamplesDriver();driver.setValidator(new ValidationProcessor());DriverMetrics dm = new DriverMetrics();driver.setMetrics(dm);if (tenantId != null) {logger.info(""Setting tenant-id = "" + tenantId);this.properties.setProperty(""fhirclient.tenant.id"", tenantId);}TestContext context = new TestContext();context.setUp(this.properties);ExampleRequestProcessor erp =new ExampleRequestProcessor(context, tenantId, dm, this.readIterations);driver.setProcessor(erp);if (pool != null) {if (maxInflight == 0) {maxInflight = threads * 2;}driver.setPool(pool, maxInflight);}long start = System.nanoTime();driver.processIndex(this.index);long elapsed = (System.nanoTime() - start) / DriverMetrics.NANOS_MS;if (elapsed == 0) {elapsed = 1;}renderReport(dm, elapsed);}}"	No
922	public class A {@Overridepublic void close() {if (this.debugCaptureManager != null) {this.debugCaptureManager.stop();}this.memoryMonitor.stop();this.statusPages.stop();ExecutionStateSampler.instance().stop();long timeoutMilliSec = 5 * 1000;try {this.memoryMonitorThread.join(timeoutMilliSec);} catch (InterruptedException ex) {}if (this.memoryMonitorThread.isAlive()) {}}}	Yes
923	public class A {protected void simulateStep(Game game, Step step) {if (Thread.interrupted()) {Thread.currentThread().interrupt();return;}if (!game.checkIfGameIsOver()) {game.getPhase().setStep(step);if (!step.skipStep(game, game.getActivePlayerId())) {step.beginStep(game, game.getActivePlayerId());game.checkStateAndTriggered();while (!game.getStack().isEmpty()) {game.getStack().resolve(game);game.applyEffects();}step.endStep(game, game.getActivePlayerId());}}}}	Yes
924	"public class A {@Overridepublic QuestionnairesStepsBo getQuestionnaireStep(Integer stepId,String stepType,String questionnaireShortTitle,String customStudyId,Integer questionnaireId) {logger.entry(""begin getQuestionnaireStep()"");QuestionnairesStepsBo questionnairesStepsBo = null;try {questionnairesStepsBo =studyQuestionnaireDAO.getQuestionnaireStep(stepId, stepType, questionnaireShortTitle, customStudyId, questionnaireId);if ((questionnairesStepsBo != null)&& stepType.equalsIgnoreCase(FdahpStudyDesignerConstants.FORM_STEP)&& (questionnairesStepsBo.getFormQuestionMap() != null)) {List<QuestionResponseTypeMasterInfoBo> questionResponseTypeMasterInfoList =studyQuestionnaireDAO.getQuestionReponseTypeList();if ((questionResponseTypeMasterInfoList != null)&& !questionResponseTypeMasterInfoList.isEmpty()) {for (QuestionResponseTypeMasterInfoBo questionResponseTypeMasterInfoBo :questionResponseTypeMasterInfoList) {for (Entry<Integer, QuestionnaireStepBean> entry :questionnairesStepsBo.getFormQuestionMap().entrySet()) {QuestionnaireStepBean questionnaireStepBean = entry.getValue();if ((questionnaireStepBean.getResponseType() != null)&& questionnaireStepBean.getResponseType().equals(questionResponseTypeMasterInfoBo.getId())) {if (FdahpStudyDesignerConstants.DATE.equalsIgnoreCase(questionResponseTypeMasterInfoBo.getResponseType())) {questionnaireStepBean.setResponseTypeText(questionResponseTypeMasterInfoBo.getResponseType());} else {questionnaireStepBean.setResponseTypeText(questionResponseTypeMasterInfoBo.getDataType());}}}}}}} catch (Exception e) {}logger.exit(""getQuestionnaireStep() - Ends"");return questionnairesStepsBo;}}"	Yes
925	"public class A {private NiFiProperties getDefaultProperties() {NiFiProperties defaultProperties = loadDefault();if (isKeyGenerationRequired(defaultProperties)) {if (defaultProperties.isClustered()) {logger.error(""Clustered Configuration Found: Shared Sensitive Properties Key [{}] required for""+ "" cluster nodes"",NiFiProperties.SENSITIVE_PROPS_KEY);throw new SensitivePropertyProtectionException(PROPERTIES_KEY_MESSAGE);}final File flowConfiguration = defaultProperties.getFlowConfigurationFile();if (flowConfiguration.exists()) {logger.error(""Flow Configuration [{}] Found: Migration Required for blank Sensitive Properties Key""+ "" [{}]"",flowConfiguration,NiFiProperties.SENSITIVE_PROPS_KEY);throw new SensitivePropertyProtectionException(PROPERTIES_KEY_MESSAGE);}setSensitivePropertiesKey();defaultProperties = loadDefault();}return defaultProperties;}}"	No
926	"public class A {public static com.liferay.portal.kernel.model.User updateIncompleteUser(HttpPrincipal httpPrincipal,long companyId,boolean autoPassword,String password1,String password2,boolean autoScreenName,String screenName,String emailAddress,java.util.Locale locale,String firstName,String middleName,String lastName,long prefixId,long suffixId,boolean male,int birthdayMonth,int birthdayDay,int birthdayYear,String jobTitle,boolean updateUserInformation,boolean sendEmail,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(UserServiceUtil.class, ""updateIncompleteUser"", _updateIncompleteUserParameterTypes59);MethodHandler methodHandler =new MethodHandler(methodKey,companyId,autoPassword,password1,password2,autoScreenName,screenName,emailAddress,locale,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,jobTitle,updateUserInformation,sendEmail,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.User) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
927	public class A {public void stop() {try {if (context != null) {context.stop();context.close();context = null;}} catch (Throwable e) {logger.error(e.getMessage(), e);}}}	No
928	"public class A {public void restartCluster() {final var brokers =getBrokers().stream().map(b -> b.getConfig().getCluster().getNodeId()).collect(Collectors.toList());brokers.forEach(this::stopBroker);brokers.forEach(this::getBroker);try {waitUntilBrokersStarted();waitForPartitionReplicationFactor();waitUntilBrokersInTopology();} catch (final Exception e) {LOG.error(""Failed to restart cluster"", e);Assert.fail(""Failed to restart cluster"");}}}"	No
929	public class A {@Overridepublic Response deleteCollaborator(String entityId, String entityType, String collaboratorId) {EntityAccessContext entityAccessContext =this.secureContextFactory.getWriteContext(entityId, entityType);EntityAccess entityAccess = entityAccessContext.getEntityAccess();EntityReference collaboratorReference = this.userOrGroupResolver.resolve(collaboratorId);if (collaboratorReference == null) {throw new WebApplicationException(Response.Status.NOT_FOUND);}if (!entityAccess.removeCollaborator(collaboratorReference)) {throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);}this.manager.fireRightsUpdateEvent(entityId);return Response.ok().build();}}	Yes
930	"public class A {private String getUnixPath(String path) {if (debug) {}String newStr = """";char[] strArr = path.toCharArray();for (int i = 0; i < strArr.length; i++) {if (strArr[i] == '\\') {newStr += ""/"";} else {newStr += strArr[i];}}if (debug) {log.debug(""escaped str is ["" + newStr + ""]"");}return newStr;}}"	Yes
931	"public class A {@Overridepublic AccessControlList updateEventAcl(String id, AccessControlList acl, AbstractSearchIndex index)throws IllegalArgumentException, IndexServiceException, SearchIndexException,NotFoundException, UnauthorizedException {Opt<Event> optEvent = getEvent(id, index);if (optEvent.isNone()) throw new NotFoundException(""Cannot find an event with id "" + id);Event event = optEvent.get();MediaPackage mediaPackage = getEventMediapackage(event);switch (getEventSource(event)) {case WORKFLOW:throw new IllegalArgumentException(""Unable to update the ACL of this event as it is currently processing."");case ARCHIVE:try {mediaPackage = authorizationService.setAcl(mediaPackage, AclScope.Episode, acl).getA();} catch (MediaPackageException e) {throw new IndexServiceException(""Unable to update  acl"", e);}assetManager.takeSnapshot(mediaPackage);return acl;case SCHEDULE:try {mediaPackage = authorizationService.setAcl(mediaPackage, AclScope.Episode, acl).getA();schedulerService.updateEvent(id,Opt.none(),Opt.none(),Opt.none(),Opt.none(),Opt.some(mediaPackage),Opt.none(),Opt.none());} catch (SchedulerException | MediaPackageException e) {throw new IndexServiceException(""Unable to update the acl for the scheduled event"", e);}return acl;default:throw new IndexServiceException(String.format(""Unable to update the ACL as '%s' is an unknown event source."",getEventSource(event)));}}}"	Yes
932	public class A {public void debug(String s, Object... args) {debugLog.get().push(format(s, args));if (logLevel.get().equalOrLessThan(DEBUG)) {logger.debug(jdiMarker, getRecord(s, args));}}}	No
933	"public class A {@Overridepublic void updated(Dictionary<String, ?> properties) throws ConfigurationException {if (properties == null) {return;}waveformJobLoad =LoadUtil.getConfiguredLoadValue(properties, WAVEFORM_JOB_LOAD_CONFIG_KEY, DEFAULT_WAVEFORM_JOB_LOAD, serviceRegistry);Object val = properties.get(WAVEFORM_SCALE_CONFIG_KEY);if (val != null) {if (StringUtils.isNotEmpty((String) val)) {if (!""lin"".equals(val) && !""log"".equals(val)) {}waveformScale = (String) val;}}val = properties.get(WAVEFORM_SPLIT_CHANNELS_CONFIG_KEY);if (val != null) {waveformSplitChannels = Boolean.parseBoolean((String) val);}val = properties.get(WAVEFORM_COLOR_CONFIG_KEY);if (val != null && StringUtils.isNotEmpty((String) val)) {String colorValue = (String) val;if (StringUtils.isNotEmpty(colorValue) && StringUtils.isNotBlank(colorValue)) {waveformColor = StringUtils.split(colorValue, "", |:;"");}}val = properties.get(WAVEFORM_FILTER_PRE_CONFIG_KEY);if (val != null) {waveformFilterPre = StringUtils.trimToNull((String) val);} else {waveformFilterPre = null;}val = properties.get(WAVEFORM_FILTER_POST_CONFIG_KEY);if (val != null) {waveformFilterPost = StringUtils.trimToNull((String) val);} else {waveformFilterPost = null;}}}"	Yes
934	public class A {public void collectDependentInspections(@Nonnull InspectionToolWrapper toolWrapper,@Nonnull Set<InspectionToolWrapper> dependentEntries,Project project) {String mainToolId = toolWrapper.getMainToolId();if (mainToolId != null) {InspectionToolWrapper dependentEntryWrapper = getInspectionTool(mainToolId, project);if (dependentEntryWrapper == null) {return;}if (!dependentEntries.add(dependentEntryWrapper)) {collectDependentInspections(dependentEntryWrapper, dependentEntries, project);}}}}	Yes
935	"public class A {protected void awaitTopicConfigInKafka(String topicName, String key, String expectedValue)throws InterruptedException, ExecutionException, TimeoutException {waitFor(() -> {ConfigResource configResource = topicConfigResource(topicName);org.apache.kafka.clients.admin.Config config = getTopicConfig(configResource);String retention = config.get(""retention.ms"").value();LOGGER.debug(""retention of {}, waiting for 12341234"", retention);return expectedValue.equals(retention);},""Expected the topic "" + topicName + "" to have retention.ms="" + expectedValue + "" in Kafka"");}}"	No
936	"public class A {private void runDag(boolean installDag) throws Exception {logger.info(String.format(""Running the DAG for '%s' ..."", definition.getName()));if (currentDag != null) {logger.info(String.format(""Terminating the previous DAG before running the new one for '%s' ..."",definition.getName()));currentDag.termiante();}runtime.setPhase(ClusterRuntime.ClusterPhases.RUNNING_DAG);runtime.resolveFailure(Failure.hash(Failure.Type.DAG_FAILURE, null));List<GroupRuntime> groups = runtime.getGroups();for (GroupRuntime group : groups) {group.setPhase(GroupRuntime.GroupPhase.RUNNING_DAG);}try {if (installDag) {Map<String, JsonObject> chefJsons =ChefJsonGenerator.generateClusterChefJsonsForInstallation(definition, runtime);currentDag =DagBuilder.getInstallationDag(definition, runtime, stats, machinesMonitor, chefJsons);} else {Map<String, JsonObject> chefJsons =ChefJsonGenerator.generateClusterChefJsonsForPurge(definition, runtime);currentDag =DagBuilder.getPurgingDag(definition, runtime, stats, machinesMonitor, chefJsons);}currentDag.start();} catch (Exception ex) {runtime.issueFailure(new Failure(Failure.Type.DAG_FAILURE, ex.getMessage()));throw ex;}while (runtime.getPhase() == ClusterRuntime.ClusterPhases.RUNNING_DAG && !currentDag.isDone()) {Thread.sleep(Settings.CLUSTER_STATUS_CHECKING_INTERVAL);}if (!runtime.isFailed()) {runtime.setPhase(ClusterRuntime.ClusterPhases.DAG_DONE);for (GroupRuntime group : groups) {group.setPhase(GroupRuntime.GroupPhase.DAG_DONE);}logger.info(String.format(""\\o/\\o/\\o/\\o/\\o/'%s' DAG IS DONE \\o/\\o/\\o/\\o/\\o/"", definition.getName()));if (ClusterManager.EXIT_ON_COMPLETION) {System.exit(0);}}}}"	No
937	"public class A {private Runnable createRunnable(final ExecutionMonitor exec,final long noOfSets,final DataCell setIDCell,final CollectionDataValue setCell,final boolean appendSetCol,final Comparator<DataCell> comparator,final SubsetMatcher[] sortedMatcher,final int maxMismatches) {return new Runnable() {@Overridepublic void run() {try {exec.checkCanceled();final long transCounter = m_setCounter.incrementAndGet();exec.setMessage(setIDCell.toString() + "" ("" + transCounter + "" of "" + noOfSets + "")"");if (setCell.size() < 1) {exec.setProgress(transCounter / (double) noOfSets);m_skipCounter.incrementAndGet();return;}final DataCell[] sortedItems = collectionCell2SortedArray(setCell, comparator);int matcherStartIdx = 0;int itemIdx = 0;final Collection<SetMissmatches> matchingSets = new LinkedList<>();while (itemIdx < sortedItems.length && matcherStartIdx < sortedMatcher.length) {final DataCell subItem = sortedItems[itemIdx];for (int i = matcherStartIdx; i < sortedMatcher.length; i++) {final SubsetMatcher matcher = sortedMatcher[i];final int result = matcher.compare(subItem);if (result > 0 && maxMismatches == 0) {break;}matcher.match(sortedItems,itemIdx,matchingSets,new LinkedList<DataCell>(),new MismatchCounter(maxMismatches));matcherStartIdx++;}itemIdx++;}if (matchingSets.size() < 1) {exec.setProgress(transCounter / (double) noOfSets);m_skipCounter.incrementAndGet();return;}for (final SetMissmatches matchingSet : matchingSets) {exec.checkCanceled();final List<DataCell> cells = new LinkedList<>();cells.add(setIDCell);if (appendSetCol) {cells.add((DataCell) setCell);}cells.add(matchingSet.getSet());if (maxMismatches > 0) {cells.add(new IntCell(matchingSet.getMismatchCounter()));}final RowKey rowKey = RowKey.createRowKey(m_rowId.getAndIncrement());final DefaultRow row = new DefaultRow(rowKey, cells);synchronized (m_dc) {exec.checkCanceled();m_dc.addRowToTable(row);}}exec.setProgress(transCounter / (double) noOfSets);} catch (final CanceledExecutionException e) {} catch (final Exception e) {}}};}}"	Yes
938	public class A {public void checkTaskNode(Map<String, Object> result, TaskNode taskNode, String taskDefinitionJson) {if (taskNode == null) {putMsg(result, Status.DATA_IS_NOT_VALID, taskDefinitionJson);return;}if (!CheckUtils.checkTaskNodeParameters(taskNode)) {putMsg(result, Status.PROCESS_NODE_S_PARAMETER_INVALID, taskNode.getName());}}}	Yes
939	"public class A {@Overridepublic UpdateContainer doIt(Workspace workspace) throws CommandException {UpdateContainer c = new UpdateContainer();c.add(new AbstractUpdate() {@Overridepublic void generateJson(String prefix, PrintWriter pw, VWorkspace vWorkspace) {try {JSONObject outputObject =(new SavedModelURLs()).getSavedModels(vWorkspace.getWorkspace().getContextId());JSONArray models = outputObject.getJSONArray(""models"");JSONArray revModels = new JSONArray();for (int i = models.length() - 1; i >= 0; i--) revModels.put(models.get(i));outputObject.put(""models"", revModels);pw.println(outputObject.toString());} catch (Exception e) {e.printStackTrace();logger.error(""Error occured while generating JSON!"");}}});return c;}}"	No
940	"public class A {@Testpublic void testContextualFilterPhraseOnly() {String searchTerm = ""cat"";String selector = null;OpenSearchQuery query = new OpenSearchQuery(0, 10, ""relevance"", ""desc"", 30000, FILTER_BUILDER);query.addContextualFilter(searchTerm, selector);Filter filter = query.getFilter();VerificationVisitor verificationVisitor = new VerificationVisitor();filter.accept(verificationVisitor, null);HashMap<String, FilterStatus> map =(HashMap<String, FilterStatus>) verificationVisitor.getMap();printFilterStatusMap(map);List<Filter> filters = getFilters(map, LikeFilterImpl.class.getName());assertEquals(1, filters.size());LikeFilterImpl likeFilter = (LikeFilterImpl) filters.get(0);String extractedSearchTerm = likeFilter.getLiteral();LOGGER.debug(""extractedSearchTerm = [{}]"", extractedSearchTerm);assertEquals(searchTerm, extractedSearchTerm);}}"	No
941	"public class A {@Overridepublic void run() {try {String line;while ((line = stdoutReader.readLine()) != null) {stdoutContents.append(line);stdoutContents.append('\n');if (teeTarget.isPresent()) teeTarget.get().println(line);}} catch (IOException e) {LOGGER.warn(""Error reading server process output."", e);throw new UncheckedIOException(e);}}}"	No
942	"public class A {public SearchContext buildStructureSearchContext(long companyId,long[] groupIds,long userId,long classNameId,Long classPK,String name,String description,String storageType,Integer type,int status,int start,int end,OrderByComparator<DDMStructure> orderByComparator) {SearchContext searchContext = new SearchContext();searchContext.setAttribute(Field.CLASS_NAME_ID, classNameId);searchContext.setAttribute(Field.CLASS_PK, classPK);searchContext.setAttribute(Field.DESCRIPTION, description);searchContext.setAttribute(Field.NAME, name);searchContext.setAttribute(Field.STATUS, status);try {searchContext.setAttribute(""resourcePermissionName"",_ddmPermissionSupport.getStructureModelResourceName(classNameId));} catch (PortalException portalException) {if (_log.isDebugEnabled()) {}}searchContext.setAttribute(""storageType"", storageType);searchContext.setAttribute(""type"", type);searchContext.setCompanyId(companyId);searchContext.setEnd(end);searchContext.setGroupIds(groupIds);searchContext.setStart(start);if (userId > 0) {searchContext.setUserId(userId);}if (orderByComparator != null) {searchContext.setSorts(getSortsFromComparator(orderByComparator));}return searchContext;}}"	Yes
943	"public class A {public void createBB() {try {ByteArrayOutputStream baos = new ByteArrayOutputStream();BinaryOutputArchive boa = BinaryOutputArchive.getArchive(baos);boa.writeInt(-1, ""len"");if (requestHeader != null) {requestHeader.serialize(boa, ""header"");}if (request instanceof ConnectRequest) {request.serialize(boa, ""connect"");boa.writeBool(readOnly, ""readOnly"");} else if (request != null) {request.serialize(boa, ""request"");}baos.close();this.bb = ByteBuffer.wrap(baos.toByteArray());this.bb.putInt(this.bb.capacity() - 4);this.bb.rewind();} catch (IOException e) {LOG.warn(""Unexpected exception"", e);}}}"	No
944	"public class A {@Overridepublic Void call() throws Exception {String failure = """";try {worker.taskWorker.stop(platform);} catch (Exception exception) {failure = exception.getMessage();}stateChangeExecutor.submit(new CompleteWorker(worker, failure));return null;}}"	Yes
945	public class A {public User saveUser(User user) {if (log.isDebugEnabled()) {}getSession().saveOrUpdate(user);getSession().flush();return user;}}	Yes
946	public class A {public static com.liferay.journal.model.JournalArticleSoap[] getArticles(long groupId, long folderId, String locale) throws RemoteException {try {java.util.List<com.liferay.journal.model.JournalArticle> returnValue =JournalArticleServiceUtil.getArticles(groupId, folderId, LocaleUtil.fromLanguageId(locale));return com.liferay.journal.model.JournalArticleSoap.toSoapModels(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
947	"public class A {private RelationshipItem createItem(String typeWithUid) {if (StringUtils.isEmpty(typeWithUid)) {return new RelationshipItem();}RelationshipItem ri = new RelationshipItem();final String type = typeWithUid.split(""\\|"")[0];final String uid = typeWithUid.split(""\\|"")[1];switch (type) {case ""tei"":TrackedEntityInstance tei = new TrackedEntityInstance();tei.clear();tei.setTrackedEntityInstance(uid);ri.setTrackedEntityInstance(tei);break;case ""pi"":Enrollment pi = new Enrollment();pi.setEnrollment(uid);ri.setEnrollment(pi);break;case ""psi"":Event psi = new Event();psi.setEvent(uid);ri.setEvent(psi);break;default:}return ri;}}"	Yes
948	public class A {public static com.liferay.commerce.price.list.model.CommercePriceListSoap addCommercePriceList(String externalReferenceCode,long groupId,long userId,long commerceCurrencyId,long parentCommercePriceListId,String name,double priority,int displayDateMonth,int displayDateDay,int displayDateYear,int displayDateHour,int displayDateMinute,int expirationDateMonth,int expirationDateDay,int expirationDateYear,int expirationDateHour,int expirationDateMinute,boolean neverExpire,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.commerce.price.list.model.CommercePriceList returnValue =CommercePriceListServiceUtil.addCommercePriceList(externalReferenceCode,groupId,userId,commerceCurrencyId,parentCommercePriceListId,name,priority,displayDateMonth,displayDateDay,displayDateYear,displayDateHour,displayDateMinute,expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,neverExpire,serviceContext);return com.liferay.commerce.price.list.model.CommercePriceListSoap.toSoapModel(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
949	"public class A {@Overridepublic void restore(BackupInput reader) {if (logger.isDebugEnabled()) {logger.debug(""ClusterStateMachine.restore()"");}clusterMeta = new ClusterMeta();int nServerMeta = reader.readInt();for (int i = 0; i < nServerMeta; i++) {String clusterName = reader.readString();int nKVpairs = reader.readInt();for (int j = 0; j < nKVpairs; i++) {String key = reader.readString();Object value = reader.readObject();clusterMeta.put(ClusterMetaType.SERVER_META, clusterName, Maps.immutableEntry(key, value));}}int nIntpMeta = reader.readInt();for (int i = 0; i < nIntpMeta; i++) {String intpName = reader.readString();int nKVpairs = reader.readInt();for (int j = 0; j < nKVpairs; i++) {String key = reader.readString();Object value = reader.readObject();clusterMeta.put(ClusterMetaType.INTP_PROCESS_META, intpName, Maps.immutableEntry(key, value));}}}}"	No
950	"public class A {String getStringContent(BodyPart bp) {String text;try {Object o2 = bp.getContent();if (o2 == null) {text = """";} else if (o2 instanceof String) {text = (String) o2;} else {text = o2.toString();}return text;} catch (IOException | MessagingException ex) {throw new RuntimeException(ex);}}}"	Yes
951	public class A {private void addCustomExceptionHandlers(final Map<Class<? extends Throwable>, ExceptionHandler<? extends Throwable>>exceptionHandlers) {for (Map.Entry<Class<? extends Throwable>, ExceptionHandler<? extends Throwable>> entry :exceptionHandlers.entrySet()) {Class<? extends Throwable> exceptionType = entry.getKey();ExceptionHandler<? extends Throwable> oldHandler =this.exceptionHandlers.put(exceptionType, entry.getValue());if (null != oldHandler) {}}}}	Yes
952	"public class A {public void registerDatasetRun(JRFillDatasetRun datasetRun) {if (!trackedDatasetRunsStack.isEmpty()) {if (log.isDebugEnabled()) {log.debug(""added tracked dataset run "" + datasetRun);}trackedDatasetRunsStack.getFirst().add(datasetRun);}}}"	No
953	public class A {public void loadLogging() {Platform.runLater(() -> {Level storedLevel = getLoggingLevel();if (storedLevel == null) {storedLevel = PopUpWindows.getLoggingPermissions() ? Level.INFO : Level.OFF;}changeLogging(storedLevel);menuController.loggingToggle.setSelected(storedLevel.equals(org.apache.logging.log4j.Level.INFO));});}}	Yes
954	"public class A {public String saveAndContinue() {try {Content currentContent = this.updateContentOnSession();if (null != currentContent) {String descr = currentContent.getDescription();if (StringUtils.isEmpty(descr)) {this.addFieldError(""descr"", this.getText(""error.content.descr.required""));} else if (descr.length() > 250) {String[] args = {String.valueOf(250)};this.addFieldError(""descr"", this.getText(""error.content.descr.wrongMaxLength"", args));} else if (StringUtils.isEmpty(currentContent.getMainGroup())) {this.addFieldError(""mainGroup"", this.getText(""error.content.mainGroup.required""));} else {currentContent.setLastEditor(this.getCurrentUser().getUsername());this.getContentManager().saveContent(currentContent);}}} catch (Throwable t) {_logger.error(""error in saveAndContinue"", t);return FAILURE;}return SUCCESS;}}"	No
955	public class A {@Overridepublic Collection<AllocatableAction> getUnassignedActions() {Set<AllocatableAction> unassigned = new HashSet<>();Iterator<ResourceScheduler<?>> iter = this.getWorkers().iterator();while (iter.hasNext()) {ReadyResourceScheduler<?> resource = (ReadyResourceScheduler<?>) iter.next();Future<?> resourceToken = this.resourceTokens.get(resource);if (resourceToken != null) {try {resourceToken.get();} catch (InterruptedException | ExecutionException e) {}}for (ObjectValue<AllocatableAction> actionObject : resource.getUnassignedActions()) {unassigned.add(actionObject.getObject());}}return unassigned;}}	Yes
956	"public class A {private void logDone(Throwable throwable) {long millis = System.currentTimeMillis() - time.get();int status = RequestContext.getHttpResponse().getStatus();Route route = RequestContext.getRoute();String controller = route == null ? """" : route.getControllerClassName();String action = route == null ? """" : route.getActionName();String method = RequestContext.getHttpRequest().getMethod();String url = RequestContext.getHttpRequest().getRequestURL().toString();ControllerResponse cr = RequestContext.getControllerResponse();String redirectTarget = null;if (cr instanceof RedirectResponse) {RedirectResponse rr = (RedirectResponse) cr;redirectTarget = rr.redirectValue();}Map<String, Object> log =map(""controller"",controller,""action"",action,""duration_millis"",millis,""method"",method,""url"",url,""remote_ip"",getRemoteIP(),""status"",status);if (redirectTarget != null) {log.put(""redirect_target"", redirectTarget);if (RequestContext.getValues().size() > 0) {log.put(""WARNING"",""You passed values to a view and redirected! Are you sure you know what you are""+ "" doing?"");}}if (throwable != null) {log.put(""error"",JsonHelper.sanitize(throwable.getMessage() != null ? throwable.getMessage() : throwable.toString()));}addRequestHeaders(log);if (throwable != null && status >= 500) {logger.error(JsonHelper.toJsonString(log), throwable);} else {}}}"	Yes
957	public class A {@Overridepublic void init(final FilterConfig config) {if (LOGGER.isDebugEnabled()) {}}}	Yes
958	"public class A {String safeGetJCRPath(Path path) {try {return session.getJCRPath(path);} catch (NamespaceException e) {log.error(""failed to convert "" + path.toString() + "" to JCR path."");return path.toString();}}}"	No
959	public class A {@Overridepublic ICalendar fetchInvitation(long uid) throws EmailViewPartsFetcherException {try {EmailMetadata emailViewResponse = mailboxService.fetchEmailMetadata(udr, path, uid);MimeMessage mimeMessage = emailViewResponse.getMimeMessage();MimePart parentMessage = mimeMessage.findRootMimePartInTree();for (MimePart mp : parentMessage.listLeaves(true, true)) {if (mp.isInvitation()) {return fetchICalendar(mp, uid, emailViewResponse);}}return null;} catch (MailException e) {throw new EmailViewPartsFetcherException(e);} catch (IOException e) {throw new EmailViewPartsFetcherException(e);} catch (ParserException e) {throw new EmailViewPartsFetcherException(e);} catch (EmailViewBuildException e) {return null;}}}	Yes
960	"public class A {private void resolveCandidateFactTables(CubeQueryContext cubeql) throws LensException {if (cubeql.getCube() != null) {Set<QueriedPhraseContext> queriedMsrs = new HashSet<>();Set<QueriedPhraseContext> dimExprs = new HashSet<>();for (QueriedPhraseContext qur : cubeql.getQueriedPhrases()) {if (qur.hasMeasures(cubeql)) {queriedMsrs.add(qur);} else {dimExprs.add(qur);}}for (Iterator<Candidate> i = cubeql.getCandidates().iterator(); i.hasNext(); ) {Candidate cand = i.next();if (cand instanceof StorageCandidate) {StorageCandidate sc = (StorageCandidate) cand;for (String expr : cubeql.getQueriedExprs()) {cubeql.getExprCtx().updateEvaluables(expr, sc);}}boolean toRemove = false;for (QueriedPhraseContext qur : dimExprs) {if (!cand.isPhraseAnswerable(qur)) {log.info(""Not considering storage candidate:{} as columns {} are not available"",cand,qur.getColumns());cubeql.addStoragePruningMsg(cand, CandidateTablePruneCause.columnNotFound(qur.getColumns()));toRemove = true;break;}}if (!checkForFactColumnExistsAndValidForRange(cand, queriedMsrs)) {Set<String> columns = getColumns(queriedMsrs);cubeql.addStoragePruningMsg(cand, CandidateTablePruneCause.columnNotFound(columns));toRemove = true;}if (cand instanceof StorageCandidate) {StorageCandidate sc = (StorageCandidate) cand;for (JoinChain chain : cubeql.getJoinchains().values()) {OptionalDimCtx optdim =cubeql.getOptionalDimensionMap().get(Aliased.create((Dimension) cubeql.getCubeTbls().get(chain.getName()),chain.getName()));if (!checkForFactColumnExistsAndValidForRange(sc, chain.getSourceColumns(), cubeql)) {if (optdim == null) {cubeql.addStoragePruningMsg(sc, CandidateTablePruneCause.columnNotFound(chain.getSourceColumns()));toRemove = true;break;}}}}if (toRemove) {i.remove();}}if (cubeql.getCandidates().size() == 0) {throw new LensException(LensCubeErrorCode.NO_FACT_HAS_COLUMN.getLensErrorInfo(),getColumns(cubeql.getQueriedPhrases()).toString());}}}}"	Yes
961	"public class A {@Testpublic void testRandomAggregationCombine() {final int numOfItemsPerList = 100;final int numOfListCombined = 1000;for (Byte percentile : functionMap.keySet()) {AggregationFunction aggregationFunction = functionMap.get(percentile);AggregationFunction aggregationAccurateFunction = accurateFunctionMap.get(percentile);aggregationFunction.init(_paramsInfo);aggregationAccurateFunction.init(_paramsInfo);println(""#list_combined, QuantileDigest_time(nano), DoubleArrayList_time(nano), time_ratio,""+ "" estimate, precise, error"");StringBuilder sb1 = new StringBuilder();StringBuilder sb2 = new StringBuilder();for (int i = 1; i <= numOfListCombined; i += numOfListCombined / 17) {if (i == 1) {continue;}RandomNumberArray arr = new RandomNumberArray(i * numOfItemsPerList, DUPLICATION_PER_ITEM);List<Serializable> aggregationResults =getQuantileDigestResultValues(arr, i, numOfItemsPerList);long t1 = System.nanoTime();List<Serializable> combinedResult =aggregationFunction.combine(aggregationResults, CombineLevel.SEGMENT);long estimate =((QuantileDigest) (combinedResult.get(0))).getQuantile(((double) percentile) / 100);long t2 = System.nanoTime();List<Serializable> aggregationResults2 =getDoubleArrayListResultValues(arr, i, numOfItemsPerList);long t3 = System.nanoTime();List<Serializable> combinedResult2 =aggregationAccurateFunction.combine(aggregationResults2, CombineLevel.SEGMENT);long actual =(long)PercentileUtil.getValueOnPercentile((DoubleArrayList) combinedResult2.get(0), percentile);long t4 = System.nanoTime();println(i+ "", ""+ (t2 - t1)+ "", ""+ (t4 - t3)+ "", ""+ (t2 - t1 + 0.0) / (t4 - t3 + 0.0)+ "", ""+ estimate+ "", ""+ actual+ "", ""+ getErrorString(actual, estimate));TestUtils.assertApproximation(estimate, actual, threshold);}}}}"	Yes
962	"public class A {@Test@Tag(GlobalConstants.TAG_DAILY)public final void givenOnTheBaeldungRSSFeed_whenTheFirstUrlIsHit_thenItPointsToTheBaeldungSite() {page.setUrl(GlobalConstants.BAELDUNG_RSS_FEED_URL);page.loadUrl();page.setUrl(page.getTheFirstBaeldungURL());page.loadUrl();logger.info(""Currently set feed url: "" + page.getUrl());assertTrue(page.rssFeedURLPointsTotheBaeldungSite(page.getWebDriver().getCurrentUrl()),""The RSS Feed URL doesn't point to  https://baeldung.com"");}}"	Yes
963	public class A {@Overridepublic void localToKafkaCommand(final org.locationtech.geowave.service.grpc.protobuf.LocalToKafkaCommandParametersProtosrequest,final StreamObserver<org.locationtech.geowave.service.grpc.protobuf.GeoWaveReturnTypesProtos.VoidResponseProtos>responseObserver) {final LocalToKafkaCommand cmd = new LocalToKafkaCommand();final Map<FieldDescriptor, Object> m = request.getAllFields();GeoWaveGrpcServiceCommandUtil.setGrpcToCommandFields(m, cmd);final File configFile = GeoWaveGrpcServiceOptions.geowaveConfigFile;final OperationParams params = new ManualOperationParams();params.getContext().put(ConfigOptions.PROPERTIES_FILE_CONTEXT, configFile);cmd.prepare(params);try {cmd.computeResults(params);final VoidResponseProtos resp = VoidResponseProtos.newBuilder().build();responseObserver.onNext(resp);responseObserver.onCompleted();} catch (final Exception e) {responseObserver.onError(e);}}}	Yes
964	"public class A {public void attachDirty(StgMapWae instance) {log.debug(""attaching dirty StgMapWae instance"");try {sessionFactory.getCurrentSession().saveOrUpdate(instance);log.debug(""attach successful"");} catch (RuntimeException re) {log.error(""attach failed"", re);throw re;}}}"	No
965	"public class A {@Testpublic void testMemoryConsumption() {int objCnt = 100;ThreadMXBean bean = (ThreadMXBean) ManagementFactory.getThreadMXBean();TestClass2 obj = new TestClass2(new String(new char[1_000_000]));List<TestClass2> arr = new ArrayList<>(objCnt);for (int i = 1; i <= objCnt; i++) arr.add(new TestClass2(new String(new char[i])));GridToStringBuilder.toString(TestClass2.class, obj);long allocated0 = bean.getThreadAllocatedBytes(Thread.currentThread().getId());for (TestClass2 item : arr) GridToStringBuilder.toString(TestClass2.class, item);long allocated1 = bean.getThreadAllocatedBytes(Thread.currentThread().getId());assertTrue(""Too much memory allocated by GridToStringBuilder: "" + (allocated1 - allocated0),allocated1 - allocated0 < 1_000_000);}}"	Yes
966	"public class A {public static com.liferay.portal.kernel.json.JSONArray search(HttpPrincipal httpPrincipal, long groupId, String name, int start, int end) {try {MethodKey methodKey =new MethodKey(AssetTagServiceUtil.class, ""search"", _searchParameterTypes22);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, name, start, end);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.json.JSONArray) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
967	"public class A {protected void putSynchronizationEvent(GatewayQueueEvent event) {if (this.eventProcessor != null) {this.lifeCycleLock.readLock().lock();try {logger.info(""{}: Enqueueing synchronization event: {}"", this, event);this.eventProcessor.enqueueEvent(event, null);this.statistics.incSynchronizationEventsEnqueued();} catch (Throwable t) {} finally {this.lifeCycleLock.readLock().unlock();}}}}"	Yes
968	"public class A {public FileSystemView createFileSystemView(Session session) {String userName = session.getUsername();if (createHome) {String homeDirStr = ""/home/"" + userName;File homeDir = new File(homeDirStr);if (homeDir.isFile()) {}if ((!homeDir.exists()) && (!homeDir.mkdirs())) {}}FileSystemView fsView = new NativeFileSystemView(userName, caseInsensitive);return fsView;}}"	Yes
969	"public class A {@Overridepublic void process(final Exchange exchange) {logger.debug(""default socket implementation, not doing anything"");final WonMessage wonMessage =(WonMessage) exchange.getIn().getHeader(WonCamelConstants.MESSAGE_HEADER);logger.debug(""message with socket {}"", wonMessage.getSenderSocketURI());}}"	No
970	"public class A {@Overridepublic void process(Exchange exchange) throws Exception {String remotePath = DropboxHelper.getRemotePath(configuration, exchange);DropboxConfigurationValidator.validateGetOp(remotePath);DropboxFileDownloadResult result =new DropboxAPIFacade(configuration.getClient(), exchange).get(remotePath);Map<String, Object> map = result.getEntries();if (map.size() == 1) {for (Map.Entry<String, Object> entry : map.entrySet()) {exchange.getIn().setHeader(DropboxResultHeader.DOWNLOADED_FILE.name(), entry.getKey());exchange.getIn().setBody(entry.getValue());}} else {StringBuilder pathsExtracted = new StringBuilder();for (Map.Entry<String, Object> entry : map.entrySet()) {pathsExtracted.append(entry.getKey()).append(""\n"");}exchange.getIn().setHeader(DropboxResultHeader.DOWNLOADED_FILES.name(), pathsExtracted.toString());exchange.getIn().setBody(map);}LOG.debug(""Downloaded: {}"", result);}}"	No
971	"public class A {public String readString() throws IOException {int len = readLength();if (len == 0) {log.debug(""git< 0000"");return END;}if (len == 1) {return DELIM;}len -= 4;if (len == 0) {log.debug(""git< "");return """";}byte[] raw;if (len <= lineBuffer.length) raw = lineBuffer;else raw = new byte[len];IO.readFully(in, raw, 0, len);if (raw[len - 1] == '\n') len--;String s = RawParseUtils.decode(UTF_8, raw, 0, len);return s;}}"	Yes
972	"public class A {@SuppressWarnings(""all"")@Overridepublic Response onRequest(final ReadRequest request) {final SelectRequest selectRequest =serializer.deserialize(request.getData().toByteArray(), SelectRequest.class);LoggerUtils.printIfDebugEnabled(LogUtil.DEFAULT_LOG, ""getData info : selectRequest : {}"", selectRequest);final RowMapper<Object> mapper = RowMapperManager.getRowMapper(selectRequest.getClassName());final byte type = selectRequest.getQueryType();readLock.lock();Object data;try {switch (type) {case QueryType.QUERY_ONE_WITH_MAPPER_WITH_ARGS:data = queryOne(jdbcTemplate, selectRequest.getSql(), selectRequest.getArgs(), mapper);break;case QueryType.QUERY_ONE_NO_MAPPER_NO_ARGS:data =queryOne(jdbcTemplate,selectRequest.getSql(),ClassUtils.findClassByName(selectRequest.getClassName()));break;case QueryType.QUERY_ONE_NO_MAPPER_WITH_ARGS:data =queryOne(jdbcTemplate,selectRequest.getSql(),selectRequest.getArgs(),ClassUtils.findClassByName(selectRequest.getClassName()));break;case QueryType.QUERY_MANY_WITH_MAPPER_WITH_ARGS:data = queryMany(jdbcTemplate, selectRequest.getSql(), selectRequest.getArgs(), mapper);break;case QueryType.QUERY_MANY_WITH_LIST_WITH_ARGS:data = queryMany(jdbcTemplate, selectRequest.getSql(), selectRequest.getArgs());break;case QueryType.QUERY_MANY_NO_MAPPER_WITH_ARGS:data =queryMany(jdbcTemplate,selectRequest.getSql(),selectRequest.getArgs(),ClassUtils.findClassByName(selectRequest.getClassName()));break;default:throw new IllegalArgumentException(""Unsupported data query categories"");}ByteString bytes =data == null ? ByteString.EMPTY : ByteString.copyFrom(serializer.serialize(data));return Response.newBuilder().setSuccess(true).setData(bytes).build();} catch (Exception e) {LogUtil.FATAL_LOG.error(""There was an error querying the data, request : {}, error : {}"",selectRequest,e.toString());return Response.newBuilder().setSuccess(false).setErrMsg(ClassUtils.getSimplaName(e) + "":"" + ExceptionUtil.getCause(e).getMessage()).build();} finally {readLock.unlock();}}}"	No
973	"public class A {public Response updateProcessingFlagsValueImpl(String flag, ProcessingFlags updatedProcessingFlag) {ProcessingFlags processingFlags = null;logger.debug(""Flag is: "" + flag);int respStatus = HttpStatus.SC_OK;try {if (updatedProcessingFlag == null) {logger.debug(""No valid updatedProcessingFlag is provided"");throw new RuntimeException(""No valid updatedProcessingFlag is provided"");}String value = updatedProcessingFlag.getValue();if (value == null || (!value.equalsIgnoreCase(""YES"") && !value.equalsIgnoreCase(""NO""))) {logger.debug(""Value "" + value + "" is invalid, only yes/no are allowed"");throw new RuntimeException(""Invalid value specified"");}processingFlags = processingFlagsRepo.findByFlag(flag);if (processingFlags == null) {logger.debug(""ProcessingFlag not found"");respStatus = HttpStatus.SC_NOT_FOUND;} else {logger.debug(""ProcessingFlags processingFlags = {}"", processingFlags.toString());processingFlags.setValue(value);processingFlagsRepo.saveAndFlush(processingFlags);return Response.status(respStatus).entity(null).header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON).build();}} catch (Exception e) {logger.error(""Exception - queryProcesssingFlags"", e);CatalogQueryException excResp =new CatalogQueryException(e.getMessage(), CatalogQueryExceptionCategory.INTERNAL, Boolean.FALSE, null);return Response.status(HttpStatus.SC_INTERNAL_SERVER_ERROR).entity(new GenericEntity<CatalogQueryException>(excResp) {}).build();}return Response.status(HttpStatus.SC_NOT_FOUND).header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON).build();}}"	No
974	"public class A {public void updated(final Map<String, Object> properties, ComponentContext componentContext) {logger.info(""updating..."");this.options = new TrigonometricComponentOptions(properties);logger.info(""updated, properties: {}"", properties);}}"	Yes
975	"public class A {@Overridepublic long getSize() throws MailQueueException {MessageConsumer consumer = null;MessageProducer producer = null;TemporaryQueue replyTo = null;try {replyTo = session.createTemporaryQueue();consumer = session.createConsumer(replyTo);Queue myQueue = session.createQueue(queueName.asString());producer = session.createProducer(null);String queueName = ""ActiveMQ.Statistics.Destination."" + myQueue.getQueueName();Queue query = session.createQueue(queueName);Message msg = session.createMessage();msg.setJMSReplyTo(replyTo);producer.send(query, msg);MapMessage reply = (MapMessage) consumer.receive(2000);if (reply != null && reply.itemExists(""size"")) {try {return reply.getLong(""size"");} catch (NumberFormatException e) {return super.getSize();}}return super.getSize();} catch (Exception e) {throw new MailQueueException(""Unable to remove mails"", e);} finally {closeConsumer(consumer);closeProducer(producer);if (replyTo != null) {try {replyTo.delete();} catch (JMSException e) {LOGGER.error(""Error while deleting temporary queue"", e);}}}}}"	No
976	"public class A {@Overridepublic HttpResponseResource openResource(URI uri, boolean revalidate) {if (!_isForcedCacheEnabled()) {return super.openResource(uri, revalidate);}String location = _getLocation(uri);if (StringUtils.isBlank(location)) {return super.openResource(uri, revalidate);}HttpResponseResource httpResponseResource = null;try {if (StringUtils.endsWithIgnoreCase(location, ""/maven-metadata.xml"")) {httpResponseResource = _getMavenMetadataResponseResource(uri, location);} else if (StringUtils.endsWithIgnoreCase(location, "".sha1"")) {httpResponseResource = _getSHA1ResponseResource(uri, location);}} catch (Exception exception) {}if (httpResponseResource == null) {httpResponseResource = super.openResource(uri, revalidate);}return httpResponseResource;}}"	Yes
977	"public class A {@PutMapping(path = ""{id}"")public void editProduct(@PathVariable(""id"") String id, @RequestBody Product product) {ProductUpdated event =ProductUpdated.newBuilder().setProductId(id).setColor(product.getColor()).setLabel(product.getLabel()).build();MessageEnvelope envelope =messageEnvelopeHandler.wrap(MessageTypes.EVENT, ""ProductUpdated"", event, ""json"");MessageKey messageKey = messageKeyFactory.createMessageKey();Message<MessageEnvelope> message =MessageBuilder.withPayload(envelope).setHeader(KafkaHeaders.MESSAGE_KEY, messageKey).build();productEventsSink.productEvents().send(message);}}"	Yes
978	"public class A {@Overridepublic boolean virtualPut(final EntryEventImpl event,final boolean ifNew,final boolean ifOld,Object expectedOldValue,boolean requireOldValue,final long lastModified,final boolean overwriteDestroyed,boolean invokeCallbacks,boolean throwsConcurrentModification)throws TimeoutException, CacheWriterException {if (!MemoryThresholds.isLowMemoryExceptionDisabled()) {checkIfAboveThreshold(event);}Operation originalOp = event.getOperation();RegionEntry oldEntry;try {oldEntry =entries.basicPut(event,lastModified,ifNew,ifOld,expectedOldValue,requireOldValue,overwriteDestroyed);} catch (ConcurrentCacheModificationException concCacheModException) {if (logger.isDebugEnabled()) {logger.debug(""caught concurrent modification attempt when applying {}"", event);}if (invokeCallbacks) {notifyBridgeClients(event);notifyGatewaySender(event.getOperation().isUpdate()? EnumListenerEvent.AFTER_UPDATE: EnumListenerEvent.AFTER_CREATE,event);}if (throwsConcurrentModification) {throw concCacheModException;} else {return false;}}ServerRegionProxy mySRP = getServerProxy();if (mySRP != null && getDataPolicy() == DataPolicy.EMPTY) {if (originalOp == Operation.PUT_IF_ABSENT) {return !event.hasOldValue();}if (originalOp == Operation.REPLACE && !requireOldValue) {return true;}}return oldEntry != null;}}"	No
979	"public class A {@Overridepublic String getAppHubApiResponse(String apiVersion, String query) throws URISyntaxException {validateApiVersion(apiVersion);validateQuery(query);apiVersion = sanitizeQuery(apiVersion);query = sanitizeQuery(query);String appHubApiUrl = dhisConfigurationProvider.getProperty(ConfigurationKey.APPHUB_API_URL);String url = String.format(""%s/%s/%s"", appHubApiUrl, apiVersion, query);ResponseEntity<String> response =restTemplate.exchange(new URI(url), HttpMethod.GET, getJsonRequestEntity(), String.class);return response.getBody();}}"	Yes
980	"public class A {void saveRosterEntry() throws JmriException {log.debug(""saveRosterEntry"");if (rosterIdField.getText().equals(SymbolicProgBundle.getMessage(""LabelNewDecoder""))) {synchronized (this) {JOptionPane.showMessageDialog(progPane, SymbolicProgBundle.getMessage(""PromptFillInID""));}throw new JmriException(""No Roster ID"");}if (checkDuplicate()) {synchronized (this) {JOptionPane.showMessageDialog(progPane, SymbolicProgBundle.getMessage(""ErrorDuplicateID""));}throw new JmriException(""Duplicate ID"");}if (re == null) {re = new RosterEntry();re.setDecoderFamily(decoderFile.getFamily());re.setDecoderModel(decoderFile.getModel());re.setId(rosterIdField.getText());re.setDeveloperID(decoderFile.getDeveloperID());re.setManufacturerID(decoderFile.getManufacturerID());re.setProductID(decoderFile.getProductID());Roster.getDefault().addEntry(re);}updateDccAddress();re.ensureFilenameExists();String filename = re.getFileName();synchronized (this) {re.setDccAddress("""" + address);re.setLongAddress(!shortAddr);re.writeFile(cvModel, variableModel);variableModel.setFileDirty(false);}FileUtil.createDirectory(FileUtil.getUserFilesPath());Roster.getDefault().writeRoster();statusLabel.setText(MessageFormat.format(SymbolicProgBundle.getMessage(""StateSaveOK""), new Object[] {filename}));}}"	Yes
981	public class A {private Map<String, Object> resolverClassAndMethod(String className, String methodDesc, Map<String, Object> configuration) {try {int openParen = methodDesc.indexOf(Constants.LEFT_PARENTHESIS);int closeParen = methodDesc.indexOf(Constants.RIGHT_PARENTHESIS);String methodName = methodDesc.substring(0, openParen);String[] arguments = methodDesc.substring(openParen + 1, closeParen).split(Constants.COMMA);MethodConfiguration.setClz(configuration, className);MethodConfiguration.setMethod(configuration, CustomizeUtil.generateOperationName(className, methodName, arguments));MethodConfiguration.setMethodName(configuration, methodName);MethodConfiguration.setArguments(configuration, StringUtil.isEmpty(arguments[0]) ? new String[0] : arguments);if (StringUtil.isEmpty(MethodConfiguration.getOperationName(configuration))) {MethodConfiguration.setOperationName(configuration, MethodConfiguration.getMethod(configuration));}return configuration;} catch (Exception e) {}return null;}}	Yes
982	public class A {public void awaitTermination(final long mills) {try {join(mills);} catch (final InterruptedException e) {if (logger.isDebugEnabled()) {}}}}	Yes
983	public class A {public RunningStubs runStubs(StubRunnerOptions stubRunnerOptions,StubRepository repository,StubConfiguration stubConfiguration) {if (this.stubServer != null) {if (log.isDebugEnabled()) {}return runningStubs();}HttpServerStubConfigurer configurer =BeanUtils.instantiateClass(stubRunnerOptions.getHttpServerStubConfigurer());startStubServers(configurer, stubRunnerOptions, stubConfiguration, repository);RunningStubs runningCollaborators = runningStubs();return runningCollaborators;}}	Yes
984	"public class A {public static void main(String[] args) {LRUAbstractMap map = new LRUAbstractMap();map.put(1, 1);map.put(2, 2);Object o = map.get(1);LOGGER.info(""getSize={}"", map.size());map.remove(1);map.remove(2);LOGGER.info(""getSize"" + map.size());}}"	No
985	public class A {public boolean uploadEnvironment(LocalEnvironment env) {if (!canWorkWithBazaar()) {return false;}if (env.getStatus() != EnvironmentStatus.HEALTHY) {return false;}try {ObjectNode envJson = environmentToJson(env);environmentPeersToJson(env, envJson);environmentContainersToJson(env, envJson);bazaaarAdapter.uploadEnvironment(envJson.toString());return true;} catch (Exception e) {return false;}}}	Yes
986	"public class A {public static boolean unregisterSPI(SPI spi) {try {if (spi == _unregisteringSPIThreadLocal.get()) {_unregisterSPI(spi);return true;}MPI mpi = spi.getMPI();if (mpi != _mpi) {if (_log.isWarnEnabled()) {}return false;}String spiProviderName = spi.getSPIProviderName();SPIProviderContainer spiProviderContainer = _spiProviderContainers.get(spiProviderName);if (spiProviderContainer == null) {if (_log.isWarnEnabled()) {_log.warn(StringBundler.concat(""Not unregistering SPI "", spi, "" with unknown SPI provider "", spiProviderName));}return false;}SPIConfiguration spiConfiguration = spi.getSPIConfiguration();if (spiProviderContainer.removeSPI(spiConfiguration.getSPIId(), spi)) {_unregisterSPI(spi);return true;}if (_log.isWarnEnabled()) {_log.warn(""Not unregistering unregistered SPI "" + spi);}return false;} catch (RemoteException remoteException) {throw new RuntimeException(remoteException);}}}"	Yes
987	public class A {public WorkflowSettings build() {WorkflowSettings instance = new WorkflowSettings(this);return instance;}}	Yes
988	"public class A {@VisibleForTestingpublic static void initializeSecurity(OzoneConfiguration conf, OMStorage omStore, String scmId)throws IOException {LOG.info(""Initializing secure OzoneManager."");CertificateClient certClient =new OMCertificateClient(new SecurityConfig(conf), omStore.getOmCertSerialId());CertificateClient.InitResponse response = certClient.init();switch (response) {case SUCCESS:LOG.info(""Initialization successful."");break;case GETCERT:getSCMSignedCert(certClient, conf, omStore, scmId);LOG.info(""Successfully stored SCM signed certificate."");break;case FAILURE:throw new RuntimeException(""OM security initialization failed."");case RECOVER:LOG.error(""OM security initialization failed. OM certificate is "" + ""missing."");throw new RuntimeException(""OM security initialization failed."");default:throw new RuntimeException(""OM security initialization failed."");}}}"	Yes
989	"public class A {@Overridepublic Map<String, String> getDynamicAttributes() {Map<String, String> data = new HashMap<>();try {data.put(""data-select-layout-master-layout-url"",PortletURLBuilder.createRenderURL(_renderResponse).setMVCPath(""/select_layout_master_layout.jsp"").setRedirect(ParamUtil.getString(_httpServletRequest, ""redirect"")).setBackURL(themeDisplay.getURLCurrent()).setParameter(""collectionPK"", _infoListProvider.getKey()).setParameter(""collectionType"", InfoListProviderItemSelectorReturnType.class.getName()).setParameter(""groupId"", _groupId).setParameter(""privateLayout"", ParamUtil.getBoolean(_httpServletRequest, ""privateLayout"")).setParameter(""selPlid"", ParamUtil.getLong(_httpServletRequest, ""selPlid"")).buildString());} catch (Exception exception) {if (_log.isDebugEnabled()) {_log.debug(exception, exception);}}data.put(""role"", ""button"");data.put(""tabIndex"", ""0"");return data;}}"	No
990	"public class A {@Overridepublic void contextInitialized(ServletContextEvent sce) {ServletContext context = sce.getServletContext();cdiContainer = (CdiContainer) context.getAttribute(CDI_CONTAINER_ATTRIBUTE);cdiContainer.start(context);WeldManager manager = cdiContainer.unwrap(WeldManager.class);Injector injector = new Injector(cdiContainer);context.setAttribute(JettyDecorator.INJECTOR_KEY, injector);JettyDecorator.process(context);context.setAttribute(""org.ops4j.pax.cdi.BeanManager"", cdiContainer.getBeanManager());JspFactory jspFactory = JspFactory.getDefaultFactory();if (jspFactory != null) {JspApplicationContext jspApplicationContext = jspFactory.getJspApplicationContext(context);jspApplicationContext.addELResolver(manager.getELResolver());jspApplicationContext.addELContextListener(new WeldELContextListener());}super.contextInitialized(sce);}}"	Yes
991	public class A {public static final void warningMessage() {}}	Yes
992	"public class A {@RequestMapping(value = ""/adminStudies/validateconditionalFormula.do"",method = RequestMethod.POST)public void validateconditionalFormula(HttpServletRequest request, HttpServletResponse response) {logger.entry(""begin validateconditionalFormula"");JSONObject jsonobject = new JSONObject();PrintWriter out = null;ObjectMapper mapper = new ObjectMapper();JSONObject formulaResponseJsonObject = null;FormulaInfoBean formulaInfoBean = null;String message = FdahpStudyDesignerConstants.FAILURE;try {SessionObject sesObj =(SessionObject)request.getSession().getAttribute(FdahpStudyDesignerConstants.SESSION_OBJECT);if (sesObj != null) {String left_input =FdahpStudyDesignerUtil.isEmpty(request.getParameter(""left_input""))? """": request.getParameter(""left_input"");String right_input =FdahpStudyDesignerUtil.isEmpty(request.getParameter(""right_input""))? """": request.getParameter(""right_input"");String oprator_input =FdahpStudyDesignerUtil.isEmpty(request.getParameter(""oprator_input""))? """": request.getParameter(""oprator_input"");String trialInputVal =FdahpStudyDesignerUtil.isEmpty(request.getParameter(""trialInput""))? """": request.getParameter(""trialInput"");if (!left_input.isEmpty()&& !right_input.isEmpty()&& !oprator_input.isEmpty()&& !trialInputVal.isEmpty()) {formulaInfoBean =studyQuestionnaireService.validateQuestionConditionalBranchingLogic(left_input, right_input, oprator_input, trialInputVal);if (formulaInfoBean != null) {formulaResponseJsonObject = new JSONObject(mapper.writeValueAsString(formulaInfoBean));jsonobject.put(""formulaResponseJsonObject"", formulaResponseJsonObject);if (formulaInfoBean.getMessage().equalsIgnoreCase(FdahpStudyDesignerConstants.SUCCESS)) {message = FdahpStudyDesignerConstants.SUCCESS;}}}}jsonobject.put(""message"", message);response.setContentType(""application/json"");out = response.getWriter();out.print(jsonobject);} catch (Exception e) {}logger.exit(""validateconditionalFormula - Ends"");}}"	Yes
993	"public class A {@Path(""/{component}/list"")@GET@Produces(""application/json"")public String getComponentConfigList(@PathParam(""component"") String component)throws JsonGenerationException, JsonMappingException, IOException {List<ConfigItem> configList = null;if (!datastore.getHasComponent(component)) {configList = new ArrayList<ConfigItem>();} else {configList = datastore.getConfigItemsForComponent(component);}ConfigItemsMessage message = new ConfigItemsMessage();message.setConfig(configList);message.setStatus(""OK"");return mapper.writeValueAsString(message);}}"	Yes
994	"public class A {@SuppressWarnings(""ConstantConditions"")@Overridepublic void onConnectionLocalOpen(Event event) {if (this.authenticationType == DeviceClientConfig.AuthType.SAS_TOKEN) {Session cbsSession = connection.session();amqpsCbsSessionHandler = new AmqpsCbsSessionHandler(cbsSession, this);for (AmqpsSasTokenRenewalHandler sasTokenRenewalHandler : this.sasTokenRenewalHandlers) {sasTokenRenewalHandler.close();}sasTokenRenewalHandlers.clear();for (AmqpsSessionHandler amqpsSessionHandler : this.sessionHandlers) {amqpsSessionHandler.setSession(connection.session());sasTokenRenewalHandlers.add(new AmqpsSasTokenRenewalHandler(amqpsCbsSessionHandler, amqpsSessionHandler));}} else {AmqpsSessionHandler amqpsSessionHandler = this.sessionHandlers.peek();amqpsSessionHandler.setSession(connection.session());}}}"	Yes
995	"public class A {@Overridepublic void run() throws Exception {if (LOG.isDebugEnabled()) {LOG.debug(this.taskContext.formatLogString(""Reducer preprocessing done. Running Reducer code.""));}final Counter numRecordsIn =this.taskContext.getMetricGroup().getIOMetricGroup().getNumRecordsInCounter();final Counter numRecordsOut =this.taskContext.getMetricGroup().getIOMetricGroup().getNumRecordsOutCounter();final MutableObjectIterator<T> input = this.input;final TypeSerializer<T> serializer = this.serializer;final TypeComparator<T> comparator = this.comparator;final ReduceFunction<T> function = this.taskContext.getStub();final Collector<T> output =new CountingCollector<>(this.taskContext.getOutputCollector(), numRecordsOut);if (objectReuseEnabled) {T reuse1 = input.next();T reuse2 = serializer.createInstance();T value = reuse1;while (this.running && value != null) {numRecordsIn.inc();comparator.setReference(value);while ((reuse2 = input.next(reuse2)) != null) {numRecordsIn.inc();if (comparator.equalToReference(reuse2)) {value = function.reduce(value, reuse2);if (value == reuse2) {T tmp = reuse1;reuse1 = reuse2;reuse2 = tmp;}} else {break;}}output.collect(value);T tmp = reuse1;reuse1 = reuse2;reuse2 = tmp;value = reuse1;}} else {T value = input.next();while (this.running && value != null) {numRecordsIn.inc();comparator.setReference(value);T res = value;while ((value = input.next()) != null) {numRecordsIn.inc();if (comparator.equalToReference(value)) {res = function.reduce(res, value);} else {break;}}output.collect(res);}}}}"	No
996	"public class A {@Overridepublic INDArray getrf(INDArray A) {if (A.rows() > Integer.MAX_VALUE || A.columns() > Integer.MAX_VALUE)throw new ND4JArraySizeException();int m = (int) A.rows();int n = (int) A.columns();INDArray INFO =Nd4j.createArrayFromShapeBuffer(Nd4j.getDataBufferFactory().createInt(1),Nd4j.getShapeInfoProvider().createShapeInformation(new int[] {1, 1}).getFirst());int mn = Math.min(m, n);INDArray IPIV =Nd4j.createArrayFromShapeBuffer(Nd4j.getDataBufferFactory().createInt(mn),Nd4j.getShapeInfoProvider().createShapeInformation(new int[] {1, mn}).getFirst());if (A.data().dataType() == DataBuffer.Type.DOUBLE) dgetrf(m, n, A, IPIV, INFO);else if (A.data().dataType() == DataBuffer.Type.FLOAT) sgetrf(m, n, A, IPIV, INFO);else throw new UnsupportedOperationException();if (INFO.getInt(0) < 0) {throw new Error(""Parameter #"" + INFO.getInt(0) + "" to getrf() was not valid"");} else if (INFO.getInt(0) > 0) {log.warn(""The matrix is singular - cannot be used for inverse op. Check L matrix at row ""+ INFO.getInt(0));}return IPIV;}}"	No
997	public class A {@Overridepublic void deleteApplication(String applicationName) {delegate.deleteApplication(applicationName);}}	Yes
998	public class A {private List<Map<String, Object>> documentListToResultList(SolrDocumentList docs) {final List<Map<String, Object>> results = new ArrayList<>();for (SolrDocument doc : docs) {final PersistentItem result = new PersistentItem();final Collection<String> fieldNames = doc.getFieldNames();for (String name : fieldNames) {Collection<Object> fieldValues = doc.getFieldValues(name);if (name.endsWith(PersistentItem.TEXT_SUFFIX) && fieldValues.size() > 1) {result.addProperty(name,fieldValues.stream().filter(String.class::isInstance).map(String.class::cast).collect(Collectors.toSet()));} else {addPropertyBasedOnSuffix(result, name, doc.getFirstValue(name));}}results.add(result);}return results;}}	Yes
999	"public class A {@Testpublic void noResultResponseTest() {Response<Void> response = new Response<Void>(1);response.setSessionId(""xxxxxxx"");String responseJson = response.toString();JsonParser parser = new JsonParser();JsonObject expected =(JsonObject)parser.parse(""{\""id\"":1,\""result\"":{\""sessionId\"":\""xxxxxxx\""},\""jsonrpc\"":\""2.0\""}"");JsonObject result = (JsonObject) parser.parse(responseJson);Assert.assertEquals(expected, result);log.debug(responseJson);Response<Void> newResponse = JsonUtils.fromJsonResponse(responseJson, Void.class);Assert.assertEquals(newResponse.getSessionId(), ""xxxxxxx"");}}"	No
1000	"public class A {@Overridepublic boolean isPermitted(ContainerRequestContext request) {String value = convertStreamToString(request.getEntityStream());try {HashMap<MCRCategoryID, String> categories = MCRCategUtils.getCategoryIDMap(value);if (categories == null) {return false;}for (Map.Entry<MCRCategoryID, String> categoryEntry : categories.entrySet()) {MCRCategoryID category = categoryEntry.getKey();String state = categoryEntry.getValue();if (!hasPermission(category, state)) {return false;}}return true;} catch (Exception exc) {throw new WebApplicationException(exc,Response.status(Status.INTERNAL_SERVER_ERROR).entity(""Unable to check permission for request ""+ request.getUriInfo().getRequestUri()+ "" containing entity value ""+ value).build());}}}"	Yes
1001	public class A {protected final void writeValue(final Page page, final byte[] data) throws IOException {final PageHeader pageHeader = page.getPageHeader();pageHeader.dataLen = fileHeader.workSize;if (data.length != pageHeader.dataLen) {if (pageHeader.dataLen != getPageSize() - 64) {}pageHeader.dataLen = data.length;}page.write(data);}}	Yes
1002	"public class A {public static Binding toBinding(QuerySolution qSolution) {BindingBuilder builder = Binding.builder();for (Iterator<String> iter = qSolution.varNames(); iter.hasNext(); ) {String n = iter.next();RDFNode x = qSolution.get(n);if (Var.isBlankNodeVarName(n)) continue;try {builder.add(Var.alloc(n), x.asNode());} catch (ARQInternalErrorException ex) {Log.warn(BindingUtils.class, ""Attempt to bind "" + n + "" when already bound"");}}return builder.build();}}"	No
1003	"public class A {private Optional<JSONObject> executeGETRequestJSON(String url) {try {return executeGETRequest(url).map(JSONObject::new);} catch (JSONException e) {logger.warn(""Error on parsing the content as JSON!"", e);}return Optional.empty();}}"	No
1004	"public class A {@POST@Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@Consumes({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@CheckPermission(roles = {Role.SYSTEM_MONITOR, Role.TENANT_ADMIN},acls = {ACL.ANY})public CinderQosDetail createQoS(@PathParam(""tenant_id"") String openstackTenantId,CinderQosCreateRequest param,@Context HttpHeaders header) {_log.debug(""START create QoS"");throw new UnsupportedOperationException();}}"	No
1005	"public class A {public SpTemplate getApplicationTemplate(String templateName)throws IdentityApplicationManagementServiceIdentityApplicationManagementClientException {try {if (debugEnabled) {log.debug(""Retrieving Service Provider template: "" + templateName);}return stub.getApplicationTemplate(templateName);} catch (RemoteException e) {handleException(e, ""Error occurred when retrieving Service Provider template: "" + templateName);}return null;}}"	No
1006	public class A {@Overridepublic DEDataListView remove(Serializable primaryKey) throws NoSuchDataListViewException {Session session = null;try {session = openSession();DEDataListView deDataListView =(DEDataListView) session.get(DEDataListViewImpl.class, primaryKey);if (deDataListView == null) {if (_log.isDebugEnabled()) {}throw new NoSuchDataListViewException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return remove(deDataListView);} catch (NoSuchDataListViewException noSuchEntityException) {throw noSuchEntityException;} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}}	Yes
1007	"public class A {@Overridepublic void removeComments(String ideaId, Connection conn) {PreparedStatement stat = null;try {stat = conn.prepareStatement(DELETE_COMMENTS);stat.setString(1, ideaId);stat.executeUpdate();} catch (Throwable t) {this.executeRollback(conn);_logger.error(""Error deleting IdeaComments"", t);throw new RuntimeException(""Error deleting IdeaComments"", t);} finally {closeDaoResources(null, stat, null);}}}"	No
1008	public class A {private Bundle _installInitialBundle(String location, InputStream inputStream) {try {if (_log.isDebugEnabled()) {}Bundle bundle = _addBundle(location, inputStream, false);if (_log.isDebugEnabled()) {}if ((bundle == null) || _isFragmentBundle(bundle)) {return bundle;}if (_log.isDebugEnabled()) {}BundleStartLevel bundleStartLevel = bundle.adapt(BundleStartLevel.class);bundleStartLevel.setStartLevel(PropsValues.MODULE_FRAMEWORK_BEGINNING_START_LEVEL);return bundle;} catch (Exception exception) {_log.error(exception, exception);return null;}}}	Yes
1009	"public class A {@Testpublic void findHydratedProjectsWithSingleUserCollaboratorTest() {if (!config.hasAuth()) {assertTrue(true);return;}AddComment addCommentRequest =AddComment.newBuilder().setEntityId(experimentRun1.getId()).setMessage(""Hello, this project is interesting."" + Calendar.getInstance().getTimeInMillis()).build();commentServiceBlockingStub.addExperimentRunComment(addCommentRequest);addCommentRequest =AddComment.newBuilder().setEntityId(experimentRun3.getId()).setMessage(""Hello, this project is interesting."" + Calendar.getInstance().getTimeInMillis()).build();commentServiceBlockingStub.addExperimentRunComment(addCommentRequest);AddCollaboratorRequest addCollaboratorRequest =addCollaboratorRequestProjectInterceptor(project1, CollaboratorTypeEnum.CollaboratorType.READ_WRITE, authClientInterceptor);AddCollaboratorRequest.Response addCollaboratorResponse =collaboratorServiceStubClient1.addOrUpdateProjectCollaborator(addCollaboratorRequest);GetHydratedProjects.Response getHydratedProjectsResponse =hydratedServiceBlockingStub.getHydratedProjects(GetHydratedProjects.newBuilder().build());assertEquals(""HydratedProjects count does not match with project count"",projectMap.size(),getHydratedProjectsResponse.getHydratedProjectsCount());Map<String, HydratedProject> hydratedProjectMap = new HashMap<>();for (HydratedProject hydratedProject : getHydratedProjectsResponse.getHydratedProjectsList()) {Project project = hydratedProject.getProject();hydratedProjectMap.put(project.getId(), hydratedProject);if (project1.getId().equals(project.getId())) {assertEquals(""HydratedProjects collaborator count does not match with added collaborator count"",1,hydratedProject.getCollaboratorUserInfosCount());assertEquals(hydratedProject.getCollaboratorUserInfosList().get(0).getCollaboratorUserInfo(),addCollaboratorResponse.getCollaboratorUserInfo());}}for (Project existingProject : projectMap.values()) {assertEquals(""Expected project does not exist in the hydrated projects"",existingProject.getName(),hydratedProjectMap.get(existingProject.getId()).getProject().getName());assertEquals(""Expected project owner does not match with the hydratedProject owner"",existingProject.getOwner(),authService.getVertaIdFromUserInfo(hydratedProjectMap.get(existingProject.getId()).getOwnerUserInfo()));}LOGGER.info(""FindHydratedProjects with single user collaborator test stop............"");}}"	Yes
1010	"public class A {private Mono<SocketAddress> lookupRedis(RedisURI sentinelUri) {Duration timeout = getDefaultTimeout();return Mono.usingWhen(Mono.fromCompletionStage(() -> connectSentinelAsync(newStringStringCodec(), sentinelUri, timeout)),c -> {String sentinelMasterId = sentinelUri.getSentinelMasterId();return c.reactive().getMasterAddrByName(sentinelMasterId).map(it -> {if (it instanceof InetSocketAddress) {InetSocketAddress isa = (InetSocketAddress) it;SocketAddress resolved =getResources().socketAddressResolver().resolve(RedisURI.create(isa.getHostString(), isa.getPort()));logger.debug(""Resolved Master {} SocketAddress {}:{} to {}"",sentinelMasterId,isa.getHostString(),isa.getPort(),resolved);return resolved;}return it;}).timeout(timeout).onErrorMap(e -> {RedisCommandTimeoutException ex =ExceptionFactory.createTimeoutException(""Cannot obtain master using SENTINEL MASTER"", timeout);ex.addSuppressed(e);return ex;});},c -> Mono.fromCompletionStage(c::closeAsync),(c, ex) -> Mono.fromCompletionStage(c::closeAsync),c -> Mono.fromCompletionStage(c::closeAsync));}}"	No
1011	"public class A {@SuppressWarnings(""squid:S3655"")private ServiceDefinition validateServiceDefinitionName(final String serviceDefinitionName) {if (Utilities.isEmpty(serviceDefinitionName)) {throw new InvalidParameterException(""ServiceDefinitionName "" + EMPTY_OR_NULL_ERROR_MESSAGE);}final String validServiceDefinitionName = serviceDefinitionName.trim().toLowerCase();final Optional<ServiceDefinition> serviceDefinitionOptional =serviceDefinitionRepository.findByServiceDefinition(validServiceDefinitionName);if (serviceDefinitionOptional.isEmpty()) {throw new InvalidParameterException(""ServiceDefinition by serviceDefinitionName ""+ validServiceDefinitionName+ NOT_IN_DB_ERROR_MESSAGE);}return serviceDefinitionOptional.get();}}"	Yes
1012	"public class A {@Overridepublic void execute() {LOGGER.debug(""Executing I18NCacheUpdate"");startStopwatch();try {if (this.i18NDAORepository != null && this.serviceMetadataRepository != null) {getCache().addSupportedLanguage(this.serviceMetadataRepository.getAvailableLocales());getCache().addSupportedLanguage(getEntityLocales(I18NFeatureMetadata.class));getCache().addSupportedLanguage(getEntityLocales(I18NOfferingMetadata.class));getCache().addSupportedLanguage(getEntityLocales(I18NObservablePropertyMetadata.class));getCache().addSupportedLanguage(getEntityLocales(I18NProcedureMetadata.class));}} catch (OwsExceptionReport ce) {getErrors().add(ce);}LOGGER.debug(""Finished executing I18NCacheUpdate ({})"", getStopwatchResult());}}"	No
1013	"public class A {private void doFailoverHandlesConnectErrorInvalidFieldOnReconnectTestImpl(boolean includeContainerIdHint) throws Exception {try (TestAmqpPeer originalPeer = new TestAmqpPeer();TestAmqpPeer rejectingPeer = new TestAmqpPeer();TestAmqpPeer finalPeer = new TestAmqpPeer(); ) {final CountDownLatch finalConnected = new CountDownLatch(1);final String finalURI = createPeerURI(finalPeer);final DescribedType amqpValueNullContent = new AmqpValueDescribedType(null);originalPeer.expectSaslAnonymous();originalPeer.expectOpen();originalPeer.expectBegin();originalPeer.dropAfterLastHandler(10);Map<Symbol, Object> errorInfo = null;if (includeContainerIdHint) {errorInfo = new HashMap<Symbol, Object>();errorInfo.put(AmqpSupport.INVALID_FIELD, AmqpSupport.CONTAINER_ID);}rejectingPeer.rejectConnect(AmqpError.INVALID_FIELD, ""Client ID already in use"", errorInfo);finalPeer.expectSaslAnonymous();finalPeer.expectOpen();finalPeer.expectBegin();final JmsConnection connection =establishAnonymousConnecton(originalPeer, rejectingPeer, finalPeer);connection.addConnectionListener(new JmsDefaultConnectionListener() {@Overridepublic void onConnectionRestored(URI remoteURI) {if (finalURI.equals(remoteURI.toString())) {finalConnected.countDown();}}});try {connection.start();} catch (Exception ex) {fail(""Should not have thrown an Exception: "" + ex);}assertTrue(""Should connect to final peer"", finalConnected.await(5, TimeUnit.SECONDS));finalPeer.expectBegin();finalPeer.expectReceiverAttach();finalPeer.expectLinkFlowRespondWithTransfer(null, null, null, null, amqpValueNullContent);finalPeer.expectDispositionThatIsAcceptedAndSettled();Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);Queue queue = session.createQueue(""myQueue"");MessageConsumer consumer = session.createConsumer(queue);Message message = consumer.receive(2000);assertNotNull(message);finalPeer.expectClose();connection.close();finalPeer.waitForAllHandlersToComplete(1000);}}}"	Yes
1014	public class A {@OnOpenpublic void onManagementClientConnect(final Session session, final EndpointConfig config) {}}	Yes
1015	public class A {public static com.liferay.commerce.product.model.CommerceCatalogSoap updateCommerceCatalog(long commerceCatalogId,String name,String commerceCurrencyCode,String catalogDefaultLanguageId)throws RemoteException {try {com.liferay.commerce.product.model.CommerceCatalog returnValue =CommerceCatalogServiceUtil.updateCommerceCatalog(commerceCatalogId, name, commerceCurrencyCode, catalogDefaultLanguageId);return com.liferay.commerce.product.model.CommerceCatalogSoap.toSoapModel(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
1016	"public class A {@Testpublic void testCompound() {String q =""(hOmE == 'hoMe-2' or Home == 'HOME-3' or 'hOME-1' == HoMe) and (Away == 'aWAy-3' or NuM ==""+ "" 1)"";QueryJexl p = new QueryJexl(q, manager, date, date);Set<Map<String, String>> resp = p.evaluate();Assert.assertEquals(2, resp.size());for (Map<String, String> entry : resp) {String away = entry.get(TestHeader.away.name());Assert.assertTrue(away.equals(""away-3"") || away.equals(""away-1""));}}}"	Yes
1017	"public class A {@Testpublic void test_07_04() {Chromosome chr = genome.getChromosome(""1"");Markers intervals = new Markers();intervals.add(new Marker(chr, 10, 90, false, """"));Markers intervals2 = new Markers();intervals2.add(new Marker(chr, 51, 91, false, """"));Markers minus = intervals.minus(intervals2);Assert.assertEquals(1, minus.size());Marker minusInt = minus.iterator().next();Assert.assertEquals(10, minusInt.getStart());Assert.assertEquals(50, minusInt.getEnd());}}"	Yes
1018	"public class A {public static boolean applySecurityGroupsToRedshift(AmazonRedshift amazonRedshift, Set<String> sgIdToBeAttached, String resourceId)throws Exception {boolean applysgFlg = false;try {ModifyClusterRequest clusterRequest = new ModifyClusterRequest();clusterRequest.setClusterIdentifier(resourceId);clusterRequest.setVpcSecurityGroupIds(sgIdToBeAttached);amazonRedshift.modifyCluster(clusterRequest);applysgFlg = true;} catch (Exception e) {logger.error(""Apply Security Group operation failed for redshift {}"", resourceId);throw new Exception(e);}return applysgFlg;}}"	No
1019	"public class A {public String enable() {if (getPingTarget() != null) {try {AutoPingManager autoPingMgr = WebloggerFactory.getWeblogger().getAutopingManager();AutoPing autoPing = new AutoPing(null, getPingTarget(), getActionWeblog());autoPingMgr.saveAutoPing(autoPing);WebloggerFactory.getWeblogger().flush();} catch (Exception ex) {addError(""Error enabling auto ping"");}}return execute();}}"	Yes
1020	"public class A {@Overridepublic void deleteBlocksFromHeight(int height) {long blockId;TransactionalDataSource dataSource = databaseManager.getDataSource();try (Connection con = dataSource.getConnection();PreparedStatement pstmt = con.prepareStatement(""SELECT id FROM block WHERE height = ?"")) {pstmt.setInt(1, height);try (ResultSet rs = pstmt.executeQuery()) {if (!rs.next()) {return;}blockId = rs.getLong(""id"");}} catch (SQLException e) {throw new RuntimeException(e.toString(), e);}deleteBlocksFrom(blockId);}}"	Yes
1021	"public class A {private ITypeScriptServiceClient getTypeScriptServiceClient() {try {if (typeScriptServiceClient == null) {String tsserverPath =ProcessUtil.getGlobalNpmPackageNodeMainFilePath(""typescript"", ""tsserver"");TypeScriptServiceClient client =new TypeScriptServiceClient(new File("".""),new File(tsserverPath),null,false,false,null,null,new TypeScriptServiceLogConfiguration(""/tmp/tss.log"", TypeScriptServiceLogLevel.verbose));typeScriptServiceClient = client;}return typeScriptServiceClient;} catch (TypeScriptException e) {throw new RuntimeException(e);}}}"	Yes
1022	"public class A {public InputStream processRelocatedEvent(RelocatedEvent event, String region)throws ErrorResponseException {if (event.getURI() == null && event.getLocation() != null) {event.setURI(createS3Uri(bucket, S3_PATH + event.getLocation()));}if (event.getRegion() != null && !event.getRegion().isEmpty()) region = event.getRegion();if (event.getURI().startsWith(""s3://"") || event.getURI().startsWith(""http"")) {return downloadFromS3(new AmazonS3URI(event.getURI()), region);}throw new ErrorResponseException(event.getStreamId(), XyzError.ILLEGAL_ARGUMENT, ""Unsupported URI type"");}}"	Yes
1023	"public class A {private void buildService(Map<String, ApiMethod> methods,Map<String, ApiService> services,List<String> invalidServices,ResultSet res) {String key = null;try {key = res.getString(1);String parentCode = res.getString(2);ApiMethod masterMethod = methods.get(parentCode);if (null != masterMethod) {ApsProperties description = new ApsProperties();description.loadFromXml(res.getString(3));ApsProperties parameters = new ApsProperties();parameters.loadFromXml(res.getString(4));String tag = res.getString(5);String[] freeParameters = null;String freeParamString = res.getString(6);if (null != freeParamString && freeParamString.trim().length() > 0) {ServiceExtraConfigDOM dom = new ServiceExtraConfigDOM(freeParamString);freeParameters = dom.extractFreeParameters();}boolean isActive = (1 == res.getInt(7)) ? true : false;boolean isHidden = (1 == res.getInt(8)) ? true : false;ApiService apiService =new ApiService(key,description,masterMethod,parameters,freeParameters,tag,!isHidden,isActive);boolean authRequired = (1 == res.getInt(10)) ? true : false;apiService.setRequiredAuth(authRequired);String requiredPermission = res.getString(11);if (null != requiredPermission && requiredPermission.trim().length() > 0) {apiService.setRequiredPermission(requiredPermission);}String requiredGroup = res.getString(12);if (null != requiredGroup && requiredGroup.trim().length() > 0) {apiService.setRequiredGroup(requiredGroup);}services.put(key, apiService);} else {invalidServices.add(key);}} catch (Throwable t) {_logger.error(""Error building service - key '{}'"", key, t);}}}"	No
1024	public class A {@Overridepublic void trace(Marker marker, String format, Object arg) {traceMessages.add(new LogMessage(marker, format, null, arg));}}	Yes
1025	"public class A {@SuppressWarnings({""rawtypes"", ""unchecked""})private void processTemplates(Properties sliProps) {if (sliProps.containsKey(""bootstrap.app.keys"")) {String[] appKeys = sliProps.getProperty(""bootstrap.app.keys"").split("","");for (String key : appKeys) {String templateKey = ""bootstrap.app."" + key + "".template"";if (sliProps.containsKey(templateKey)) {try {InputStream is = null;try {is = new ClassPathResource(sliProps.getProperty(templateKey)).getInputStream();Map appData = loadJsonFile(is, sliProps);writeApplicationToMongo(appData);} finally {is.close();}} catch (IOException e) {}}}}}}"	Yes
1026	"public class A {public static void logTime(IgniteLogger log, String operationName, IgniteThrowableRunner operation)throws IgniteCheckedException {long start = System.currentTimeMillis();try {operation.run();} catch (Throwable ex) {if (log.isInfoEnabled())throw ex;}if (log.isInfoEnabled())log.info(""Operation succeeded [operation=""+ operationName+ "", elapsedTime=""+ (System.currentTimeMillis() - start)+ ""ms]"");}}"	Yes
1027	"public class A {public boolean isWithIn(EvaluateTermPosition o, int distance, int direction) {if (isZeroOffset(o)) {return false;}int low, high = -1;EvaluateTermPosition eval;switch (direction) {case FORWARD:low = termWeightPosition.getLowOffset();high = termWeightPosition.getOffset() + distance;eval = o;break;case REVERSE:low = o.termWeightPosition.getLowOffset();high = o.termWeightPosition.getOffset() + distance;eval = this;break;default:throw new IllegalArgumentException(""Invalid direction option."");}if (log.isTraceEnabled()) {}return (low <= eval.termWeightPosition.getOffset()&& eval.termWeightPosition.getLowOffset() <= high);}}"	Yes
1028	"public class A {@Overridepublic Response createWithFormat(String inputToAutodetectType, String format) {boolean looksLikeLegacy = false;Exception legacyFormatException = null;if (Strings.isBlank(format)) {try {ApplicationSpec appSpec = mapper().readValue(inputToAutodetectType, ApplicationSpec.class);if (appSpec.getType() != null || appSpec.getEntities() != null) {looksLikeLegacy = true;}return createFromAppSpec(appSpec);} catch (Exception e) {Exceptions.propagateIfFatal(e);legacyFormatException = e;}}String potentialYaml = new String(inputToAutodetectType);EntitySpec<? extends Application> spec;try {spec = createEntitySpecForApplication(potentialYaml, format);} catch (Exception e) {Exceptions.propagateIfFatal(e);throw WebResourceUtils.badRequest(e, ""Error in blueprint"");}if (spec != null) {try {return launch(potentialYaml, spec, Optional.absent());} catch (Exception e) {Exceptions.propagateIfFatal(e);throw WebResourceUtils.badRequest(e, ""Error launching blueprint (autodetecting)"");}} else if (looksLikeLegacy) {throw Exceptions.propagate(legacyFormatException);} else {return Response.serverError().entity(""Unsupported format; not able to autodetect."").build();}}}"	Yes
1029	"public class A {@Overridepublic void notify(CamelEvent event) throws Exception {if (!shutdownStrategy.isRunAllowed()) {return;}boolean begin = event instanceof ExchangeCreatedEvent;boolean complete =event instanceof ExchangeCompletedEvent || event instanceof ExchangeFailedEvent;if (maxMessages > 0 && complete) {boolean result = doneMessages.incrementAndGet() >= maxMessages;if (result && shutdownStrategy.isRunAllowed()) {camelContext.getExecutorServiceManager().newThread(""CamelMainShutdownCamelContext"", this::shutdownTask).start();}}if (maxIdleSeconds > 0 && (begin || complete)) {LOG.trace(""Message activity so restarting stop watch"");watch.restart();}}}"	Yes
1030	public class A {@Overridepublic byte[] uncompress(byte[] bytes) {if (bytes == null) {return new byte[0];}try {return Snappy.uncompress(bytes);} catch (IOException e) {}return new byte[0];}}	Yes
1031	public class A {private Response createErrorResponse(int code, Object body, String msg) {Response rsp = new Response(code, body);if (body == null) {rsp = new Response(code, msg);}return rsp;}}	Yes
1032	public class A {private void handleDelivered(JmsInboundMessageDispatch envelope, Delivery delivery) {deliveredCount++;envelope.setRecovered(false);envelope.setDelivered(true);delivery.setDefaultDeliveryState(MODIFIED_FAILED);}}	Yes
1033	public class A {public boolean synchronizeCatalogStudyFromStorage(StudyMetadata study, String sessionId)throws CatalogException {boolean modified = synchronizeFiles(study, null, sessionId);modified |= synchronizeCohorts(study, sessionId);return modified;}}	Yes
1034	"public class A {@Overridepublic Object apply(ProceedingJoinPoint joinPoint,AutoCompensable compensable,AutoCompensableInterceptor interceptor,OmegaContext context,String parentTxId,int retries,IAutoCompensateService autoCompensateService)throws Throwable {Method method = ((MethodSignature) joinPoint.getSignature()).getMethod();String retrySignature = """";boolean isProceed = false;boolean enabledTx = false;try {String localTxId = context.localTxId();CurrentThreadOmegaContext.putThreadGlobalLocalTxId(new OmegaContextServiceConfig(context, true, false));AlphaResponse response =interceptor.preIntercept(parentTxId,TxleConstants.AUTO_COMPENSABLE_METHOD,compensable.timeout(),retrySignature,retries,joinPoint.getArgs());enabledTx = response.enabledTx();CurrentThreadOmegaContext.getContextFromCurThread().setIsEnabledAutoCompensateTx(enabledTx);Object result = joinPoint.proceed();isProceed = true;if (enabledTx) {if (response.aborted()) {context.setLocalTxId(parentTxId);throw new InvalidTransactionException(TxleConstants.LOG_ERROR_PREFIX+ ""Abort sub transaction ""+ localTxId+ "" because global transaction ""+ context.globalTxId()+ "" has already aborted."");}CurrentThreadOmegaContext.clearCache();interceptor.postIntercept(parentTxId, TxleConstants.AUTO_COMPENSABLE_METHOD);}return result;} catch (InvalidTransactionException e) {throw e;} catch (Throwable e) {LOG.error(TxleConstants.LOG_ERROR_PREFIX + ""Fail to proceed business, context {}, method {}"",context,method.toString(),e);boolean isFaultTolerant =ApplicationContextUtil.getApplicationContext().getBean(MessageSender.class).readConfigFromServer(ConfigCenterType.CompensationFaultTolerant.toInteger(), context.category()).getStatus();if (enabledTx && !isFaultTolerant) {interceptor.onError(parentTxId, TxleConstants.AUTO_COMPENSABLE_METHOD, e);}if (!isProceed && isFaultTolerant) {return joinPoint.proceed();}throw e;} finally {clearDataSourceMappingCache(interceptor);}}}"	Yes
1035	"public class A {public RecordEvent getRcEvent() {RecordEvent ev = null;try {String rcEventClazz = DMUtil.getExtendAttr(this.remark, ""rcEventClass"");if (rcEventClazz != null) {ev = (RecordEvent) BeanUtil.newInstanceByName(rcEventClazz);}} catch (Exception e) {}return (RecordEvent) EasyUtils.checkNull(ev, new RecordEventN());}}"	Yes
1036	"public class A {public synchronized void start() throws IOException {if (id != null) {}Preconditions.checkState(tomcat == null);System.setProperty(""org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH"", ""true"");noSuchBaseDir = Files.createTempDirectory(""Oryx"");noSuchBaseDir.toFile().deleteOnExit();Tomcat tomcat = new Tomcat();Connector connector = makeConnector();configureTomcat(tomcat, connector);configureEngine(tomcat.getEngine());configureServer(tomcat.getServer());configureHost(tomcat.getHost());makeContext(tomcat, noSuchBaseDir);try {tomcat.start();} catch (LifecycleException le) {throw new IOException(le);}this.tomcat = tomcat;}}"	Yes
1037	"public class A {@Overridepublic void onOpen(Connection connection) {LOG.debug(""onOpen"");this.connection = connection;this.connection.setMaxIdleTime(5 * 60 * 1000);this.connection.setMaxTextMessageSize(8 * 1024 * 1024);messengerThread.start();}}"	No
1038	"public class A {public String flushCache() {try {Weblog weblog = getActionWeblog();weblog.setLastModified(new Date());WebloggerFactory.getWeblogger().getWeblogManager().saveWeblog(weblog);WebloggerFactory.getWeblogger().flush();CacheManager.invalidate(weblog);addMessage(""maintenance.message.flushed"");} catch (Exception ex) {addError(""Error flushing page cache"");}return SUCCESS;}}"	Yes
1039	"public class A {protected final void cancelGroup(TaskAnalyser ta, TaskDispatcher td) {TaskGroup tg = ta.removeTaskGroup(app, groupName);if (tg != null) {List<Task> tasks = tg.getTasks();int taskCount = tasks.size();StaticMultioperationSemaphore listener = new StaticMultioperationSemaphore(taskCount, sem);LOGGER.debug(""Cancelling "" + taskCount + "" tasks."");for (Task t : tasks) {td.cancelTasks(t, listener);}} else {sem.release();}}}"	No
1040	"public class A {public ModZobjBstMassMitarb findById(sernet.gs.reveng.ModZobjBstMassMitarbId id) {try {ModZobjBstMassMitarb instance =(ModZobjBstMassMitarb)sessionFactory.getCurrentSession().get(""sernet.gs.reveng.ModZobjBstMassMitarb"", id);if (instance == null) {} else {}return instance;} catch (RuntimeException re) {throw re;}}}"	Yes
1041	"public class A {@Overridepublic void setSystemTokenOnClient(Client client, String clientId, String clientSecret, String discoveryUrl) {if (client == null|| Strings.isBlank(clientId)|| Strings.isBlank(clientSecret)|| Strings.isBlank(discoveryUrl)) {return;}String encodedClientIdSecret =Base64.getEncoder().encodeToString((clientId + "":"" + clientSecret).getBytes(UTF_8));Map<String, String> queryParameters = Collections.singletonMap(GRANT_TYPE, CLIENT_CREDENTIALS);String accessToken =getValidToken(encodedClientIdSecret,CLIENT_CREDENTIALS,clientId,clientSecret,discoveryUrl,CLIENT_CREDENTIALS,queryParameters);if (accessToken != null) {LOGGER.debug(ADDING_TOKEN);client.header(OAUTH, BEARER + accessToken);}}}"	No
1042	"public class A {@Overridepublic synchronized void disconnectBindings() throws Exception {logger.debug(ClusterConnectionImpl.this + "" disconnect bindings"");reset = false;for (RemoteQueueBinding binding : new HashSet<>(bindings.values())) {disconnectBinding(binding.getClusterName());}}}"	No
1043	public class A {public void warn(String mesg) {logger.warn(mesg);}}	No
1044	"public class A {@Overridepublic void setMaxPhenomenonTimeForProcedure(String procedure, DateTime maxTime) {CacheValidation.notNullOrEmpty(PROCEDURE, procedure);LOG.trace(""Setting maximal phenomenon time for procedure {} to {}"", procedure, maxTime);if (maxTime == null) {this.maxPhenomenonTimeForProcedures.remove(procedure);} else {this.maxPhenomenonTimeForProcedures.put(procedure, DateTimeHelper.toUTC(maxTime));}}}"	No
1045	public class A {private void processDhtAtomicNearResponse(UUID nodeId, GridDhtAtomicNearResponse res) {GridNearAtomicAbstractUpdateFuture updateFut =(GridNearAtomicAbstractUpdateFuture) ctx.mvcc().atomicFuture(res.futureId());if (updateFut != null) {if (msgLog.isDebugEnabled()) {}updateFut.onDhtResponse(nodeId, res);} else {if (msgLog.isDebugEnabled()) {}}}}	Yes
1046	"public class A {@Testpublic void testInputSchema() throws Throwable {TSnowflakeInputProperties props =(TSnowflakeInputProperties)getComponentService().getComponentProperties(TSnowflakeInputDefinition.COMPONENT_NAME);setupProps(props.connection);Form f = props.table.getForm(Form.REFERENCE);SnowflakeTableProperties moduleProps = (SnowflakeTableProperties) f.getProperties();moduleProps =(SnowflakeTableProperties)PropertiesTestUtils.checkAndBeforeActivate(getComponentService(), f, moduleProps.tableName.getName(), moduleProps);moduleProps.tableName.setValue(testTable);moduleProps =(SnowflakeTableProperties)PropertiesTestUtils.checkAndAfter(getComponentService(), f, moduleProps.tableName.getName(), moduleProps);Schema schema = moduleProps.main.schema.getValue();LOGGER.debug(schema.toString());for (Schema.Field child : schema.getFields()) {LOGGER.debug(child.name());}assertEquals(""ID"", schema.getFields().get(0).name());LOGGER.debug(""Table \"""" + testTable + ""\"" column size:"" + schema.getFields().size());assertTrue(schema.getFields().size() == NUM_COLUMNS);}}"	No
1047	"public class A {private void initCloudServiceTracking() {String selectedCloudServicePid = this.cloudSubscriberOptions.getCloudServicePid();String filterString =String.format(""(&(%s=%s)(kura.service.pid=%s))"",Constants.OBJECTCLASS, CloudConnectionManager.class.getName(), selectedCloudServicePid);Filter filter = null;try {filter = this.bundleContext.createFilter(filterString);} catch (InvalidSyntaxException e) {logger.error(""Filter setup exception "", e);}this.cloudServiceTracker =new ServiceTracker<>(this.bundleContext, filter, this.cloudServiceTrackerCustomizer);this.cloudServiceTracker.open();}}"	No
1048	"public class A {public static void assertContentNotContainsText(final String url, final String phrase, final String... additionalPhrases) {try {String contents = HttpTool.getContent(url);Asserts.assertTrue(contents != null);for (String text : Lists.asList(phrase, additionalPhrases)) {if (contents.contains(text)) {Asserts.fail(""URL "" + url + "" contain text: "" + text);}}} catch (Exception e) {throw propagateAsAssertionError(e);}}}"	Yes
1049	public class A {@Overridepublic void flush() {try {processChanges(_pendingChanges);} catch (final Exception e) {Log.error(_logger, e);}_pendingChanges.clear();refreshCheck();}}	No
1050	"public class A {public Date getFormattedEventTime() {DateFormat dateFormat = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");Date date = new Date();try {date = dateFormat.parse(dateFormat.format(date));} catch (ParseException ex) {LOG.error(""EventTime could not be parsed: "" + ex.getMessage());}return date;}}"	No
1051	"public class A {public org.talend.mdm.webservice.WSBoolean supportStaging(org.talend.mdm.webservice.WSDataClusterPK arg0) {LOG.info(""Executing operation supportStaging"");System.out.println(arg0);try {org.talend.mdm.webservice.WSBoolean _return = null;return _return;} catch (java.lang.Exception ex) {ex.printStackTrace();throw new RuntimeException(ex);}}}"	No
1052	"public class A {@Overridepublic FrontierReportLine getLineForDomain(String domainName) {try {return linesByDomain.get(domainName);} catch (DatabaseException e) {LOG.warn(""Failed to get queue for domain "" + domainName, e);return null;}}}"	No
1053	"public class A {private static void addOrReplace(List<TenantModuleDescriptor> tml,ModuleDescriptor md,TenantModuleDescriptor.Action action,ModuleDescriptor fm) {Iterator<TenantModuleDescriptor> it = tml.iterator();boolean found = false;boolean fixed = false;while (it.hasNext()) {TenantModuleDescriptor tm = it.next();if (tm.getAction().equals(action) && tm.getId().equals(md.getId())) {fixed = tm.getFixed();it.remove();} else if (fm != null&& tm.getAction() == TenantModuleDescriptor.Action.enable&& tm.getId().equals(fm.getId())) {logger.info(""addOrReplace .. patch id {}"", md.getId());tm.setId(md.getId());found = true;}}if (found) {return;}TenantModuleDescriptor t = new TenantModuleDescriptor();t.setAction(action);t.setFixed(fixed);t.setId(md.getId());if (fm != null) {t.setFrom(fm.getId());}tml.add(t);}}"	Yes
1054	public class A {public T allocateExecutor(Set<String> dependencies) {String dependenciesKey = generatedDependenciesKey(dependencies);T executor;T candidateForRemove = null;lock.lock();try {executor = executors.get(dependenciesKey);if (executor == null) {int cacheSize = getCacheSize();if (executors.size() == cacheSize) {Iterator<Map.Entry<String, T>> iterator = executors.entrySet().iterator();candidateForRemove = iterator.next().getValue();iterator.remove();}executor = createNewExecutor(getDependencyService().getDependencies(dependencies));} else {executors.remove(dependenciesKey);}executor.allocate();executors.put(dependenciesKey, executor);} finally {lock.unlock();}if (candidateForRemove != null) {candidateForRemove.close();}return executor;}}	Yes
1055	public class A {protected void consumeProcessLog(ProcessLog processLog) {if (ProcessLog.Level.DEBUG == processLog.getLevel()) {if (_log.isDebugEnabled()) {}} else if (ProcessLog.Level.INFO == processLog.getLevel()) {if (_log.isInfoEnabled()) {_log.info(processLog.getMessage(), processLog.getThrowable());}} else if (ProcessLog.Level.WARN == processLog.getLevel()) {if (_log.isWarnEnabled()) {}} else {_log.error(processLog.getMessage(), processLog.getThrowable());}}}	Yes
1056	"public class A {private void processDisconnectedPeers(Assignments assignments, BitfieldBasedStatistics statistics) {ConnectionKey disconnectedPeer;while ((disconnectedPeer = disconnectedPeers.poll()) != null) {if (assignments != null) {Assignment assignment = assignments.get(disconnectedPeer);if (assignment != null) {assignments.remove(assignment);if (LOGGER.isTraceEnabled()) {LOGGER.trace(""Peer assignment removed due to DISCONNECT: peer {}, assignment {}"",disconnectedPeer,assignment);}}}timeoutedPeers.remove(disconnectedPeer);if (statistics != null) {statistics.removeBitfield(disconnectedPeer);}}}}"	No
1057	"public class A {@Overridepublic void execute() throws Exception {logger.debug(""execute()"");executeInternal(_consumer, _publisher, _lifeCycleHelper);}}"	No
1058	"public class A {@Overridepublic RepositoryConfig getRepositoryConfig(String repositoryID)throws RepositoryConfigException, RepositoryException {RepositoryConfig result = delegate.getRepositoryConfig(repositoryID);if (result != null) {if (!isCorrectType(result)) {logger.debug(""Surpressing retrieval of repository {}: repository type {} did not match expected type""+ "" {}"",new Object[] {result.getID(), result.getRepositoryImplConfig().getType(), type});result = null;}}return result;}}"	No
1059	"public class A {public boolean isNetworkSetupByName(final String nameTag)throws XenAPIException, XmlRpcException {if (nameTag != null) {if (s_logger.isDebugEnabled()) {s_logger.debug(""Looking for network setup by name "" + nameTag);}final Connection conn = getConnection();final XsLocalNetwork network = getNetworkByName(conn, nameTag);if (network == null) {return false;}}return true;}}"	No
1060	public class A {public static com.liferay.journal.model.JournalFeedSoap updateFeed(long groupId,String feedId,String name,String description,String ddmStructureKey,String ddmTemplateKey,String ddmRendererTemplateKey,int delta,String orderByCol,String orderByType,String targetLayoutFriendlyUrl,String targetPortletId,String contentField,String feedType,double feedVersion,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.journal.model.JournalFeed returnValue =JournalFeedServiceUtil.updateFeed(groupId,feedId,name,description,ddmStructureKey,ddmTemplateKey,ddmRendererTemplateKey,delta,orderByCol,orderByType,targetLayoutFriendlyUrl,targetPortletId,contentField,feedType,feedVersion,serviceContext);return com.liferay.journal.model.JournalFeedSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
1061	"public class A {private boolean sendCommandInternal(String io, String command, String params, String url) {String value = ""[]"".equals(params) ? command : command + "" "" + params.replace(""\"""", """");String urlParameters =""{\""label\"":\""""+ getThingLabelByURL(io)+ "" - ""+ value+ "" - openHAB\"",\""actions\"":[{\""deviceURL\"":\""""+ io+ ""\"",\""commands\"":[{\""name\"":\""""+ command+ ""\"",\""parameters\"":""+ params+ ""}]}]}"";SomfyTahomaApplyResponse response =invokeCallToURL(url, urlParameters, HttpMethod.POST, SomfyTahomaApplyResponse.class);if (response != null) {if (!response.getExecId().isEmpty()) {logger.debug(""Exec id: {}"", response.getExecId());registerExecution(io, response.getExecId());scheduleNextGetUpdates();} else {logger.debug(""ExecId is empty!"");return false;}return true;}return false;}}"	No
1062	"public class A {public static void logContents(String message) {if (log.isDebugEnabled()) {log.debug(""{}: {}"",message,data.entrySet().stream().map(e ->e.getKey()+ ""=""+ (e.getValue() != null? (e.getValue().stream().map(Object::toString).collect(Collectors.joining("",\n\t"", ""[\n\t"", ""]""))): ""null"")).collect(Collectors.joining("",\n"")));}}}"	No
1063	"public class A {@PostConstructpublic void configure() {LOGGER.info(""Kie Server Controller WebSocket Notification service initialized"");}}"	No
1064	public class A {private void handleException(FailureReason reason, String message) {myDataSource.setFailureReason(reason);myDataSource.setErrorMessage(message);LOGGER.warn(message);}}	Yes
1065	public class A {@Overridepublic Version checkin(String absPath)throws VersionException, UnsupportedRepositoryOperationException, InvalidItemStateException,LockException, RepositoryException {return checkin(session.getNode(absPath));}}	Yes
1066	"public class A {@Overridepublic void initialize() {logger.debug(""Initializing DWD Pollenflug bridge handler"");bridgeConfig = getConfigAs(DWDPollenflugBridgeConfiguration.class);if (bridgeConfig.isValid()) {updateStatus(ThingStatus.UNKNOWN);startPolling();} else {updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.CONFIGURATION_ERROR,""Refresh interval has to be at least 15 minutes."");}}}"	No
1067	"public class A {@Overridepublic PipelineResult run(PipelineContext context) {StringSeries.Builder urnBuilder = StringSeries.builder();DoubleSeries.Builder scoreBuilder = DoubleSeries.builder();Multimap<String, Entity> urn2entity = ArrayListMultimap.create();for (Map.Entry<String, Set<Entity>> entry : context.getInputs().entrySet()) {DataFrame df = toDataFrame(entry.getValue());if (this.k >= 0) {LOG.info(""Truncating '{}' to {} entities (from {})"", entry.getKey(), this.k, df.size());df = df.sortedBy(SCORE).tail(this.k);}urnBuilder.addSeries(df.get(URN));scoreBuilder.addSeries(df.getDoubles(SCORE));for (Entity e : entry.getValue()) {urn2entity.put(e.getUrn(), e);}}StringSeries urns = urnBuilder.build();DoubleSeries scores = scoreBuilder.build();DataFrame df = new DataFrame();df.addSeries(URN, urns);df.addSeries(SCORE, scores);DataFrame grp = df.groupByValue(URN).aggregate(SCORE, DoubleSeries.SUM);grp = grp.sortedBy(SCORE).reverse();return new PipelineResult(context, toEntities(grp, URN, SCORE, urn2entity));}}"	Yes
1068	"public class A {private void deCompress(String tarFile, File destFile) {TarArchiveInputStream tis = null;try (FileInputStream fis = new FileInputStream(tarFile)) {if (tarFile.contains("".tar"")) {tis = new TarArchiveInputStream(new BufferedInputStream(fis));} else {GZIPInputStream gzipInputStream = new GZIPInputStream(new BufferedInputStream(fis));tis = new TarArchiveInputStream(gzipInputStream);}TarArchiveEntry tarEntry;while ((tarEntry = tis.getNextTarEntry()) != null) {if (!tarEntry.isDirectory()) {File outputFile = new File(destFile + File.separator + tarEntry.getName());boolean result = outputFile.getParentFile().mkdirs();IOUtils.copy(tis, new FileOutputStream(outputFile));}}} catch (IOException ex) {throw new AppException(""failed to decompress, IO exception "" + ex.getMessage(),ResponseConst.RET_DECOMPRESS_FAILED);} finally {if (tis != null) {try {tis.close();} catch (IOException ex) {}}}}}"	Yes
1069	"public class A {private Map<String, Object> getNodeTypesFromAdp(Map<String, Object> adp)throws AdpParsingException {try {return (Map<String, Object>) adp.get(NODE_TYPES_KEY);} catch (NullPointerException E) {throw new AdpParsingException(""The parser was not able to retrieve the 'node_types' from the current ADP."");}}}"	Yes
1070	"public class A {public List<OrchestratorStore> getAllTopPriorityOrchestratorStoreEntriesByConsumerSystemId(final long consumerSystemId) {logger.debug(""getAllTopPriorityOrchestratorStoreEntriesByConsumerSystemId started..."");if (consumerSystemId < 1) {throw new InvalidParameterException(""ConsumerSystemId "" + LESS_THAN_ONE_ERROR_MESSAGE);}try {return orchestratorStoreRepository.findAllByPriorityAndSystemId(CoreCommonConstants.TOP_PRIORITY, consumerSystemId);} catch (final Exception ex) {logger.debug(ex.getMessage(), ex);throw new ArrowheadException(CoreCommonConstants.DATABASE_OPERATION_EXCEPTION_MSG);}}}"	No
1071	"public class A {@Testpublic void testSimpleRuleGenerationAndCompilation5() {try {UdrRule udrRule =RuleBuilderTestUtils.createSimpleUdrRule(UDR_RULE_AUTHOR, PASSENGER_SEAT_RULE_INDX);testTarget.addRule(udrRule);String result = testTarget.build();verifyDrl(result, PASSENGER_SEAT_RULE_INDX);testKnowledgeBaseTest(result);} catch (Exception ex) {fail(""Not expecting exception."");}}}"	Yes
1072	"public class A {@Overridepublic void execute() {s_logger.info(""CreateSnapshotFromVMSnapshotCmd with vm snapshot id:""+ getVMSnapshotId()+ "" and snapshot id:""+ getEntityId()+ "" starts:""+ System.currentTimeMillis());CallContext.current().setEventDetails(""Vm Snapshot Id: "" + this._uuidMgr.getUuid(VMSnapshot.class, getVMSnapshotId()));Snapshot snapshot = null;try {snapshot =_snapshotService.backupSnapshotFromVmSnapshot(getEntityId(), getVmId(), getVolumeId(), getVMSnapshotId());if (snapshot != null) {SnapshotResponse response = _responseGenerator.createSnapshotResponse(snapshot);response.setResponseName(getCommandName());this.setResponseObject(response);} else {throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,""Failed to create snapshot due to an internal error creating snapshot from vm snapshot ""+ getVMSnapshotId());}} catch (InvalidParameterValueException ex) {throw ex;} catch (Exception e) {throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,""Failed to create snapshot due to an internal error creating snapshot from vm snapshot ""+ getVMSnapshotId());} finally {if (snapshot == null) {try {_snapshotService.deleteSnapshot(getEntityId());} catch (Exception e) {s_logger.debug(""Failed to clean failed snapshot"" + getEntityId());}}}}}"	Yes
1073	"public class A {private void log(String configurationName,String configurationVersion,String message,MessageKeeperLevel level,Exception e,boolean allOnly) {String key;if (allOnly || configurationName == null) {key = ALL_CONFIGS_KEY;} else {key = configurationName;}MessageKeeper messageKeeper = messageKeepers.get(key);if (messageKeeper == null) {messageKeeper = new MessageKeeper(messageKeeperSize < 1 ? 1 : messageKeeperSize);messageKeepers.put(key, messageKeeper);}String m;String version;if (configurationName != null) {m = ""Configuration ["" + configurationName + ""] "";version = configurationVersion;} else {m = ""Application ["" + INSTANCE_NAME + ""] "";version = getApplicationVersion();}if (version != null) {m = m + ""["" + version + ""] "";}m = m + message;if (MessageKeeperLevel.ERROR.equals(level)) {} else if (MessageKeeperLevel.WARN.equals(level)) {LOG.warn(m, e);} else {LOG.info(m, e);}if (e != null) {m = m + "": "" + e.getMessage();}messageKeeper.add(m, level);if (!allOnly) {log(configurationName, configurationVersion, message, level, e, true);}}}"	Yes
1074	"public class A {protected StructGenerator createValueGenerator(Schema schema,TableId tableId,List<Column> columns,ColumnNameFilter filter,ColumnMappers mappers) {if (schema != null) {List<Column> columnsThatShouldBeAdded =columns.stream().filter(column ->filter == null|| filter.matches(tableId.catalog(), tableId.schema(), tableId.table(), column.name())).collect(Collectors.toList());int[] recordIndexes = indexesForColumns(columnsThatShouldBeAdded);Field[] fields = fieldsForColumns(schema, columnsThatShouldBeAdded);int numFields = recordIndexes.length;ValueConverter[] converters =convertersForColumns(schema, tableId, columnsThatShouldBeAdded, mappers);return (row) -> {Struct result = new Struct(schema);for (int i = 0; i != numFields; ++i) {validateIncomingRowToInternalMetadata(recordIndexes, fields, converters, row, i);Object value = row[recordIndexes[i]];ValueConverter converter = converters[i];if (converter != null) {LOGGER.trace(""converter for value object: *** {} ***"", converter);} else {LOGGER.trace(""converter is null..."");}if (converter != null) {try {value = converter.convert(value);result.put(fields[i], value);} catch (DataException | IllegalArgumentException e) {Column col = columns.get(i);LOGGER.error(""Failed to properly convert data value for '{}.{}' of type {} for row {}:"",tableId,col.name(),col.typeName(),row,e);} catch (final Exception e) {Column col = columns.get(i);LOGGER.error(""Failed to properly convert data value for '{}.{}' of type {} for row {}:"",tableId,col.name(),col.typeName(),row,e);}}}return result;};}return null;}}"	No
1075	public class A {public final int getTimeout(Object control) {if ((_timeouts.isEmpty()) || (control == null)) {if (tsLogger.logger.isTraceEnabled()) {}return 0;}final ReaperElement reaperElement = _timeouts.get(control);int timeout = (reaperElement == null ? 0 : reaperElement._timeout);return timeout;}}	Yes
1076	"public class A {@Overridepublic final void init() {Logging.withPrefix(getLoggingPrefix(),new Runnable() {@Overridepublic void run() {LOG.info(""{} initializing."", getLoggingPrefix());m_context =BeanUtils.getFactory(getSpringContext(), ClassPathXmlApplicationContext.class);LOG.debug(""SPRING: context.classLoader= {}"", m_context.getClassLoader());LOG.info(""{} initialization complete."", getLoggingPrefix());}});}}"	Yes
1077	public class A {private static final Exception checkJson(String _json) {Exception exception = null;if (_json != null) {try {JsonBuilder.checkJsonValidity(_json);} catch (JsonSyntaxException jse) {exception = jse;}}return exception;}}	Yes
1078	"public class A {public static java.util.List<com.liferay.asset.kernel.model.AssetVocabulary> getGroupVocabularies(HttpPrincipal httpPrincipal,long groupId,int start,int end,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.asset.kernel.model.AssetVocabulary>orderByComparator) {try {MethodKey methodKey =new MethodKey(AssetVocabularyServiceUtil.class,""getGroupVocabularies"",_getGroupVocabulariesParameterTypes14);MethodHandler methodHandler =new MethodHandler(methodKey, groupId, start, end, orderByComparator);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<com.liferay.asset.kernel.model.AssetVocabulary>) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
1079	"public class A {@SuppressWarnings({""rawtypes"", ""unchecked""})public Element marshal(Object object, String contextPath, QName qname) {Element element = null;StringWriter stringWriter = new StringWriter();try {JAXBContextHandler oHandler = new JAXBContextHandler();JAXBContext jc = oHandler.getJAXBContext(contextPath);javax.xml.bind.Marshaller marshaller = jc.createMarshaller();marshaller.marshal(new JAXBElement(qname, object.getClass(), object), stringWriter);element = XmlUtility.convertXmlToElement(stringWriter.toString());} catch (Exception e) {element = null;} finally {try {stringWriter.close();} catch (IOException ioe) {}}return element;}}"	Yes
1080	"public class A {public void afterPropertiesSet() {_hintCollections = new HashMap<>();_defaultHints = new HashMap<>();_modelFields = new HashMap<>();_models = new TreeSet<>();try {Class<?> clazz = getClass();ClassLoader classLoader = clazz.getClassLoader();for (String config : getModelHintsConfigs()) {if (config.startsWith(""classpath*:"")) {String name = config.substring(""classpath*:"".length());Enumeration<URL> enumeration = classLoader.getResources(name);if (_log.isDebugEnabled() && !enumeration.hasMoreElements()) {}while (enumeration.hasMoreElements()) {URL url = enumeration.nextElement();if (_log.isDebugEnabled()) {_log.debug(StringBundler.concat(""Loading "", name, "" from "", url));}InputStream inputStream = url.openStream();read(classLoader, url.toString(), inputStream);}} else {InputStream inputStream = classLoader.getResourceAsStream(config);if (inputStream == null) {File file = new File(config);if (!file.exists()) {continue;}inputStream = new FileInputStream(file);}try (InputStream curInputStream = inputStream) {read(classLoader, config, curInputStream);}}}} catch (Exception exception) {}}}"	Yes
1081	public class A {@Overridepublic Set<String> getTableNames() {try (Admin admin = plugin.getConnection().getAdmin()) {HTableDescriptor[] tables = admin.listTables();Set<String> tableNames = Sets.newHashSet();for (HTableDescriptor table : tables) {tableNames.add(new String(table.getTableName().getNameAsString()));}return tableNames;} catch (Exception e) {return Collections.emptySet();}}}	Yes
1082	"public class A {public List<SubrogationDto> getSubrogationsBySuperUserEmail(final InternalHttpContext context, final String superUserEmail) {final HttpEntity request = new HttpEntity(buildHeaders(context));final ResponseEntity<List<SubrogationDto>> response =restTemplate.exchange(getUrl() + RestApi.CAS_SUBROGATIONS_PATH + ""?superUserEmail="" + superUserEmail,HttpMethod.GET,request,getSubrogationDtoListClass());checkResponse(response);return response.getBody();}}"	Yes
1083	public class A {@Overridepublic void putUserInCache(X509Certificate userCert, UserDetails user) {Element element = new Element(userCert, user);if (logger.isDebugEnabled()) {}cache.put(element);}}	Yes
1084	"public class A {@Overridepublic FragmentComposition findByG_FCK(long groupId, String fragmentCompositionKey)throws NoSuchCompositionException {FragmentComposition fragmentComposition = fetchByG_FCK(groupId, fragmentCompositionKey);if (fragmentComposition == null) {StringBundler sb = new StringBundler(6);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""groupId="");sb.append(groupId);sb.append("", fragmentCompositionKey="");sb.append(fragmentCompositionKey);sb.append(""}"");if (_log.isDebugEnabled()) {_log.debug(sb.toString());}throw new NoSuchCompositionException(sb.toString());}return fragmentComposition;}}"	No
1085	"public class A {@Overridepublic void onComplete(@Nullable Result result) {if (!HttpStatus.Code.OK.equals(getCommunicationStatus().getHttpCode())) {updateListenerStatus();if (retries++ < MAX_RETRIES) {handler.getWebInterface().enqueueCommand(this);}} else {String json = getContentAsString(StandardCharsets.UTF_8);if (json != null) {logger.debug(""JSON String: {}"", json);AggregateDataResponsePublicApi jsonObject =fromJson(json, AggregateDataResponsePublicApi.class);if (jsonObject != null) {handler.updateChannelStatus(transformer.transform(jsonObject, period));}}}}}"	Yes
1086	"public class A {private char findAlternative(char c) {char d;if (alternativeCodes == null) {alternativeCodes = new java.util.HashMap<Character, Character>();} else {Character alternative = alternativeCodes.get(c);if (alternative != null) {return alternative;}}String charName = Glyphs.charToGlyphName(c);String[] charNameAlternatives = Glyphs.getCharNameAlternativesFor(charName);if (charNameAlternatives != null && charNameAlternatives.length > 0) {for (String charNameAlternative : charNameAlternatives) {if (log.isDebugEnabled()) {log.debug(""Checking alternative for char ""+ c+ "" (charname=""+ charName+ ""): ""+ charNameAlternative);}String s = Glyphs.getUnicodeSequenceForGlyphName(charNameAlternative);if (s != null) {d = lookupChar(s.charAt(0));if (d != SingleByteEncoding.NOT_FOUND_CODE_POINT) {alternativeCodes.put(c, d);return d;}}}}return SingleByteEncoding.NOT_FOUND_CODE_POINT;}}"	No
1087	public class A {private void validateHeaders() {HtmlHeaderContainer header =visitChildren(new IVisitor<Component, HtmlHeaderContainer>() {@Overridepublic void component(final Component component, final IVisit<HtmlHeaderContainer> visit) {if (component instanceof HtmlHeaderContainer) {visit.stop((HtmlHeaderContainer) component);} else if (component instanceof TransparentWebMarkupContainer == false) {visit.dontGoDeeper();}}});if (header == null) {header = new HtmlHeaderContainer(HtmlHeaderSectionHandler.HEADER_ID);add(header);RequestCycle requestCycle = getRequestCycle();Response orgResponse = requestCycle.getResponse();try {StringResponse tempResponse = new StringResponse();requestCycle.setResponse(tempResponse);AbstractHeaderRenderStrategy.get().renderHeader(header, null, getPage());IHeaderResponse headerResponse = header.getHeaderResponse();headerResponse.close();CharSequence collectedHeaderOutput = tempResponse.getBuffer();if (collectedHeaderOutput.length() > 0) {reportMissingHead(collectedHeaderOutput);}} catch (Exception e) {} finally {this.remove(header);requestCycle.setResponse(orgResponse);}}}}	Yes
1088	"public class A {protected Object functionCall(String methodName, Object[] args) {Method functionMethod = functionsUtil.getMethod4Function(methodName);if (functionMethod == null) {throw new JRRuntimeException(EXCEPTION_MESSAGE_KEY_FUNCTION_NOT_FOUND, new Object[] {methodName});}assert functionMethod.getName().equals(methodName);Class<?> functionClass = functionMethod.getDeclaringClass();MetaClass functionMetaClass = DefaultGroovyMethods.getMetaClass(functionClass);MethodClosure functionMethodClosure = null;if (FunctionSupport.class.isAssignableFrom(functionClass)) {MetaMethod metaMethod = functionMetaClass.getMetaMethod(methodName, args);if (metaMethod != null && metaMethod.isPublic()) {@SuppressWarnings(""unchecked"")FunctionSupport functionObject =getFunctionSupport((Class<? extends FunctionSupport>) functionClass);functionMethodClosure = new MethodClosure(functionObject, methodName);if (log.isDebugEnabled()) {log.debug(""found public instance method "" + metaMethod + "" in class "" + functionClass);}}}if (functionMethodClosure == null) {MetaMethod metaMethod = functionMetaClass.getStaticMetaMethod(methodName, args);if (metaMethod != null && metaMethod.isPublic()) {functionMethodClosure = new MethodClosure(functionClass, methodName);if (log.isDebugEnabled()) {log.debug(""found public static method "" + metaMethod + "" in class "" + functionClass);}}}if (functionMethodClosure == null) {throw new MissingMethodException(methodName, functionMetaClass.getTheClass(), args);}addFunctionClosureMethods(functionMethodClosure, methodName);ExpandoMetaClass extendedMetaClass = new ExpandoMetaClass(getClass(), false);registerMethods(extendedMetaClass);extendedMetaClass.initialize();DefaultGroovyMethods.setMetaClass((GroovyObject) this, extendedMetaClass);return functionMethodClosure.call(args);}}"	No
1089	"public class A {private boolean updateV1Key(ProcessInstanceDAO instance, OProcess oproc) {ExecutionQueueImpl soup;try {soup = readOldState(instance, oproc, getClass().getClassLoader(), true);if (soup == null) return false;} catch (Exception e) {ExecutionQueueImpl._classDescriptors.clear();return false;}try {OutstandingRequestManager orm = (OutstandingRequestManager) soup.getGlobalData();for (OutstandingRequestManager.Entry entry : orm._byChannel.values()) {Selector[] newSelectors = new Selector[entry.selectors.length];int index = 0;for (Object selector : entry.selectors) {OldSelector sel = (OldSelector) selector;Object selCKey = sel.correlationKey;if (selCKey != null) {OldCorrelationKey old = (OldCorrelationKey) selCKey;CorrelationKeySet newKeySet = new CorrelationKeySet();newKeySet.add(new CorrelationKey("""" + old.getCSetId(), old.getValues()));Selector newSelector =new Selector(sel.idx,sel.plinkInstance,sel.opName,sel.oneWay,sel.messageExchangeId,newKeySet,""one"");newSelector.correlationKey = new CorrelationKey("""" + old.getCSetId(), old.getValues());newSelectors[index++] = newSelector;}}entry.selectors = newSelectors;}writeOldState(instance, soup);} finally {ExecutionQueueImpl._classDescriptors.clear();}return true;}}"	Yes
1090	public class A {@Overridepublic void shutdown() throws SolrServerException, IOException {this.commit();super.shutdown();}}	Yes
1091	"public class A {private URL getGalleryFromImage(URL url) throws IOException {Document doc = Http.url(url).get();for (Element link : doc.select(""a[href~=^gallery\\.php.*$]"")) {if (link.hasAttr(""href"") && link.attr(""href"").contains(""gallery.php"")) {url = new URL(""http://imagearn.com/"" + link.attr(""href""));return url;}}throw new IOException(""Failed to find gallery at URL "" + url);}}"	Yes
1092	"public class A {byte[] hash(byte[] input, byte[] rawSalt) {if (!isSaltLengthValid(rawSalt.length)) {throw new IllegalArgumentException(""The salt length ("" + rawSalt.length + "" bytes) is invalid"");}byte[] hash = new byte[hashLength];final long startNanos = System.nanoTime();Argon2Parameters params =new Argon2Parameters.Builder(Argon2Parameters.ARGON2_id).withSalt(rawSalt).withParallelism(parallelism).withMemoryAsKB(memory).withIterations(iterations).build();Argon2BytesGenerator generator = new Argon2BytesGenerator();generator.init(params);final long initNanos = System.nanoTime();generator.generateBytes(input, hash);final long generateNanos = System.nanoTime();final long initDurationMicros = TimeUnit.NANOSECONDS.toMicros(initNanos - startNanos);final long generateDurationMicros = TimeUnit.NANOSECONDS.toMicros(generateNanos - initNanos);final long totalDurationMillis =TimeUnit.MICROSECONDS.toMillis(initDurationMicros + generateDurationMicros);logger.debug(""Generated Argon2 hash in {} ms (init: {} Âµs, generate: {} Âµs)"",totalDurationMillis,initDurationMicros,generateDurationMicros);return hash;}}"	Yes
1093	"public class A {protected void init() throws Exception {org.apache.log4j.Logger.getRootLogger().setLevel(Level.WARN);ZipUtils.unZipFile(new File(BasicKafkaIT.class.getClassLoader().getResource(TEST_DATA_ZIP_RESOURCE_PATH).toURI()),TestUtils.TEST_CASE_BASE);configFile = File.createTempFile(""test_config"", null);GeoWaveGrpcServiceOptions.geowaveConfigFile = configFile;operationParams = new ManualOperationParams();operationParams.getContext().put(ConfigOptions.PROPERTIES_FILE_CONTEXT, configFile);final AddStoreCommand command = new AddStoreCommand();command.setParameters(GeoWaveGrpcTestUtils.storeName);command.setPluginOptions(dataStore);command.execute(operationParams);final AddStoreCommand commandOut = new AddStoreCommand();commandOut.setParameters(GeoWaveGrpcTestUtils.outputStoreName);commandOut.setPluginOptions(dataStore);commandOut.execute(operationParams);final ConfigAWSCommand configS3 = new ConfigAWSCommand();configS3.setS3UrlParameter(""s3.amazonaws.com"");configS3.execute(operationParams);final StartGrpcServerCommand startCmd = new StartGrpcServerCommand();final StartGrpcServerCommandOptions grpcCmdOpts = new StartGrpcServerCommandOptions();grpcCmdOpts.setPort(GeoWaveGrpcServiceOptions.port);grpcCmdOpts.setNonBlocking(true);startCmd.setCommandOptions(grpcCmdOpts);startCmd.execute(operationParams);client =new GeoWaveGrpcTestClient(GeoWaveGrpcServiceOptions.host, GeoWaveGrpcServiceOptions.port);LOGGER.warn(""-----------------------------------------"");LOGGER.warn(""* FINISHED Init  *"");LOGGER.warn(""*         ""+ ((System.currentTimeMillis() - startMillis) / 1000)+ ""s elapsed.                 *"");LOGGER.warn(""-----------------------------------------"");}}"	Yes
1094	"public class A {void deleteAccountDetailType(final List<Accountdetailtype> accountDetailType, final CChartOfAccounts accounts) {String accountDetail = """";if (accounts.getChartOfAccountDetails() == null) return;chartOfAccountsService.getSession().flush();try {for (final Accountdetailtype row : accountDetailType) {final Iterator<CChartOfAccountDetail> iterator =accounts.getChartOfAccountDetails().iterator();while (iterator.hasNext()) {final CChartOfAccountDetail next = iterator.next();accountDetail = row.getName();if (next == null || next.getDetailTypeId().getId().equals(row.getId())) {iterator.remove();chartOfAccountDetailService.delete(chartOfAccountDetailService.findById(next.getId(), false));persistenceService.getSession().flush();}}}} catch (final Exception e) {populateAccountDetailTypeList();final String message = accountDetail.concat("" "").concat(e.toString());throw new ValidationException(Arrays.asList(new ValidationError(message, message)));}}}"	Yes
1095	"public class A {private void toggleRight(IPartialPageRequestHandler handler, Client self, String uid, JSONObject o) {try {Right right = Right.valueOf(o.getString(PARAM_RIGHT));if (self.hasRight(Right.MODERATOR)) {Client client = cm.get(uid);if (client == null) {return;}if (client.hasRight(right)) {room.denyRight(client, right);} else {if (Right.VIDEO == right) {room.allowRight(client, Right.AUDIO, right);} else {room.allowRight(client, right);}}} else {room.requestRight(right, handler);}} catch (Exception e) {log.error(""Unexpected exception while toggle 'right'"", e);}}}"	No
1096	public class A {@Overridepublic List<DropdownItem> getActionDropdownItems() {JournalArticleActionDropdownItemsProvider articleActionDropdownItemsProvider =new JournalArticleActionDropdownItemsProvider(_article,PortalUtil.getLiferayPortletRequest(renderRequest),PortalUtil.getLiferayPortletResponse(_renderResponse),_assetDisplayPageFriendlyURLProvider,_trashHelper);try {return articleActionDropdownItemsProvider.getArticleHistoryActionDropdownItems();} catch (Exception exception) {if (_log.isDebugEnabled()) {}}return null;}}	Yes
1097	public class A {protected void log(int level, Object message, Throwable tx) {String msg = String.valueOf(message);switch (level) {case AbstractLog.LEVEL_FATAL:case AbstractLog.LEVEL_ERROR:break;case AbstractLog.LEVEL_WARN:break;case AbstractLog.LEVEL_INFO:break;case AbstractLog.LEVEL_TRACE:break;case AbstractLog.LEVEL_DEBUG:default:logger.debug(msg, tx);break;}}}	Yes
1098	"public class A {public void spoolToDisk(final ICacheElement<K, V> ce) {if (!ce.getElementAttributes().getIsSpool()) {handleElementEvent(ce, ElementEventType.SPOOLED_NOT_ALLOWED);return;}boolean diskAvailable = false;for (final ICache<K, V> aux : auxCaches) {if (aux.getCacheType() == CacheType.DISK_CACHE) {diskAvailable = true;if (cacheAttr.getDiskUsagePattern() == DiskUsagePattern.SWAP) {try {handleElementEvent(ce, ElementEventType.SPOOLED_DISK_AVAILABLE);aux.update(ce);} catch (final IOException ex) {log.error(""Problem spooling item to disk cache."", ex);throw new IllegalStateException(ex.getMessage());}log.debug(""spoolToDisk done for: {0} on disk cache[{1}]"", ce::getKey, aux::getCacheName);} else {}}}if (!diskAvailable) {handleElementEvent(ce, ElementEventType.SPOOLED_DISK_NOT_AVAILABLE);}}}"	Yes
1099	"public class A {@Overridepublic synchronized void stop() {super.stop();log.info(""Stopped FileOffsetBackingStore"");}}"	No
1100	public class A {protected void rollback(boolean isNew) throws Exception {try {if (isNew) {transactionManager.rollback();} else {transactionManager.setRollbackOnly();}} catch (Throwable e) {}}}	Yes
1101	"public class A {public static void main(String[] args) {ThriftClient cli = new ThriftClient();Properties props = new Properties();props.setProperty(""hosts"", ""localhost"");cli.setProperties(props);try {cli.init();} catch (Exception e) {logger.error(e);System.exit(0);}HashMap<String, ByteIterator> vals = new HashMap<String, ByteIterator>();vals.put(""age"", new StringByteIterator(""57""));vals.put(""middlename"", new StringByteIterator(""bradley""));vals.put(""favoritecolor"", new StringByteIterator(""blue""));int res = cli.insert(""usertable"", ""BrianFrankCooper"", vals);logger.info(""Result of insert: "" + res);HashMap<String, ByteIterator> result = new HashMap<String, ByteIterator>();HashSet<String> fields = new HashSet<String>();fields.add(""middlename"");fields.add(""age"");fields.add(""favoritecolor"");res = cli.read(""usertable"", ""BrianFrankCooper"", null, result);logger.info(""Result of read: "" + res);for (String s : result.keySet()) {logger.info(""["" + s + ""]=["" + result.get(s) + ""]"");}res = cli.delete(""usertable"", ""BrianFrankCooper"");logger.info(""Result of delete: "" + res);}}"	No
1102	"public class A {@SuppressWarnings({""rawtypes"", ""unchecked""})public T call(Entity entity, Map parameters) {Object[] parametersArray = EffectorUtils.prepareArgsForEffector(this, parameters);if (entity instanceof AbstractEntity) {return EffectorUtils.invokeMethodEffector(entity, this, parametersArray);} else {Method[] methods = entity.getClass().getMethods();for (Method method : methods) {if (method.getName().equals(getName())) {if (parametersArray.length == method.getParameterTypes().length) {try {return (T) method.invoke(entity, parametersArray);} catch (Exception e) {throw Exceptions.propagate(e);}}}}String msg =""Could not find method for effector ""+ getName()+ "" with ""+ parametersArray.length+ "" parameters on ""+ entity;throw new IllegalStateException(msg);}}}"	Yes
1103	public class A {@Overridepublic void onConnectionEstablished(URI remoteURI) {if (isExpectedHost(primaryPeerURI, remoteURI)) {connectedToPrimary.countDown();}}}	Yes
1104	public class A {private void deleteObsoletePendingTasks(SingularityPendingDeploy pendingDeploy) {List<SingularityPendingTaskId> obsoletePendingTasks =taskManager.getPendingTaskIdsForRequest(pendingDeploy.getDeployMarker().getRequestId()).stream().filter(taskId ->!taskId.getDeployId().equals(pendingDeploy.getDeployMarker().getDeployId())).collect(Collectors.toList());for (SingularityPendingTaskId pendingTaskId : obsoletePendingTasks) {taskManager.deletePendingTask(pendingTaskId);}}}	Yes
1105	"public class A {private static void loginGluuServer(WebDriver driver,String opHost,String userId,String userSecret,String clientId,String redirectUrls,String state,String nonce,List<String> responseTypes,List<String> scopes) {driver.navigate().to(getAuthorizationUrl(opHost, clientId, redirectUrls, state, nonce, responseTypes, scopes));Wait<WebDriver> wait =new FluentWait<WebDriver>(driver).withTimeout(Duration.ofSeconds(WAIT_OPERATION_TIMEOUT)).pollingEvery(Duration.ofMillis(500)).ignoring(NoSuchElementException.class);WebElement loginButton =wait.until(new Function<WebDriver, WebElement>() {public WebElement apply(WebDriver d) {return d.findElement(By.id(""loginForm:loginButton""));}});WebElement usernameElement = driver.findElement(By.id(""loginForm:username""));usernameElement.sendKeys(userId);WebElement passwordElement = driver.findElement(By.id(""loginForm:password""));passwordElement.sendKeys(userSecret);loginButton.click();driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);}}"	Yes
1106	"public class A {protected Map<String, Integer> getNumPartitions(final Set<String> topics, final Set<String> tempUnknownTopics) {log.debug(""Trying to check if topics {} have been created with expected number of partitions."",topics);final DescribeTopicsResult describeTopicsResult = adminClient.describeTopics(topics);final Map<String, KafkaFuture<TopicDescription>> futures = describeTopicsResult.values();final Map<String, Integer> existedTopicPartition = new HashMap<>();for (final Map.Entry<String, KafkaFuture<TopicDescription>> topicFuture : futures.entrySet()) {final String topicName = topicFuture.getKey();try {final TopicDescription topicDescription = topicFuture.getValue().get();existedTopicPartition.put(topicName, topicDescription.partitions().size());} catch (final InterruptedException fatalException) {Thread.currentThread().interrupt();throw new IllegalStateException(INTERRUPTED_ERROR_MESSAGE, fatalException);} catch (final ExecutionException couldNotDescribeTopicException) {final Throwable cause = couldNotDescribeTopicException.getCause();if (cause instanceof UnknownTopicOrPartitionException) {} else if (cause instanceof LeaderNotAvailableException) {tempUnknownTopics.add(topicName);log.debug(""The leader of topic {} is not available.\n"" + ""Error message was: {}"",topicName,cause.toString());} else {log.error(""Unexpected error during topic description for {}.\n"" + ""Error message was: {}"",topicName,cause.toString());throw new StreamsException(String.format(""Could not create topic %s."", topicName), cause);}} catch (final TimeoutException retriableException) {tempUnknownTopics.add(topicName);}}return existedTopicPartition;}}"	Yes
1107	"public class A {@Testpublic void testCreateUpdate() throws Exception {factory = new FactoryBuilder.SingletonFactory<>(new TestPolicy(60_000L, 61_000L, null));startGrids();for (final Integer key : keys()) {createUpdate(key, null);}for (final Integer key : keys()) {createUpdateCustomPolicy(key, null);}createUpdatePutAll(null);if (atomicityMode() == TRANSACTIONAL) {TransactionConcurrency[] txModes = new TransactionConcurrency[] {PESSIMISTIC, OPTIMISTIC};for (TransactionConcurrency tx : txModes) {for (final Integer key : keys()) {log.info(""Test createUpdate [key="" + key + "", tx="" + tx + ']');createUpdate(key, tx);}for (final Integer key : keys()) {log.info(""Test createUpdateCustomPolicy [key="" + key + "", tx="" + tx + ']');createUpdateCustomPolicy(key, tx);}createUpdatePutAll(tx);}}}}"	Yes
1108	"public class A {public static Optional<ObjectNode> updateNotificationChannel(ObjectNode objContent) {String newName = null;if (objContent.get(""name"").asText().equals(""Default e-mail channel"")) {newName = ""default_email"";}if (objContent.get(""name"").asText().equals(""Default SMS channel"")) {newName = ""default_sms"";}if (newName != null) {objContent.put(""name"", newName);return Optional.of(objContent);}return Optional.empty();}}"	Yes
1109	public class A {void handleDataResult(AsyncModbusReadResult result) {if (dataRead != ReadStatus.READ_SUCCESS) {dataRead = ReadStatus.READ_SUCCESS;updateStatus();}dataParser.handle(result);{Optional<Data> blockOpt = dataParser.parse(DataType.EMERGENCY);if (blockOpt.isPresent()) {EmergencyBlock block = (EmergencyBlock) blockOpt.get();updateState(epStatusChannel, block.epStatus);updateState(batteryChargingLockedChannel, block.batteryChargingLocked);updateState(batteryDischargingLockedChannel, block.batteryDischargingLocked);updateState(epPossibleChannel, block.epPossible);updateState(weatherPredictedChargingChannel, block.weatherPredictedCharging);updateState(regulationStatusChannel, block.regulationStatus);updateState(chargeLockTimeChannel, block.chargeLockTime);updateState(dischargeLockTimeChannel, block.dischargeLockTime);} else {}}{Optional<Data> blockOpt = dataParser.parse(DataType.POWER);if (blockOpt.isPresent()) {PowerBlock block = (PowerBlock) blockOpt.get();updateState(pvPowerSupplyChannel, block.pvPowerSupply);updateState(batteryPowerSupplyChannel, block.batteryPowerSupply);updateState(batteryPowerConsumptionChannel, block.batteryPowerConsumption);updateState(householdPowerConsumptionChannel, block.householdPowerConsumption);updateState(gridPowerConsumpitionChannel, block.gridPowerConsumpition);updateState(gridPowerSupplyChannel, block.gridPowerSupply);updateState(externalPowerSupplyChannel, block.externalPowerSupply);updateState(wallboxPowerConsumptionChannel, block.wallboxPowerConsumption);updateState(wallboxPVPowerConsumptionChannel, block.wallboxPVPowerConsumption);updateState(autarkyChannel, block.autarky);updateState(selfConsumptionChannel, block.selfConsumption);updateState(batterySOCChannel, block.batterySOC);} else {}}{Optional<Data> blockOpt = dataParser.parse(DataType.STRINGS);if (blockOpt.isPresent()) {StringBlock block = (StringBlock) blockOpt.get();updateState(string1AmpereChannel, block.string1Ampere);updateState(string1VoltChannel, block.string1Volt);updateState(string1WattChannel, block.string1Watt);updateState(string2AmpereChannel, block.string2Ampere);updateState(string2VoltChannel, block.string2Volt);updateState(string2WattChannel, block.string2Watt);updateState(string3AmpereChannel, block.string3Ampere);updateState(string3VoltChannel, block.string3Volt);updateState(string3WattChannel, block.string3Watt);} else {}}listeners.forEach(l -> {l.handle(result);});}}	Yes
1110	"public class A {protected String getSummariesXML(List<String> idList) {String queryList = getSerializedList(idList);String url = composeURL(TERM_SUMMARY_QUERY_SCRIPT, TERM_SUMMARY_PARAM_NAME, queryList);try {Document response = readXML(url);NodeList nodes = response.getElementsByTagName(""Item"");for (int i = 0; i < nodes.getLength(); ++i) {Node n = nodes.item(i);if (n.getNodeType() == Node.ELEMENT_NODE) {if (n.getFirstChild() != null) {n.replaceChild(response.createTextNode(fixCase(n.getTextContent())), n.getFirstChild());}}}Source source = new DOMSource(response);StringWriter stringWriter = new StringWriter();Result result = new StreamResult(stringWriter);TransformerFactory factory = TransformerFactory.newInstance();Transformer transformer = factory.newTransformer();transformer.transform(source, result);return stringWriter.getBuffer().toString();} catch (Exception ex) {}return """";}}"	Yes
1111	public class A {@Nullableprivate static Subject getSubject() {Subject subject = null;try {subject = Subject.getSubject(AccessController.getContext());} catch (SecurityException e) {}return subject;}}	Yes
1112	"public class A {@Overridepublic void doPut(HttpServletRequest req, HttpServletResponse resp)throws ServletException, IOException {LOG.debug(""Received do PUT request."");resp.setStatus(HttpServletResponse.SC_NOT_IMPLEMENTED);}}"	No
1113	"public class A {private Map<String, String> generateMachineId(ClusterCreate clusterSpec, NodeEntity node) {List<NetworkAdd> networkAdds = clusterSpec.getNetworkings();GuestMachineIdSpec machineIdSpec =new GuestMachineIdSpec(networkAdds,node.fetchPortGroupToIpMap(),node.getPrimaryMgtNic().getNetworkEntity().getPortGroup(),node,networkMgr);logger.info(""machine id of vm "" + node.getVmName() + "":\n"" + machineIdSpec.toString());Map<String, String> guestVariable = machineIdSpec.toGuestVariable();return guestVariable;}}"	No
1114	"public class A {public void processInternalResponse(Response response, Boolean isIpV6) {Via via = (Via) response.getHeader(Via.NAME);String transport = via.getTransport().toLowerCase();String host = via.getHost();Integer port = via.getPort();boolean found = false;Node senderNode = (Node) ((ResponseExt) response).getApplicationData();if (logger.isDebugEnabled()) {logger.debug(""internal response checking sendernode ""+ senderNode+ "" or Via host:port ""+ host+ "":""+ port);}if (senderNode != null && invocationContext.sipNodeMap(isIpV6).containsValue(senderNode))found = true;else if (invocationContext.sipNodeMap(isIpV6).containsKey(new KeySip(host, port, isIpV6)))found = true;else if (balancerContext.responsesStatusCodeNodeRemoval.contains(response.getStatusCode()))return;if (logger.isDebugEnabled()) {logger.debug(""internal response node found ? "" + found);}if (!found) {String callId = ((SIPHeader) response.getHeader(headerName)).getValue();Node node = callIdMap.get(callId);if (node == null || !invocationContext.sipNodeMap(isIpV6).containsValue(node)) {node = selectNewNode(node, callId, isIpV6);String transportProperty = transport + ""Port"";port = Integer.parseInt(node.getProperties().get(transportProperty));if (port == null)throw new RuntimeException(""No transport found for node "" + node + "" "" + transportProperty);if (logger.isDebugEnabled()) {}try {via.setHost(node.getIp());via.setPort(port);} catch (Exception e) {throw new RuntimeException(""Error setting new values "" + node.getIp() + "":"" + port + "" on via "" + via, e);}if (!ListeningPoint.UDP.equalsIgnoreCase(transport)) {via.setRPort();}}}}}"	Yes
1115	"public class A {protected void stopTarget(String address) {if (control != null && targets.contains(address)) {LOG.info(""starting replicated target: "" + address);assertTrue(""Failed to start greeter"", control.stopGreeter(address));targets.remove(address);}}}"	No
1116	"public class A {private Dataset convertToDataset(SimpleAbcd206Metadata metadata,Endpoint installationEndpoint,Capabilities capabilities,InventoryDataset inventoryDataset) {Dataset dataset = new Dataset();dataset.setTitle(metadata.getName());dataset.setDescription(metadata.getDetails());dataset.setHomepage(metadata.getHomepage());dataset.setLogoUrl(metadata.getLogoUrl());License license =getLicenseParser().parseUriThenTitle(metadata.getLicenseUri(), metadata.getLicenseText());if (!license.equals(License.UNSPECIFIED)) {LOG.info(""Machine readable license {} parsed from License/URI {} & License/Text {}"",license,metadata.getLicenseUri(),metadata.getLicenseText());} else {ParseResult<License> licenseFromRights = getLicenseParser().parse(metadata.getRights());if (licenseFromRights.isSuccessful()) {license = licenseFromRights.getPayload();LOG.info(""Machine readable license {} parsed from rights {}"", license, metadata.getRights());}}dataset.setLicense(license);if (DOI.isParsable(metadata.getDatasetGUID())) {dataset.setDoi(new DOI(metadata.getDatasetGUID()));}Citation citation = new Citation();citation.setText(metadata.getCitationText());dataset.setCitation(citation);dataset.setContacts(metadata.getContacts());if (inventoryDataset != null) {for (BiocaseArchive archive : inventoryDataset.getArchives()) {Endpoint archiveEndpoint = new Endpoint();archiveEndpoint.setUrl(archive.getArchiveUrl());archiveEndpoint.addMachineTag(MachineTag.newInstance(TagName.ARCHIVE_ORIGIN, InstallationType.BIOCASE_INSTALLATION.name()));if (archive.getRowType() != null&& archive.getRowType().toString().equals(DwcTerm.Occurrence.qualifiedName())) {LOG.info(""Found BioCASe occurrence DWCA {}"", archive);archiveEndpoint.setType(EndpointType.DWC_ARCHIVE);} else {LOG.info(""Found BioCASe XML archive (or non-occurrence DWCA) {}"", archive);archiveEndpoint.setType(EndpointType.BIOCASE_XML_ARCHIVE);}dataset.addEndpoint(archiveEndpoint);}}Endpoint endpoint = new Endpoint();endpoint.setType(EndpointType.BIOCASE);endpoint.setUrl(installationEndpoint.getUrl());endpoint.addMachineTag(MachineTag.newInstance(TagName.CONCEPTUAL_SCHEMA, capabilities.getPreferredSchema()));dataset.addEndpoint(endpoint);return dataset;}}"	No
1117	"public class A {private void deleteSilently(Path dir) {try {fileSystem.deleteRecursively(dir);} catch (IOException e) {log.error(""Unable to delete directory: "" + dir, e);}}}"	No
1118	"public class A {@Overridepublic OrgUnitDTO execute(GetOrgUnit cmd, final UserExecutionContext context)throws CommandException {if (LOG.isDebugEnabled()) {LOG.debug(""Getting org unit with id #{} from the database."", cmd.getId());}final OrgUnit orgUnit = em().find(OrgUnit.class, cmd.getId());if (orgUnit == null) {if (LOG.isDebugEnabled()) {LOG.debug(""Org unit with id # doesn't exist."", cmd.getId());}return null;}if (!Handlers.isOrgUnitVisible(orgUnit, context.getUser())) {if (LOG.isDebugEnabled()) {LOG.debug(""User cannot see org unit id #{}, returns null."", cmd.getId());}return null;}return mapper.map(orgUnit, new OrgUnitDTO());}}"	No
1119	"public class A {@Overridepublic String waitForStatelessResult(Integer timeoutMs) {try {return Base64.getEncoder().encodeToString(resultQueue.getResult(timeoutMs).getBytes(StandardCharsets.UTF_8));} catch (Exception e) {String errorMsg = ""SIT RESULT error: stateless async JEE consumer -> "" + e.toString();logger.error(errorMsg);return errorMsg;}}}"	Yes
1120	"public class A {@Test(timeout = 20000)public void testSendWhenLinkCreditIsZeroAndTimeout() throws Exception {try (TestAmqpPeer testPeer = new TestAmqpPeer(); ) {JmsConnection connection = (JmsConnection) testFixture.establishConnecton(testPeer);connection.setSendTimeout(500);testPeer.expectBegin();Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);String queueName = ""myQueue"";Queue queue = session.createQueue(queueName);Message message = session.createTextMessage(""text"");testPeer.expectSenderAttachWithoutGrantingCredit();testPeer.expectClose();MessageProducer producer = session.createProducer(queue);try {producer.send(message);fail(""Send should time out."");} catch (JmsSendTimedOutException jmsEx) {LOG.info(""Caught expected error: {}"", jmsEx.getMessage());} catch (Throwable error) {fail(""Send should time out, but got: "" + error.getMessage());}connection.close();testPeer.waitForAllHandlersToComplete(1000);}}}"	No
1121	"public class A {public void addMemberToSystem(ObjectName objectName, MemberMXBean proxy, FederationComponent newState) {if (objectName.equals(thisMemberName)) {ObjectName distrObjectName = MBeanJMXAdapter.getDistributedSystemName();DistributedSystemMXBean systemMBean = new DistributedSystemMBean(this);service.registerInternalMBean(systemMBean, distrObjectName);this.systemLevelNotifEmitter = (DistributedSystemMBean) service.getDistributedSystemMXBean();this.distListener = new DistributedSystemNotifListener();}if (mapOfMembers != null) {Objects.requireNonNull(objectName);Objects.requireNonNull(proxy);mapOfMembers.put(objectName, proxy);memberSetSize = mapOfMembers.values().size();}updateMember(objectName, newState, null);try {mbeanServer.addNotificationListener(objectName, distListener, null, null);} catch (InstanceNotFoundException e) {if (logger.isDebugEnabled()) {logger.debug(e.getMessage());}logger.info(""{} Instance Not Found in Platform MBean Server"", objectName);}}}"	No
1122	public class A {@Overridepublic boolean savePersonName(PersonNameType personname) throws LoadTestDataException {SavePersonNameRequestMessageType request = new SavePersonNameRequestMessageType();request.setConfigAssertion(buildConfigAssertion());request.setPersonName(personname);try {LoadTestDataSimpleResponseMessageType response =(LoadTestDataSimpleResponseMessageType)invokeClientPort(AdminWSConstants.ADMIN_LTD_SAVEPERSONNAME, request);logDebug(AdminWSConstants.ADMIN_LTD_SAVEPERSONNAME, response.isStatus(), response.getMessage());return response.isStatus();} catch (Exception e) {}return false;}}	Yes
1123	"public class A {private void ignore(String cluster, String jobId, int instanceNumber) throws FalconException {try {OozieClientFactory.get(cluster).ignore(jobId, String.valueOf(instanceNumber));assertStatus(cluster,jobId + ""@"" + instanceNumber,Status.IGNORED,Status.FAILED,Status.SUCCEEDED,Status.DONEWITHERROR);LOG.info(""Ignored job {} on cluster {}"", jobId, cluster);} catch (OozieClientException e) {throw new FalconException(e);}}}"	No
1124	"public class A {@Testpublic void test20AnonDelete() {Thing thing = THINGS.get(0);try {serviceAnon.delete(thing);Assert.fail(ANON_SHOULD_NOT_BE_ABLE_TO_DELETE);} catch (ServiceFailureException ex) {expectStatusCodeException(ANON_SHOULD_NOT_BE_ABLE_TO_DELETE,ex,HTTP_CODE_401_UNAUTHORIZED,HTTP_CODE_403_FORBIDDEN);}EntityUtils.filterAndCheck(serviceRead.things(), """", THINGS);}}"	Yes
1125	"public class A {private Set<String> validateChannels(Set<String> channelSet) {Iterator<String> iter = channelSet.iterator();Map<String, Context> newContextMap = new HashMap<>();ChannelConfiguration conf = null;while (iter.hasNext()) {String channelName = iter.next();Context channelContext = channelContextMap.get(channelName);if (channelContext != null) {ChannelType chType =getKnownChannel(channelContext.getString(BasicConfigurationConstants.CONFIG_TYPE));boolean configSpecified = false;String config = null;if (chType == null) {config = channelContext.getString(CONFIG_CONFIG);if (config == null || config.isEmpty()) {config = ""OTHER"";} else {configSpecified = true;}} else {config = chType.toString().toUpperCase(Locale.ENGLISH);configSpecified = true;}try {conf =(ChannelConfiguration)ComponentConfigurationFactory.create(channelName, config, ComponentType.CHANNEL);if (conf != null) {conf.configure(channelContext);}if ((configSpecified && conf.isNotFoundConfigClass()) || !configSpecified) {newContextMap.put(channelName, channelContext);} else if (configSpecified) {channelConfigMap.put(channelName, conf);}if (conf != null) {errorList.addAll(conf.getErrors());}} catch (ConfigurationException e) {if (conf != null) errorList.addAll(conf.getErrors());iter.remove();}} else {iter.remove();addError(channelName, CONFIG_ERROR, ERROR);}}channelContextMap = newContextMap;Set<String> tempchannelSet = new HashSet<String>();tempchannelSet.addAll(channelConfigMap.keySet());tempchannelSet.addAll(channelContextMap.keySet());channelSet.retainAll(tempchannelSet);return channelSet;}}"	Yes
1126	"public class A {private void parseHost() {String host = getRequestHeaders().getFirstValue(HeaderConstants.HEADER_HOST, true);if (host != null) {int colonIndex = host.indexOf(':', host.indexOf(']'));if (colonIndex != -1) {super.setHostDomain(host.substring(0, colonIndex));super.setHostPort(Integer.valueOf(host.substring(colonIndex + 1)));} else {super.setHostDomain(host);super.setHostPort(getProtocol().getDefaultPort());}} else {getLogger().info(""Couldn't find the mandatory \""Host\"" HTTP header."");}this.hostParsed = true;}}"	No
1127	"public class A {@Overridepublic void upgrade() {final MigrationCompleted migrationCompleted = configService.get(MigrationCompleted.class);final Set<String> patternNames =patternsToMigrate.stream().map(PatternToMigrate::name).collect(Collectors.toSet());if (migrationCompleted != null && migrationCompleted.patterns().containsAll(patternNames)) {log.debug(""Migration already completed."");return;}try {for (PatternToMigrate patternToMigrate : patternsToMigrate) {migratePattern(patternToMigrate);}configService.write(MigrationCompleted.create(patternNames));} catch (ValidationException e) {log.error(""Unable to migrate Grok Pattern."", e);}}}"	No
1128	"public class A {private static List<String> execute(final String commandLine, CommandExecutorService executorService) throws IOException {Command command = new Command(commandLine.split(""\\s+""));command.setTimeout(60);command.setOutputStream(new ByteArrayOutputStream());CommandStatus status = executorService.execute(command);logger.debug(""Called {} - rc = {}"", commandLine, status.getExitStatus().getExitCode());return IOUtils.readLines(new ByteArrayInputStream(((ByteArrayOutputStream) command.getOutputStream()).toByteArray()));}}"	No
1129	public class A {@Overridepublic void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {ByteBuf byteBuf = (ByteBuf) msg;byte[] msgBytes = new byte[byteBuf.readableBytes()];byteBuf.readBytes(msgBytes);ByteBuffer requestMessage = ByteBuffer.wrap(msgBytes);byteBuf.release();InetSocketAddress clientAddress = (InetSocketAddress) ctx.channel().remoteAddress();boolean isTcp = true;try {ByteBuffer responseMessage =myKdcHandler.handleMessage(requestMessage, isTcp, clientAddress.getAddress());ctx.writeAndFlush(Unpooled.wrappedBuffer(responseMessage));} catch (Exception e) {}}}	Yes
1130	"public class A {public static int exec(Configuration configuration, String... args) {if (LOG.isDebugEnabled()) {LOG.debug(MessageFormat.format(""Preparing application: {0}"", Arrays.toString(args)));}configuration.setBoolean(KEY_LAUNCHER_USED, true);LauncherOptions options;try {options = LauncherOptionsParser.parse(configuration, args);} catch (Exception e) {LOG.error(MessageFormat.format(""Exception occurred in launcher: {0}"", Arrays.toString(args)), e);return LAUNCH_ERROR;}try {Configuration conf = options.getConfiguration();conf.setClassLoader(options.getApplicationClassLoader());Tool tool;try {tool = ReflectionUtils.newInstance(options.getApplicationClass(), conf);} catch (Exception e) {LOG.error(MessageFormat.format(""Exception occurred in launcher: {0}{1}"",options.getApplicationClass().getName(), options.getApplicationArguments()),e);return LAUNCH_ERROR;}try {return launch(conf, tool, options.getApplicationArgumentArray());} catch (Exception e) {LOG.error(MessageFormat.format(""Exception occurred in launcher: {0}{1}"",options.getApplicationClass().getName(), options.getApplicationArguments()),e);return CLIENT_ERROR;}} finally {disposeClassLoader(options.getApplicationClassLoader());for (File file : options.getApplicationCacheDirectories()) {if (delete(file) == false) {LOG.warn(MessageFormat.format(""Failed to delete the application cache directory: {0}"", file));}}}}}"	No
1131	public class A {public void readDB(MongoDBOutputOperator oper) {for (Object o : oper.getTableList()) {String table = (String) o;DBCursor cursor = oper.db.getCollection(table).find();while (cursor.hasNext()) {}}}}	Yes
1132	"public class A {private void fillNewColWithTransformedData(final Context context, Set<SystemSetting> systemSettingsToConvert)throws JsonProcessingException {ObjectMapper objectMapper = new ObjectMapper();ObjectMapper specialObjectMapper = new ObjectMapper();specialObjectMapper.setVisibility(specialObjectMapper.getSerializationConfig().getDefaultVisibilityChecker().withFieldVisibility(Visibility.ANY).withGetterVisibility(Visibility.NONE).withSetterVisibility(Visibility.NONE).withCreatorVisibility(Visibility.NONE));try (PreparedStatement ps =context.getConnection().prepareStatement(""UPDATE systemsetting SET value_text = ? WHERE systemsettingid = ?"")) {for (SystemSetting systemSetting : systemSettingsToConvert) {if (systemSetting.getName().equals(SMS_CONFIGURATION_SETTING_NAME)) {ps.setString(1, specialObjectMapper.writeValueAsString(systemSetting.getValue()));} else {ps.setString(1, objectMapper.writeValueAsString(systemSetting.getValue()));}ps.setLong(2, systemSetting.getId());ps.execute();}} catch (SQLException e) {throw new FlywayException(e);}}}"	Yes
1133	"public class A {public synchronized void shutdown() {this.stopping = true;this.canceler.cancel(String.format(NAME_FORMAT, volume) + "" is shutting down"");this.interrupt();try {this.join();} catch (InterruptedException ex) {LOG.warn(""Unexpected exception while stopping data scanner for volume "" + volume, ex);Thread.currentThread().interrupt();}}}"	No
1134	"public class A {public static AssertionError assertAssertionError(Block block) throws Exception {AssertionError answer = null;try {block.invoke();} catch (AssertionError e) {answer = e;System.out.println(""Caught expected assertion failure: "" + e);} catch (Exception e) {throw e;}if (answer == null) {throw new AssertionError(""Expected an assertion error from block: "" + block);}return answer;}}"	Yes
1135	public class A {public static String search(long groupId, String name, int start, int end)throws RemoteException {try {com.liferay.portal.kernel.json.JSONArray returnValue =AssetTagServiceUtil.search(groupId, name, start, end);return returnValue.toString();} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
1136	"public class A {@Overrideprotected void stopBackgroundDiscovery() {if (usbSerialDiscovery != null) {usbSerialDiscovery.stopBackgroundScanning();} else {logger.info(""Could not stop background discovery, as there is no USB-Serial discovery service""+ "" configured."");}}}"	No
1137	"public class A {@Overridepublic void setup(ProfilerPluginSetupContext context) {final JdkCompletableFuturePluginConfig config =new JdkCompletableFuturePluginConfig(context.getConfig());if (!config.isEnable()) {logger.info(""{} disabled"", this.getClass().getSimpleName());return;}logger.info(""{} version range=[1.8.0,) config:{}"", this.getClass().getSimpleName(), config);transformTemplate.transform(""java.util.concurrent.CompletableFuture"", CompletableFutureTransform.class);}}"	No
1138	"public class A {private Action toAction() {try {return new ActionImpl(getId(), title, description, new URL(constructUrl()));} catch (MalformedURLException e) {LOGGER.debug(""Unable to parse the action url: url={}"", url, e);return null;}}}"	No
1139	"public class A {public void doPushNotificationAnswerEvent(ServerShSession arg0, PushNotificationRequest arg1, PushNotificationAnswer arg2)throws InternalException, IllegalDiameterStateException, RouteException, OverloadException {if (log.isEnabledFor(Level.DEBUG)) {log.error(""Received PNA"");super.dumpMessage(arg1.getMessage(), false);}}}"	No
1140	public class A {@Overridepublic boolean canImport(TransferHandler.TransferSupport info) {if (info.isDataFlavorSupported(TypeKeyEntry.ourDataFlavor)) {Transferable t = info.getTransferable();TypeKeyEntry data = null;try {data = (TypeKeyEntry) t.getTransferData(TypeKeyEntry.ourDataFlavor);JList.DropLocation dl = (JList.DropLocation) info.getDropLocation();DefaultListModel<MappedTypeKeyPanelProxy> listModel =(DefaultListModel<MappedTypeKeyPanelProxy>) myDestKeyList.getModel();int index = dl.getIndex();if (index != -1) {Object obj = listModel.getElementAt(index);if (obj instanceof MappedTypeKeyPanelProxy) {MappedTypeKeyPanelProxy pp = (MappedTypeKeyPanelProxy) obj;return pp.getPanel().allowsTypeKeyEntry(data, null);}}} catch (UnsupportedFlavorException | IOException e) {}}return false;}}	Yes
1141	"public class A {@Testpublic void testInvokingSimpleServerWithParams() throws Exception {Exchange exchange = sendSimpleMessage();org.apache.camel.Message out = exchange.getMessage();String result = out.getBody(String.class);LOG.info(""Received output text: "" + result);Map<String, Object> responseContext =CastUtils.cast((Map<?, ?>) out.getHeader(Client.RESPONSE_CONTEXT));assertNotNull(responseContext);assertEquals(""UTF-8"",responseContext.get(org.apache.cxf.message.Message.ENCODING),""We should get the response context here"");assertEquals(""echo "" + TEST_MESSAGE, result, ""reply body on Camel"");String fileName = out.getHeader(Exchange.FILE_NAME, String.class);assertEquals(""testFile"", fileName, ""Should get the file name from out message header"");Object requestObject = out.getHeader(""requestObject"");assertTrue(requestObject instanceof DefaultCxfBinding, ""We should get the right requestObject."");}}"	No
1142	"public class A {@Overridepublic String getData(Gson gson) {StringBuilder sb = new StringBuilder();for (BulkableAction action : bulkableActions) {Map<String, Map<String, String>> opMap = new LinkedHashMap<String, Map<String, String>>(1);Map<String, String> opDetails = new LinkedHashMap<String, String>(3);if (StringUtils.isNotBlank(action.getId())) {opDetails.put(""_id"", action.getId());}if (StringUtils.isNotBlank(action.getIndex())) {opDetails.put(""_index"", action.getIndex());}if (StringUtils.isNotBlank(action.getType())) {opDetails.put(""_type"", action.getType());}for (String parameter : Parameters.ACCEPTED_IN_BULK) {try {Collection<Object> values = action.getParameter(parameter);if (values != null) {if (values.size() == 1) {opDetails.put(parameter, values.iterator().next().toString());} else if (values.size() > 1) {throw new IllegalArgumentException(""Expecting a single value for '""+ parameter+ ""' parameter, you provided: ""+ values.size());}}} catch (NullPointerException e) {}}opMap.put(action.getBulkMethodName(), opDetails);sb.append(gson.toJson(opMap, new TypeToken<Map<String, Map<String, String>>>() {}.getType()));sb.append(""\n"");Object source = action.getData(gson);if (source != null) {sb.append(getJson(gson, source));sb.append(""\n"");}}return sb.toString();}}"	Yes
1143	"public class A {private static Method findSetter(Class clazz, String property, Object arg) {String setterName = toSetterName(property);Method[] methods = clazz.getMethods();LOG.debug(""Target setter: {}, arg: {}"", setterName, arg);for (Method method : methods) {if (setterName.equals(method.getName())) {Class<?>[] parameterTypes = method.getParameterTypes();boolean invokable =canInvokeWithArgs(Collections.singletonList(arg), method.getParameterTypes());LOG.debug(""** invokable --> {}"", invokable);if (invokable) {return method;}}}return null;}}"	Yes
1144	"public class A {@Overridepublic void writeTargetValue(AtlasInternalSession session) throws AtlasException {LOG.debug(""processTargetFieldMapping method"");}}"	No
1145	"public class A {private Set<NodeMetadata> addTagsToInstancesInRegion(Map<String, String> common, Set<? extends NodeMetadata> input, String region, String group) {Map<String, ? extends NodeMetadata> instancesById = Maps.uniqueIndex(input, instanceId);ImmutableSet.Builder<NodeMetadata> builder = ImmutableSet.<NodeMetadata>builder();if (generateInstanceNames && !common.containsKey(""Name"")) {for (Map.Entry<String, ? extends NodeMetadata> entry : instancesById.entrySet()) {String id = entry.getKey();NodeMetadata instance = entry.getValue();Map<String, String> tags =ImmutableMap.<String, String>builder().putAll(common).put(""Name"", id.replaceAll("".*-"", group + ""-"")).build();client.getTagApiForRegion(region).get().applyToResources(tags, ImmutableSet.of(id));builder.add(addTagsForInstance(tags, instancesById.get(id)));}} else {Iterable<String> ids = instancesById.keySet();client.getTagApiForRegion(region).get().applyToResources(common, ids);for (NodeMetadata in : input) builder.add(addTagsForInstance(common, in));}if (logger.isDebugEnabled()) {Multimap<String, String> filter =new TagFilterBuilder().resourceIds(instancesById.keySet()).build();FluentIterable<Tag> tags = client.getTagApiForRegion(region).get().filter(filter);}return builder.build();}}"	Yes
1146	public class A {private void concurrentDependency(Task task, DependencyParameter dp, GraphHandler gh) {int dataId = dp.getDataAccessId().getDataId();if (!this.concurrentReaders.contains(task)) {if (DEBUG) {}for (AbstractTask t : this.concurrentReaders) {task.addDataDependency(t, dp);if (IS_DRAW_GRAPH) {gh.drawEdges(task, dp, t);}}} else {if (DEBUG) {}task.registerFreeParam(dp);if (IS_DRAW_GRAPH) {gh.drawEdges(task, dp, null);}}}}	Yes
1147	"public class A {@Overridepublic void run() {try {org.apache.commons.io.FileUtils.cleanDirectory(cleanupDir);log.debug(""In shutdown, deleting "" + cleanupDir.getAbsolutePath());org.apache.commons.io.FileUtils.deleteDirectory(cleanupDir);} catch (IOException e) {log.debug(""Unable to clean MrGeo S3 cache directory "" + e.getMessage());}}}"	No
1148	"public class A {@Overridepublic void annotateSequencerRun(int sequencerRunSWID, SequencerRunAttribute sequencerRunAtt, Boolean skip) {try {SequencerRun sequencerRun = ll.findSequencerRun(""/"" + sequencerRunSWID);if (skip != null) {sequencerRun.setSkip(skip);}if (sequencerRunAtt != null) {Set<SequencerRunAttribute> atts = new HashSet<>();atts.add(sequencerRunAtt);sequencerRun.setSequencerRunAttributes(atts);}ll.updateSequencerRun(""/"" + sequencerRunSWID, sequencerRun);} catch (IOException ex) {wrapAsRuntimeException(ex);} catch (JAXBException ex) {wrapAsRuntimeException(ex);} catch (ResourceException ex) {wrapAsRuntimeException(ex);}}}"	Yes
1149	"public class A {private void scheduleLatencyReductionJig() {if (isRunning() && executorQueued.compareAndSet(false, true)) {long now = System.currentTimeMillis();long delay = Math.max(0, (executorTime + minPeriodBetweenExecs) - now);executor.schedule(new Runnable() {public void run() {try {executorTime = System.currentTimeMillis();executorQueued.set(false);if (LOG.isTraceEnabled())LOG.trace(""{} executing follow-the-sun migration-strategy"", this);strategy.rebalance();} catch (RuntimeException e) {if (isRunning()) {LOG.error(""Error during latency-reduction-jig"", e);} else {LOG.debug(""Error during latency-reduction-jig, but no longer running"", e);}}}},delay,TimeUnit.MILLISECONDS);}}}"	No
1150	"public class A {public static List<LayerInfo> getLayers(Catalog catalog, String encodedResourceId) {final WorkspaceInfo workspace = LocalWorkspace.get();if (workspace != null) {encodedResourceId = workspace.getName() + DELIMITER + encodedResourceId;}List<MapEntry<String, String>> decodedList = decode(encodedResourceId);if (decodedList.isEmpty()) {LOGGER.info(""Could not decode id '"" + encodedResourceId + ""'"");return null;}List<LayerInfo> ret = new ArrayList<LayerInfo>();LOGGER.info("" Examining encoded name "" + encodedResourceId);for (MapEntry<String, String> mapEntry : decodedList) {String namespace = mapEntry.getKey();String localName = mapEntry.getValue();if (namespace == null || namespace.isEmpty()) {LOGGER.log(Level.FINE, "" Checking coverage name {0}"", localName);LayerInfo layer = catalog.getLayerByName(localName);if (layer != null) {LOGGER.log(Level.FINE, "" - Collecting layer {0}"", layer.prefixedName());ret.add(layer);} else {LOGGER.log(Level.FINE, "" - Ignoring layer {0}"", localName);}} else {LOGGER.info("" Checking pair "" + namespace + "" : "" + localName);String fullName = namespace + "":"" + localName;NamespaceInfo nsInfo = catalog.getNamespaceByPrefix(namespace);if (nsInfo != null) {LOGGER.log(Level.FINE, "" - Namespace found {0}"", namespace);LayerInfo layer = catalog.getLayerByName(fullName);if (layer != null) {LOGGER.log(Level.FINE, "" - Collecting layer {0} "", layer.prefixedName());ret.add(layer);} else {LOGGER.log(Level.FINE, "" - Ignoring layer {0} "" + fullName);}} else {LOGGER.info("" - Namespace not found "" + namespace);}}}return ret;}}"	No
1151	public class A {public Long addPrivateMessageFolder(String folderName, Long userId) {try {PrivateMessageFolder privateMessageFolder = new PrivateMessageFolder();privateMessageFolder.setFolderName(folderName);privateMessageFolder.setUserId(userId);privateMessageFolder.setInserted(new Date());privateMessageFolder = em.merge(privateMessageFolder);return privateMessageFolder.getId();} catch (Exception e) {}return null;}}	Yes
1152	"public class A {public List<List<Values>> batchRetrieve(List<TridentTuple> tridentTuples) {List<List<Values>> batchRetrieveResult = Lists.newArrayList();try {for (TridentTuple tuple : tridentTuples) {List<Column> columns = options.jdbcLookupMapper.getColumns(tuple);List<List<Column>> rows = jdbcClient.select(options.selectQuery, columns);for (List<Column> row : rows) {List<Values> values = options.jdbcLookupMapper.toTuple(tuple, row);batchRetrieveResult.add(values);}}} catch (Exception e) {LOG.warn(""Batch get operation failed. Triggering replay."", e);throw new FailedException(e);}return batchRetrieveResult;}}"	No
1153	"public class A {void addRow(List<WebElement> tableRows, String title, WebElement dialog) {for (WebElement tableRow : tableRows) {if (Browser.getCellDataByRow(tableRow, 0).equals(title)) {clickLinkOfTableRow(tableRow);try {Thread.sleep(3 * 1000);} catch (InterruptedException e) {Logger logger = LogManager.getLogger(EditPage.class);}Browser.closeDialog(dialog);return;}}throw new NoSuchElementException(""No row for given value found: "" + title);}}"	Yes
1154	"public class A {@Overridepublic synchronized void onCommandQueueChange(Host host) {if (!hasProcessedCommandOnStartup) {LOG.info(""Ignoring command queue change as commands have not yet been executed on startup."");return;}try {HostCommand command = host.getCurrentCommand();if (command == null) {host.nextCommand();} else {LOG.info(""Ignoring command queue change as a command is currently being executed."");}} catch (IOException e) {stop();}}}"	Yes
1155	"public class A {protected EntitySpec<BrooklynNode> newBrooklynNodeSpecForTest() {log.info(""Creating entity spec for "" + JavaClassNames.callerNiceClassAndMethod(1));return EntitySpec.create(BrooklynNode.class).configure(BrooklynNode.WEB_CONSOLE_BIND_ADDRESS, Networking.ANY_NIC).configure(BrooklynNode.ON_EXISTING_PROPERTIES_FILE, ExistingFileBehaviour.DO_NOT_USE);}}"	No
1156	"public class A {public static void sqlSuppLog(Throwable t) {sqlHandLogger.error(""SUPPRESSED : ""+ ExceptionUtils.toString(t)+ '\n'+ ExecutionStackAspect.getExStackTrace());}}"	No
1157	public class A {public void init(ServletContext context) {}}	Yes
1158	"public class A {@Overridepublic Boolean fenceOff(VirtualMachine vm, Host host) {if (host.getHypervisorType() != HypervisorType.XenServer) {s_logger.debug(""Don't know how to fence non XenServer hosts "" + host.getHypervisorType());return null;}List<HostVO> hosts = _resourceMgr.listAllHostsInCluster(host.getClusterId());FenceCommand fence = new FenceCommand(vm, host);for (HostVO h : hosts) {if (h.getHypervisorType() == HypervisorType.XenServer) {if (h.getStatus() != Status.Up) {continue;}if (h.getId() == host.getId()) {continue;}FenceAnswer answer;try {Answer ans = _agentMgr.send(h.getId(), fence);if (!(ans instanceof FenceAnswer)) {s_logger.debug(""Answer is not fenceanswer.  Result = ""+ ans.getResult()+ ""; Details = ""+ ans.getDetails());continue;}answer = (FenceAnswer) ans;} catch (AgentUnavailableException e) {if (s_logger.isDebugEnabled()) {s_logger.debug(""Moving on to the next host because "" + h.toString() + "" is unavailable"", e);}continue;} catch (OperationTimedoutException e) {if (s_logger.isDebugEnabled()) {s_logger.debug(""Moving on to the next host because "" + h.toString() + "" is unavailable"", e);}continue;}if (answer != null && answer.getResult()) {return true;}}}if (s_logger.isDebugEnabled()) {s_logger.debug(""Unable to fence off "" + vm.toString() + "" on "" + host.toString());}return false;}}"	No
1159	"public class A {@Overridepublic DeletedAttachment next() {Long item = this.data.next();try {DeletedAttachment result =HibernateDeletedAttachmentsReader.this.store.getDeletedAttachment(item, HibernateDeletedAttachmentsReader.this.context.get(), true);HibernateDeletedAttachmentsReader.this.logger.debug(""Loaded [{}@{}#{}] from the database trash"",result.getDocName(),result.getFilename(),result.getId());return result;} catch (Exception ex) {}return null;}}"	Yes
1160	"public class A {@Overridepublic KVMPhysicalDisk getPhysicalDisk(String volumePath, KVMStoragePool pool) {if (Strings.isNullOrEmpty(volumePath) || pool == null) {return null;}String volumeId = ScaleIOUtil.getVolumePath(volumePath);try {String diskFilePath = null;String systemId = ScaleIOUtil.getSystemIdForVolume(volumeId);if (!Strings.isNullOrEmpty(systemId) && systemId.length() == ScaleIOUtil.IDENTIFIER_LENGTH) {final String diskFileName = ScaleIOUtil.DISK_NAME_PREFIX + systemId + ""-"" + volumeId;diskFilePath = ScaleIOUtil.DISK_PATH + File.separator + diskFileName;final File diskFile = new File(diskFilePath);if (!diskFile.exists()) {LOGGER.debug(""Physical disk file: ""+ diskFilePath+ "" doesn't exists on the storage pool: ""+ pool.getUuid());return null;}} else {final File dir = new File(ScaleIOUtil.DISK_PATH);final FileFilter fileFilter =new WildcardFileFilter(ScaleIOUtil.DISK_NAME_PREFIX_FILTER + volumeId);final File[] files = dir.listFiles(fileFilter);if (files != null && files.length == 1) {diskFilePath = files[0].getAbsolutePath();} else {return null;}}KVMPhysicalDisk disk = new KVMPhysicalDisk(diskFilePath, volumePath, pool);disk.setFormat(QemuImg.PhysicalDiskFormat.RAW);long diskSize = getPhysicalDiskSize(diskFilePath);disk.setSize(diskSize);disk.setVirtualSize(diskSize);return disk;} catch (Exception e) {throw new CloudRuntimeException(""Failed to get the physical disk: ""+ volumePath+ "" on the storage pool: ""+ pool.getUuid());}}}"	Yes
1161	"public class A {private AttributeImpl overrideAttributeValue(AttributeDescriptor attributeDescriptor, Set<String> overrideValue) {List<Serializable> newValue = new ArrayList<>();for (String override : overrideValue) {try {switch (attributeDescriptor.getType().getAttributeFormat()) {case INTEGER:newValue.add(Integer.parseInt(override));break;case FLOAT:newValue.add(Float.parseFloat(override));break;case DOUBLE:newValue.add(Double.parseDouble(override));break;case SHORT:newValue.add(Short.parseShort(override));break;case LONG:newValue.add(Long.parseLong(override));break;case DATE:Calendar calendar = DatatypeConverter.parseDateTime(override);newValue.add(calendar.getTime());break;case BOOLEAN:newValue.add(Boolean.parseBoolean(override));break;case BINARY:newValue.add(override.getBytes(Charset.forName(""UTF-8"")));break;case OBJECT:case STRING:case GEOMETRY:case XML:newValue.add(override);break;}} catch (IllegalArgumentException e) {LOGGER.debug(""IllegalArgument value [{}] for attribute type [{}] found when performing overrides for""+ "" [{}]"",override,attributeDescriptor.getType().getAttributeFormat(),attributeDescriptor.getName());}}return new AttributeImpl(attributeDescriptor.getName(), newValue);}}"	No
1162	"public class A {private void instantiateAndDestroyPubSubServer()throws IOException, InterruptedException, ConfigurationException, MalformedURLException,Exception {int zkPort = PortManager.nextFreePort();int hwPort = PortManager.nextFreePort();int hwSSLPort = PortManager.nextFreePort();String hedwigParams =""default_server_host=localhost:""+ hwPort+ ""\n""+ ""zk_host=localhost:""+ zkPort+ ""\n""+ ""server_port=""+ hwPort+ ""\n""+ ""ssl_server_port=""+ hwSSLPort+ ""\n""+ ""zk_timeout=2000\n"";File hedwigConfigFile = new File(System.getProperty(""java.io.tmpdir"") + ""/hedwig.cfg"");writeStringToFile(hedwigParams, hedwigConfigFile);ClientBase.setupTestEnv();File zkTmpDir = File.createTempFile(""zookeeper"", ""test"");zkTmpDir.delete();zkTmpDir.mkdir();ZooKeeperServer zks = new ZooKeeperServer(zkTmpDir, zkTmpDir, zkPort);NIOServerCnxnFactory serverFactory = new NIOServerCnxnFactory();serverFactory.configure(new InetSocketAddress(zkPort), 100);serverFactory.startup(zks);boolean b = ClientBase.waitForServerUp(""127.0.0.1:"" + zkPort, 5000);ServerConfiguration serverConf = new ServerConfiguration();serverConf.loadConf(hedwigConfigFile.toURI().toURL());logger.info(""Zookeeper server up and running!"");ZooKeeper zkc = new ZooKeeper(""127.0.0.1:"" + zkPort, 5000, null);zkc.create(""/ledgers"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);zkc.create(""/ledgers/available"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);zkc.close();PubSubServer hedwigServer = null;try {logger.info(""starting hedwig broker!"");hedwigServer = new PubSubServer(serverConf);hedwigServer.start();} catch (Exception e) {e.printStackTrace();}Assert.assertNotNull(""failed to instantiate hedwig pub sub server"", hedwigServer);hedwigServer.shutdown();serverFactory.shutdown();zks.shutdown();zkTmpDir.delete();ClientBase.waitForServerDown(""localhost:"" + zkPort, 10000);}}"	No
1163	public class A {@Overridepublic Map<Date, List<WeblogEntryWrapper>> getEntries() {Date date = parseDate(dateString);Calendar cal = Calendar.getInstance(weblog.getTimeZoneInstance());Date startDate;Date endDate = date;startDate = DateUtil.getStartOfDay(endDate, cal);endDate = DateUtil.getEndOfDay(endDate, cal);if (entries == null) {entries = new TreeMap<>(Collections.reverseOrder());try {WeblogEntrySearchCriteria wesc = new WeblogEntrySearchCriteria();wesc.setWeblog(weblog);wesc.setStartDate(startDate);wesc.setEndDate(endDate);wesc.setCatName(catName);wesc.setTags(tags);wesc.setStatus(WeblogEntry.PubStatus.PUBLISHED);wesc.setLocale(locale);wesc.setOffset(offset);wesc.setMaxResults(length + 1);Map<Date, List<WeblogEntry>> mmap =WebloggerFactory.getWeblogger().getWeblogEntryManager().getWeblogEntryObjectMap(wesc);int count = 0;for (Map.Entry<Date, List<WeblogEntry>> entry : mmap.entrySet()) {List<WeblogEntryWrapper> wrapped = new ArrayList<>();List<WeblogEntry> unwrapped = entry.getValue();for (int i = 0; i < unwrapped.size(); i++) {if (count++ < length) {wrapped.add(i, WeblogEntryWrapper.wrap(unwrapped.get(i), urlStrategy));} else {more = true;}}if (!wrapped.isEmpty()) {entries.put(entry.getKey(), wrapped);}}} catch (Exception e) {}}return entries;}}	Yes
1164	"public class A {protected void completeTransaction(final Transaction tx)throws SystemException, ApplicationException {final boolean shouldRollback;try {shouldRollback = tx.getStatus() != Status.STATUS_ACTIVE;} catch (final javax.transaction.SystemException e) {txLogger.error(""The Transaction Manager has encountered an unexpected error condition while attempting""+ "" to obtain transaction status: {0}"",e.getMessage());throw new SystemException(e);}if (shouldRollback) {rollbackTransaction(tx);return;}try {txLogger.debug(""TX {0}: Committing transaction {1}"", transactionType, tx);if (tx.equals(transactionManager.getTransaction())) {transactionManager.commit();} else {tx.commit();}} catch (final RollbackException e) {txLogger.debug(""The transaction has been rolled back rather than commited: {0}"", e.getMessage());final Throwable txe =new TransactionRolledbackException(""Transaction was rolled back, presumably because setRollbackOnly was called""+ "" during a synchronization"").initCause(e);throw new ApplicationException(txe);} catch (final HeuristicMixedException e) {txLogger.debug(""A heuristic decision was made, some relevant updates have been committed while others""+ "" have been rolled back: {0}"",e.getMessage());throw new ApplicationException(new RemoteException(""A heuristic decision was made, some relevant updates have been committed while""+ "" others have been rolled back"",e));} catch (final HeuristicRollbackException e) {txLogger.debug(""A heuristic decision was made while commiting the transaction, some relevant updates""+ "" have been rolled back: {0}"",e.getMessage());throw new ApplicationException(new RemoteException(""A heuristic decision was made while commiting the transaction, some relevant updates""+ "" have been rolled back"",e));} catch (final SecurityException e) {txLogger.error(""The current thread is not allowed to commit the transaction: {0}"", e.getMessage());throw new SystemException(e);} catch (final IllegalStateException e) {txLogger.error(""The current thread is not associated with a transaction: {0}"", e.getMessage());throw new SystemException(e);} catch (final javax.transaction.SystemException e) {txLogger.error(""The Transaction Manager has encountered an unexpected error condition while attempting""+ "" to commit the transaction: {0}"",e.getMessage());throw new SystemException(e);}}}"	No
1165	"public class A {private UsernamePasswordCredentials tryGetCredentialsEncodedInUsername(final String username, final JsonObject clientContext) {try {final String decoded = new String(Base64.getDecoder().decode(username));final int colonIdx = decoded.indexOf("":"");if (colonIdx > -1) {final String user = decoded.substring(0, colonIdx);final String pass = decoded.substring(colonIdx + 1);return UsernamePasswordCredentials.create(user, pass, clientContext);} else {return null;}} catch (final IllegalArgumentException ex) {return null;}}}"	Yes
1166	"public class A {@Overridepublic void setListener(final Listener callback) {delegate.setListener(() -> {try {repositorySettings.lock(configFile);try {refreshMapping();ProjectIndex projectIndex = externalToInternal.copy();boolean modified = syncProjectIndex(delegate, projectIndex);if (modified) {saveProjectIndex(projectIndex);}} catch (Exception e) {log.warn(e.getMessage(), e);} finally {repositorySettings.unlock(configFile);}} catch (IOException e) {log.warn(""Skip project index updating because thread was interrupted."", e);}if (callback != null) {callback.onChange();}});}}"	No
1167	"public class A {@Overridepublic void replacement(Align align, List<AnnotationBo> annotationBoList) {AnnotationBo collectionInfo =findAnnotation(annotationBoList, MongoConstants.MONGO_COLLECTION_INFO.getCode());AnnotationBo collectionOption =findAnnotation(annotationBoList, MongoConstants.MONGO_COLLECTION_OPTION.getCode());if (collectionInfo != null) {StringBuilder stringBuilder = new StringBuilder();stringBuilder.append(align.getDestinationId()).append(""."").append((String) collectionInfo.getValue());if (collectionOption != null) {stringBuilder.append("" with "").append(((String) collectionOption.getValue()).toUpperCase());}collectionInfo.setValue(stringBuilder);}AnnotationBo jsonAnnotation =findAnnotation(annotationBoList, MongoConstants.MONGO_JSON_DATA.getCode());if (jsonAnnotation == null) {return;}final StringStringValue jsonValue = (StringStringValue) jsonAnnotation.getValue();final String json = jsonValue.getStringValue1();final String jsonbindValue = jsonValue.getStringValue2();if (StringUtils.isEmpty(json)) {} else {AnnotationBo jsonMeta = new AnnotationBo(MongoConstants.MONGO_JSON.getCode(), json);annotationBoList.add(jsonMeta);}if (StringUtils.isNotEmpty(jsonbindValue)) {AnnotationBo bindValueAnnotation =new AnnotationBo(MongoConstants.MONGO_JSON_BINDVALUE.getCode(), jsonbindValue);annotationBoList.add(bindValueAnnotation);}}}"	Yes
1168	"public class A {public IocLoader getIocLoader() {if (conf.has(""dubbo.xmlPaths"")) {log.info(""found dubbo.xmlPaths, use it"");return new DubboIocLoader(Strings.splitIgnoreBlank(conf.get(""dubbo.xmlPaths"", ""dubbo.xml"")));}if (conf.getClass().getClassLoader().getResource(""dubbo.xml"") != null) {log.info(""found dubbo.xml, use it"");return new DubboIocLoader(""dubbo.xml"");}log.debug(""using dubbo configure from PropertiesProxy"");String basePackages = conf.get(""dubbo.annotation.packages"");if (Strings.isBlank(basePackages)) basePackages = appContext.getPackage();conf.put(""dubbo.scan.basePackages"", basePackages);conf.putIfAbsent(""dubbo.protocol.port"", """" + appContext.getServerPort(""dubbo.protocol.port"", 8888));return new DubboConfigIocLoader(ioc, conf);}}"	No
1169	"public class A {public List<ZookeeperRecord> zookeeperInfoList() {String zookeeperServers = getZookeeperQuorum().replaceAll(""[\\t\\n\\x0B\\f\\r]"", """");try {return zookeeperInfoList(zookeeperServers);} catch (Exception e) {}return null;}}"	Yes
1170	public class A {private void registerInterestKeys(Map regionKeys,boolean allKey,LocalRegion region,CacheClientNotifier ccn,CacheClientProxy proxy,boolean isDurable,boolean updatesAsInvalidates,int interestType,Set<String> regionsWithInterest)throws IOException {final boolean isDebugEnabled = logger.isDebugEnabled();if (regionKeys != null) {Iterator iter = regionKeys.entrySet().iterator();while (iter.hasNext()) {Map.Entry e = (Map.Entry) iter.next();String regionName = (String) e.getKey();if (region.getCache().getRegion(regionName) == null) {if (isDebugEnabled) {}} else {boolean manageEmptyRegions = false;if (this.emptyRegionMap != null) {manageEmptyRegions = this.emptyRegionMap.containsKey(regionName);}regionsWithInterest.add(regionName);if (allKey) {ccn.registerClientInterest(regionName,e.getValue(),proxy.getProxyID(),interestType,isDurable,updatesAsInvalidates,manageEmptyRegions,0,false);} else if (InterestType.REGULAR_EXPRESSION == interestType) {for (Iterator i = ((Set) e.getValue()).iterator(); i.hasNext(); ) {ccn.registerClientInterest(regionName,(String) i.next(),proxy.getProxyID(),interestType,isDurable,updatesAsInvalidates,manageEmptyRegions,0,false);}} else {ccn.registerClientInterest(regionName,new ArrayList((Set) e.getValue()),proxy.getProxyID(),isDurable,updatesAsInvalidates,manageEmptyRegions,interestType,false);}}}}}}	Yes
1171	"public class A {@Overridepublic List<AsyncEvent<?, ?>> peek(int size, int timeToWait) throws CacheException {final boolean isTraceEnabled = logger.isTraceEnabled();long start = System.currentTimeMillis();long end = start + timeToWait;if (isTraceEnabled) {logger.trace(""{}: Peek start time={} end time={} time to wait={}"", this, start, end, timeToWait);}List<AsyncEvent<?, ?>> batch =new ArrayList<>(size == BATCH_BASED_ON_TIME_ONLY ? DEFAULT_BATCH_SIZE : size);long lastKey = -1;while (size == BATCH_BASED_ON_TIME_ONLY || batch.size() < size) {KeyAndEventPair pair = peekAhead();if (pair != null) {AsyncEvent<?, ?> object = pair.event;lastKey = pair.key;batch.add(object);} else {long currentTime = System.currentTimeMillis();if (isTraceEnabled) {logger.trace(""{}: Peek current time: {}"", this, currentTime);}if (timeToWait == -1 || (end <= currentTime)) {if (isTraceEnabled) {logger.trace(""{}: Peek breaking"", this);}break;}if (isTraceEnabled) {}try {Thread.sleep(50);} catch (InterruptedException e) {Thread.currentThread().interrupt();break;}continue;}}if (batch.size() > 0) {peekEventsFromIncompleteTransactions(batch, lastKey);}if (isTraceEnabled) {logger.trace(""{}: Peeked a batch of {} entries"", this, batch.size());}return batch;}}"	Yes
1172	"public class A {private Properties fetchProperties(String filename) {Properties properties = new Properties();InputStream input = null;try {input = getClass().getClassLoader().getResourceAsStream(filename);if (input == null) {throw new FileNotFoundException(""Unable to find/open file: "" + filename);}properties.load(input);} catch (IOException ex) {ex.printStackTrace();} finally {if (input != null) {try {input.close();} catch (IOException e) {e.printStackTrace();}}}return properties;}}"	Yes
1173	"public class A {private void configure(final Map<TransferItem, TransferStatus> files,final ConnectionCallback callback,final boolean enabled)throws BackgroundException {final Set<Path> buckets = new HashSet<>();for (TransferItem file : files.keySet()) {buckets.add(containerService.getContainer(file.remote));}for (Path bucket : buckets) {if (enabled) {try {if (this.accelerate(bucket, callback)) {if (log.isInfoEnabled()) {log.info(String.format(""Tunnel upload for file %s through accelerated endpoint %s"",bucket, accelerationService));}accelerationService.configure(true, bucket);break;} else {}} catch (NotfoundException | InteroperabilityException | AccessDeniedException e) {}} else {accelerationService.configure(false, bucket);}}}}"	Yes
1174	public class A {public void deleteBulkRequest(String id, String routing, String parent) {bulkProcessor.add(deleteRequest(index).type(type).id(id).routing(routing).parent(parent));deletedDocuments.incrementAndGet();}}	Yes
1175	"public class A {@SuppressWarnings(""FutureReturnValueIgnored"")public void start() {if (!enabled) {LOG.info(""Debug Capture Manager disabled"");return;}executor = Executors.newScheduledThreadPool(2);executor.scheduleAtFixedRate(this::updateConfig, 0, UPDATE_CONFIG_PERIOD_SEC, TimeUnit.SECONDS);executor.scheduleAtFixedRate(this::maybeSendCapture, 0, SEND_CAPTURE_PERIOD_SEC, TimeUnit.SECONDS);}}"	Yes
1176	"public class A {@Overridepublic Pageable<Path> get() throws JobException, InterruptedException {if (PcapOptions.PRINT_JOB_STATUS.getOrDefault(configuration, Boolean.class, false)&& mrJob != null) {try {mrJob.monitorAndPrintJob();} catch (IOException e) {throw new JobException(""Could not monitor job status"", e);}}for (; ; ) {JobStatus status = getStatus();if (status.getState() == State.SUCCEEDED|| status.getState() == State.KILLED|| status.getState() == State.FAILED) {return getFinalResults();} else {LOG.info(""Percent complete: {}, description: {}"",status.getPercentComplete(),status.getDescription());}Thread.sleep(completeCheckInterval);}}}"	No
1177	"public class A {@Overridepublic Response addEntitlement(UriInfo ui, Entitlement entitlement) {Entitlement createdEntitlement = entitlementDAO.addEntitlement(entitlement);UriBuilder uriBuilder = UriBuilder.fromUri(ui.getRequestUri());uriBuilder.path(""{index}"");URI location = uriBuilder.build(createdEntitlement.getName());return Response.created(location).entity(entitlement).build();}}"	Yes
1178	"public class A {public Object getFromRegionCache(String region, Object key) {Object returnValue = null;if (cacheEnabled) {Cache cache = regionCache.get(region);if (cacheEnabled(region)) {returnValue = cache.get(key);} else {CacheManager.logger.warn(Messages.getInstance().getString(""CacheManager.WARN_0003_REGION_DOES_NOT_EXIST"", region));}} else {CacheManager.logger.warn(Messages.getInstance().getString(""CacheManager.WARN_0001_CACHE_NOT_ENABLED""));}return returnValue;}}"	No
1179	"public class A {public Response wrongPortTypeResponse(String portType, String portId) {TransactionResultEntity entity = new TransactionResultEntity();entity.setResponseCode(ResponseCode.ABORT.getCode());entity.setMessage(""Port was not found."");entity.setFlowFileSent(0);return Response.status(NOT_FOUND).entity(entity).type(MediaType.APPLICATION_JSON_TYPE).build();}}"	Yes
1180	"public class A {@Overridepublic AssetTag findByG_N(long groupId, String name) throws NoSuchTagException {AssetTag assetTag = fetchByG_N(groupId, name);if (assetTag == null) {StringBundler sb = new StringBundler(6);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""groupId="");sb.append(groupId);sb.append("", name="");sb.append(name);sb.append(""}"");if (_log.isDebugEnabled()) {_log.debug(sb.toString());}throw new NoSuchTagException(sb.toString());}return assetTag;}}"	No
1181	"public class A {@Overridepublic void markBackedUp() throws CloudRuntimeException {try {processEvent(Event.OperationNotPerformed);} catch (NoTransitionException ex) {throw new CloudRuntimeException(""Error marking snapshot backed up: "" + this.snapshot.getId() + "" "" + ex.getMessage());}}}"	Yes
1182	public class A {private String[] loadCategoryUtilizers() {String[] beans = null;try {beans =BeanFactoryUtils.beanNamesForTypeIncludingAncestors((ListableBeanFactory) this.getBeanFactory(), CategoryUtilizer.class);} catch (Throwable t) {throw new RuntimeException(t);}return beans;}}	Yes
1183	public class A {public void onComplete(java.lang.Long o) {initiateFlush_result result = new initiateFlush_result();result.success = o;result.setSuccessIsSet(true);try {fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);} catch (org.apache.thrift.transport.TTransportException e) {fb.close();} catch (java.lang.Exception e) {onError(e);}}}	Yes
1184	public class A {@Overridepublic void debug(String msg, Object... args) {logger.debug(msg, args);}}	No
1185	"public class A {@Overridepublic List<String> getConfigTagsByTenant(String tenant) {String sql = ""SELECT tag_name FROM config_tags_relation WHERE tenant_id = ? "";try {return jt.queryForList(sql, new Object[] {tenant}, String.class);} catch (EmptyResultDataAccessException e) {return null;} catch (IncorrectResultSizeDataAccessException e) {return null;} catch (CannotGetJdbcConnectionException e) {throw e;}}}"	Yes
1186	"public class A {@JDIAction(value = ""Collapse '{name}' panel by index '{0}'"", timeout = 1)public void collapse(final int indexNumber) {List<UIElement> expansionIndicator = getExpansionIndicatorLocator();List<UIElement> icons = getIconsLocator();if (!expansionIndicator.isEmpty() && isExpanded(indexNumber)) {expansionIndicator.get(indexNumber).click();} else if (!icons.isEmpty() && isExpanded(indexNumber)) {icons.get(indexNumber).click();} else {logger.debug(""Do nothing to collapse. Is panel expanded: %s"", isExpanded(indexNumber));}waitFor().collapsed(indexNumber);}}"	No
1187	"public class A {private String getSiteID(String tkn, String username) {Map<String, String> cookies = new HashMap<>();cookies.put(""vs"", tkn);try {JSONObject j =Http.url(""https://vsco.co/ajxp/"" + tkn + ""/2.0/sites?subdomain="" + username).cookies(cookies).getJSON();return Integer.toString(j.getJSONArray(""sites"").getJSONObject(0).getInt(""id""));} catch (IOException e) {LOGGER.error(""Could not get site id"");return null;}}}"	No
1188	"public class A {public void run() {try {delegate.onItemRemoved(item);} catch (Throwable t) {LOG.warn(""Error notifying listener of itemAdded("" + item + "")"", t);Exceptions.propagate(t);}}}"	No
1189	"public class A {@Overridepublic void validate() throws InvalidConfigurationException {super.validate();if (this.alternateSystemKey == null || this.alternateSystemKey.equals("" "")) {logger.info(""Provided systemKey value [""+ this.alternateSystemKey+ ""] is invalid. Reverting to default empty String."");this.alternateSystemKey = """";}}}"	No
1190	"public class A {public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb,final int seqid) {final org.apache.thrift.AsyncProcessFunction fcall = this;return new org.apache.thrift.async.AsyncMethodCallback<Void>() {public void onComplete(Void o) {registerInterpreterProcess_result result = new registerInterpreterProcess_result();try {fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);} catch (org.apache.thrift.transport.TTransportException e) {fb.close();} catch (java.lang.Exception e) {onError(e);}}public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;registerInterpreterProcess_result result = new registerInterpreterProcess_result();if (e instanceof org.apache.zeppelin.interpreter.thrift.InterpreterRPCException) {result.ex = (org.apache.zeppelin.interpreter.thrift.InterpreterRPCException) e;result.setExIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {_LOGGER.error(""TTransportException inside handler"", e);fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}};}}"	Yes
1191	"public class A {public void processDump(MwDumpFile dumpFile) {if (dumpFile == null) {return;}MwDumpFileProcessor dumpFileProcessor;switch (dumpFile.getDumpContentType()) {case CURRENT:case DAILY:case FULL:dumpFileProcessor = getRevisionDumpFileProcessor();break;case JSON:dumpFileProcessor = getJsonDumpFileProcessor();break;case SITES:default:logger.error(""Dumps of type ""+ dumpFile.getDumpContentType()+ "" cannot be processed as entity-document dumps."");return;}processDumpFile(dumpFile, dumpFileProcessor);}}"	No
1192	public class A {static List<InetSocketAddress> getAddresses(String s) {List<InetSocketAddress> list = null;if (s != null && !s.isEmpty()) {try {list = parseNodeNames(s);} catch (Exception e) {e.printStackTrace();}}if (list == null) {list = new ArrayList<InetSocketAddress>(0);}return list;}}	Yes
1193	"public class A {protected ControllerServiceDTO updateStateByIdWithRetries(@Nonnull final String id,@Nonnull final String state,final int retries,final int timeout,@Nonnull final TimeUnit timeUnit) {ControllerServiceDTO controllerService = new ControllerServiceDTO();controllerService.setId(id);controllerService.setState(state);controllerService = update(controllerService);for (int count = 0;isPendingState(controllerService.getState(), state) && count < retries;++count) {Uninterruptibles.sleepUninterruptibly(timeout, timeUnit);controllerService =findById(id).orElseThrow(() ->new NifiComponentNotFoundException(id, NifiConstants.NIFI_COMPONENT_TYPE.CONTROLLER_SERVICE, null));}if (state.equals(controllerService.getState())) {return controllerService;} else {String msg = id;try {final List<BulletinDTO> bulletins = getClient().getBulletins(id);if (!bulletins.isEmpty()) {msg = bulletins.get(0).getMessage();}} catch (final ClientErrorException e) {}throw new NifiClientRuntimeException(""Timeout waiting for controller service to be "" + state + "": "" + msg);}}}"	Yes
1194	"public class A {@EventListener(MetamodelEvent.class)public void onMetamodelEvent(final MetamodelEvent event) {log.debug(""received metamodel event {}"", event);if (event.isPostMetamodel() && initialFixtureScript != null) {log.info(""install initial fixtures from script {}"", initialFixtureScript.getFriendlyName());fixtureScripts.run(initialFixtureScript);}}}"	No
1195	"public class A {public UcteNetwork read(BufferedReader reader, Reporter reporter) throws IOException {Reporter readReporter = reporter.createSubReporter(""UcteReading"", ""Reading UCTE network file"");long start = System.currentTimeMillis();UcteNetwork network = new UcteNetworkImpl();UcteRecordParser parser = new UcteRecordParser(reader);parseRecords(parser, network, readReporter);network.fix(readReporter);return network;}}"	Yes
1196	public class A {public void moveToBlocking(Double neck, Double rothead, Double eyeX, Double eyeY, Double jaw, Double rollNeck) {moveTo(neck, rothead, eyeX, eyeY, jaw, rollNeck);waitTargetPos();}}	Yes
1197	"public class A {@Testvoid sendSimpleMessageWithKey(VertxTestContext context) throws InterruptedException {String topic = ""sendSimpleMessageWithKey"";KAFKA_FACADE.createTopic(topic, 1, 1);ProtonClient client = ProtonClient.create(this.vertx);Checkpoint consume = context.checkpoint();client.connect(AmqpBridgeIT.BRIDGE_HOST,AmqpBridgeIT.BRIDGE_PORT,ar -> {if (ar.succeeded()) {ProtonConnection connection = ar.result();connection.open();ProtonSender sender = connection.createSender(null);sender.open();String body = ""Simple message from "" + connection.getContainer();Message message = ProtonHelper.message(topic, body);Properties config = KAFKA_FACADE.getConsumerProperties();config.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);config.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);KafkaConsumer<String, String> consumer = KafkaConsumer.create(this.vertx, config);consumer.handler(record -> {context.verify(() -> assertThat(record.value(), is(body)));context.verify(() -> assertThat(record.key(), is(""my_key"")));consumer.close();consume.flag();});consumer.subscribe(topic,done -> {if (!done.succeeded()) {context.failNow(done.cause());}});Map<Symbol, Object> map = new HashMap<>();map.put(Symbol.valueOf(AmqpBridge.AMQP_KEY_ANNOTATION), ""my_key"");MessageAnnotations messageAnnotations = new MessageAnnotations(map);message.setMessageAnnotations(messageAnnotations);sender.send(ProtonHelper.tag(""my_tag""),message,delivery -> {context.verify(() -> assertThat(Accepted.getInstance(), is(delivery.getRemoteState())));sender.close();connection.close();});} else {context.failNow(ar.cause());}});assertThat(context.awaitCompletion(60, TimeUnit.SECONDS), is(true));}}"	Yes
1198	public class A {@Overridepublic void run() {ThingUID thingUID = firmwareUpdateHandler.getThing().getUID();FirmwareStatusInfo info = getFirmwareStatusInfo(thingUID);firmwareStatusInfoMap.put(thingUID, info);}}	Yes
1199	"public class A {@Overridepublic void close() {for (TcpProxy proxy : proxies) {try {proxy.close();} catch (InterruptedException e) {LOG.error(""Unable to close proxy"", e);}}super.close();}}"	No
1200	"public class A {public static com.liferay.trash.kernel.model.TrashEntryList getEntries(HttpPrincipal httpPrincipal,long groupId,java.lang.String className,int start,int end,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.trash.kernel.model.TrashEntry>obc)throws com.liferay.portal.kernel.security.auth.PrincipalException {try {MethodKey methodKey =new MethodKey(TrashEntryServiceUtil.class, ""getEntries"", _getEntriesParameterTypes7);MethodHandler methodHandler =new MethodHandler(methodKey, groupId, className, start, end, obc);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception e) {if (e instanceof com.liferay.portal.kernel.security.auth.PrincipalException) {throw (com.liferay.portal.kernel.security.auth.PrincipalException) e;}throw new com.liferay.portal.kernel.exception.SystemException(e);}return (com.liferay.trash.kernel.model.TrashEntryList) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException se) {throw se;}}}"	Yes
1201	"public class A {@Overridepublic List<Tag> getTags(Tool tool) {final String repo = tool.getNamespace() + '/' + tool.getName();final List<Tag> tags = new ArrayList<>();final Optional<QuayRepo> toolFromQuay = getToolFromQuay(tool);if (toolFromQuay.isPresent()) {final QuayRepo quayRepo = toolFromQuay.get();final Map<String, QuayTag> tagsFromRepo = quayRepo.getTags();final int maxQuayTagsReturnedByRepo = 500;List<QuayTag> quayTags = new ArrayList<>(tagsFromRepo.values());if (tagsFromRepo.size() == maxQuayTagsReturnedByRepo) {try {quayTags = getAllQuayTags(repo);} catch (ApiException e) {throw new CustomWebApplicationException(""Could not get QuayTag"", HttpStatus.SC_INTERNAL_SERVER_ERROR);}}for (QuayTag tagItem : quayTags) {try {final Tag tag = convertQuayTagToTag(tagItem, tool);tags.add(tag);} catch (IllegalAccessException | InvocationTargetException ex) {}}}String repository = tool.getNamespace() + ""/"" + tool.getName();updateTagsWithBuildInformation(repository, tags, tool);return tags;}}"	Yes
1202	"public class A {private static void logWarnBoxedToPrimitiveType(Class declaringClass, String methodName, Method bestMatch, EPType[] paramTypes) {Class[] parametersMethod = bestMatch.getParameterTypes();for (int i = 0; i < parametersMethod.length; i++) {Class paramMethod = parametersMethod[i];if (!paramMethod.isPrimitive()) {continue;}EPType paramType = paramTypes[i];boolean paramNull = paramType == null || paramType == EPTypeNull.INSTANCE;if (paramNull|| (!declaringClass.getClass().getName().startsWith(""java"")&& JavaClassHelper.getBoxedType(paramMethod)== ((EPTypeClass) paramType).getType())) {String paramTypeStr = paramNull ? ""null"" : ((EPTypeClass) paramType).toSimpleName();return;}}}}"	Yes
1203	"public class A {@Overridepublic void removeProperties(Properties properties) {try {CompositeConfiguration compositeConfiguration =_classLoaderAggregateProperties.getBaseConfiguration();Field field2 = CompositeConfiguration.class.getDeclaredField(""configList"");field2.setAccessible(true);@SuppressWarnings(""unchecked"")List<Configuration> configurations = (List<Configuration>) field2.get(compositeConfiguration);Iterator<Configuration> iterator = configurations.iterator();while (iterator.hasNext()) {Configuration configuration = iterator.next();if (!(configuration instanceof MapConfiguration)) {break;}MapConfiguration mapConfiguration = (MapConfiguration) configuration;if (mapConfiguration.getMap() == (Map<?, ?>) properties) {iterator.remove();_classLoaderAggregateProperties.removeConfiguration(configuration);}}_properties = null;clearCache();} catch (Exception exception) {}}}"	Yes
1204	"public class A {private synchronized ActorSystem createClusterSystem(Config config) {final String clusterName = getClusterName();if (clusterSystem == null) {clusterSystem = ActorSystem.create(clusterName, config);for (RouterProducer routerProducer : routerProducers) {logger.info(""Creating router [{}] for region [{}]"", routerProducer.getRouterPath(), currentRegion);routerProducer.produceRouter(clusterSystem, ""io"");}for (RouterProducer routerProducer : routerProducers) {Iterator<Class> messageTypes = routerProducer.getMessageTypes().iterator();while (messageTypes.hasNext()) {Class messageType = messageTypes.next();logger.info(""createClusterSystem: routerProducer {}: message type={}"",routerProducer.getRouterPath(),messageType.getName());routersByMessageType.put(messageType, routerProducer.getRouterPath());}}Runtime.getRuntime().addShutdownHook(new Thread() {@Overridepublic void run() {leaveCluster();}});}return clusterSystem;}}"	Yes
1205	"public class A {@Overridepublic void run() {do {if (allright.get()) {log.debug(""ERROR DRIVEN MODE: allright = true, cache monitor will wait for an error."");} else {log.debug(""ERROR DRIVEN MODE: allright = false cache monitor running."");}if (allright.get()) {try {lock.lock();trigger.await();} catch (final InterruptedException ignore) {} finally {lock.unlock();}}if (shutdown.get()) {log.info(""Shutting down cache monitor"");dispose();return;}allright.set(true);log.debug(""Cache monitor running."");doWork();try {log.debug(""Cache monitor sleeping for {0} between runs."", idlePeriod);Thread.sleep(idlePeriod);} catch (final InterruptedException ex) {}} while (true);}}"	No
1206	public class A {@Overrideprotected void run(AllocatePrimaryStorageMsg msg, Completion completion) {if (isAllocateSuccess) {completion.success();return;}bus.send(msg,new CloudBusCallBack(completion) {@Overridepublic void run(MessageReply reply) {if (!reply.isSuccess() && (msgs.indexOf(msg) + 1 < msgs.size())) {completion.success();return;} else if (!reply.isSuccess()) {completion.fail(reply.getError());return;}isAllocateSuccess = true;VolumeSpec volumeSpec = new VolumeSpec();AllocatePrimaryStorageReply ar = reply.castReply();volumeSpec.setPrimaryStorageInventory(ar.getPrimaryStorageInventory());volumeSpec.setSize(ar.getSize());volumeSpec.setType(msg.getImageUuid() != null? VolumeType.Root.toString(): VolumeType.Data.toString());spec.getVolumeSpecs().add(volumeSpec);completion.success();}});}}	Yes
1207	"public class A {private void addToProcessQualifiedName(StringBuilder processQualifiedName,Collection<? extends Entity> entities,boolean ignoreHDFSPaths) {if (entities == null) {return;}List<? extends Entity> sortedEntities = new ArrayList<>(entities);Collections.sort(sortedEntities, entityComparator);Set<String> dataSetsProcessed = new HashSet<>();Map<String, Table> tableMap = new HashMap<>();for (Entity entity : sortedEntities) {if (ignoreHDFSPaths&& (Entity.Type.DFS_DIR.equals(entity.getType())|| Entity.Type.LOCAL_DIR.equals(entity.getType()))) {continue;}String qualifiedName = null;long createTime = 0;try {if (entity.getType() == Entity.Type.PARTITION || entity.getType() == Entity.Type.TABLE) {String tableKey = entity.getTable().getDbName() + ""."" + entity.getTable().getTableName();Table table = tableMap.get(tableKey);if (table == null) {table =getHive().getTable(entity.getTable().getDbName(), entity.getTable().getTableName());tableMap.put(tableKey, table);}if (table != null) {createTime = getTableCreateTime(table);qualifiedName = getQualifiedName(table);}} else {qualifiedName = getQualifiedName(entity);}} catch (Exception excp) {}if (qualifiedName == null || !dataSetsProcessed.add(qualifiedName)) {continue;}if (entity instanceof WriteEntity) {WriteEntity writeEntity = (WriteEntity) entity;if (writeEntity.getWriteType() != null&& HiveOperation.QUERY.equals(context.getHiveOperation())) {boolean addWriteType = false;switch (((WriteEntity) entity).getWriteType()) {case INSERT:case INSERT_OVERWRITE:case UPDATE:case DELETE:addWriteType = true;break;case PATH_WRITE:addWriteType = !Entity.Type.LOCAL_DIR.equals(entity.getType());break;}if (addWriteType) {processQualifiedName.append(QNAME_SEP_PROCESS).append(writeEntity.getWriteType().name());}}}processQualifiedName.append(QNAME_SEP_PROCESS).append(qualifiedName.toLowerCase().replaceAll(""/"", """"));if (createTime != 0) {processQualifiedName.append(QNAME_SEP_PROCESS).append(createTime);}}}}"	Yes
1208	public class A {@Overridepublic String get(String basePath, String tmpDir) {if (_isS3) {return _s3.get(basePath, tmpDir);}return _disk.get(basePath, tmpDir);}}	Yes
1209	public class A {protected Object normalizeZclData(ZclDataType dataType, Object data) {try {switch (dataType) {case BOOLEAN:if (data instanceof Integer) {return Boolean.valueOf(!((Integer) data).equals(0));}break;case UNSIGNED_8_BIT_INTEGER:if (data instanceof String) {return Integer.parseInt((String) data);}if (data instanceof Double) {return ((Double) data).intValue();}break;case UNSIGNED_16_BIT_INTEGER:if (data instanceof Double) {return ((Double) data).intValue();}break;case SIGNED_8_BIT_INTEGER:if (data instanceof Double) {return ((Double) data).intValue();}break;case SIGNED_16_BIT_INTEGER:if (data instanceof Double) {return ((Double) data).intValue();}break;default:break;}return data;} catch (NumberFormatException e) {return getDefaultValue(dataType);}}}	Yes
1210	"public class A {public static long[] getRoleUserIds(HttpPrincipal httpPrincipal, long roleId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(UserServiceUtil.class, ""getRoleUserIds"", _getRoleUserIdsParameterTypes34);MethodHandler methodHandler = new MethodHandler(methodKey, roleId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (long[]) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
1211	"public class A {@Overridepublic void storeBulk(List<Event> events) {if (events.isEmpty()) {return;}String project = events.get(0).project();try {bulkClient.upload(project, events, 3);} catch (OutOfMemoryError e) {LOGGER.error(e, ""OOM error while uploading bulk"");throw new RakamException(""Too much data"", HttpResponseStatus.BAD_REQUEST);} catch (Throwable e) {throw new RakamException(""An error occurred while storing events"", INTERNAL_SERVER_ERROR);}}}"	Yes
1212	public class A {@Overrideprotected void doLog(Bundle bundle, ServiceReference sr, int level, String msg, Throwable throwable) {if (level == LOG_ERROR) {logger.error(msg, throwable);} else if (level == LOG_WARNING) {} else if (level == LOG_INFO) {logger.info(msg, throwable);} else if (level == LOG_DEBUG) {}}}	Yes
1213	public class A {@Overridepublic boolean registerTaskManager(final TaskExecutorConnection taskExecutorConnection,SlotReport initialSlotReport,ResourceProfile totalResourceProfile,ResourceProfile defaultSlotResourceProfile) {checkInit();if (taskExecutorManager.isTaskManagerRegistered(taskExecutorConnection.getInstanceID())) {reportSlotStatus(taskExecutorConnection.getInstanceID(), initialSlotReport);return false;} else {if (!taskExecutorManager.registerTaskManager(taskExecutorConnection,initialSlotReport,totalResourceProfile,defaultSlotResourceProfile)) {return false;}for (SlotStatus slotStatus : initialSlotReport) {slotTracker.addSlot(slotStatus.getSlotID(),slotStatus.getResourceProfile(),taskExecutorConnection,slotStatus.getJobID());}checkResourceRequirements();return true;}}}	Yes
1214	"public class A {private void checkHoldRequest() {for (String key : this.pullRequestTable.keySet()) {String[] kArray = key.split(TOPIC_QUEUEID_SEPARATOR);if (2 == kArray.length) {String topic = kArray[0];int queueId = Integer.parseInt(kArray[1]);final long offset =this.brokerController.getMessageStore().getMaxOffsetInQueue(topic, queueId);try {this.notifyMessageArriving(topic, queueId, offset);} catch (Throwable e) {log.error(""check hold request failed. topic={}, queueId={}"", topic, queueId, e);}}}}}"	No
1215	"public class A {public static void main(String[] args) {System.setProperty(PROPERTIES_BASEDIR, ""."");for (String argCommandLine : args) {if (argCommandLine.contains(""config.file.location"")) {String[] argArray = argCommandLine.split(""="");System.setProperty(PROPERTIES_BASEDIR, argArray[1]);}}ApplicationContext applicationContext = SpringApplication.run(WebHookAppStarter.class, args);LOG.debug("" message Application Name ""+ applicationContext.getApplicationName()+ "" instance name ""+ AppProperties.instanceName);SubscriberStatusLogger.getInstance().createSubsriberStatusNode("" Service Started with instance name ""+ AppProperties.instanceName+ "" and context path as ""+ applicationContext.getApplicationName()+ ""."",WebHookConstants.SUCCESS);}}"	Yes
1216	"public class A {public final PacketStatus getOutPackets() {String path = OUTPACKETS_PATH;log.debug("">>  [networkId : '{}']"", this.networkId);Response resp = getObjectToNetwork(this.networkId, path);if (resp == null) {return null;}try {return resp.getBody(PacketStatus.class);} catch (Exception e) {log.error(""Recieved Message Exception."", e);return null;}}}"	No
1217	"public class A {@ApiOperation(httpMethod = ""POST"", value = ""Autofix plan details"")@PostMapping(value = ""/v1/autofix/notifications/detail"")public ResponseEntity<Object> getAutofixProjectionDetail(@RequestBody(required = true) Request request) {try {String assetGroup = request.getAg();Map<String, String> filter = request.getFilter();if (Strings.isNullOrEmpty(assetGroup)) {return ResponseUtils.buildFailureResponse(new Exception(Constants.ASSET_MANDATORY));}if (filter.isEmpty()) {return ResponseUtils.buildFailureResponse(new Exception(Constants.FILTER_MANDATORY));}return ResponseUtils.buildSucessResponse(cloudService.getAutofixProjectionDetail(assetGroup, filter));} catch (Exception e) {LOGGER.error(""Error in getAutofixProjectionDetail "" + e);return ResponseUtils.buildFailureResponse(e);}}}"	No
1218	public class A {@Overridepublic void run() {DataNotificationRequest dataNotificationRequest;while (!Thread.currentThread().isInterrupted()) {try {dataNotificationRequest = delayQueue.take();boolean isUnRegistered = isUnRegistered(dataNotificationRequest);if (isUnRegistered) {continue;}boolean isDataArrived = checkConditions(dataNotificationRequest);if (isDataArrived) {notifyHandler(dataNotificationRequest, DataEvent.STATUS.AVAILABLE);} else {if (dataNotificationRequest.isTimedout()) {notifyHandler(dataNotificationRequest, DataEvent.STATUS.UNAVAILABLE);continue;}dataNotificationRequest.accessed();delayQueue.offer(dataNotificationRequest);}} catch (Throwable e) {}}}}	Yes
1219	"public class A {private static Flux<Val> applyFilterStatementToObject(String id,ObjectNode object,EvaluationContext ctx,Val relativeNode,int stepId,FilterStatement statement) {var fieldFluxes = new ArrayList<Flux<Tuple2<String, Val>>>(object.size());var fields = object.fields();while (fields.hasNext()) {var field = fields.next();log.trace(""inspect field {}"", field);if (field.getKey().equals(id)) {if (stepId == statement.getTarget().getSteps().size() - 1) {log.trace(""final step. select and filter!"");fieldFluxes.add(FilterComponentImplCustom.applyFilterFunction(Val.of(field.getValue()),statement.getArguments(),FunctionUtil.resolveAbsoluteFunctionName(statement.getFsteps(), ctx),ctx,Val.of(object),statement.isEach()).map(val -> Tuples.of(field.getKey(), val)));} else {log.trace(""this step was successful. descent with next step..."");fieldFluxes.add(statement.getTarget().getSteps().get(stepId + 1).applyFilterStatement(Val.of(field.getValue()), ctx, relativeNode, stepId + 1, statement).map(val -> Tuples.of(field.getKey(), val)));}} else {log.trace(""field not matching. just return it as it will not be affected by filtering"");fieldFluxes.add(Flux.just(Tuples.of(field.getKey(), Val.of(field.getValue()))));}}return Flux.combineLatest(fieldFluxes, RepackageUtil::recombineObject);}}"	Yes
1220	"public class A {private void ripNextAlbum() {isRipping = true;Utils.setConfigList(""queue"", (Enumeration<Object>) queueListModel.elements());if (queueListModel.isEmpty()) {isRipping = false;return;}String nextAlbum = (String) queueListModel.remove(0);updateQueue();Thread t = ripAlbum(nextAlbum);if (t == null) {try {Thread.sleep(500);} catch (InterruptedException ie) {LOGGER.error(Utils.getLocalizedString(""interrupted.while.waiting.to.rip.next.album""), ie);}ripNextAlbum();} else {t.start();}}}"	No
1221	"public class A {@Testpublic void testMapProducePointsWithDifferenSizeInScale1() throws Exception {final FeatureSource<SimpleFeatureType, SimpleFeature> fs =testDS.getFeatureSource(""BuildingCenters"");final ReferencedEnvelope env = new ReferencedEnvelope(fs.getBounds(), WGS84);LOGGER.info(""about to create map ctx for BuildingCenters with bounds "" + env);final WMSMapContent map = new WMSMapContent();map.getViewport().setBounds(env);map.setMapWidth(mapWidth);map.setMapHeight(mapHeight);map.setTransparent(false);Style basicStyle = getTestStyle(""BuildingCenters3.sld"");map.addLayer(new FeatureLayer(fs, basicStyle));EncodeHTMLImageMap result = mapProducer.produceMap(map);assertTestResult(""BuildingCenters3"", result);}}"	No
1222	"public class A {private boolean delete(String key) throws AmazonClientException {assert !F.isEmpty(key);if (log.isDebugEnabled())log.debug(""Removing data from S3 [bucket="" + bucketName + "", key="" + key + ']');if (!hasKey(key)) return false;s3.deleteObject(bucketName, key);return true;}}"	No
1223	"public class A {private void showRefAlreadyExistsNotification() {logger.info(""Branch already exists notification"");notificationPaneController.addNotification(""Looks like that branch already exists locally!"");}}"	No
1224	public class A {protected void updateVolume(Volume volume,StorageSystem system,String volumeNativeGuid,StoragePool pool,VirtualArray virtualArray,VirtualPool vPool,UnManagedVolume unManagedVolume,Project project)throws IngestionException {volume.setNativeGuid(volumeNativeGuid);volume.setVirtualPool(vPool.getId());volume.setVirtualArray(virtualArray.getId());volume.setStorageController(system.getId());String systemType =system.checkIfVmax3() ? DiscoveredDataObject.Type.vmax3.name() : system.getSystemType();volume.setSystemType(systemType);volume.setPool(unManagedVolume.getStoragePoolUri());String allocatedCapacity =PropertySetterUtil.extractValueFromStringSet(SupportedVolumeInformation.ALLOCATED_CAPACITY.toString(),unManagedVolume.getVolumeInformation());String provisionedCapacity =PropertySetterUtil.extractValueFromStringSet(SupportedVolumeInformation.PROVISIONED_CAPACITY.toString(),unManagedVolume.getVolumeInformation());volume.setAllocatedCapacity(Long.parseLong(allocatedCapacity));volume.setProvisionedCapacity(Long.parseLong(provisionedCapacity));volume.setCapacity(Long.parseLong(provisionedCapacity));volume.setWWN(unManagedVolume.getWwn());updateBlockObjectNativeIds(volume, unManagedVolume);setProtocol(pool, volume, vPool);volume.setTenant(new NamedURI(project.getTenantOrg().getURI(), volume.getLabel()));volume.setProject(new NamedURI(project.getId(), volume.getLabel()));try {PropertySetterUtil.addVolumeDetails(unManagedVolume.getVolumeInformation(), volume);} catch (Exception e) {throw IngestionException.exceptions.couldNotCreateVolume(e.getLocalizedMessage());}}}	Yes
1225	public class A {private synchronized void revokeHighMemoryTasks() {if (checkPending.getAndSet(false)) {Collection<SqlTask> sqlTasks = requireNonNull(allTasksSupplier.get());for (SqlTask task : sqlTasks) {Optional<TaskContext> taskContext = task.getTaskContext();if (!taskContext.isPresent()) {continue;}long currentTaskRevocableMemory =taskContext.get().getTaskMemoryContext().getRevocableMemory();if (currentTaskRevocableMemory < maxRevocableMemoryPerTask) {continue;}AtomicLong remainingBytesToRevokeAtomic =new AtomicLong(currentTaskRevocableMemory - maxRevocableMemoryPerTask);taskContext.get().accept(new VoidTraversingQueryContextVisitor<AtomicLong>() {@Overridepublic Void visitOperatorContext(OperatorContext operatorContext, AtomicLong remainingBytesToRevoke) {if (remainingBytesToRevoke.get() > 0) {long revokedBytes = operatorContext.requestMemoryRevoking();if (revokedBytes > 0) {remainingBytesToRevoke.addAndGet(-revokedBytes);}}return null;}},remainingBytesToRevokeAtomic);}}}}	Yes
1226	"public class A {private String calLocalSegmentCacheDir() {String kylinHome = KylinConfig.getKylinHome();String indexPathStr = KylinConfig.getInstanceFromEnv().getStreamingIndexPath();String localSegmentCachePath;File indexPath = new File(indexPathStr);if (indexPath.isAbsolute()) {localSegmentCachePath = indexPathStr;} else {if (kylinHome != null && !kylinHome.equals("""")) {File localSegmentFile = new File(kylinHome, indexPathStr);localSegmentCachePath = localSegmentFile.getAbsolutePath();} else {localSegmentCachePath = indexPathStr;}}return localSegmentCachePath;}}"	Yes
1227	"public class A {private <T extends VMInstanceVO> void moveVmToMigratingState(final T vm, final Long hostId, final ItWorkVO work) throws ConcurrentOperationException {try {if (!changeState(vm, Event.MigrationRequested, hostId, work, Step.Migrating)) {s_logger.info(""Migration cancelled because state has changed: "" + vm);throw new ConcurrentOperationException(""Migration cancelled because state has changed: "" + vm);}} catch (final NoTransitionException e) {throw new ConcurrentOperationException(""Migration cancelled because "" + e.getMessage());}}}"	Yes
1228	"public class A {private List<Map<String, String>> buildSolutionSet() throws IOException {StopWatch stopWatch = new StopWatch();stopWatch.start();if (this.matchThreshold != null) {return buildFilterSolutionSet();}ResultSet rs = getResultSet();Set<String> runNames = this.vivoPredicates.keySet();List<Map<String, String>> solSet = new ArrayList<Map<String, String>>();boolean hasResults = false;try {hasResults = rs.hasNext();} catch (java.lang.UnsupportedOperationException ex) {}if (!hasResults) {} else {Map<String, String> tempMap;int rowNum = 0;try {for (QuerySolution solution : IterableAdaptor.adapt(rs)) {rowNum = rs.getRowNumber();String sinputuri = solution.getResource(""sInput"").getURI();String svivouri = solution.getResource(""sVivo"").getURI();tempMap = new HashMap<String, String>();tempMap.put(""sInput"", sinputuri);tempMap.put(""sVivo"", svivouri);for (String runName : runNames) {RDFNode os = solution.get(""os_"" + runName);RDFNode op = solution.get(""op_"" + runName);addRunName(tempMap, runName, os, op);}solSet.add(tempMap);}} catch (java.lang.UnsupportedOperationException ex) {}}stopWatch.stop();return solSet;}}"	Yes
1229	"public class A {@Overridepublic List<QuotaUsageVO> getQuotaUsage(Long accountId,String accountName,Long domainId,Integer usageType,Date startDate,Date endDate) {if ((accountId == null) && (accountName != null) && (domainId != null)) {Account userAccount = null;Account caller = CallContext.current().getCallingAccount();if (_domainDao.isChildDomain(caller.getDomainId(), domainId)) {Filter filter = new Filter(AccountVO.class, ""id"", Boolean.FALSE, null, null);List<AccountVO> accounts = _accountDao.listAccounts(accountName, domainId, filter);if (!accounts.isEmpty()) {userAccount = accounts.get(0);}if (userAccount != null) {accountId = userAccount.getId();} else {throw new InvalidParameterValueException(""Unable to find account "" + accountName + "" in domain "" + domainId);}} else {throw new PermissionDeniedException(""Invalid Domain Id or Account"");}}if (startDate.after(endDate)) {throw new InvalidParameterValueException(""Incorrect Date Range. Start date: "" + startDate + "" is after end date:"" + endDate);}if (endDate.after(_respBldr.startOfNextDay())) {throw new InvalidParameterValueException(""Incorrect Date Range. End date:"" + endDate + "" should not be in future. "");}Date adjustedEndDate = computeAdjustedTime(endDate);Date adjustedStartDate = computeAdjustedTime(startDate);if (s_logger.isDebugEnabled()) {}return _quotaUsageDao.findQuotaUsage(accountId, domainId, usageType, adjustedStartDate, adjustedEndDate);}}"	Yes
1230	"public class A {public Collection<Long> delete(String filter) {final InstanceFilter instanceFilter = new InstanceFilter(filter);final List<Long> ret = new LinkedList<Long>();if (garbage(filter)) {return ret;}try {_db.exec(new BpelDatabase.Callable<Object>() {public Object run(BpelDAOConnection conn) {Collection<ProcessInstanceDAO> instances = conn.instanceQuery(instanceFilter);for (ProcessInstanceDAO instance : instances) {ProcessConf proc =_store.getProcessConfiguration(instance.getProcess().getProcessId());if (proc == null)throw new ProcessNotFoundException(""ProcessNotFound:"" + instance.getProcess().getProcessId());instance.delete(EnumSet.allOf(CLEANUP_CATEGORY.class));ret.add(instance.getInstanceId());}return null;}});} catch (Exception e) {__log.error(""Exception during instance deletion"", e);throw new ProcessingException(""Exception during instance deletion: "" + e.toString());}return ret;}}"	No
1231	"public class A {@Overrideprotected void validate() throws Exception {super.validate();if (retryPolicyProvider == null) {retryPolicyProvider = new RetryPolicyProviderImpl();}if (remoteRetryProvider == null) {remoteRetryProvider =new RemoteRetryProvider() {@Overridepublic Set<String> getUrls() {List<Broker> brokers = clusterManager.getLocalRetryBroker();logger.info(""broker list:{}"", Arrays.toString(brokers.toArray()));Set<String> urlSet = new HashSet<>();for (Broker broker : brokers) {urlSet.add(broker.getIp() + "":"" + broker.getBackEndPort());}return urlSet;}@Overridepublic TransportClient createTransportClient() {ClientConfig clientConfig =TransportConfigSupport.buildClientConfig(propertySupplier, ""retry.remote.client"");clientConfig.setIoThreadName(""joyqueue-retry-io-eventLoop"");return new BrokerTransportClientFactory().create(clientConfig);}};}}}"	No
1232	"public class A {@ContinuousQuery(name = ""CustomerCQ"", query = ""SELECT * FROM /Customers"")public void handleEvent(CqEvent event) {log.info(""Received message for CQ 'CustomerCQ'"" + event);counter.incrementAndGet();}}"	No
1233	"public class A {protected void sendChannelCreatedEvent() {logger.trace(""Channel was created, firing ChannelCreated Event"");channel.pipeline().fireUserEventTriggered(new ConnectEvent());}}"	No
1234	"public class A {@Testpublic void testMergedVocab1() throws Exception {AbstractCache<VocabWord> cacheSource = new AbstractCache.Builder<VocabWord>().build();AbstractCache<VocabWord> cacheTarget = new AbstractCache.Builder<VocabWord>().build();File resource = Resources.asFile(""big/raw_sentences.txt"");BasicLineIterator underlyingIterator = new BasicLineIterator(resource);SentenceTransformer transformer =new SentenceTransformer.Builder().iterator(underlyingIterator).tokenizerFactory(t).build();AbstractSequenceIterator<VocabWord> sequenceIterator =new AbstractSequenceIterator.Builder<>(transformer).build();VocabConstructor<VocabWord> vocabConstructor =new VocabConstructor.Builder<VocabWord>().addSource(sequenceIterator, 1).setTargetVocabCache(cacheSource).build();vocabConstructor.buildJointVocabulary(false, true);int sourceSize = cacheSource.numWords();VocabConstructor<VocabWord> vocabTransfer =new VocabConstructor.Builder<VocabWord>().addSource(sequenceIterator, 1).setTargetVocabCache(cacheTarget).build();vocabTransfer.buildMergedVocabulary(cacheSource, false);assertEquals(sourceSize, cacheTarget.numWords());}}"	Yes
1235	"public class A {private boolean addRegex(MessageEvent e) {String regex = getUrlParameters(((HttpRequest) e.getMessage()).getUri()).get(""regex"");String ip = getUrlParameters(((HttpRequest) e.getMessage()).getUri()).get(""ip"");String port = getUrlParameters(((HttpRequest) e.getMessage()).getUri()).get(""port"");boolean isIpV6 = false;if (ip != null) isIpV6 = LbUtils.isValidInet6Address(ip);logger.info(""regex : "" + regex + "" IP :"" + ip);if (regex != null && ip != null && port != null) {KeySip keySip = new KeySip(ip, Integer.parseInt(port), isIpV6);if (balancerRunner.balancerContext.regexMap == null) {balancerRunner.balancerContext.regexMap = new ConcurrentHashMap<String, KeySip>();balancerRunner.balancerContext.regexMap.put(regex, keySip);return true;} else {balancerRunner.balancerContext.regexMap.put(regex, keySip);return true;}} else if (regex != null) {KeySip keySip = balancerRunner.balancerContext.regexMap.remove(regex);if (keySip != null) {return true;} else {return false;}} else return false;}}"	Yes
1236	"public class A {protected TopicStatus parseTopicStatus(byte[] data) {try {SchemaAndValue schemaAndValue = converter.toConnectData(statusTopic, data);if (!(schemaAndValue.value() instanceof Map)) {log.error(""Invalid topic status value {}"", schemaAndValue.value());return null;}@SuppressWarnings(""unchecked"")Object innerValue = ((Map<String, Object>) schemaAndValue.value()).get(TOPIC_STATE_KEY);if (!(innerValue instanceof Map)) {return null;}@SuppressWarnings(""unchecked"")Map<String, Object> topicStatusMetadata = (Map<String, Object>) innerValue;return new TopicStatus((String) topicStatusMetadata.get(TOPIC_NAME_KEY),(String) topicStatusMetadata.get(TOPIC_CONNECTOR_KEY),((Long) topicStatusMetadata.get(TOPIC_TASK_KEY)).intValue(),(long) topicStatusMetadata.get(TOPIC_DISCOVER_TIMESTAMP_KEY));} catch (Exception e) {return null;}}}"	Yes
1237	"public class A {@Overridepublic void commitJob(JobContext jobContext) throws IOException {if (outputMap.isEmpty()) {return;}if (LOG.isDebugEnabled()) {LOG.debug(MessageFormat.format(""start Direct I/O output job commit: {0} ({1})"",jobContext.getJobID(), jobContext.getJobName()));}long t0 = System.currentTimeMillis();setCommitted(jobContext, true);doCleanupJob(jobContext);if (LOG.isInfoEnabled()) {long t1 = System.currentTimeMillis();LOG.info(MessageFormat.format(""committed Direct I/O output: job={0} ({1}), elapsed={2}ms"",jobContext.getJobID(), jobContext.getJobName(), t1 - t0));}}}"	No
1238	"public class A {public MessageActionResult receiveMessagesTill(ProtocolMessage waitTillMessage, TlsContext context) {context.setTalkingConnectionEndType(context.getChooser().getMyConnectionPeer());MessageActionResult result = new MessageActionResult();try {byte[] receivedBytes;boolean shouldContinue = true;do {receivedBytes = receiveByteArray(context);MessageActionResult tempResult = handleReceivedBytes(receivedBytes, context);result = result.merge(tempResult);for (ProtocolMessage message : result.getMessageList()) {if (message.getClass().equals(waitTillMessage.getClass())) {shouldContinue = false;break;}}} while (receivedBytes.length != 0 && shouldContinue);} catch (IOException ex) {LOGGER.warn(""Received "" + ex.getLocalizedMessage() + "" while recieving for Messages."");context.setReceivedTransportHandlerException(true);}return result;}}"	Yes
1239	"public class A {private void awaitStopTask(ConnectorTaskId taskId, long timeout) {try (LoggingContext loggingContext = LoggingContext.forTask(taskId)) {WorkerTask task = tasks.remove(taskId);if (task == null) {return;}if (!task.awaitStop(timeout)) {task.cancel();} else {log.debug(""Graceful stop of task {} succeeded."", task.id());}try {task.removeMetrics();} finally {connectorStatusMetricsGroup.recordTaskRemoved(taskId);}}}}"	Yes
1240	public class A {@Overridepublic void postCreateTable(ObserverContext<MasterCoprocessorEnvironment> ctx, TableDescriptor desc, RegionInfo[] regions)throws IOException {if (this.createTableStartTime > 0) {long time = System.currentTimeMillis() - this.createTableStartTime;createTableTimer.updateMillis(time);}}}	Yes
1241	"public class A {public boolean isUnwrapped() {try {return defNode.hasProperty(""unwrapped"") || defNode.hasProperty(PN_LAST_UNWRAPPED);} catch (RepositoryException e) {return false;}}}"	Yes
1242	"public class A {public static String getRemoteIpLocalPort(Channel channel) {String remoteIpLocalPort = ""unknown"";try {String remoteIp = ((InetSocketAddress) channel.remoteAddress()).getAddress().getHostAddress();int localPort = ((InetSocketAddress) channel.localAddress()).getPort();return remoteIp + ""->"" + localPort;} catch (Exception e) {logger.warn(""Error parse remote ip and local port from Channel {}"", channel);}return remoteIpLocalPort;}}"	No
1243	"public class A {private void restartBasedOnStartStates() {final Set<? extends String> startStates = getEntity().config().get(SaltConfig.START_STATES);final MutableSet<String> restartStates = addSuffix(startStates, "".restart"");final ProcessTaskWrapper<Integer> queued =queueAndBlock(SaltSshTasks.findStates(restartStates, false).summary(""check restart states""));final String stdout = queued.getStdout();String[] foundStates = Strings.isNonBlank(stdout) ? stdout.split(""\\n"") : null;if (restartStates.size() > 0&& foundStates != null&& (restartStates.size() == foundStates.length)) {applyStates(restartStates);} else if (foundStates != null && foundStates.length > 0) {throw new RuntimeException(""unable to find restart state for all applied states"");} else {invokeEffector(Startable.STOP,ConfigBag.newInstance().configure(SoftwareProcess.StopSoftwareParameters.STOP_PROCESS_MODE, ALWAYS).configure(SoftwareProcess.StopSoftwareParameters.STOP_MACHINE_MODE, NEVER));invokeEffector(Startable.START, ConfigBag.EMPTY);}}}"	Yes
1244	"public class A {@Overridepublic String publish(KuraMessage message) throws KuraException {if (this.cloudServiceImpl == null) {logger.warn(""Null cloud connection"");throw new KuraException(KuraErrorCode.SERVICE_UNAVAILABLE, ""The Cloud Service is null."");}if (message == null) {throw new IllegalArgumentException();}String fullTopic = encodeFullTopic(message);Map<String, Object> publishMessageProps = new HashMap<>();publishMessageProps.put(FULL_TOPIC.name(), fullTopic);publishMessageProps.put(QOS.name(), DFLT_PUB_QOS);publishMessageProps.put(RETAIN.name(), DFLT_RETAIN);publishMessageProps.put(PRIORITY.name(), DFLT_PRIORITY);publishMessageProps.put(CONTROL.name(), true);KuraMessage publishMessage = new KuraMessage(message.getPayload(), publishMessageProps);return this.cloudServiceImpl.publish(publishMessage);}}"	Yes
1245	"public class A {@Overridepublic Reader read() {S3Client s3 = S3ClientFactory.getClient();try {GetObjectRequest.Builder builder =GetObjectRequest.builder().bucket(bucketName).key(s3ObjectSummary.key());GetObjectRequest request = builder.build();ResponseInputStream o = s3.getObject(request);return Channels.newReader(Channels.newChannel(o), encoding.name());} catch (AwsServiceException e) {LOG.error(e.getMessage(), e);throw new FlywayException(""Failed to get object from s3: "" + e.getMessage(), e);}}}"	No
1246	"public class A {@RequestMapping(value = EXTRACTOR_TASKS, method = RequestMethod.GET)public void getTaskQueue(HttpServletRequest request, HttpServletResponse response)throws Exception {List<ExecutionMetadata> taskQueue = extractionManager.getTaskQueue();ExtractorGetTaskQueueResponse responseData =ExtractorGetTaskQueueResponse.newInstance(taskQueue);response.setCharacterEncoding(responseCharset);response.setContentType(""application/json"");PrintWriter out = response.getWriter();try {out.println(responseData.asJsonString());} finally {out.close();}}}"	Yes
1247	"public class A {@Overridepublic void run() {try {final Map<VirtualFile, TranslationSourceFileInfo> compiledSources = new HashMap<>();final Set<VirtualFile> forceRecompile = new HashSet<>();for (TranslatingCompiler.OutputItem item : successfullyCompiled) {final VirtualFile sourceFile = item.getSourceFile();final boolean isSourceValid = sourceFile.isValid();TranslationSourceFileInfo srcInfo = compiledSources.get(sourceFile);if (isSourceValid && srcInfo == null) {srcInfo = TranslationSourceFileInfo.loadSourceInfo(sourceFile);if (srcInfo != null) {srcInfo.clearPaths(projectId);} else {srcInfo = new TranslationSourceFileInfo();}compiledSources.put(sourceFile, srcInfo);}final String outputPath = item.getOutputPath();if (outputPath != null) {final VirtualFile outputFile = lfs.findFileByPath(outputPath);if (outputFile != null) {if (!sourceFile.equals(outputFile)) {final String className =outputRoot == null? null: dependencyCache.relativePathToQName(outputPath.substring(outputRoot.length()), '/');if (isSourceValid) {srcInfo.addOutputPath(projectId, outputFile);TranslationOutputFileInfo.saveOutputInfo(outputFile, new TranslationOutputFileInfo(sourceFile, className));} else {markOutputPathForDeletion(projectId, outputFile, className, sourceFile.getUrl());}}} else {if (isSourceValid) {forceRecompile.add(sourceFile);}}}}final long compilationStartStamp = ((CompileContextEx) context).getStartCompilationStamp();for (Map.Entry<VirtualFile, TranslationSourceFileInfo> entry : compiledSources.entrySet()) {final TranslationSourceFileInfo info = entry.getValue();final VirtualFile file = entry.getKey();final long fileStamp = file.getTimeStamp();info.updateTimestamp(projectId, fileStamp);TranslationSourceFileInfo.saveSourceInfo(file, info);if (LOG.isDebugEnabled() || DEBUG_MODE) {final String message =""Unschedule recompilation (successfully compiled) "" + file.getPresentableUrl();LOG.debug(message);if (DEBUG_MODE) {System.out.println(message);}}removeSourceForRecompilation(projectId, Math.abs(getFileId(file)));if (fileStamp > compilationStartStamp && !((CompileContextEx) context).isGenerated(file)|| forceRecompile.contains(file)) {addSourceForRecompilation(projectId, file, info);}}} catch (IOException e) {exceptions[0] = e;}}}"	Yes
1248	"public class A {private synchronized void writePidFile(final String pid, final Logger logger) throws IOException {final File pidFile = getPidFile(logger);if (pidFile.exists() && !pidFile.delete()) {}if (!pidFile.createNewFile()) {throw new IOException(""Failed to create file "" + pidFile);}try {final Set<PosixFilePermission> perms = new HashSet<>();perms.add(PosixFilePermission.OWNER_READ);perms.add(PosixFilePermission.OWNER_WRITE);Files.setPosixFilePermissions(pidFile.toPath(), perms);} catch (final Exception e) {}try (final FileOutputStream fos = new FileOutputStream(pidFile)) {fos.write(pid.getBytes(StandardCharsets.UTF_8));fos.getFD().sync();}logger.debug(""Saved Pid {} to {}"", new Object[] {pid, pidFile});}}"	Yes
1249	"public class A {@ExceptionHandlerpublic void mapException(IllegalArgumentException exception, HttpServletResponse response)throws IOException {log.info(""Exception"", exception);response.setStatus(HttpServletResponse.SC_CONFLICT);response.setContentType(ContextUtils.CONTENT_TYPE_TEXT);response.getWriter().write(exception.getMessage());}}"	No
1250	public class A {@Overridepublic ColumnValues createValues() {ColumnValues values =valueStore == null ? EmptyColumnValues.instance() : valueStore.createValues();ColumnValues finalValues;if (nullStore == null) {finalValues = values;if (log.isDebugEnabled()) {}} else {ColumnValues nullValues = nullStore.createValues();finalValues = new NullableValues(nullValues, values);if (log.isDebugEnabled()) {}}return finalValues;}}	Yes
1251	public class A {@Overrideprotected void onRender() {super.onRender();RuntimeConfigurationType configurationType = Application.get().getConfigurationType();if (configurationType.equals(RuntimeConfigurationType.DEVELOPMENT)&& !Application.get().getMarkupSettings().getStripWicketTags()) {}}}	Yes
1252	public class A {private void checkHADeployments() {try {if (attainedQuorum) {deployHADeployments();} else {undeployHADeployments();}} catch (Throwable t) {}}}	Yes
1253	"public class A {public void run() {try {currentInterval = Time.currentElapsedTime() / INTERVAL;Thread.sleep(INTERVAL * 2);long min = 99999;long max = 0;long total = 0;int number = 0;while (true) {long now = Time.currentElapsedTime();long lastInterval = currentInterval;currentInterval += 1;long count = remove(lastInterval);count = count * 1000 / INTERVAL;if (lastChange != 0 && (lastChange + INTERVAL * 3) < now) {if (count < min) {min = count;}if (count > max) {max = count;}total += count;number++;Calendar calendar = Calendar.getInstance();calendar.setTimeInMillis(lastInterval * INTERVAL);String report =lastInterval+ "" ""+ calendar.get(Calendar.HOUR_OF_DAY)+ "":""+ calendar.get(Calendar.MINUTE)+ "":""+ calendar.get(Calendar.SECOND)+ "" ""+ percentage+ ""% ""+ count+ "" ""+ min+ "" ""+ ((double) total / (double) number)+ "" ""+ max;LOG.info(report);if (sf != null) {sf.println(report);}} else {max = total = 0;min = 999999999;number = 0;}Thread.sleep(INTERVAL);}} catch (Exception e) {e.printStackTrace();}}}"	No
1254	public class A {protected boolean isConsumersExceededOnTopic() {Integer maxConsumers =getTopicPolicies().map(TopicPolicies::getMaxConsumerPerTopic).orElse(null);if (maxConsumers == null) {Policies policies;try {policies =brokerService.pulsar().getConfigurationCache().policiesCache().getDataIfPresent(AdminResource.path(POLICIES, TopicName.get(topic).getNamespace()));if (policies == null) {policies = new Policies();}} catch (Exception e) {policies = new Policies();}maxConsumers = policies.max_consumers_per_topic;}final int maxConsumersPerTopic =maxConsumers != null? maxConsumers: brokerService.pulsar().getConfiguration().getMaxConsumersPerTopic();if (maxConsumersPerTopic > 0 && maxConsumersPerTopic <= getNumberOfConsumers()) {return true;}return false;}}	Yes
1255	public class A {@Overridepublic void run(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) {if (!_log.isDebugEnabled()) {return;}Runtime runtime = Runtime.getRuntime();NumberFormat nf = NumberFormat.getInstance();String freeMemory = nf.format(runtime.freeMemory());String totalMemory = nf.format(runtime.totalMemory());String maxMemory = nf.format(runtime.maxMemory());}}	Yes
1256	public class A {@Overridepublic boolean isShow(PortletRequest portletRequest) {ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY);PermissionChecker permissionChecker = themeDisplay.getPermissionChecker();if (PortalPermissionUtil.contains(permissionChecker, ActionKeys.EXPORT_USER)) {return true;}try {return PortletPermissionUtil.contains(permissionChecker, UsersAdminPortletKeys.USERS_ADMIN, ActionKeys.EXPORT_USER);} catch (PortalException portalException) {if (_log.isDebugEnabled()) {_log.debug(portalException, portalException);}}return false;}}	No
1257	"public class A {@Overridepublic IplImage process(IplImage image) {if (net == null) {if (netError == false) {log.error(""DNN net is not ready !"");netError = true;}return image;}int h = image.height();int w = image.width();Mat srcMat = grabberConverter.convertToMat(grabberConverter.convert(image));Mat inputMat = new Mat();resize(srcMat, inputMat, new Size(300, 300));Mat blob =blobFromImage(inputMat,1.0,new Size(300, 300),new Scalar(104.0, 177.0, 123.0, 0),false,false,CV_32F);if (blob == null) {return image;}net.setInput(blob);Mat output = net.forward();Mat ne = new Mat(new Size(output.size(3), output.size(2)), CV_32F, output.ptr(0, 0));FloatIndexer srcIndexer = ne.createIndexer();bb.clear();classifications.clear();for (int i = 0; i < output.size(3); i++) {float confidence = srcIndexer.get(i, 2);float f1 = srcIndexer.get(i, 3);float f2 = srcIndexer.get(i, 4);float f3 = srcIndexer.get(i, 5);float f4 = srcIndexer.get(i, 6);if (confidence > threshold) {float tx = f1 * w;float ty = f2 * h;float bx = f3 * w;float by = f4 * h;Rectangle rect = new Rectangle(tx, ty, bx - tx, by - ty);List<Classification> cl = null;Classification classification = new Classification(FACE_LABEL, confidence, rect);if (classifications.containsKey(FACE_LABEL)) {classifications.get(FACE_LABEL).add(classification);} else {cl = new ArrayList<>();cl.add(classification);classifications.put(FACE_LABEL, cl);}bb.add(rect);}}publishClassification(classifications);IplImage result = grabberConverter.convert(converterToIpl.convert(srcMat));ne.close();return result;}}"	No
1258	"public class A {protected boolean validate(String remoteAddress, String queryString, SessionHolder holder, boolean isPost)throws IOException, GeneralSecurityException {if (holder.samlRequest == null || holder.samlRequest.length() == 0) {return false;}if (!this.ignoreIncomingSignatures && !isPost) {String sig = holder.signature;if (sig == null || sig.length() == 0) {log.error(""Signature received from SP is null:"" + remoteAddress);return false;}byte[] sigValue = RedirectBindingSignatureUtil.getSignatureValueFromSignedURL(queryString);if (sigValue == null) return false;PublicKey validatingKey;try {validatingKey = keyManager.getValidatingKey(remoteAddress);} catch (TrustKeyConfigurationException e) {throw new GeneralSecurityException(e.getCause());} catch (TrustKeyProcessingException e) {throw new GeneralSecurityException(e.getCause());}return RedirectBindingSignatureUtil.validateSignature(queryString, validatingKey, sigValue);} else {return true;}}}"	No
1259	public class A {private void join() {while (canRun) {synchronized (this) {try {wait(2000);} catch (InterruptedException e) {}}}}}	Yes
1260	"public class A {@Overridepublic void install(File artifact) throws Exception {logger.info(""Installing Acl {}"", artifact.getAbsolutePath());addAcl(artifact);}}"	No
1261	"public class A {private void loadFormats() {if (formats == null) {formats = new ArrayList<IChemFormat>();try {logger.debug(""Starting loading Formats..."");BufferedReader reader =new BufferedReader(new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream(IO_FORMATS_LIST)));int formatCount = 0;while (reader.ready()) {String formatName = reader.readLine();formatCount++;try {IResourceFormat format =(IResourceFormat)this.getClass().getClassLoader().loadClass(formatName).newInstance();if (format instanceof IChemFormat) {formats.add((IChemFormat) format);}} catch (ClassNotFoundException exception) {} catch (InstantiationException | IllegalAccessException exception) {}}} catch (Exception exception) {}}}}"	Yes
1262	"public class A {public void recordResponse(long startTimestamp, long responseTime) {if (responseTime > highestTrackableValue) {log.warn(""Response time {} exceeded maximum trackable response time {}"",responseTime,highestTrackableValue);responseTime = highestTrackableValue;}long criticalValueAtEnter = recordingPhaser.writerCriticalSectionEnter();try {StatisticsSnapshot active = active(startTimestamp);active.histogram.recordValue(responseTime);active.responseCount++;} finally {recordingPhaser.writerCriticalSectionExit(criticalValueAtEnter);}}}"	No
1263	public class A {private void processReturnVariables(final NsWriteResponse<RefT> response) {if (container != null) {String internalId = null;if (response.getRef() != null) {NsRef ref = NsRef.fromNativeRef(response.getRef());internalId = ref.getInternalId();}try {container.setComponentData(container.getCurrentComponentId(),NetSuiteOutputDefinition.RETURN_LEGACY_CURRENT_INTERNAL_ID,(internalId != null ? Integer.parseInt(internalId) : null));} catch (NumberFormatException e) {}}}}	Yes
1264	"public class A {private void scanForDeviceThings(final EnvoyBridgeHandler envoyHandler, final ThingUID bridgeID) {final Map<String, @Nullable DeviceDTO> devices = envoyHandler.getDevices(true);if (devices == null) {} else {for (final Entry<String, @Nullable DeviceDTO> entry : devices.entrySet()) {final DeviceDTO dto = entry.getValue();final EnphaseDeviceType type = dto == null ? null : EnphaseDeviceType.safeValueOf(dto.type);if (type == EnphaseDeviceType.NSRB) {discover(bridgeID, entry.getKey(), THING_TYPE_ENPHASE_RELAY, ""Relay "");}}}}}"	Yes
1265	"public class A {@VisibleForTestingpublic void validateDateRange(Credential credentialObj) throws OS3Exception {LocalDate date = LocalDate.parse(credentialObj.getDate(), DATE_FORMATTER);LocalDate now = LocalDate.now();if (date.isBefore(now.minus(1, DAYS)) || date.isAfter(now.plus(1, DAYS))) {LOG.error(""AWS date not in valid range. Date:{} should not be older ""+ ""than 1 day(i.e yesterday) and greater than 1 day(i.e ""+ ""tomorrow)."",date);throw S3ErrorTable.newError(MALFORMED_HEADER, authHeader);}}}"	No
1266	public class A {public static com.liferay.commerce.discount.model.CommerceDiscountSoap addCommerceDiscount(long userId,String title,String target,boolean useCouponCode,String couponCode,boolean usePercentage,java.math.BigDecimal maximumDiscountAmount,String level,java.math.BigDecimal level1,java.math.BigDecimal level2,java.math.BigDecimal level3,java.math.BigDecimal level4,String limitationType,int limitationTimes,boolean rulesConjunction,boolean active,int displayDateMonth,int displayDateDay,int displayDateYear,int displayDateHour,int displayDateMinute,int expirationDateMonth,int expirationDateDay,int expirationDateYear,int expirationDateHour,int expirationDateMinute,boolean neverExpire,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.commerce.discount.model.CommerceDiscount returnValue =CommerceDiscountServiceUtil.addCommerceDiscount(userId,title,target,useCouponCode,couponCode,usePercentage,maximumDiscountAmount,level,level1,level2,level3,level4,limitationType,limitationTimes,rulesConjunction,active,displayDateMonth,displayDateDay,displayDateYear,displayDateHour,displayDateMinute,expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,neverExpire,serviceContext);return com.liferay.commerce.discount.model.CommerceDiscountSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
1267	"public class A {@Overridepublic String uploadPictureByUrl(String itemUrl) {java.io.File dest = null;BufferedOutputStream out = null;FileOutputStream os = null;InputStream inputStream = null;String newFileName = System.currentTimeMillis() + "".jpg"";try {URL url = new URL(itemUrl);URLConnection con = url.openConnection();con.setRequestProperty(""User-agent"",""	Mozilla/5.0 (Windows NT 6.1; WOW64; rv:33.0) Gecko/20100101 Firefox/33.0"");con.setConnectTimeout(10000);con.setReadTimeout(10000);inputStream = con.getInputStream();byte[] bs = new byte[1024];int len;String tempFiles = ""temp/"" + newFileName;dest = new java.io.File(tempFiles);if (!dest.getParentFile().exists()) {dest.getParentFile().mkdirs();}os = new FileOutputStream(dest, true);while ((len = inputStream.read(bs)) != -1) {os.write(bs, 0, len);}FileInputStream fileInputStream = new FileInputStream(dest);MultipartFile fileData =new MockMultipartFile(dest.getName(),dest.getName(),ContentType.APPLICATION_OCTET_STREAM.toString(),fileInputStream);out = new BufferedOutputStream(new FileOutputStream(dest));out.write(fileData.getBytes());out.flush();out.close();MultipartFile multipartFile = MoGuFileUtil.fileToMultipartFile(dest);return minioUtil.uploadFile(multipartFile);} catch (Exception e) {throw new InsertException(ErrorCode.SYSTEM_CONFIG_NOT_EXIST, MessageConf.SYSTEM_CONFIG_NOT_EXIST);} finally {if (dest != null && dest.getParentFile().exists()) {dest.delete();}}}}"	Yes
1268	public class A {public static Optional<ServiceBinding> singleMatchingByType(String type, List<ServiceBinding> all) {List<ServiceBinding> allMatching = matchingByType(type, all);if (allMatching.isEmpty()) {return Optional.empty();}ServiceBinding first = allMatching.get(0);if (allMatching.size() > 1) {}return Optional.of(first);}}	Yes
1269	"public class A {@Overridepublic void execute(TupleWindow inputWindow) {List<Tuple> tuplesInWindow = inputWindow.get();List<Tuple> newTuples = inputWindow.getNew();List<Tuple> expiredTuples = inputWindow.getExpired();LOG.debug(""Events in current window: "" + tuplesInWindow.size());for (Tuple tuple : newTuples) {sum += (int) tuple.getValue(0);}for (Tuple tuple : expiredTuples) {sum -= (int) tuple.getValue(0);}collector.emit(new Values(sum));}}"	No
1270	"public class A {@Overridepublic Subject getSubject() {try {tryLogin();} catch (UnauthenticatedException e) {if (!LOG.isDebugEnabled()) {LOG.warn(""Subject login failed from {}: {}"", this.getClass().getName(), e.toString());} else {LOG.error(String.format(""Subject login failed from %s: "", this.getClass().getName()), e);}}return mSubject;}}"	No
1271	"public class A {public boolean delete(Object object) throws DirectoryException {if (logger.isDebugEnabled()) logger.debug(""delete(): type="" + object.getClass());final TypeMapping tm = defaultMappers.get(object.getClass());if (null == tm) throw new IllegalArgumentException(""No mapping for class "" + object.getClass());final Transaction tx = new Transaction(this);try {return tm.delete(object, tx);} catch (final DirectoryException e) {tx.rollback();throw e;} catch (final RuntimeException e) {tx.rollback();throw e;} finally {if (!tx.isClosed()) tx.commit();}}}"	No
1272	"public class A {private static LocalDateTime getEndTimeOf(Path file) {try {long lastModifiedMillis = file.toFile().lastModified();return Instant.ofEpochMilli(lastModifiedMillis).atZone(ZoneId.systemDefault()).toLocalDateTime();} catch (Exception e) {LOGGER.error(""Unable to determine lastModified time"", e);return LocalDateTime.MAX;}}}"	No
1273	"public class A {private Path getZombiePath(ItemId itemId, ChangeLogBasedHierarchyMgr hmgr)throws ItemStateException {try {return prefixPath(hmgr.getZombiePath(itemId));} catch (RepositoryException e) {String msg = ""Unable to resolve zombie path for item: "" + itemId;throw new ItemStateException(msg, e);}}}"	Yes
1274	"public class A {@Testpublic void test() throws Exception {failure = false;shutdown = false;LinkedList<Ignite> nodes = new LinkedList<>();for (int i = 0; i < NODES; i++) nodes.add(Ignition.start(igniteCfg(false, ""server_"" + i)));nodes.getFirst().cluster().state(ACTIVE);Ignite client = Ignition.start(igniteCfg(true, ""client""));new Thread(new Runnable() {@Overridepublic void run() {try {for (int i = 0; i < CYCLES; i++) {System.err.println(""*** CYCLE "" + i);client.cluster().disableWal(CACHE_NAME);Thread.sleep(800);client.cluster().enableWal(CACHE_NAME);Thread.sleep(800);}} catch (IgniteException ex) {if (ex.getMessage().contains(""Operation result is unknown because nodes reported different results"")) {failure = true;}} catch (InterruptedException ex) {return;} catch (Exception ex) {throw new RuntimeException(ex);} finally {shutdown = true;}}}).start();while (!shutdown) {Thread.sleep(1_000);Ignite ignite = nodes.removeFirst();String consistentId = (String) ignite.cluster().localNode().consistentId();ignite.close();Thread.sleep(1_000);nodes.add(startNodeWithMaintenance(consistentId));}assertFalse(failure);}}"	Yes
1275	"public class A {private void waitForRequiredTasks() throws Exception {authenticationContext = getOsgiService(AuthenticationContext.class);waitForUserDataInitializer();RuleManager rm = getOsgiService(RuleManager.class);int count = 0;while (rm.getGlobalType(""auditing"") == null) {waitasec();if (count++ > 100) {throw new IllegalStateException(""auditing-config did not finish in time"");}}count = 0;while (!rm.listImports().contains(OsgiHelper.class.getName())) {waitasec();if (count++ > 100) {throw new IllegalStateException(""auditing-config did not finish in time"");}}count = 0;while (rm.get(new RuleBaseElementId(RuleBaseElementType.Process, ""humantask"")) == null) {waitasec();if (count++ > 100) {throw new IllegalStateException(""taskbox-config did not finish in time"");}}authenticationContext = getOsgiService(AuthenticationContext.class);}}"	Yes
1276	"public class A {@VisibleForTestingvoid updateConfig() {try {GetDebugConfigRequest request =new GetDebugConfigRequest().setComponentId(COMPONENT).setWorkerId(host);GetDebugConfigResponse response =this.client.projects().locations().jobs().getConfig(project, region, job, request).execute();Config config = mapper.readValue(response.getConfig(), Config.class);synchronized (lock) {captureConfig = config;}} catch (Exception e) {LOG.info(""Does not update debug config"", e);}}}"	Yes
1277	"public class A {@Overridepublic String updateDevice(final String netconfNodeId,final String username,final String password,final Map<String, String> updated) {final Node node =NetconfConsoleUtils.read(LogicalDatastoreType.OPERATIONAL,NetconfIidFactory.netconfNodeIid(netconfNodeId),dataBroker);if (node != null && node.augmentation(NetconfNode.class) != null) {final NetconfNode netconfNode = node.augmentation(NetconfNode.class);final String deviceIp =Strings.isNullOrEmpty(updated.get(NetconfConsoleConstants.NETCONF_IP))? netconfNode.getHost().getIpAddress().getIpv4Address().getValue(): updated.get(NetconfConsoleConstants.NETCONF_IP);final String devicePort =Strings.isNullOrEmpty(updated.get(NetconfConsoleConstants.NETCONF_PORT))? netconfNode.getPort().getValue().toString(): updated.get(NetconfConsoleConstants.NETCONF_PORT);final Boolean tcpOnly = updated.get(NetconfConsoleConstants.TCP_ONLY).equals(""true"");final Boolean isSchemaless = updated.get(NetconfConsoleConstants.SCHEMALESS).equals(""true"");final String newUsername =Strings.isNullOrEmpty(updated.get(NetconfConsoleConstants.USERNAME))? updated.get(NetconfConsoleConstants.USERNAME): username;final String newPassword =Strings.isNullOrEmpty(updated.get(NetconfConsoleConstants.PASSWORD))? updated.get(NetconfConsoleConstants.PASSWORD): password;final Node updatedNode =new NodeBuilder().withKey(node.key()).setNodeId(node.getNodeId()).addAugmentation(new NetconfNodeBuilder().setHost(new Host(new IpAddress(new Ipv4Address(deviceIp)))).setPort(new PortNumber(Uint16.valueOf(Integer.decode(devicePort)))).setTcpOnly(tcpOnly).setSchemaless(isSchemaless).setCredentials(new LoginPasswordBuilder().setPassword(newPassword).setUsername(newUsername).build()).build()).build();final WriteTransaction transaction = dataBroker.newWriteOnlyTransaction();transaction.put(LogicalDatastoreType.CONFIGURATION,NetconfIidFactory.netconfNodeIid(updatedNode.getNodeId().getValue()),updatedNode);transaction.commit().addCallback(new FutureCallback<CommitInfo>() {@Overridepublic void onSuccess(final CommitInfo result) {}@Overridepublic void onFailure(final Throwable throwable) {}},MoreExecutors.directExecutor());return ""NETCONF node: "" + netconfNodeId + "" updated successfully."";} else {return ""NETCONF node: "" + netconfNodeId + "" does not exist to update"";}}}"	Yes
1278	"public class A {private void removeRoute(RouteBuilder service) {List<RouteDefinition> routesToBeRemoved = service.getRouteCollection().getRoutes();try {synchronized (camelContext) {camelContext.removeRouteDefinitions(routesToBeRemoved);}} catch (Exception e) {LOG.error(""Error Removing Camel Route Builder"", e);}}}"	Yes
1279	"public class A {public synchronized void internalReadEntryComplete(Entry entry, PendingReadEntryRequest ctx) {if (ctx.isLast()) {readFailureBackoff.reduceToHalf();havePendingRead = false;}if (readBatchSize < serviceConfig.getDispatcherMaxReadBatchSize()) {int newReadBatchSize =Math.min(readBatchSize * 2, serviceConfig.getDispatcherMaxReadBatchSize());if (log.isDebugEnabled()) {}readBatchSize = newReadBatchSize;}Consumer currentConsumer = ACTIVE_CONSUMER_UPDATER.get(this);if (isKeyHashRangeFiltered) {byte[] key = peekStickyKey(entry.getDataBuffer());Consumer consumer = stickyKeyConsumerSelector.select(key);if (consumer == null || currentConsumer != consumer) {entry.release();return;}}Consumer consumer = (Consumer) ctx.ctx;ctx.recycle();if (currentConsumer == null || consumer != currentConsumer) {if (log.isDebugEnabled()) {log.debug(""[{}] Rewind because no available consumer found to dispatch message to."", name);}entry.release();streamingEntryReader.cancelReadRequests();havePendingRead = false;if (currentConsumer != null) {notifyActiveConsumerChanged(currentConsumer);readMoreEntries(currentConsumer);}} else {EntryBatchSizes batchSizes = EntryBatchSizes.get(1);SendMessageInfo sendMessageInfo = SendMessageInfo.getThreadLocal();EntryBatchIndexesAcks batchIndexesAcks = EntryBatchIndexesAcks.get(1);filterEntriesForConsumer(Lists.newArrayList(entry), batchSizes, sendMessageInfo, batchIndexesAcks, cursor, false);cursor.seek(((ManagedLedgerImpl) cursor.getManagedLedger()).getNextValidPosition((PositionImpl) entry.getPosition()));dispatchEntriesToConsumer(currentConsumer,Lists.newArrayList(entry),batchSizes,batchIndexesAcks,sendMessageInfo);}}}"	Yes
1280	"public class A {protected void deactivate(final ComponentContext context) {logger.debug(""deactivating..."");if (this.driverServiceTracker != null) {this.driverServiceTracker.close();}this.executor.shutdown();}}"	Yes
1281	"public class A {private void setDefaults() {try {this.startIndex(ApplicationProperties.get().getLong(APPLICATION_PROPERTY_MIGRATION_START_INDEX, 0L)).numWorkers(ApplicationProperties.get().getInt(APPLICATION_PROPERTY_MIGRATION_NUMER_OF_WORKERS, 4)).batchSize(ApplicationProperties.get().getInt(APPLICATION_PROPERTY_MIGRATION_BATCH_SIZE, 3000));} catch (AtlasException ex) {LOG.error(""setDefaults: failed!"", ex);}}}"	No
1282	"public class A {@Overridepublic void doOnConfigured(final AuthorizerConfigurationContext configurationContext)throws SecurityProviderCreationException {try {final PropertyValue authorizationsPath =configurationContext.getProperty(PROP_AUTHORIZATIONS_FILE);if (StringUtils.isBlank(authorizationsPath.getValue())) {throw new SecurityProviderCreationException(""The authorizations file must be specified."");}authorizationsFile = new File(authorizationsPath.getValue());if (!authorizationsFile.exists()) {saveAuthorizations(new Authorizations());}initialAdminIdentity =AccessPolicyProviderUtils.getInitialAdminIdentity(configurationContext, identityMapper);nifiIdentities =AccessPolicyProviderUtils.getNiFiIdentities(configurationContext, identityMapper);nifiGroupName =AccessPolicyProviderUtils.getNiFiGroupName(configurationContext, identityMapper);load();logger.info(String.format(""Authorizations file loaded at %s"", new Date().toString()));} catch (JAXBException | SAXException e) {throw new SecurityProviderCreationException(e);}}}"	Yes
1283	"public class A {private void addIdeaInstanceGroups(String code, List<String> groups, Connection conn) {if (null == groups || groups.isEmpty()) return;PreparedStatement stat = null;try {stat = conn.prepareStatement(ADD_IDEAINSTANCE_GROUP);Iterator<String> groupIter = groups.iterator();while (groupIter.hasNext()) {String groupName = groupIter.next();int i = 1;stat.setString(i++, code);stat.setString(i++, groupName);stat.addBatch();stat.clearParameters();}stat.executeBatch();} catch (Throwable t) {throw new RuntimeException(""Error creating ideainstance-group relation for "" + code, t);} finally {this.closeDaoResources(null, stat, null);}}}"	Yes
1284	"public class A {private void copyFile(InstallProgressTracker installTracker,File sourceFile,FileDescriptor fileDescriptor,String newFilePath) {try {installTracker.addToBytesCopied(FileUtils.sizeOf(sourceFile));installTracker.incrementRetrievedFiles();Files.copy(sourceFile.toPath(), Paths.get(newFilePath), StandardCopyOption.REPLACE_EXISTING);} catch (IOException e) {LOG.error(""Failed to copy "" + fileDescriptor.getFileName() + "" from "" + sourceFile.getParent(), e);}}}"	Yes
1285	public class A {@Overridepublic void apply(final Traversal.Admin<?, ?> traversal) {try {verify(traversal);} catch (VerificationException ve) {if (throwException) throw ve;}}}	Yes
1286	"public class A {ByteBuffer encrypt(ByteBuffer src) throws SSLException {assert handshakeFinished;assert isHeldByCurrentThread();outNetBuf.clear();while (src.hasRemaining()) {int outNetRemaining = outNetBuf.capacity() - outNetBuf.position();if (outNetRemaining < src.remaining() * 2) {outNetBuf =expandBuffer(outNetBuf,Math.max(outNetBuf.position() + src.remaining() * 2, outNetBuf.capacity() * 2));if (log.isDebugEnabled())}SSLEngineResult res = sslEngine.wrap(src, outNetBuf);if (log.isDebugEnabled())if (res.getStatus() == SSLEngineResult.Status.OK) {if (res.getHandshakeStatus() == NEED_TASK) runTasks();} elsethrow new SSLException(""Failed to encrypt data (SSL engine error) [status=""+ res.getStatus()+ "", handshakeStatus=""+ res.getHandshakeStatus()+ "", ses=""+ ses+ ']');}outNetBuf.flip();return outNetBuf;}}"	Yes
1287	"public class A {@Testpublic void testSpeculativeReadLACOneReplicaDown() throws Exception {LedgerHandle lh = getLedgerToWrite(5, 5, 3);int timeout = 400;BookKeeper bkspec = createClientForReadLAC(timeout);LedgerHandle l = bkspec.openLedgerNoRecovery(lh.getId(), digestType, passwd);lh.addEntry(""Data for test"".getBytes());CountDownLatch sleepLatch = new CountDownLatch(1);long entryId = l.getLastAddConfirmed() + 1;sleepBookie(lh.getLedgerMetadata().getEnsemble(entryId).get(lh.distributionSchedule.getWriteSet(entryId).get(0)),sleepLatch);try {LatchCallback readComplete = new LatchCallback();l.asyncReadLastConfirmedAndEntry(entryId, 10000, false, readComplete, null);readComplete.expectTimeout(timeout);readComplete.expectSuccess(timeout * 2);LOG.info(""Timeout {} latch1 duration {}"", timeout, readComplete.getDuration());assertTrue(""should have taken longer than two timeouts, but less than 3"",readComplete.getDuration() >= timeout && readComplete.getDuration() < timeout * 2);} finally {sleepLatch.countDown();l.close();bkspec.close();}}}"	No
1288	"public class A {public void run() {int count = 0;while (!executor.isOverDefinedMaxLoad()) {Runnable r = lowPriorityTasksQueue.poll();if (r == null) {break;}count++;executor.execute(r);}retryPending.set(false);if (!lowPriorityTasksQueue.isEmpty()) {log.debug(""Executor is under load, will schedule {} remaining tasks for {} ms later"",lowPriorityTasksQueue.size(),LATER_MS);retryLater();}}}"	Yes
1289	"public class A {public static XMLCipher getProviderInstance(String transformation, String provider, String canon)throws XMLEncryptionException {if (log.isDebugEnabled()) {log.debug(""Getting XMLCipher with transformation, provider and c14n algorithm"");}if (null == provider) {throw new NullPointerException(""Provider unexpectedly null.."");}validateTransformation(transformation);return new XMLCipher(transformation, provider, canon, null);}}"	No
1290	"public class A {private void reconnect() {connected.set(false);if (log.isDebugEnabled()) {log.debug(""Attempting reconnect in {}ms"", config.getWebsocketReconnectInterval().toMillis());}Completable.complete().delay(config.getWebsocketReconnectInterval().toMillis(), TimeUnit.MILLISECONDS).subscribe(this::connect);}}"	No
1291	"public class A {@Overrideprotected void onRun() {while ((activeConnections.get() < MAX_CONNECTIONS) || (MAX_CONNECTIONS == -1)) {if (!serverSocket.isClosed()) {try {ClientInputReader clientConnection;Socket clientSocket = serverSocket.accept();clientConnection = new ClientInputReader(clientSocket);Thread t = new Thread(clientConnection);t.start();} catch (SocketException e) {LOG.error(""Server SocketException: "" + e.getMessage());} catch (IOException ioe) {LOG.error(""IOException on socket listen: "", ioe);}}}}}"	No
1292	"public class A {@Overridepublic Map<Long, ContentModel> loadContentModels() {Connection conn = null;Statement stat = null;ResultSet res = null;Map<Long, ContentModel> models = new HashMap<Long, ContentModel>();String query = ALL_CONTENTMODEL;try {conn = this.getConnection();stat = conn.createStatement();res = stat.executeQuery(query);while (res.next()) {ContentModel contentModel = loadContentModel(res);Long wrapLongId = new Long(contentModel.getId());models.put(wrapLongId, contentModel);}} catch (Throwable t) {throw new RuntimeException(""Error loading content models"", t);} finally {closeDaoResources(res, stat, conn);}return models;}}"	Yes
1293	public class A {public void close() {closeSocketAndStreams();}}	Yes
1294	"public class A {public boolean findErrorInJsonGraph(String[] args) {JanusGraph graph = null;try {String janusGraphFileLocation = args[1];String outputDirectory = args[2];graph = openGraph(janusGraphFileLocation);String result = findErrorInJsonGraph(graph, outputDirectory);if (result == null) {return false;}log.info(LOG_FORMATTER, EXPORTED_FILE, result);} catch (Exception e) {log.info(""find Error In Json Graph failed "", e);return false;} finally {if (graph != null) {graph.close();}}return true;}}"	No
1295	"public class A {@PUT@Path(""/id/{topologyId}"")public Response putTopologyOperational(@PathParam(""topologyId"") final String topologyId) {final WriteTransaction tx = databroker.newWriteOnlyTransaction();final Topology topology =new TopologyBuilder().setTopologyId(new TopologyId(topologyId)).build();final InstanceIdentifier<Topology> iid =InstanceIdentifier.create(NetworkTopology.class).child(Topology.class, new TopologyKey(new TopologyId(topologyId)));tx.put(LogicalDatastoreType.OPERATIONAL, iid, topology);try {tx.commit().get(TIMEOUT, TimeUnit.SECONDS);return Response.ok().build();} catch (InterruptedException | ExecutionException | TimeoutException e) {e.printStackTrace();return Response.status(500).build();}}}"	Yes
1296	public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;ping_result result = new ping_result();if (e instanceof ThriftSecurityException) {result.sec = (ThriftSecurityException) e;result.setSecIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}}	Yes
1297	public class A {public static boolean deleteQuietly(File file) {if (file == null) {return false;}try {return file.delete();} catch (Exception e) {return false;}}}	Yes
1298	"public class A {private List<NutResource> getResources(String... paths) {List<NutResource> list = new ArrayList<NutResource>();if (null != keyIndex) {try {String vmJsonStr = """";Properties p = System.getProperties();for (Object key : p.keySet()) {if (((String) key).startsWith(VM_NUTZ_CONF_PATH + keyIndex))vmJsonStr = p.getProperty((String) key).trim();}if (Strings.isNotBlank(vmJsonStr)) {paths = vmJsonStr.split(""\\,"");}} catch (Exception e) {if (log.isDebugEnabled()) {}}}for (String path : paths) {try {List<NutResource> resources = Scans.me().loadResource(""^.+[.]properties$"", path);list.addAll(resources);} catch (Exception e) {if (ignoreResourceNotFound) {if (log.isWarnEnabled()) {log.warn(""Could not load resource from "" + path + "": "" + e.getMessage());}} else {throw Lang.wrapThrow(e);}}}return list;}}"	Yes
1299	public class A {public static synchronized void stopLocalZkServer(final boolean deleteDataDir) {if (_zookeeperServerMain != null) {try {_zookeeperServerMain.shutdown();_zookeeperServerMain = null;if (deleteDataDir) {org.apache.commons.io.FileUtils.deleteDirectory(new File(_zkDataDir));}} catch (Exception e) {throw new RuntimeException(e);}}}}	Yes
1300	"public class A {@Overridepublic int updateHmilyTransactionStatus(final Long transId, final Integer status)throws HmilyRepositoryException {String path = node.getHmilyTransactionRealPath(transId);try {KeyValue keyValue = getKeyValue(path);if (null == keyValue) {return HmilyRepository.FAIL_ROWS;}HmilyTransaction hmilyTransaction =hmilySerializer.deSerialize(keyValue.getValue().getBytes(), HmilyTransaction.class);hmilyTransaction.setStatus(status);hmilyTransaction.setVersion(hmilyTransaction.getVersion() + 1);hmilyTransaction.setUpdateTime(new Date());client.getKVClient().put(ByteSequence.from(path, StandardCharsets.UTF_8),ByteSequence.from(hmilySerializer.serialize(hmilyTransaction)));return HmilyRepository.ROWS;} catch (ExecutionException | InterruptedException e) {log.error(""updateHmilyTransactionStatus occur a exception"", e);return HmilyRepository.FAIL_ROWS;}}}"	No
1301	"public class A {public String getTaskWorkerGroup(TaskInstance taskInstance) {String workerGroup = taskInstance.getWorkerGroup();if (StringUtils.isNotBlank(workerGroup)) {return workerGroup;}int processInstanceId = taskInstance.getProcessInstanceId();ProcessInstance processInstance = findProcessInstanceById(processInstanceId);if (processInstance != null) {return processInstance.getWorkerGroup();}logger.info(""task : {} will use default worker group"", taskInstance.getId());return Constants.DEFAULT_WORKER_GROUP;}}"	No
1302	"public class A {void addTlsCert(String mspid, byte[] cert) {if (IS_TRACE_LEVEL) {logger.trace(format(""Channel %s service discovery MSPID %s adding TLSCert %s"",channelName, mspid, toHexString(cert)));}tlsCerts.computeIfAbsent(mspid, k -> new LinkedList<>()).add(cert);}}"	No
1303	public class A {public static File createTemporaryDirectory() {final File file = Files.createTempDir();Runtime.getRuntime().addShutdownHook(new Thread(() -> {try {FileUtils.deleteDirectory(file);} catch (IOException e) {}}));return file;}}	Yes
1304	"public class A {@SuppressWarnings(""serial"")@Testpublic void godlenRecordTestFivePairs() {String[][] expectResult = new String[][] {{""1"", ""1""}, {""2"", ""2""}, {""4"", ""4""}, {""3"", ""5"", ""3""}};String[][] expectFobiddenList =new String[][] {{""3"", ""4"", ""5""}, {}, {""1"", ""3"", ""5""}, {""1"", ""4""}};List<MatchMergeRule> matchRules = generateMatchMergeRuleList();Callback callback = new MatchMergeCallback(10, 2);Map<String, String[]> forbiddenListMap =new HashMap<String, String[]>() {{put(""4"", new String[] {""3"", ""5""});put(""1"", new String[] {""3"", ""4"", ""5""});}};Iterator<Record> matchMergeInput = generateForbiddenInputRecord(inputData3, forbiddenListMap);try {MatchMergeAlgorithm buildDQMFB = buildDQMFB(matchRules, callback);((DQMFB) buildDQMFB).setHandleGoldenRecord(true);List<Record> matchMergeResults = buildDQMFB.execute(matchMergeInput);validateResult(matchMergeResults, callback, expectResult, expectFobiddenList);} catch (Exception e) {}}}"	Yes
1305	"public class A {@Overridepublic boolean deprecateProfile(String deprecatedOrcid, String primaryOrcid, String deprecatedMethod, String adminUser) {return transactionTemplate.execute(new TransactionCallback<Boolean>() {public Boolean doInTransaction(TransactionStatus status) {boolean wasDeprecated =profileDao.deprecateProfile(deprecatedOrcid, primaryOrcid, deprecatedMethod, adminUser);if (wasDeprecated) {clearRecord(deprecatedOrcid, false);Emails deprecatedAccountEmails = emailManager.getEmails(deprecatedOrcid);if (deprecatedAccountEmails != null) {for (Email email : deprecatedAccountEmails.getEmails()) {LOGGER.info(""About to move email {} from profile {} to profile {}"",new Object[] {email.getEmail(), deprecatedOrcid, primaryOrcid});emailManager.moveEmailToOtherAccount(email.getEmail(), deprecatedOrcid, primaryOrcid);}}profileLastModifiedDao.updateLastModifiedDateAndIndexingStatus(deprecatedOrcid, IndexingStatus.FORCE_INDEXING);return true;}return false;}});}}"	Yes
1306	"public class A {protected String getResponseMIMEType(HttpResponse method) throws IOException {Header[] headers = method.getHeaders(""Content-Type"");for (Header header : headers) {HeaderElement[] headerElements = header.getElements();for (HeaderElement headerEl : headerElements) {String mimeType = headerEl.getName();if (mimeType != null) {return mimeType;}}}return null;}}"	Yes
1307	"public class A {@Testpublic void testRandomApis() throws ParseException {String apis =""UNA:+.? '""+ ""UNB+UNOA:1+SAMPLAIR:NZ+USCS:US+020131:2359+0201312359++CEDIPAX+A+++0'""+ ""UNG+PAXLST+SAMPLECOMM:NZ+TECS:US+020131:2359+0201312359+NZ+001:000'""+ ""UNH+0201312359+PAXLST:001:000:NZ+SA812/020131/2300'""+ ""CTA+IC+:FRED? SAMPLES+1-703-644-5200:TE+1-703-566-8224:FX'""+ ""TDT++SA812+40+SA'""+ ""LOC+005+NZAKL:50'""+ ""DTM+136+020131+1030+M05'""+ ""LOC+008+USLAX:50'""+ ""DTM+132+020131+2200+M05'""+ ""UNS+D'""+ ""PDT+P/182345345:990909:US+MANGUS:SIMON:P:590429:M+PAX+NZAKL:USLAX'""+ ""PDT+P/122222345:970902:US+FEFE:THEODORE:C:560704:U+PAX+NZAKL:USLAX'""+ ""PDT+P/C76543D:920429:GB+BOYLE:ALVIN::521221:U+PAX+NZAKL:USLAX'""+ ""PDT+P/E54321A:980831:IE+O?'LEARY:KRIS:ANN:331231:F+PAX+NZAKL:USLAX'""+ ""UNT+000011+0201312359'""+ ""UNE+1+0201312359'""+ ""UNZ+1+0201312359'"";ApisMessageVo vo = parser.parse(apis);List<FlightVo> flights = vo.getFlights();assertEquals(1, flights.size());assertEquals(4, vo.getPassengers().size());}}"	Yes
1308	"public class A {@Testpublic void testAuthedDatasource() throws Exception {MultiValueMap<String, String> paramsMap = new LinkedMultiValueMap<>();paramsMap.add(""userId"", ""2"");MvcResult mvcResult =mockMvc.perform(get(""/datasources/authed-datasource"").header(""sessionId"", sessionId).params(paramsMap)).andExpect(status().isOk()).andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8)).andReturn();Result result =JSONUtils.parseObject(mvcResult.getResponse().getContentAsString(), Result.class);Assert.assertEquals(Status.SUCCESS.getCode(), result.getCode().intValue());logger.info(mvcResult.getResponse().getContentAsString());}}"	No
1309	public class A {@Testpublic void testFormat() {logger.info(DateTimeUtils.timeAsString(0));logger.info(DateTimeUtils.timeAsString(-1));}}	Yes
1310	"public class A {@GET@Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@Path(""/os-availability-zone"")@CheckPermission(roles = {Role.SYSTEM_MONITOR, Role.TENANT_ADMIN},acls = {ACL.ANY})public CinderAvailZonesResp getAvailabilityZones(@PathParam(""tenant_id"") String openstack_tenant_id) {CinderAvailZonesResp objCinderAvailZonesResp = new CinderAvailZonesResp();List<CinderAvailabiltyZone> az_list = objCinderAvailZonesResp.getAvailabilityZoneInfo();getCinderHelper().getAvailabilityZones(az_list, getUserFromContext());return objCinderAvailZonesResp;}}"	Yes
1311	"public class A {@Overridepublic void seek(Range range, Collection<ByteSequence> columnFamilies, boolean inclusive)throws IOException {lastKey = null;lastValue = null;rangeDone = false;if (null != child) {if (log.isDebugEnabled())child.seek(range, columnFamilies, inclusive);lastKey = child.getTopKey();lastValue = child.getTopValue();if (lastKey == null) {rangeDone = true;}} else {if (log.isDebugEnabled())log.debug(""DeepCopy at ""+ sourceQueue.size()+ "", deepCopies: ""+ deepCopiesCalled+ "", sources: ""+ sources+ "" original source seek to ""+ range);if (null != originalSource) {originalSource.seek(range, columnFamilies, inclusive);if (originalSource.hasTop()) {lastKey = originalSource.getTopKey();lastValue = originalSource.getTopValue();}}}lastRange = range;this.columnFamilies = columnFamilies;this.inclusive = inclusive;}}"	Yes
1312	"public class A {@Inject(value = StrutsConstants.STRUTS_OVERRIDE_ACCEPTED_PATTERNS, required = false)protected void setOverrideAcceptedPatterns(String acceptablePatterns) {LOG.warn(""Overriding accepted patterns [{}] with [{}], be aware that this affects all instances and""+ "" safety of your application!"",acceptedPatterns,acceptablePatterns);acceptedPatterns = new HashSet<>();try {for (String pattern : TextParseUtil.commaDelimitedStringToSet(acceptablePatterns)) {acceptedPatterns.add(Pattern.compile(pattern, Pattern.CASE_INSENSITIVE));}} finally {acceptedPatterns = Collections.unmodifiableSet(acceptedPatterns);}}}"	No
1313	"public class A {public FileReaderSpout withOutputStream(String outputStream) {if (outputStream == null || outputStream.isEmpty()) {String errorString = ""Output stream must not be empty"";LOG.error(errorString);throw new RuntimeException(errorString);}this.outputStream = outputStream;return this;}}"	No
1314	public class A {public static <T> T instantiateByKey(final Properties props, final String key, final T defaultValue) {final String className = findAndSubst(key, props);if (className == null) {return defaultValue;}return OptionConverter.instantiateByClassName(className.trim(), defaultValue);}}	Yes
1315	"public class A {public static void main(String[] args) {try {Runtime.main(new String[] {""--id"", ""admin"", ""--from-launcher""});LoggingFactory.init(Level.INFO);GoogleSearch google = (GoogleSearch) Runtime.start(""google"", ""GoogleSearch"");WebGui webgui = (WebGui) Runtime.create(""webgui"", ""WebGui"");webgui.autoStartBrowser(false);webgui.startService();boolean isDone = true;if (isDone) {return;}List<String> htmlImagePage = google.imageSearch(""gorilla"");for (String image : htmlImagePage) {log.info(image);}SearchResults results = google.search(""gorilla"");log.info(""response - \n{}"", results);results = google.search(""what is a giraffe"");log.info(""response - \n{}"", results);results = google.search(""what is a cat"");log.info(""response - \n{}"", results);results = google.search(""how tall is the empire state building"");log.info(""response - \n{}"", results);} catch (Exception e) {log.error(""main threw"", e);}}}"	No
1316	"public class A {@Overridepublic void stop() {this.getTimerWorkManager().cancel(""OSProcessScanner"");if (log.isTraceEnable()) {log.info(this, ""OSProcessScanner Stopped."");}this.getTimerWorkManager().cancel(""NetworkIoDetector"");if (log.isTraceEnable()) {log.info(this, ""NetworkIoDetector Stopped."");}super.stop();}}"	No
1317	public class A {private VaultToken extend(String clientToken) {VaultRenewSelfAuth auth = vaultInternalTokenAuthMethod.renewSelf(clientToken, null).auth;VaultToken vaultToken =new VaultToken(auth.clientToken, auth.renewable, auth.leaseDurationSecs);sanityCheck(vaultToken);return vaultToken;}}	Yes
1318	"public class A {private boolean hasTemplate(NotificationInstanceWithTemplate instanceWithTemplate) {if (Objects.isNull(instanceWithTemplate.getProgramNotificationTemplate())) {log.warn(""Cannot process scheduled notification with id: ""+ instanceWithTemplate.getProgramNotificationInstance().getId()+ "" since it has no associated templates"");return false;}return true;}}"	No
1319	"public class A {@Overridepublic boolean batchUpdateServiceSchemaContext(String serviceId, ModifySchemasRequest modifySchemasRequest) {try {HttpResponse response =httpClient.postHttpRequest(""/registry/microservices/"" + serviceId + ""/schemas"",null,HttpUtils.serialize(modifySchemasRequest));if (response.getStatusCode() == HttpStatus.SC_OK) {LOGGER.info(""UPDATE SCHEMA OK"");return true;} else {throw new OperationException(""update service schema fails, statusCode = ""+ response.getStatusCode()+ ""; message = ""+ response.getMessage()+ ""; content = ""+ response.getContent());}} catch (IOException e) {throw new OperationException(""update service schema fails"", e);}}}"	No
1320	public class A {public void generateXls(OutputStream out) {long start = System.currentTimeMillis();Workbook wb = new XSSFWorkbook();CellStyle titleCellStyle = wb.createCellStyle();titleCellStyle.setAlignment(HorizontalAlignment.CENTER);createSheets(wb, titleCellStyle);try {wb.write(out);} catch (IOException e) {throw new UncheckedIOException(e);}}}	Yes
1321	public class A {protected List<LightMeasurementDevice> findLightMeasurementDevicesByProtocol(final String protocol) {final List<LightMeasurementDevice> lightMeasurementDevices =this.lightMeasurementDeviceRepository.findByProtocolInfoProtocolAndDeviceLifecycleStatus(protocol, DeviceLifecycleStatus.IN_USE);if (lightMeasurementDevices.isEmpty()) {} else {final String identifications = this.deviceIdentifications(lightMeasurementDevices);}return lightMeasurementDevices;}}	Yes
1322	"public class A {private Entry<String, CycleDto> createZapiCycleIfNoneExist(ProjectDto targetProjectDto, VersionDto targetVersionDto) {final Optional<Entry<String, CycleDto>> targetCycleEntry =getListOfCycles(targetProjectDto.id, targetVersionDto.id);targetCycleEntry.ifPresent(cycleDtoEntry ->return targetCycleEntry.orElseGet(() -> {final String createdCycleId =cycle.createNewCycle(CreateNewCycleDto.newBuilder().cycleLightDto(CycleLightDto.newBuilder().versionId(targetVersionDto.id).projectId(targetProjectDto.id).name(Property.ZAPI_CYCLE_REGEX.getValue()).build()).build()).id;logger.info(() ->format(""Created in Zephyr; [ cycle: %s ] with [ cycleId: %s ]"",Property.ZAPI_CYCLE_REGEX.getValue(), createdCycleId));return getListOfCycles(targetProjectDto.id, targetVersionDto.id).orElseThrow(() ->new NotFoundException(format(""Unable to find in JIRA newly created [ cycle: %s ] with [ cycleId:""+ "" %s ]. Cycle creation may have failed"",Property.ZAPI_CYCLE_REGEX.getValue(), createdCycleId)));});}}"	Yes
1323	"public class A {protected void validatePatch(List<SchemaPatch> patches, SchemaPatch testPatch) {if (testPatch.getPriorVersion() > testPatch.getNextVersion()) {throw new TajoInternalError(""Prior version cannot proceed to next version of patch."");}for (SchemaPatch patch : patches) {if (testPatch.equals(patch)) {continue;}if (testPatch.getPriorVersion() == patch.getPriorVersion()) {if (testPatch.getNextVersion() == patch.getNextVersion()) {throw new TajoInternalError(""Duplicate versions of patch found. It will terminate Catalog Store. "");}}if (testPatch.getNextVersion() == patch.getNextVersion()) {}}}}"	Yes
1324	"public class A {public static <T> String serializeToString(T obj) {String json = """";try {json = objectMapper.writeValueAsString(obj);} catch (JsonProcessingException e) {}return json;}}"	Yes
1325	"public class A {private void clusterIt() {dendrogram = new LinkedPair[numItems - 1];logger.debug(""Initial matrix: \n"" + matrixToString());for (int m = 0; m < numItems - 1; m++) {updateIndicesToCheck(m);LinkedPair pair = getClosestPair();merge(pair);dendrogram[m] = pair;}}}"	No
1326	"public class A {@Overridepublic void write(Cache.Entry<? extends K, ? extends V> entry) {init();Transaction tx = transaction();K key = entry.getKey();V val = entry.getValue();if (log.isDebugEnabled())Connection conn = null;PreparedStatement stmt = null;try {conn = connection(tx);stmt = conn.prepareStatement(updateQry);stmt.setObject(1, toBytes(val));stmt.setObject(2, toBytes(key));if (stmt.executeUpdate() == 0) {stmt.close();stmt = conn.prepareStatement(insertQry);stmt.setObject(1, toBytes(key));stmt.setObject(2, toBytes(val));stmt.executeUpdate();}} catch (IgniteCheckedException | SQLException e) {throw new CacheWriterException(""Failed to put object [key="" + key + "", val="" + val + ']', e);} finally {end(tx, conn, stmt);}}}"	Yes
1327	"public class A {public String disable() {if (getPingTarget() != null) {try {AutoPingManager autoPingMgr = WebloggerFactory.getWeblogger().getAutopingManager();autoPingMgr.removeAutoPing(getPingTarget(), getActionWeblog());WebloggerFactory.getWeblogger().flush();} catch (Exception ex) {log.error(""Error removing auto ping for target - "" + getPingTargetId(), ex);addError(""Error disabling auto ping"");}}return execute();}}"	No
1328	"public class A {public void attachClean(BrFilter instance) {log.debug(""attaching clean BrFilter instance"");try {sessionFactory.getCurrentSession().lock(instance, LockMode.NONE);log.debug(""attach successful"");} catch (RuntimeException re) {log.error(""attach failed"", re);throw re;}}}"	No
1329	public class A {public void testRunStarted(Description description) throws Exception {RequestAttributes ra = new ServletRequestAttributes(new MockHttpServletRequest());RequestContextHolder.setRequestAttributes(ra);}}	Yes
1330	public class A {@Overridepublic void handleTestExecutionException(ExtensionContext context, Throwable throwable)throws Throwable {getResource(context).ifPresent(Cluster::markError);throw throwable;}}	Yes
1331	"public class A {@Overridepublic void onMessage(String message) {int index = messages.length - (int) messageLatch.getCount();assertTrue(equals.apply(messages[index], message));messageLatch.countDown();if (messageLatch.getCount() == 0) {try {session.close();} catch (IOException e) {fail(""Unexpected exception "" + e);}}}}"	Yes
1332	public class A {@Overridepublic void afterJobExecuted(final ShardingContexts shardingContexts) {}}	Yes
1333	"public class A {private <R> R processKieServerStateByOpenShift(Function<OpenShiftClient, R> func) {R result = null;try (OpenShiftClient client = createOpenShiftClient()) {result = func.apply(client);} catch (UnsupportedOperationException uoe) {logger.error(""Processing KieServerState failed - Unsupported"", uoe);throw uoe;} catch (IllegalStateException ise) {throw ise;} catch (Exception e) {}return result;}}"	Yes
1334	"public class A {@ApiOperation(value = ""Returns all work items for a specified process instance."")@ApiResponses(value = {@ApiResponse(code = 500, message = ""Unexpected error""),@ApiResponse(code = 404, message = ""Process instance, Work Item or Container Id not found""),@ApiResponse(code = 403, message = ""User does not have permission to access this asset""),@ApiResponse(code = 200,response = WorkItemInstanceList.class,message = ""Successful response"",examples =@Example(value = {@ExampleProperty(mediaType = JSON,value = GET_PROCESS_INSTANCE_WORK_ITEMS_RESPONSE_JSON)}))})@GET@Path(PROCESS_INSTANCE_WORK_ITEMS_BY_PROC_INST_ID_GET_URI)@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})public Response getWorkItemByProcessInstance(@javax.ws.rs.core.Context HttpHeaders headers,@ApiParam(value = ""container id that process instance belongs to"",required = true,example = ""evaluation_1.0.0-SNAPSHOT"")@PathParam(CONTAINER_ID)String containerId,@ApiParam(value = ""identifier of the process instance that work items belong to"",required = true,example = ""123"")@PathParam(PROCESS_INST_ID)Long processInstanceId) {Variant v = getVariant(headers);String type = getContentType(headers);Header conversationIdHeader = buildConversationIdHeader(containerId, context, headers);try {String response =processServiceBase.getWorkItemByProcessInstance(containerId, processInstanceId, type);return createResponse(response, v, Response.Status.OK, conversationIdHeader);} catch (ProcessInstanceNotFoundException e) {return notFound(MessageFormat.format(PROCESS_INSTANCE_NOT_FOUND, processInstanceId),v,conversationIdHeader);} catch (DeploymentNotFoundException e) {return notFound(MessageFormat.format(CONTAINER_NOT_FOUND, containerId), v, conversationIdHeader);} catch (SecurityException e) {return forbidden(errorMessage(e, e.getMessage()), v, conversationIdHeader);} catch (Exception e) {return internalServerError(errorMessage(e), v, conversationIdHeader);}}}"	Yes
1335	"public class A {public void testDataSource() throws Exception {PortalContainer container = PortalContainer.getInstance();container.getComponentInstanceOfType(InitialContextInitializer.class);DataSource ds = (DataSource) new InitialContext().lookup(""jdbcexo"");assertNotNull(ds);Connection conn = ds.getConnection();DatabaseMetaData databaseMD = conn.getMetaData();String db =databaseMD.getDatabaseProductName()+ "" ""+ databaseMD.getDatabaseProductVersion()+ "".""+ databaseMD.getDatabaseMajorVersion()+ "".""+ databaseMD.getDatabaseMinorVersion();String driver =databaseMD.getDriverName()+ "" ""+ databaseMD.getDriverVersion()+ "".""+ databaseMD.getDriverMajorVersion()+ "".""+ databaseMD.getDriverMinorVersion();conn.close();}}"	Yes
1336	"public class A {public void updateKey(final String organisationIdentification,@Identification final String deviceIdentification,@PublicKey final String publicKey,final Long protocolInfoId)throws FunctionalException {LOGGER.debug(""Updating key for device [{}] on behalf of organisation [{}]"",deviceIdentification,organisationIdentification);final Organisation organisation = this.findOrganisation(organisationIdentification);this.isAllowed(organisation, PlatformFunction.UPDATE_KEY);this.organisationDomainService.isOrganisationEnabled(organisation, ComponentType.WS_ADMIN);final Device device = this.deviceRepository.findByDeviceIdentification(deviceIdentification);if (device == null) {final Ssld ssld = new Ssld(deviceIdentification);final DeviceAuthorization authorization =ssld.addAuthorization(organisation, DeviceFunctionGroup.OWNER);final ProtocolInfo protocolInfo =this.protocolRepository.findById(protocolInfoId).orElseThrow(() ->new EntityNotFoundException(""No protocol info record found with ID: "" + protocolInfoId));ssld.updateProtocol(protocolInfo);this.authorizationRepository.save(authorization);}this.enqueueUpdateKeyRequest(organisationIdentification, deviceIdentification, publicKey);}}"	Yes
1337	"public class A {private int getBloomFilterFlushHourToStartAt() {int bloomFilterFlushHourToStartAt = 0;try {String toHash =InetAddress.getLocalHost().getHostName()+ config.getValue(config.ARGUS_INSTANCE_ID, ""noid"");HashFunction hf = Hashing.murmur3_128();bloomFilterFlushHourToStartAt =Math.abs(hf.newHasher().putString(toHash, Charset.defaultCharset()).hash().asInt() % 24);} catch (UnknownHostException e) {}logger.info(""BloomFilter flush hour to start at {}th hour of day"", bloomFilterFlushHourToStartAt);return bloomFilterFlushHourToStartAt;}}"	Yes
1338	public class A {public void resetOverride() {this.override = null;if (LOGGER.isDebugEnabled()) {}}}	Yes
1339	public class A {@Overridepublic void addRegion(Region region) {final Region previous = regions.put(region.getId(), region);if (previous != null) {}}}	Yes
1340	public class A {@Overridepublic void onClose(int code, String reason) {execWait.release();}}	Yes
1341	"public class A {public static void closeStatement(Statement stmt) {try {if (stmt != null) stmt.close();} catch (Exception e) {e.printStackTrace();logger.warn(""closeStatement(): "" + e);}}}"	No
1342	public class A {private int listIdentifiers(DataStoreGarbageCollector gc) throws DataStoreException {DataStore ds = ((GarbageCollector) gc).getDataStore();Iterator<DataIdentifier> it = ds.getAllIdentifiers();int count = 0;while (it.hasNext()) {DataIdentifier id = it.next();count++;}return count;}}	Yes
1343	"public class A {public BrooklynProperties.Factory.Builder createPropertiesBuilder() {if (brooklynProperties == null) {BrooklynProperties.Factory.Builder builder = BrooklynProperties.Factory.builderDefault();if (Strings.isNonEmpty(globalBrooklynPropertiesFile)) {File globalProperties = new File(Os.tidyPath(globalBrooklynPropertiesFile));if (globalProperties.exists()) {globalProperties = resolveSymbolicLink(globalProperties);checkFileReadable(globalProperties);checkFilePermissionsX00(globalProperties);} else {}builder.globalPropertiesFile(globalProperties.getAbsolutePath());} else {builder.globalPropertiesFile(null);}if (Strings.isNonEmpty(localBrooklynPropertiesFile)) {File localProperties = new File(Os.tidyPath(localBrooklynPropertiesFile));localProperties = resolveSymbolicLink(localProperties);checkFileReadable(localProperties);checkFilePermissionsX00(localProperties);builder.localPropertiesFile(localProperties.getAbsolutePath());}if (propertiesSupplier != null) {builder.propertiesSupplier(propertiesSupplier);}return builder;} else {if (globalBrooklynPropertiesFile != null)LOG.warn(""Ignoring globalBrooklynPropertiesFile ""+ globalBrooklynPropertiesFile+ "" because explicit brooklynProperties supplied"");if (localBrooklynPropertiesFile != null)return Builder.fromProperties(brooklynProperties);}}}"	Yes
1344	"public class A {@Overridepublic void run() {if (!testRunHasFinished) {if (currentTestCaseRunLogTestStepConfig != null) {log.warn(""Step ["" + currentTestStep.getName() + ""] was interrupted due to a timeout"");currentTestCaseRunLogTestStepConfig.setName(currentTestStep.getName());currentTestCaseRunLogTestStepConfig.setStatus(TIMEOUT_STATUS);currentTestCaseRunLogTestStepConfig.setMessageArray(new String[] {TIMEOUT_MESSAGE});}log.warn(TEST_CASE_RUN_WAS_TERMINATED_UNEXPECTEDLY_MESSAGE);saveReportToFile();}}}"	No
1345	"public class A {private synchronized String calculateNextId(boolean init) {if (firstIdRequest) {firstIdRequest = false;while (true) {File file = getFileForId(Integer.toString(nextFreeFileNumber));if (file.exists()) {nextFreeFileNumber++;} else {if (init) {nextFreeFileNumber--;}break;}}} else {nextFreeFileNumber++;}log.debug(""Returning next free ID {}"", nextFreeFileNumber);return Integer.toString(nextFreeFileNumber);}}"	Yes
1346	"public class A {protected RemoteAPIToken getOldTokenId(RemoteAPIToken apiToken) {RemoteAPIToken oldToken = null;try {oldToken = getToken(apiToken.getRemoteApi());logger.trace(""Old token found for service "" + apiToken.getRemoteApi());apiToken.setId(oldToken.getId());} catch (EntityNotFoundException ex) {logger.trace(""No token found for service "" + apiToken.getRemoteApi());}return apiToken;}}"	No
1347	"public class A {private Map<String, EFO> loadEFOTerms() {if (clinvarEFOFile != null) {logger.info(""Loading EFO terms ..."");Map<String, EFO> efoTerms = new HashMap<>();try (Stream<String> linesStream = Files.lines(clinvarEFOFile)) {linesStream.forEach(line -> addEfoTermToMap(line, efoTerms));logger.info(""Done"");return efoTerms;} catch (IOException e) {}} else {}return null;}}"	Yes
1348	public class A {public static void removeAclRefFromIface(@Nonnull InstanceIdentifier<Node> vppIid, @Nonnull InterfaceKey ifaceKey) {GbpNetconfTransaction.netconfSyncedDelete(vppIid,VppIidFactory.getAclInterfaceRef(VppIidFactory.getInterfaceIID(ifaceKey)),GbpNetconfTransaction.RETRY_COUNT);}}	Yes
1349	"public class A {@Overridepublic Object execute() {try {storeCommand();} catch (PersistenceException pe) {console.println(""Encountered an error when trying to perform the command. Check log for more details."");}return null;}}"	Yes
1350	"public class A {private String getClasspath() {final String androidJar = config.getAnalysisFileConfig().getAndroidPlatformDir();final String apkFileLocation = config.getAnalysisFileConfig().getTargetAPKFile();final String additionalClasspath = config.getAnalysisFileConfig().getAdditionalClasspath();String classpath =forceAndroidJar ? androidJar : Scene.v().getAndroidJarPath(androidJar, apkFileLocation);if (additionalClasspath != null && !additionalClasspath.isEmpty())classpath += File.pathSeparator + additionalClasspath;logger.debug(""soot classpath: "" + classpath);return classpath;}}"	No
1351	"public class A {@Testpublic void testReporter() throws Exception {final Path tmpPrometheusDir = tmp.newFolder().toPath().resolve(""prometheus"");final Path prometheusBinDir = tmpPrometheusDir.resolve(PROMETHEUS_FILE_NAME);final Path prometheusConfig = prometheusBinDir.resolve(""prometheus.yml"");final Path prometheusBinary = prometheusBinDir.resolve(""prometheus"");Files.createDirectory(tmpPrometheusDir);final Path prometheusArchive =downloadCache.getOrDownload(""https://github.com/prometheus/prometheus/releases/download/v""+ PROMETHEUS_VERSION+ '/'+ PROMETHEUS_FILE_NAME+ "".tar.gz"",tmpPrometheusDir);LOG.info(""Unpacking Prometheus."");runBlocking(CommandLineWrapper.tar(prometheusArchive).extract().zipped().targetDir(tmpPrometheusDir).build());LOG.info(""Setting Prometheus scrape interval."");runBlocking(CommandLineWrapper.sed(""s/\\(scrape_interval:\\).*/\\1 1s/"", prometheusConfig).inPlace().build());try (ClusterController ignored = dist.startCluster(1)) {final List<Integer> ports =dist.searchAllLogs(LOG_REPORTER_PORT_PATTERN, matcher -> matcher.group(1)).map(Integer::valueOf).collect(Collectors.toList());final String scrapeTargets =ports.stream().map(port -> ""'localhost:"" + port + ""'"").collect(Collectors.joining("", ""));runBlocking(CommandLineWrapper.sed(""s/\\(targets:\\).*/\\1 ["" + scrapeTargets + ""]/"", prometheusConfig).inPlace().build());LOG.info(""Starting Prometheus server."");try (AutoClosableProcess prometheus =runNonBlocking(prometheusBinary.toAbsolutePath().toString(),""--config.file="" + prometheusConfig.toAbsolutePath(),""--storage.tsdb.path="" + prometheusBinDir.resolve(""data"").toAbsolutePath())) {final OkHttpClient client = new OkHttpClient();checkMetricAvailability(client, ""flink_jobmanager_numRegisteredTaskManagers"");checkMetricAvailability(client, ""flink_taskmanager_Status_Network_TotalMemorySegments"");}}}}"	Yes
1352	"public class A {protected void registerMbean() {try {ObjectName objectName =new ObjectName(CertificateGenerator.class.getName() + "":service=certgenerator"");MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();tryRegisterMBean(mBeanServer, objectName);} catch (MalformedObjectNameException e) {LOGGER.error(""Unable to create Certificate Generator MBean."", e);}}}"	No
1353	public class A {@Testpublic void testRWThroughput() throws Exception {ExecutorService e = Executors.newFixedThreadPool(5);final AtomicInteger in = new AtomicInteger();final RollingWindowCapture<SimplePayload> c = new RollingWindowCapture<SimplePayload>(10, 1000);final Random r = new Random();Future[] jobs = new Future[5];for (int i = 0; i < 5; i++) {jobs[i] =e.submit(new Runnable() {@Overridepublic void run() {while (!Thread.interrupted()) {c.addNow(new SimplePayload());in.incrementAndGet();if (r.nextInt() % 97 == 0) {c.visitAllNodes(new CountingVisitor());}}}});}Thread.sleep(10000);e.shutdown();for (int i = 0; i < jobs.length; i++) {jobs[i].cancel(true);}e.awaitTermination(2, TimeUnit.SECONDS);}}	Yes
1354	"public class A {@Overridepublic void onConfigUpdate(Properties updatedConfig) {if (StringHelper.isEmpty((String) updatedConfig.get(""resource.messageproducer.messagesizelimit""))) {return;}long msgSizeLimit =DataConvertHelper.toLong(updatedConfig.get(""resource.messageproducer.messagesizelimit""),MessagingContext.DEFAULT_MSG_SIZE_LIMIT);msgProducer.setMsgSizeLimit(msgSizeLimit);if (log.isTraceEnable()) {}}}"	Yes
1355	"public class A {private static Map<String, String> createSystemConfig(SamzaPipelineOptions options, Map<String, String> config) {final ImmutableMap.Builder<String, String> configBuilder =ImmutableMap.<String, String>builder().put(""stores.beamStore.key.serde"", ""byteArraySerde"").put(""stores.beamStore.msg.serde"", ""stateValueSerde"").put(""serializers.registry.stateValueSerde.class"",SamzaStoreStateInternals.StateValueSerdeFactory.class.getName()).put(""serializers.registry.byteArraySerde.class"",SamzaStoreStateInternals.ByteArraySerdeFactory.class.getName());if (!config.containsKey(BEAM_STORE_FACTORY)) {options.setStateDurable(false);configBuilder.put(BEAM_STORE_FACTORY,""org.apache.samza.storage.kv.inmemory.InMemoryKeyValueStorageEngineFactory"");}LOG.info(""Execution environment is "" + options.getSamzaExecutionEnvironment());switch (options.getSamzaExecutionEnvironment()) {case YARN:configBuilder.putAll(yarnRunConfig());break;case STANDALONE:configBuilder.putAll(standAloneRunConfig());break;default:configBuilder.putAll(localRunConfig());break;}configBuilder.put(""samza.li.task.wrapper.enabled"", ""false"");return configBuilder.build();}}"	No
1356	"public class A {public final Source invoke(Source request) {QName operationQName = (QName) context.getMessageContext().get(MessageContext.WSDL_OPERATION);GenericOperation esbProviderCallback = getESBProviderCallback(operationQName.getLocalPart());if (esbProviderCallback == null) {throw new RuntimeException(""Handler for operation "" + operationQName + "" cannot be found"");}try {Document requestDoc = null;if (request != null) {ByteArrayOutputStream os = new ByteArrayOutputStream();StaxUtils.copy(request, os);requestDoc = new SAXReader().read(new ByteArrayInputStream(os.toByteArray()));} else {requestDoc = DocumentHelper.createDocument();requestDoc.addElement(""root"", """");}Object payload;if (extractHeaders) {Map<String, Object> esbRequest = new HashMap<String, Object>();esbRequest.put(ESBProviderCallback.HEADERS_SOAP, context.getMessageContext().get(Header.HEADER_LIST));esbRequest.put(ESBProviderCallback.HEADERS_HTTP,context.getMessageContext().get(MessageContext.HTTP_REQUEST_HEADERS));esbRequest.put(ESBProviderCallback.REQUEST, requestDoc);esbRequest.put(CorrelationIDFeature.MESSAGE_CORRELATION_ID,context.getMessageContext().get(CorrelationIDFeature.MESSAGE_CORRELATION_ID));payload = esbRequest;} else {payload = requestDoc;}LOG.fine(""Generic provider invoked with payload: "" + payload);Object result =esbProviderCallback.invoke(payload, isOperationRequestResponse(operationQName.getLocalPart()));if (result == null) {return null;}LOG.fine(""Generic provider callback returns: "" + result);if (result instanceof Map<?, ?>) {Map<String, Object> map = CastUtils.cast((Map<?, ?>) result);return processResult(map.get(ESBEndpointConstants.REQUEST_PAYLOAD));} else {return processResult(result);}} catch (RuntimeException e) {throw e;} catch (Exception e) {throw new RuntimeException(e);}}}"	Yes
1357	"public class A {public static int getCategoriesCount(HttpPrincipal httpPrincipal, long classNameId, long classPK) {try {MethodKey methodKey =new MethodKey(AssetCategoryServiceUtil.class,""getCategoriesCount"",_getCategoriesCountParameterTypes7);MethodHandler methodHandler = new MethodHandler(methodKey, classNameId, classPK);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Integer) returnObj).intValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
1358	"public class A {@Overridepublic Response toResponse(NotFoundException exception) {if (logger.isDebugEnabled()) {logger.debug(StringUtils.EMPTY, exception);}return Response.status(Response.Status.NOT_FOUND).entity(exception.getMessage()).type(""text/plain"").build();}}"	Yes
1359	"public class A {@Testpublic void testPointsAreAlwaysRenderedAsCircles() throws Exception {final String s = ""VariousPoints"";FeatureSource<SimpleFeatureType, SimpleFeature> fs = testDS.getFeatureSource(s);ReferencedEnvelope env = new ReferencedEnvelope(fs.getBounds(), WGS84);WMSMapContent map = new WMSMapContent();map.getViewport().setBounds(env);map.setMapWidth(mapWidth);map.setMapHeight(mapHeight);map.setTransparent(false);Style basicStyle = getTestStyle(String.format(""%s.sld"", s));map.addLayer(new FeatureLayer(fs, basicStyle));EncodeHTMLImageMap result = mapProducer.produceMap(map);assertTestResult(s, result);}}"	Yes
1360	"public class A {@Testpublic void createCredentialStoreAsInEAP() throws Exception {Security.addProvider(new WildFlyElytronProvider());new File(""target/my-cstore-1.p12"").delete();CredentialStore cs =CredentialStore.getInstance(KeyStoreCredentialStore.KEY_STORE_CREDENTIAL_STORE);assertNotNull(cs);Field spi = cs.getClass().getDeclaredField(""spi"");spi.setAccessible(true);LOG.info(""Store: {}, type: {}"", spi.get(cs).getClass().getName(), cs.getType());assertFalse(cs.isInitialized());Map<String, String> parameters = new HashMap<>();parameters.put(""create"", ""true"");parameters.put(""keyStoreType"", ""PKCS12"");parameters.put(""location"", ""target/my-cstore-1.p12"");ClearPassword clearPassword =ClearPassword.createRaw(ClearPassword.ALGORITHM_CLEAR, ""STORE_PASSWORD"".toCharArray());Credential credential = new PasswordCredential(clearPassword);CredentialSource source = IdentityCredentials.NONE.withCredential(credential);CredentialStore.ProtectionParameter protectionParameter =new CredentialStore.CredentialSourceProtectionParameter(source);cs.initialize(parameters, protectionParameter);assertTrue(cs.isInitialized());assertTrue(new File(""target/my-cstore-1.p12"").isFile());cs.store(""my-alias"",new PasswordCredential(ClearPassword.createRaw(ClearPassword.ALGORITHM_CLEAR, ""passw0rd"".toCharArray())));cs.flush();}}"	No
1361	"public class A {@Path(""/getAllShouldSucceed"")@POSTpublic void getAllShouldSucceed() {LOG.debug(""Calling OpenstackKeystoneUserResource.getAllShouldSucceed()"");String uri = String.format(URI_FORMAT, OpenstackConstants.GET_ALL);User[] users = template.requestBody(uri, null, User[].class);assertNotNull(users);assertEquals(6, users.length);assertEquals(""glance"", users[0].getName());assertEquals(""default"", users[1].getDomainId());assertNull(users[2].getEmail());assertEquals(""7afec08993c24bb09df141e513738030"", users[3].getId());}}"	No
1362	"public class A {protected String fetchStudyId(@NonNull final String objectId) {val entity = metadataService.getEntity(objectId);if (entity != null) {val studyId = entity.getProjectCode();return studyId;} else {val msg = String.format(""Failed to retrieve metadata for objectId: %s"", objectId);throw new NotRetryableException(new IllegalArgumentException(msg));}}}"	Yes
1363	public class A {private static <T> T handleProxyException(Request request, ProxyException e) {throw badRequest(BAD_GATEWAY, e.getMessage());}}	Yes
1364	public class A {public void setOutputForAppearance(String appearance, int number) {if (appearanceToOutput.containsKey(appearance)) {appearanceToOutput.remove(appearance);}appearanceToOutput.put(appearance, number);}}	Yes
1365	"public class A {private void onNodeLeft(UUID nodeId) {if (msgLog.isInfoEnabled()) {}if (nearTxCheck) {if (tx.state() == PREPARED) {Set<UUID> failedNodeIds0 = new HashSet<>(failedNodeIds);failedNodeIds0.add(nodeId);cctx.tm().commitIfPrepared(tx, failedNodeIds0);}onDone(new ClusterTopologyCheckedException(""Transaction node left grid (will ignore).""));} else onDone(true);}}"	Yes
1366	public class A {@Overridepublic ConnectionConsumer createConnectionConsumer(final Queue queue,final String messageSelector,final ServerSessionPool sessionPool,final int maxMessages)throws JMSException {if (ActiveMQRALogger.LOGGER.isTraceEnabled()) {}throw new IllegalStateException(ISE);}}	Yes
1367	"public class A {@Overridepublic void getStateStream(GetJobStateRequest request, StreamObserver<JobStateEvent> responseObserver) {String invocationId = request.getJobId();try {JobInvocation invocation = getInvocation(invocationId);Consumer<JobStateEvent> stateListener =event -> {responseObserver.onNext(event);if (JobInvocation.isTerminated(event.getState())) {responseObserver.onCompleted();}};invocation.addStateListener(stateListener);} catch (StatusRuntimeException | StatusException e) {responseObserver.onError(e);} catch (Exception e) {String errMessage =String.format(""Encountered Unexpected Exception for Invocation %s"", invocationId);responseObserver.onError(Status.INTERNAL.withCause(e).asException());}}}"	Yes
1368	"public class A {public void releaseIndexWriteLockForRemove() {final boolean isDebugEnabled = logger.isDebugEnabled();if (isDebugEnabled) {logger.debug(""Releasing write lock on Index {}"", this.getName());}this.removeIndexLock.writeLock().unlock();if (isDebugEnabled) {logger.debug(""Released write lock on Index {}"", this.getName());}}}"	No
1369	"public class A {public static void setGsServerAuthenticator(GsServerAuthenticator authenticator) {GsSecurityManager.authenticator = Objects.requireNonNull(authenticator);LOG.info(""GsSecurityManager has been initialized with "" + authenticator.getClass().getName());}}"	No
1370	"public class A {private static void applyProperties(ObjectDef bean, Object instance, ExecutionContext context)throws IllegalAccessException, InvocationTargetException, NoSuchFieldException {List<PropertyDef> props = bean.getProperties();Class clazz = instance.getClass();if (props != null) {for (PropertyDef prop : props) {Object value = prop.isReference() ? context.getComponent(prop.getRef()) : prop.getValue();Method setter = findSetter(clazz, prop.getName(), value);if (setter != null) {Object[] methodArgs =getArgsWithListCoercion(Collections.singletonList(value), setter.getParameterTypes());LOG.debug(""found setter, attempting to invoke with {}"", methodArgs);setter.invoke(instance, methodArgs);} else {LOG.debug(""no setter found. Looking for a public instance variable..."");Field field = findPublicField(clazz, prop.getName(), value);if (field != null) {field.set(instance, value);}}}}}}"	No
1371	public class A {@Testpublic void testSnapshot() throws Exception {if (isSupported(IsolationLevels.SNAPSHOT)) {snapshot(IsolationLevels.SNAPSHOT);snapshotRead(IsolationLevels.SNAPSHOT);repeatableRead(IsolationLevels.SNAPSHOT);readCommitted(IsolationLevels.SNAPSHOT);rollbackTriple(IsolationLevels.SNAPSHOT);readPending(IsolationLevels.SNAPSHOT);} else {}}}	Yes
1372	"public class A {public static URL getAuthorizationURL(final String authorizationURL) {if (authorizationURL != null) {try {return new URL(authorizationURL.toString());} catch (final MalformedURLException e) {LOGGER.warn(""Accumulo Plugin: malformed Authorization Service URL "" + authorizationURL, e);}}return null;}}"	No
1373	public class A {protected ObjectNode getRootDocument(StreamsDatum datum) {try {String json =datum.getDocument() instanceof String? (String) datum.getDocument(): mapper.writeValueAsString(datum.getDocument());return mapper.readValue(json, ObjectNode.class);} catch (JsonProcessingException ex) {return null;} catch (IOException ex) {return null;}}}	Yes
1374	public class A {@Overridepublic void reload() {try {if (this.recordWriter != null) {this.recordWriter.returnConnector();}recordWriter = new AccumuloRecordWriter(this.connectionFactory, conf);} catch (AccumuloException | AccumuloSecurityException | IOException e) {}}}	Yes
1375	"public class A {@Beforepublic void cleanBeforeEach()throws ServiceRegistryException, NotFoundException, ConfigurationException {for (ObjectInstance mbean : serviceRegistryJpaImpl.jmxBeans) {JmxUtil.unregisterMXBean(mbean);}if (serviceRegistryJpaImpl.scheduledExecutor != null)serviceRegistryJpaImpl.scheduledExecutor.shutdown();if (!serviceRegistryJpaImpl.dispatchPriorityList.isEmpty()) {for (Long key : serviceRegistryJpaImpl.dispatchPriorityList.keySet()) {serviceRegistryJpaImpl.dispatchPriorityList.remove(key);}}if (!serviceRegistryJpaImpl.getActiveJobs().isEmpty()) {List<Long> jobIds = new ArrayList();for (Job job : serviceRegistryJpaImpl.getActiveJobs()) {jobIds.add(job.getId());}try {serviceRegistryJpaImpl.removeJobs(jobIds);} catch (Exception e) {}}serviceRegistryJpaImpl.activate(null);unregisterTestHostAndServices();registerTestHostAndService();if (serviceRegistryJpaImpl.scheduledExecutor != null) {serviceRegistryJpaImpl.scheduledExecutor.shutdown();}logger.debug(""end clean before each"");}}"	Yes
1376	public class A {public void dumpQuery(String query) throws Exception {ResultSet rs = getConnection().createStatement().executeQuery(query);rs.next();for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {}}}	Yes
1377	"public class A {public static <T> T registInvoke(final ClientInfo clientInfo, final TxInvoker<T> invoker) {clientInfo.setClientInfo(getClientInfoFactory().getClientInfo());TxProducer sd = getSender();Object[] args = ArgsSerializationUtil.unserialArgs(clientInfo.getArgs());LOGGER.info(""registClient|{0}|{1}|{2}|{3}|{4}|{5}"",clientInfo.getId(),clientInfo.getMark(),clientInfo.getContext(),args == null ? GlobalConstants.BLANK : JSONArray.toJSONString(args),clientInfo.getMaxRetryTimes(),clientInfo.getRetryConfigs());boolean flag = sd.registClient(clientInfo);T msg = invoker.invoke();if (flag) {sd.removeClient(clientInfo.getId());}return msg;}}"	No
1378	public class A {public static short kafkaExceptionFor(Throwable exception) {Short code = EXCEPTION_TO_CODE_MAPPER.get(exception.getClass());if (code == null) {return UNKNOWN_SERVER_ERROR.getCode();}return code;}}	Yes
1379	"public class A {@Overridepublic void fromBinary(final byte[] bytes) {try {GeometryUtils.initClassLoader();} catch (final MalformedURLException e) {}final ByteBuffer buf = ByteBuffer.wrap(bytes);final int filterBytesLength = VarintUtils.readUnsignedInt(buf);if (filterBytesLength > 0) {final byte[] filterBytes = ByteArrayUtils.safeRead(buf, filterBytesLength);final String cql = StringUtils.stringFromBinary(filterBytes);try {filter = ECQL.toFilter(cql);} catch (final Exception e) {throw new IllegalArgumentException(cql, e);}} else {filter = null;}final int adapterBytesLength = VarintUtils.readUnsignedInt(buf);if (adapterBytesLength > 0) {final byte[] adapterBytes = ByteArrayUtils.safeRead(buf, adapterBytesLength);try {adapter = (InternalGeotoolsFeatureDataAdapter<?>) PersistenceUtils.fromBinary(adapterBytes);} catch (final Exception e) {throw new IllegalArgumentException(""Unable to read adapter from CQL filter binary"", e);}} else {adapter = null;}final int mappingBytesLength = buf.remaining();if (adapterBytesLength > 0) {final byte[] mappingBytes = ByteArrayUtils.safeRead(buf, mappingBytesLength);try {indexMapping = (AdapterToIndexMapping) PersistenceUtils.fromBinary(mappingBytes);} catch (final Exception e) {throw new IllegalArgumentException(""Unable to read adapter to index mapping from CQL filter binary"", e);}} else {indexMapping = null;}}}"	Yes
1380	public class A {private void releaseCheckpoint() {nodeStore.release(indexerInfo.checkpoint);}}	Yes
1381	"public class A {public void error(SAXParseException se) throws SAXException {addProcessingException(xmlDoc, ""Error parsing xml doc "" + xmlDoc, se);throw se;}}"	Yes
1382	public class A {@Overrideprotected Collection<OArtifact> getData() {if (downloadedModules == null || downloadedModules.isEmpty()) {try {downloadedModules = InternalOModuleManager.get().getOrienteerModules();} catch (Exception e) {error(e.getMessage());}}return downloadedModules;}}	Yes
1383	"public class A {@Testpublic void testPut() throws Exception {try {HBaseTestHelper.startLocalCluster();HBaseTestHelper.clearHBase();HBaseNameValueCsvPutOperator propPutOperator = new HBaseNameValueCsvPutOperator();propPutOperator.getStore().setTableName(""table1"");propPutOperator.getStore().setZookeeperQuorum(""127.0.0.1"");propPutOperator.getStore().setZookeeperClientPort(2181);String s = ""name=milind,st=patrick,ct=fremont,sa=cali"";String s1 = ""st=tasman,ct=sancla,name=milinda,sa=cali"";propPutOperator.setMapping(""name=row,st=colfam0.street,ct=colfam0.city,sa=colfam0.state"");propPutOperator.setup(mockOperatorContext(0));propPutOperator.beginWindow(0);propPutOperator.input.process(s);propPutOperator.input.process(s1);propPutOperator.endWindow();HBaseTuple tuple;tuple = HBaseTestHelper.getHBaseTuple(""milind"", ""colfam0"", ""street"");Assert.assertNotNull(""Tuple"", tuple);Assert.assertEquals(""Tuple row"", tuple.getRow(), ""milind"");Assert.assertEquals(""Tuple column family"", tuple.getColFamily(), ""colfam0"");Assert.assertEquals(""Tuple column name"", tuple.getColName(), ""street"");Assert.assertEquals(""Tuple column value"", tuple.getColValue(), ""patrick"");} catch (IOException e) {}}}"	Yes
1384	"public class A {public long addThesis(Thesis thesis) throws StorageException {try {simpleJdbcTemplate.getJdbcOperations().update(""INSERT INTO thesis (review_id,  thesis_unique_id, content, frequency, positivity,""+ "" importance) VALUES(?,?,?,?,?,?)"",new Object[] {thesis.getReviewId(),thesis.getThesisUniqueId(),thesis.getContent(),thesis.getFrequency(),thesis.getPositivity(),thesis.getImportance()},new int[] {Types.INTEGER,Types.INTEGER,Types.VARCHAR,Types.INTEGER,Types.DOUBLE,Types.DOUBLE});long lastId = simpleJdbcTemplate.getJdbcOperations().queryForLong(""SELECT LAST_INSERT_ID()"");return lastId;} catch (DataAccessException e) {log.error(""Error while inserting thesis (probably not enough permissions): "" + thesis, e);throw new StorageException();}}}"	No
1385	public class A {@Overridepublic int update(DataCenter model) {try {return dataCenterNameServerService.update(model);} catch (Exception e) {}return 0;}}	Yes
1386	"public class A {public synchronized void debug() {if (LOG.isDebugEnabled()) {LOG.debug(""Registered UpdateListeners:"");}listeners.keySet().forEach(UpdateListener::debug);}}"	No
1387	public class A {private InputStream getReportInputStream() {ReportDownloaderInterface reportDownloader =AdWordsServicesUtil.getUtility(session, ReportDownloaderInterface.class);InputStream result = null;try {ReportDownloadResponse reportDownloadResponse =reportDownloader.downloadReport(reportDefinition);result = reportDownloadResponse.getInputStream();} catch (ReportException | ReportDownloadResponseException e) {}return result;}}	Yes
1388	"public class A {private static void loadBlackList() {ourBlackList = ContainerUtil.newHashSet();final URL url = InspectionProfileEntry.class.getResource(""inspection-black-list.txt"");if (url == null) {return;}try {final BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));try {String line;while ((line = reader.readLine()) != null) {line = line.trim();if (!line.isEmpty()) ourBlackList.add(line);}} finally {reader.close();}} catch (IOException e) {}}}"	Yes
1389	"public class A {protected void skipPrincipalClass(int lineNr, Class<?> principalClass) {log.error(principalClass.getName()+ ""is not a subclass of ""+ Principal.class.getName()+ "", line nr ""+ lineNr);}}"	No
1390	"public class A {public static String createCnonce() {String cnonce;final String digAlg = ""MD5"";MessageDigest md5Helper;try {md5Helper = MessageDigest.getInstance(digAlg);} catch (NoSuchAlgorithmException e) {throw new HttpClientError(""Unsupported algorithm in HTTP Digest authentication: "" + digAlg);}cnonce = Long.toString(System.currentTimeMillis());cnonce = encode(md5Helper.digest(EncodingUtil.getAsciiBytes(cnonce)));return cnonce;}}"	Yes
1391	"public class A {private void testInvalidOptionsDoNotWork(String options, String msg) {String uri = prefix + bindAddress + postfix + options;try {connection = new ActiveMQConnectionFactory(uri).createConnection();connection.start();fail(""Invalid options '""+ options+ ""' on URI '""+ uri+ ""' should""+ "" have caused an exception to be thrown. ""+ msg);} catch (Exception expected) {}}}"	Yes
1392	"public class A {@POSTpublic Response create(@Context UriInfo uriInfo, PushTopicRegistration registration) {String genId = sessionCounter.getAndIncrement() + ""-topic-"" + destination + ""-"" + startup;if (registration.getDestination() == null) {registration.setDestination(genId);}registration.setId(genId);registration.setTopic(destination);ClientSession createSession = createSubscription(genId, registration.isDurable());try {PushSubscription consumer =new PushSubscription(sessionFactory, genId, genId, registration, pushStore, jmsOptions);try {consumer.start();if (registration.isDurable() && pushStore != null) {pushStore.add(registration);}} catch (Exception e) {consumer.stop();throw new WebApplicationException(e,Response.serverError().entity(""Failed to start consumer."").type(""text/plain"").build());}consumers.put(genId, consumer);UriBuilder location = uriInfo.getAbsolutePathBuilder();location.path(genId);return Response.created(location.build()).build();} finally {closeSession(createSession);}}}"	Yes
1393	"public class A {private BigDecimal getContraReceipt(final Long bankaccountId, final Date asPerDate, final Long accountGlcodeId) {final StringBuffer qry = new StringBuffer(100);if (accountGlcodeId != null)qry.append("" select case when SUM(case when gl.debitamount = NULL then 0 else gl.debitamount end) =""+ "" null then 0 else SUM(case when gl.debitamount = NULL then 0 else gl.debitamount""+ "" end) end as receipt from  voucherheader vh, generalledger gl where""+ "" vh.id=gl.voucherheaderid and gl.glcodeId=""+ accountGlcodeId+ ""  and vh.name in ('""+ FinancialConstants.CONTRAVOUCHER_NAME_BTOB+ ""','""+ FinancialConstants.CONTRAVOUCHER_NAME_INTERFUND+ ""')   and vh.fiscalperiodid in (select id from fiscalperiod where""+ "" financialyearid=(select f.id from financialyear f where CURRENT_DATE between""+ "" f.startingdate and f.endingdate)) and vh.voucherdate='""+ sqlformat.format(asPerDate)+ ""'  and vh.status =0"");elseqry.append("" select case when SUM(case when gl.debitamount = NULL then 0 else gl.debitamount end) =""+ "" null then 0 else SUM(case when gl.debitamount = NULL then 0 else gl.debitamount""+ "" end) end as receipt from BankAccount acc, voucherheader vh, generalledger gl""+ "" where vh.id=gl.voucherheaderid and acc.glcodeid= gl.glcodeid   and vh.name in ('""+ FinancialConstants.CONTRAVOUCHER_NAME_BTOB+ ""','""+ FinancialConstants.CONTRAVOUCHER_NAME_INTERFUND+ ""') ""+ "" and vh.voucherdate='""+ sqlformat.format(asPerDate)+ ""'  and acc.id=""+ bankaccountId+ "" and vh.status =0"");final List list = getSession().createSQLQuery(qry.toString()).list();final BigDecimal contraReceipt = (BigDecimal) list.get(0);if (LOGGER.isDebugEnabled())LOGGER.debug(""Contra Receipt For BankId ""+ accountGlcodeId+ "" And Date ""+ sqlformat.format(asPerDate)+ "" is : ""+ contraReceipt);return contraReceipt;}}"	No
1394	"public class A {@Overridepublic Void call() throws Exception {Thread.currentThread().setName(""put-thread"");Random rnd = new Random();long endTime = System.currentTimeMillis() + GridTestUtils.SF.applyLB(60_000, 15_000);try {int iter = 0;while (System.currentTimeMillis() < endTime) {Map<Integer, Integer> map = new HashMap<>();for (int i = 0; i < 10; i++) map.put(rnd.nextInt(1000), i);cache.putAll(map);iter++;}fail(""Should fail."");} catch (CacheException | IllegalStateException e) {log.info(""Expected error: "" + e);}return null;}}"	Yes
1395	"public class A {String getValidLocaleFromCookie(String localeCookieValue) {String validLocale;try {Locale localeFromCookie = new Locale.Builder().setLanguageTag(localeCookieValue).build();validLocale = localeFromCookie.toLanguageTag();} catch (NullPointerException | IllformedLocaleException e) {validLocale = ""en"";}return validLocale;}}"	Yes
1396	"public class A {protected static void copyAssetsToWorkingDir(String webappSourceDir,String themeBuilderOutputDir,List<String> additionalThemeDirectories,List<String> additionalPluginDirectories)throws IOException {Assert.hasText(themeBuilderOutputDir, ""Working directory for theme builder not set"");File webappSource = new File(webappSourceDir);if (!webappSource.exists()) {throw new RuntimeException(""Webapp source directory does not exist"");}File workingDir = new File(themeBuilderOutputDir);if (!workingDir.exists()) {workingDir.mkdir();}workingDir.setWritable(true);if (LOG.isDebugEnabled()) {LOG.debug(""Copying script, theme, plugin resource to working dir: "" + themeBuilderOutputDir);}ThemeBuilderUtils.copyDirectory(webappSourceDir + ThemeBuilderConstants.KRAD_SCRIPTS_DIRECTORY,themeBuilderOutputDir + ThemeBuilderConstants.KRAD_SCRIPTS_DIRECTORY);ThemeBuilderUtils.copyDirectory(webappSourceDir + ThemeBuilderConstants.DEFAULT_THEMES_DIRECTORY,themeBuilderOutputDir + ThemeBuilderConstants.DEFAULT_THEMES_DIRECTORY);if (additionalThemeDirectories != null) {for (String additionalThemeDirectory : additionalThemeDirectories) {ThemeBuilderUtils.copyDirectory(webappSourceDir + additionalThemeDirectory,themeBuilderOutputDir + additionalThemeDirectory);}}ThemeBuilderUtils.copyDirectory(webappSourceDir + ThemeBuilderConstants.DEFAULT_PLUGINS_DIRECTORY,themeBuilderOutputDir + ThemeBuilderConstants.DEFAULT_PLUGINS_DIRECTORY);if (additionalPluginDirectories != null) {for (String additionalPluginDirectory : additionalPluginDirectories) {ThemeBuilderUtils.copyDirectory(webappSourceDir + additionalPluginDirectory,themeBuilderOutputDir + additionalPluginDirectory);}}}}"	No
1397	"public class A {@Overridepublic SolrInputDocument toSolrDocument(DIPFile file, IndexingAdditionalInfo info)throws RequestNotValidException, GenericException, NotFoundException,AuthorizationDeniedException {SolrInputDocument doc = super.toSolrDocument(file, info);List<String> path = file.getPath();doc.addField(RodaConstants.DIPFILE_PATH, path);if (path != null && !path.isEmpty()) {List<String> ancestorsPath = getDIPFileAncestorsPath(file.getDipId(), path);if (!ancestorsPath.isEmpty()) {doc.addField(RodaConstants.DIPFILE_ANCESTORS_UUIDS, ancestorsPath);}doc.addField(RodaConstants.DIPFILE_PARENT_UUID,IdUtils.getDIPFileId(file.getDipId(), path.subList(0, path.size() - 1), path.get(path.size() - 1)));}doc.addField(RodaConstants.DIPFILE_DIP_ID, file.getDipId());doc.addField(RodaConstants.DIPFILE_IS_DIRECTORY, file.isDirectory());doc.addField(RodaConstants.DIPFILE_SIZE, Long.toString(file.getSize()));try {StoragePath filePath = ModelUtils.getDIPFileStoragePath(file);doc.addField(RodaConstants.DIPFILE_STORAGE_PATH,RodaCoreFactory.getStorageService().getStoragePathAsString(filePath, false));} catch (RequestNotValidException e) {LOGGER.warn(""Could not index DIP file storage path"", e);}return doc;}}"	No
1398	"public class A {@Overridepublic void run(TransformContext context, GtfsMutableRelationalDao dao) {GtfsMutableRelationalDao reference =(GtfsMutableRelationalDao) context.getReferenceReader().getEntityStore();List<String> ignoreMatches = readList((String) context.getParameter(""ignoreStops""));int matched = 0;int unmatched = 0;HashMap<String, Stop> referenceStopNamesToStops = new HashMap<>();for (Stop stop : reference.getAllStops()) {referenceStopNamesToStops.put(stop.getName(), stop);}for (Stop stop : dao.getAllStops()) {Stop referenceStop = referenceStopNamesToStops.get(stop.getName());if (referenceStop == null && stop.getName().contains(""-"")) {referenceStop = referenceStopNamesToStops.get(swap(stop.getName()));}if (referenceStop == null && stop.getName().contains(""Park"")) {referenceStop = referenceStopNamesToStops.get(stop.getName().replaceAll(""Park"", ""Pk""));}if (referenceStop == null && stop.getName().contains(""-"")) {referenceStop =referenceStopNamesToStops.get(swap(stop.getName().replaceAll(""Park"", ""Pk"")));}if (referenceStop == null && stop.getName().contains(""Pk"")) {referenceStop = referenceStopNamesToStops.get(stop.getName().replaceAll(""Pk"", ""Park""));}if (referenceStop == null && stop.getName().contains(""-"")) {referenceStop =referenceStopNamesToStops.get(swap(stop.getName().replaceAll(""Pk"", ""Park"")));}if (referenceStop != null) {stop.setId(referenceStop.getId());matched++;} else {unmatched++;if (!ignoreMatches.contains(stop.getName())) {_log.error(""unmatched stop |{}|"", stop.getName());}}}_log.info(""Stops replaced with {} matched and {} remaining"", matched, unmatched);}}"	No
1399	"public class A {@SuppressWarnings(""unchecked"")@Overridepublic void init(ServletConfig config) throws ServletException {super.init(config);if (driver == null) {String driverClassName = config.getInitParameter(""Driver"");Class<? extends Driver> driverClass;try {driverClass =driverClassName == null? null: (Class<? extends Driver>) Class.forName(driverClassName);driver = driverClass == null ? null : driverClass.newInstance();} catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {throw new ServletException(ex.getMessage(), ex);}if (driver == null) throw new ServletException(""Unable to load driver: "" + driverClassName);if (log.isInfoEnabled()) log.info(""Loaded driver: "" + driverClass);}}}"	No
1400	"public class A {private void executeRegisteredJobs(JobParameters jobParameters) throws JobExecutionException {if (this.jobRegistry != null && StringUtils.hasText(this.jobNames)) {String[] jobsToRun = this.jobNames.split("","");for (String jobName : jobsToRun) {try {Job job = this.jobRegistry.getJob(jobName);if (this.jobs.contains(job)) {continue;}execute(job, jobParameters);} catch (NoSuchJobException ex) {logger.debug(""No job found in registry for job name: "" + jobName);continue;}}}}}"	No
1401	"public class A {private Serializable handleElement(final LateralElementDescriptor<K, V> led) throws IOException {final String cacheName = led.ce.getCacheName();final K key = led.ce.getKey();Serializable obj = null;switch (led.command) {case UPDATE:handlePut(led.ce);break;case REMOVE:if ((led.valHashCode != -1) && getTcpLateralCacheAttributes().isFilterRemoveByHashCode()) {final ICacheElement<K, V> test = getCache(cacheName).localGet(key);if (test != null) {if (test.getVal().hashCode() == led.valHashCode) {log.debug(""Filtering detected identical hashCode [{0}], ""+ ""not issuing a remove for led {1}"",led.valHashCode, led);return null;}log.debug(""Different hashcodes, in cache [{0}] sent [{1}]"",test.getVal().hashCode(), led.valHashCode);}}handleRemove(cacheName, key);break;case REMOVEALL:handleRemoveAll(cacheName);break;case GET:obj = handleGet(cacheName, key);break;case GET_MATCHING:obj = (Serializable) handleGetMatching(cacheName, (String) key);break;case GET_KEYSET:obj = (Serializable) handleGetKeySet(cacheName);break;default:break;}return obj;}}"	No
1402	"public class A {@Overridepublic String execute() {try {_feed = new SyndFeedImpl();List<ServiceAlertRssBean> beans = new ArrayList<>();String baseUrl = createBaseUrl(ServletActionContext.getRequest());setServiceAlerts(beans, baseUrl);for (Object objBean : beans) {ServiceAlertRssBean rssBean = (ServiceAlertRssBean) objBean;_feed.getModules().add(rssBean);}_feed.setTitle(""OneBusAway Service Alerts"");_feed.setLink("""");_feed.setDescription(""Service Information - Service Alerts"");return SUCCESS;} catch (Throwable t) {_log.error(""Exception in execute: "", t);return ERROR;}}}"	No
1403	"public class A {@Testpublic void iterationScenarioTest() throws Exception {final Scenario scenario;System.setProperty(PerfCakeConst.SCENARIO_PROPERTY, ""1chart-scenario$"");TestSender.resetCounter();scenario = ScenarioLoader.load(""test-scenario-chart"");scenario.init();scenario.run();scenario.close();final ScenarioRetractor retractor = new ScenarioRetractor(scenario);final Reporter reporter = retractor.getReportManager().getReporters().iterator().next();ChartDestination chartDestination = null;for (final Destination d : reporter.getDestinations()) {if (d instanceof ChartDestination) {chartDestination = (ChartDestination) d;break;}}final String correctGroup = ""_1chart_scenario__throughput"";Assert.assertNotNull(chartDestination);Assert.assertEquals(chartDestination.getGroup(), correctGroup);Assert.assertEquals(TestSender.getCounter(), 1_000_000);final Path dir = Paths.get(""target/test-chart"");verifyBasicFiles(dir);Assert.assertTrue(dir.resolve(Paths.get(""data"",correctGroup+ System.getProperty(PerfCakeConst.NICE_TIMESTAMP_PROPERTY)+ "".json"")).toFile().exists());Assert.assertTrue(dir.resolve(Paths.get(""data"",correctGroup+ System.getProperty(PerfCakeConst.NICE_TIMESTAMP_PROPERTY)+ "".js"")).toFile().exists());Assert.assertTrue(dir.resolve(Paths.get(""data"",correctGroup+ System.getProperty(PerfCakeConst.NICE_TIMESTAMP_PROPERTY)+ "".html"")).toFile().exists());final C3ChartData data = new C3ChartData(getBaseName(dir, null), dir);Assert.assertEquals(data.getData().get(0).size(), 5);JsonArray array = data.getData().get(0);try {Assert.assertNotNull(array.getInteger(0));Assert.assertNotNull(array.getDouble(1));Assert.assertNotNull(array.getDouble(2));Assert.assertNotNull(array.getDouble(3));Assert.assertNotNull(array.getDouble(4));} catch (ClassCastException cce) {Assert.fail(""Chart array does not contain expected data. Should be [int, double, double, double,""+ "" double]. ""+ cce);}FileUtils.deleteDirectory(dir.toFile());}}"	Yes
1404	public class A {@Overridepublic final void start() {for (Service service : services) {service.startAndWait();}}}	Yes
1405	"public class A {@Overridepublic void run() {long start = previous = System.currentTimeMillis();int sent = 0;Thread reporter =new Thread() {@Overridepublic void run() {try {while (true) {Thread.sleep(1000);}} catch (InterruptedException ie) {LOG.info(""Caught interrupted exception, going away"");Thread.currentThread().interrupt();}}};reporter.start();long beforeSend = System.nanoTime();while (!Thread.currentThread().isInterrupted() && sent < sendLimit) {try {sem.acquire();if (sent == 10000) {long afterSend = System.nanoTime();long time = afterSend - beforeSend;}} catch (InterruptedException e) {Thread.currentThread().interrupt();break;}final int index = getRandomLedger();LedgerHandle h = lh[index];if (h == null) {} else {long nanoTime = System.nanoTime();lh[index].asyncAddEntry(bytes, this, new Context(sent, nanoTime));counter.incrementAndGet();}sent++;}try {int i = 0;while (this.counter.get() > 0) {Thread.sleep(1000);i++;if (i > 30) {break;}}} catch (InterruptedException e) {LOG.error(""Interrupted while waiting"", e);Thread.currentThread().interrupt();}synchronized (this) {duration = System.currentTimeMillis() - start;}throughput = sent * 1000 / getDuration();reporter.interrupt();try {reporter.join();} catch (InterruptedException ie) {Thread.currentThread().interrupt();}}}"	Yes
1406	"public class A {public String[] setValues(String name, String... values) {checkNull(""name"", name);String[] vals = params.get(name);if (values == null) {values = new String[] {null};}params.put(name, values.clone());if (urlProvider != null) {urlProvider.setParameter(windowId, name, type, values.clone());}if (isTrace) {StringBuilder txt = new StringBuilder();txt.append(""Window ID: "").append(windowId).append("", Name: "").append(name).append("", Type: "").append(type).append("", Old Values: "").append(Arrays.toString(vals)).append("", New Values: "").append(Arrays.toString(values));}return vals;}}"	Yes
1407	"public class A {private void updateAllowedOperations(FilterCapabilities filterCapabilities) {comparisonOps =Collections.newSetFromMap(new ConcurrentHashMap<>(new EnumMap<>(COMPARISON_OPERATORS.class)));geometryOperands = new ArrayList<>();temporalOperands = new ArrayList<>();if (filterCapabilities == null) {LOGGER.debug(""WFS 2.0 Service doesn't support any filters"");return;}configureConformance(filterCapabilities.getConformance());ScalarCapabilitiesType scalarCapabilities = filterCapabilities.getScalarCapabilities();if (scalarCapabilities != null) {if (scalarCapabilities.getLogicalOperators() != null) {logicalOps = true;}ComparisonOperatorsType comparisonOperators = scalarCapabilities.getComparisonOperators();if (comparisonOperators != null) {for (ComparisonOperatorType comp : comparisonOperators.getComparisonOperator()) {if (null != comp) {comparisonOps.add(COMPARISON_OPERATORS.getEnum(comp.getName()));}}}}SpatialCapabilitiesType spatialCapabilities = filterCapabilities.getSpatialCapabilities();if (spatialCapabilities != null) {if (spatialCapabilities.getSpatialOperators() != null) {setSpatialOps(spatialCapabilities.getSpatialOperators());}GeometryOperandsType geometryOperandsType = spatialCapabilities.getGeometryOperands();if (geometryOperandsType != null) {for (GeometryOperandsType.GeometryOperand geoOperand :geometryOperandsType.getGeometryOperand()) {if (geoOperand.getName() != null) {geometryOperands.add(geoOperand.getName());}}}}TemporalCapabilitiesType temporalCapabilitiesType =filterCapabilities.getTemporalCapabilities();if (temporalCapabilitiesType != null) {if (temporalCapabilitiesType.getTemporalOperators() != null) {setTemporalOps(temporalCapabilitiesType.getTemporalOperators());}TemporalOperandsType temporalOperandsType = temporalCapabilitiesType.getTemporalOperands();if (temporalOperandsType != null) {for (TemporalOperandsType.TemporalOperand temporalOperand :temporalOperandsType.getTemporalOperand()) {if (temporalOperand.getName() != null) {temporalOperands.add(temporalOperand.getName());}}LOGGER.debug(""temporalOperands: {}"", temporalOperands);}}}}"	Yes
1408	public class A {private void loadSensorChannels() {if (device != null && device.isPresent()) {boolean configChanged = false;Configuration config = getThing().getConfiguration();String activePowerPrio = Config.REFRESH_PRIORITY_NEVER;if (config.get(DigitalSTROMBindingConstants.ACTIVE_POWER_REFRESH_PRIORITY) != null) {activePowerPrio =config.get(DigitalSTROMBindingConstants.ACTIVE_POWER_REFRESH_PRIORITY).toString();} else {config.put(DigitalSTROMBindingConstants.ACTIVE_POWER_REFRESH_PRIORITY,Config.REFRESH_PRIORITY_NEVER);configChanged = true;}if (OutputModeEnum.WIPE.equals(device.getOutputMode())&& activePowerPrio.equals(Config.REFRESH_PRIORITY_NEVER)) {config.put(DigitalSTROMBindingConstants.ACTIVE_POWER_REFRESH_PRIORITY,Config.REFRESH_PRIORITY_LOW);configChanged = true;}String outputCurrentPrio = Config.REFRESH_PRIORITY_NEVER;if (config.get(DigitalSTROMBindingConstants.OUTPUT_CURRENT_REFRESH_PRIORITY) != null) {outputCurrentPrio =config.get(DigitalSTROMBindingConstants.OUTPUT_CURRENT_REFRESH_PRIORITY).toString();} else {config.put(DigitalSTROMBindingConstants.OUTPUT_CURRENT_REFRESH_PRIORITY,Config.REFRESH_PRIORITY_NEVER);configChanged = true;}String electricMeterPrio = Config.REFRESH_PRIORITY_NEVER;if (config.get(DigitalSTROMBindingConstants.ELECTRIC_METER_REFRESH_PRIORITY) != null) {electricMeterPrio =config.get(DigitalSTROMBindingConstants.ELECTRIC_METER_REFRESH_PRIORITY).toString();} else {config.put(DigitalSTROMBindingConstants.ELECTRIC_METER_REFRESH_PRIORITY,Config.REFRESH_PRIORITY_NEVER);configChanged = true;}if (configChanged) {super.updateConfiguration(config);configChanged = false;}device.setSensorDataRefreshPriority(activePowerPrio, electricMeterPrio, outputCurrentPrio);checkSensorChannel();}}}	Yes
1409	public class A {@Nullableprotected ClassLoader getCustomClassLoaderForBrooklynObject(LookupContext lookupContext, BrooklynObjectType type, String objectId) {BrooklynObject item = lookupContext.peek(type, objectId);String catalogItemId = (item == null) ? null : item.getCatalogItemId();if (catalogItemId == null) {return null;}final ManagementContext managementContext = lookupContext.lookupManagementContext();RegisteredType catalogItem = managementContext.getTypeRegistry().get(catalogItemId);if (catalogItem == null) {return null;} else {final BrooklynClassLoadingContextSequential ctx =new BrooklynClassLoadingContextSequential(managementContext);ctx.add(CatalogUtils.newClassLoadingContextForCatalogItems(managementContext, item.getCatalogItemId(), item.getCatalogItemIdSearchPath()));return ClassLoaderFromBrooklynClassLoadingContext.of(ctx);}}}	Yes
1410	"public class A {private void insertTblMapps(JSONObject jObj) throws Exception {JSONObject serverInfoObj = (JSONObject) jObj.get(ProtocolID.SERVER_INFO);List<HashMap<String, String>> objTable_Info =(List<HashMap<String, String>>) jObj.get(ProtocolID.TABLE_INFO);SqlSessionFactory sqlSessionFactory = null;sqlSessionFactory = SqlSessionManager.getInstance();String poolName =""""+ serverInfoObj.get(ProtocolID.SERVER_IP)+ ""_""+ serverInfoObj.get(ProtocolID.DATABASE_NAME)+ ""_""+ serverInfoObj.get(ProtocolID.SERVER_PORT);Connection connDB = null;SqlSession sessDB = null;List<Object> selectList = new ArrayList<Object>();try {SocketExt.setupDriverPool(serverInfoObj, poolName);connDB = DriverManager.getConnection(""jdbc:apache:commons:dbcp:"" + poolName);sessDB = sqlSessionFactory.openSession(connDB);if (objTable_Info.size() > 0) {for (int i = 0; i < objTable_Info.size(); i++) {String strTableName = objTable_Info.get(i).get(ProtocolID.TABLE_NAME).toString();String strTableSchema = objTable_Info.get(i).get(ProtocolID.TABLE_SCHEMA).toString();String strTopicName = objTable_Info.get(i).get(ProtocolID.TOPIC_NAME).toString();String strRemark = objTable_Info.get(i).get(ProtocolID.REMARK).toString();HashMap hp = new HashMap();hp.put(ProtocolID.TABLE_NAME, strTableName);hp.put(ProtocolID.TABLE_SCHEMA, strTableSchema);hp.put(ProtocolID.TOPIC_NAME, strTopicName);hp.put(ProtocolID.REMARK, strRemark);hp.put(""REGCLASS"", strTableSchema + ""."" + strTableName);sessDB.insert(""app.insertTblMapps"", hp);sessDB.insert(""app.insertColMapps"", hp);}}sessDB.close();connDB.close();} catch (Exception e) {throw e;} finally {if (sessDB != null) sessDB.close();if (connDB != null) connDB.close();}}}"	Yes
1411	"public class A {@Overrideprotected void doStop() {super.doStop();logger.info(""Stopping store {}..."", base.getPath());storeMap.values().forEach(p -> {p.disable();p.stop();});storeLock.unlock();logger.info(""Store {} stopped."", base.getPath());}}"	No
1412	"public class A {@Overridepublic List<Authorization> getUserAuthorizations(String username, Map<String, Group> groups, Map<String, Role> roles) {Connection conn = null;List<Authorization> authorizations = new ArrayList<Authorization>();PreparedStatement stat = null;ResultSet res = null;try {conn = this.getConnection();stat = conn.prepareStatement(GET_USER_AUTHORIZATIONS);stat.setString(1, username);res = stat.executeQuery();while (res.next()) {String groupname = res.getString(1);Group group = (null != groupname) ? groups.get(groupname) : null;String rolename = res.getString(2);Role role = (null != rolename) ? roles.get(rolename) : null;Authorization authorization = new Authorization(group, role);if (!authorizations.contains(authorization)) {authorizations.add(authorization);}}} catch (Throwable t) {throw new RuntimeException(""Error loading user authorization"", t);} finally {closeDaoResources(res, stat, conn);}return authorizations;}}"	Yes
1413	public class A {@Overridepublic void run() {try {Files.walkFileTree(devConsoleFinalDestination,new SimpleFileVisitor<Path>() {@Overridepublic FileVisitResult postVisitDirectory(Path dir, IOException exc)throws IOException {Files.delete(dir);return FileVisitResult.CONTINUE;}@Overridepublic FileVisitResult visitFile(Path file, BasicFileAttributes attrs)throws IOException {Files.delete(file);return FileVisitResult.CONTINUE;}});} catch (IOException e) {}}}	Yes
1414	public class A {@Nullablestatic ClassLoader createPluginClassLoader(@Nonnull File[] classPath,@Nonnull ClassLoader[] parentLoaders,@Nonnull PluginDescriptor pluginDescriptor) {PluginId pluginId = pluginDescriptor.getPluginId();File pluginRoot = pluginDescriptor.getPath();try {final List<URL> urls = new ArrayList<>(classPath.length);for (File aClassPath : classPath) {final File file = aClassPath.getCanonicalFile();urls.add(file.toURI().toURL());}return PluginClassLoaderFactory.create(urls, parentLoaders, pluginId, pluginDescriptor.getVersion(), pluginRoot);} catch (IOException e) {}return null;}}	Yes
1415	"public class A {public static com.liferay.portal.kernel.model.Group updateGroup(HttpPrincipal httpPrincipal,long groupId,long parentGroupId,java.util.Map<java.util.Locale, String> nameMap,java.util.Map<java.util.Locale, String> descriptionMap,int type,boolean manualMembership,int membershipRestriction,String friendlyURL,boolean inheritContent,boolean active,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(GroupServiceUtil.class, ""updateGroup"", _updateGroupParameterTypes37);MethodHandler methodHandler =new MethodHandler(methodKey,groupId,parentGroupId,nameMap,descriptionMap,type,manualMembership,membershipRestriction,friendlyURL,inheritContent,active,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.Group) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
1416	public class A {@Overridepublic Map<String, byte[]> getOriginalConfigs() {Map<String, byte[]> configs = new HashMap<String, byte[]>();try {Utils.loadConfigFile(getJGroupsConfigFile(), configs);Utils.loadConfigFile(getConfigFile(), configs);} catch (Exception e) {}return configs;}}	Yes
1417	public class A {private void loadTokenSecretState(OzoneManagerSecretState<OzoneTokenIdentifier> state)throws IOException {for (Map.Entry<OzoneTokenIdentifier, Long> entry : state.getTokenState().entrySet()) {addPersistedDelegationToken(entry.getKey(), entry.getValue());}}}	Yes
1418	"public class A {public void run() throws IOException {boolean outputFileExists = new File(mOutputFile).exists();final Map<GenomePosition, DiploidCount> diploidCountMap;if (outputFileExists) {CB_LOGGER.info(""Reading existing output: {}"", mOutputFile);diploidCountMap = DiploidCount.readDiploidCountAsMap(mOutputFile);} else {diploidCountMap = Maps.newHashMap();}CB_LOGGER.info(""Reading input file {}"", mInputFile);final ListMultimap<Chromosome, CobaltRatio> ratios = CobaltRatioFile.read(mInputFile);final List<MedianRatio> medianRatios = MedianRatioFactory.create(ratios);final CobaltChromosomes chromosomes = new CobaltChromosomes(medianRatios);if (chromosomes.hasGermlineAberrations()) {CB_LOGGER.warn(""Excluding {} because of germline aberrations"", mInputFile);return;}Collection<CobaltChromosome> selectedChromosomes;if (chromosomes.contains(""Y"")) {selectedChromosomes = Collections.singleton(chromosomes.get(""Y""));} else if (chromosomes.contains(""chrY"")) {selectedChromosomes = Collections.singleton(chromosomes.get(""chrY""));} else {selectedChromosomes = chromosomes.chromosomes();}CB_LOGGER.info(""Processing diploid regions"");for (CobaltChromosome selectedChromosome : selectedChromosomes) {Collection<CobaltRatio> selectedRatios =ratios.get(HumanChromosome.fromString(selectedChromosome.contig()));for (CobaltRatio ratio : selectedRatios) {GenomePosition position = GenomePositions.create(ratio.chromosome(), ratio.position());DiploidCount count =diploidCountMap.computeIfAbsent(position, x -> new DiploidCount(x, 0, 0));count.incrementTotal();if (isDiploid(selectedChromosome, ratio)) {count.incrementDiploid();}}}CB_LOGGER.info(""Writing output: {}"", mOutputFile);Files.write(new File(mOutputFile).toPath(),diploidCountMap.values().stream().sorted().map(DiploidCount::toString).collect(Collectors.toList()));}}"	No
1419	public class A {protected void onStop() throws PluginShutdownException {}}	Yes
1420	public class A {public void progressChanged(ProgressEvent progressEvent) {}}	Yes
1421	"public class A {@Testpublic void testRouteAddRemoteRouteWithRecipientList() throws Exception {MockEndpoint result = getMockEndpoint(""mock:result"");result.expectedMessageCount(1);template.sendBody(""direct:start"", ""Hello World"");result.assertIsSatisfied();MBeanServer mbeanServer = getMBeanServer();ObjectName on = getCamelObjectName(TYPE_SERVICE, ""*"");Set<ObjectName> names = mbeanServer.queryNames(on, null);assertEquals(SERVICES, names.size());ObjectName onP = getCamelObjectName(TYPE_PRODUCER, ""*"");Set<ObjectName> namesP = mbeanServer.queryNames(onP, null);assertEquals(1, namesP.size());log.info(""Adding 2nd route"");context.addRoutes(new RouteBuilder() {@Overridepublic void configure() throws Exception {from(""direct:bar"").routeId(""bar"").recipientList(header(""bar""));}});MockEndpoint bar = getMockEndpoint(""mock:bar"");bar.expectedMessageCount(1);template.sendBodyAndHeader(""direct:bar"", ""Hello World"", ""bar"", ""mock:bar"");bar.assertIsSatisfied();names = mbeanServer.queryNames(on, null);assertEquals(SERVICES, names.size());namesP = mbeanServer.queryNames(onP, null);assertEquals(1, namesP.size());log.info(""Removing 2nd route"");context.getRouteController().stopRoute(""bar"");boolean removed = context.removeRoute(""bar"");assertTrue(removed);names = mbeanServer.queryNames(on, null);assertEquals(SERVICES, names.size());namesP = mbeanServer.queryNames(onP, null);assertEquals(1, namesP.size());}}"	Yes
1422	"public class A {@Override@Aspect(advice = org.support.project.ormapping.transaction.Transaction.class)public void notify(NotifyQueuesEntity notifyQueue) throws Exception {CommentsDao commentsDao = CommentsDao.get();CommentsEntity comment = commentsDao.selectOnKey(notifyQueue.getId());if (null == comment) {LOG.warn(""Comment record not found. id: "" + notifyQueue.getId());return;}KnowledgesDao knowledgesDao = KnowledgesDao.get();KnowledgesEntity knowledge = knowledgesDao.selectOnKey(comment.getKnowledgeId());if (null == knowledge) {return;}if (sendedCommentKnowledgeIds.contains(knowledge.getKnowledgeId())) {if (LOG.isDebugEnabled()) {LOG.debug(""Knowledge ["" + knowledge.getKnowledgeId() + ""] "");}return;} else {sendedCommentKnowledgeIds.add(knowledge.getKnowledgeId());}CommentInsertWebhookNotification webhook = CommentInsertWebhookNotification.get();webhook.init(comment, knowledge);webhook.saveWebhookData();UsersDao usersDao = UsersDao.get();UsersEntity commentUser = usersDao.selectOnKey(comment.getInsertUser());UsersEntity user =NotifyCommentLogic.get().getInsertUserOnComment(NotifyType.Mail, comment, knowledge);if (user != null) {NotificationsEntity notification =insertNotificationOnComentInsert(knowledge, comment, commentUser, MailLogic.NOTIFY_INSERT_COMMENT_MYITEM);NotificationLogic.get().insertUserNotification(notification, user);Locale locale = user.getLocale();MailLocaleTemplatesEntity template =MailLogic.get().load(locale, MailLogic.NOTIFY_INSERT_COMMENT_MYITEM);sendCommentMail(comment, knowledge, commentUser, user, template);}NotificationsEntity notification =insertNotificationOnComentInsert(knowledge, comment, commentUser, MailLogic.NOTIFY_INSERT_COMMENT);List<UsersEntity> users =NotifyCommentLogic.get().getTargetUsersOnComment(NotifyType.Mail, comment, knowledge);for (UsersEntity target : users) {NotificationLogic.get().insertUserNotification(notification, target);Locale locale = target.getLocale();MailLocaleTemplatesEntity template =MailLogic.get().load(locale, MailLogic.NOTIFY_INSERT_COMMENT);sendCommentMail(comment, knowledge, commentUser, target, template);}}}"	Yes
1423	"public class A {@Overridepublic void onPropertyModified(final PropertyDescriptor descriptor, final String oldValue, final String newValue) {final ComponentLog logger = getLogger();final Processor instance = processor.get();if (ScriptingComponentUtils.SCRIPT_FILE.equals(descriptor)|| ScriptingComponentUtils.SCRIPT_BODY.equals(descriptor)|| ScriptingComponentUtils.MODULES.equals(descriptor)|| scriptingComponentHelper.SCRIPT_ENGINE.equals(descriptor)) {scriptNeedsReload.set(true);if (scriptingComponentHelper.SCRIPT_ENGINE.equals(descriptor)) {scriptEngine = null;}} else if (instance != null) {try {instance.onPropertyModified(descriptor, oldValue, newValue);} catch (final Exception e) {final String message = ""Unable to invoke onPropertyModified from script Processor: "" + e;logger.error(message, e);}}}}"	No
1424	"public class A {@Overridepublic void setup(OperatorContext context) {if (context != null) {operatorId = context.getId();}reporter = new ReporterImpl(ReporterType.Mapper, new Counters());outputCollector = new OutputCollectorImpl<K2, V2>();Configuration conf = new Configuration();try {inputFormat = inputFormatClass.newInstance();SerializationFactory serializationFactory = new SerializationFactory(conf);Deserializer keyDesiralizer = serializationFactory.getDeserializer(inputSplitClass);keyDesiralizer.open(new ByteArrayInputStream(outstream.toByteArray()));inputSplit = (InputSplit) keyDesiralizer.deserialize(null);((ReporterImpl) reporter).setInputSplit(inputSplit);reader = inputFormat.getRecordReader(inputSplit, new JobConf(conf), reporter);} catch (Exception e) {logger.info(""failed to initialize inputformat obj {}"", inputFormat);throw new RuntimeException(e);}InputStream stream = null;if (configFile != null && configFile.length() > 0) {stream = ClassLoader.getSystemResourceAsStream(""/"" + configFile);if (stream == null) {stream = ClassLoader.getSystemResourceAsStream(configFile);}}if (stream != null) {conf.addResource(stream);}jobConf = new JobConf(conf);if (mapClass != null) {try {mapObject = mapClass.newInstance();} catch (Exception e) {logger.info(""can't instantiate object {}"", e.getMessage());}mapObject.configure(jobConf);}if (combineClass != null) {try {combineObject = combineClass.newInstance();} catch (Exception e) {logger.info(""can't instantiate object {}"", e.getMessage());}combineObject.configure(jobConf);}}}"	No
1425	"public class A {public synchronized void searchDevices() {scanIsActive = true;OpenGateway gw = gateway;if (gw != null) {if (!gw.isDiscovering()) {if (!gw.isConnected()) {return;}try {gw.discoverDevices();} catch (OWNException e) {}} else {logger.debug(""------$$ Searching devices on bridge '{}' already activated"", thing.getUID());return;}} else {logger.warn(""------$$ Cannot search devices: no gateway associated to this handler"");}}}"	Yes
1426	public class A {@Overridepublic void onError(Throwable t) {if (agentId != null) {connectedAgents.remove(agentId, ConnectedAgent.this);}}}	Yes
1427	"public class A {@Overridepublic void processRpcResponseFromRuleEngine(FromDeviceRpcResponse response) {UUID requestId = response.getId();Consumer<FromDeviceRpcResponse> consumer = localToRuleEngineRpcRequests.remove(requestId);if (consumer != null) {consumer.accept(response);} else {log.trace(""[{}] Unknown or stale rpc response received [{}]"", requestId, response);}}}"	Yes
1428	"public class A {private Connection establishConnecton(TestAmqpPeer testPeer,Supplier<ProxyHandler> proxyHandlerSupplier,boolean ssl,String optionsString)throws JMSException {testPeer.expectSaslPlain(""guest"", ""guest"");testPeer.expectOpen();testPeer.expectBegin();String remoteURI = buildURI(testPeer, ssl, optionsString);LOG.debug(""connect to {}"", remoteURI);JmsConnectionFactory factory = new JmsConnectionFactory(remoteURI);factory.setExtension(JmsConnectionExtensions.PROXY_HANDLER_SUPPLIER.toString(),(connection1, remote) -> {return proxyHandlerSupplier;});Connection connection = factory.createConnection(""guest"", ""guest"");connection.setClientID(""clientName"");assertNull(testPeer.getThrowable());return connection;}}"	No
1429	"public class A {private Thread nodeRestartThread(final int restartCycles, final long initDelay, final long restartDelay) {Thread t =new Thread(new Runnable() {@Overridepublic void run() {sleep(initDelay);try {for (int i = 1; i <= restartCycles && !Thread.interrupted(); i++) {IgniteConfiguration cfg =optimize(getConfiguration(""restartNode"")).setGridLogger(new NullLogger());try (Ignite ignored = Ignition.start(cfg)) {awaitPartitionMapExchange();sleep(restartDelay);}log.info(""Node restart cycle finished: "" + i);awaitPartitionMapExchange();sleep(restartDelay);}} catch (Exception e) {}}});t.setName(""flapping-node-thread"");t.setDaemon(true);return t;}}"	Yes
1430	public class A {public void onTraversalDone(final Integer result) {if (splitToMany) for (final VariantContextWriter writer : writers) writer.close();else vcfWriter2.close();}}	Yes
1431	public class A {public static void deleteRepository(long repositoryId) throws RemoteException {try {RepositoryServiceUtil.deleteRepository(repositoryId);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
1432	public class A {private void refreshAllDevices() {for (Thing ownThing : getThing().getThings()) {OpenWebNetThingHandler hndlr = (OpenWebNetThingHandler) ownThing.getHandler();if (hndlr != null) {hndlr.refreshDevice(true);}}}}	Yes
1433	public class A {public static com.liferay.knowledge.base.model.KBArticleSoap fetchFirstChildKBArticle(long groupId, long parentResourcePrimKey) throws RemoteException {try {com.liferay.knowledge.base.model.KBArticle returnValue =KBArticleServiceUtil.fetchFirstChildKBArticle(groupId, parentResourcePrimKey);return com.liferay.knowledge.base.model.KBArticleSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
1434	"public class A {@Overridepublic void stop(BundleContext context) throws Exception {LOG.info(""Clear bundle context in OffHeapServiceLoader"");DispatchQueueServiceLoader.setBundleContext(null);}}"	No
1435	public class A {protected void showFieldLoggingTitle() {if (logger.isDebugEnabled()) {}}}	Yes
1436	"public class A {private void parseColours(String message) {primaryColor = parseToHSBType(message, ""<cl>"");updateState(CHANNEL_PRIMARY_COLOR, primaryColor);secondaryColor = parseToHSBType(message, ""<cs>"");updateState(CHANNEL_SECONDARY_COLOR, secondaryColor);try {primaryWhite = new BigDecimal(WLedHelper.getValue(message, ""<wv>"", ""<""));if (primaryWhite.intValue() > -1) {hasWhite = true;updateState(CHANNEL_PRIMARY_WHITE,new PercentType(primaryWhite.divide(BIG_DECIMAL_2_55, RoundingMode.HALF_UP)));secondaryWhite = new BigDecimal(WLedHelper.getValue(message, ""<ws>"", ""<""));updateState(CHANNEL_SECONDARY_WHITE,new PercentType(secondaryWhite.divide(BIG_DECIMAL_2_55, RoundingMode.HALF_UP)));}} catch (IllegalArgumentException e) {}}}"	Yes
1437	public class A {private Set<String> buildRoles(UserAuthenticationData userAuthenticationData, UaaUser user) {boolean requestedRoles = userAuthenticationData.scopes.contains(ROLES_SCOPE);Set<String> roles = null;if (requestedRoles&& userAuthenticationData.roles != null&& !userAuthenticationData.roles.isEmpty()) {roles = userAuthenticationData.roles;}if (requestedRoles && roles == null) {}return roles;}}	Yes
1438	public class A {private static List<InterceptorMapping> constructParameterizedInterceptorReferences(InterceptorLocator interceptorLocator,InterceptorStackConfig stackConfig,Map<String, String> refParams,ObjectFactory objectFactory) {List<InterceptorMapping> result;Map<String, Map<String, String>> params = new LinkedHashMap<>();for (Map.Entry<String, String> entry : refParams.entrySet()) {String key = entry.getKey();try {String name = key.substring(0, key.indexOf('.'));key = key.substring(key.indexOf('.') + 1);Map<String, String> map;if (params.containsKey(name)) {map = params.get(name);} else {map = new LinkedHashMap<>();}map.put(key, entry.getValue());params.put(name, map);} catch (Exception e) {}}result = new ArrayList<>(stackConfig.getInterceptors());for (Map.Entry<String, Map<String, String>> entry : params.entrySet()) {String key = entry.getKey();Map<String, String> map = entry.getValue();Object interceptorCfgObj = interceptorLocator.getInterceptorConfig(key);if (interceptorCfgObj instanceof InterceptorConfig) {InterceptorConfig cfg = (InterceptorConfig) interceptorCfgObj;Interceptor interceptor = objectFactory.buildInterceptor(cfg, map);InterceptorMapping mapping = new InterceptorMapping(key, interceptor);if (result.contains(mapping)) {for (int index = 0; index < result.size(); index++) {InterceptorMapping interceptorMapping = result.get(index);if (interceptorMapping.getName().equals(key)) {result.set(index, mapping);}}} else {result.add(mapping);}} else if (interceptorCfgObj instanceof InterceptorStackConfig) {InterceptorStackConfig stackCfg = (InterceptorStackConfig) interceptorCfgObj;List<InterceptorMapping> tmpResult =constructParameterizedInterceptorReferences(interceptorLocator, stackCfg, map, objectFactory);for (InterceptorMapping tmpInterceptorMapping : tmpResult) {if (result.contains(tmpInterceptorMapping)) {int index = result.indexOf(tmpInterceptorMapping);result.set(index, tmpInterceptorMapping);} else {result.add(tmpInterceptorMapping);}}}}return result;}}	Yes
1439	"public class A {void checkForSegmentHandoffs() {try {Iterator<Map.Entry<SegmentDescriptor, Pair<Executor, Runnable>>> itr =handOffCallbacks.entrySet().iterator();while (itr.hasNext()) {Map.Entry<SegmentDescriptor, Pair<Executor, Runnable>> entry = itr.next();SegmentDescriptor descriptor = entry.getKey();try {Boolean handOffComplete = coordinatorClient.isHandOffComplete(dataSource, descriptor);if (handOffComplete == null) {log.warn(""Failed to call the new coordinator API for checking segment handoff. Falling back""+ "" to the old API"");final List<ImmutableSegmentLoadInfo> loadedSegments =coordinatorClient.fetchServerView(dataSource, descriptor.getInterval(), true);handOffComplete = isHandOffComplete(loadedSegments, descriptor);}if (handOffComplete) {log.debug(""Segment Handoff complete for dataSource[%s] Segment[%s]"", dataSource, descriptor);entry.getValue().lhs.execute(entry.getValue().rhs);itr.remove();}} catch (Exception e) {log.error(e,""Exception while checking handoff for dataSource[%s] Segment[%s], Will try again""+ "" after [%d]secs"",dataSource,descriptor,pollDurationMillis);}}if (!handOffCallbacks.isEmpty()) {log.info(""Still waiting for Handoff for [%d] Segments"", handOffCallbacks.size());}} catch (Throwable t) {log.error(t,""Exception while checking handoff for dataSource[%s], Will try again after [%d]secs"",dataSource,pollDurationMillis);}}}"	No
1440	"public class A {public static void createAndWaitForStreamToBecomeAvailable(AmazonKinesisClient kinesisClient, String streamName, int shardCount) {if (streamExists(kinesisClient, streamName)) {String state = streamState(kinesisClient, streamName);switch (state) {case ""DELETING"":long startTime = System.currentTimeMillis();long endTime = startTime + 1000 * 120;while (System.currentTimeMillis() < endTime && streamExists(kinesisClient, streamName)) {try {Thread.sleep(1000 * 10);} catch (InterruptedException e) {}}if (streamExists(kinesisClient, streamName)) {LOG.error(""KinesisUtils timed out waiting for stream "" + streamName + "" to delete"");throw new IllegalStateException(""KinesisUtils timed out waiting for stream "" + streamName + "" to delete"");}case ""ACTIVE"":return;case ""CREATING"":break;case ""UPDATING"":return;default:throw new IllegalStateException(""Illegal stream state: "" + state);}} else {CreateStreamRequest createStreamRequest = new CreateStreamRequest();createStreamRequest.setStreamName(streamName);createStreamRequest.setShardCount(shardCount);kinesisClient.createStream(createStreamRequest);}long startTime = System.currentTimeMillis();long endTime = startTime + (10 * 60 * 1000);while (System.currentTimeMillis() < endTime) {try {Thread.sleep(1000 * 10);} catch (Exception e) {}try {String streamStatus = streamState(kinesisClient, streamName);if (streamStatus.equals(""ACTIVE"")) {return;}} catch (ResourceNotFoundException e) {throw new IllegalStateException(""Stream "" + streamName + "" never went active"");}}}}"	Yes
1441	public class A {private void logUnauthorizedRequest(HttpServletRequest request, ResponseStatusException e) {if (LOGGER.isDebugEnabled()) {String userName = SecurityContextUtil.getUsername();}}}	Yes
1442	public class A {public static void logWarn(Logger logger, String eventInfo, String message) {}}	Yes
1443	"public class A {public void execute(String sql, String aliasName, DfGeneratedSqlExecuteOption option) {final String lineSeparator = System.getProperty(""line.separator"");Connection connection = null;Statement statement = null;ResultSet rs = null;String currentGeneratedSql = null;try {connection = _dataSource.getConnection();statement = connection.createStatement();_log.info(""...Generating SQL: "" + lineSeparator + sql);rs = statement.executeQuery(sql);final List<String> generatedSqlList = new ArrayList<String>();while (rs.next()) {final String generatedSql = rs.getString(aliasName);generatedSqlList.add(generatedSql);}for (String generatedSql : generatedSqlList) {currentGeneratedSql = generatedSql;try {statement.execute(generatedSql);_log.info(generatedSql);} catch (RuntimeException e) {if (option.isErrorContinue()) {continue;}_log.warn(generatedSql);throw e;} catch (SQLException e) {if (option.isErrorContinue()) {continue;}_log.warn(generatedSql);throw e;}}} catch (SQLException e) {throw new RuntimeException(""DfGeneratedSqlExecutorImpl.execute() threw the exception: baseSql=""+ sql+ "" generatedSql=""+ currentGeneratedSql,e);} finally {try {if (rs != null) {rs.close();}} catch (SQLException ignored) {_log.warn(""ResultSet#close() threw the exception!"", ignored);}try {if (statement != null) {statement.close();}} catch (SQLException ignored) {_log.warn(""Statement#close() threw the exception!"", ignored);}try {if (connection != null) {connection.close();}} catch (SQLException ignored) {_log.warn(""Connection#close() threw the exception!"", ignored);}}}}"	No
1444	"public class A {private void silentClose(OutputStream s) {if (s != null) {try {s.close();} catch (IOException e) {log.error(logCacheName + ""Failure closing stream"", e);}}}}"	No
1445	"public class A {@Overrideprotected void load(String userScope, String nodeId, IPreferences prefsToFill) {File prefsLocation = getPrefsLocation(userScope, nodeId);if (!prefsLocation.exists()) {File legacyPrefsLocation = getLegacyPrefsLocation(nodeId);if (legacyPrefsLocation.exists()) {LOG.warn(""Legacy preference found: '{}'. Will be stored in the new location ('{}') the next""+ "" time."",legacyPrefsLocation.getAbsolutePath(),prefsLocation.getAbsolutePath());}prefsLocation = legacyPrefsLocation;}if (prefsLocation.exists()) {Properties propertiesFromDisk = loadFromDisk(prefsLocation);convertToPreferences(propertiesFromDisk, prefsToFill);}}}"	No
1446	"public class A {OnlineDetectionDataDTO saveOnlineDetectionData(JsonNode payloadNode, DatasetConfigDTO datasetConfigDTO, MetricConfigDTO metricConfigDTO)throws JsonProcessingException {JsonNode dataNode = payloadNode.get(DATA_FIELD);String timeColumnName = datasetConfigDTO.getTimeColumn();String datasetName = datasetConfigDTO.getDataset();String metricName = metricConfigDTO.getName();Preconditions.checkArgument(validateOnlineDetectionData(dataNode, timeColumnName, metricName),String.format(""metric: %s or time: %s not found in adhoc data."", metricName, timeColumnName));OnlineDetectionDataDTO onlineDetectionDataDTO = new OnlineDetectionDataDTO();onlineDetectionDataDTO.setDataset(datasetName);onlineDetectionDataDTO.setMetric(metricName);onlineDetectionDataDTO.setOnlineDetectionData(this.objectMapper.writeValueAsString(dataNode));onlineDetectionDataDAO.save(onlineDetectionDataDTO);LOG.info(""Saved online data with dataset: {} and metric: {}"",onlineDetectionDataDTO.getDataset(),onlineDetectionDataDTO.getMetric());return onlineDetectionDataDTO;}}"	No
1447	public class A {protected void initializeTempComponent(final ConfigurableComponent configurableComponent) {ConfigurableComponentInitializer initializer = null;try {initializer =ConfigurableComponentInitializerFactory.createComponentInitializer(this, configurableComponent.getClass());initializer.initialize(configurableComponent);} catch (final InitializationException e) {}}}	Yes
1448	"public class A {private static String getHomeCommunityIdFromRequest(RetrieveDocumentSetRequestType request) {String homeCommunityId = null;if (request != null&& request.getDocumentRequest() != null&& request.getDocumentRequest().get(0) != null&& request.getDocumentRequest().get(0).getHomeCommunityId() != null) {homeCommunityId =HomeCommunityMap.getHomeCommunityIdWithPrefix(request.getDocumentRequest().get(0).getHomeCommunityId());} else {LOG.error(""HomeCommunityId doesn't exist in the received RetrieveDocumentSetRequestType message"");}return homeCommunityId;}}"	No
1449	"public class A {@Overridepublic void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {super.exceptionCaught(ctx, cause);Logger.warn(""{}"", cause.getMessage());Channel channel = ctx.channel();if (channel.isActive()) ctx.close();}}"	No
1450	"public class A {@Overridepublic int getChildCount(String nodeId) {EntityReference wikiReference = resolve(nodeId);if (wikiReference != null && wikiReference.getType() == EntityType.WIKI) {try {return getChildCount(new WikiReference(wikiReference));} catch (QueryException e) {this.logger.warn(""Failed to count the children of [{}]. Root cause [{}]."",nodeId,ExceptionUtils.getRootCauseMessage(e));}}return 0;}}"	No
1451	"public class A {@Override@SuppressWarnings(""unchecked"")public <F, T, D extends ConvertorData> Optional<T> convert(final F source, final D data) {Optional<T> result = Optional.empty();if (source == null) {return result;}final Class<?> type =source instanceof DataContainer? ((DataContainer) source).implementedInterface(): source.getClass();if (type == null) {return result;}return findConvertor(data.getVersion(), type).map(convertor -> (T) convertor.convert(source, data));}}"	Yes
1452	"public class A {private FloatValidRange readFloatValidRangeSet() throws XMLStreamException {StartElement element = xmlEvent.asStartElement();boolean calib = readBooleanAttribute(""validRangeAppliesToCalibrated"", element, true);FloatValidRange fvr = null;while (true) {xmlEvent = xmlEventReader.nextEvent();if (isStartElementWithName(XTCE_VALID_RANGE)) {if (fvr != null) {throw new XMLStreamException(""Only one ValidRange supported. "", xmlEvent.getLocation());}fvr = readFloatValidRange();} else if (isEndElementWithName(XTCE_VALID_RANGE_SET)) {if (fvr == null) {throw new XMLStreamException(""No ValidRange supecified "", xmlEvent.getLocation());}fvr.setValidRangeAppliesToCalibrated(calib);return fvr;}}}}"	Yes
1453	"public class A {public void visit(BatchMessage msg) throws ArgumentNotValid {ArgumentNotValid.checkNotNull(ar, ""ar"");ArgumentNotValid.checkNotNull(msg, ""BatchMessage msg"");try {ReplicaClient rc = ar.getReplicaClientFromReplicaId(msg.getReplicaId());rc.sendBatchJob(msg);} catch (Throwable t) {BatchReplyMessage replyMessage =new BatchReplyMessage(msg.getReplyTo(),Channels.getTheRepos(),msg.getID(),0,Collections.<File>emptyList(),null);replyMessage.setNotOk(t);JMSConnectionFactory.getInstance().send(replyMessage);}}}"	Yes
1454	"public class A {@Testpublic void testSQLSelectsArrayAttributes() throws Exception {String createTableString =String.format(""CREATE EXTERNAL TABLE message (\n""+ ""event_timestamp TIMESTAMP, \n""+ ""attributes ARRAY<ROW<key VARCHAR, `value` VARCHAR>>, \n""+ ""payload ROW< \n""+ ""             id INTEGER, \n""+ ""             name VARCHAR \n""+ ""           > \n""+ "") \n""+ ""TYPE '%s' \n""+ ""LOCATION '%s' \n""+ ""TBLPROPERTIES '{ ""+ ""%s""+ ""\""protoClass\"" : \""%s\"", ""+ ""\""timestampAttributeKey\"" : \""ts\"" }'"",tableProvider.getTableType(),eventsTopic.topicPath(),payloadFormatParam(),PayloadMessages.SimpleMessage.class.getName());String queryString =""SELECT message.payload.id, attributes[1].key AS a1, attributes[2].key AS a2 FROM message"";BeamSqlEnv sqlEnv = BeamSqlEnv.inMemory(new PubsubTableProvider());sqlEnv.executeDdl(createTableString);PCollection<Row> queryOutput = query(sqlEnv, pipeline, queryString);queryOutput.apply(""waitForSuccess"",resultSignal.signalSuccessWhen(SchemaCoder.of(PAYLOAD_SCHEMA),observedRows -> {Map<Integer, String> entries = new HashMap<>();for (Row row : observedRows) {if (""ts"".equals(row.getString(""a1""))) {entries.put(row.getInt32(""id""), row.getString(""a2""));} else {entries.put(row.getInt32(""id""), row.getString(""a1""));}}return entries.equals(ImmutableMap.of(3, ""foo"", 5, ""bar"", 7, ""baz""));}));pipeline.run();eventsTopic.assertSubscriptionEventuallyCreated(pipeline.getOptions().as(GcpOptions.class).getProject(), Duration.standardMinutes(5));eventsTopic.publish(ImmutableList.of(objectsProvider.messageIdName(ts(1), 3, ""foo""),objectsProvider.messageIdName(ts(2), 5, ""bar""),objectsProvider.messageIdName(ts(3), 7, ""baz"")));resultSignal.waitForSuccess(timeout);}}"	Yes
1455	"public class A {@Overridepublic byte[] getData(final String path, final Watcher watcher, final Stat stat)throws KeeperException, InterruptedException {return execute(new ZKExecutor<byte[]>(""getData"") {@Overridebyte[] execute() throws KeeperException, InterruptedException {LOG.debug(""ZK Call - getData [{0}] [{1}] [{2}]"", path, watcher, stat);return ZooKeeperClient.super.getData(path, watcher, stat);}});}}"	No
1456	"public class A {protected List<Resource> fixMissingResources(long companyId,long groupId,String name,String primKey,String actionId,List<Resource> resources)throws Exception {int count =ResourcePermissionLocalServiceUtil.getResourcePermissionsCount(companyId, name, ResourceConstants.SCOPE_INDIVIDUAL, primKey);if (count > 0) {return resources;}String newIndividualResourcePrimKey = null;if (primKey.contains(PortletConstants.LAYOUT_SEPARATOR)) {newIndividualResourcePrimKey = name;if (_log.isDebugEnabled()) {String message =StringBundler.concat(""Using defaults because custom permissions for portlet "",""resource "",name,"" are not defined"");}} else if ((groupId > 0) && ResourceActionsUtil.isRootModelResource(name)) {newIndividualResourcePrimKey = name;if (_log.isDebugEnabled()) {String message =StringBundler.concat(""Using defaults because custom permissions for root model "",""resource "",name,"" are not defined"");}} else if (primKey.equals(""0"")|| primKey.equals(String.valueOf(ResourceConstants.PRIMKEY_DNE))|| (primKey.equals(String.valueOf(companyId)) && !name.equals(Company.class.getName()))) {newIndividualResourcePrimKey = name;if (_log.isWarnEnabled()) {StringBundler sb = new StringBundler(9);sb.append(""Using "");sb.append(name);sb.append("" as the primary key instead of the legacy primary "");sb.append(""key "");sb.append(primKey);sb.append("" that was used for permission checking of "");sb.append(name);sb.append("" in company "");sb.append(companyId);}}if (newIndividualResourcePrimKey != null) {Resource individualResource = resources.get(0);if (individualResource.getScope() != ResourceConstants.SCOPE_INDIVIDUAL) {throw new IllegalArgumentException(""The first resource must be an individual scope"");}individualResource.setPrimKey(name);}return resources;}}"	Yes
1457	"public class A {@Verify(global = false)public void verify() {if (isClient(targetInstance)) {return;}MapStoreConfig mapStoreConfig =targetInstance.getConfig().getMapConfig(name).getMapStoreConfig();int writeDelayMs = (int) TimeUnit.SECONDS.toMillis(mapStoreConfig.getWriteDelaySeconds());int sleepMs = mapStoreMaxDelayMs * 2 + maxTTLExpiryMs * 2 + (writeDelayMs * 2);logger.info(""Sleeping for ""+ TimeUnit.MILLISECONDS.toSeconds(sleepMs)+ "" seconds to wait for delay and TTL values."");sleepMillis(sleepMs);final MapStoreWithCounter mapStore = (MapStoreWithCounter) mapStoreConfig.getImplementation();logger.info(name + "": map size = "" + map.size());logger.info(name + "": map store = "" + mapStore);assertTrueEventually(() -> {for (Integer key : map.localKeySet()) {assertEquals(map.get(key), mapStore.get(key));}assertEquals(""Map entrySets should be equal"",map.getAll(map.localKeySet()).entrySet(),mapStore.entrySet());for (int key = putTTlKeyDomain; key < putTTlKeyDomain + putTTlKeyRange; key++) {assertNull(name + "": TTL key should not be in the map"", map.get(key));}});}}"	No
1458	public class A {@Overridepublic void handleAsdu(final Connection connection, final ASdu asdu) throws IOException {throw new UnsupportedOperationException();}}	Yes
1459	"public class A {private DataStorageConfiguration configureDataRegionForDefragmentation(DataStorageConfiguration memCfg) throws IgniteCheckedException {List<DataRegionConfiguration> regionConfs = new ArrayList<>();DataStorageConfiguration dataConf = memCfg;regionConfs.add(dataConf.getDefaultDataRegionConfiguration());if (dataConf.getDataRegionConfigurations() != null)regionConfs.addAll(Arrays.asList(dataConf.getDataRegionConfigurations()));long totalDefrRegionSize = 0;long totalRegionsSize = 0;for (DataRegionConfiguration regionCfg : regionConfs) {totalDefrRegionSize =Math.max(totalDefrRegionSize,(long)(regionCfg.getMaxSize()* 0.01* defragmentationRegionSizePercentageOfConfiguredSize));totalRegionsSize += regionCfg.getMaxSize();}double shrinkPercentage = 1d * (totalRegionsSize - totalDefrRegionSize) / totalRegionsSize;for (DataRegionConfiguration region : regionConfs) {long newSize = (long) (region.getMaxSize() * shrinkPercentage);long newInitSize = Math.min(region.getInitialSize(), newSize);region.setMaxSize(newSize);region.setInitialSize(newInitSize);region.setCheckpointPageBufferSize(0);}long mappingRegionSize = Math.min(GB, (long) (totalDefrRegionSize * 0.1));checkpointedDataRegions.remove(addDataRegion(memCfg,createDefragmentationDataRegionConfig(totalDefrRegionSize - mappingRegionSize),true,new DefragmentationPageReadWriteManager(cctx.kernalContext(), ""defrgPartitionsStore"")));checkpointedDataRegions.remove(addDataRegion(memCfg,createDefragmentationMappingRegionConfig(mappingRegionSize),true,new DefragmentationPageReadWriteManager(cctx.kernalContext(), ""defrgLinkMappingStore"")));return dataConf;}}"	Yes
1460	"public class A {private void load() {if (buffer.length() == 0) {String path = Packages.absolutePath(scope, fileName);Application app = Application.get();IResourceStream stream =app.getResourceSettings().getResourceStreamLocator().locate(scope, path, getStyle(), getVariation(), getLocale(), null, false);if (stream == null) {stream =new ResourceStreamLocator().locate(scope, path, getStyle(), getVariation(), getLocale(), null, false);}if (stream == null) {throw new IllegalArgumentException(""resource "" + fileName + "" not found for scope "" + scope + "" (path = "" + path + "")"");}setLastModified(stream.lastModifiedTime());try {if (encoding != null) {buffer.append(Streams.readString(stream.getInputStream(), encoding));} else {buffer.append(Streams.readString(stream.getInputStream()));}} catch (IOException e) {throw new RuntimeException(e);} catch (ResourceStreamNotFoundException e) {throw new RuntimeException(e);} finally {try {stream.close();} catch (IOException e) {}}}}}"	Yes
1461	"public class A {private void updateOtherProperties(IaasProvider updatedIaasProvider, Properties properties) {for (Object property : properties.keySet()) {if (property instanceof String) {String key = (String) property;updatedIaasProvider.setProperty(key, properties.getProperty(key));if (log.isDebugEnabled()) {log.debug(""Added property "" + key + "" to the IaasProvider."");}}}}}"	No
1462	public class A {private void handleEffect(Command command) throws IOException, CommandUnsuccessfulException {if (command instanceof StringType) {String effectName = command.toString();Effect effect = new Effect(effectName);EffectCommand effectCommand = new EffectCommand(effect, priority);sendCommand(effectCommand);} else {}}}	Yes
1463	public class A {public static AddressPlan jsonToAddressPlan(JsonObject jsonData) throws IOException {return new ObjectMapper().readValue(jsonData.toString(), AddressPlan.class);}}	Yes
1464	"public class A {@Overridepublic void onComplete(OperationFuture<?> f) throws Exception {if (!((Boolean) f.get())) {logger.error(""Operation failed "" + f);}}}"	Yes
1465	"public class A {public static void removeAll(ZooKeeper zooKeeper, String path)throws KeeperException, InterruptedException {List<String> list = zooKeeper.getChildren(path, false);for (String p : list) {removeAll(zooKeeper, path + ""/"" + p);}LOG.info(""Removing path [{0}]"", path);zooKeeper.delete(path, -1);}}"	No
1466	public class A {@Testpublic void testOneNodeRestartWithTtlCache() throws Exception {eagerTtl = true;IgniteEx ignite = startGrid(0);ignite.cluster().state(ClusterState.ACTIVE);IgniteCache<Integer, Integer> cache = ignite.cache(DEFAULT_CACHE_NAME);for (int i = 0; i < ENTRIES; i++) cache.put(i, i);ignite.close();LogListener assertListener = LogListener.matches(ASSERTION_ERR).build();listeningLog.registerListener(assertListener);ignite = startGrid(0);CountDownLatch exchangeHangLatch = new CountDownLatch(1);ignite.context().cache().context().exchange().registerExchangeAwareComponent(new PartitionsExchangeAware() {@Overridepublic void onInitBeforeTopologyLock(GridDhtPartitionsExchangeFuture fut) {try {exchangeHangLatch.await();} catch (InterruptedException e) {fail(e.getMessage());}}});IgniteInternalFuture<?> activeFut =GridTestUtils.runAsync(() -> ignite(0).cluster().state(ClusterState.ACTIVE));assertFalse(activeFut.isDone());assertFalse(GridTestUtils.waitForCondition(assertListener::check, 2_000));exchangeHangLatch.countDown();activeFut.get();awaitPartitionMapExchange();}}	Yes
1467	"public class A {public void performOperation() {Timer.Context ctx = timer.time();try {for (int shard : allShards) {Map<Granularity, Map<Integer, UpdateStamp>> slotTimes =shardStateManager.getDirtySlotsToPersist(shard);if (slotTimes != null) {try {getIO().putShardState(shard, slotTimes);} catch (IOException ex) {log.error(""Could not put shard state to the database (shard ""+ shard+ ""). ""+ ex.getMessage(),ex);}}}} catch (RuntimeException ex) {} finally {ctx.stop();}}}"	Yes
1468	public class A {@Overridepublic void run() {lifecycle.resumeToShutdown();try {shutdownEnabler.waitUntilTriggered();} finally {}}}	Yes
1469	"public class A {@Overridepublic long getModificationDate() {try {return Files.getLastModifiedTime(Paths.get(path)).toMillis();} catch (IOException e) {log.warn(String.format(""Failure getting timestamp of %s. %s"", path, e.getMessage()));return -1L;}}}"	No
1470	"public class A {@Overridepublic void modifiedAttributes(ServerSession session, Path path, Map<String, ?> attrs, Throwable thrown) {modifiedCount.incrementAndGet();log.info(""modifiedAttributes(""+ session+ "") ""+ path+ ((thrown == null)? """": ("": "" + thrown.getClass().getSimpleName() + "": "" + thrown.getMessage())));}}"	No
1471	public class A {private void updateLogicalInterconnectTelemetryConfigurationV200() {LogicalInterconnect logicalInterconnect =resourceDtoUtils.getLogicalInterconnectByName(RESOURCE_NAME);TelemetryConfiguration telemetryConfiguration =logicalInterconnectClient.getTelemetryConfiguration(logicalInterconnect.getResourceId(), TELEMETRY_ID);telemetryConfiguration.setEnableTelemetry(!telemetryConfiguration.getEnableTelemetry());TaskResource task =logicalInterconnectClient.updateTelemetryConfiguration(logicalInterconnect.getResourceId(), TELEMETRY_ID, telemetryConfiguration);}}	Yes
1472	"public class A {@Overridepublic void rowEofResponse(byte[] eof, BackendConnection conn) {LOGGER.warn(new StringBuilder().append(""unexpected packet for "").append(conn).append("" bound by "").append(session.getSource()).append("": field's eof"").toString());conn.quit();killee.close(""killed"");}}"	No
1473	public class A {@Overridepublic void onEvent(EventSource eventSource, String id, String type, String data) {Exchange exchange = createExchange(false);try {SoroushMessage soroushMessage = objectMapper.readValue(data, SoroushMessage.class);exchange.getIn().setBody(soroushMessage);if (LOG.isDebugEnabled()) {}if (endpoint.isAutoDownload()) {endpoint.handleDownloadFiles(soroushMessage);}sendExchange(exchange);} catch (Exception ex) {getExceptionHandler().handleException(ex);}}}	Yes
1474	"public class A {public Message get(int batchSize) throws CanalClientException {int times = 0;while (times < retryTimes) {try {Message msg = currentConnector.get(batchSize);return msg;} catch (Throwable t) {logger.warn(String.format(""something goes wrong when getting data from server:%s"",currentConnector != null ? currentConnector.getAddress() : ""null""),t);times++;restart();}}throw new CanalClientException(""failed to fetch the data after "" + times + "" times retry"");}}"	Yes
1475	public class A {public final void startIndexing() {try {for (IndexType IndexType : IndexType.values()) {writers.put(IndexType, createIndexWriter(IndexType));}} catch (IOException e) {}}}	Yes
1476	"public class A {private static void onFileExport(final ExportType type, final Container cont) {int width = cont.getWidth();int height = cont.getHeight();if (width <= 0 || height <= 0) {String msg = ""View is too small to be exported."";JOptionPane.showConfirmDialog(cont, msg, ""Warning"", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE);return;}JFileChooser chooser = new JFileChooser(lastExportFile);chooser.setFileFilter(new FileReaderFileFilter(type.getFileSuffix(), type.getDescription()));int returnVal = chooser.showSaveDialog(cont);File selectedFile;if (returnVal == JFileChooser.APPROVE_OPTION) {selectedFile = chooser.getSelectedFile();String suf = type.getFileSuffix();if (!suf.startsWith(""."")) {suf = ""."" + suf;}if (!selectedFile.getName().endsWith(suf)) {selectedFile = new File(selectedFile.getAbsolutePath().concat(suf));}} else {return;}try {type.export(selectedFile, cont, width, height);} catch (IOException e) {JOptionPane.showConfirmDialog(cont,""View could not be exported."",""Warning"",JOptionPane.DEFAULT_OPTION,JOptionPane.WARNING_MESSAGE);return;} catch (Exception e) {JOptionPane.showConfirmDialog(cont,""View could not be exported."",""Warning"",JOptionPane.DEFAULT_OPTION,JOptionPane.WARNING_MESSAGE);return;}lastExportFile = selectedFile;JOptionPane.showConfirmDialog(cont,""View successfully exported."",""Info"",JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE);}}"	Yes
1477	"public class A {@Overridepublic void run() {boolean locked = false;try {Profiler p = new Profiler();p.start();locked = WorkLock.lock(timeoutSeconds);p.stop();System.out.println(""Thread "" + id + "" waited "" + p.getDurationInMillis() + "" ms, locked="" + locked);if (locked) {Thread.sleep(jobDuration * 1000);}} catch (InterruptedException e) {} finally {if (locked) {boolean unlocked = WorkLock.unlock();System.out.println(""Thread "" + id + ""  unlocked="" + unlocked);}}}}"	Yes
1478	"public class A {protected String replaceAll(String strCmd, Map<String, String> mapInputs) {if (mapInputs.isEmpty()) return strCmd;String regexp = """";for (String input : mapInputs.keySet()) regexp += parameterToPlaceholder(input);regexp = regexp.substring(0, regexp.length() - 1);LOG.debug(""replaceAll.regexp = "" + regexp);StringBuffer sb = new StringBuffer();Pattern p = Pattern.compile(regexp);Matcher m = p.matcher(strCmd);while (m.find()) {String param = placeholderToParameter(m.group());m.appendReplacement(sb, mapInputs.get(param));}m.appendTail(sb);return sb.toString();}}"	No
1479	public class A {public void addDataSourceInformation(DataSourceInformation dataSourceInformation) {assertDataSourceInformationNull(dataSourceInformation);String repositoryType = dataSourceInformation.getRepositoryType();if (log.isDebugEnabled()) {}if (DataSourceConstants.PROP_REGISTRY_JNDI.equals(repositoryType)) {jndiBasedDataSourceRepository.register(dataSourceInformation);} else {inMemoryDataSourceRepository.register(dataSourceInformation);}}}	Yes
1480	public class A {@Overridepublic InvestmentSolution readSolution() throws IOException {solution = new InvestmentSolution();solution.setId(0L);readParametrization();readRegionList();readSectorList();readAssetClassList();createAssetClassAllocationList();BigInteger possibleSolutionSize =BigInteger.valueOf(solution.getAssetClassList().size()).multiply(BigInteger.valueOf(InvestmentNumericUtil.MAXIMUM_QUANTITY_MILLIS));return solution;}}	Yes
1481	"public class A {public IngestContractDto create(VitamContext vitamContext, IngestContractDto ingestContractDto) {try {LOGGER.info(""Create Ingest Contract EvIdAppSession : {} "", vitamContext.getApplicationSessionId());RequestResponse requestResponse =ingestContractService.createIngestContracts(vitamContext, converter.convertDtosToVitams(Arrays.asList(ingestContractDto)));final IngestContractModel ingestContractVitamDto =objectMapper.treeToValue(requestResponse.toJsonNode(), IngestContractModel.class);return converter.convertVitamToDto(ingestContractVitamDto);} catch (InvalidParseOperationException | AccessExternalClientException | IOException e) {throw new InternalServerException(""Can't create ingest contract"", e);}}}"	No
1482	"public class A {private static void pushDataSetToS3(AmazonS3 s3Client, Bucket bucket, List<StaticRifResource> dataResources) {List<DataSetManifestEntry> manifestEntries =dataResources.stream().map(r -> new DataSetManifestEntry(r.name(), r.getRifFileType())).collect(Collectors.toList());DataSetManifest manifest = new DataSetManifest(Instant.now(), 0, manifestEntries);s3Client.putObject(DataSetTestUtilities.createPutRequest(bucket, manifest));TransferManager transferManager =TransferManagerBuilder.standard().withS3Client(s3Client).build();for (int i = 0; i < dataResources.size(); i++) {StaticRifResource dataResource = dataResources.get(i);URL dataResourceUrl = dataResource.getResourceUrl();Pattern s3HttpObjectRegex = Pattern.compile(""http://(.+)\\.s3\\.amazonaws\\.com/(.+)"");Matcher s3HttpObjectMatcher = s3HttpObjectRegex.matcher(dataResourceUrl.toString());if (s3HttpObjectMatcher.matches()) {String sourceBucketName = s3HttpObjectMatcher.group(1);String sourceKey = s3HttpObjectMatcher.group(2);String objectKey =String.format(""%s/%s/%s"",CcwRifLoadJob.S3_PREFIX_PENDING_DATA_SETS,manifest.getTimestampText(),manifest.getEntries().get(i).getName());Copy s3CopyOperation =transferManager.copy(new CopyObjectRequest(sourceBucketName, sourceKey, bucket.getName(), objectKey));try {s3CopyOperation.waitForCopyResult();} catch (InterruptedException e) {throw new BadCodeMonkeyException(e);}} else {s3Client.putObject(DataSetTestUtilities.createPutRequest(bucket, manifest, manifest.getEntries().get(i), dataResourceUrl));}}transferManager.shutdownNow(false);LOGGER.info(""Data set uploaded to S3."");}}"	No
1483	public class A {public DataFileDto findDataFile(final Long id) {final DataFile dataFile = dataFileService.find(id);return dataFileToDataFileDtoConverter.convert(dataFile);}}	Yes
1484	"public class A {private String merge(String beanStringValue) {Map<String, String> map = convertToMap(beanStringValue);for (Map.Entry<String, String> entry : map.entrySet()) {String key = entry.getKey();String propKey = PROPERTY_PREFIX + key;if (properties.containsKey(propKey)) {map.put(key, entry.getValue() + "","" + properties.getProperty(propKey));} else {LOGGER.warn(""Missing RM security definition for method {}"", key);}}return convertToString(map);}}"	No
1485	"public class A {@Overridepublic Document addContextualizedValue(String field, String context, Object value) {checkField(field, value);FieldDescriptor fieldDescriptor = this.listFieldDescriptors().get(field);if (!fieldDescriptor.isMultiValue()) {throw new IllegalArgumentException(""Invalid operation: The field "" + field + "" is not multivalued."");}Map<String, Object> contexts = this.values.get(field);if (contexts == null) {contexts = new HashMap<>();}Collection<Object> values = (Collection) contexts.get(context);if (values == null) {values = new ArrayList<>();}values.add(value);contexts.put(context, values);this.values.put(field, contexts);if (Objects.nonNull(context)) {fieldDescriptor.setContextualized(true);}return this;}}"	Yes
1486	"public class A {@Overrideprotected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters)throws Exception {CxfRsEndpoint answer;Object value = parameters.remove(""setDefaultBus"");if (value != null) {LOG.warn(""The option setDefaultBus is @deprecated, use name defaultBus instead"");if (!parameters.containsKey(""defaultBus"")) {parameters.put(""defaultBus"", value);}}if (remaining.startsWith(CxfConstants.SPRING_CONTEXT_ENDPOINT)) {String beanId = remaining.substring(CxfConstants.SPRING_CONTEXT_ENDPOINT.length());if (beanId.startsWith(""//"")) {beanId = beanId.substring(2);}AbstractJAXRSFactoryBean bean =CamelContextHelper.mandatoryLookup(getCamelContext(), beanId, AbstractJAXRSFactoryBean.class);CxfRsEndpointFactoryBean factory = null;if (bean.getClass().getName().contains(""blueprint"")) {Class<CxfRsEndpointFactoryBean> clazz =getCamelContext().getClassResolver().resolveMandatoryClass(""org.apache.camel.component.cxf.jaxrs.blueprint.CxfRsBlueprintEndpointFactoryBean"",CxfRsEndpointFactoryBean.class);factory = getCamelContext().getInjector().newInstance(clazz);} else {factory = new DefaultCxfRsEndpointFactoryBean();}answer = factory.createEndpoint(this, remaining, bean);if (bean.getProperties() != null) {Map<String, Object> copy = new HashMap<>();copy.putAll(bean.getProperties());setProperties(answer, copy);}answer.setBeanId(beanId);} else {answer = new CxfRsEndpoint(remaining, this);}String resourceClass = getAndRemoveParameter(parameters, ""resourceClass"", String.class);if (resourceClass != null) {Class<?> clazz = getCamelContext().getClassResolver().resolveMandatoryClass(resourceClass);answer.addResourceClass(clazz);}String resourceClasses = getAndRemoveParameter(parameters, ""resourceClasses"", String.class);Iterator<?> it = ObjectHelper.createIterator(resourceClasses);while (it.hasNext()) {String name = (String) it.next();Class<?> clazz = getCamelContext().getClassResolver().resolveMandatoryClass(name);answer.addResourceClass(clazz);}setProperties(answer, parameters);Map<String, String> params = CastUtils.cast(parameters);answer.setParameters(params);setEndpointHeaderFilterStrategy(answer);if (answer.getSslContextParameters() == null) {answer.setSslContextParameters(retrieveGlobalSslContextParameters());}return answer;}}"	No
1487	"public class A {public synchronized void addKeys(List<Kvrpcpb.LockInfo> locks, int expected, long startTs, long commitTs)throws ResolveLockException {if (locks.size() < expected) {if (!this.missingLock) {if (commitTs != 0 && commitTs < this.commitTs) {throw new ResolveLockException(String.format(""commit TS must be greater or equal to min commit TS, commitTs=%d,""+ "" minCommitTs=%d"",commitTs, this.commitTs));}this.commitTs = commitTs;}this.missingLock = true;if (this.commitTs != commitTs) {throw new ResolveLockException(String.format(""commit TS mismatch in async commit recovery: %d and %d"", this.commitTs, commitTs));}} else {for (Kvrpcpb.LockInfo lockInfo : locks) {if (lockInfo.getLockVersion() != startTs) {throw new ResolveLockException(String.format(""unexpected timestamp, expected: %d, found: %d"",startTs, lockInfo.getLockVersion()));}if (!this.missingLock && lockInfo.getMinCommitTs() > this.commitTs) {this.commitTs = lockInfo.getMinCommitTs();}this.appendKey(lockInfo.getKey());}}}}"	Yes
1488	"public class A {public static void main(String[] args) {EntityManagerFactory emf = Persistence.createEntityManagerFactory(""twissandra,twingo,twirdbms"");EntityManager em = emf.createEntityManager();try {Set<User> users = UserBroker.brokeUserList(args[0]);for (Iterator<User> iterator = users.iterator(); iterator.hasNext(); ) {User user = (User) iterator.next();ExecutorService.onPersist(em, user);ExecutorService.findByKey(em, ""BigDataUser"");List<User> fetchedUsers = ExecutorService.onQueryByEmail(em, user);if (fetchedUsers != null && fetchedUsers.size() > 0) {logger.info(user.toString());}logger.info("""");System.out.println(""#######################Querying##########################################"");logger.info("""");logger.info("""");}String query = ""Select u from User u"";logger.info(query);ExecutorService.findByQuery(em, query);logger.info("""");System.out.println(""#######################Querying##########################################"");logger.info("""");logger.info("""");query = ""Select * from tweets where user_id='RDBMSUser'"";logger.info(query);ExecutorService.findByNativeQuery(em, query);} finally {onDestroyDBResources(emf, em);}}}"	No
1489	"public class A {public void setMatchOneMappings(List<String> list) {String[] values;matchOneMap.clear();if (list != null) {for (String mapping : list) {values = mapping.split(""="");if (values.length == 2) {securityLogger.audit(""Adding mapping: {} = {} to matchOneMap."", values[1].trim(), values[0].trim());matchOneMap.put(values[1].trim(), values[0].trim());} else {}}}}}"	Yes
1490	"public class A {private int getEscapedWordIndex() {try {int caretPos = Math.max(0, getEffectiveCaretPosition() - 1);String expression = textComponent.getDocument().getText(0, caretPos);int escapeEnd = -1;do {int escapeStart = expression.indexOf(""'"", escapeEnd + 1);if (escapeStart != -1) {escapeEnd = expression.indexOf(""'"", escapeStart + 1);if (escapeEnd == -1) {return escapeStart;}} else {return -1;}} while (true);} catch (BadLocationException e) {}return -1;}}"	Yes
1491	"public class A {private boolean handleSAML2Response(HttpServletRequest request, HttpServletResponse response)throws IOException {HttpSession session = request.getSession(true);String samlResponse = request.getParameter(GeneralConstants.SAML_RESPONSE_KEY);HTTPContext httpContext = new HTTPContext(request, response, this.servletContext);Set<SAML2Handler> handlers = chain.handlers();Principal principal = request.getUserPrincipal();boolean willSendRequest;try {ServiceProviderSAMLResponseProcessor responseProcessor =new ServiceProviderSAMLResponseProcessor(request.getMethod().equals(""POST""),serviceURL,this.picketLinkConfiguration,this.idpMetadata);if (auditHelper != null) {responseProcessor.setAuditHelper(auditHelper);}responseProcessor.setTrustKeyManager(keyManager);SAML2HandlerResponse saml2HandlerResponse =responseProcessor.process(samlResponse, httpContext, handlers, chainLock);Document samlResponseDocument = saml2HandlerResponse.getResultingDocument();String relayState = saml2HandlerResponse.getRelayState();String destination = saml2HandlerResponse.getDestination();willSendRequest = saml2HandlerResponse.getSendRequest();String destinationQueryStringWithSignature =saml2HandlerResponse.getDestinationQueryStringWithSignature();if (destination != null && samlResponseDocument != null) {sendRequestToIDP(destination,samlResponseDocument,relayState,request,response,willSendRequest,destinationQueryStringWithSignature);} else {boolean sessionValidity = request.getUserPrincipal() != null;if (!sessionValidity) {sendToLogoutPage(request, response, session);return false;}List<String> roles = saml2HandlerResponse.getRoles();if (principal == null) {principal = (Principal) session.getAttribute(GeneralConstants.PRINCIPAL_ID);}if (principal == null) {throw new RuntimeException(ErrorCodes.NULL_VALUE + "" principal"");}if (isEnableAudit()) {PicketLinkAuditEvent auditEvent = new PicketLinkAuditEvent(AuditLevel.INFO);auditEvent.setType(PicketLinkAuditEventType.RESPONSE_FROM_IDP);auditEvent.setSubjectName(principal.getName());auditEvent.setWhoIsAuditing(getContextPath());auditHelper.audit(auditEvent);}return true;}} catch (ProcessingException pe) {Throwable t = pe.getCause();if (t != null && t instanceof AssertionExpiredException) {logger.error(""Assertion has expired. Asking IDP for reissue"");if (isEnableAudit()) {PicketLinkAuditEvent auditEvent = new PicketLinkAuditEvent(AuditLevel.INFO);auditEvent.setType(PicketLinkAuditEventType.EXPIRED_ASSERTION);auditEvent.setAssertionID(((AssertionExpiredException) t).getId());auditHelper.audit(auditEvent);}return generalUserRequest(request, response);}logger.samlSPHandleRequestError(pe);throw logger.samlSPProcessingExceptionError(pe);} catch (Exception e) {logger.samlSPHandleRequestError(e);throw logger.samlSPProcessingExceptionError(e);}return localAuthentication(request, response);}}"	No
1492	"public class A {protected void killMaster(ServerName server) throws IOException {cluster.killMaster(server);cluster.waitForMasterToStop(server, killMasterTimeout);getLogger().info(""Killed master "" + server);}}"	Yes
1493	"public class A {public void terminate() {if (cf != null) {cf.terminate();}if (channel != null) {channel.close();}if (listener == null) {return;}logger.debug(""terminate "" + listener);listener.setDone();try {while (listener.isAlive()) {listener.interrupt();listener.join(100);}} catch (InterruptedException u) {Thread.currentThread().interrupt();}listener = null;}}"	No
1494	public class A {private void setObjectType(URI pred, URI type) {for (Statement st : ds.match(null, pred, null)) {if (st.getObject() instanceof Resource) {Resource subj = (Resource) st.getObject();ds.add(subj, RDF.TYPE, type);} else {}}}}	Yes
1495	"public class A {public void postInitialize() {try {main = new OHLCMain();main.run(runtimeURI);} catch (Exception e) {}log.info(""OHLCSample-example started."");}}"	Yes
1496	"public class A {protected void initSecurityMBean() {this.mBeanServer = ManagementFactory.getPlatformMBeanServer();Set<ObjectName> mbeans = new HashSet<>();try {mbeans = mBeanServer.queryNames(new ObjectName(""*:type=security,area=jmx,*""), null);if (LOG.isDebugEnabled()) {LOG.debug(""Found JMXSecurity MBeans: {}"", mbeans);}} catch (MalformedObjectNameException e) {LOG.error(e.getMessage(), e);}if (mbeans.isEmpty()) {LOG.info(""Didn't discover any JMXSecurity MBeans, role based access control is disabled"");this.securityMBean = null;return;}ObjectName chosen = JmxHelpers.chooseMBean(mbeans);LOG.info(""Using MBean [{}] for role based access control"", chosen);this.securityMBean = chosen;}}"	No
1497	"public class A {protected void internalSetMaxProducersPerTopic(Integer maxProducersPerTopic) {validateNamespacePolicyOperation(namespaceName, PolicyName.MAX_PRODUCERS, PolicyOperation.WRITE);validatePoliciesReadOnlyAccess();try {if (maxProducersPerTopic != null && maxProducersPerTopic < 0) {throw new RestException(Status.PRECONDITION_FAILED, ""maxProducersPerTopic must be 0 or more"");}final String path = path(POLICIES, namespaceName.toString());updatePolicies(path,(policies) -> {policies.max_producers_per_topic = maxProducersPerTopic;return policies;});log.info(""[{}] Successfully updated maxProducersPerTopic configuration: namespace={}, value={}"",clientAppId(),namespaceName,maxProducersPerTopic);} catch (RestException pfe) {throw pfe;} catch (Exception e) {log.error(""[{}] Failed to update maxProducersPerTopic configuration for namespace {}"",clientAppId(),namespaceName,e);throw new RestException(e);}}}"	No
1498	"public class A {public void parse(String sourceName, InputStream in) throws IOException {BufferedReader br = asReader(in);String txt;int lineNumber = 1;while ((txt = br.readLine()) != null) {if (txt.length() > 0 && !txt.startsWith(""#"") && !txt.equals(""/"")) {FastIgnoreRule rule = new FastIgnoreRule();try {rule.parse(txt);} catch (InvalidPatternException e) {if (sourceName != null) {LOG.error(MessageFormat.format(JGitText.get().badIgnorePatternFull,sourceName,Integer.toString(lineNumber),e.getPattern(),e.getLocalizedMessage()),e);} else {LOG.error(MessageFormat.format(JGitText.get().badIgnorePattern, e.getPattern()), e);}}if (!rule.isEmpty()) {rules.add(rule);}}lineNumber++;}}}"	No
1499	"public class A {public void testInnerJarFilesOnlyFileSerialization() throws Exception {VirtualFile outerjar = getVirtualFile(""/vfs/test/outer.jar"");List<Closeable> mounts = recursiveMount(outerjar);try {assertTrue(""outer.jar != null"", outerjar != null);VirtualFile jar1 = outerjar.getChild(""jar1-filesonly.jar"");assertTrue(""outer.jar/jar1-filesonly.jar != null"", jar1 != null);VirtualFile jar1MF = jar1.getChild(""META-INF/MANIFEST.MF"");assertNotNull(""jar1-filesonly!/META-INF/MANIFEST.MF"", jar1MF);InputStream mfIS = jar1MF.openStream();Manifest mf1 = new Manifest(mfIS);Attributes mainAttrs1 = mf1.getMainAttributes();String title1 = mainAttrs1.getValue(Attributes.Name.SPECIFICATION_TITLE);assertEquals(""jar1-filesonly"", title1);mfIS.close();VirtualFile jar1DS = serializeDeserialize(jar1, VirtualFile.class);assertNotNull(""jar1 deserialized"", jar1DS);VirtualFile jar1DSMF = jar1DS.getChild(""META-INF/MANIFEST.MF"");assertNotNull(""jar1-filesonly!/META-INF/MANIFEST.MF"", jar1DSMF);mfIS = jar1DSMF.openStream();mf1 = new Manifest(mfIS);mainAttrs1 = mf1.getMainAttributes();title1 = mainAttrs1.getValue(Attributes.Name.SPECIFICATION_TITLE);assertEquals(""jar1-filesonly"", title1);mfIS.close();} finally {VFSUtils.safeClose(mounts);}}}"	Yes
1500	"public class A {@Overridepublic ProcessDocReport call() throws Exception {try {if (LOG.isInfoEnabled()) {LOG.info(new StringBuilder(""started handling route status change from "").append(statusChangeEvent.getOldRouteStatus()).append("" to "").append(statusChangeEvent.getNewRouteStatus()).append("" for document "").append(statusChangeEvent.getDocumentId()));}Document document = documentService.getByDocumentHeaderId(statusChangeEvent.getDocumentId());if (document == null) {if (!KewApiConstants.ROUTE_HEADER_CANCEL_CD.equals(statusChangeEvent.getNewRouteStatus())) {throw new RuntimeException(""unable to load document "" + statusChangeEvent.getDocumentId());}} else {document.doRouteStatusChange(statusChangeEvent);if (!document.getDocumentHeader().getWorkflowDocument().isSaved()) {document = documentService.updateDocument(document);}}if (LOG.isInfoEnabled()) {}} catch (Exception e) {logAndRethrow(""route status"", e);}return new ProcessDocReport(true, """");}}"	Yes
1501	public class A {private void logAndAdd(String event) {eventHistory.add(event);}}	Yes
1502	"public class A {private void initPropsFromResource() {var resourceProps = new Properties();load(BOOTSTRAP_PROPS_RESOURCE, resourceProps);loadOverride(BOOTSTRAP_OVERRIDE_PROPS_LOC, resourceProps, fileStreamProvider, log);Set<String> unrecognizedProps = new HashSet<>(resourceProps.stringPropertyNames());unrecognizedProps.removeAll(BOOTSTRAP_PROP_NAMES);if (!unrecognizedProps.isEmpty()) {var msg =String.format(""'%s' contains unrecognized properties: %s!"",BOOTSTRAP_PROPS_RESOURCE, unrecognizedProps);throw new IllegalStateException(msg);}var missingProps =BOOTSTRAP_PROP_NAMES.stream().filter(name -> !resourceProps.containsKey(name)).sorted().collect(toList());if (!missingProps.isEmpty()) {var msg =String.format(""'%s' is missing properties: %s!"", BOOTSTRAP_PROPS_RESOURCE, missingProps);throw new IllegalStateException(msg);}bootstrapProps = new HashMap<>();BOOTSTRAP_PROP_NAMES.stream().forEach(prop ->bootstrapProps.put(prop, transformFor(prop).apply(resourceProps.getProperty(prop))));var msg =""Resolved bootstrap properties:\n  ""+ BOOTSTRAP_PROP_NAMES.stream().sorted().map(name -> String.format(""%s=%s"", name, bootstrapProps.get(name))).collect(Collectors.joining(""\n  ""));log.info(msg);}}"	No
1503	"public class A {@Test@Overridepublic void testWarn_Object() throws Exception {PrintStream stdout = System.out;ByteArrayOutputStream out = new ByteArrayOutputStream();System.setErr(new PrintStream(out));SystemOutLoggingTool logger = new SystemOutLoggingTool(this.getClass());logger.setDebugEnabled(true);Assert.assertTrue(out.toString().contains(""WARN""));Assert.assertTrue(out.toString().contains(this.getClass().getName()));System.setErr(stdout);}}"	Yes
1504	"public class A {@Overridepublic void stop() {if (runnerThread != null) {runner.shouldStop.set(true);runnerThread.interrupt();while (runnerThread.isAlive()) {try {logger.debug(""Waiting for runner thread to exit"");runnerThread.join(500);} catch (InterruptedException e) {logger.debug(""Interrupted while waiting for runner thread to exit. Exception follows."", e);}}}getPolicy().stop();lifecycleState = LifecycleState.STOP;}}"	No
1505	public class A {@Overridepublic boolean hasNext() {boolean hasNext;if (itStack.isEmpty()) {hasNext = directlyUnder.hasNext();} else {hasNext = false;do {if (!itStack.peek().iterator().hasNext()) {try {itStack.pop().close();} catch (IOException e) {}} else {hasNext = true;}} while (!hasNext && !itStack.isEmpty());if (itStack.isEmpty()) {hasNext = directlyUnder.hasNext();}}return hasNext;}}	Yes
1506	"public class A {public StgMapNotiz findById(sernet.gs.reveng.StgMapNotizId id) {try {StgMapNotiz instance =(StgMapNotiz) sessionFactory.getCurrentSession().get(""sernet.gs.reveng.StgMapNotiz"", id);if (instance == null) {} else {}return instance;} catch (RuntimeException re) {throw re;}}}"	Yes
1507	"public class A {void updateChatroomInfo(String chatroomId, WFCMessage.ChatroomInfo chatroomInfo) {LOG.info(""Database update chatroom info {}"", chatroomId);mScheduler.execute(() -> {Connection connection = null;PreparedStatement statement = null;try {connection = DBUtil.getConnection();String sql =""insert into t_chatroom (`_cid`""+ "", `_title`""+ "", `_portrait`""+ "", `_state`""+ "", `_desc`""+ "", `_extra`""+ "", `_dt`) values(?, ?, ?, ?, ?, ?, ?)""+ "" ON DUPLICATE KEY UPDATE `_title`=?""+ "", `_portrait`=?""+ "", `_state`=?""+ "", `_desc`=?""+ "", `_extra`=?""+ "", `_dt`=?"";statement = connection.prepareStatement(sql);int index = 1;statement.setString(index++, chatroomId);statement.setString(index++, chatroomInfo.getTitle());statement.setString(index++, chatroomInfo.getPortrait());statement.setInt(index++, chatroomInfo.getState());statement.setString(index++, chatroomInfo.getDesc());statement.setString(index++, chatroomInfo.getExtra());statement.setLong(index++,chatroomInfo.getUpdateDt() == 0? System.currentTimeMillis(): chatroomInfo.getUpdateDt());statement.setString(index++, chatroomInfo.getTitle());statement.setString(index++, chatroomInfo.getPortrait());statement.setInt(index++, chatroomInfo.getState());statement.setString(index++, chatroomInfo.getDesc());statement.setString(index++, chatroomInfo.getExtra());statement.setLong(index++,chatroomInfo.getUpdateDt() == 0? System.currentTimeMillis(): chatroomInfo.getUpdateDt());int count = statement.executeUpdate();LOG.info(""Update rows {}"", count);} catch (SQLException e) {e.printStackTrace();Utility.printExecption(LOG, e, RDBS_Exception);} finally {DBUtil.closeDB(connection, statement);}});}}"	No
1508	public class A {public Document maybeOpenDocument(OpenDocumentDescriptor descriptor, Window window) {try {return this.openDocument(descriptor);} catch (SignalMLException ex) {Dialogs.showExceptionDialog(window, ex);} catch (IOException ex) {Dialogs.showExceptionDialog(window, ex);}return null;}}	Yes
1509	"public class A {@Overridepublic Void call() throws Exception {log.info(""Trying to cleanup: "" + instance);instance.cleanUp();return null;}}"	No
1510	"public class A {@Overridepublic String ingest(DataHandler objectXML, String format, String logMessage) {LOG.debug(""start: ingest"");assertInitialized();try {MessageContext ctx = context.getMessageContext();InputStream byteStream = null;if (objectXML != null) {byteStream = objectXML.getInputStream();}return m_management.ingest(ReadOnlyContext.getSoapContext(ctx), byteStream, logMessage, format, ""UTF-8"", ""new"");} catch (Throwable th) {LOG.error(""Error ingesting"", th);throw CXFUtility.getFault(th);} finally {LOG.debug(""end: ingest"");}}}"	No
1511	"public class A {private RegisterResponse registerOpenIdClient() {logger.info(""Registering OpenId client"");String clientName = this.appConfiguration.getApplicationName() + "" client"";RegisterRequest registerRequest =new RegisterRequest(ApplicationType.WEB,clientName,Arrays.asList(this.appConfiguration.getOpenIdRedirectUrl()));registerRequest.setRequestObjectSigningAlg(SignatureAlgorithm.RS256);registerRequest.setTokenEndpointAuthMethod(AuthenticationMethod.CLIENT_SECRET_BASIC);RegisterClient registerClient =new RegisterClient(openIdConfiguration.getRegistrationEndpoint());registerClient.setRequest(registerRequest);RegisterResponse response = registerClient.exec();if ((response == null) || (response.getStatus() != 200)) {throw new ConfigurationException(""Failed to register new client"");}return response;}}"	No
1512	"public class A {public void changeOrganisation(@Identification final String organisationIdentification,@Identification final String organisationToBeChangedIdentification,final String newOrganisationName,@NotNull final PlatformFunctionGroup newOrganisationPlatformFunctionGroup,@NotNull final List<PlatformDomain> newDomains)throws FunctionalException {LOGGER.info(""changeOrganisation called with organisation {} and organisation to change {}. new values""+ "" for organisationName {}, organisationPlatformFunctionGroup {}"",organisationIdentification,organisationToBeChangedIdentification,newOrganisationName,newOrganisationPlatformFunctionGroup);final Organisation organisation = this.findOrganisation(organisationIdentification);this.isAllowed(organisation, PlatformFunction.CHANGE_ORGANISATION);try {final Organisation organisationToChange =this.findOrganisation(organisationToBeChangedIdentification);organisationToChange.changeOrganisationData(newOrganisationName, newOrganisationPlatformFunctionGroup);organisationToChange.setDomains(newDomains);this.organisationRepository.save(organisationToChange);} catch (final JpaSystemException ex) {if (ex.getCause() instanceof PersistenceException) {throw new FunctionalException(FunctionalExceptionType.UNKNOWN_ORGANISATION,ComponentType.WS_ADMIN,new UnknownEntityException(Organisation.class, organisationToBeChangedIdentification, ex));}}}}"	Yes
1513	"public class A {@NotNullprivate List<String> updateImpersonators(@NotNull Authorizable a,@NotNull Impersonation imp,@NotNull Map<String, Principal> toRemove,@NotNull List<String> toAdd)throws RepositoryException {for (Principal p : toRemove.values()) {if (!imp.revokeImpersonation(p)) {String principalName = p.getName();handleFailure(""Failed to revoke impersonation for "" + principalName + "" on "" + a);}}List<String> nonExisting = new ArrayList<>();for (String principalName : toAdd) {Principal principal =(principals.containsKey(principalName))? principals.get(principalName): new PrincipalImpl(principalName);if (!imp.grantImpersonation(principal)) {handleFailure(""Failed to grant impersonation for "" + principalName + "" on "" + a);if (importBehavior == ImportBehavior.BESTEFFORT&& getPrincipalManager().getPrincipal(principalName) == null) {nonExisting.add(principalName);}}}return nonExisting;}}"	Yes
1514	"public class A {@Overridepublic void boot() {if (Config.Meter.ACTIVE) {reportMeterFuture =Executors.newSingleThreadScheduledExecutor(new DefaultNamedThreadFactory(""MeterReportService"")).scheduleWithFixedDelay(new RunnableWithExceptionProtection(this, t -> LOGGER.error(""Report meters failure."", t)),0,Config.Meter.REPORT_INTERVAL,TimeUnit.SECONDS);}}}"	No
1515	"public class A {@Test@Disabledpublic void calcTimes() {Map<String, Object> smallMap = new HashMap<>();for (int i = 0; i < 10; i++) {smallMap.put(""key"" + i, RandomStringUtils.randomAlphabetic(10));}Map<String, Object> largeMap = new HashMap<>();for (int i = 0; i < 500; i++) {largeMap.put(""key"" + i, RandomStringUtils.randomAlphabetic(1000));}JSONObject largeObject = new JSONObject(largeMap);JSONObject smallObject = new JSONObject(smallMap);int reps = 1000;StatisticalSummary summary =runTrial(reps,() -> {LOG.trace(""Writing message {} to path: {}"", smallObject.toJSONString(), PATH);});printSummary(String.format(""Small object %s times"", reps), summary);summary =runTrial(reps,() -> {LOG.trace(""Writing message {} to path: {}"", () -> smallObject.toJSONString(), () -> PATH);});printSummary(String.format(""Small object %s times using lazy logging"", reps), summary);summary =runTrial(reps,() -> {LOG.trace(""Writing message {} to path: {}"", largeObject.toJSONString(), PATH);});printSummary(String.format(""Large object %s times"", reps), summary);summary =runTrial(reps,() -> {});printSummary(String.format(""Large object %s times using lazy logging"", reps), summary);summary =runTrial(reps,() -> {LOG.trace(""Writing message {} to path: {}"", ""hello"", PATH);});printSummary(String.format(""Simple string %s times"", reps), summary);summary =runTrial(reps,() -> {});printSummary(String.format(""Simple string %s times using lazy logging"", reps), summary);}}"	Yes
1516	"public class A {@Overridepublic void clearExpired() {for (Iterator<String> iter = storage.keySet().iterator(); iter.hasNext(); ) {String key = iter.next();StorageItem item = storage.get(key);if (item.isExpired()) {logger.info(""Removing "" + key + "" from temporary storage"");iter.remove();}}}}"	Yes
1517	"public class A {@Overridepublic boolean tryToRegister(ZooKeeperClient client)throws KeeperException, HostNotFoundException {final String idPath = Paths.configHostId(name);final String hostInfoPath = Paths.statusHostInfo(name);final Stat stat = client.exists(idPath);if (stat == null) {log.debug(""Agent id node not present, registering agent {}: {}"", id, name);ZooKeeperRegistrarUtil.registerHost(client, idPath, name, id);} else {final byte[] bytes = client.getData(idPath);final String existingId = bytes == null ? """" : new String(bytes, UTF_8);if (!id.equals(existingId)) {final Stat hostInfoStat = client.stat(hostInfoPath);if (hostInfoStat != null) {final long mtime = hostInfoStat.getMtime();final long diff = clock.now().getMillis() - mtime;if (diff < zooKeeperRegistrationTtlMillis) {final String message =format(""Another agent already registered as '%s' (local=%s remote=%s). ""+ ""That agent's registration expires in %d seconds"",name,id.trim(),existingId.trim(),TimeUnit.MILLISECONDS.toSeconds(zooKeeperRegistrationTtlMillis - diff));log.warn(message);return false;}} else {log.info(""Another agent has registered as '{}', but it never updated '{}' in ZooKeeper. ""+ ""I'll assume it's dead and deregister it."",name,hostInfoPath);}ZooKeeperRegistrarUtil.reRegisterHost(client, name, id);} else {log.info(""Matching agent id node already present, not registering agent {}: {}"", id, name);}}if (upNode == null) {final String upPath = Paths.statusHostUp(name);log.debug(""Creating up node: {}"", upPath);client.ensurePath(upPath, true);upNode = client.persistentEphemeralNode(upPath, EPHEMERAL, EMPTY_BYTES);upNode.start();}log.info(""ZooKeeper registration complete"");return true;}}"	Yes
1518	public class A {public final void start() throws Exception {ChromatticBuilder builder = ChromatticBuilder.create();ClassLoader cl = Thread.currentThread().getContextClassLoader();for (String className : entityClassNames) {String fqn = className.trim();Class<?> entityClass = cl.loadClass(fqn);builder.add(entityClass);}PortalSessionLifeCycle.bootContext.set(this);try {for (Map.Entry<String, String> optionEntry : optionMap.entrySet()) {ChromatticBuilder.Option<?> option = RECOGNIZED_OPTIONS.get(optionEntry.getKey());if (option != null) {setOption(builder, option, optionEntry.getValue());}}builder.setOptionValue(ChromatticBuilder.SESSION_LIFECYCLE_CLASSNAME, PortalSessionLifeCycle.class.getName());realChromattic = builder.build();chromattic = new ChromatticImpl(this);} catch (Exception e) {} finally {PortalSessionLifeCycle.bootContext.set(null);}}}	Yes
1519	"public class A {public static String fetchProviderByOrgId(String orgId, RequestContext context) {try {if (StringUtils.isNotBlank(orgId)) {Future<Map<String, Object>> esOrgResF =esUtil.getDataByIdentifier(ProjectUtil.EsType.organisation.getTypeName(), orgId, context);Map<String, Object> org =(Map<String, Object>) ElasticSearchHelper.getResponseFromFuture(esOrgResF);if (null != org && !org.isEmpty()) {return (String) org.get(JsonKey.CHANNEL);}}} catch (Exception ex) {}return """";}}"	Yes
1520	public class A {private void limitFailedBuffersSize() {if (failedBuffers.size() >= config.getBatchQueueSizeLimit()) {failedBuffers.removeFirst();approximateFailedBuffersCount.decrementAndGet();droppedBuffers.incrementAndGet();}}}	Yes
1521	"public class A {@Overridepublic Response afterUpload(ChannelHandlerContext ctx, String pathToFirmware) {String token = getParam(""token"");if (token != null) {log.info(""Requested OTA for single device {}."", token);return singleDeviceOTA(ctx, token, pathToFirmware);}String user = getParam(""user"");if (user != null) {String appName = getParam(""appName"");UserKey userKey = new UserKey(user, appName);String project = getParam(""project"");return singleUserOTA(ctx, userKey, project, pathToFirmware);}log.info(""Requested OTA for all devices..."");return allDevicesOTA(ctx, pathToFirmware);}}"	Yes
1522	"public class A {private static long humanReadableSizeToBytes(final String humanReadableSize)throws HBaseException {if (humanReadableSize == null) {return -1;}try {return Long.parseLong(humanReadableSize);} catch (NumberFormatException ex) {LOG.debug(""Given size value is not a number, parsing for human readable format"");}String tb = null;String gb = null;String mb = null;String kb = null;String b = null;String expectedSize = null;long size = 0;Matcher matcher = PrettyPrinter.SIZE_PATTERN.matcher(humanReadableSize);if (matcher.matches()) {expectedSize = matcher.group(2);tb = matcher.group(4);gb = matcher.group(6);mb = matcher.group(8);kb = matcher.group(10);b = matcher.group(12);}size += tb != null ? Long.parseLong(tb) * HConstants.TB_IN_BYTES : 0;size += gb != null ? Long.parseLong(gb) * HConstants.GB_IN_BYTES : 0;size += mb != null ? Long.parseLong(mb) * HConstants.MB_IN_BYTES : 0;size += kb != null ? Long.parseLong(kb) * HConstants.KB_IN_BYTES : 0;size += b != null ? Long.parseLong(b) : 0;if (expectedSize != null && Long.parseLong(expectedSize) != size) {throw new HBaseException(""Malformed size string: values in byte and human readable"" + ""format do not match"");}return size;}}"	No
1523	"public class A {public UserGroup deleteUserGroup(final String identifier) {verifyUserGroupProviderIsConfigurable();final Group group = userGroupProvider.getGroup(identifier);if (group == null) {LOGGER.warn(""The specified user group id [{}] does not exist."", group.getIdentifier());throw new ResourceNotFoundException(""The specified user group ID does not exist in this registry."");}configurableUserGroupProvider().deleteGroup(group);return userGroupToDTO(group);}}"	No
1524	"public class A {public void appendToDdlStatement(String dbName, StringBuilder ddl) {if (charset != null) {logger.debug(""Setting default charset '{}' for database '{}'"", charset, dbName);ddl.append("" CHARSET "").append(charset);} else {logger.info(""Default database charset for '{}' not found"", dbName);}if (collation != null) {logger.debug(""Setting default collation '{}' for database '{}'"", collation, dbName);ddl.append("" COLLATE "").append(collation);} else {logger.info(""Default database collation for '{}' not found"", dbName);}}}"	No
1525	"public class A {public void invokeUpdateCheck() {String currentVersion = Mesh.getPlainVersion();log.info(""Checking for updates.."");HttpClientRequest request =getVertx().createHttpClient(new HttpClientOptions().setSsl(true).setTrustAll(false)).get(443,""getmesh.io"",""/api/updatecheck?v="" + Mesh.getPlainVersion(),rh -> {int code = rh.statusCode();if (code < 200 || code >= 299) {log.error(""Update check failed with status code {"" + code + ""}"");} else {rh.bodyHandler(bh -> {JsonObject info = bh.toJsonObject();String latestVersion = info.getString(""latest"");if (currentVersion.contains(""-SNAPSHOT"")) {} else {int result = VersionUtil.compareVersions(latestVersion, currentVersion);if (result == 0) {} else if (result > 0) {}}});}});MultiMap headers = request.headers();headers.set(""content-type"", ""application/json"");String hostname = getHostname();if (!isEmpty(hostname)) {headers.set(""X-Hostname"", hostname);}request.exceptionHandler(err -> {log.info(""Failed to check for updates."");log.debug(""Reason for failed update check"", err);});request.end();}}"	Yes
1526	"public class A {@SuppressWarnings(""unchecked"")public Map<String, LscDatasets> getListPivots() {Map<String, LscDatasets> ret = new ListOrderedMap();try {List<HashMap<String, Object>> ids =(List<HashMap<String, Object>>) sqlMapper.queryForList(getRequestNameForList());Iterator<HashMap<String, Object>> idsIter = ids.iterator();Map<String, Object> idMap;for (int count = 1; idsIter.hasNext(); count++) {idMap = idsIter.next();ret.put(getMapKey(idMap, count), new LscDatasets(idMap));}} catch (SQLException e) {LOGGER.warn(""Error while looking for the entries list: {}"", e.toString());LOGGER.debug(e.toString(), e);}return ret;}}"	No
1527	public class A {@Overridepublic void after(Object target, Object[] args, Object result, Throwable throwable) {if (isDebug) {logger.afterInterceptor(target, args, result, throwable);}try {if (Boolean.FALSE == isReceived(args)) {return;}final HttpServerRequest request = (HttpServerRequest) args[0];final HttpServerResponse response = (HttpServerResponse) args[0];final int statusCode = getStatusCode(response);this.servletRequestListener.destroyed(request, throwable, statusCode);} catch (Throwable t) {if (isInfo) {}}}}	Yes
1528	public class A {@Overridepublic ChangesetCollection findByPrimaryKey(Serializable primaryKey)throws NoSuchCollectionException {ChangesetCollection changesetCollection = fetchByPrimaryKey(primaryKey);if (changesetCollection == null) {if (_log.isDebugEnabled()) {_log.debug(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}throw new NoSuchCollectionException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return changesetCollection;}}	No
1529	"public class A {private static <T> Builder<T> newBuilder(Class<T> c) {if (c.isPrimitive())throw new RuntimeException(""Can not create builder for primitive type: "" + c);if (logger.isInfoEnabled()) logger.info(""create Builder for class: "" + c);Builder<?> builder;if (c.isArray()) builder = newArrayBuilder(c);else builder = newObjectBuilder(c);return (Builder<T>) builder;}}"	No
1530	"public class A {protected static void exec(Statement stmt, String sql) throws Exception {if (stmt == null) {LOGGER.error(""Statement is null"");return;}LOGGER.info(""Running ["" + sql + ""]"");stmt.execute(sql);}}"	No
1531	"public class A {@SuppressWarnings(""unchecked"")@Overridepublic void run() {while (!stopped.get() && !Thread.currentThread().isInterrupted()) {try {Thread.sleep(1000);} catch (InterruptedException e) {LOG.warn(Thread.currentThread().getName() + "" is interupted"");}if (context.getWorkerManager() != null) {context.getWorkerManager().checkHBTimeOut();}if (context.getParameterServerManager() != null) {context.getParameterServerManager().checkHBTimeOut();}if (context.getClientManager() != null) {context.getClientManager().checkHBTimeOut();}if (context.getPSAgentManager() != null) {context.getPSAgentManager().checkHBTimeOut();}}}}"	No
1532	"public class A {@Overridepublic Optional<QuizSubmission> completeQuizSubmission(CompleteQuizSubmissionOptions options)throws IOException {LOG.debug(""completing quiz submission for user/course/quiz: ""+ masqueradeAs+ ""/""+ options.getCourseId()+ ""/""+ options.getQuizId());String url =buildCanvasUrl(""courses/""+ options.getCourseId()+ ""/quizzes/""+ options.getQuizId()+ ""/submissions/""+ options.getSubmissionId()+ ""/complete"",options.getOptionsMap());Response response = canvasMessenger.sendToCanvas(oauthToken, url, Collections.emptyMap());return Optional.of(parseQuizSubmissionResponse(response).getQuizSubmissions().get(0));}}"	No
1533	"public class A {public static List<RouteBuilderLifecycleStrategy> loadInterceptors(CamelContext context, Source source) {ExtendedCamelContext ecc = context.adapt(ExtendedCamelContext.class);List<RouteBuilderLifecycleStrategy> answer = new ArrayList<>();for (String id : source.getInterceptors()) {try {RouteBuilderLifecycleStrategy interceptor =ecc.getRegistry().lookupByNameAndType(id, RouteBuilderLifecycleStrategy.class);if (interceptor == null) {interceptor =ecc.getFactoryFinder(Constants.SOURCE_LOADER_INTERCEPTOR_RESOURCE_PATH).newInstance(id, RouteBuilderLifecycleStrategy.class).orElseThrow(() ->new IllegalArgumentException(""Unable to find source loader interceptor for: "" + id));} else {}PropertiesSupport.bindProperties(context, interceptor, Constants.LOADER_INTERCEPTOR_PREFIX + id + ""."");PropertiesSupport.bindProperties(context, interceptor, Constants.LOADER_INTERCEPTOR_PREFIX_FALLBACK + id + ""."");answer.add(interceptor);} catch (Exception e) {throw new IllegalArgumentException(""Unable to find source loader interceptor for: "" + id, e);}}return answer;}}"	Yes
1534	public class A {@Transactional(rollbackFor = ArrowheadException.class)public void removeSubscriptionEntries(final List<Subscription> toBeRemoved) {if (toBeRemoved == null || toBeRemoved.isEmpty()) {return;}try {subscriptionRepository.deleteInBatch(toBeRemoved);subscriptionRepository.flush();} catch (final Exception ex) {logger.debug(ex.getMessage(), ex);throw new ArrowheadException(CoreCommonConstants.DATABASE_OPERATION_EXCEPTION_MSG);}}}	Yes
1535	"public class A {private String resolveSchema(ResultSet result) {String schema = null;try {schema = result.getString(""TABLE_SCHEM"");if (schema == null) {schema = dbUnitConfig.getSchema();}} catch (Exception e) {schema = dbUnitConfig.getSchema();}return schema;}}"	Yes
1536	"public class A {OpenCGAResult<Object> privateUpdate(ClientSession clientSession, Job job, ObjectMap parameters, QueryOptions options)throws CatalogDBException, CatalogParameterException, CatalogAuthorizationException {long tmpStartTime = startQuery();Document jobParameters =parseAndValidateUpdateParams(parameters, options).toFinalUpdateDocument();if (jobParameters.isEmpty()) {if (!parameters.isEmpty()) {}throw new CatalogDBException(""Nothing to update. Empty 'parameters' object"");}Query tmpQuery =new Query().append(QueryParams.STUDY_UID.key(), job.getStudyUid()).append(QueryParams.UID.key(), job.getUid());Bson finalQuery = parseQuery(tmpQuery, options);logger.debug(""Job update: query : {}, update: {}"",finalQuery.toBsonDocument(Document.class, MongoClient.getDefaultCodecRegistry()),jobParameters.toBsonDocument(Document.class, MongoClient.getDefaultCodecRegistry()));DataResult result = jobCollection.update(clientSession, finalQuery, jobParameters, null);if (result.getNumMatches() == 0) {throw new CatalogDBException(""Job "" + job.getId() + "" not found"");}List<Event> events = new ArrayList<>();if (result.getNumUpdated() == 0) {events.add(new Event(Event.Type.WARNING, job.getId(), ""Job was already updated""));}return endWrite(tmpStartTime, 1, 1, events);}}"	Yes
1537	"public class A {@Testpublic void testIncludeRegexAnyField() throws Exception {log.info(""------  testIncludeRegexAnyField  ------"");String usa = ""'usa'"";String anyRegex = this.dataManager.convertAnyField(RE_OP + usa);for (final TestCities city : TestCities.values()) {String query =CityField.CITY.name()+ EQ_OP+ ""'""+ city.name()+ ""'""+ AND_OP+ IncludeRegex+ Constants.ANY_FIELD+ "",""+ usa+ "")"";String expectQuery =CityField.CITY.name() + EQ_OP + ""'"" + city.name() + ""'"" + AND_OP + anyRegex;runTest(query, expectQuery);}}}"	No
1538	public class A {private void removePipes() {if (!new File(this.commandPipe).delete()) {}if (!new File(this.resultPipe).delete()) {}if (!new File(this.adaptationDir).delete()) {}}}	Yes
1539	"public class A {private void reindexItemsInContainer(String containerUri) {ElasticIndexer indexer = new ElasticIndexer(index, ElasticTypes.items, analyser);ItemController controller = new ItemController();try {List<Item> items =controller.searchAndRetrieve(new URI(containerUri), (SearchQuery) null, null, Imeji.adminUser, null, -1, -1);indexer.indexBatch(items);} catch (Exception e) {LOGGER.error(""There has been an error during reindexing of items in a container! "", e);}}}"	No
1540	"public class A {@Overridepublic void processMessage(final ObjectMessage message) {String correlationUid = null;String messageType = null;String organisationIdentification = null;String deviceIdentification = null;CdmaSettings cdmaSettings = null;try {correlationUid = message.getJMSCorrelationID();messageType = message.getJMSType();organisationIdentification = message.getStringProperty(Constants.ORGANISATION_IDENTIFICATION);deviceIdentification = message.getStringProperty(Constants.DEVICE_IDENTIFICATION);cdmaSettings = (CdmaSettings) message.getObject();} catch (final JMSException e) {LOGGER.debug(""correlationUid: {}"", correlationUid);return;}try {LOGGER.info(""Calling application service function: {}"", messageType);this.deviceManagementService.updateDeviceCdmaSettings(organisationIdentification, deviceIdentification, correlationUid, cdmaSettings);} catch (final Exception e) {this.handleError(e,correlationUid,organisationIdentification,deviceIdentification,messageType,MessagePriorityEnum.DEFAULT.getPriority());}}}"	Yes
1541	"public class A {@Overrideprotected void onActivate(Optional<Object> message) {WonMessage connectMessage =WonMessageBuilder.connect().sockets().sender(URI.create(atomUri3.toString() + ""#holderSocket"")).recipient(URI.create(atomUri1.toString() + ""#holdableSocket"")).direction().fromOwner().build();connectMessage = ctx.getWonMessageSender().prepareMessage(connectMessage);EventListener successCallback =event -> {logger.debug(""holder B -> holdable connection requested"");deactivate();};EventListener failureCallback =makeFailureCallbackToFailTest(bot, ctx, bus, ""Requesting connection holder B -> holdable"");EventBotActionUtils.makeAndSubscribeResponseListener(connectMessage, successCallback, failureCallback, ctx);ctx.getWonMessageSender().sendMessage(connectMessage);}}"	No
1542	"public class A {private void discoverMeteringServers() {logger.debug(""SEP Extension: SEP discovery searching for Metering servers"");discoverServices(ZigBeeBroadcastDestination.BROADCAST_RX_ON.getKey(), ZclMeteringCluster.CLUSTER_ID);}}"	No
1543	"public class A {private Response startEliminationWorkflow(EliminationRequestBody eliminationRequestBody, Contexts eliminationWorkflowContext) {Status status;try {ParametersChecker.checkParameter(""Missing elimination request"", eliminationRequestBody);EliminationRequestBody eliminationRequestBodyWithAccessContractRestriction =new EliminationRequestBody(eliminationRequestBody.getDate(),applyAccessContractRestrictionForUnitForSelect(eliminationRequestBody.getDslRequest().deepCopy(),getVitamSession().getContract()));String operationId = getVitamSession().getRequestId();try (ProcessingManagementClient processingClient =processingManagementClientFactory.getClient();LogbookOperationsClient logbookOperationsClient =logbookOperationsClientFactory.getClient();WorkspaceClient workspaceClient = workspaceClientFactory.getClient()) {final LogbookOperationParameters initParameters =LogbookParameterHelper.newLogbookOperationParameters(GUIDReader.getGUID(operationId),eliminationWorkflowContext.getEventType(),GUIDReader.getGUID(operationId),LogbookTypeProcess.ELIMINATION,STARTED,VitamLogbookMessages.getLabelOp(eliminationWorkflowContext.getEventType() + "".STARTED"")+ "" : ""+ GUIDReader.getGUID(operationId),GUIDReader.getGUID(operationId));addRightsStatementIdentifier(initParameters);logbookOperationsClient.create(initParameters);workspaceClient.createContainer(operationId);workspaceClient.putObject(operationId,""request.json"",writeToInpustream(eliminationRequestBodyWithAccessContractRestriction));workspaceClient.putObject(operationId,OperationContextMonitor.OperationContextFileName,writeToInpustream(OperationContextModel.get(eliminationRequestBody)));OperationContextMonitor.compressInWorkspace(workspaceClientFactory,operationId,eliminationWorkflowContext.getLogbookTypeProcess(),OperationContextMonitor.OperationContextFileName);processingClient.initVitamProcess(new ProcessingEntry(operationId, eliminationWorkflowContext.name()));RequestResponse<ItemStatus> jsonNodeRequestResponse =processingClient.executeOperationProcess(operationId, eliminationWorkflowContext.name(), RESUME.getValue());return jsonNodeRequestResponse.toResponse();}} catch (ContentAddressableStorageServerException| OperationContextException| InvalidGuidOperationException| LogbookClientServerException| LogbookClientBadRequestException| LogbookClientAlreadyExistsException| VitamClientException| InternalServerException e) {LOGGER.error(""An error occurred during "" + eliminationWorkflowContext.getEventType() + "" workflow"", e);return Response.status(INTERNAL_SERVER_ERROR).entity(getErrorEntity(INTERNAL_SERVER_ERROR, e.getMessage())).build();} catch (final InvalidParseOperationException | InvalidCreateOperationException e) {LOGGER.error(BAD_REQUEST_EXCEPTION, e);status = Status.BAD_REQUEST;return Response.status(status).entity(getErrorEntity(status, e.getMessage())).build();} catch (BadRequestException e) {return buildErrorResponse(VitamCode.GLOBAL_EMPTY_QUERY, null);}}}"	Yes
1544	"public class A {public Set<String> getReadOnlyJavaNames(Class<?> type, SecurityContext securityContext) {final Set<String> readonlyJavaNames = new HashSet<String>();try {BeanMetaData beanMetaData = metaData.getBeanMetaData(type);for (PropertyBinding propBinding : beanMetaData.getProperties()) {if (!securityContext.getAttributeWritePriviledge(propBinding.getDetypedName()).isGranted()&& !propBinding.isKey()) readonlyJavaNames.add(propBinding.getJavaName());}} catch (Exception e) {Log.warn(""No meta data for "" + type);}return readonlyJavaNames;}}"	No
1545	"public class A {@Overridepublic void addConnectionStatusListener(ConnectionStatusListener listener) {logger.warn(""Cannot add connection error listener: The Miele cloud service is not available."");}}"	No
1546	public class A {private synchronized void submitFlushTask() {counter.set(0);latestFlushTime = System.currentTimeMillis();final Snapshot<MessageCheckpoint> snapshot =checkpointManager.createMessageCheckpointSnapshot();flushExecutor.submit(() -> {final long start = System.currentTimeMillis();try {consumerLogManager.flush();checkpointManager.saveMessageCheckpointSnapshot(snapshot);} catch (Exception e) {QMon.consumerLogFlusherFlushFailedCountInc();} finally {QMon.consumerLogFlusherElapsedPerExecute(System.currentTimeMillis() - start);}});}}	Yes
1547	public class A {private void deleteService(CloudControllerClient client, StepLogger stepLogger, CloudServiceInstance serviceInstance) {stepLogger.info(Messages.DELETING_SERVICE, serviceInstance.getName());client.deleteServiceInstance(serviceInstance);stepLogger.debug(Messages.SERVICE_DELETED, serviceInstance.getName());}}	No
1548	"public class A {@Overridepublic void run(TransformContext context, GtfsMutableRelationalDao dao) {int stop_count = 0;int route_count = 0;for (Stop stop : dao.getAllStops()) {stop.setRegionalFareCardAccepted(1);stop_count++;}for (Route route : dao.getAllRoutes()) {route.setRegionalFareCardAccepted(1);route_count++;}_log.info(""Set {} stops and {} routes to omny_enabled Y"", stop_count, route_count);}}"	No
1549	"public class A {@Testpublic void testBackupQueueCleanupServerQuery() throws Exception {Ignite qryClient = startGridsMultiThreaded(2);CacheEventListener1 lsnr = new CacheEventListener1(false);ContinuousQuery<Object, Object> qry = new ContinuousQuery<>();qry.setLocalListener(lsnr);IgniteCache<Object, Object> cache = qryClient.cache(DEFAULT_CACHE_NAME);QueryCursor<?> cur = cache.query(qry);assertEquals(0, backupQueue(ignite(1)).size());List<Integer> keys = primaryKeys(cache, BACKUP_ACK_THRESHOLD);CountDownLatch latch = new CountDownLatch(keys.size());lsnr.latch = latch;for (Integer key : keys) {log.info(""Put: "" + key);cache.put(key, key);}GridTestUtils.waitForCondition(new GridAbsPredicate() {@Overridepublic boolean apply() {return backupQueue(ignite(1)).isEmpty();}},5000);assertTrue(""Backup queue is not cleared: "" + backupQueue(ignite(1)),backupQueue(ignite(1)).size() < BACKUP_ACK_THRESHOLD);if (!latch.await(5, SECONDS))fail(""Failed to wait for notifications [exp=""+ keys.size()+ "", left=""+ lsnr.latch.getCount()+ ']');cur.close();}}"	No
1550	"public class A {@Overridepublic long getSize(Configuration configuration) {if (view instanceof SizeAccessor) {return ((SizeAccessor) view).getSize();}LOG.warn(""Cannot determine size for view: "" + toString());return 1000L * 1000L * 1000L;}}"	No
1551	public class A {void stop() {stopped = true;}}	Yes
1552	"public class A {public void checkDatabaseConnection(ConfigurationHolder configHolder)throws ConfigurationException, DatabaseDriverException, SQLException {String databaseTemplate = configHolder.getIncludedDBTemplateName();String dbName = configHolder.getProperty(PARAM_DB_NAME);String dbUser = configHolder.getProperty(PARAM_DB_USER);String dbPassword = configHolder.getProperty(PARAM_DB_PWD);String dbHost = configHolder.getProperty(PARAM_DB_HOST);String dbPort = configHolder.getProperty(PARAM_DB_PORT);Path databaseTemplateDir = configHolder.getTemplatesPath().resolve(databaseTemplate);String classname = configHolder.getProperty(PARAM_DB_DRIVER);String connectionUrl = configHolder.getProperty(PARAM_DB_JDBC_URL);Driver driver = lookupDriver(configHolder, databaseTemplateDir, classname);DriverManager.registerDriver(driver);Properties ttProps = new Properties();ttProps.put(PARAM_DB_HOST, dbHost);ttProps.put(PARAM_DB_PORT, dbPort);ttProps.put(PARAM_DB_NAME, dbName);ttProps.put(PARAM_DB_USER, dbUser);ttProps.put(PARAM_DB_PWD, dbPassword);TextTemplate tt = new TextTemplate(ttProps);String url = tt.processText(connectionUrl);Properties conProps = new Properties();conProps.put(""user"", dbUser);conProps.put(""password"", dbPassword);log.debug(""Testing URL: {} with: {}"", url, conProps);Connection con = driver.connect(url, conProps);con.close();}}"	No
1553	public class A {@Overridepublic Iterable<Path> files() throws IOException {try (Stream<Path> stream = Files.walk(this.dir)) {final List<Path> files = stream.collect(Collectors.toList());return files;}}}	Yes
1554	"public class A {void closeCompactor(boolean isPrepare) {if (this.oplogCompactor == null) {return;}if (isPrepare) {acquireCompactorWriteLock();}try {synchronized (this.lock) {try {this.oplogCompactor.stopCompactor();} catch (CancelException ignore) {} catch (RuntimeException e) {logger.warn(""DiskRegion::close: Exception in stopping compactor"", e);throw e;}}} finally {if (isPrepare) {releaseCompactorWriteLock();}}}}"	No
1555	public class A {public void setEffectiveAuthentication(Authentication effictiveAuthentication) {if (logger.isTraceEnabled()) {}this.effectiveAuthentication = effictiveAuthentication;}}	Yes
1556	"public class A {@Testpublic void benchmarkVerify() {byte[] data = Bytes.random(512);int repeat = 5_000;Key key = new Key();Key.Signature sig = key.sign(data);byte[] sigNative = Native.sign(data, PRIVATE_KEY);for (int i = 0; i < repeat / 10; i++) {Native.verify(data, sigNative, PUBLIC_KEY);Key.verify(data, sig);}Instant start = Instant.now();for (int i = 0; i < repeat; i++) {Native.verify(data, sigNative, PUBLIC_KEY);}Instant end = Instant.now();start = Instant.now();for (int i = 0; i < repeat; i++) {Key.verify(data, sig);}end = Instant.now();logger.debug(""Verify Java: "" + Duration.between(start, end).toMillis() + ""ms"");}}"	Yes
1557	"public class A {public void testInitialContext() throws Exception {InitialContext context = new InitialContext();ActiveMQConnectionFactory connectionFactory =(ActiveMQConnectionFactory) context.lookup(""ConnectionFactory"");assertTrue(""Should have created a ConnectionFactory"", connectionFactory != null);}}"	Yes
1558	public class A {public Insertions execute() throws IOException {int retryCount = 0;PreparedStatement preparedStatement =getPreparedStatement(Optional.of(Statement.RETURN_GENERATED_KEYS));while (true) {try {return InsertionFetcher.getCreationResults(preparedStatement, rowCount, dbConnection);} catch (SQLRecoverableException e) {if (++retryCount > MAX_CONNECTION_RETRIES) {throw new IOException(e);}} catch (SQLException e) {throw new IOException(e);}}}}	Yes
1559	public class A {protected void initializeDataSources() {validateSuppliedReference();setReferenceDataSource(argCollection.referenceFile);validateSuppliedReads();initializeReadTransformers(walker);final Map<String, String> sampleRenameMap =argCollection.sampleRenameMappingFile != null? loadSampleRenameMap(argCollection.sampleRenameMappingFile): null;readsDataSource =createReadsDataSource(argCollection, genomeLocParser, referenceDataSource.getReference(), sampleRenameMap);for (ReadFilter filter : filters) filter.initialize(this);rodDataSources =getReferenceOrderedDataSources(referenceMetaDataFiles,referenceDataSource.getReference().getSequenceDictionary(),genomeLocParser,argCollection.unsafe,sampleRenameMap);}}	Yes
1560	"public class A {public void start() throws IOException {server.start();LOG.info(""Server started, listening on "" + port);Runtime.getRuntime().addShutdownHook(new Thread() {@Overridepublic void run() {LOG.info(""*** shutting down gRPC server since JVM is shutting down"");SubmarineRpcServer.this.stop();}});}}"	No
1561	"public class A {@Overridepublic Optional<Script> get(ScriptKey scriptKey) {CachedRowSet crsScript =getMetadataRepository().executeQuery(String.format(FETCH_BY_ID_QUERY, SQLTools.getStringForSQL(scriptKey.getScriptId())),""reader"");try {if (crsScript.size() == 0) {return Optional.empty();} else if (crsScript.size() > 1) {}crsScript.next();Optional<ScriptVersion> scriptVersion =ScriptVersionConfiguration.getInstance().get(new ScriptVersionKey(new ScriptKey(scriptKey.getScriptId(), scriptKey.getScriptVersion())));if (!scriptVersion.isPresent()) {return Optional.empty();}List<Action> actions = ActionConfiguration.getInstance().getByScript(scriptKey);List<ScriptParameter> scriptParameters =ScriptParameterConfiguration.getInstance().getByScript(scriptKey);List<ScriptLabel> scriptLabels =ScriptLabelConfiguration.getInstance().getByScript(scriptKey);Script script =new Script(scriptKey,new SecurityGroupKey(UUID.fromString(crsScript.getString(""SECURITY_GROUP_ID""))),crsScript.getString(""SECURITY_GROUP_NAME""),crsScript.getString(""SCRIPT_NM""),crsScript.getString(""SCRIPT_DSC""),scriptVersion.get(),scriptParameters,actions,scriptLabels);crsScript.close();return Optional.of(script);} catch (Exception e) {StringWriter stackTrace = new StringWriter();e.printStackTrace(new PrintWriter(stackTrace));log.info(String.format(""exception=%s"", e));return Optional.empty();}}}"	Yes
1562	public class A {@OperationMethodpublic Blob run() throws IOException {boolean canMove = false;try {FileSystemItemManager fileSystemItemManager =Framework.getService(FileSystemItemManager.class);canMove = fileSystemItemManager.canMove(srcId, destId, ctx.getPrincipal());} catch (RootlessItemException e) {}return Blobs.createJSONBlobFromValue(canMove);}}	Yes
1563	public class A {public static String search(long groupId, String name, String[] categoryProperties, int start, int end)throws RemoteException {try {com.liferay.portal.kernel.json.JSONArray returnValue =AssetCategoryServiceUtil.search(groupId, name, categoryProperties, start, end);return returnValue.toString();} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
1564	public class A {@Overridepublic List<String> getServices() {try {return serviceDiscovery.getServices();} catch (Exception e) {return Collections.emptyList();}}}	Yes
1565	"public class A {public boolean train() throws IOException {if (facemask == null) {File filterfile = new File(Service.getResourceDir(OpenCV.class, ""facerec/Filter.png""));if (!filterfile.exists()) {} else {Mat incomingfacemask = imread(filterfile.getAbsolutePath(), IMREAD_GRAYSCALE);facemask = resizeImage(incomingfacemask);if (debug) {show(facemask, ""Face Mask"");}}}File root = new File(trainingDir);if (root.isFile()) {return false;}if (!root.exists()) {log.info(""Creating new training directory {}"", root.getAbsolutePath());root.mkdirs();}log.info(""Using {} for training data."", root.getAbsolutePath());ArrayList<File> imageFiles = listImageFiles(root);if (imageFiles.size() < 1) {return false;}MatVector images = new MatVector(imageFiles.size());Mat labels = new Mat(imageFiles.size(), 1, CV_32SC1);IntBuffer labelsBuf = labels.getIntBuffer();int counter = 0;HashMap<Integer, String> idToLabelMap = new HashMap<Integer, String>();for (File image : imageFiles) {byte[] tmpImg = FileIO.toByteArray(image);Mat img = imdecode(new Mat(new BytePointer(tmpImg)), IMREAD_GRAYSCALE);String personName = image.getParentFile().getName();int label = personName.hashCode();Mat resized = resizeImage(img);if (facemask != null) {Mat maskedface = facemask.clone();resized.copyTo(maskedface, facemask);resized = maskedface;}if (debug) {show(resized, personName);}images.put(counter, resized);labelsBuf.put(counter, label);idToLabelMap.put(label, personName);counter++;}initRecognizer();if (idToLabelMap.keySet().size() > 1) {faceRecognizer.train(images, labels);trained = true;} else {trained = false;}for (int k : idToLabelMap.keySet()) {faceRecognizer.setLabelInfo(k, idToLabelMap.get(k));}return true;}}"	Yes
1566	"public class A {private void initialize() {mBlock = jmri.InstanceManager.getDefault(jmri.BlockManager.class).getBySystemName(blockName);if (mBlock == null) {log.error(""Missing block - {} - when initializing entry point"", blockName);}mFromBlock =jmri.InstanceManager.getDefault(jmri.BlockManager.class).getBySystemName(fromBlockName);if (mFromBlock == null) {}needsInitialize = false;}}"	Yes
1567	"public class A {@Overridepublic void blanketApprove(WorkflowDocument workflowDocument,String annotation,List<AdHocRouteRecipient> adHocRecipients)throws WorkflowException {if (LOG.isDebugEnabled()) {LOG.debug(""blanket approving document(""+ workflowDocument.getDocumentId()+ "",'""+ annotation+ ""')"");}handleAdHocRouteRequests(workflowDocument,annotation,filterAdHocRecipients(adHocRecipients,new String[] {KewApiConstants.ACTION_REQUEST_ACKNOWLEDGE_REQ, KewApiConstants.ACTION_REQUEST_FYI_REQ}));workflowDocument.blanketApprove(annotation);}}"	No
1568	"public class A {@Overridepublic void onFailure(final Throwable throwable) {if (throwable instanceof InterruptedException || throwable instanceof ExecutionException) {} else {if (throwable instanceof CancellationException) {LOG.trace(""Submit exception: "", throwable);} else {}}}}"	Yes
1569	"public class A {public static NiFiRegistryProperties initializeProperties(CryptoKeyProvider masterKeyProvider) {String key = CryptoKeyProvider.EMPTY_KEY;try {key = masterKeyProvider.getKey();} catch (MissingCryptoKeyException e) {}try {try {final String nifiRegistryPropertiesFilePath =System.getProperty(NIFI_REGISTRY_PROPERTIES_FILE_PATH_PROPERTY, RELATIVE_PROPERTIES_FILE_LOCATION);final NiFiRegistryProperties properties =NiFiRegistryPropertiesLoader.withKey(key).load(nifiRegistryPropertiesFilePath);return properties;} catch (SensitivePropertyProtectionException e) {final String msg = ""There was an issue decrypting protected properties"";throw new IllegalArgumentException(msg);}} catch (IllegalArgumentException e) {final String msg =""The bootstrap process did not provide a valid key and there are protected properties""+ "" present in the properties file"";throw new IllegalArgumentException(msg);}}}"	Yes
1570	"public class A {@Overridepublic boolean load(Element shared, Element perNode) {boolean result = true;String className = shared.getAttribute(""name"").getValue();PerformActionModel model = new PerformActionModel();model.setClassName(className);shared.getChildren(""property"").forEach(child -> {String value = child.getAttributeValue(""value"");if (child.getAttributeValue(""name"").equals(""systemPrefix"") && value != null) {try {Class<?> ac = Class.forName(className);if (value.isEmpty() && SystemConnectionAction.class.isAssignableFrom(ac)) {SystemConnectionAction<?> a =(SystemConnectionAction<?>) ac.getConstructor().newInstance();InstanceManager.getList(SystemConnectionMemo.class).forEach(memo ->a.getSystemConnectionMemoClasses().stream().filter(mc -> memo.getClass().isAssignableFrom(mc)).forEach(mc -> model.setSystemPrefix(memo.getSystemPrefix())));} else {model.setSystemPrefix(value);}} catch (ClassNotFoundException| InstantiationException| IllegalAccessException| IllegalArgumentException| InvocationTargetException| NoSuchMethodException| SecurityException ex) {log.warn(""While trying to do {}, encountered exception"", className, ex);}}});InstanceManager.getDefault(StartupActionsManager.class).addAction(model);return result;}}"	No
1571	"public class A {@Override@SecurityCheckpublic GatewayGroups getGatewayGroups(AuthzToken authzToken)throws InvalidRequestException, AiravataClientException, AiravataSystemException,AuthorizationException, TException {String gatewayId = authzToken.getClaimsMap().get(Constants.GATEWAY_ID);RegistryService.Client regClient = registryClientPool.getResource();try {GatewayGroups gatewayGroups = retrieveGatewayGroups(regClient, gatewayId);registryClientPool.returnResource(regClient);return gatewayGroups;} catch (Exception e) {String msg = ""Error retrieving GatewayGroups for gateway: "" + gatewayId;logger.error(msg, e);AiravataSystemException exception =new AiravataSystemException(AiravataErrorType.INTERNAL_ERROR);exception.setMessage(msg + "" More info : "" + e.getMessage());registryClientPool.returnBrokenResource(regClient);throw exception;}}}"	No
1572	"public class A {public Page<PushablePackageDto> queryAllPullablePackagesV2(int limit, int offset, String appName, String sortType, String sortItem) {LOGGER.info(""pullablePackageService queryAllPullablePackages come in"");return pushablePackageRepository.queryAllPushablePackagesV2(limit, offset, appName, sortType, sortItem, ""pull"");}}"	No
1573	"public class A {protected static ActorSystem getActorSystem(String host, String port) {if (null == system) {Config conf;if (""remote"".equals(getMode())) {Config remote = getRemoteConfig(host, port);conf = remote.withFallback(config.getConfig(name));} else {conf = config.getConfig(name);}system = ActorSystem.create(name, conf);}return system;}}"	Yes
1574	"public class A {@Overridepublic RepeatStatus executeStep(ChunkContext chunkContext, JobExecutionStatusHolder jobExecutionStatusHolder)throws Exception {String clusterName =getJobParameters(chunkContext).getString(JobConstants.CLUSTER_NAME_JOB_PARAM);if (clusterName == null) {clusterName =getJobParameters(chunkContext).getString(JobConstants.TARGET_NAME_JOB_PARAM).split(""-"")[0];}String nodeName = getJobParameters(chunkContext).getString(JobConstants.SUB_JOB_NODE_NAME);NodeEntity node = getClusterEntityMgr().findNodeByName(nodeName);getClusterEntityMgr().syncUpNode(clusterName, nodeName);Boolean success =getFromJobExecutionContext(chunkContext, JobConstants.NODE_OPERATION_SUCCESS, Boolean.class);if (success != null && !success) {throw ClusteringServiceException.CLUSTER_OPERATION_FAILED(clusterName);}NodeStatus expectedStatus =getFromJobExecutionContext(chunkContext, JobConstants.EXPECTED_NODE_STATUS, NodeStatus.class);if (expectedStatus != null) {JobUtils.verifyNodeStatus(node, expectedStatus, true, getClusterEntityMgr());}String cpuNumberStr =getJobParameters(chunkContext).getString(JobConstants.NODE_SCALE_CPU_NUMBER);String memorySizeStr =getJobParameters(chunkContext).getString(JobConstants.NODE_SCALE_MEMORY_SIZE);int cpuNumber = 0;if (cpuNumberStr != null) {cpuNumber = Integer.parseInt(cpuNumberStr);}boolean rollback =getFromJobExecutionContext(chunkContext, JobConstants.NODE_SCALE_ROLLBACK, Boolean.class);long memory = 0;if (memorySizeStr != null) {memory = Long.parseLong(memorySizeStr);}if (cpuNumber > 0 && !rollback) {node.setCpuNum(cpuNumber);}if (memory > 0) {if (!rollback) {node.setMemorySize(memory);}scaleService.updateSwapDisk(nodeName);}getClusterEntityMgr().update(node);return RepeatStatus.FINISHED;}}"	Yes
1575	"public class A {@Overridepublic AnswerItem<BuildRevisionInvariant> readByKey(String system, Integer level, Integer seq) {AnswerItem<BuildRevisionInvariant> ans = new AnswerItem<>();BuildRevisionInvariant result = null;final String query =""SELECT * FROM `buildrevisioninvariant` WHERE `system` = ? and level = ? and seq = ? "";MessageEvent msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED);msg.setDescription(msg.getDescription().replace(""%DESCRIPTION%"", """"));Connection connection = this.databaseSpring.connect();try {PreparedStatement preStat = connection.prepareStatement(query);try {preStat.setString(1, system);preStat.setInt(2, level);preStat.setInt(3, seq);ResultSet resultSet = preStat.executeQuery();try {if (resultSet.first()) {result = loadFromResultSet(resultSet);msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_OK);msg.setDescription(msg.getDescription().replace(""%ITEM%"", OBJECT_NAME).replace(""%OPERATION%"", ""SELECT""));ans.setItem(result);} else {msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_NO_DATA_FOUND);}} catch (SQLException exception) {msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED);msg.setDescription(msg.getDescription().replace(""%DESCRIPTION%"", exception.toString()));} finally {resultSet.close();}} catch (SQLException exception) {msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED);msg.setDescription(msg.getDescription().replace(""%DESCRIPTION%"", exception.toString()));} finally {preStat.close();}} catch (SQLException exception) {msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED);msg.setDescription(msg.getDescription().replace(""%DESCRIPTION%"", exception.toString()));} finally {try {if (connection != null) {connection.close();}} catch (SQLException exception) {LOG.warn(""Unable to close connection : "" + exception.toString());}}ans.setResultMessage(msg);return ans;}}"	Yes
1576	"public class A {private void cleanupCredentials(String endpointUrl) throws IOException {String serverId = DigestUtils.sha256Hex(endpointUrl);String credentialId = ""bitbucket-server:"" + serverId;jenkins.deleteUserDomainCredential(jenkinsUser.username, ""blueocean-bitbucket-server-domain"", credentialId);}}"	Yes
1577	"public class A {private Future<CommandClient> getOrCreateCommandClient(final String tenantId, final String replyId, final String cacheKey) {log.debug(""get or create command client for [tenantId: {}, replyId: {}]"", tenantId, replyId);return connection.executeOnContext(result -> {commandClientFactory.getOrCreateClient(cacheKey,() ->CommandClientImpl.create(connection,tenantId,replyId,samplerFactory.create(CommandConstants.COMMAND_ENDPOINT),s -> removeCommandClient(cacheKey),s -> removeCommandClient(cacheKey)),result);});}}"	No
1578	"public class A {private void printVariables() {logger.info(""Get Percentage: "" + getPercentage);}}"	Yes
1579	"public class A {@Overridepublic boolean process(Exchange exchange, AsyncCallback callback) {SalesforceEndpoint endpoint = (SalesforceEndpoint) getEndpoint();SalesforceSession session = endpoint.getComponent().getSession();if (session != null && session.getAccessToken() == null) {try {session.login(null);} catch (SalesforceException e) {throw RuntimeCamelException.wrapRuntimeCamelException(e);}}LOG.debug(""Processing {}"", endpoint.getOperationName());return processor.process(exchange, callback);}}"	No
1580	"public class A {private void cleanupInternal() {try {int collectedEntries = 0;int removedEntries = 0;MapValueWeakReference ref;while ((ref = (MapValueWeakReference) referenceQueue.poll()) != null) {collectedEntries++;if (weakReferences.remove(ref.key, ref)) {removedEntries++;}if (log.isTraceEnabled()) {log.trace(""Garbage collected {}"", ref.key);}}if (log.isDebugEnabled()) {}} catch (Exception e) {}}}"	Yes
1581	"public class A {public User ensureAdminUser(String userID) throws Exception {User user = usersService.getUser(userID);if (user == null) {Log.warn(String.format(""Tried to find user with id='%s' but got null"", userID));throw new Exception(""User '"" + userID + ""' does not exist"");}if (!isAdminUser(user)) {throw new Exception(""Access denied"");}return user;}}"	Yes
1582	public class A {public void debug(String message, Throwable t) {}}	Yes
1583	"public class A {protected boolean authenticate(ContainerRequestContext requestContext, @Nullable C credentials, String scheme) {try {if (credentials == null) {return false;}final Optional<P> principal = authenticator.authenticate(credentials);if (!principal.isPresent()) {return false;}final P prince = principal.get();final SecurityContext securityContext = requestContext.getSecurityContext();final boolean secure = securityContext != null && securityContext.isSecure();requestContext.setSecurityContext(new SecurityContext() {@Overridepublic Principal getUserPrincipal() {return prince;}@Overridepublic boolean isUserInRole(String role) {return authorizer.authorize(prince, role, requestContext);}@Overridepublic boolean isSecure() {return secure;}@Overridepublic String getAuthenticationScheme() {return scheme;}});return true;} catch (AuthenticationException e) {logger.warn(""Error authenticating credentials"", e);throw new InternalServerErrorException();}}}"	No
1584	"public class A {private Entry lookupUser(String username) throws LdapException {StringBuilder userQuery = new StringBuilder();userQuery.append(""(&(objectclass="");userQuery.append(userObjectClass);userQuery.append("")(|"");boolean hasCondition = false;for (String lookupAttr : lookupAttrs) {String attrName = lookupAttr.trim();if (!attrName.isEmpty()) {userQuery.append('(').append(attrName).append('=').append(username).append(')');hasCondition = true;}}userQuery.append(""))"");if (!hasCondition) {return null;}EntryCursor responseCursor =connection.search(userDn, userQuery.toString(), SearchScope.SUBTREE);try {try {if (responseCursor != null && responseCursor.next()) {Entry match = responseCursor.get();return match;}} catch (CursorException e) {return null;}} finally {responseCursor.close();}return null;}}"	Yes
1585	"public class A {@Overridepublic synchronized void changeToParentDirectory() throws GenericFileOperationFailedException {String current = getCurrentDirectory();String parent = FileUtil.compactPath(current + ""/.."");if (!parent.startsWith(""/"")) {parent = ""/"" + parent;}changeCurrentDirectory(parent);}}"	Yes
1586	"public class A {@Overridepublic Functionality find(Account actor, String domainId, String functionalityId, boolean tree)throws BusinessException {Validate.notEmpty(domainId);Validate.notEmpty(functionalityId);Validate.notNull(actor);Validate.isTrue(actor.hasAdminRole() || actor.hasSuperAdminRole());AbstractDomain domain = getDomain(actor, domainId);Functionality entity = businessService.getFunctionality(domain, functionalityId);Set<Functionality> functionalities = businessService.getAllFunctionalities(domain, excludes);for (Functionality f : functionalities) {if (f.isParam()) {if (f.getParentIdentifier().equals(functionalityId)) {if (f.isDisplayable()) {entity.setDisplayable(true);if (tree) {entity.addChild(f);}}}}}if (!entity.isDisplayable()) {throw new BusinessException(BusinessErrorCode.FUNCTIONALITY_NOT_FOUND,""Functionality not found : "" + functionalityId);}return entity;}}"	Yes
1587	"public class A {@Overridepublic void initialize() {config = getConfigAs(WLedConfiguration.class);if (!config.address.contains(""://"")) {logger.debug(""Address was not entered in correct format, it may be the raw IP so adding http:// to""+ "" start"");config.address = ""http://"" + config.address;}pollingFuture =scheduler.scheduleWithFixedDelay(this::pollLED, 1, config.pollTime, TimeUnit.SECONDS);}}"	No
1588	public class A {@PreDestroypublic void tearDown() {for (Entry<String, Map<Priority, AccumuloClientPool>> entry : this.pools.entrySet()) {for (Entry<Priority, AccumuloClientPool> poolEntry : entry.getValue().entrySet()) {try {poolEntry.getValue().close();} catch (Exception e) {}}}}}	Yes
1589	"public class A {@Testpublic void testStartBridgeFirst() throws Exception {server0.stop();JMSBridgeImpl bridge = null;ConnectionFactoryFactory factInUse0 = cff0;ConnectionFactoryFactory factInUse1 = cff1;try {final int NUM_MESSAGES = 10;bridge =new JMSBridgeImpl(factInUse0,factInUse1,sourceQueueFactory,targetQueueFactory,null,null,null,null,null,5000,10,QualityOfServiceMode.AT_MOST_ONCE,NUM_MESSAGES,-1,null,null,false).setBridgeName(""test-bridge"");bridge.start();server0.start();sendMessages(cf0, sourceQueue, 0, NUM_MESSAGES / 2, false, false);checkEmpty(targetQueue, 1);sendMessages(cf0, sourceQueue, NUM_MESSAGES / 2, NUM_MESSAGES / 2, false, false);checkAllMessageReceivedInOrder(cf1, targetQueue, 0, NUM_MESSAGES, false);sendMessages(cf0, sourceQueue, 0, NUM_MESSAGES + 1, false, false);checkAllMessageReceivedInOrder(cf1, targetQueue, 0, NUM_MESSAGES, false);sendMessages(cf0, sourceQueue, 0, NUM_MESSAGES - 1, false, false);checkAllMessageReceivedInOrder(cf1, targetQueue, NUM_MESSAGES, 1, false);checkAllMessageReceivedInOrder(cf1, targetQueue, 0, NUM_MESSAGES - 1, false);} finally {if (bridge != null) {instanceLog.debug(""Stopping bridge"");bridge.stop();}}}}"	No
1590	"public class A {@Beanpublic MarshallingPayloadMethodProcessormicrogridsAdHocManagementMarshallingPayloadMethodProcessor() {LOGGER.debug(""Creating Public Lighting Ad Hoc Management Marshalling Payload Method Processor Bean"");return new MarshallingPayloadMethodProcessor(this.microgridsAdHocManagementMarshaller(), this.microgridsAdHocManagementMarshaller());}}"	No
1591	"public class A {public static Property from(AttributeDefinition ad) {String description = ad.getDescription();if (description == null) {description = """";}final OpenemsType type;switch (ad.getType()) {case AttributeDefinition.LONG:type = OpenemsType.LONG;break;case AttributeDefinition.INTEGER:type = OpenemsType.INTEGER;break;case AttributeDefinition.SHORT:case AttributeDefinition.BYTE:type = OpenemsType.SHORT;break;case AttributeDefinition.DOUBLE:type = OpenemsType.DOUBLE;break;case AttributeDefinition.FLOAT:type = OpenemsType.FLOAT;break;case AttributeDefinition.BOOLEAN:type = OpenemsType.BOOLEAN;break;case AttributeDefinition.STRING:case AttributeDefinition.CHARACTER:case AttributeDefinition.PASSWORD:type = OpenemsType.STRING;break;default:LOG.warn(""AttributeDefinition type ["" + ad.getType() + ""] is unknown!"");type = OpenemsType.STRING;}String[] defaultValues = ad.getDefaultValue();JsonElement defaultValue;if (defaultValues == null) {defaultValue = JsonNull.INSTANCE;} else if (ad.getCardinality() == 0) {if (defaultValues.length == 1) {defaultValue = JsonUtils.getAsJsonElement(defaultValues[0]);} else {defaultValue = new JsonPrimitive("""");}} else {JsonArray defaultValueArray = new JsonArray();for (String value : defaultValues) {defaultValueArray.add(JsonUtils.getAsJsonElement(value));}defaultValue = defaultValueArray;}JsonObject schema;int cardinality = Math.abs(ad.getCardinality());if (cardinality > 1) {schema =JsonUtils.buildJsonObject().addProperty(""type"", ""repeat"").add(""fieldArray"", getSchema(ad)).build();} else {schema = getSchema(ad);}boolean isPassword;if (ad.getType() == AttributeDefinition.PASSWORD) {isPassword = true;} else {isPassword = false;}String id = ad.getID();String name = ad.getName();final boolean isRequired;switch (id) {case ""alias"":isRequired = false;break;default:isRequired = ad.getCardinality() == 0;}return new Property(id, name, description, type, isRequired, isPassword, defaultValue, schema);}}"	No
1592	public class A {@Overridepublic void memberDeparted(DistributionManager distributionManager, InternalDistributedMember id, boolean crashed) {synchronized (this.hostedTXStates) {Iterator<Map.Entry<TXId, TXStateProxy>> iterator = this.hostedTXStates.entrySet().iterator();while (iterator.hasNext()) {Map.Entry<TXId, TXStateProxy> me = iterator.next();TXId txId = me.getKey();if (txId.getMemberId().equals(id)) {me.getValue().close();if (logger.isDebugEnabled()) {}iterator.remove();}}}expireClientTransactionsSentFromDepartedProxy(id);}}	Yes
1593	public class A {private static <T> void assertAttributeEquals(Entity x, AttributeSensor<T> sensor, T value) {try {EntityTestUtils.assertAttributeEquals(x, sensor, value);} catch (Throwable e) {Entities.dumpInfo(x);throw Exceptions.propagate(e);}}}	Yes
1594	"public class A {boolean setAsEntryBlockIfPossible(Block b) {for (int i = 0; i < cntOfPossibleEntrancePaths; i++) {Block CandidateBlock = pListOfPossibleEntrancePaths[i].getBlock();if (CandidateBlock == b) {setValue(CandidateBlock.getValue());setDirection(pListOfPossibleEntrancePaths[i].getFromBlockDirection());log.info(""Block {} gets LATE new value from {}, direction= {}"",getDisplayName(),CandidateBlock.getDisplayName(),Path.decodeDirection(getDirection()));resetCandidateEntrancePaths();return true;}}return false;}}"	No
1595	"public class A {public Future<List<OctaveObject>> enqueue(OctaveEnv<OctaveExecutableSheet> env) throws Exception {if (initted) {inQueue.add(env);synchronized (env) {env.wait();}return out.remove(env.getUniqueID());} else {if (LOGGER.isErrorEnabled())LOGGER.error(""Unable to enqueue the evironment, try to initialize the Engine first."");return null;}}}"	No
1596	public class A {@PostConstructpublic void init() {marshallerInstance.iterator().forEachRemaining(marshaller -> {register(marshaller.getType(), marshaller);});}}	Yes
1597	public class A {private boolean _processServicePre(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, long userId)throws IOException, ServletException {try {EventsProcessorUtil.process(PropsKeys.SERVLET_SERVICE_EVENTS_PRE,PropsValues.SERVLET_SERVICE_EVENTS_PRE,httpServletRequest,httpServletResponse);} catch (Exception exception) {Throwable throwable = exception.getCause();if (throwable instanceof NoSuchLayoutException) {PortalUtil.sendError(HttpServletResponse.SC_NOT_FOUND,(Exception) throwable,httpServletRequest,httpServletResponse);return true;} else if (throwable instanceof PrincipalException) {_processServicePrePrincipalException(throwable, userId, httpServletRequest, httpServletResponse);return true;}httpServletRequest.setAttribute(StrutsUtil.EXCEPTION, exception);StrutsUtil.forward(PropsValues.SERVLET_SERVICE_EVENTS_PRE_ERROR_PAGE,getServletContext(),httpServletRequest,httpServletResponse);if (exception == httpServletRequest.getAttribute(StrutsUtil.EXCEPTION)) {httpServletRequest.removeAttribute(StrutsUtil.EXCEPTION);httpServletRequest.removeAttribute(RequestDispatcher.ERROR_EXCEPTION);httpServletRequest.removeAttribute(RequestDispatcher.ERROR_EXCEPTION_TYPE);httpServletRequest.removeAttribute(RequestDispatcher.ERROR_MESSAGE);httpServletRequest.removeAttribute(RequestDispatcher.ERROR_REQUEST_URI);httpServletRequest.removeAttribute(RequestDispatcher.ERROR_SERVLET_NAME);httpServletRequest.removeAttribute(RequestDispatcher.ERROR_STATUS_CODE);}return true;}if (_HTTP_HEADER_VERSION_VERBOSITY_DEFAULT) {} else if (_HTTP_HEADER_VERSION_VERBOSITY_PARTIAL) {httpServletResponse.addHeader(_LIFERAY_PORTAL_REQUEST_HEADER, ReleaseInfo.getName());} else {httpServletResponse.addHeader(_LIFERAY_PORTAL_REQUEST_HEADER, ReleaseInfo.getReleaseInfo());}return false;}}	Yes
1598	"public class A {public int logDistrictRequest(DistrictRequest dr) {if (dr != null) {ApiRequest apiRequest = dr.getApiRequest();JobProcess jobProcess = dr.getJobProcess();try {int addressId =(dr.getGeocodedAddress() != null)? sqlAddressLogger.logAddress(dr.getGeocodedAddress().getAddress()): 0;String strategy =(dr.getDistrictStrategy() != null) ? dr.getDistrictStrategy().name() : null;MapSqlParameterSource params = new MapSqlParameterSource();params.addValue(""apiRequestId"", (apiRequest != null) ? apiRequest.getId() : null);params.addValue(""jobProcessId"", (jobProcess != null) ? jobProcess.getId() : null);params.addValue(""addressId"", (addressId > 0) ? addressId : null);params.addValue(""provider"", dr.getProvider());params.addValue(""geoProvider"", dr.getGeoProvider());params.addValue(""showMembers"", dr.isShowMembers());params.addValue(""showMaps"", dr.isShowMaps());params.addValue(""uspsValidate"", dr.isUspsValidate());params.addValue(""skipGeocode"", dr.isSkipGeocode());params.addValue(""districtStrategy"", strategy);params.addValue(""requestTime"", dr.getRequestTime());List<Integer> idList =baseDao.geoApiNamedJbdcTemaplate.query(DistrictRequestQuery.INSERT_REQUEST.getSql(baseDao.getLogSchema()),params,new DistrictRequestIdHandler());dr.setId(idList.get(0));return idList.get(0);} catch (Exception ex) {}} else {logger.error(""DistrictRequest was null, cannot be logged!"");}return 0;}}"	Yes
1599	"public class A {@Overridepublic void start(Context context, WorkflowAction action) throws ActionExecutorException {try {context.setStartData(""-"", ""-"", ""-"");Element actionXml = XmlUtils.parseXml(action.getConf());validateAndMail(context, actionXml);context.setExecutionData(""OK"", null);} catch (Exception ex) {throw convertException(ex);}}}"	Yes
1600	"public class A {private List<ContainerDescriptorHandler> selectContainerDescriptorHandlers(List<ContainerDescriptorHandlerConfig> requestedContainerDescriptorHandlers,final AssemblerConfigurationSource configSource)throws InvalidAssemblerConfigurationException {getLogger().debug(""All known ContainerDescriptorHandler components: ""+ (containerDescriptorHandlers == null? ""none; map is null."": """" + containerDescriptorHandlers.keySet()));if (requestedContainerDescriptorHandlers == null) {requestedContainerDescriptorHandlers = new ArrayList<>();}final List<ContainerDescriptorHandler> handlers = new ArrayList<>();final List<String> hints = new ArrayList<>();if (!requestedContainerDescriptorHandlers.isEmpty()) {for (final ContainerDescriptorHandlerConfig config : requestedContainerDescriptorHandlers) {final String hint = config.getHandlerName();final ContainerDescriptorHandler handler = containerDescriptorHandlers.get(hint);if (handler == null) {throw new InvalidAssemblerConfigurationException(""Cannot find ContainerDescriptorHandler with hint: "" + hint);}getLogger()if (config.getConfiguration() != null) {getLogger().debug(""Configuring handler with:\n\n"" + config.getConfiguration() + ""\n\n"");configureContainerDescriptorHandler(handler, (Xpp3Dom) config.getConfiguration(), configSource);}handlers.add(handler);hints.add(hint);}}if (!hints.contains(""plexus"")) {handlers.add(new ComponentsXmlArchiverFileFilter());}return handlers;}}"	Yes
1601	"public class A {@Overridepublic void operationComplete(final ChannelFuture channelFuture) throws Exception {if (channelFuture.isSuccess()) {ch = channelFuture.channel();logger.info(""Gremlin Server configured with worker thread pool of {}, gremlin pool of {} and boss""+ "" thread pool of {}."",settings.threadPoolWorker,settings.gremlinPool,settings.threadPoolBoss);logger.info(""Channel started at port {}."", settings.port);serverReadyFuture.complete(serverGremlinExecutor);} else {serverReadyFuture.completeExceptionally(new IOException(String.format(""Could not bind to %s and %s - perhaps something else is bound to that address."",settings.host, settings.port)));}}}"	No
1602	"public class A {@Overridepublic void createSubscription(Subscription subscription, String subscriptionId)throws InvalidSubscriptionException, SubscriptionExistsException {String methodName = ""createSubscription"";LOGGER.debug(""Creating Evaluation Criteria... "");try {for (PreSubscriptionPlugin plugin : preSubscription) {LOGGER.debug(""Processing subscription with preSubscription plugin"");subscription = plugin.process(subscription);}SubscriptionFilterVisitor visitor = new SubscriptionFilterVisitor();Predicate finalPredicate = (Predicate) subscription.accept(visitor, null);LOGGER.debug(""predicate from filter visitor: {}"", finalPredicate);String[] topics = new String[] {PubSubConstants.PUBLISHED_EVENT_TOPIC_NAME};Dictionary<String, String[]> props = new Hashtable<>(1, 1);props.put(EventConstants.EVENT_TOPIC, topics);ServiceRegistration serviceRegistration =bundleContext.registerService(EventHandler.class.getName(),new PublishedEventHandler(finalPredicate, subscription, preDelivery, catalog, threadPool),props);existingSubscriptions.put(subscriptionId, serviceRegistration);LOGGER.debug(""Subscription {} created."", subscriptionId);} catch (Exception e) {LOGGER.info(""Error while creating subscription predicate: "", e);throw new InvalidSubscriptionException(e);}LOGGER.trace(EXITING, methodName);}}"	Yes
1603	public class A {private void checkBond(IAtomContainer atomContainer, int index) throws CDKException {IBond bond = atomContainer.getBond(index);if (bond != null && bond.getFlag(CDKConstants.SINGLE_OR_DOUBLE)) {try {oldBondOrder = bond.getOrder();bond.setOrder(IBond.Order.SINGLE);setMaxBondOrder(bond, atomContainer);} catch (CDKException e) {bond.setOrder(oldBondOrder);logger.debug(e);}}}}	No
1604	"public class A {@Overridepublic Object preparePersist(EntityMetadata entityMetadata, Object entity, XmlDumpRestoreContext ctx) {final UserXmlPreferencesDO userPrefs = (UserXmlPreferencesDO) entity;if (!TaskTree.USER_PREFS_KEY_OPEN_TASKS.equals(userPrefs.getKey())) {return null;}final Object userPrefsObj = userXmlPreferencesDao.deserialize(null, userPrefs, true);if (userPrefsObj == null || !(userPrefsObj instanceof Set)) {return null;}Set<Integer> oldIds = null;try {oldIds = (Set<Integer>) userPrefsObj;} catch (final ClassCastException ex) {LOG.error(""Oups, Set of task id's is not of type Set<Integer>, can't migrate this list."");}if (oldIds.size() == 0) {return null;}final Set<Integer> newIds = new HashSet<>();EntityMetadata taskem =ctx.getEmgr().getEmgrFactory().getMetadataRepository().getEntityMetadata(TaskDO.class);for (final Integer oldId : oldIds) {Object task = ctx.findEntityByOldPk(oldId, taskem.getJavaType());if (task == null) {LOG.warn(""Cannot find Task with old pk "" + oldId);continue;}Integer newId = (Integer) taskem.getIdColumn().getGetter().get(task);newIds.add(newId);}userXmlPreferencesDao.serialize(userPrefs, newIds);return null;}}"	No
1605	"public class A {@Test(groups = {""Phase 1""},description = ""space in field ends"",priority = 14)public void verifyTest_1_4() throws Exception {Context context = new Context();CheckPointReport result =verifyValidation(log, context, ""csv_1_4"", GTFS_1_GTFS_CSV_7, SEVERITY.WARNING, RESULT.NOK, true);Assert.assertEquals(result.getCheckPointErrorCount(), 1, ""detail count"");for (CheckPointErrorReport detail : getDetails(context, result)) {Assert.assertNotNull(detail.getSource(), ""detail must refer a source"");Assert.assertNotNull(detail.getSource().getFile(), ""detail must refer a file source"");Assert.assertEquals(detail.getSource().getFile().getFilename(), ""agency.txt"", ""detail must refer bad file"");Assert.assertEquals(detail.getSource().getFile().getLineNumber(),Integer.valueOf(2),""detail must refer bad line"");}}}"	Yes
1606	"public class A {@BeforeMethod(alwaysRun = true)public void setupADCTest() throws Exception {System.setProperty(""jndi.properties.dir"", getCommonResourcesPath());File tempWorkDir = new File(APPLICATION_PATH);if (!tempWorkDir.mkdir()) {throw new Exception(""Could not create dir at "" + tempWorkDir.getAbsolutePath());}File dummyDir = new File(APPLICATION_PATH + File.separator + ""do_not_delete"");File dummyFile =new File(APPLICATION_PATH + File.separator + ""do_not_delete"" + File.separator + ""do_not_delete"");if (!dummyDir.mkdir()) {throw new Exception(""Could not create dir at "" + dummyDir.getAbsolutePath());}if (!dummyFile.createNewFile()) {throw new Exception(""Could not create file at "" + dummyFile.getAbsolutePath());}String msg = ""This should not be visible"";Files.write(Paths.get(dummyFile.getAbsolutePath()), msg.getBytes());super.setup(ADC_TIMEOUT);startServerSocket(8080);}}"	Yes
1607	"public class A {@Overridepublic Job encode(Track sourceTrack, String profileId) throws EncoderException {HttpPost post = new HttpPost(""/encode"");try {List<BasicNameValuePair> params = new ArrayList<>();params.add(new BasicNameValuePair(""sourceTrack"", MediaPackageElementParser.getAsXml(sourceTrack)));params.add(new BasicNameValuePair(""profileId"", profileId));post.setEntity(new UrlEncodedFormEntity(params, ""UTF-8""));} catch (Exception e) {throw new EncoderException(""Unable to assemble a remote composer request for track "" + sourceTrack, e);}HttpResponse response = null;try {response = getResponse(post);if (response != null) {String content = EntityUtils.toString(response.getEntity());Job r = JobParser.parseJob(content);return r;}} catch (Exception e) {throw new EncoderException(""Unable to encode track "" + sourceTrack + "" using a remote composer service"", e);} finally {closeConnection(response);}throw new EncoderException(""Unable to encode track "" + sourceTrack + "" using a remote composer service"");}}"	Yes
1608	"public class A {@PutChildpublic Contact createContact(AddressBook cal, byte[] vcard, String newName) {log.info(""CreateContact: "" + newName);Contact m = new Contact();m.setVcardData(vcard);m.setName(newName);m.setId(System.currentTimeMillis());m.setModifiedDate(new Date());cal.user.getContacts().add(m);return m;}}"	No
1609	public class A {private Document createDocument(String xmlString) {try {DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();return documentBuilder.parse(new InputSource(new StringReader((xmlString))));} catch (ParserConfigurationException e) {throw new IllegalStateException(e.getMessage());} catch (SAXException e) {throw new IllegalStateException(e.getMessage());} catch (IOException e) {throw new IllegalStateException(e.getMessage());}}}	Yes
1610	"public class A {@Overrideprotected void failAttempt(final RaftMemberContext member, final RaftRequest request, final Throwable error) {super.failAttempt(member, request, error);failHeartbeat();final long quorumResponseTime =System.currentTimeMillis() - Math.max(computeResponseTime(), leaderTime);final long maxQuorumResponseTimeout = electionTimeout * 2;if (member.getFailureCount() >= MIN_STEP_DOWN_FAILURE_COUNT&& quorumResponseTime > maxQuorumResponseTimeout) {log.warn(""Suspected network partition after {} failures from {} over a period of time {} > {},""+ "" stepping down"",member.getFailureCount(),member.getMember().memberId(),quorumResponseTime,maxQuorumResponseTimeout);raft.setLeader(null);raft.transition(RaftServer.Role.FOLLOWER);}}}"	No
1611	"public class A {public synchronized void registerConfiguration(TypeConfiguration config) {allConfigurations.add(config);dirty = true;log.info(""Registered global prefetch: "" + config.prefetchInfo);}}"	No
1612	"public class A {@Overridepublic void invoke(OUT value, Context context) throws Exception {if (this.producer == null) {throw new RuntimeException(""Kinesis producer has been closed"");}checkAndPropagateAsyncError();boolean didWaitForFlush = enforceQueueLimit();if (didWaitForFlush) {checkAndPropagateAsyncError();}String stream = defaultStream;String partition = defaultPartition;ByteBuffer serialized = schema.serialize(value);String customStream = schema.getTargetStream(value);if (customStream != null) {stream = customStream;}String explicitHashkey = null;if (customPartitioner != null) {partition = customPartitioner.getPartitionId(value);explicitHashkey = customPartitioner.getExplicitHashKey(value);}if (stream == null) {if (failOnError) {throw new RuntimeException(""No target stream set"");} else {LOG.warn(""No target stream set. Skipping record"");return;}}ListenableFuture<UserRecordResult> cb =producer.addUserRecord(stream, partition, explicitHashkey, serialized);Futures.addCallback(cb, callback, MoreExecutors.directExecutor());}}"	No
1613	"public class A {@Overridepublic List<ResourceBO> resourcesWithAnchorDate(Integer studyId) {logger.entry(""StudyServiceImpl - resourcesWithAnchorDate() - Starts"");List<ResourceBO> resourceList = null;try {resourceList = studyDAO.resourcesWithAnchorDate(studyId);} catch (Exception e) {}logger.exit(""StudyServiceImpl - resourcesWithAnchorDate() - Ends"");return resourceList;}}"	Yes
1614	public class A {private static BeamTableStatistics getRowCountFromBQ(PipelineOptions o, String bqLocation) {try {BigInteger rowCount =BigQueryHelpers.getNumRows(o.as(BigQueryOptions.class), BigQueryHelpers.parseTableSpec(bqLocation));if (rowCount == null) {return BeamTableStatistics.BOUNDED_UNKNOWN;}return BeamTableStatistics.createBoundedTableStatistics(rowCount.doubleValue());} catch (IOException | InterruptedException e) {}return BeamTableStatistics.BOUNDED_UNKNOWN;}}	Yes
1615	"public class A {@Overridepublic void unregisterServlet(final Servlet servlet) {LOG.warn("""");}}"	No
1616	"public class A {private static void validateOriginalPrincipal(Set<String> proxyRoles, String authenticatedPrincipal, String originalPrincipal) {if (proxyRoles.contains(authenticatedPrincipal)) {if (StringUtils.isBlank(originalPrincipal)) {log.warn(""Original principal empty in request authenticated as {}"", authenticatedPrincipal);throw new RestException(Response.Status.UNAUTHORIZED,""Original principal cannot be empty if the request is via proxy."");}if (proxyRoles.contains(originalPrincipal)) {throw new RestException(Response.Status.UNAUTHORIZED, ""Original principal cannot be a proxy role"");}}}}"	Yes
1617	public class A {@Bean@ConditionalOnMissingBeanpublic SentinelZuulPreFilter sentinelZuulPreFilter() {return new SentinelZuulPreFilter(zuulProperties.getOrder().getPre());}}	Yes
1618	public class A {@Overridepublic CommerceApplicationModel remove(Serializable primaryKey)throws NoSuchApplicationModelException {Session session = null;try {session = openSession();CommerceApplicationModel commerceApplicationModel =(CommerceApplicationModel) session.get(CommerceApplicationModelImpl.class, primaryKey);if (commerceApplicationModel == null) {if (_log.isDebugEnabled()) {}throw new NoSuchApplicationModelException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return remove(commerceApplicationModel);} catch (NoSuchApplicationModelException noSuchEntityException) {throw noSuchEntityException;} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}}	Yes
1619	public class A {@Testpublic void handshakeFail1() throws Exception {switchSim = createSimpleClient();switchSim.setSecuredClient(false);Deque<ClientEvent> handshakeScenario =ScenarioFactory.createHandshakeScenario((short) 1, ScenarioFactory.VERSION_BITMAP_10_13);ScenarioHandler scenario = new ScenarioHandler(handshakeScenario);switchSim.setScenarioHandler(scenario);scenarioPool.execute(switchSim);}}	Yes
1620	"public class A {public List findByExample(StgRechteRolleZielobj instance) {log.debug(""finding StgRechteRolleZielobj instance by example"");try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.StgRechteRolleZielobj"").add(Example.create(instance)).list();log.debug(""find by example successful, result size: "" + results.size());return results;} catch (RuntimeException re) {throw re;}}}"	Yes
1621	"public class A {public StreamingOutput leggiBlobTracciato(Long idTracciato, IField field)throws ServiceException, TracciatoNonTrovatoException, NotAuthorizedException,NotAuthenticatedException {try {IJDBCAdapter jdbcAdapter =JDBCAdapterFactory.createJDBCAdapter(ConnectionManager.getJDBCServiceManagerProperties().getDatabase());JDBC_SQLObjectFactory jdbcSqlObjectFactory = new JDBC_SQLObjectFactory();ISQLQueryObject sqlQueryObject =jdbcSqlObjectFactory.createSQLQueryObject(ConnectionManager.getJDBCServiceManagerProperties().getDatabase());TracciatoFieldConverter converter =new TracciatoFieldConverter(ConnectionManager.getJDBCServiceManagerProperties().getDatabase());TracciatoModel model = it.govpay.orm.Tracciato.model();sqlQueryObject.addFromTable(converter.toTable(model.STATO));sqlQueryObject.addSelectField(converter.toTable(model.STATO), converter.toColumn(field, false));sqlQueryObject.addWhereCondition(true, converter.toTable(model.STATO, true) + "".id"" + "" = ? "");String sql = sqlQueryObject.createSQLQuery();StreamingOutput zipStream =new StreamingOutput() {@Overridepublic void write(OutputStream output)throws java.io.IOException, WebApplicationException {PreparedStatement prepareStatement = null;ResultSet resultSet = null;BasicBD bd = null;try {bd = BasicBD.newInstance(ContextThreadLocal.get().getTransactionId());bd.setupConnection(ContextThreadLocal.get().getTransactionId());prepareStatement = bd.getConnection().prepareStatement(sql);prepareStatement.setLong(1, idTracciato);resultSet = prepareStatement.executeQuery();if (resultSet.next()) {InputStream isRead =jdbcAdapter.getBinaryStream(resultSet, converter.toColumn(field, false));if (isRead != null) {IOUtils.copy(isRead, output);} else {output.write("""".getBytes());}} else {throw new TracciatoNonTrovatoException(""Tracciato ["" + idTracciato + ""] non trovato."");}} catch (Exception e) {log.error(""Errore durante la lettura dei bytes: "" + e.getMessage(), e);throw new WebApplicationException(""Errore durante la lettura del tracciato di esito."");} finally {try {if (resultSet != null) resultSet.close();} catch (SQLException e) {}try {if (prepareStatement != null) prepareStatement.close();} catch (SQLException e) {}if (bd != null) bd.closeConnection();}}};return zipStream;} catch (SQLQueryObjectException e) {throw new ServiceException(e);} catch (ExpressionException e) {throw new ServiceException(e);} catch (JDBCAdapterException e) {throw new ServiceException(e);} finally {}}}"	No
1622	"public class A {void cleanup() {if (LOG.isDebugEnabled()) {LOG.debug(""==> RangerTagRefresher.cleanup()"");}stopRefresher();if (LOG.isDebugEnabled()) {LOG.debug(""<== RangerTagRefresher.cleanup()"");}}}"	No
1623	"public class A {@Testpublic void testGetCustomObjectWithCompoundKey() throws Exception {irProps.customObjectAction.setValue(CustomObjectAction.get);irProps.customObjectName.setValue(TEST_CO_NAME_CAR);irProps.validateFetchCustomObjectSchema();irProps.useCompoundKey.setValue(true);irProps.compoundKey.keyName.setValue(Arrays.asList(""customerId"", ""VIN""));irProps.compoundKey.keyValue.setValue(Arrays.asList(""4137181"", ""WBA4R7C30HK896061""));MarketoSource source = new MarketoSource();source.initialize(null, irProps);MarketoRESTClient client = (MarketoRESTClient) source.getClientService(null);MarketoRecordResult result = client.getCustomObjects(irProps, null);assertNotNull(result.getRecords());assertEquals(1, result.getRecords().size());IndexedRecord record = result.getRecords().get(0);Schema s = record.getSchema();assertEquals(4137181, record.get(s.getField(""customerId"").pos()));assertEquals(""WBA4R7C30HK896061"", record.get(s.getField(""VIN"").pos()));assertEquals(""FIT"", record.get(s.getField(""brand"").pos()));}}"	Yes
1624	public class A {@Testpublic void test_01_short_replaceBase() {long seed = 20110218;int lenMask = 0xff;int numTests = 1000;int numTestsPerSeq = 100;randReplaceBaseTest(numTests, numTestsPerSeq, lenMask, seed);}}	Yes
1625	public class A {protected void processCacheRuntimeException(CacheRuntimeException problem) {if (problem instanceof RegionDestroyedException) {addProcessingException(problem);} else if (problem instanceof CancelException) {addProcessingException(problem);throw problem;} else {addProcessingException(problem);}}}	Yes
1626	"public class A {@Test(groups = ""fast"")public void multipleSequentialPostProcessors() {final AtomicInteger counter = new AtomicInteger(0);class MyObjectPostProcessor implements ObjectPostProcessor<StringBuilder> {public void setObjectFactory(DefaultObjectFactory factory) {}public StringBuilder postProcess(StringBuilder object) {return object.append(""Touched by "").append(this.toString().replaceAll("".*@"", """")).append("" (counter="").append(counter.addAndGet(1)).append("") ... "");}}DefaultObjectFactory factory = new DefaultObjectFactory();for (int i = 0; i < 5; i++) {factory.addPostProcessor(new MyObjectPostProcessor());}StringBuilder buf = factory.newInstance(StringBuilder.class);Assert.assertEquals(counter.intValue(), 5);}}"	Yes
1627	public class A {public void addLogfile(String filename) {if (filename != null) {synchronized (mCompletedLogfiles) {mCompletedLogfiles.add(filename);mCompletedLogfiles.notify();}}}}	Yes
1628	"public class A {public SysExportNotiz merge(SysExportNotiz detachedInstance) {try {SysExportNotiz result =(SysExportNotiz) sessionFactory.getCurrentSession().merge(detachedInstance);log.debug(""merge successful"");return result;} catch (RuntimeException re) {throw re;}}}"	Yes
1629	"public class A {public boolean compare(CompareOperationContext compareContext) throws LdapException {if (IS_DEBUG) {}long opStart = 0L;if (IS_TIME) {opStart = System.nanoTime();}ensureStarted();Dn dn = compareContext.getDn();if (!dn.isSchemaAware()) {dn = new Dn(directoryService.getSchemaManager(), dn);compareContext.setDn(dn);}directoryService.getReferralManager().lockRead();try {Entry parentEntry = directoryService.getReferralManager().getParentReferral(dn);if (parentEntry != null) {Dn childDn = dn.getDescendantOf(parentEntry.getDn());if (directoryService.getReferralManager().isReferral(dn)) {if (!compareContext.isReferralIgnored()) {throw buildReferralException(parentEntry, childDn);}} else if (directoryService.getReferralManager().hasParentReferral(dn)) {if (compareContext.isReferralIgnored()) {throw buildLdapPartialResultException(childDn);} else {throw buildReferralException(parentEntry, childDn);}}}} finally {directoryService.getReferralManager().unlock();}compareContext.setOriginalEntry(getOriginalEntry(compareContext));Interceptor head = directoryService.getInterceptor(compareContext.getNextInterceptor());boolean result = false;lockRead();try {Partition partition = directoryService.getPartitionNexus().getPartition(dn);try (PartitionTxn partitionTxn = partition.beginReadTransaction()) {compareContext.setPartition(partition);compareContext.setTransaction(partitionTxn);result = head.compare(compareContext);} catch (IOException ioe) {throw new LdapOtherException(ioe.getMessage(), ioe);}} finally {unlockRead();}if (IS_DEBUG) {OPERATION_LOG.debug(""<< CompareOperation successful"");}if (IS_TIME) {}return result;}}"	Yes
1630	"public class A {@Overridepublic List<CommonMessage> getMessage(Long timeout, TimeUnit unit) {try {if (this.lastGetBatchMessage != null) {throw new CanalClientException(""mq get/ack not support concurrent & async ack"");}ConsumerBatchMessage<CommonMessage> batchMessage = messageBlockingQueue.poll(timeout, unit);if (batchMessage != null) {this.lastGetBatchMessage = batchMessage;return batchMessage.getData();}} catch (InterruptedException ex) {logger.warn(""Get message timeout"", ex);throw new CanalClientException(""Failed to fetch the data after: "" + timeout);}return null;}}"	No
1631	"public class A {@Overridepublic void finish() {for (Tuple<ActivityFacility, Double> tuple : accessibilitiesMap.keySet()) {LOG.warn(""CHECK X = ""+ tuple.getFirst().getCoord().getX()+ "" -- Y = ""+ tuple.getFirst().getCoord().getY()+ "" -- freespeed value = ""+ accessibilitiesMap.get(tuple).get(""freespeed""));if (tuple.getFirst().getCoord().getX() == 50.) {if (tuple.getFirst().getCoord().getY() == 50.) {Assert.assertEquals(-0.017248522428805767,accessibilitiesMap.get(tuple).get(""freespeed""),MatsimTestUtils.EPSILON);Assert.assertEquals(-0.017240250823867296,accessibilitiesMap.get(tuple).get(TransportMode.car),MatsimTestUtils.EPSILON);} else if (tuple.getFirst().getCoord().getY() == 150.) {Assert.assertEquals(-0.017248522428805767,accessibilitiesMap.get(tuple).get(""freespeed""),MatsimTestUtils.EPSILON);Assert.assertEquals(-0.017240250823867296,accessibilitiesMap.get(tuple).get(TransportMode.car),MatsimTestUtils.EPSILON);}}if (tuple.getFirst().getCoord().getX() == 150.) {if (tuple.getFirst().getCoord().getY() == 50.) {Assert.assertEquals(0.2758252376673665,accessibilitiesMap.get(tuple).get(""freespeed""),MatsimTestUtils.EPSILON);Assert.assertEquals(0.27582980607476704,accessibilitiesMap.get(tuple).get(TransportMode.car),MatsimTestUtils.EPSILON);} else if (tuple.getFirst().getCoord().getY() == 150.) {Assert.assertEquals(0.2758252376673665,accessibilitiesMap.get(tuple).get(""freespeed""),MatsimTestUtils.EPSILON);Assert.assertEquals(0.27582980607476704,accessibilitiesMap.get(tuple).get(TransportMode.car),MatsimTestUtils.EPSILON);}}}}}"	Yes
1632	"public class A {public List<String> getPartnersBasedOnSelectionRule(List<SituationRule> situationRules, List<String> possiblePartners) {List<String> partners = new ArrayList<>();Map<String, String> partnerAlternatives = new HashMap<String, String>();for (SituationRule situationRule : situationRules) {possiblePartners.remove(situationRule.getSituationCompliantPartnerName());possiblePartners.remove(situationRule.getAlternativePartnerName());partnerAlternatives.put(situationRule.getSituationCompliantPartnerName(),situationRule.getAlternativePartnerName());if (isSituationRuleActive(situationRule.getSituationRuleUrl())) {partners.add(situationRule.getSituationCompliantPartnerName());} else {LOG.debug(""Adding alternative partner '{}' for situation with URL: {}"",situationRule.getAlternativePartnerName(),situationRule.getSituationRuleUrl());partners.add(situationRule.getAlternativePartnerName());}}LOG.debug(""Number of situation dependent partners: {}"", partners.size());for (String partner1 : partnerAlternatives.keySet()) {String partner2 = partnerAlternatives.get(partner1);boolean partner1Available = false;boolean partner2Available = false;if (partners.contains(partner1)) partner1Available = true;if (partners.contains(partner2)) partner2Available = true;if (partner1Available && partner2Available) {partners.remove(partner2);} else if (!partner1Available && !partner2Available) {return new ArrayList<String>();}}partners.addAll(possiblePartners);return partners;}}"	Yes
1633	"public class A {@Overridepublic List<ExternalSearchResult> executeQuery(DocumentRepository aRepository, ElasticSearchProviderTraits aTraits, String aQuery)throws IOException {List<ExternalSearchResult> results = new ArrayList<>();try (RestHighLevelClient client = makeClient(aTraits)) {HighlightBuilder highlightBuilder =new HighlightBuilder().field(new HighlightBuilder.Field(aTraits.getDefaultField()).highlighterType(""unified""));SearchSourceBuilder searchSourceBuilder =new SearchSourceBuilder().fetchSource(null, ELASTIC_HIT_DOC_KEY).highlighter(highlightBuilder).size(aTraits.getResultSize());QueryBuilder qb =QueryBuilders.simpleQueryStringQuery(aQuery).field(aTraits.getDefaultField());if (aTraits.isRandomOrder()) {RandomScoreFunctionBuilder randomFunc = ScoreFunctionBuilders.randomFunction();randomFunc.seed(aTraits.getSeed());searchSourceBuilder.query(QueryBuilders.functionScoreQuery(QueryBuilders.constantScoreQuery(qb).boost(1.0f), randomFunc));} else {searchSourceBuilder.query(qb);}SearchRequest searchRequest =new SearchRequest(aTraits.getIndexName()).source(searchSourceBuilder);SearchResponse response = client.search(searchRequest);for (SearchHit hit : response.getHits().getHits()) {if (hit.getSourceAsMap() == null|| hit.getSourceAsMap().get(ELASTIC_HIT_METADATA_KEY) == null) {log.warn(""Result has no document metadata: "" + hit);continue;}ExternalSearchResult result =new ExternalSearchResult(aRepository, aTraits.getIndexName(), hit.getId());if (!aTraits.isRandomOrder()) {result.setScore((double) hit.getScore());}fillResultWithMetadata(result, hit.getSourceAsMap());if (hit.getHighlightFields().size() != 0) {List<ExternalSearchHighlight> highlights = new ArrayList<>();if (hit.getHighlightFields().get(aTraits.getDefaultField()) != null) {for (Text highlight :hit.getHighlightFields().get(aTraits.getDefaultField()).getFragments()) {highlights.add(new ExternalSearchHighlight(highlight.toString()));}}result.setHighlights(highlights);}results.add(result);}}return results;}}"	No
1634	"public class A {@Overridepublic boolean matches(HttpServletRequest request) {String message =request.getRequestURI()+ ""'; '""+ request.getContextPath()+ path+ ""' with parameters=""+ parameters+ "" and headers ""+ expectedHeaders;if (logger.isTraceEnabled()) {}if (!request.getRequestURI().startsWith(request.getContextPath() + path)) {return false;}if (method != null && !method.toString().equals(request.getMethod().toUpperCase())) {return false;}for (Entry<String, List<String>> expectedHeaderEntry : expectedHeaders.entrySet()) {String requestValue = request.getHeader(expectedHeaderEntry.getKey());if (""accept"".equalsIgnoreCase(expectedHeaderEntry.getKey())) {if (!matchesAcceptHeader(requestValue, expectedHeaderEntry.getValue())) {return false;}} else if (!matchesHeader(requestValue, expectedHeaderEntry.getValue())) {return false;}}for (String key : parameters.keySet()) {String value = request.getParameter(key);if (value == null || !value.startsWith(parameters.get(key))) {return false;}}if (logger.isDebugEnabled()) {logger.debug(""["" + name + ""]Matched request "" + message);}return true;}}"	Yes
1635	"public class A {public StgMapZei merge(StgMapZei detachedInstance) {log.debug(""merging StgMapZei instance"");try {StgMapZei result = (StgMapZei) sessionFactory.getCurrentSession().merge(detachedInstance);log.debug(""merge successful"");return result;} catch (RuntimeException re) {log.error(""merge failed"", re);throw re;}}}"	No
1636	"public class A {public static com.liferay.wiki.model.WikiNode addNode(HttpPrincipal httpPrincipal,String externalReferenceCode,String name,String description,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(WikiNodeServiceUtil.class, ""addNode"", _addNodeParameterTypes1);MethodHandler methodHandler =new MethodHandler(methodKey, externalReferenceCode, name, description, serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.wiki.model.WikiNode) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
1637	"public class A {@Testpublic void test_05_savant_opposite() {Log.debug(""Test"");String seqRef = ""AAACTATTT"";String seqAlt = ""AAACTGTATTT"";VariantRealign vr = new VariantRealign();vr.setSequenceRef(seqRef);vr.setSequenceAlt(seqAlt);vr.realignSeqs();Assert.assertEquals("""", vr.getRefRealign());Assert.assertEquals(""GT"", vr.getAltRealign());}}"	Yes
1638	"public class A {@SuppressWarnings(""unused"")@Overridepublic void start() {this.engine = this.getActionEngineMgr().newActionEngine(""UpgradeActionEngine"", this.feature);String restart = System.getProperty(""StartByCronTask"");String upgradeInfo = System.getProperty(UPGRADE_INFO);if (log.isTraceEnable()) {}if (DataConvertHelper.toInt(restart, Integer.MIN_VALUE) == 1) {if (log.isTraceEnable()) {log.info(this, ""This upgrade process was restarted by cron task "");}ThreadHelper.suspend(3000);UpgradeOperationRecordConsumer consumer =new UpgradeOperationRecordConsumer(""UpgradeOperationRecordConsumer"", this.feature, this.engine);consumer.handleOperationRecord(upgradeInfo);return;}this.upgradeContext = new UpgradeContext(new UpgradeConfig(upgradeInfo));this.endAction = new EndAction(this.feature, upgradeContext, engine);checkVersion4Upgrade(endAction);String host = this.getConfigManager().getFeatureConfiguration(this.feature, ""http.server.host"");int port =DataConvertHelper.toInt(this.getConfigManager().getFeatureConfiguration(this.feature, ""http.server.port""),UpgradeConstants.DEFAULT_HTTP_PORT);if (StringHelper.isEmpty(host)) {if (log.isTraceEnable()) {log.warn(this, ""Invalid http server host"");}endAction.stopUpgradeProcess();return;}if (!this.upgradeContext.getFileLock()) {if (log.isTraceEnable()) {}endAction.stopUpgradeProcess();return;}BackupAction backupAction = new BackupAction(this.feature, upgradeContext, engine);PackageDownloadAction downloadAction =new PackageDownloadAction(this.feature, upgradeContext, engine, host, port);registerActionsAccordingUpgradeTarget();workThread = new Thread(this, ""Upgrade Thread"");workThread.start();}}"	Yes
1639	"public class A {@SuppressWarnings(""unchecked"")@Overridepublic void persist(ConfigItem<Map<String, String>> config)throws PersistenceException, InvalidConfigurationException {Preconditions.checkArgument(supports((Class<? extends ConfigItem<?>>) config.getClass()),""Argument type not supported"");Preconditions.checkNotNull(config.getMetaData(), ""Invalid metadata"");String contextFileName = getFileNameForMetaData(config.getMetaData());File contextPersistenceFile = new File(storageFolder, contextFileName);try {FileUtils.touch(contextPersistenceFile);} catch (IOException e) {throw new PersistenceException(String.format(""Could not persist context configuration file %s"", contextFileName), e);}LOGGER.info(""Created context configuration file %s"", contextFileName);}}"	No
1640	"public class A {public static void clusterData(Configuration conf,Path input,Path clustersIn,Path output,DistanceMeasure measure,String convergenceDelta,boolean runSequential)throws IOException, InterruptedException, ClassNotFoundException {if (log.isInfoEnabled()) {log.info(""Input: {} Clusters In: {} Out: {} Distance: {}"",new Object[] {input, clustersIn, output, measure});}if (runSequential) {clusterDataSeq(conf, input, clustersIn, output, measure);} else {clusterDataMR(conf, input, clustersIn, output, measure, convergenceDelta);}}}"	Yes
1641	"public class A {private void closeJMSResources() {try {if (producer != null) {producer.close();producer = null;}if (session != null) {session.close();session = null;}if (connection != null) {connection.close();connection = null;}} catch (JMSException e) {LOG.debug(""Exception caught while closing JMS resources"", e);producer = null;session = null;connection = null;}}}"	No
1642	"public class A {@Test(dataProvider = ""testName"",groups = {""update""},dependsOnMethods = {""readContact"",""testContactSubmitRequest"",""org.collectionspace.services.client.test.AbstractAuthorityServiceTest.updateItem""})public void updateContact(String testName) throws Exception {String contactsCommonLabel = new ContactClient().getCommonPartName();PersonClient client = new PersonClient();PoxPayloadIn input = null;setupRead();Response res = client.readContact(knownResourceId, knownItemResourceId, knownContactResourceId);try {assertStatusCode(res, testName);if (logger.isDebugEnabled()) {}input = new PoxPayloadIn(res.readEntity(String.class));} finally {if (res != null) {res.close();}}ContactsCommon contact =(ContactsCommon) extractPart(input, contactsCommonLabel, ContactsCommon.class);Assert.assertNotNull(contact);AddressGroupList addressGroupList = contact.getAddressGroupList();Assert.assertNotNull(addressGroupList);List<AddressGroup> addressGroups = addressGroupList.getAddressGroup();Assert.assertNotNull(addressGroups);Assert.assertTrue(addressGroups.size() > 0);String addressPlace1 = addressGroups.get(0).getAddressPlace1();Assert.assertNotNull(addressPlace1);addressGroups.get(0).setAddressPlace1(""updated-"" + addressPlace1);contact.setAddressGroupList(addressGroupList);if (logger.isDebugEnabled()) {}PoxPayloadOut output = new PoxPayloadOut(ContactClient.SERVICE_PAYLOAD_NAME);output.addPart(contactsCommonLabel, contact);setupUpdate();res =client.updateContact(knownResourceId, knownItemResourceId, knownContactResourceId, output);try {assertStatusCode(res, testName);input = new PoxPayloadIn(res.readEntity(String.class));;} finally {if (res != null) {res.close();}}ContactsCommon updatedContact =(ContactsCommon) extractPart(input, contactsCommonLabel, ContactsCommon.class);Assert.assertNotNull(updatedContact);Assert.assertEquals(updatedContact.getAddressGroupList().getAddressGroup().get(0).getAddressPlace1(),contact.getAddressGroupList().getAddressGroup().get(0).getAddressPlace1(),""Data in updated object did not match submitted data."");}}"	Yes
1643	"public class A {public boolean checkIfSerrverHasEntryFromLDIFFile(LDAPConnection connection, String ldifFileName) {LDIFReader ldifReader = createLdifReader(ldifFileName);if (ldifReader == null) {return true;}while (true) {Entry entry = null;try {entry = ldifReader.readEntry();} catch (LDIFException le) {LOG.error(""Malformed ldif record"", le);if (!le.mayContinueReading()) {return true;}} catch (IOException ioe) {LOG.error(""I/O error encountered while reading a change record"", ioe);return true;}if (entry == null) {break;}try {SearchResult sr = connection.search(entry.getDN(), SearchScope.BASE, ""objectClass=*"");if ((sr != null) && (sr.getEntryCount() > 0)) {return true;}} catch (LDAPException le) {if (le.getResultCode() != ResultCode.NO_SUCH_OBJECT) {return true;}}}disposeLdifReader(ldifReader);return false;}}"	Yes
1644	"public class A {public boolean add(UserData data, byte[] signature) {if (data.getExpires() == null) {logger.warn(""An expiration timestamp MUST be provided for "" + ""single-use data."");return false;}removeExpired();if (data.isExpired()) return false;String signatureHex = BaseEncoding.base16().encode(signature);return denylist.putIfAbsent(signatureHex, data) == null;}}"	No
1645	"public class A {@Overridepublic void doFilter(ServletRequest req, ServletResponse res, FilterChain chain)throws IOException, ServletException {HttpServletRequest request = (HttpServletRequest) req;HttpServletResponse response = (HttpServletResponse) res;log.info(""ENTERING "" + request.getRequestURL());log.info(""Response Object:"");log.info(""   isCommitted = "" + response.isCommitted());log.info(""   bufferSize  = "" + response.getBufferSize());log.info("""");chain.doFilter(request, response);log.info(""EXITING "" + request.getRequestURL());log.info(""Response Object:"");log.info(""   isCommitted = "" + response.isCommitted());log.info(""   bufferSize  = "" + response.getBufferSize());log.info("""");}}"	No
1646	"public class A {private void updateChannel(String channelId) {Channel channel = getThing().getChannel(channelId);if (channel == null || !isLinked(channelId)) {logger.trace(""Channel '{}' was null or not linked! Not updated."", channelId);return;}String[] channelParts = channelId.split(""#"");String forecastDay = channelParts[0];String datapointName = channelParts[1];if (channelParts.length != 2) {logger.debug(""Skipped invalid channelId '{}'"", channelId);return;}logger.debug(""Updating channel '{}'"", channelId);Forecast forecast = getForecast(forecastDay);if (forecast == null) {logger.debug(""No forecast found for '{}'. Not updating."", forecastDay);return;}Object datapoint = forecast.getDatapoint(datapointName);logger.debug(""Value for datapoint '{}' is '{}'"", datapointName, datapoint);if (datapoint == null) {logger.debug(""Couldn't get datapoint '{}' for '{}'. Not updating."", datapointName, forecastDay);return;}State state = null;if (datapoint instanceof Calendar) {state =new DateTimeType(ZonedDateTime.ofInstant(((Calendar) datapoint).toInstant(), ZoneId.systemDefault()));} else if (datapoint instanceof Integer) {state = getStateForType(channel.getAcceptedItemType(), (Integer) datapoint);} else if (datapoint instanceof Number) {BigDecimal decimalValue =new BigDecimal(datapoint.toString()).setScale(2, RoundingMode.HALF_UP);state = getStateForType(channel.getAcceptedItemType(), decimalValue);} else if (datapoint instanceof String) {state = new StringType(datapoint.toString());} else if (datapoint instanceof BufferedImage) {ImageItem item = new ImageItem(""rain area"");state = new RawType(renderImage((BufferedImage) datapoint), ""image/png"");item.setState(state);} else {logger.debug(""Unsupported value type {}"", datapoint.getClass().getSimpleName());}if (state != null) {updateState(channelId, state);}}}"	Yes
1647	"public class A {private Collection<MailAddress> getCorrespondingAddress(InternetAddress internetAddress, Mail mail) throws AddressException {MailAddress mailAddress = new MailAddress(internetAddress);if (!SpecialAddress.isSpecialAddress(mailAddress)) {return ImmutableSet.of(new MailAddress(internetAddress));}SpecialAddressKind specialAddressKind = SpecialAddressKind.forValue(mailAddress.getLocalPart());if (specialAddressKind == null) {return ImmutableSet.of(new MailAddress(internetAddress));}switch (specialAddressKind) {case SENDER:case REVERSE_PATH:return getSender(mail);case FROM:try {InternetAddress[] fromArray = (InternetAddress[]) mail.getMessage().getFrom();return allOrSender(mail, fromArray);} catch (MessagingException me) {LOGGER.warn(""Unable to parse the \""FROM\"" header in the original message; ignoring."");return ImmutableSet.of();}case REPLY_TO:try {InternetAddress[] replyToArray = (InternetAddress[]) mail.getMessage().getReplyTo();return allOrSender(mail, replyToArray);} catch (MessagingException me) {return ImmutableSet.of();}case TO:case RECIPIENTS:return toHeaders(mail);case NULL:case UNALTERED:return ImmutableList.of();case DELETE:return ImmutableSet.of(new MailAddress(internetAddress));}return ImmutableList.of();}}"	Yes
1648	"public class A {@Overridepublic void close() {if (closed.get()) {logger.debug(""Already close it, skip."");return;}logger.warn(""Closing Streaming Cube store, cubeName={}"", cubeName);checkpoint();logger.warn(""{} ingested {} , dropped {}, long latency {}"",cubeName,ingestCount.get(),dropCounts.get(),longLatencyInfo.getTotalLongLatencyEventCnt());for (StreamingCubeSegment cubesegment : getAllSegments()) {try {cubesegment.close();} catch (IOException e) {logger.error(""fail to close cube segment, segment :"" + cubesegment.getSegmentName(), e);}}if (streamingDictionaryClient != null) {streamingDictionaryClient.close();}closed.set(true);}}"	No
1649	public class A {protected void doInit() {if (!PropsValues.USER_NOTIFICATION_EVENT_CONFIRMATION_ENABLED) {return;}List<UserNotificationEvent> userNotificationEvents =UserNotificationEventLocalServiceUtil.getDeliveredUserNotificationEvents(getUserId(), false);Map<String, NotificationEvent> unconfirmedNotificationEvents =_getUnconfirmedNotificationEvents();List<String> invalidNotificationEventUuids =new ArrayList<>(unconfirmedNotificationEvents.size());long currentTime = System.currentTimeMillis();for (UserNotificationEvent persistedNotificationEvent : userNotificationEvents) {try {JSONObject payloadJSONObject =JSONFactoryUtil.createJSONObject(persistedNotificationEvent.getPayload());NotificationEvent notificationEvent =NotificationEventFactoryUtil.createNotificationEvent(persistedNotificationEvent.getTimestamp(),persistedNotificationEvent.getType(),payloadJSONObject);notificationEvent.setDeliveryRequired(persistedNotificationEvent.getDeliverBy());notificationEvent.setUuid(persistedNotificationEvent.getUuid());if (isRemoveNotificationEvent(notificationEvent, currentTime)) {invalidNotificationEventUuids.add(notificationEvent.getUuid());} else {unconfirmedNotificationEvents.put(notificationEvent.getUuid(), notificationEvent);}} catch (JSONException jsonException) {invalidNotificationEventUuids.add(persistedNotificationEvent.getUuid());}}if (!invalidNotificationEventUuids.isEmpty()) {UserNotificationEventLocalServiceUtil.deleteUserNotificationEvents(invalidNotificationEventUuids, getCompanyId());}}}	Yes
1650	public class A {void forceLedger(final long ledgerId, ForceLedgerCallback cb, Object ctx) {if (useV2WireProtocol) {executor.executeOrdered(ledgerId,() -> {cb.forceLedgerComplete(BKException.Code.IllegalOpException, ledgerId, bookieId, ctx);});return;}final long txnId = getTxnId();final CompletionKey completionKey = new V3CompletionKey(txnId, OperationType.FORCE_LEDGER);completionObjects.put(completionKey, new ForceLedgerCompletion(completionKey, cb, ctx, ledgerId));BKPacketHeader.Builder headerBuilder =BKPacketHeader.newBuilder().setVersion(ProtocolVersion.VERSION_THREE).setOperation(OperationType.FORCE_LEDGER).setTxnId(txnId);ForceLedgerRequest.Builder writeLacBuilder =ForceLedgerRequest.newBuilder().setLedgerId(ledgerId);final Request forceLedgerRequest =withRequestContext(Request.newBuilder()).setHeader(headerBuilder).setForceLedgerRequest(writeLacBuilder).build();writeAndFlush(channel, completionKey, forceLedgerRequest);}}	Yes
1651	"public class A {private void startGrizzly(int port, String servletPath) throws Exception {LOGGER.info(""Starting grizzly..."");System.out.println(""SERVLET PATH: "" + servletPath);WebappContext context = new WebappContext(""TestContext"");context.addListener(""org.springframework.web.context.ContextLoaderListener"");context.addContextInitParameter(""contextConfigLocation"", ""classpath:"" + _springConfig);ServletRegistration registration = context.addServlet(""SpringServlet"", SpringServlet.class);if (!springManaged) {registration.setInitParameter(""com.sun.jersey.config.property.resourceConfigClass"",PackagesResourceConfig.class.getName());registration.setInitParameter(PackagesResourceConfig.PROPERTY_PACKAGES, ""com.sun.jersey.spring.jerseymanaged"");}registration.addMapping(servletPath + ""/*"");httpServer =GrizzlyServerFactory.createHttpServer(new URI(""http://localhost:"" + port + ""/"" + servletPath), (HttpHandler) null);context.deploy(httpServer);httpServer.start();}}"	No
1652	"public class A {@Overridepublic void bundleChanged(BundleEvent bundleEvent) {Bundle bundle = bundleEvent.getBundle();if (bundle.getSymbolicName() == null) {}if (_portalStarted.get()) {if (_log.isInfoEnabled()) {if (bundleEvent.getType() == BundleEvent.STARTED) {_log.info(""STARTED {}"", bundle);} else if (bundleEvent.getType() == BundleEvent.STOPPED) {}}} else if (_log.isDebugEnabled()) {if (bundleEvent.getType() == BundleEvent.STARTED) {} else if (bundleEvent.getType() == BundleEvent.STOPPED) {}}}}"	Yes
1653	public class A {@Overridepublic boolean update(TestCaseStepActionControl control) {try {testCaseStepActionControlDao.updateTestCaseStepActionControl(control);} catch (CerberusException ex) {LOG.warn(ex.toString());return false;}return true;}}	No
1654	"public class A {protected Pair<List<Long>, Map<Long, Double>> listClustersByUserDispersion(long id, boolean isZone, long accountId) {if (s_logger.isDebugEnabled()) {s_logger.debug(""Applying Userdispersion heuristic to clusters for account: "" + accountId);}Pair<List<Long>, Map<Long, Double>> clusterIdsVmCountInfo;if (isZone) {clusterIdsVmCountInfo = vmInstanceDao.listClusterIdsInZoneByVmCount(id, accountId);} else {clusterIdsVmCountInfo = vmInstanceDao.listClusterIdsInPodByVmCount(id, accountId);}if (s_logger.isTraceEnabled()) {s_logger.trace(""List of clusters in ascending order of number of VMs: "" + clusterIdsVmCountInfo.first());}return clusterIdsVmCountInfo;}}"	No
1655	"public class A {private void handleEvent(JsonArray array) {if (array.size() > 0) {Event event = new JSONEventImpl(array);for (EventItem item : event.getEventItems()) {for (EventHandler handler : eventHandlers) {if (handler.supportsEvent(item.getName())) {logger.debug(""inform handler with id {} about event {}"", handler.getUID(), item.toString());handler.handleEvent(item);}}}}}}"	Yes
1656	"public class A {public void deleteMetadata() {try {Files.deleteIfExists(metadataPath);} catch (IOException e) {LOG.warn(""File metadata.xml does not exists."");if (LOG.isDebugEnabled()) LOG.debug(e.getMessage(), e);}}}"	No
1657	public class A {@Overridepublic void connectionClose(BackendConnection conn, String reason) {finished.incrementAndGet();}}	Yes
1658	"public class A {@Overridepublic void actionPerformed(ActionEvent e) {File file = getFileName(getConfigFileChooser());if (file == null) {return;}ConfigureManager cm = InstanceManager.getNullableDefault(jmri.ConfigureManager.class);if (cm == null) {} else {boolean results = cm.storeConfig(file);if (!results) {JOptionPane.showMessageDialog(null,rb.getString(""StoreHasErrors"")+ ""\n""+ rb.getString(""StoreIncomplete"")+ ""\n""+ rb.getString(""ConsoleWindowHasInfo""),rb.getString(""StoreError""),JOptionPane.ERROR_MESSAGE);}}}}"	Yes
1659	"public class A {@Overridepublic void doExceptionCaughtListeners(final Throwable cause) {runManagementTask(new Runnable() {@Overridepublic void run() {try {List<SessionManagementListener> sessionListeners = getManagementListeners();for (final SessionManagementListener listener : sessionListeners) {listener.doExceptionCaught(SessionManagementBeanImpl.this, cause);}markChanged();} catch (Exception ex) {logger.warn(""Error during doExceptionCaught session listener notifications:"", ex);}}});}}"	No
1660	"public class A {private void _send(WebSocket webSocket, Buffer serialized, Handler<AsyncResult<Void>> handler) {webSocket.write(serialized,writeResult -> {if (writeResult.succeeded()) {log.debug(""success"");} else {Throwable cause = writeResult.cause();log.debug(""failure"", cause);}handler.handle(writeResult);});}}"	Yes
1661	"public class A {private void wakeWaiterJob() {if (this.waiterJobId.isSome()) {try {final Job waiter = serviceRegistry.getJob(waiterJobId.get());waiter.setStatus(Job.Status.RUNNING);logger.debug(""Job {} wakened and set back to RUNNING state."", waiter.getId());this.serviceRegistry.updateJob(waiter);} catch (ServiceRegistryException e) {logger.warn(""Unable to put {} into a waiting state, this may cause a deadlock: {}"",waiterJobId,e.getMessage());} catch (NotFoundException e) {logger.warn(""Unable to put {} into a waiting state, job not found by the service registry.  This""+ "" may cause a deadlock: {}"",waiterJobId,e.getMessage());}} else {logger.debug(""No waiting job set, unable to put waiting job into waiting state"");}}}"	No
1662	"public class A {private void preCheckWriter() {classLoaderSwapper.setCurrentThreadClassLoader(LoadUtil.getJarLoader(PluginType.WRITER, this.writerPluginName, this.jobId));LOG.info(""DataX Writer.Job [{}] do preCheck work ."", this.writerPluginName);this.jobWriter.preCheck();classLoaderSwapper.restoreCurrentThreadClassLoader();}}"	No
1663	"public class A {private String determineI18nErrorMessage(HttpServletRequest request, CmdbException ex) {logger.info(""I18N:try to find message {}"", ex.getErrorCode());Locale locale = request.getLocale();if (locale == null) {locale = DEF_LOCALE;}if (StringUtils.isNoneBlank(ex.getErrorCode())) {String msgCode = MSG_ERR_CODE_PREFIX + ex.getErrorCode();try {String errMsg = messageSource.getMessage(msgCode, ex.getArgs(), locale);logger.info(""I18N:found errmsg {} : {}"", msgCode, errMsg);return errMsg;} catch (NoSuchMessageException e1) {if (logger.isDebugEnabled()) {String errorMessage = String.format(""cannot find such message for %s"", ex.getErrorCode());logger.debug(errorMessage, e1);}return ex.getMessage();}} else {return ex.getMessage();}}}"	No
1664	public class A {public static Maybe<String> getSubnetHostname(Location where) {String hostname = null;if (where instanceof HasSubnetHostname) {hostname = ((HasSubnetHostname) where).getSubnetHostname();}if (hostname == null && where instanceof MachineLocation) {InetAddress addr = ((MachineLocation) where).getAddress();if (addr != null) hostname = addr.getHostAddress();}return Maybe.fromNullable(hostname);}}	Yes
1665	"public class A {@Overridepublic int getCount() {if (query.getFilter().equals(Filter.INCLUDE)) {final CountValue count =reader.getTransaction().getDataStatistics().getAdapterStatistic(CountStatistic.STATS_TYPE);if (count != null) {return count.getValue().intValue();}} else if (query.getFilter().equals(Filter.EXCLUDE)) {return 0;}QueryConstraints constraints;try {constraints = getQueryConstraints();return (int)reader.getCountInternal(constraints.jtsBounds, constraints.timeBounds, getFilter(query), constraints.limit);} catch (TransformException | FactoryException e) {LOGGER.warn(""Unable to transform geometry, can't get count"", e);}return 0;}}"	No
1666	"public class A {@Overridepublic void initialized(ServerSession session, int version) throws IOException {if (log.isTraceEnabled()) {log.trace(""initialized("" + session + "") version: "" + version);}}}"	No
1667	public class A {private void updateEthernetNetwork() {Network network = client.getByName(ETHERNET_NETWORK_NAME).get(0);network.setName(ETHERNET_NETWORK_NAME_UPDATED);TaskResource task = this.client.update(network.getResourceId(), network);}}	Yes
1668	public class A {public DIP createDIP(DIP dip, boolean notify)throws GenericException, AuthorizationDeniedException {RodaCoreFactory.checkIfWriteIsAllowedAndIfFalseThrowException(nodeType);try {Directory directory;if (StringUtils.isNotBlank(dip.getId())) {try {directory =storage.createDirectory(DefaultStoragePath.parse(RodaConstants.STORAGE_CONTAINER_DIP, dip.getId()));} catch (AlreadyExistsException | GenericException | AuthorizationDeniedException e) {directory =storage.createRandomDirectory(DefaultStoragePath.parse(RodaConstants.STORAGE_CONTAINER_DIP));dip.setId(directory.getStoragePath().getName());}} else {directory =storage.createRandomDirectory(DefaultStoragePath.parse(RodaConstants.STORAGE_CONTAINER_DIP));dip.setId(directory.getStoragePath().getName());}dip.setDateCreated(new Date());dip.setLastModified(new Date());createDIPMetadata(dip, directory.getStoragePath());if (notify) {notifyDIPCreated(dip, false).failOnError();}return dip;} catch (NotFoundException | RequestNotValidException | AlreadyExistsException e) {throw new GenericException(e);}}}	Yes
1669	"public class A {@GetMapping(value = {""organisation"", ""organisation{extension:\\.[a-z]+}""},produces = {MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE})public ResponseEntity<LegacyOrganizationBriefResponseListWrapper> getOrganizations(@PathVariable(required = false, value = ""extension"") String extension,HttpServletResponse response) {String responseType =CommonWsUtils.getResponseTypeByExtension(extension, MediaType.APPLICATION_XML_VALUE);if (responseType != null) {response.setContentType(responseType);} else {return ResponseEntity.status(HttpStatus.NOT_FOUND).cacheControl(CacheControl.noCache()).build();}List<LegacyOrganizationBriefResponse> organizations =organizationMapper.listLegacyOrganizationsBrief();return ResponseEntity.status(HttpStatus.OK).cacheControl(CacheControl.noCache()).contentType(MediaType.parseMediaType(responseType)).body(new LegacyOrganizationBriefResponseListWrapper(organizations));}}"	Yes
1670	"public class A {public String getLabelForProperty(String property, Object propertyValue) {if (propertyValue != null) {try {Widget w = widgets.get(property);if (w != null) {if (w instanceof SingleOptionWidget) {String valueToLookup = getValueForProperty(propertyValue);for (Option o : ((SingleOptionWidget) w).getOptions()) {if (OpenmrsUtil.nullSafeEquals(valueToLookup, o.getValue())) {return o.getLabel();}}}}if (propertyValue instanceof Date) {DateWidget dw = (DateWidget) widgets.getOrDefault(""dateActivated"", new DateWidget());return dw.getDateFormatForDisplay().format((Date) propertyValue);}if (propertyValue instanceof Concept) {return ((Concept) propertyValue).getDisplayString();} else if (propertyValue instanceof OpenmrsMetadata) {return HtmlFormEntryUtil.format((OpenmrsMetadata) propertyValue);}} catch (Exception e) {}return propertyValue.toString();}return """";}}"	Yes
1671	"public class A {private void adjustDistinguishedNames(CertificateRequestMessage message) {if (message.getDistinguishedNames() != null&& message.getDistinguishedNames().getValue() != null) {byte[] distinguishedNames = message.getDistinguishedNames().getValue();tlsContext.setDistinguishedNames(distinguishedNames);} else {LOGGER.debug(""Not adjusting DistinguishedNames"");}}}"	Yes
1672	"public class A {public void addType(CloudInstanceTypeDescription type) {LOGGER.debug(""Add new type description "" + type.getName());this.types.put(type.getName(), type);}}"	No
1673	"public class A {private void load(final String fileName) {try {final SAXParserFactory spf = SAXParserFactory.newInstance();spf.setNamespaceAware(false);spf.setValidating(false);final SAXParser saxParser = spf.newSAXParser();final XMLReader xmlReader = saxParser.getXMLReader();xmlReader.setContentHandler(this);xmlReader.setErrorHandler(new MyErrorHandler(System.err));xmlReader.parse(fileName);} catch (final ParserConfigurationException e) {LOGGER.error(""Exp="" + e.getMessage());} catch (final SAXException e) {LOGGER.error(""Exp="" + e.getMessage());} catch (final IOException e) {LOGGER.error(""Exp="" + e.getMessage());} finally {if (LOGGER.isInfoEnabled()) LOGGER.info(""Finally in load"");}}}"	No
1674	public class A {private void updateActiveDcIdToDestDcId() {getHolder().updateActiveDcIdToDestDcId();}}	Yes
1675	"public class A {@Overridepublic synchronized void write(IChemObject arg0) throws CDKException {customizeJob();if (arg0 instanceof IAtomContainer)try {IAtomContainer container = (IAtomContainer) arg0;writer.write(mopacCommands.getSetting());int formalCharge = AtomContainerManipulator.getTotalFormalCharge(container);if (formalCharge != 0) writer.write("" CHARGE="" + formalCharge);writer.write('\n');if (container.getProperty(""Names"") != null)writer.write(container.getProperty(""Names"").toString());writer.write('\n');writer.write(getTitle());writer.write('\n');for (int i = 0; i < container.getAtomCount(); i++) {IAtom atom = container.getAtom(i);if (atom.getPoint3d() != null) {Point3d point = atom.getPoint3d();writeAtom(atom, point.x, point.y, point.z, optimize.isSet() ? 1 : 0);} else if (atom.getPoint2d() != null) {Point2d point = atom.getPoint2d();writeAtom(atom, point.x, point.y, 0, optimize.isSet() ? 1 : 0);} else writeAtom(atom, 0, 0, 0, 1);}writer.write(""0"");writer.write('\n');} catch (IOException ioException) {logger.error(ioException);throw new CDKException(ioException.getMessage(), ioException);}else throw new CDKException(""Unsupported object!\t"" + arg0.getClass().getName());}}"	No
1676	"public class A {public void upperCaseSetEntries(Set<String> input, String warnMessage) {Set<String> removeList = new TreeSet<>();Set<String> addList = new TreeSet<>();for (String s : input) {if (!s.toUpperCase().equals(s)) {removeList.add(s);addList.add(s.toUpperCase());log.warn("" has a value "" + s + ""that was converted to uppercase."");}}input.removeAll(removeList);input.addAll(addList);}}"	No
1677	"public class A {private int getRoundsForFullMethodName(String fullname) {Integer r = efforts.get(fullname);if (null == r) {r = DEFAULT_ROUNDS;} else {log.debug(""Loaded iteration count {} on method {}"", r, fullname);}return r;}}"	Yes
1678	"public class A {private String getOriginalTaskId(final String taskId) {String result = """";try (Connection connection = dataSource.getConnection();PreparedStatement preparedStatement =connection.prepareStatement(sqlMapper.getSelectOriginalTaskIdForJobStatusTraceLog())) {preparedStatement.setString(1, taskId);try (ResultSet resultSet = preparedStatement.executeQuery()) {if (resultSet.next()) {return resultSet.getString(""original_task_id"");}}} catch (final SQLException ex) {log.error(ex.getMessage());}return result;}}"	No
1679	public class A {public void setUpdateQuietTime(long duration, TimeUnit unit) {long desiredMillis = unit.toMillis(duration);if (IS_WINDOWS && (desiredMillis < 1000)) {this.updateQuietTimeDuration = 1000;this.updateQuietTimeUnit = TimeUnit.MILLISECONDS;return;}this.updateQuietTimeDuration = duration;this.updateQuietTimeUnit = unit;}}	Yes
1680	public class A {public void send(final RequestMessage requestMessage, final String messageType) {this.jmsTemplate.send(new MessageCreator() {@Overridepublic Message createMessage(final Session session) throws JMSException {final ObjectMessage objectMessage = session.createObjectMessage(requestMessage);objectMessage.setJMSType(messageType);objectMessage.setStringProperty(Constants.ORGANISATION_IDENTIFICATION,requestMessage.getOrganisationIdentification());objectMessage.setStringProperty(Constants.DEVICE_IDENTIFICATION, requestMessage.getDeviceIdentification());return objectMessage;}});}}	Yes
1681	public class A {@Overridepublic CollectorStepResult collect() throws ProcessingException {sleepInMillis(milliseconds);return CollectorStepResult.newModifierResult();}}	Yes
1682	"public class A {@Overridepublic List<Exchange> directConsume() throws TwitterException {String keywords = this.keywords;if (keywords == null || keywords.trim().length() == 0) {return Collections.emptyList();}Query query = new Query(keywords);LOG.debug(""Searching twitter with keywords: {}"", keywords);return search(query);}}"	No
1683	public class A {@Overridepublic void run() throws Throwable {Throwable rce;processByErrorHandler(exchange);if (exchange.getException() != null || exchange.isRollbackOnly()) {if (exchange.getException() != null) {rce = exchange.getException();} else {rce = new TransactionRolledbackException();}if (LOG.isTraceEnabled()) {}throw rce;}}}	Yes
1684	"public class A {@Overridepublic String submitExportJob(TDExportJobRequest jobRequest) throws TDClientException {Map<String, String> queryParam = new HashMap<>();queryParam.put(""from"", Long.toString(jobRequest.getFrom().getTime() / 1000));queryParam.put(""to"", Long.toString(jobRequest.getTo().getTime() / 1000));queryParam.put(""file_prefix"", jobRequest.getFilePrefix());queryParam.put(""file_format"", jobRequest.getFileFormat().toString());queryParam.put(""storage_type"", ""s3"");queryParam.put(""bucket"", jobRequest.getBucketName());queryParam.put(""access_key_id"", jobRequest.getAccessKeyId());queryParam.put(""secret_access_key"", jobRequest.getSecretAccessKey());if (jobRequest.getPoolName().isPresent()) {queryParam.put(""pool_name"", jobRequest.getPoolName().get());}Optional<String> domainKey = jobRequest.getDomainKey();if (domainKey.isPresent()) {queryParam.put(""domain_key"", domainKey.get());}if (logger.isDebugEnabled()) {logger.debug(""submit job: "" + jobRequest);}TDJobSubmitResult result =doPost(buildUrl(""/v3/export/run"", jobRequest.getDatabase(), jobRequest.getTable()),queryParam,TDJobSubmitResult.class);return result.getJobId();}}"	No
1685	"public class A {@Overridepublic void onPartitionsAssigned(Collection<TopicPartition> partitions) {LOG.info(""Partitions reassignment. [task-ID={}, consumer-group={}, consumer={},""+ "" topic-partitions={}]"",context.getThisTaskId(),kafkaSpoutConfig.getConsumerGroupId(),consumer,partitions);initialize(partitions);tupleListener.onPartitionsReassigned(partitions);}}"	No
1686	"public class A {protected void setJobClasspath(Job job) {String jarPath = KylinConfig.getInstanceFromEnv().getKylinJobJarPath();File jarFile = new File(jarPath);if (jarFile.exists()) {job.setJar(jarPath);logger.info(""append job jar: "" + jarPath);} else {job.setJarByClass(this.getClass());}String kylinHiveDependency = System.getProperty(""kylin.hive.dependency"");logger.info(""append kylin.hive.dependency: "" + kylinHiveDependency + "" to "" + MAP_REDUCE_CLASSPATH);if (kylinHiveDependency != null) {kylinHiveDependency = kylinHiveDependency.replace("":"", "","");Configuration jobConf = job.getConfiguration();String classpath = jobConf.get(MAP_REDUCE_CLASSPATH);if (classpath == null || classpath.length() == 0) {logger.info(""Didn't find ""+ MAP_REDUCE_CLASSPATH+ "" in job configuration, will run 'mapred classpath' to get the default value."");classpath = getDefaultMapRedClasspath();}jobConf.set(MAP_REDUCE_CLASSPATH, classpath + "","" + kylinHiveDependency);}logger.info(""Hadoop job classpath is: "" + job.getConfiguration().get(MAP_REDUCE_CLASSPATH));}}"	Yes
1687	"public class A {private Set<String> loadPolicySet(String contextId) {Set<String> policySet = null;try {policySet = olDao.getPolicies(contextId);} catch (SecurityException se) {String warning = ""loadPolicySet static initializer caught SecurityException="" + se;LOG.info(warning);}policyCache.put(getKey(contextId), policySet);return policySet;}}"	No
1688	public class A {private List<String> filterTab(String dbName, List<String> tabList) {try {return HiveAuthzBindingHook.filterShowTables(getHiveAuthzBinding(), tabList, HiveOperation.SHOWTABLES, getUserName(), dbName);} catch (Exception e) {return new ArrayList<String>();} finally {close();}}}	Yes
1689	public class A {private static boolean isRecordTypeCompatible(RecordSchema schema, Object value, boolean strict) {if (value == null) {return false;}if (!(value instanceof Record) && !(value instanceof Map)) {return false;}if (schema == null) {return true;}if (strict) {if (value instanceof Record) {if (!schema.getFieldNames().containsAll(((Record) value).getRawFieldNames())) {return false;}}}for (final RecordField childField : schema.getFields()) {final Object childValue;if (value instanceof Record) {childValue = ((Record) value).getValue(childField);} else {childValue = ((Map) value).get(childField.getFieldName());}if (childValue == null && !childField.isNullable()) {return false;}if (childValue == null) {continue;}if (!isCompatibleDataType(childValue, childField.getDataType(), strict)) {return false;}}return true;}}	Yes
1690	public class A {private void nearReaderUpdate() throws Exception {Integer key = nearKeys(jcache(0), 1, 500_000).get(0);IgniteCache<Integer, Integer> cache0 = jcache(0);assertNotNull(jcache(0).getConfiguration(CacheConfiguration.class).getNearConfiguration());cache0.put(key, 1);checkTtl(key, 60_000L);IgniteCache<Integer, Integer> cache1 = jcache(1);if (atomicityMode() == ATOMIC) Thread.sleep(100);cache1.put(key, 2);checkTtl(key, 61_000L);if (atomicityMode() == ATOMIC) Thread.sleep(100);cache1.withExpiryPolicy(new TestPolicy(null, TTL_FOR_EXPIRE, null)).put(key, 3);checkTtl(key, TTL_FOR_EXPIRE);waitExpired(key);cache0.put(key, 1);checkTtl(key, 60_000L);if (atomicityMode() == ATOMIC) Thread.sleep(100);cache0.withExpiryPolicy(new TestPolicy(null, TTL_FOR_EXPIRE + 1, null)).put(key, 2);checkTtl(key, TTL_FOR_EXPIRE + 1);waitExpired(key);}}	Yes
1691	"public class A {private void createActionProcessor(AtlasFieldAction atlasFieldAction, List<ActionProcessor> answer) {if (LOG.isDebugEnabled()) {LOG.debug(""Loading FieldAction class: "" + atlasFieldAction.getClass().getCanonicalName());}Class<?> clazz = atlasFieldAction.getClass();Method[] methods = clazz.getMethods();for (Method method : methods) {ActionProcessor det = createDetailFromFieldActionInfo(clazz, method);if (det != null) {answer.add(det);}det = createDetailFromProcessor(clazz, method);if (det != null) {answer.add(det);}}}}"	No
1692	"public class A {@Overridepublic void onDeviceAdded(GeneralDeviceInformation device) {if (device instanceof Circuit) {this.circuit = (Circuit) device;if (this.circuit.isPresent()) {ThingStatusInfo statusInfo = this.dssBridgeHandler.getThing().getStatusInfo();updateStatus(statusInfo.getStatus(), statusInfo.getStatusDetail(), statusInfo.getDescription());logger.debug(""Set status to {}"", getThing().getStatus());checkCircuitInfoProperties(this.circuit);onCircuitStateInitial(this.circuit);return;}}onDeviceRemoved(device);}}"	No
1693	"public class A {@Overridepublic void bridgeStatusChanged(ThingStatusInfo bridgeStatusInfo) {logger.debug(""Bridge status changed to {} for thing {}"", bridgeStatusInfo, getThing().getUID());Bridge bridge = getBridge();initializeThingState((bridge == null) ? null : bridge.getHandler(), bridgeStatusInfo.getStatus());}}"	No
1694	"public class A {@Overridepublic boolean hasNext() {if (nextVal == null) {K key = reader.createKey();V val = reader.createValue();try {boolean notDone = reader.next(key, val);if (!notDone) {return false;}this.nextVal = val;} catch (IOException e) {LOG.error(""Got error reading next record from record reader"");throw new HoodieException(e);}}return true;}}"	No
1695	public class A {public static void setDefaultCharset(String defaultCharacterSetName) {if (defaultCharacterSetName != null && !defaultCharacterSetName.isEmpty()) {try {if (Charset.isSupported(defaultCharacterSetName)) {MllpComponent.defaultCharset = Charset.forName(defaultCharacterSetName);} else {}} catch (Exception charsetEx) {MllpComponent.defaultCharset = StandardCharsets.ISO_8859_1;}}}}	Yes
1696	public class A {@Overridepublic void failedScreenshot(String file, Exception e) {}}	Yes
1697	"public class A {public void start() {protocolMetrics.register();LOG.info(StorageContainerManager.buildRpcServerStartMessage(""RPC server for Client "", getClientRpcAddress()));getClientRpcServer().start();}}"	No
1698	"public class A {protected void removeAssociationsAndPresences() {Set<String> userIds = new HashSet<>();synchronized (_uid2Location) {getAssociatedUserIds(userIds);_uid2Location.clear();}if (_logger.isDebugEnabled()) {_logger.debug(""Broadcasting association removal for users {}"", userIds);}SetiPresence presence = new SetiPresence(Collections.emptySet());presence.put(SetiPresence.ALIVE_FIELD, false);_session.getChannel(SETI_ALL_CHANNEL).publish(presence);}}"	No
1699	"public class A {public synchronized void start() {if (!isRunning) {this.validateFuture = exec.scheduleAtFixedRate(this, 2, 2, TimeUnit.MILLISECONDS);kernel.getBlockchain().addListener(this);logger.debug(""Pending manager started"");this.isRunning = true;}}}"	No
1700	"public class A {private void processElement(Object value, String absolutePath, boolean repeatValue)throws IOException {if (openedSchemaNodes.size() == 0) {initJson(absolutePath, value, repeatValue);} else {String valueProperty = absolutePath.substring(absolutePath.lastIndexOf(""."") + 1);String[] curSegments = absolutePath.substring(0, absolutePath.lastIndexOf(""."")).split(""\\."");String[] prevSegments = previousPath.substring(0, previousPath.lastIndexOf(""."")).split(""\\."");int ln = Math.min(curSegments.length, prevSegments.length);int lastCommonIndex = -1;for (int i = 0; i < ln; i++) {if (curSegments[i].equals(prevSegments[i])) {lastCommonIndex = i;} else {break;}}int commonSegmentsNo = lastCommonIndex + 1;if (commonSegmentsNo < prevSegments.length) {if (log.isDebugEnabled()) {log.debug(""\tgot different path with common segments"");}closeExtraPathSegments(prevSegments, lastCommonIndex);openPathSegments(curSegments, lastCommonIndex + 1);} else if (commonSegmentsNo == prevSegments.length&& curSegments.length > prevSegments.length) {if (log.isDebugEnabled()) {}openPathSegments(curSegments, lastCommonIndex + 1);}SchemaNode currentNode = pathToValueNode.get(absolutePath);if (log.isDebugEnabled()) {}if (currentNode.isArray()) {writePathProperty(currentNode, valueProperty, value, repeatValue);} else {writePathProperty(currentNode, valueProperty, value, false);}}previousPath = absolutePath;}}"	Yes
1701	"public class A {public PhysicalDatasource findDatasouce(BackendConnection exitsCon) {for (PhysicalDatasource ds : this.allDs) {if ((ds.isReadNode() == exitsCon.isFromSlaveDB()) && ds.isMyConnection(exitsCon)) {return ds;}}LOGGER.warn(""can't find connection in pool "" + this.hostName + "" con:"" + exitsCon);return null;}}"	No
1702	"public class A {protected void exceptionCaught(Throwable exc) {if (closeFuture.isClosed()) {return;}AsynchronousSocketChannel socket = getSocket();if (isOpen() && socket.isOpen()) {IoHandler handler = getIoHandler();try {if (log.isDebugEnabled()) {log.debug(""exceptionCaught({}) caught {}[{}] - calling handler"",this,exc.getClass().getSimpleName(),exc.getMessage());}handler.exceptionCaught(this, exc);} catch (Throwable e) {Throwable t = ExceptionUtils.peelException(e);debug(""exceptionCaught({}) Exception handler threw {}, closing the session: {}"",this,t.getClass().getSimpleName(),t.getMessage(),t);}}close(true);}}"	No
1703	public class A {static boolean clusterIsStartup() {boolean foundLeader = false;for (ClusterManagerServer clusterServer : clusterServers) {if (!clusterServer.raftInitialized()) {return false;}if (clusterServer.isClusterLeader()) {foundLeader = true;}}if (!foundLeader) {return false;}return true;}}	Yes
1704	public class A {private String _getCanonicalURL(Map<Locale, String> alternateURLs, String canonicalURL, Layout layout, Locale locale) {try {LayoutSEOLink layoutSEOLink =_layoutSEOLinkManager.getCanonicalLayoutSEOLink(layout, locale, canonicalURL, alternateURLs);return layoutSEOLink.getHref();} catch (PortalException portalException) {return canonicalURL;}}}	Yes
1705	public class A {private String getGaugeResponse(String agentId, GaugeConfig gaugeConfig) throws Exception {ImmutableGaugeResponse.Builder builder =ImmutableGaugeResponse.builder().config(GaugeConfigDto.create(gaugeConfig));MBeanMeta mbeanMeta = null;if (liveJvmService != null) {try {mbeanMeta = liveJvmService.getMBeanMeta(agentId, gaugeConfig.getMbeanObjectName());} catch (AgentNotConnectedException e) {logger.debug(e.getMessage(), e);}}builder.agentNotConnected(mbeanMeta == null).mbeanUnmatched(mbeanMeta != null && mbeanMeta.getUnmatched()).mbeanUnavailable(mbeanMeta != null && mbeanMeta.getUnavailable());if (mbeanMeta == null) {for (MBeanAttribute mbeanAttribute : gaugeConfig.getMbeanAttributeList()) {builder.addMbeanAvailableAttributeNames(mbeanAttribute.getName());}} else {builder.addAllMbeanAvailableAttributeNames(mbeanMeta.getAttributeNameList());}return mapper.writeValueAsString(builder.build());}}	No
1706	"public class A {void apply(File path, boolean delete, Properties templateProperties) throws IOException {if (path.getName().startsWith(""."") || path.isHidden() || path.getName().endsWith(""~"")) {}if (path.isDirectory()) {File[] files = path.listFiles();Arrays.sort(files);if (delete) {ArrayUtils.reverse(files);}for (File f : files) {apply(f, delete, templateProperties);}} else if (path.isFile()) {K8sSpecTemplate specTemplate = new K8sSpecTemplate();specTemplate.loadProperties(templateProperties);String template = specTemplate.render(path);ParameterNamespaceListVisitFromServerGetDeleteRecreateWaitApplicable<HasMetadata> k8sObjects =client.load(IOUtils.toInputStream(template, StandardCharsets.UTF_8));LOGGER.debug(template);if (delete) {k8sObjects.inNamespace(namespace).delete();} else {k8sObjects.inNamespace(namespace).createOrReplace();}} else {}}}"	Yes
1707	"public class A {void initThirdPartyTMSMock() {thirdPartyService.thirdPartyTMS = thirdPartyTMSMock;logger.debug(""When uploading an image in the ThirdPartyTMS just return an ThirdPartyTMSImage with random""+ "" id"");doAnswer((invocation) -> {ThirdPartyTMSImage thirdPartyTMSImage = new ThirdPartyTMSImage();thirdPartyTMSImage.setId(""img-"" + invocation.getArgument(1));return thirdPartyTMSImage;}).when(thirdPartyTMSMock).uploadImage(any(), any(), any());doThrow(new RuntimeException(""test must stub this"")).when(thirdPartyTMSMock).getThirdPartyTextUnits(any(), any(), any());doThrow(new RuntimeException(""test must stub this"")).when(thirdPartyTMSMock).createImageToTextUnitMappings(any(), any());}}"	No
1708	"public class A {public static synchronized void release(Connection connection) {ArgumentNotValid.checkNotNull(connection, ""connection"");try {connection.close();} catch (SQLException e) {}}}"	Yes
1709	public class A {@Overridepublic void propertiesChanged(final XMLConfiguration configuration) {lastRexsterServerHost = rexsterServerHost;lastRexsterServerPort = rexsterServerPort;lastEnableJmx = enableJmx;lastIoStrategy = ioStrategy;lastMaxWorkerThreadPoolSize = maxWorkerThreadPoolSize;lastCoreWorkerThreadPoolSize = coreWorkerThreadPoolSize;lastMaxKernalThreadPoolSize = maxKernalThreadPoolSize;lastCoreKernalThreadPoolSize = coreKernalThreadPoolSize;lastEnableDogHouse = enableDogHouse;lastWebRootPath = webRootPath;lastBaseUri = baseUri;lastSecurityFilterType = securityFilterType;lastDefaultCharacterEncoding = defaultCharacterEncoding;lastDebugMode = debugMode;lastEnableHttpReporter = enableHttpReporter;updateSettings(configuration);try {reconfigure(app);} catch (Exception ex) {}}}	Yes
1710	"public class A {public static void saveToOutputStream(XmlObject xmlObject, OutputStream outputStream, boolean writeXMLDeclaration)throws GenericException, ValidationException {LOGGER.trace(""Serializing XML Object {}"", xmlObject);XmlOptions validateOptions = new XmlOptions();List<XmlValidationError> errorList = new ArrayList<>();validateOptions.setErrorListener(errorList);boolean isValid = xmlObject.validate(validateOptions);if (isValid) {try {XmlOptions xmlSaveOptions =new XmlOptions().setUseDefaultNamespace().setSavePrettyPrint().setSaveAggressiveNamespaces();if (!writeXMLDeclaration) {xmlSaveOptions = xmlSaveOptions.setSaveNoXmlDecl();}xmlObject.save(outputStream, xmlSaveOptions);} catch (IOException e) {LOGGER.debug(""Error serializing XML object - "" + e.getMessage(), e);throw new GenericException(""Error serializing XML object"", e);}} else {throw new ValidationException(xmlValidationErrorsToValidationReport(errorList));}}}"	No
1711	"public class A {@Overridepublic AsyncCallFuture<VolumeApiResult> createManagedStorageVolumeFromTemplateAsync(VolumeInfo volumeInfo, long destDataStoreId, TemplateInfo srcTemplateInfo, long destHostId)throws StorageAccessException {PrimaryDataStore destPrimaryDataStore = dataStoreMgr.getPrimaryDataStore(destDataStoreId);Host destHost = _hostDao.findById(destHostId);if (destHost == null) {throw new CloudRuntimeException(""Destination host should not be null."");}Boolean storageCanCloneVolume =new Boolean(destPrimaryDataStore.getDriver().getCapabilities().get(DataStoreCapabilities.CAN_CREATE_VOLUME_FROM_VOLUME.toString()));boolean computeSupportsVolumeClone =computeSupportsVolumeClone(destHost.getDataCenterId(), destHost.getHypervisorType());AsyncCallFuture<VolumeApiResult> future = new AsyncCallFuture<>();if (storageCanCloneVolume && computeSupportsVolumeClone) {s_logger.debug(""Storage ""+ destDataStoreId+ "" can support cloning using a cached template and compute side is OK with volume""+ "" cloning."");GlobalLock lock = null;TemplateInfo templateOnPrimary = null;try {String tmplIdManagedPoolIdLockString =""tmplId:"" + srcTemplateInfo.getId() + ""managedPoolId:"" + destDataStoreId;lock = GlobalLock.getInternLock(tmplIdManagedPoolIdLockString);if (lock == null) {throw new CloudRuntimeException(""Unable to create managed storage template/volume, couldn't get global lock on ""+ tmplIdManagedPoolIdLockString);}int storagePoolMaxWaitSeconds =NumbersUtil.parseInt(configDao.getValue(Config.StoragePoolMaxWaitSeconds.key()), 3600);if (!lock.lock(storagePoolMaxWaitSeconds)) {s_logger.debug(""Unable to create managed storage template/volume, couldn't lock on ""+ tmplIdManagedPoolIdLockString);throw new CloudRuntimeException(""Unable to create managed storage template/volume, couldn't lock on ""+ tmplIdManagedPoolIdLockString);}templateOnPrimary = destPrimaryDataStore.getTemplate(srcTemplateInfo.getId(), null);if (templateOnPrimary == null) {templateOnPrimary = createManagedTemplateVolume(srcTemplateInfo, destPrimaryDataStore);if (templateOnPrimary == null) {throw new CloudRuntimeException(""Failed to create template ""+ srcTemplateInfo.getUniqueName()+ "" on primary storage: ""+ destDataStoreId);}}VMTemplateStoragePoolVO templatePoolRef =_tmpltPoolDao.findByPoolTemplate(destPrimaryDataStore.getId(), templateOnPrimary.getId(), null);if (templatePoolRef == null) {throw new CloudRuntimeException(""Failed to find template ""+ srcTemplateInfo.getUniqueName()+ "" in storage pool ""+ destPrimaryDataStore.getId());}if (templatePoolRef.getDownloadState() == Status.NOT_DOWNLOADED) {copyTemplateToManagedTemplateVolume(srcTemplateInfo, templateOnPrimary, templatePoolRef, destPrimaryDataStore, destHost);}} finally {if (lock != null) {lock.unlock();lock.releaseRef();}}if (destPrimaryDataStore.getPoolType() != StoragePoolType.PowerFlex) {s_logger.debug(""Creating a clone from template on primary storage "" + destDataStoreId);createManagedVolumeCloneTemplateAsync(volumeInfo, templateOnPrimary, destPrimaryDataStore, future);} else {s_logger.debug(""Copying the template to the volume on primary storage"");createManagedVolumeCopyManagedTemplateAsync(volumeInfo, destPrimaryDataStore, templateOnPrimary, destHost, future);}} else {s_logger.debug(""Primary storage does not support cloning or no support for UUID resigning on the host""+ "" side; copying the template normally"");createManagedVolumeCopyTemplateAsync(volumeInfo, destPrimaryDataStore, srcTemplateInfo, destHost, future);}return future;}}"	No
1712	"public class A {private void ackRemoteManagement() {assert log != null;if (!log.isInfoEnabled()) return;SB sb = new SB();sb.a(""Remote Management ["");boolean on = isJmxRemoteEnabled();sb.a(""restart: "").a(onOff(isRestartEnabled())).a("", "");sb.a(""REST: "").a(onOff(isRestEnabled())).a("", "");sb.a(""JMX ("");sb.a(""remote: "").a(onOff(on));if (on) {sb.a("", "");sb.a(""port: "").a(System.getProperty(""com.sun.management.jmxremote.port"", ""<n/a>"")).a("", "");sb.a(""auth: "").a(onOff(Boolean.getBoolean(""com.sun.management.jmxremote.authenticate""))).a("", "");sb.a(""ssl: "").a(onOff(Boolean.getBoolean(""com.sun.management.jmxremote.ssl"")|| System.getProperty(""com.sun.management.jmxremote.ssl"") == null));}sb.a("")"");sb.a(']');log.info(sb.toString());}}"	No
1713	"public class A {public void setUpdateDateTime(final Date updateDateTime) {this.updateDateTime = updateDateTime;logger.debug(""Setting updateDateTime ["" + this.updateDateTime + ""]"");}}"	No
1714	"public class A {@Deprecated@RequestMapping(value = CONFIG_SAVE_URL, method = RequestMethod.POST)@ResponseBodypublic String saveConfig(@RequestBody @Valid ConfigMap configMap) {try {putCustomConfig(configMap);} catch (JsonSyntaxException jse) {LOGGER.error(""Error saving config"", jse);return ""Permission Denied"";}return ""Success"";}}"	No
1715	public class A {@Overridepublic void calculateConditionals() {for (String conditionalSystemName : _conditionalSystemNames) {Conditional c = getConditional(conditionalSystemName);if (c == null) {} else {c.calculate(mEnabled, null);}}}}	Yes
1716	"public class A {@CacheEntryRemovedpublic void updated(CacheEntryRemovedEvent e) {if (e.isPre()) return;for (RemovedListener listener : removed) {try {listener.removed(e.getKey(), e.getOldValue());} catch (Throwable t) {log.error(""Listener "" + listener + "" has thrown an exception"", t);}}}}"	No
1717	public class A {@Overridepublic void run() throws Exception {int node = threadNode.get();sessionFactory(node).getCache().evictAllRegions();}}	Yes
1718	"public class A {private ListenableFuture<Collection<EndpointPolicyTemplateBySgt>> storeTemplate(final EndpointPolicyTemplateBySgt template) {final WriteTransaction wTx = dataBroker.newWriteOnlyTransaction();final Sgt sgt = template.getSgt();LOG.trace(""storing generated epPolicyTemplate: {}"", sgt.getValue());final InstanceIdentifier<EndpointPolicyTemplateBySgt> epPolicyTemplatePath =InstanceIdentifier.create(SxpEpMapper.class).child(EndpointPolicyTemplateBySgt.class, new EndpointPolicyTemplateBySgtKey(sgt));wTx.put(LogicalDatastoreType.CONFIGURATION, epPolicyTemplatePath, template, true);return Futures.transform(wTx.submit(),createStoreOutcomeHandlerToCollection(template),MoreExecutors.directExecutor());}}"	No
1719	"public class A {public void doPushNotificationRequestEvent(ClientShSession appSession, PushNotificationRequest request)throws InternalException, IllegalDiameterStateException, RouteException, OverloadException {try {Answer answer =(Answer)super.createAnswer((Request) request.getMessage(), 2001, this.shAuthApplicationId);AvpSet set = answer.getAvps();set.addAvp(277, 0);if (log.isDebugEnabled()) {log.info(""Recievend PNR in App Session."");super.dumpMessage(request.getMessage(), false);log.info(""Sending PNA in App Session."");super.dumpMessage(answer, true);}appSession.sendPushNotificationAnswer((PushNotificationAnswer) this.createPushNotificationAnswer(answer));} catch (Exception e) {e.printStackTrace();}}}"	No
1720	"public class A {@Overridepublic Object authenticate(String user, String requestedPassword) {TCalDavPrincipal p = TResourceFactory.findUser(user);if (p != null) {if (p.getPassword().equals(requestedPassword)) {return p;} else {log.warn(""that password is incorrect. Try:"" + p.getPassword());}} else {log.warn(""user not found: "" + user + "" - try 'userA'"");}return null;}}"	No
1721	"public class A {@OverrideOptional<FROM> decodeFromRawInternal(Object o) {if (LOGGER.isTraceEnabled()) {LOGGER.trace(format(""Decode '%s' tuple1 raw object %s"", fieldName, o));}final FROM decoded = aProperty.decodeFromRawInternal(o);if (decoded == null) {return Optional.empty();} else {return Optional.of(decoded);}}}"	No
1722	public class A {@Overridepublic <T extends ExternalizableBusinessObject> T retrieveExternalizableBusinessObjectIfNecessary(BusinessObject businessObject,T currentInstanceExternalizableBO,String externalizableRelationshipName) {if (businessObject == null) {return null;}Class clazz;try {clazz =getExternalizableBusinessObjectImplementation(PropertyUtils.getPropertyType(businessObject, externalizableRelationshipName));} catch (Exception iex) {return null;}BusinessObjectEntry entry =KRADServiceLocatorWeb.getDataDictionaryService().getDataDictionary().getBusinessObjectEntries().get(businessObject.getClass().getSimpleName());RelationshipDefinition relationshipDefinition =entry.getRelationshipDefinition(externalizableRelationshipName);List<PrimitiveAttributeDefinition> primitiveAttributeDefinitions =relationshipDefinition.getPrimitiveAttributes();Map<String, Object> fieldValuesInEBO = new HashMap<String, Object>();Object sourcePropertyValue;Object targetPropertyValue = null;boolean sourceTargetPropertyValuesSame = true;for (PrimitiveAttributeDefinition primitiveAttributeDefinition :primitiveAttributeDefinitions) {sourcePropertyValue =KradDataServiceLocator.getDataObjectService().wrap(businessObject).getPropertyValueNullSafe(primitiveAttributeDefinition.getSourceName());if (currentInstanceExternalizableBO != null) {targetPropertyValue =KradDataServiceLocator.getDataObjectService().wrap(currentInstanceExternalizableBO).getPropertyValueNullSafe(primitiveAttributeDefinition.getTargetName());}if (sourcePropertyValue == null) {return null;} else if (targetPropertyValue == null|| (targetPropertyValue != null && !targetPropertyValue.equals(sourcePropertyValue))) {sourceTargetPropertyValuesSame = false;}fieldValuesInEBO.put(primitiveAttributeDefinition.getTargetName(), sourcePropertyValue);}if (!sourceTargetPropertyValuesSame) {return (T) getExternalizableBusinessObject(clazz, fieldValuesInEBO);}return currentInstanceExternalizableBO;}}	Yes
1723	public class A {protected void processFlowElement(FlowElement flowElement,FlowElementsContainer container,BpmnModel model,ArrayNode shapesArrayNode,Map<String, ModelInfo> formKeyMap,Map<String, ModelInfo> decisionTableKeyMap,double containerX,double containerY) {Class<? extends BaseBpmnJsonConverter> converter =convertersToJsonMap.get(flowElement.getClass());if (converter != null) {try {BaseBpmnJsonConverter converterInstance = converter.getDeclaredConstructor().newInstance();if (converterInstance instanceof FormKeyAwareConverter) {((FormKeyAwareConverter) converterInstance).setFormKeyMap(formKeyMap);}if (converterInstance instanceof DecisionTableKeyAwareConverter) {((DecisionTableKeyAwareConverter) converterInstance).setDecisionTableKeyMap(decisionTableKeyMap);}converterInstance.convertToJson(flowElement, this, model, container, shapesArrayNode, containerX, containerY);} catch (Exception e) {}}}}	Yes
1724	"public class A {@Overridepublic void endElement(@Nullable String uri, @Nullable String localName, @Nullable String qName)throws SAXException {if ((""container"".equals(qName) || ""item"".equals(qName))) {element = null;int trackNumberVal = 0;try {trackNumberVal = Integer.parseInt(trackNumber.toString());} catch (NumberFormatException e) {}SonosResourceMetaData md = null;if (!desc.toString().isEmpty()) {try {md = getResourceMetaData(desc.toString());} catch (SAXException ignore) {}}artists.add(new SonosEntry(id,title.toString(),parentId,album.toString(),albumArtUri.toString(),creator.toString(),upnpClass.toString(),res.toString(),trackNumberVal,md));title = new StringBuilder();upnpClass = new StringBuilder();res = new StringBuilder();album = new StringBuilder();albumArtUri = new StringBuilder();creator = new StringBuilder();trackNumber = new StringBuilder();desc = new StringBuilder();}}}"	Yes
1725	"public class A {private void sendNotification(String email, Article article, HttpServletRequest request)throws MessagingException {String articleURL =""http://"" + domain + ""/articles/detail.html?articleId="" + article.getArticleId();String subject =messageSource.getMessage(""articles.group.email.subscribtion.subject"",new String[] {article.getTitle(), article.getPerson().getUsername()},RequestContextUtils.getLocale(request));String emailBody = ""<html><body>"";emailBody +=""<p>""+ messageSource.getMessage(""articles.comments.email.subscribtion.body.text.part1"",new String[] {article.getTitle()},RequestContextUtils.getLocale(request))+ """";emailBody +=""&nbsp;(<a href=\"""" + articleURL + ""\"" target=\""_blank\"">"" + articleURL + ""</a>)</p><br />"";emailBody += ""<h3>"" + article.getTitle() + ""</h3> <p>"" + article.getText() + ""</p><br />"";emailBody +=""<p>""+ messageSource.getMessage(""articles.comments.email.subscribtion.body.text.part2"",null,RequestContextUtils.getLocale(request))+ ""</p>"";emailBody += ""</body></html>"";MimeMessage mimeMessage = mailSender.createMimeMessage();MimeMessageHelper message = new MimeMessageHelper(mimeMessage);message.setFrom(mailMessage.getFrom());message.setTo(email);message.setSubject(subject);message.setText(emailBody, true);try {mailSender.send(mimeMessage);log.debug(""E-mail was sent"");} catch (MailException e) {}}}"	Yes
1726	"public class A {@Overridepublic void onEvent(MetaEvent event) {try {if (event.getEventType() == EventType.ADD_CONSUMER) {AddConsumerEvent addConsumerEvent = (AddConsumerEvent) event;logger.info(""listen add consume event:[{}]"", addConsumerEvent.toString());addConsumer(addConsumerEvent.getTopic(), addConsumerEvent.getConsumer().getApp());}} catch (Exception ex) {logger.error(""AddConsumeListener error."", ex);}}}"	No
1727	public class A {public void setSelectedSource(TransUnitId id) {currentTransUnitId = id;Optional<SourceContentsDisplay> sourceContentsView = Finds.findDisplayById(displayList, id);if (sourceContentsView.isPresent()) {List<HasSelectableSource> sourcePanelList = sourceContentsView.get().getSourcePanelList();Optional<HasSelectableSource> selectedSource = tryFindSelectedSourcePanel(sourcePanelList);if (selectedSource.isPresent()) {selectedSource.get().clickSelf();} else {sourcePanelList.get(0).clickSelf();}}}}	Yes
1728	"public class A {@Transactional(rollbackFor = ArrowheadException.class)public List<Cloud> registerBulkCloudsWithRelays(final List<CloudRequestDTO> dtoList) {logger.debug(""registerBulkCloudsWithRelays started..."");try {final Map<String, Cloud> cloudsToSave = new HashMap<>();final Map<String, List<Relay>> gatekeeperRelaysForClouds = new HashMap<>();final Map<String, List<Relay>> gatewayRelaysForClouds = new HashMap<>();if (dtoList == null || dtoList.isEmpty()) {throw new InvalidParameterException(""List of CloudRequestDTO is null or empty"");}for (final CloudRequestDTO dto : dtoList) {if (dto == null) {throw new InvalidParameterException(""List of CloudRequestDTO contains null element"");}validateCloudParameters(true,dto.getOperator(),dto.getName(),dto.getSecure(),dto.getAuthenticationInfo(),dto.getGatekeeperRelayIds(),dto.getGatewayRelayIds());final String operator = dto.getOperator().toLowerCase().trim();final String name = dto.getName().toLowerCase().trim();final boolean secure = dto.getSecure() == null ? false : dto.getSecure();final boolean neighbor = dto.getNeighbor() == null ? false : dto.getNeighbor();final String cloudUniqueConstraint = operator + ""."" + name;if (cloudsToSave.containsKey(cloudUniqueConstraint)) {throw new InvalidParameterException(""List of CloudRequestDTO contains uinque constraint violation: ""+ dto.getOperator()+ "" operator with ""+ dto.getName()+ "" name"");}cloudsToSave.put(cloudUniqueConstraint,new Cloud(operator, name, secure, neighbor, false, dto.getAuthenticationInfo()));gatekeeperRelaysForClouds.put(cloudUniqueConstraint, collectAndValidateGatekeeperRelays(dto.getGatekeeperRelayIds()));gatewayRelaysForClouds.put(cloudUniqueConstraint, collectAndValidateGatewayRelays(dto.getGatewayRelayIds()));}final List<Cloud> savedClouds = cloudRepository.saveAll(cloudsToSave.values());cloudRepository.flush();final Set<Long> savedCloudIds =saveCloudAndRelayConnections(savedClouds, gatekeeperRelaysForClouds, gatewayRelaysForClouds);return cloudRepository.findAllById(savedCloudIds);} catch (final InvalidParameterException ex) {throw ex;} catch (final Exception ex) {throw new ArrowheadException(CoreCommonConstants.DATABASE_OPERATION_EXCEPTION_MSG);}}}"	Yes
1729	public class A {@Overridepublic void base(String base) {}}	Yes
1730	"public class A {@Overridepublic AuthenticationHandler create() {return new AuthenticationHandler() {@Overridepublic String auth(final String clientInput) throws RejectException {return null;}@Overridepublic Object getIdentity() {return ""username"";}};}}"	Yes
1731	"public class A {public org.apache.thrift.async.AsyncMethodCallback<RemoteInterpreterResult> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb,final int seqid) {final org.apache.thrift.AsyncProcessFunction fcall = this;return new org.apache.thrift.async.AsyncMethodCallback<RemoteInterpreterResult>() {public void onComplete(RemoteInterpreterResult o) {interpret_result result = new interpret_result();result.success = o;try {fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);} catch (org.apache.thrift.transport.TTransportException e) {fb.close();} catch (java.lang.Exception e) {onError(e);}}public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;interpret_result result = new interpret_result();if (e instanceof InterpreterRPCException) {result.ex = (InterpreterRPCException) e;result.setExIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {_LOGGER.error(""TApplicationException inside handler"", e);msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {_LOGGER.error(""Exception writing to internal frame buffer"", ex);fb.close();}}};}}"	Yes
1732	"public class A {protected void onReconnection(Connection connection) {if (controlConnection.refreshNodeInfo(host)) {logger.debug(""Successful reconnection to {}, setting host UP"", host);try {onUp(host, connection);} catch (InterruptedException e) {Thread.currentThread().interrupt();} catch (Exception e) {}} else {connection.closeAsync();}}}"	Yes
1733	"public class A {public void poll() {final Thread mainThread = Thread.currentThread();Runtime.getRuntime().addShutdownHook(new Thread(() -> {kafkaConsumer.wakeup();if (kafkaSecondaryConsumer != null) {kafkaSecondaryConsumer.wakeup();}try {mainThread.join();} catch (InterruptedException e) {mainThread.interrupt();}}));if (kafkaConsumer == null) {throw new IllegalStateException(""Can't poll, kafkaConsumer not subscribed or null!"");}if (kafkaSecondaryConsumer == null) {throw new IllegalStateException(""Can't poll, kafkaConsumer not subscribed or null!"");}try {while (!exit) {consume();}} catch (WakeupException e) {} finally {try {kafkaConsumer.commitSync();kafkaSecondaryConsumer.commitSync();if (logger.isDebugEnabled()) {for (Map.Entry<TopicPartition, OffsetAndMetadata> entry : offsetsEvents.entrySet()) {}}} catch (WakeupException e) {} finally {kafkaConsumer.close();kafkaSecondaryConsumer.close();}}}}"	Yes
1734	"public class A {@Overridepublic void onReadAddRecordTX(final long transactionID, final RecordInfo info) throws Exception {if (logger.isTraceEnabled()) {logger.trace(""Read Add Record TX "" + transactionID + "" info "" + info);}if (pendingTransactions.get(transactionID) != null) {produceAddRecordTX(transactionID, info);} else if (containsRecord(info.id)) {addTX(transactionID, () -> produceAddRecordTX(transactionID, info));}}}"	No
1735	"public class A {@Overridepublic void createConfig(Element element) {try {this.setLangCode(element.getAttributeValue(""langCode""));this.setNamespace(element.getAttributeValue(""namespace""));this.setResourceName(element.getAttributeValue(""resourceName""));String methodString = element.getAttributeValue(""method"");if (null != methodString) {this.setMethod(Enum.valueOf(ApiMethod.HttpMethod.class, methodString.toUpperCase()));} else {this.setMethod(ApiMethod.HttpMethod.GET);}String expectedString = element.getAttributeValue(""expected"");if (null != expectedString) {try {this.setExpectedResult(Integer.parseInt(expectedString));} catch (Exception e) {}}this.setPrintResponse(Boolean.parseBoolean(element.getAttributeValue(""printresponse"")));String failOnError = element.getAttributeValue(""failonerror"");if (null != failOnError) {this.setFailOnError(Boolean.parseBoolean(failOnError));}Element parametersElement = element.getChild(""query"");if (null != parametersElement) {List<Element> parameterElements = parametersElement.getChildren(""parameter"");for (int i = 0; i < parameterElements.size(); i++) {Element parameterElement = parameterElements.get(i);String name = parameterElement.getAttributeValue(""name"");String value = parameterElement.getAttributeValue(""value"");if (null != name && null != value) {this.getQueryParameters().put(name, value);}}}Element contentBodyElement = element.getChild(""contentBody"");if (null != contentBodyElement) {String contentTypeString = contentBodyElement.getAttributeValue(""content-type"");this.setContentType(MediaType.valueOf(contentTypeString));String text = contentBodyElement.getText();if (null == text || text.trim().length() == 0) {String path = contentBodyElement.getAttributeValue(""path"");if (null != path) {this.setContentBodyPath(path);}}if (null != text) {this.setContentBody(text);}}} catch (Throwable t) {throw new RuntimeException(""Error creating Self rest call"", t);}}}"	Yes
1736	public class A {@Overridepublic List<CertificateDTO> fetchKeyStores() throws CertificateManagerException {try {return listKeyStore(AdminWSConstants.ADMIN_CERT_LIST_KEYSTORE);} catch (Exception ex) {LOG.error(UNABLE_TO_GET_CERTIFICATE, ex.getLocalizedMessage(), ex);throw new CertificateManagerException(UNABLE_TO_GET_CERTIFICATE);}}}	No
1737	"public class A {public void handshake(final Peer peer, final String destinationId) throws IOException {if (handshakeComplete) {throw new IllegalStateException(""Handshake has already been completed"");}commsIdentifier = UUID.randomUUID().toString();logger.debug(""{} handshaking with {}"", this, peer);final Map<HandshakeProperty, String> properties = new HashMap<>();properties.put(HandshakeProperty.GZIP, String.valueOf(useCompression));if (destinationId != null) {properties.put(HandshakeProperty.PORT_IDENTIFIER, destinationId);}properties.put(HandshakeProperty.REQUEST_EXPIRATION_MILLIS, String.valueOf(timeoutMillis));if (versionNegotiator.getVersion() >= 5) {if (batchCount > 0) {properties.put(HandshakeProperty.BATCH_COUNT, String.valueOf(batchCount));}if (batchSize > 0L) {properties.put(HandshakeProperty.BATCH_SIZE, String.valueOf(batchSize));}if (batchMillis > 0L) {properties.put(HandshakeProperty.BATCH_DURATION, String.valueOf(batchMillis));}}final CommunicationsSession commsSession = peer.getCommunicationsSession();commsSession.setTimeout(timeoutMillis);final DataInputStream dis = new DataInputStream(commsSession.getInput().getInputStream());final DataOutputStream dos = new DataOutputStream(commsSession.getOutput().getOutputStream());dos.writeUTF(commsIdentifier);if (versionNegotiator.getVersion() >= 3) {dos.writeUTF(peer.getUrl());transitUriPrefix = peer.getUrl();if (!transitUriPrefix.endsWith(""/"")) {transitUriPrefix = transitUriPrefix + ""/"";}}logger.debug(""Handshaking with properties {}"", properties);dos.writeInt(properties.size());for (final Map.Entry<HandshakeProperty, String> entry : properties.entrySet()) {dos.writeUTF(entry.getKey().name());dos.writeUTF(entry.getValue());}dos.flush();try {handshakeResponse = Response.read(dis);} catch (final ProtocolException e) {throw new HandshakeException(e);}switch (handshakeResponse.getCode()) {case PORT_NOT_IN_VALID_STATE:case UNKNOWN_PORT:case PORTS_DESTINATION_FULL:break;case PROPERTIES_OK:readyForFileTransfer = true;break;default:logger.error(""{} received unexpected response {} from {} when negotiating Codec"",this,handshakeResponse,peer);peer.close();throw new HandshakeException(""Received unexpected response "" + handshakeResponse);}logger.debug(""{} Finished handshake with {}"", this, peer);handshakeComplete = true;}}"	No
1738	"public class A {@Overridepublic void run() {if (_readers.isEmpty()) return;if (_entityLogger != null) {_entityReplacementStrategy.setEntityReplacementLogger(_entityLogger);_entityLogger.setStore(_store);_entityLogger.setRejectionStore(_rejectionStore);}try {StoreImpl store = new StoreImpl(_store);for (GtfsReader reader : _readers) {reader.setEntityStore(store);reader.addEntityHandler(new EntityCounter());}store.open();List<Agency> agencies = new ArrayList<Agency>();List<Class<?>> entityClasses = _readers.get(0).getEntityClasses();for (Class<?> entityClass : entityClasses) {_log.info(""reading entities: "" + entityClass.getName());for (GtfsReader reader : _readers) {if (entityClass.equals(Agency.class)) reader.setAgencies(agencies);reader.readEntities(entityClass);if (entityClass.equals(Agency.class))agencies = new ArrayList<Agency>(reader.getAgencies());store.flush();}}store.close();} catch (IOException ex) {ex.printStackTrace();}}}"	No
1739	public class A {public KnifeConvergeTaskFactory<RET> knifePort(int port) {if (portOmittedToUseKnifeDefault != null) {}this.port = port;return self();}}	Yes
1740	"public class A {@Overridepublic int run(String[] args) throws InterruptedException, ExecutionException, TimeoutException {final BufferedMutator.ExceptionListener listener =new BufferedMutator.ExceptionListener() {@Overridepublic void onException(RetriesExhaustedWithDetailsException e, BufferedMutator mutator) {for (int i = 0; i < e.getNumExceptions(); i++) {LOG.info(""Failed to sent put "" + e.getRow(i) + ""."");}}};BufferedMutatorParams params = new BufferedMutatorParams(TABLE).listener(listener);try (final Connection conn = ConnectionFactory.createConnection(getConf());final BufferedMutator mutator = conn.getBufferedMutator(params)) {final ExecutorService workerPool = Executors.newFixedThreadPool(POOL_SIZE);List<Future<Void>> futures = new ArrayList<>(TASK_COUNT);for (int i = 0; i < TASK_COUNT; i++) {futures.add(workerPool.submit(new Callable<Void>() {@Overridepublic Void call() throws Exception {Put p = new Put(Bytes.toBytes(""someRow""));p.addColumn(FAMILY, Bytes.toBytes(""someQualifier""), Bytes.toBytes(""some value""));mutator.mutate(p);return null;}}));}for (Future<Void> f : futures) {f.get(5, TimeUnit.MINUTES);}workerPool.shutdown();} catch (IOException e) {LOG.info(""exception while creating/destroying Connection or BufferedMutator"", e);}return 0;}}"	No
1741	public class A {private void saveConfigFiles() throws Exception {String configParentZNodePath = zNodePaths.getConfigurationZNodePath();List<String> configFilesZNodePaths =CuratorUtils.getLeafZNodePaths(client, configParentZNodePath);if (configFilesZNodePaths.contains(configParentZNodePath)) {configFilesZNodePaths.remove(configParentZNodePath);}for (String configFileZNodePath : configFilesZNodePaths) {byte[] bytes = client.getData().forPath(configFileZNodePath);String localFilePath = zNodePaths.getLocalConfigFilePath(configFileZNodePath);saveFile(localFilePath, bytes);}}}	Yes
1742	"public class A {@Overridepublic boolean accept(Path path) {String name = path.getName();String pathStr = path.toString();boolean match = true;for (String pathPattern : parsedPatterns) {LOG.trace(""accept on {}, path pattern {}, name {}"", pathStr, pathPattern, name);if (name != null && name.startsWith(""part-"")) {LOG.trace(""accept on parent {}, path pattern {}"", path.getParent().toString(), pathPattern);match = FilenameUtils.wildcardMatch(path.getParent().toString() + ""/"", pathPattern);} else {match = FilenameUtils.wildcardMatch(pathStr, pathPattern);}if (match) {return match;}}return match;}}"	No
1743	public class A {private Document ParseJSONDocument(String json) {Document doc = null;try {doc = DocumentJSONConverter.parseDocument(json);} catch (Exception e) {}return doc;}}	Yes
1744	"public class A {@Overridepublic LogEntry fromSolrDocument(SolrDocument doc, List<String> fieldsToReturn)throws GenericException {final String actionComponent =SolrUtils.objectToString(doc.get(RodaConstants.LOG_ACTION_COMPONENT), null);final String actionMethod =SolrUtils.objectToString(doc.get(RodaConstants.LOG_ACTION_METHOD), null);final String address = SolrUtils.objectToString(doc.get(RodaConstants.LOG_ADDRESS), null);final Date datetime = SolrUtils.objectToDate(doc.get(RodaConstants.LOG_DATETIME));final long duration = SolrUtils.objectToLong(doc.get(RodaConstants.LOG_DURATION), 0L);final String parameters = SolrUtils.objectToString(doc.get(RodaConstants.LOG_PARAMETERS), null);final String relatedObjectId =SolrUtils.objectToString(doc.get(RodaConstants.LOG_RELATED_OBJECT_ID), null);final String username = SolrUtils.objectToString(doc.get(RodaConstants.LOG_USERNAME), null);LogEntryState state = null;if (doc.containsKey(RodaConstants.LOG_STATE)) {state =LogEntryState.valueOf(SolrUtils.objectToString(doc.get(RodaConstants.LOG_STATE), LogEntryState.UNKNOWN.toString()));}final String instanceId = SolrUtils.objectToString(doc.get(RodaConstants.LOG_INSTANCE_ID), """");final long lineNumber = SolrUtils.objectToLong(doc.get(RodaConstants.LOG_LINE_NUMBER), -1L);LogEntry entry = super.fromSolrDocument(doc, fieldsToReturn);entry.setActionComponent(actionComponent);entry.setActionMethod(actionMethod);entry.setAddress(address);entry.setDatetime(datetime);entry.setDuration(duration);entry.setState(state);try {if (fieldsToReturn.isEmpty() || fieldsToReturn.contains(RodaConstants.LOG_PARAMETERS)) {entry.setParameters(JsonUtils.getListFromJson(parameters == null ? """" : parameters, LogEntryParameter.class));}} catch (GenericException e) {}entry.setRelatedObjectID(relatedObjectId);entry.setUsername(username);entry.setInstanceId(instanceId);entry.setLineNumber(lineNumber);return entry;}}"	Yes
1745	"public class A {public String authRoleFromHttpRequest(HttpServletRequest httpRequest)throws AuthenticationException {String tokenStr = httpRequest.getHeader(SASL_AUTH_ROLE_TOKEN);if (tokenStr == null) {return null;}String unSigned = signer.verifyAndExtract(tokenStr);SaslRoleToken token;try {token = SaslRoleToken.parse(unSigned);if (log.isDebugEnabled()) {log.debug(""server side get role token: {}, session in token:{}, session in request:{}"",token,token.getSession(),httpRequest.getRemoteAddr());}} catch (Exception e) {return SASL_AUTH_ROLE_TOKEN_EXPIRED;}if (!token.isExpired()) {return token.getUserRole();} else if (token.isExpired()) {return SASL_AUTH_ROLE_TOKEN_EXPIRED;} else {return null;}}}"	Yes
1746	"public class A {@AfterMethod(groups = ""Integration"")public void ensureIsShutDown() {boolean socketClosed =new Repeater(""Checking Infinispan has shut down"").every(Duration.millis(100)).until(new Callable<Boolean>() {@Overridepublic Boolean call() throws Exception {Socket shutdownSocket = null;try {shutdownSocket = new Socket(Networking.getLocalHost(), DEFAULT_PORT);} catch (SocketException e) {return true;}shutdownSocket.close();return false;}}).limitIterationsTo(25).run();if (socketClosed == false) {logger.error(""Infinispan did not shut down"");throw new IllegalStateException(""Infinispan did not shut down"");}}}"	No
1747	"public class A {public static Collection<Class<?>> findExtensions(final Finder finder) {try {return finder.findAvailableClasses(""org.apache.openejb.extension"");} catch (final IOException e) {return Collections.emptySet();}}}"	Yes
1748	"public class A {@Test(timeout = 30000)public void testBrowserNotAuthorized() throws Exception {Connection connection = createConnection(noprivUser, noprivPass);try {Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);javax.jms.Queue queue = session.createQueue(getQueueName());try {QueueBrowser browser = session.createBrowser(queue);browser.getEnumeration();fail(""Should not be able to consume here."");} catch (JMSSecurityException jmsSE) {instanceLog.debug(""Caught expected exception"");}} finally {connection.close();}}}"	No
1749	"public class A {@Overridepublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {if (LOG.isDebugEnabled()) {LOG.debug(""invoke: invoke connection method[%s]...connection is valide=%s"",method.getName(), this.realConnection.isValid(1));}if (""close"".equals(method.getName())) {if (LOG.isDebugEnabled()) {}if (this.realConnection.isClosed()) {if (LOG.isDebugEnabled()) {LOG.debug(""invoke: close the connection because the connection is already""+ "" closed...real-connection[%s]"",this.realConnection);}this.closeConnection();} else {this.pool.returnObject(this.wrapedConnection);}return null;} else {try {return method.invoke(this.realConnection, args);} catch (InvocationTargetException e) {throw e.getTargetException();}}}}"	Yes
1750	public class A {@Overridepublic void addInvalidPartition(int part) {invalidParts.add(part);if (log.isDebugEnabled())}}	Yes
1751	"public class A {private static void logStackTrace(String initString, StackTraceElement[] stackTrace) {StringBuilder sb = new StringBuilder(512);sb.append(initString).append('\n');for (int i = 1; i < stackTrace.length; i++) {String line = stackTrace[i].toString();sb.append(""\t\t"").append(line).append('\n');}}}"	Yes
1752	"public class A {private Folder _createPrivateUserFolder(long repositoryId, long parentFolderId, HttpServletRequest httpServletRequest, User user) {try {return dlAppService.addFolder(repositoryId,parentFolderId,user.getScreenName(),LanguageUtil.get(getResourceBundle(user.getLocale()),""this-folder-was-automatically-created-by-forms-to-store-""+ ""all-your-uploaded-files""),ServiceContextFactory.getInstance(httpServletRequest));} catch (PortalException portalException) {if (_log.isDebugEnabled()) {_log.debug(""Unable to retrieve private uploads folder of user "" + user.getUserId(),portalException);}return null;}}}"	No
1753	"public class A {@SuppressWarnings(""resource"")@RequestMapping(""/sistr/{id}"")@ResponseBodypublic AnalysisSistrResults getSistrAnalysis(@PathVariable Long id) {AnalysisSubmission submission = analysisSubmissionService.read(id);Collection<Sample> samples = sampleService.getSamplesForAnalysisSubmission(submission);final String sistrFileKey = ""sistr-predictions"";UUID workflowUUID = submission.getWorkflowId();IridaWorkflow iridaWorkflow;try {iridaWorkflow = workflowsService.getIridaWorkflow(workflowUUID);} catch (IridaWorkflowNotFoundException e) {logger.error(""Error finding workflow, "", e);throw new EntityNotFoundException(""Couldn't find workflow for submission "" + submission.getId(), e);}AnalysisType analysisType = iridaWorkflow.getWorkflowDescription().getAnalysisType();if (analysisTypesService.getViewerForAnalysisType(analysisType).get().equals(""sistr"")) {Analysis analysis = submission.getAnalysis();Path path = null;if (analysis.getAnalysisOutputFile(sistrFileKey) != null) {path = analysis.getAnalysisOutputFile(sistrFileKey).getFile();try {String json =new Scanner(new BufferedReader(new FileReader(path.toFile()))).useDelimiter(""\\Z"").next();ObjectMapper mapper = new ObjectMapper();List<SistrResult> sistrResults =mapper.readValue(json, new TypeReference<List<SistrResult>>() {});if (sistrResults.size() > 0) {if (samples != null && samples.size() == 1) {Sample sample = samples.iterator().next();return new AnalysisSistrResults(sample.getSampleName(), false, sistrResults.get(0));} else {logger.error(""Invalid number of associated samples for submission "" + submission);}} else {}} catch (FileNotFoundException e) {logger.error(""File ["" + path + ""] not found"", e);} catch (JsonParseException | JsonMappingException e) {} catch (IOException e) {logger.error(""Error reading file ["" + path + ""]"", e);}} else {}}return new AnalysisSistrResults(null, true, null);}}"	Yes
1754	"public class A {@Deprecatedpublic boolean loadJar(File file) {if (!file.exists()) {return false;}try {URL jarUrl = file.toURI().toURL();ClassLoader sysloader = ClassLoader.getSystemClassLoader();Class<?> sysclass = URLClassLoader.class;Class<?>[] parameters = new Class[] {URL.class};Method method = sysclass.getDeclaredMethod(""addURL"", parameters);method.setAccessible(true);method.invoke(sysloader, new Object[] {jarUrl});LOGGER.info(jarUrl.toString() + "" loaded"");return true;} catch (Exception e) {e.printStackTrace();return false;}}}"	No
1755	"public class A {public List<String> ripAlbumAndGetSubalbums(String theUrl) throws IOException {int filesIndex = 0, filesTotal = 0, pageIndex = 0;String currentAlbumPath = null, url = null;while (pageIndex == 0 || filesIndex < filesTotal) {if (isStopped()) {break;}pageIndex++;if (pageIndex > 1 || pageResponse == null) {url = theUrl + String.format(""?sort=3&page=%d"", pageIndex);logger.info(""    Retrieving "" + url);pageResponse = Http.url(url).response();}Document albumDoc = pageResponse.parse();String jsonString = null;for (Element script : albumDoc.select(""script[type=text/javascript]"")) {String data = script.data();if (!data.contains(""libraryAlbumsPageCollectionData"")) {continue;}Pattern p;Matcher m;p = Pattern.compile(""^.*collectionData: (\\{.*\\}).*$"", Pattern.DOTALL);m = p.matcher(data);if (m.matches()) {jsonString = m.group(1);break;}}if (jsonString == null) {logger.error(""Unable to find JSON data at URL: "" + url);break;}JSONObject json = new JSONObject(jsonString);JSONObject items = json.getJSONObject(""items"");JSONArray objects = items.getJSONArray(""objects"");filesTotal = items.getInt(""total"");currentAlbumPath = json.getString(""currentAlbumPath"");for (int i = 0; i < objects.length(); i++) {JSONObject object = objects.getJSONObject(i);String image = object.getString(""fullsizeUrl"");filesIndex += 1;addURLToDownload(new URL(image),"""",object.getString(""location"").replaceAll("" "", ""_""),albumDoc.location(),pageResponse.cookies());}}if (url != null) {return getSubAlbums(url, currentAlbumPath);} else {return new ArrayList<String>();}}}"	No
1756	"public class A {@Overridepublic String format(ResourcePath path, Query query, Object result, boolean useAbsoluteNavigationLinks) {String entityJsonString = """";try {if (Entity.class.isAssignableFrom(result.getClass())) {Entity<?> entity = (Entity) result;entityJsonString = JsonWriter.writeEntity(entity);} else if (EntitySet.class.isAssignableFrom(result.getClass())) {EntitySet<?> entitySet = (EntitySet) result;entityJsonString = JsonWriter.writeEntityCollection(entitySet);} else if (path != null && path.isValue()) {if (result instanceof Map || result instanceof GeoJsonObject) {entityJsonString = JsonWriter.writeObject(result);} else if (result instanceof Id) {entityJsonString = ((Id) result).getValue().toString();} else {entityJsonString = result.toString();}} else {entityJsonString = JsonWriter.writeObject(result);}} catch (IOException ex) {}return entityJsonString;}}"	Yes
1757	public class A {private void info(String s) {Log.info(Log.MONITOR, s);}}	No
1758	"public class A {private Map<String, List<BusinessMappingData>> getMetaData(GraphDBHandler dbHandler) {List<NodeData> nodes = null;Map<String, List<BusinessMappingData>> businessMappinMap = new HashMap<>(0);Set<String> additionalProperties = new HashSet<>();additionalProperties.add(""adminuser"");additionalProperties.add(""inSightsTime"");additionalProperties.add(""uuid"");additionalProperties.add(""inSightsTime"");additionalProperties.add(""inSightsTimeX"");additionalProperties.add(""categoryName"");additionalProperties.add(""deleted"");additionalProperties.add(""type"");additionalProperties.add(""businessmappinglabel"");additionalProperties.add(""toolName"");additionalProperties.add(""id"");try {GraphResponse toolResponse =dbHandler.executeCypherQuery(""MATCH (n:METADATA:BUSINESSMAPPING) return collect(distinct n.toolName)"");JsonArray arrayToolRegistred =toolResponse.getJson().get(""results"").getAsJsonArray().get(0).getAsJsonObject().get(""data"").getAsJsonArray().get(0).getAsJsonObject().get(""row"").getAsJsonArray().get(0).getAsJsonArray();for (JsonElement registedTool : arrayToolRegistred) {String toolName = registedTool.toString().replaceAll(""\"""", """");GraphResponse response =dbHandler.executeCypherQuery(""MATCH (n:METADATA:BUSINESSMAPPING) where n.toolName='""+ toolName+ ""' return n order by n.inSightsTime desc"");nodes = response.getNodes();List<BusinessMappingData> toolDataList = new ArrayList<>(0);for (NodeData node : nodes) {BusinessMappingData toolData = new BusinessMappingData();String businessMappingLabel = node.getPropertyMap().get(""businessmappinglabel"");toolData.setToolName(toolName);toolData.setBusinessMappingLabel(businessMappingLabel);Map<String, String> propertyMap = node.getPropertyMap();propertyMap.keySet().removeAll(additionalProperties);toolData.setPropertyMap(propertyMap);toolDataList.add(toolData);}businessMappinMap.put(toolName, toolDataList);}} catch (InsightsCustomException e) {log.error(e);}return businessMappinMap;}}"	Yes
1759	"public class A {@Overridepublic void run() {while (!stopped) {try {final Socket socket;try {socket = serverSocket.accept();} catch (final SocketTimeoutException ste) {if (stopped) {return;}continue;} catch (final IOException ioe) {if (stopped) {return;}throw ioe;}logger.debug(""Received connection from Bootstrap"");socket.setSoTimeout(5000);executor.submit(() -> {try {final BootstrapRequest request = readRequest(socket.getInputStream());final BootstrapRequest.RequestType requestType = request.getRequestType();switch (requestType) {case PING:logger.debug(""Received PING request from Bootstrap; responding"");echoPing(socket.getOutputStream());logger.debug(""Responded to PING request from Bootstrap"");break;case RELOAD:echoReload(socket.getOutputStream());minifi.shutdownHook(true);return;case SHUTDOWN:echoShutdown(socket.getOutputStream());minifi.shutdownHook(false);return;case DUMP:logger.info(""Received DUMP request from Bootstrap"");writeDump(socket.getOutputStream());break;case FLOW_STATUS_REPORT:logger.info(""Received FLOW_STATUS_REPORT request from Bootstrap"");String flowStatusRequestString = request.getArgs()[0];writeStatusReport(flowStatusRequestString, socket.getOutputStream());break;}} catch (final Throwable t) {} finally {try {socket.close();} catch (final IOException ioe) {logger.warn(""Failed to close socket to Bootstrap due to {}"", ioe.toString());}}});} catch (final Throwable t) {}}}}"	Yes
1760	public class A {public void scheduleReconnect() {Runnable startRunnable =new Runnable() {@Overridepublic void run() {try {MBeanServerConnection serverConnection = getNetworkConnection();if (notificationListener != null) {serverConnection.addNotificationListener(objectName,notificationListener,getEndpointConfiguration().getNotificationFilter(),getEndpointConfiguration().getNotificationHandback());}} catch (Exception e) {scheduleReconnect();}}};scheduledExecutor.schedule(startRunnable, getEndpointConfiguration().getDelayOnReconnect(), TimeUnit.MILLISECONDS);}}	Yes
1761	public class A {public static com.liferay.commerce.model.CommerceOrderSoap addCommerceOrder(long userId, long groupId, long commerceAccountId, long commerceCurrencyId)throws RemoteException {try {com.liferay.commerce.model.CommerceOrder returnValue =CommerceOrderServiceUtil.addCommerceOrder(userId, groupId, commerceAccountId, commerceCurrencyId);return com.liferay.commerce.model.CommerceOrderSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
1762	"public class A {private void pushDeploymentToPartition(final int partitionLeaderId, final int partition, final PushDeploymentRequest pushRequest) {pushRequest.partitionId(partition);final byte[] bytes = pushRequest.toBytes();final MemberId memberId = new MemberId(Integer.toString(partitionLeaderId));final CompletableFuture<byte[]> pushDeploymentFuture =atomix.getCommunicationService().send(DEPLOYMENT_PUSH_TOPIC, bytes, memberId, PUSH_REQUEST_TIMEOUT);pushDeploymentFuture.whenComplete((response, throwable) -> {if (throwable != null) {LOG.warn(""Failed to push deployment to node {} for partition {}"",partitionLeaderId,partition,throwable);handleRetry(partitionLeaderId, partition, pushRequest);} else {final DirectBuffer responseBuffer = new UnsafeBuffer(response);if (errorResponse.tryWrap(responseBuffer)) {handleErrorResponseOnPushDeploymentRequest(partitionLeaderId, partition, pushRequest, responseBuffer);}}});}}"	No
1763	"public class A {public void deleteAssetById(Long assetId) {logger.debug(""Deleting asset by id = [{}]"", assetId);authenticatedRestTemplate.delete(getBasePathForResource(assetId));}}"	No
1764	"public class A {@Overridepublic AttributeList getAttributes(String[] names) {AttributeList list = new AttributeList();for (String name : names) {try {list.add(new Attribute(name, getAttribute(name)));} catch (Exception e) {log.warn(""Error getting JMX attribute '{}'"", name, e);}}return list;}}"	No
1765	"public class A {protected void init() {while (!initialized) {_log.info(""Still waiting for context initialization"");try {TimeUnit.SECONDS.sleep(10);} catch (InterruptedException ex) {}}if (_agencyIds.isEmpty()) {_log.info(""no agency ids specified for GtfsRealtimeSource"");for (AgencyEntry agency : _transitGraphDao.getAllAgencies()) {_agencyIds.add(agency.getId());}if (_agencyIds.size() > 3) {_log.warn(""The default agency id set is quite large (n=""+ _agencyIds.size()+ "").  You might consider specifying the applicable agencies for your""+ "" GtfsRealtimeSource."");}}_log.info(""Number of agencies: "" + _agencyIds.size());for (String agency : _agencyIds) {_log.info(""Agency id: "" + agency);}_entitySource = new GtfsRealtimeEntitySource();_entitySource.setAgencyIds(_agencyIds);_entitySource.setTransitGraphDao(_transitGraphDao);if (_tripUpdatesUrl == null) {_log.warn(""no tripUpdatesUrl configured.  This is most likely a configuration issue"");}if (_vehiclePositionsUrl == null) {_log.warn(""no vehiclePositionsUrl configured.  This is most likely a configuration issue"");}if (_alertsUrl == null) {_log.warn(""no alertsUrl configured.  This is most likely a configuration issue"");}if (_refreshInterval > 0) {_log.info(""scheduling executor for refresh="" + _refreshInterval);_refreshTask =_scheduledExecutorService.scheduleAtFixedRate(new UpdateTask(), 0, _refreshInterval, TimeUnit.SECONDS);}}}"	No
1766	public class A {@Overridepublic void after() {deployment.close();}}	Yes
1767	"public class A {protected void commentMergeSubrepoPullRequest(PullRequest pullRequest) {try {String currentSHA = """";StringBuilder sb = new StringBuilder();sb.append(""https://raw.githubusercontent.com/liferay/"");sb.append(pullRequest.getGitHubRemoteGitRepositoryName());sb.append(""/"");sb.append(pullRequest.getUpstreamRemoteGitBranchName());sb.append(""/"");sb.append(pullRequest.getCIMergeSubrepo());sb.append(""/.gitrepo"");String gitrepoContent = processURL(sb.toString());Matcher matcher = _gitrepoSHAPattern.matcher(gitrepoContent);while (matcher.find()) {currentSHA = matcher.group(1);}matcher = _gitrepoRepoPattern.matcher(gitrepoContent);String repo = """";while (matcher.find()) {repo = matcher.group(1);}String mergeSHA = pullRequest.getCIMergeSHA();String compareURL =""https://github.com/liferay/"" + repo + ""/compare/"" + currentSHA + ""..."" + mergeSHA;if (_log.isInfoEnabled()) {}String message =""Subrepo changes: ""+ compareURL+ ""\n\nci:test:sf and ci:test:relevant must pass in order ""+ ""for auto-merge to initiate."";pullRequest.addComment(message);} catch (Exception exception) {if (_log.isInfoEnabled()) {_log.info(""Skip generation of the ci:merge diff because of an "" + ""exception"", exception);}}}}"	Yes
1768	"public class A {public void awaitCommits(long timeout, TimeUnit unit) throws InterruptedException {if (recordsToCommitLatch == null) {throw new IllegalStateException(""Illegal state encountered. expectedRecords() was not set for this task?"");}if (!recordsToCommitLatch.await(timeout, unit)) {String msg =String.format(""Insufficient records seen by task %s in %d millis. Records expected=%d, actual=%d"",taskId,unit.toMillis(timeout),expectedCommits,expectedCommits - recordsToCommitLatch.getCount());throw new DataException(msg);}}}"	Yes
1769	"public class A {@ExceptionHandler(OAuthProblemException.class)@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)public ModelAndView handleOAuthProblemException(OAuthProblemException ex) {ModelAndView modelAndView = new ModelAndView(OAUTH_ERROR_PAGE);modelAndView.addObject(""exception"", ex);modelAndView.addObject(""adminEmail"", adminEmail);return modelAndView;}}"	Yes
1770	"public class A {@Overridepublic void appendCommitRecord(long txID, boolean sync) throws Exception {checkStatus();JDBCJournalRecord r =new JDBCJournalRecord(-1, JDBCJournalRecord.COMMIT_RECORD, seq.incrementAndGet());r.setTxId(txID);r.setSync(sync);if (logger.isTraceEnabled()) {logger.trace(""appendCommitRecord txID="" + txID + "" sync="" + sync);}appendRecord(r);}}"	No
1771	"public class A {@Overridepublic void stop() {synchronized (this.lifeCycleMonitor) {if (this.running) {doStop();this.running = false;logger.info(""Stopped."");}}}}"	Yes
1772	"public class A {@Test(timeout = 1000)public void testFeedingAcks() throws Exception {int numIterations = 10000;AckManager manager = new AckManager();Channel channel = new MockChannel();manager.init();long start = System.currentTimeMillis();Timber.LogEvent event;for (int i = 0; i < numIterations; i++) {event = getDummyLogEventBuilder().setId(""id"" + i).build();manager.ack(channel, event);}long duration = System.currentTimeMillis() - start;log.info(""Processed ""+ numIterations+ "" acknowledgements in ""+ duration+ ""ms (""+ (numIterations / ((double) duration / 1000))+ "" per sec)"");manager.shutdown();}}"	No
1773	"public class A {@Deprecated@SuppressWarnings(""rawtypes"")public <T> SubscriptionHandle subscribeToMembers(Group parent, Sensor<T> sensor, Closure c) {LOG.warn(""Use of groovy.lang.Closure is deprecated in""+ "" BasicSubscriptionContext.subscribeToMembers()"");return subscribeToMembers(Collections.<String, Object>emptyMap(), parent, sensor, c);}}"	No
1774	"public class A {@Testpublic void testAOuNet() {Connection.getAdsStructureHandler().setTestVariables();logger.info(""*** START ***"");final Set<User> users = createAOuNetUser(""users_"" + Menu.getName(this.getClass()));final String usergroupsDn =createAOuNetUserGroup(""usergroups_"" + Menu.getName(this.getClass()), users);logger.info(""*** END ***"");Connection.getAdsStructureHandler().testAll(Menu.getQuantityUsers() * Menu.getQuantityOUs(),(Menu.getNormal() + Menu.getUpper()) * Menu.getQuantityOUs());}}"	No
1775	"public class A {@PayloadRoot(namespace = NAMESPACE_URI, localPart = ""storeSecretsRequest"")@ResponsePayloadpublic StoreSecretsResponse storeSecretsRequest(@RequestPayload final StoreSecretsRequest request)throws OsgpException {log.info(""Handling incoming SOAP request 'storeSecretsRequest' for device {}"",request.getDeviceId());if (log.isDebugEnabled()) {}final StoreSecretsResponse response = new StoreSecretsResponse();final TypedSecrets soapTypedSecrets = request.getTypedSecrets();if (soapTypedSecrets == null) {throw new TechnicalException(STR_MISSING_TYPED_SECRETS);}final List<TypedSecret> typedSecretList =this.converter.convertToTypedSecrets(soapTypedSecrets);this.secretManagementService.storeSecrets(request.getDeviceId(), typedSecretList);response.setResult(OsgpResultType.OK);return response;}}"	Yes
1776	public class A {public boolean checkConnection() {if (!socket.isConnected()) {try {socket.open();return socket.isConnected();} catch (IOException e) {socket.close();return false;}} else {return !getVersion().isEmpty();}}}	Yes
1777	"public class A {protected Set<String> searchObjectForMultiValuedAttributeWithCache(DirContext context,String objectDN,String baseDn,String attribute,boolean cacheNullResultsAsEmptySet)throws NamingException {if (attributeCache != null) {String cacheKey = objectDN + ""/"" + attribute;Set<String> results = attributeCache.get(cacheKey);if (results == null) {results = searchObjectForMultiValuedAttribute(context, objectDN, baseDn, attribute);if (results == null) {if (cacheNullResultsAsEmptySet) {results = new HashSet<String>();} else {if (log.isDebugEnabled())}}if (results != null) {if (log.isDebugEnabled())attributeCache.put(cacheKey, results);}}return results;}return searchObjectForMultiValuedAttribute(context, objectDN, baseDn, attribute);}}"	Yes
1778	public class A {public void close() {for (ZipFile openArchive : this.openArchives) {try {openArchive.close();} catch (IOException ioe) {}}this.openArchives.clear();}}	Yes
1779	"public class A {@Overridepublic void getMutesList(final long cursor) {getDispatcher().invokeLater(new AsyncTask(MUTE_LIST, listeners) {@Overridepublic void invoke(List<TwitterListener> listeners) throws TwitterException {ResponseList<User> users = twitter.getMutesList(cursor);for (TwitterListener listener : listeners) {try {listener.gotMutesList(users);} catch (Exception e) {logger.warn(""Exception at getMutesList"", e);}}}});}}"	No
1780	"public class A {public void run() {while (running) {try {try {if (timeoutWatchSet.size() == 0) {selector.select();} else {long nextTimeout = timeoutWatchSet.first().getTimeoutTimestamp();long selectTime = nextTimeout - System.currentTimeMillis();if (selectTime > 0) {selector.select(selectTime);} else {selector.selectNow();}}} catch (IOException e) {LOGGER.error(""Caught IOException in TAsyncClientManager!"", e);}transitionMethods();timeoutMethods();startPendingMethods();} catch (Exception exception) {LOGGER.error(""Ignoring uncaught exception in SelectThread"", exception);}}}}"	No
1781	"public class A {@Overridepublic void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)throws IOException, ServletException {HttpServletRequest httpRequest = (HttpServletRequest) request;HttpServletResponse httpResponse = (HttpServletResponse) response;try {boolean newToken = false;AuthenticationToken token = getToken(httpRequest);if (token == null) {if (LOG.isDebugEnabled()) {LOG.debug(""Request [{}] triggering authentication"", getRequestURL(httpRequest));}token = authHandler.authenticate(httpRequest, httpResponse);if (token != null && token != AuthenticationToken.ANONYMOUS) {token.setExpires(System.currentTimeMillis() + getValidity() * 1000);}newToken = true;}if (token != null) {if (LOG.isDebugEnabled()) {}final AuthenticationToken authToken = token;httpRequest =new HttpServletRequestWrapper(httpRequest) {@Overridepublic String getAuthType() {return authToken.getType();}@Overridepublic String getRemoteUser() {return authToken.getUserName();}@Overridepublic Principal getUserPrincipal() {return (authToken != AuthenticationToken.ANONYMOUS) ? authToken : null;}};if (newToken && token != AuthenticationToken.ANONYMOUS) {String signedToken = signer.sign(token.toString());Cookie cookie = createCookie(signedToken);httpResponse.addCookie(cookie);}filterChain.doFilter(httpRequest, httpResponse);}} catch (AuthenticationException ex) {if (!httpResponse.isCommitted()) {Cookie cookie = createCookie("""");cookie.setMaxAge(0);httpResponse.addCookie(cookie);httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED, ex.getMessage());}}}}"	Yes
1782	"public class A {static LogFile.MetaDataWriter getMetaDataWriter(File file, int logFileID) throws IOException {RandomAccessFile logFile = null;try {File metaDataFile = Serialization.getMetaDataFile(file);if (metaDataFile.exists()) {return new LogFileV3.MetaDataWriter(file, logFileID);}logFile = new RandomAccessFile(file, ""r"");int version = logFile.readInt();if (Serialization.VERSION_2 == version) {return new LogFileV2.MetaDataWriter(file, logFileID);}throw new IOException(""File "" + file + "" has bad version "" + Integer.toHexString(version));} finally {if (logFile != null) {try {logFile.close();} catch (IOException e) {}}}}}"	Yes
1783	public class A {@Overridepublic void operationComplete(final Future<Channel> future) throws Exception {if (future.isSuccess()) {final Channel channel = future.get();final Certificate cert =channel.pipeline().get(SslHandler.class).engine().getSession().getPeerCertificates()[0];final PublicKey publicKey = cert.getPublicKey();final Optional<String> deviceId = allowedDevicesMonitor.findDeviceIdByPublicKey(publicKey);if (deviceId.isEmpty()) {channel.close();} else {final CallHomeTlsSessionContext tlsSessionContext =new CallHomeTlsSessionContext(deviceId.get(), channel, sslHandlerFactory, subsystemListener);tlsSessionContext.openNetconfChannel(channel);}} else {future.get().close();}}}	Yes
1784	"public class A {@Overridepublic void execute() throws ResourceUnavailableException, ResourceAllocationException {try {Vlan result = _configService.createVlanAndPublicIpRange(this);if (result != null) {VlanIpRangeResponse response = _responseGenerator.createVlanIpRangeResponse(result);response.setResponseName(getCommandName());this.setResponseObject(response);} else {throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, ""Failed to create vlan ip range"");}} catch (ConcurrentOperationException ex) {s_logger.warn(""Exception: "", ex);throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, ex.getMessage());} catch (InsufficientCapacityException ex) {s_logger.info(ex);throw new ServerApiException(ApiErrorCode.INSUFFICIENT_CAPACITY_ERROR, ex.getMessage());}}}"	No
1785	"public class A {private boolean t2xCompareFlow(Network n, String id, double p1, double q1, double p2, double q2) {TwoWindingsTransformer twt = n.getTwoWindingsTransformer(id);T2xFlow actual = twoWindingsTransformerFlow(twt);T2xFlow expected = new T2xFlow();expected.p1 = p1;expected.q1 = q1;expected.p2 = p2;expected.q2 = q2;boolean ok = sameFlow(expected, actual);if (!ok && LOG.isErrorEnabled()) {LOG.error(String.format(""Expected P1 %12.6f Q1 %12.6f P2 %12.6f Q2 %12.6f"",expected.p1, expected.q1, expected.p2, expected.q2));}return ok;}}"	Yes
1786	public class A {private void handleSaslAuthPending(LdapSession ldapSession, BindRequest bindRequest)throws Exception {String saslMechanism = bindRequest.getSaslMechanism();if (Strings.isEmpty(saslMechanism)|| !ldapSession.getSaslProperty(SaslConstants.SASL_MECH).equals(saslMechanism)) {sendAuthMethNotSupported(ldapSession, bindRequest);return;}MechanismHandler mechanismHandler = handlers.get(saslMechanism);if (mechanismHandler == null) {String message = I18n.err(I18n.ERR_161, saslMechanism);ldapSession.clearSaslProperties();ldapSession.setAnonymous();throw new IllegalArgumentException(message);}SaslServer ss = mechanismHandler.handleMechanism(ldapSession, bindRequest);generateSaslChallengeOrComplete(ldapSession, ss, bindRequest);}}	Yes
1787	"public class A {@PayloadRoot(localPart = ""AddDeviceRequest"", namespace = SMARTMETER_INSTALLATION_NAMESPACE)@ResponsePayloadpublic AddDeviceAsyncResponse addDevice(@OrganisationIdentification final String organisationIdentification,@RequestPayload final AddDeviceRequest request,@MessagePriority final String messagePriority,@ScheduleTime final String scheduleTime,@ResponseUrl final String responseUrl,@BypassRetry final String bypassRetry)throws OsgpException {AsyncResponse asyncResponse = null;try {final SmartMeteringDevice device =this.installationMapper.map(request.getDevice(), SmartMeteringDevice.class);final DeviceModel deviceModel =new DeviceModel(request.getDeviceModel().getManufacturer(),request.getDeviceModel().getModelCode(),"""");final AddSmartMeterRequest addSmartMeterRequest =new AddSmartMeterRequest(device, deviceModel);final RequestMessageMetadata requestMessageMetadata =RequestMessageMetadata.newBuilder().withOrganisationIdentification(organisationIdentification).withDeviceIdentification(device.getDeviceIdentification()).withDeviceFunction(null).withMessageType(MessageType.ADD_METER).withMessagePriority(messagePriority).withScheduleTime(scheduleTime).withBypassRetry(bypassRetry).build();asyncResponse =this.requestService.enqueueAndSendRequest(requestMessageMetadata, addSmartMeterRequest);this.saveResponseUrlIfNeeded(asyncResponse.getCorrelationUid(), responseUrl);} catch (final ConstraintViolationException e) {throw new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR,ComponentType.WS_CORE,new ValidationException(e.getConstraintViolations()));} catch (final Exception e) {this.handleException(e);}return this.installationMapper.map(asyncResponse, AddDeviceAsyncResponse.class);}}"	Yes
1788	"public class A {@Overridepublic Answer setUpGuestNetwork(SetupGuestNetworkCommand cmd) {String domrName = cmd.getAccessDetail(NetworkElementCommand.ROUTER_NAME);try {MockVMVO vms = _mockVmDao.findByVmName(domrName);if (vms == null) {return new Answer(cmd, false, ""Can not find VM "" + domrName);}return new Answer(cmd, true, ""success"");} catch (Exception e) {String msg = ""Creating guest network failed due to "" + e.toString();return new Answer(cmd, false, msg);}}}"	Yes
1789	"public class A {@PreAuthorize(""hasRole('"" + IdRepoEntitlement.REPORT_EXECUTE + ""')"")@Overridepublic ExecTO execute(final String key, final Date startAt, final boolean dryRun) {Report report = reportDAO.find(key);if (report == null) {throw new NotFoundException(""Report "" + key);}if (!report.isActive()) {SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Scheduling);sce.getElements().add(""Report "" + key + "" is not active"");throw sce;}try {jobManager.register(report,startAt,confParamOps.get(AuthContextUtils.getDomain(), ""tasks.interruptMaxRetries"", 1L, Long.class),AuthContextUtils.getUsername());scheduler.getScheduler().triggerJob(JobNamer.getJobKey(report));} catch (Exception e) {SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Scheduling);sce.getElements().add(e.getMessage());throw sce;}ExecTO result = new ExecTO();result.setJobType(JobType.REPORT);result.setRefKey(report.getKey());result.setRefDesc(binder.buildRefDesc(report));result.setStart(new Date());result.setStatus(ReportExecStatus.STARTED.name());result.setMessage(""Job fired; waiting for results..."");result.setExecutor(AuthContextUtils.getUsername());return result;}}"	Yes
1790	public class A {@Overrideprotected void process(IItem evidence) throws Exception {Long len = evidence.getLength();if (indexTempOnSSD && len != null && len <= MAX_TEMPFILE_LEN) {try {if (evidence.getFile() == null && !evidence.isSubItem()) {evidence.getTempFile();}} catch (IOException e) {}}}}	Yes
1791	"public class A {private void when_shutDown(boolean shutdownCoordinator, boolean snapshotted) {DAG dag = new DAG();final int numItems = 50_000;Vertex source =dag.newVertex(""source"", throttle(() -> new EmitIntegersP(numItems), 10_000)).localParallelism(1);Vertex sink = dag.newVertex(""sink"", SinkProcessors.writeListP(""sink""));dag.edge(between(source, sink));Job job =client.newJob(dag,new JobConfig().setProcessingGuarantee(snapshotted ? EXACTLY_ONCE : NONE).setSnapshotIntervalMillis(HOURS.toMillis(1)));assertJobStatusEventually(job, JobStatus.RUNNING);sleepSeconds(1);int shutDownInstance = shutdownCoordinator ? 0 : 1;int liveInstance = shutdownCoordinator ? 1 : 0;shutdown(instances[shutDownInstance]);job.join();Map<Integer, Integer> expected;Map<Integer, Integer> actual =new ArrayList<>(instances[liveInstance].<Integer>getList(""sink"")).stream().collect(Collectors.toMap(Function.identity(), item -> 1, Integer::sum));if (snapshotted) {assertEquals(EmitIntegersP.savedCounters.toString(), 2, EmitIntegersP.savedCounters.size());int minCounter =EmitIntegersP.savedCounters.values().stream().mapToInt(Integer::intValue).min().getAsInt();expected =IntStream.range(0, numItems).boxed().collect(Collectors.toMap(Function.identity(), item -> item < minCounter ? 2 : 1));assertEquals(expected, actual);} else {assertEquals(3, actual.get(0).intValue());assertEquals(3, actual.get(1).intValue());assertEquals(1, actual.get(numItems - 1).intValue());}}}"	Yes
1792	"public class A {@Testpublic void testDurableSubscriptionPersistence_1() throws Exception {Connection conn = null;try {conn = createConnection();conn.setClientID(""five"");Session s = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);MessageConsumer ds =s.createDurableSubscriber(ActiveMQServerTestCase.topic1, ""sub"", null, false);MessageProducer p = s.createProducer(ActiveMQServerTestCase.topic1);p.setDeliveryMode(DeliveryMode.PERSISTENT);TextMessage tm = s.createTextMessage(""thebody"");p.send(tm);log.debug(""message sent"");conn.close();stop();startNoDelete();deployAndLookupAdministeredObjects();conn = createConnection();conn.setClientID(""five"");s = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);conn.start();ds = s.createDurableSubscriber(ActiveMQServerTestCase.topic1, ""sub"", null, false);TextMessage rm = (TextMessage) ds.receive(3000);ProxyAssertSupport.assertNotNull(rm);ProxyAssertSupport.assertEquals(""thebody"", rm.getText());ds.close();s.unsubscribe(""sub"");} finally {if (conn != null) {conn.close();}}}}"	No
1793	"public class A {@Overrideprotected void doStop() throws Exception {if (LOG.isDebugEnabled() && statisticsEnabled) {LOG.debug(""Stopping DefaultReactiveExecutor [createdWorkers: {}, runningWorkers: {}, pendingTasks:""+ "" {}]"",getCreatedWorkers(),getRunningWorkers(),getPendingTasks());}}}"	No
1794	"public class A {public MBstnStatusTxt merge(MBstnStatusTxt detachedInstance) {log.debug(""merging MBstnStatusTxt instance"");try {MBstnStatusTxt result =(MBstnStatusTxt) sessionFactory.getCurrentSession().merge(detachedInstance);return result;} catch (RuntimeException re) {throw re;}}}"	Yes
1795	public class A {@Overridepublic void removeDomain(String domainName) throws ConfigurationServiceException {dao.delete(domainName);}}	Yes
1796	"public class A {public static boolean rename(FileSystem fs, Path from, Path to) {try {Method renameMethod = findRenameMethodRecursively(fs.getClass());renameMethod.invoke(fs, from, to, new Options.Rename[] {Options.Rename.NONE});return true;} catch (InvocationTargetException ex) {if (ex.getTargetException() instanceof FileAlreadyExistsException) {log.info(ex, ""Destination exists while renaming [%s] to [%s]"", from, to);return false;} else {throw new RuntimeException(ex);}} catch (NoSuchMethodException | IllegalAccessException ex) {for (Method method : fs.getClass().getDeclaredMethods()) {}throw new RuntimeException(ex);}}}"	Yes
1797	"public class A {public static com.liferay.polls.model.PollsQuestion getQuestion(HttpPrincipal httpPrincipal, long questionId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(PollsQuestionServiceUtil.class, ""getQuestion"", _getQuestionParameterTypes2);MethodHandler methodHandler = new MethodHandler(methodKey, questionId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.polls.model.PollsQuestion) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
1798	"public class A {@Overridepublic Set<String> getExpired(Set<String> candidates) {if (!isStarted()) throw new IllegalStateException(""Not started"");long now = System.currentTimeMillis();final Set<String> expired = new HashSet<>();Runnable r =() -> {Set<String> expiredCandidates = doCheckExpired(candidates, now);if (expiredCandidates != null) expired.addAll(expiredCandidates);};_context.run(r);try {long t = 0;if (_lastExpiryCheckTime <= 0) t = now - TimeUnit.SECONDS.toMillis(_gracePeriodSec * 3);else {if (now > (_lastExpiryCheckTime + TimeUnit.SECONDS.toMillis(_gracePeriodSec)))t = now - TimeUnit.SECONDS.toMillis(_gracePeriodSec);}if (t > 0) {if (LOG.isDebugEnabled())LOG.debug(""Searching for sessions expired before {} for context {}"",t,_context.getCanonicalContextPath());final long expiryTime = t;r =() -> {Set<String> tmp = doGetExpired(expiryTime);if (tmp != null) expired.addAll(tmp);};_context.run(r);}} finally {_lastExpiryCheckTime = now;}try {if (now > (_lastOrphanSweepTime + TimeUnit.SECONDS.toMillis(10 * _gracePeriodSec))) {if (LOG.isDebugEnabled())cleanOrphans(now - TimeUnit.SECONDS.toMillis(10 * _gracePeriodSec));}} finally {_lastOrphanSweepTime = now;}return expired;}}"	Yes
1799	public class A {private void internalStop() {this.connection = null;this.channelStateUpdateListener = null;hasSubscribed = false;cachedValue.resetState();}}	Yes
1800	"public class A {@Overridepublic boolean apply(final String serverId) {checkNotNull(serverId, ""serverId"");final Server server = api.getServer(serverId);if (server == null) {throw new IllegalStateException(String.format(""Server %s is not found"", serverId));}final VmTools vmTools = server.guest().vmTools();return vmTools != null && vmTools.runningStatus() == VmTools.RunningStatus.RUNNING;}}"	Yes
1801	"public class A {@Overridepublic void addGroup(Group group) throws ApsSystemException {try {this.getGroupDAO().addGroup(group);this.getCacheWrapper().addGroup(group);} catch (Throwable t) {throw new ApsSystemException(""Error detected while adding a group"", t);}}}"	Yes
1802	"public class A {@Overridepublic boolean handleSecurity(HttpServletRequest request, HttpServletResponse response)throws IOException {HttpSession session = request.getSession(false);StringBuilder info =new StringBuilder(""\n  Request="" + request.getClass().getName() + ""\n  Cookies:\n"");if (request.getCookies() != null) {for (Cookie cookie : request.getCookies()) {info.append(""    "").append(cookie.getName()).append(""="").append(cookie.getValue()).append(""\n"");}} else {info.append(""    no cookie found"");}info.append(""\n  Session="").append(session).append(""\n"");boolean success = session != null;return success || request.getCookies() == null;}}"	Yes
1803	"public class A {public static void updateLatestStatus(String index, String type, String loaddate) {String updateJson =""{\""script\"":{\""inline\"": \""ctx._source.latest=false\""},\""query\"": {\""bool\"": {\""must\"": [{""+ "" \""match\"": {\""latest\"":true}}], \""must_not\"": [{\""match\"":""+ "" {\""_loaddate.keyword\"":\""""+ loaddate+ ""\""}}]}}}"";try {invokeAPI(""POST"", index + ""/"" + type + ""/"" + ""_update_by_query"", updateJson);} catch (IOException e) {}}}"	Yes
1804	public class A {private CSPManager getServiceManager(String filename) {CSPManager cspm = new CSPManagerImpl();cspm.register(new CoreConfig());cspm.register(new Spec());cspm.register(new ServicesStorageGenerator());try {cspm.go();cspm.configure(getSource(filename), new ConfigFinder(null), false);} catch (CSPDependencyException e) {log.error(e.getLocalizedMessage());}return cspm;}}	Yes
1805	public class A {@Overridepublic boolean scaleNodeResource(String nodeName, int cpuNumber, long memory) {NodeEntity node = clusterEntityMgr.findNodeByName(nodeName);DiskEntity swapDisk = findSwapDisk(node);VcDatastore targetDs = null;long newSwapSizeInMB = 0;if (memory > 0) {newSwapSizeInMB =(((long) Math.ceil(memory * node.getNodeGroup().getSwapRatio()) + 1023) / 1024) * 1024;targetDs = getTargetDsForSwapDisk(node, swapDisk, newSwapSizeInMB);}ScaleVMSP scaleVMSP =new ScaleVMSP(node.getMoId(), cpuNumber, memory, targetDs, swapDisk, newSwapSizeInMB);return VcVmUtil.runSPOnSingleVM(node, scaleVMSP);}}	Yes
1806	public class A {@Overridepublic void addChannelListener(ChannelListener listener) {ChannelListener.validateListener(listener);if (!isOpen()) {return;}if (this.channelListeners.add(listener)) {if (log.isTraceEnabled()) {}} else {if (log.isTraceEnabled()) {}}}}	Yes
1807	"public class A {public static boolean isSession(HttpServletRequest request) {logger.entry(""begin isSession()"");boolean flag = false;try {SessionObject sesObj =(SessionObject)request.getSession().getAttribute(FdahpStudyDesignerConstants.SESSION_OBJECT);if (sesObj != null) {flag = true;}} catch (Exception e) {}logger.exit(""FdahpStudyDesignerUtil - isSession() :: Ends"");return flag;}}"	Yes
1808	public class A {protected void invokeIsolated(final boolean success) {try {tc.createIsolationDelegate().delegateWork(new WorkExecutorVisitable<Void>() {@Overridepublic Void accept(WorkExecutor<Void> executor, Connection connection)throws SQLException {invoke(success);return null;}},requiresTransaction);} catch (HibernateException e) {if (log.isTraceEnabled()) {}}}}	Yes
1809	public class A {@Overridepublic void handleException(RepeatContext context, Throwable throwable) throws Throwable {Level key = exceptionClassifier.classify(throwable);if (Level.ERROR.equals(key)) {} else if (Level.WARN.equals(key)) {} else if (Level.DEBUG.equals(key) && logger.isDebugEnabled()) {} else if (Level.RETHROW.equals(key)) {throw throwable;}}}	Yes
1810	"public class A {private static ChannelBuilder create(SecurityProtocol securityProtocol,Mode mode,JaasContext.Type contextType,AbstractConfig config,ListenerName listenerName,boolean isInterBrokerListener,String clientSaslMechanism,boolean saslHandshakeRequestEnable,CredentialCache credentialCache,DelegationTokenCache tokenCache,Time time,LogContext logContext,Supplier<ApiVersionsResponse> apiVersionSupplier) {Map<String, Object> configs = channelBuilderConfigs(config, listenerName);ChannelBuilder channelBuilder;switch (securityProtocol) {case SSL:requireNonNullMode(mode, securityProtocol);channelBuilder =new SslChannelBuilder(mode, listenerName, isInterBrokerListener, logContext);break;case SASL_SSL:case SASL_PLAINTEXT:requireNonNullMode(mode, securityProtocol);Map<String, JaasContext> jaasContexts;String sslClientAuthOverride = null;if (mode == Mode.SERVER) {@SuppressWarnings(""unchecked"")List<String> enabledMechanisms =(List<String>) configs.get(BrokerSecurityConfigs.SASL_ENABLED_MECHANISMS_CONFIG);jaasContexts = new HashMap<>(enabledMechanisms.size());for (String mechanism : enabledMechanisms)jaasContexts.put(mechanism, JaasContext.loadServerContext(listenerName, mechanism, configs));if (listenerName != null && securityProtocol == SecurityProtocol.SASL_SSL) {String configuredClientAuth =(String) configs.get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);String listenerClientAuth =(String)config.originalsWithPrefix(listenerName.configPrefix(), true).get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);if (listenerClientAuth == null) {sslClientAuthOverride = SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);if (configuredClientAuth != null&& !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {log.warn(""Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed""+ "" configuration can be used to enable SSL client authentication for""+ "" SASL_SSL listeners. In future releases, broker-wide option without""+ "" listener prefix may be applied to SASL_SSL listeners as well. All""+ "" configuration options intended for specific listeners should be""+ "" listener-prefixed."",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);}}}} else {JaasContext jaasContext =contextType == JaasContext.Type.CLIENT? JaasContext.loadClientContext(configs): JaasContext.loadServerContext(listenerName, clientSaslMechanism, configs);jaasContexts = Collections.singletonMap(clientSaslMechanism, jaasContext);}channelBuilder =new SaslChannelBuilder(mode,jaasContexts,securityProtocol,listenerName,isInterBrokerListener,clientSaslMechanism,saslHandshakeRequestEnable,credentialCache,tokenCache,sslClientAuthOverride,time,logContext,apiVersionSupplier);break;case PLAINTEXT:channelBuilder = new PlaintextChannelBuilder(listenerName);break;default:throw new IllegalArgumentException(""Unexpected securityProtocol "" + securityProtocol);}channelBuilder.configure(configs);return channelBuilder;}}"	No
1811	public class A {private void startLogger(final InputStream stream) {new Thread() {public void run() {try (BufferedReader br = new BufferedReader(new InputStreamReader(stream))) {String line = br.readLine();while (line != null) {logger.info(line);line = br.readLine();}br.close();} catch (final Exception e) {}}}.start();}}	Yes
1812	public class A {@Overridepublic void updateSize() {final PieVizModel vizModel = getVizModel();if (vizModel == null) {return;}final Dimension newDrawingSpace = getDrawingPaneDimension();if (vizModel.setDrawingSpace(newDrawingSpace)) {updatePaintModel();}}}	Yes
1813	"public class A {@Overridepublic BPELPlan buildPlan(final String csarName,final AbstractDefinitions definitions,final AbstractServiceTemplate serviceTemplate) {final String processName = serviceTemplate.getId() + ""_buildPlan"";final String processNamespace = serviceTemplate.getTargetNamespace() + ""_buildPlan"";final AbstractPlan buildPlan =generatePOG(new QName(processNamespace, processName).toString(), definitions, serviceTemplate);LOG.debug(""Generated the following abstract prov plan: "");final BPELPlan newBuildPlan =this.planHandler.createEmptyBPELPlan(processNamespace, processName, buildPlan, ""initiate"");newBuildPlan.setTOSCAInterfaceName(""OpenTOSCA-Lifecycle-Interface"");newBuildPlan.setTOSCAOperationname(""initiate"");this.planHandler.initializeBPELSkeleton(newBuildPlan, csarName);this.planHandler.registerExtension(""http://www.apache.org/ode/bpel/extensions/bpel4restlight"", true, newBuildPlan);final Property2VariableMapping propMap =this.propertyInitializer.initializePropertiesAsVariables(newBuildPlan, serviceTemplate);this.propertyOutputInitializer.initializeBuildPlanOutput(definitions, newBuildPlan, propMap, serviceTemplate);this.serviceInstanceHandler.appendCreateServiceInstanceVarsAndAnitializeWithInstanceDataAPI(newBuildPlan);String serviceInstanceUrl =this.serviceInstanceHandler.findServiceInstanceUrlVariableName(newBuildPlan);String serviceInstanceId =this.serviceInstanceHandler.findServiceInstanceIdVarName(newBuildPlan);String serviceTemplateUrl =this.serviceInstanceHandler.findServiceTemplateUrlVariableName(newBuildPlan);String planInstanceUrl =this.serviceInstanceHandler.findPlanInstanceUrlVariableName(newBuildPlan);this.emptyPropInit.initializeEmptyPropertiesAsInputParam(newBuildPlan,propMap,serviceInstanceUrl,serviceInstanceId,serviceTemplateUrl,planInstanceUrl,serviceTemplate,csarName);runPlugins(newBuildPlan,propMap,serviceInstanceUrl,serviceInstanceId,serviceTemplateUrl,planInstanceUrl,csarName);this.correlationHandler.addCorrellationID(newBuildPlan);String serviceInstanceURLVarName =this.serviceInstanceHandler.findServiceInstanceUrlVariableName(newBuildPlan);this.serviceInstanceHandler.appendSetServiceInstanceState(newBuildPlan, newBuildPlan.getBpelMainFlowElement(), ""CREATING"", serviceInstanceURLVarName);this.serviceInstanceHandler.appendSetServiceInstanceState(newBuildPlan,newBuildPlan.getBpelMainSequenceOutputAssignElement(),""CREATED"",serviceInstanceURLVarName);String planInstanceUrlVarName =this.serviceInstanceHandler.findPlanInstanceUrlVariableName(newBuildPlan);this.serviceInstanceHandler.appendSetServiceInstanceState(newBuildPlan, newBuildPlan.getBpelMainFlowElement(), ""RUNNING"", planInstanceUrlVarName);this.serviceInstanceHandler.appendSetServiceInstanceState(newBuildPlan,newBuildPlan.getBpelMainSequenceOutputAssignElement(),""FINISHED"",planInstanceUrlVarName);this.finalizer.finalize(newBuildPlan);LOG.debug(""Created BuildPlan:"");return newBuildPlan;}}"	Yes
1814	"public class A {@Test(groups = {""journeyPattern""},description = ""3-JourneyPattern-1"",priority = 3)public void verifyTest3_1() throws Exception {Context context = initValidatorContext();context.put(VALIDATION, fullparameters);context.put(VALIDATION_REPORT, new ValidationReport());Assert.assertNotNull(fullparameters, ""no parameters for test"");importLines(""3-JourneyPattern-1.xml"", 1, 1, true);utx.begin();em.joinTransaction();List<Line> beans = lineDao.findAll();Assert.assertFalse(beans.isEmpty(), ""No data for test"");Line line1 = beans.get(0);Route route1 = null;ValidationData data = new ValidationData();for (Route route : line1.getRoutes()) {data.getJourneyPatterns().addAll(route.getJourneyPatterns());if (route.getJourneyPatterns().size() == 2) {route1 = route;}}route1.setObjectId(""NINOXE:Route:checkedRoute"");JourneyPattern jp1 = route1.getJourneyPatterns().get(0);jp1.setObjectId(""NINOXE:JourneyPattern:checkedJP"");context.put(VALIDATION_DATA, data);data.getRoutes().addAll(line1.getRoutes());checkPoint.validate(context, null);ValidationReport report = (ValidationReport) context.get(VALIDATION_REPORT);Assert.assertNotEquals(report.getCheckPoints().size(), 0, "" report must have items"");CheckPointReport checkPointReport = report.findCheckPointReportByName(""3-JourneyPattern-1"");Assert.assertNotNull(checkPointReport, ""report must contain a 3-JourneyPattern-1 checkPoint"");Assert.assertEquals(checkPointReport.getState(),ValidationReporter.RESULT.NOK,"" checkPointReport must be nok"");Assert.assertEquals(checkPointReport.getSeverity(),CheckPointReport.SEVERITY.WARNING,"" checkPointReport must be on level warning"");Assert.assertEquals(checkPointReport.getCheckPointErrorCount(), 1, "" checkPointReport must have 1 item"");String detailKey = ""3-JourneyPattern-1"".replaceAll(""-"", ""_"").toLowerCase();List<CheckPointErrorReport> details = checkReportForTest(report, ""3-JourneyPattern-1"", -1);for (CheckPointErrorReport detail : details) {Assert.assertTrue(detail.getKey().startsWith(detailKey),""details key should start with test key : expected ""+ detailKey+ "", found : ""+ detail.getKey());Assert.assertEquals(detail.getSource().getObjectId(), jp1.getObjectId(), ""jp 1 must be source of error"");}utx.rollback();}}"	Yes
1815	"public class A {public void close() throws IOException {synchronized (closeLock) {if (closed) return;closed = true;workQueue.add(CLOSED_MARKER);}if (syncThread != null) {try {syncThread.join();} catch (InterruptedException e) {throw new RuntimeException(e);}}if (!workQueue.isEmpty()) {log.error(""WAL work queue not empty after sync thread exited"");throw new IllegalStateException(""WAL work queue not empty after sync thread exited"");}if (encryptingLogFile != null)try {logFile.close();} catch (IOException ex) {throw new LogClosedException();}}}"	Yes
1816	"public class A {@Overridepublic Answer delete(TagSystem object) {MessageEvent msg = null;final String query = ""DELETE FROM tagsystem WHERE tag = ? and system = ? "";if (LOG.isDebugEnabled()) {}Connection connection = this.databaseSpring.connect();try {PreparedStatement preStat = connection.prepareStatement(query);try {preStat.setString(1, object.getTag());preStat.setString(2, object.getSystem());preStat.executeUpdate();msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_OK);msg.setDescription(msg.getDescription().replace(""%ITEM%"", OBJECT_NAME).replace(""%OPERATION%"", ""DELETE""));} catch (SQLException exception) {msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED);msg.setDescription(msg.getDescription().replace(""%DESCRIPTION%"", exception.toString()));} finally {preStat.close();}} catch (SQLException exception) {msg = new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED);msg.setDescription(msg.getDescription().replace(""%DESCRIPTION%"", exception.toString()));} finally {try {if (connection != null) {connection.close();}} catch (SQLException exception) {}}return new Answer(msg);}}"	Yes
1817	"public class A {private StreamList obtainList(Long appId, File file, Direction direction) {String path = null;try {path = file.getCanonicalPath();} catch (IOException e) {ErrorManager.fatal(""Cannot create stream for file ""+ file.getAbsolutePath()+ "" with direction ""+ direction,e);return null;}if (onWindows) {path = path.toLowerCase();}StreamList list = fileToStreams.get(path);if (list == null) {if (DEBUG) {LOGGER.debug(""First stream on the list for file "" + path + "" with direction "" + direction);}String renaming = null;switch (direction) {case IN:case IN_DELETE:case CONCURRENT:renaming = itApi.openFile(appId, path, Direction.IN);break;case OUT:renaming = itApi.openFile(appId, path, Direction.OUT);break;case COMMUTATIVE:case INOUT:renaming = itApi.openFile(appId, path, Direction.INOUT);break;}list = new StreamList(renaming, direction);synchronized (fileToStreams) {fileToStreams.put(path, list);}} else {if (direction != Direction.IN || list.written) {}}if (direction != Direction.IN) {list.setWritten(true);}if (direction == Direction.INOUT) {list.setAppend(true);}if (DEBUG) {LOGGER.debug(""New stream for file ""+ path+ "" with renaming ""+ list.getRenaming()+ "" and direction ""+ direction);}return list;}}"	Yes
1818	"public class A {@Overrideprotected void setRemoteConnectionOpenHandler(final ProtonConnection connection) {connection.sessionOpenHandler(remoteOpenSession -> handleSessionOpen(connection, remoteOpenSession));connection.senderOpenHandler(remoteOpenSender -> handleSenderOpen(connection, remoteOpenSender));connection.disconnectHandler(con -> {con.close();con.disconnect();});connection.closeHandler(remoteClose -> {connection.close();connection.disconnect();});connection.openHandler(remoteOpen -> {if (remoteOpen.failed()) {LOG.debug(""ignoring peer's open frame containing error"", remoteOpen.cause());} else {processRemoteOpen(remoteOpen.result());}});}}"	No
1819	"public class A {@BeforeClasspublic static void createAndInstallArchetypes() throws IOException {clearStaticVariables();File bundleFile =new File(System.getProperty(""java.io.tmpdir""), ""PluginRunnerIT_bundleLocations.bin"");File installedWorkflowsFile =new File(System.getProperty(""java.io.tmpdir""), ""PluginRunnerIT_installedWorkflows.bin"");if (DEBUG_SKIP) {if (bundleFile.exists() && installedWorkflowsFile.exists()) {byte[] bundleLocationsBinary = Files.toByteArray(bundleFile);byte[] installedWorkflowsBinary = Files.toByteArray(installedWorkflowsFile);bundleLocations = (Map<String, File>) SerializationUtils.deserialize(bundleLocationsBinary);installedWorkflows =(Map<String, Integer>) SerializationUtils.deserialize(installedWorkflowsBinary);return;}}createSharedTempDir();PluginRunner it = new PluginRunner();String SEQWARE_VERSION = it.getClass().getPackage().getImplementationVersion();Assert.assertTrue(""unable to detect seqware version"", SEQWARE_VERSION != null);Log.info(""SeqWare version detected as: "" + SEQWARE_VERSION);String[] archetypes = {""java-workflow""};buildAndInstallArchetypes(archetypes, SEQWARE_VERSION, true, true);Assert.assertTrue(""could not locate installed workflows"", installedWorkflows.size() == archetypes.length);Assert.assertTrue(""could not locate installed workflow paths"",installedWorkflows.size() == bundleLocations.size());if (DEBUG_SKIP) {byte[] bundleLocationsBinary = SerializationUtils.serialize(bundleLocations);byte[] installedWorkflowsBinary = SerializationUtils.serialize(installedWorkflows);Files.write(bundleLocationsBinary, bundleFile);Files.write(installedWorkflowsBinary, installedWorkflowsFile);}Log.stderr(PluginRunnerET.class.getName() + "" Cleaning up "" + tempDir.getAbsolutePath());}}"	Yes
1820	"public class A {public OProcess compile2OProcess(File bpelFile, long version) {if (__log.isDebugEnabled()) {__log.debug(""compile(URL)"");}if (bpelFile == null) {this.invalidate();throw new IllegalArgumentException(""Null bpelFile"");}_bpelFile = bpelFile;Process process;try {InputSource isrc =new InputSource(new ByteArrayInputStream(StreamUtils.read(bpelFile.toURL())));isrc.setSystemId(bpelFile.getAbsolutePath());process = BpelObjectFactory.getInstance().parse(isrc, _bpelFile.toURI());} catch (Exception e) {CompilationMessage cmsg =__cmsgs.errBpelParseErr().setSource(new SourceLocationImpl(bpelFile.toURI()));this.invalidate();throw new CompilationException(cmsg, e);}assert process != null;return compile(process, version);}}"	No
1821	"public class A {private void putIntoMaintenance(DatanodeDetails dn) throws NodeNotFoundException {LOG.info(""Datanode {} has entered maintenance"", dn);setNodeOpState(dn, NodeOperationalState.IN_MAINTENANCE);}}"	No
1822	"public class A {@Overridepublic void upgrade() {final Optional<EventsConfiguration> config = configProvider.loadFromDatabase();if (config.isPresent()) {return;}try {final EventsConfiguration defaultConfig = configProvider.getDefaultConfig();clusterConfigService.write(defaultConfig);LOG.debug(""Create default events configuration: {}"", defaultConfig);} catch (Exception e) {LOG.error(""Unable to write default events configuration"", e);}}}"	Yes
1823	"public class A {private void processInt() {GluuVersionAvailability versionAvailability = new GluuVersionAvailability();hasUpdate = false;try {ObjectMapper objectMapper = new ObjectMapper();objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);versionAvailability =objectMapper.readValue(getVersionAvailability(), GluuVersionAvailability.class);this.hasUpdate = versionAvailability.isNewVersionAvailable();if (this.hasUpdate) {this.updateMessage ="" Good news: Gluu version ""+ versionAvailability.getVersion().split(""\\("")[0]+ "" is available."";}} catch (JsonMappingException e) {log.error(""JsonMappingException"", e);} catch (JsonProcessingException e) {log.error(""JsonProcessingException "", e);} catch (Exception e) {log.error(""Exception "", e);}}}"	No
1824	public class A {@Overridepublic synchronized void stopScan() {if (bridgeHandler != null && bridgeHandler.getGateway() != null) {disableInstallMode();bridgeHandler.getGateway().cancelLoadAllDeviceMetadata();}waitForScanFinishing();super.stopScan();}}	Yes
1825	public class A {@Overridepublic synchronized Runnable unregister(String pnfCorrelationId) {Runnable runnable = pnfCorrelationIdToThreadMap.remove(pnfCorrelationId);if (pnfCorrelationIdToThreadMap.isEmpty()) {stopDmaapThreadListener();}return runnable;}}	Yes
1826	"public class A {private void joinAt(BasicFuture<Object> future, long timeout, TimeUnit unit) {try {if (unit == null) {logger.debug(""tConsole -> joinAt none."");future.get();} else {future.get(timeout, unit);}} catch (ExecutionException e) {throw ExceptionUtils.toRuntimeException(e.getCause());} catch (Exception e) {throw ExceptionUtils.toRuntimeException(e);}}}"	Yes
1827	"public class A {@Overridepublic File persist(final IncrementalIndex index,final Interval dataInterval,File outDir,IndexSpec indexSpec,ProgressIndicator progress,@Nullable SegmentWriteOutMediumFactory segmentWriteOutMediumFactory)throws IOException {if (index.isEmpty()) {throw new IAE(""Trying to persist an empty index!"");}final DateTime firstTimestamp = index.getMinTime();final DateTime lastTimestamp = index.getMaxTime();if (!(dataInterval.contains(firstTimestamp) && dataInterval.contains(lastTimestamp))) {throw new IAE(""interval[%s] does not encapsulate the full range of timestamps[%s, %s]"",dataInterval, firstTimestamp, lastTimestamp);}org.apache.commons.io.FileUtils.forceMkdir(outDir);log.debug(""Starting persist for interval[%s], rows[%,d]"", dataInterval, index.size());return multiphaseMerge(Collections.singletonList(new IncrementalIndexAdapter(dataInterval, index, indexSpec.getBitmapSerdeFactory().getBitmapFactory())),false,index.getMetricAggs(),null,outDir,indexSpec,progress,segmentWriteOutMediumFactory,-1);}}"	No
1828	"public class A {private synchronized void connectToWebHDFS() {try {LOGGER.info(""User : {}"", this.hdfsConfiguration.getUser());UserGroupInformation ugi =UserGroupInformation.createRemoteUser(this.hdfsConfiguration.getUser());ugi.setAuthenticationMethod(UserGroupInformation.AuthenticationMethod.SIMPLE);ugi.doAs(new PrivilegedExceptionAction<Void>() {public Void run() throws Exception {Configuration conf = new Configuration();conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION, ""kerberos"");LOGGER.info(""WebURI : {}"", getURI().toString());client = FileSystem.get(getURI(), conf);return null;}});} catch (Exception ex) {throw new RuntimeException(ex);}}}"	Yes
1829	"public class A {private void selectQueryPlan(QueryExpression requestQuery, Set<CompositeMetadata> minimalTree) {searchQPlan = retrievalQPlan = null;if (minimalTree.size() > 1) {QueryPlan searchQP =new QueryPlanChooser(root,new BruteForceQueryPlanIterator(),new IndexedFieldScorer(),requestQuery,minimalTree).choose();LOGGER.debug(""Candidate plan: {}"", searchQP);QueryPlanNode[] roots = searchQP.getSources();if (roots.length == 1 && roots[0].getMetadata() == root) {LOGGER.debug(""Search is trivial, root node is at query plan root, so search and retrieve"");QueryPlan fullPlan =new QueryPlanChooser(root,new BruteForceQueryPlanIterator(),new IndexedFieldScorer(),requestQuery,null).choose();roots = fullPlan.getSources();if (roots.length == 1 && roots[0].getMetadata() == root) {retrievalQPlan = fullPlan;searchQPlan = null;} else {searchQPlan = searchQP;}} else {searchQPlan = searchQP;}} else {searchQPlan = null;}if (retrievalQPlan == null) {if (searchQPlan == null) {retrievalQPlan =new QueryPlanChooser(root, new First(), new SimpleScorer(), requestQuery, null).choose();} else {retrievalQPlan =new QueryPlanChooser(root, new First(), new SimpleScorer(), null, null).choose();}}}}"	No
1830	public class A {@Overridepublic void handleTamrIdUpdate(TamrMessage message) {if (message.getError() != null) {return;}Map<Long, String> gtasIdToTamrId = new HashMap<Long, String>();for (TamrHistoryCluster cluster : message.getHistoryClusters()) {if (cluster.getAction() == null || cluster.getAction() == TamrHistoryClusterAction.UPDATE) {addTamrIdUpdate(gtasIdToTamrId, cluster.getGtasId(), cluster.getTamrId());} else if (cluster.getAction() == TamrHistoryClusterAction.DELETE) {addTamrIdUpdate(gtasIdToTamrId, cluster.getGtasId(), null);} else {}}updateTamrIds(gtasIdToTamrId);}}	Yes

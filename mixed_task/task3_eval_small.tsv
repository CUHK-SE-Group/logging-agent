	code	label
3661	public class A {private Optional<Long> getNextRunAt(SingularityRequest request, RequestState state, SingularityPendingRequest pendingRequest) {PendingType pendingType = pendingRequest.getPendingType();final long now = System.currentTimeMillis();long nextRunAt = now;if (request.isScheduled()) {if (pendingType == PendingType.IMMEDIATE || pendingType == PendingType.RETRY) {} else {try {Date nextRunAtDate = null;Date scheduleFrom = null;if (request.getScheduleTypeSafe() == ScheduleType.RFC5545) {final RFC5545Schedule rfc5545Schedule =new RFC5545Schedule(request.getSchedule().get());nextRunAtDate = rfc5545Schedule.getNextValidTime();scheduleFrom = new Date(rfc5545Schedule.getStartDateTime().getMillis());} else {scheduleFrom = new Date(now);final CronExpression cronExpression =new CronExpression(request.getQuartzScheduleSafe());if (request.getScheduleTimeZone().isPresent()) {cronExpression.setTimeZone(TimeZone.getTimeZone(request.getScheduleTimeZone().get()));}nextRunAtDate = cronExpression.getNextValidTimeAfter(scheduleFrom);}if (nextRunAtDate == null) {return Optional.empty();}nextRunAt = Math.max(nextRunAtDate.getTime(), now);} catch (ParseException | InvalidRecurrenceRuleException pe) {throw new RuntimeException(pe);}}}if (!request.isLongRunning() && pendingRequest.getRunAt().isPresent()) {nextRunAt = Math.max(nextRunAt, pendingRequest.getRunAt().get());}if (pendingType == PendingType.TASK_DONE&& request.getWaitAtLeastMillisAfterTaskFinishesForReschedule().orElse(0L) > 0) {nextRunAt =Math.max(nextRunAt, now + request.getWaitAtLeastMillisAfterTaskFinishesForReschedule().get());}if (state == RequestState.SYSTEM_COOLDOWN && pendingType != PendingType.NEW_DEPLOY) {final long prevNextRunAt = nextRunAt;nextRunAt =Math.max(nextRunAt,now + TimeUnit.SECONDS.toMillis(configuration.getCooldownMinScheduleSeconds()));}return Optional.of(nextRunAt);}}	5
3662	"public class A {@Testpublic void updateDatasetAttributesNegativeTest() {addDatasetAttributes();List<KeyValue> attributes = dataset1.getAttributesList();Value stringValue = Value.newBuilder().setStringValue(""attribute_updated_test_value"").build();KeyValue keyValue =KeyValue.newBuilder().setKey(attributes.get(0).getKey()).setValue(stringValue).setValueType(ValueType.STRING).build();UpdateDatasetAttributes updateDatasetAttributesRequest =UpdateDatasetAttributes.newBuilder().setAttribute(keyValue).build();try {datasetServiceStub.updateDatasetAttributes(updateDatasetAttributesRequest);fail();} catch (StatusRuntimeException ex) {Status status = Status.fromThrowable(ex);LOGGER.warn(""Error Code : "" + status.getCode() + "" Description : "" + status.getDescription());assertEquals(Status.INVALID_ARGUMENT.getCode(), status.getCode());}updateDatasetAttributesRequest =UpdateDatasetAttributes.newBuilder().setId(""123132"").setAttribute(dataset1.getAttributesList().get(0)).build();try {datasetServiceStub.updateDatasetAttributes(updateDatasetAttributesRequest);fail();} catch (StatusRuntimeException e) {checkEqualsAssert(e);}updateDatasetAttributesRequest =UpdateDatasetAttributes.newBuilder().setId(dataset1.getId()).clearAttribute().build();try {datasetServiceStub.updateDatasetAttributes(updateDatasetAttributesRequest);fail();} catch (StatusRuntimeException ex) {Status status = Status.fromThrowable(ex);assertEquals(Status.INVALID_ARGUMENT.getCode(), status.getCode());}}}"	3
3663	"public class A {public String formatUpdateTime(String pattern) {try {SimpleDateFormat format = new SimpleDateFormat(pattern);return format.format(getUpdateTime());} catch (RuntimeException e) {}return ""ERROR: formatting date"";}}"	1
3664	public class A {private void removeSubscription() {synchronized (upnpLock) {if (service.isRegistered(this)) {for (String subscription : SERVICE_SUBSCRIPTIONS) {Boolean state = subscriptionState.get(subscription);if (state != null && state) {service.removeSubscription(this, subscription);}}}subscriptionState = new HashMap<>();}}}	1
3665	"public class A {@Testpublic void sendBatchedEventsUsingJavaLogging() throws Exception {String token = TestUtil.createHttpEventCollectorToken(httpEventCollectorName);String loggerName = ""splunkBatchLogger"";HashMap<String, String> userInputs = new HashMap<String, String>();userInputs.put(""user_httpEventCollector_token"", token);userInputs.put(""user_batch_interval"", ""0"");userInputs.put(""user_batch_size_bytes"", ""0"");userInputs.put(""user_batch_size_count"", ""0"");userInputs.put(""user_logger_name"", loggerName);TestUtil.resetJavaLoggingConfiguration(""logging_template.properties"", ""logging.properties"", userInputs);Date date = new Date();String jsonMsg =String.format(""{EventDate:%s, EventMsg:'this is a test event for java logging""+ "" sendBatchedEventsUsingJavaLogging}"",date.toString());Logger logger = Logger.getLogger(loggerName);TestUtil.verifyOneAndOnlyOneEventSentToSplunk(jsonMsg);TestUtil.deleteHttpEventCollectorToken(httpEventCollectorName);}}"	1
3666	"public class A {@Overridepublic void commit(Xid xid, boolean flag) throws XAException {if (this.xid == null || !this.xid.equals(xid)) {throw newXAException(XAER_INVAL, ""Invalid Xid"");}this.xid = null;try {owner.connection.commit();} catch (SQLException e) {throw newXAException(XAER_RMERR, ""Cannot commit"", e);} finally {try {owner.connection.setAutoCommit(true);} catch (SQLException e) {}}}}"	1
3667	public class A {@Overridepublic JournalArticleDisplay getDisplay(JournalArticle article,String ddmTemplateKey,String viewMode,String languageId,int page,PortletRequestModel portletRequestModel,ThemeDisplay themeDisplay) {StopWatch stopWatch = new StopWatch();stopWatch.start();long groupId = article.getGroupId();String articleId = article.getArticleId();double version = article.getVersion();articleId = StringUtil.toUpperCase(GetterUtil.getString(articleId));ddmTemplateKey = StringUtil.toUpperCase(GetterUtil.getString(ddmTemplateKey));long layoutSetId = 0;boolean lifecycleRender = false;boolean secure = false;if (portletRequestModel != null) {lifecycleRender = RenderRequest.RENDER_PHASE.equals(portletRequestModel.getLifecycle());}if (themeDisplay != null) {try {if (!_journalArticleModelResourcePermission.contains(themeDisplay.getPermissionChecker(), article, ActionKeys.VIEW)) {return null;}} catch (Exception exception) {if (_log.isDebugEnabled()) {}}LayoutSet layoutSet = themeDisplay.getLayoutSet();layoutSetId = layoutSet.getLayoutSetId();if (portletRequestModel == null) {lifecycleRender = themeDisplay.isLifecycleRender();}secure = themeDisplay.isSecure();}if (Validator.isNull(ddmTemplateKey)) {ddmTemplateKey = article.getDDMTemplateKey();}JournalContentKey journalContentKey =new JournalContentKey(groupId,articleId,version,ddmTemplateKey,layoutSetId,viewMode,languageId,page,secure);JournalArticleDisplay articleDisplay = null;boolean productionMode = CTCollectionThreadLocal.isProductionMode();if (productionMode) {articleDisplay = _portalCache.get(journalContentKey);}if ((articleDisplay == null) || !lifecycleRender) {articleDisplay =getArticleDisplay(article,ddmTemplateKey,viewMode,languageId,page,portletRequestModel,themeDisplay);if ((articleDisplay != null) && articleDisplay.isCacheable() && lifecycleRender) {try {if (productionMode) {_portalCache.put(journalContentKey, articleDisplay);}} catch (ClassCastException classCastException) {if (_log.isWarnEnabled()) {}}}}if (_log.isDebugEnabled()) {}return articleDisplay;}}	3
3668	public class A {@Overridepublic boolean processEndElement(String elementName, String prefix, boolean isNested, Object contextObject) {if (log4jLogger.isDebugEnabled()) {}if (elementName.equals(LayoutConstants.listOfLayouts)|| elementName.equals(LayoutConstants.listOfSpeciesGlyphs)|| elementName.equals(LayoutConstants.listOfReactionGlyphs)|| elementName.equals(LayoutConstants.listOfCompartmentGlyphs)|| elementName.equals(LayoutConstants.listOfTextGlyphs)) {groupList = LayoutList.none;} else if (elementName.equals(LayoutConstants.listOfSpeciesReferenceGlyphs)) {groupList = LayoutList.listOfReactionGlyphs;}return true;}}	4
3669	public class A {@Afterpublic void teardownShell() {if (config.exists()) {if (!config.delete()) {}}shell.shutdown();}}	1
3670	"public class A {@Overridepublic final void onFinish() {AjaxRequestTarget target = RequestCycle.get().find(AjaxRequestTarget.class).orElse(null);try {final Serializable res = onApply(target);if (eventSink == null) {send(this, Broadcast.BUBBLE, new NewItemFinishEvent<>(item, target).setResult(res));} else {send(eventSink, Broadcast.EXACT, new NewItemFinishEvent<>(item, target).setResult(res));}} catch (TimeoutException te) {if (eventSink == null) {send(this, Broadcast.BUBBLE, new NewItemCancelEvent<>(item, target));} else {send(eventSink, Broadcast.EXACT, new NewItemCancelEvent<>(item, target));}sendWarning(getString(""timeout""));((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);} catch (CaptchaNotMatchingException ce) {sendError(new WicketRuntimeException(getString(Constants.CAPTCHA_ERROR)));((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);} catch (Exception e) {sendError(e);((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);}}}"	3
3671	public class A {@Overridepublic synchronized void hostsChanged(Set<Host> hosts) {hosts.remove(localHost);createForwarders(hosts);deleteForwarders(hosts);}}	1
3672	public class A {private void addDeprecatedAnnotationAssertion(@Nonnull List<OWLOntologyChange> changes) {OWLAnnotationAxiom ax =dataFactory.getOWLAnnotationAssertionAxiom(dataFactory.getOWLDeprecated(),info.getEntityToDeprecate().getIRI(),dataFactory.getOWLLiteral(true));changes.add(new AddAxiom(getHomeOntology(), ax));}}	1
3673	public class A {@Overridepublic void hasConsumerPermission(boolean hasPermission) {if (hasPermission) {try {CcMessageRouter.super.route(message);} catch (JoynrMessageExpiredException e) {CcMessageRouter.super.finalizeMessageProcessing(message, false);} catch (Exception e) {CcMessageRouter.super.finalizeMessageProcessing(message, false);}} else {CcMessageRouter.super.finalizeMessageProcessing(message, false);}}}	3
3674	"public class A {@Overridepublic void createFrontierReportMonitorTable() {HarvestDBConnection.updateTable(""frontierreportmonitor"", 1);}}"	1
3675	public class A {public void visitDenyUncoveredHttpMethods(WebAppContext context, Descriptor descriptor, XmlParser.Node node) {if (context.getSecurityHandler() == null) {return;}((ConstraintAware) context.getSecurityHandler()).setDenyUncoveredHttpMethods(true);}}	1
3676	public class A {public static FunctionalSet<ValueTuple> betweenLoadDates(Object fieldValue, String start, String end) {FunctionalSet<ValueTuple> matches = FunctionalSet.emptySet();if (fieldValue != null) {try {if (betweenInclusive(Long.parseLong(ValueTuple.getStringValue(fieldValue)),getTime(start),getTime(end, true) - 1)) {matches = FunctionalSet.singleton(getHitTerm(fieldValue));}} catch (ParseException pe) {} catch (NumberFormatException nfe) {}}return matches;}}	2
3677	public class A {@Overridepublic void onUrlMapped(RequestCycle cycle, IRequestHandler handler, Url url) {if (REQUEST_LOGGER.isTraceEnabled()) {}}}	1
3678	public class A {public static com.liferay.commerce.application.model.CommerceApplicationModelSoap[]getCommerceApplicationModels(long commerceApplicationBrandId, int start, int end)throws RemoteException {try {java.util.List<com.liferay.commerce.application.model.CommerceApplicationModel> returnValue =CommerceApplicationModelServiceUtil.getCommerceApplicationModels(commerceApplicationBrandId, start, end);return com.liferay.commerce.application.model.CommerceApplicationModelSoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
3679	"public class A {public boolean addAutoscalePolicy(AutoscalePolicy policy)throws AutoScalingPolicyAlreadyExistException {if (log.isInfoEnabled()) {}if (StringUtils.isEmpty(policy.getId())) {throw new AutoScalerException(""Autoscaling policy id cannot be empty"");}this.addASPolicyToInformationModel(policy);RegistryManager.getInstance().persistAutoscalerPolicy(policy);if (log.isInfoEnabled()) {}return true;}}"	2
3680	public class A {private void handleNewTelemetrySubscription(TbTimeseriesSubscription subscription) {long curTs = System.currentTimeMillis();if (subscription.isLatestValues()) {DonAsynchron.withCallback(tsService.findLatest(subscription.getTenantId(),subscription.getEntityId(),subscription.getKeyStates().keySet()),missedUpdates -> {if (missedUpdates != null && !missedUpdates.isEmpty()) {TopicPartitionInfo tpi =partitionService.getNotificationsTopic(ServiceType.TB_CORE, subscription.getServiceId());toCoreNotificationsProducer.send(tpi, toProto(subscription, missedUpdates), null);}},tsCallBackExecutor);} else {List<ReadTsKvQuery> queries = new ArrayList<>();subscription.getKeyStates().forEach((key, value) -> {if (curTs > value) {long startTs =subscription.getStartTime() > 0? Math.max(subscription.getStartTime(), value + 1L): (value + 1L);long endTs =subscription.getEndTime() > 0? Math.min(subscription.getEndTime(), curTs): curTs;queries.add(new BaseReadTsKvQuery(key, startTs, endTs, 0, 1000, Aggregation.NONE));}});if (!queries.isEmpty()) {DonAsynchron.withCallback(tsService.findAll(subscription.getTenantId(), subscription.getEntityId(), queries),missedUpdates -> {if (missedUpdates != null && !missedUpdates.isEmpty()) {TopicPartitionInfo tpi =partitionService.getNotificationsTopic(ServiceType.TB_CORE, subscription.getServiceId());toCoreNotificationsProducer.send(tpi, toProto(subscription, missedUpdates), null);}},tsCallBackExecutor);}}}}	3
3681	public class A {void stop() {if (this.run) {this.run = false;if (this.localThread != null) {this.localThread.interrupt();}}}}	1
3682	"public class A {@SuppressWarnings({""null"", ""unused""})@OnWebSocketMessagepublic void onMessage(Session session, String message) {if (!session.equals(this.session)) {handleWrongSession(session, message);return;}try {DeconzBaseMessage changedMessage =Objects.requireNonNull(gson.fromJson(message, DeconzBaseMessage.class));if (changedMessage.r == ResourceType.UNKNOWN) {return;}WebSocketMessageListener listener =listeners.get(getListenerId(changedMessage.r, changedMessage.id));if (listener == null) {return;}Class<? extends DeconzBaseMessage> expectedMessageType =changedMessage.r.getExpectedMessageType();if (expectedMessageType == null) {return;}DeconzBaseMessage deconzMessage = gson.fromJson(message, expectedMessageType);if (deconzMessage != null) {listener.messageReceived(changedMessage.id, deconzMessage);}} catch (RuntimeException e) {}}}"	5
3683	"public class A {private void getQueryResult(QueryId tajoQueryId) {try {QueryStatus status = waitForComplete(tajoQueryId);if (status == null) {error = new Exception(""Query Status is null"");return;}if (status.getState() == TajoProtos.QueryState.QUERY_ERROR|| status.getState() == TajoProtos.QueryState.QUERY_FAILED) {error = new Exception(status.getErrorMessage());} else if (status.getState() == TajoProtos.QueryState.QUERY_KILLED) {error = new Exception(queryId + "" is killed."");} else {if (status.getState() == TajoProtos.QueryState.QUERY_SUCCEEDED) {if (status.hasResult()) {ResultSet res = null;try {ClientProtos.GetQueryResultResponse response =tajoClient.getResultResponse(tajoQueryId);TableDesc desc = CatalogUtil.newTableDesc(response.getTableDesc());tajoConf.setVar(TajoConf.ConfVars.USERNAME, response.getTajoUserName());res = new FetchResultSet(tajoClient, desc.getLogicalSchema(), queryId, sizeLimit);MakeResultText(res, desc);} finally {if (res != null) {res.close();}progress.set(100);}} else {progress.set(100);try {tajoClient.closeQuery(queryId);} catch (Exception e) {}}}}} catch (Exception e) {error = e;}}}"	4
3684	public class A {void checkBackpressure(boolean useSyncMode, Phaser phaser) {if (!useSyncMode && backPressure != null && backPressure > 0) {while (phaser.getUnarrivedParties() > backPressure) {try {TimeUnit.MILLISECONDS.sleep(200L);} catch (InterruptedException ex) {Thread.currentThread().interrupt();}}}}}	2
3685	"public class A {public static java.util.List<com.liferay.asset.kernel.model.AssetCategory> getChildCategories(HttpPrincipal httpPrincipal,long parentCategoryId,int start,int end,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.asset.kernel.model.AssetCategory>orderByComparator)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(AssetCategoryServiceUtil.class,""getChildCategories"",_getChildCategoriesParameterTypes11);MethodHandler methodHandler =new MethodHandler(methodKey, parentCategoryId, start, end, orderByComparator);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<com.liferay.asset.kernel.model.AssetCategory>) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
3686	"public class A {private String getFormattedData(JsonArray contents, JsonArray config) {StringBuilder formattedData = new StringBuilder();for (JsonElement e : config) {formattedData.append(e.getAsJsonObject().get(""FieldName"").getAsString()).append("","");}formattedData.replace(formattedData.length() - 1, formattedData.length(), """");formattedData.append(""\n"");for (int i = 0; i < contents.size(); i++) {JsonObject jo = contents.get(i).getAsJsonObject();for (JsonElement e : config) {formattedData.append(jo.get(e.getAsJsonObject().get(""FieldName"").getAsString())).append("","");}formattedData.replace(formattedData.length() - 1, formattedData.length(), """");formattedData.append(""\n"");}return String.valueOf(formattedData);}}"	2
3687	public class A {@Overridepublic void onSuccess(Request result) {if (callback != null) {callback.onSuccess(t);}}}	1
3688	public class A {public void recompileRules(final String kbName, String userId) {List<UdrRule> ruleList = rulePersistenceService.findAll();if (!CollectionUtils.isEmpty(ruleList)) {ruleManagementService.createKnowledgeBaseFromUdrRules(kbName, ruleList, userId);} else {KnowledgeBase kb = rulePersistenceService.findUdrKnowledgeBase(kbName);if (kb != null) {List<Rule> rules = rulePersistenceService.findRulesByKnowledgeBaseId(kb.getId());if (CollectionUtils.isEmpty(rules)) {ruleManagementService.deleteKnowledgeBase(kbName);}}}}}	1
3689	public class A {public void attachDirty(StgSysExportAuswahl instance) {try {sessionFactory.getCurrentSession().saveOrUpdate(instance);} catch (RuntimeException re) {throw re;}}}	3
3690	"public class A {private void throwExceptionForNullOrganization(Organization organization) {if (organization == null) {String msg = ""Organization not found"";throw new CustomWebApplicationException(msg, HttpStatus.SC_NOT_FOUND);}}}"	1
3691	public class A {public void print() {}}	10
3692	"public class A {public void loadCards(ExileView exile, BigCard bigCard, UUID gameId) {boolean changed = cards.loadCards(exile, bigCard, gameId, true);String titel = name + "" ("" + exile.size() + ')';setTitle(titel);this.setTitelBarToolTip(titel);if (!exile.isEmpty()) {show();if (changed) {try {this.setIcon(false);} catch (PropertyVetoException ex) {}}} else {this.hideDialog();}}}"	1
3693	public class A {@Overridepublic CompletableFuture<Message> query(Message request) {Timer.Context timerContext = null;MetaServiceProtos.MetaServiceRequestProto.TypeCase type = null;if (currentGroup == null) {try {List<RaftGroup> x =StreamSupport.stream(raftServer.getGroups().spliterator(), false).filter(group -> group.getGroupId().equals(metadataGroupId)).collect(Collectors.toList());if (x.size() == 1) {currentGroup = x.get(0);}} catch (IOException e) {e.printStackTrace();}}MetaServiceProtos.MetaServiceRequestProto req;try {req = MetaServiceProtos.MetaServiceRequestProto.parseFrom(request.getContent());} catch (InvalidProtocolBufferException e) {e.printStackTrace();return null;}type = req.getTypeCase();try {timerContext = logServiceMetaDataMetrics.getTimer(type.name()).time();switch (type) {case CREATELOG:return processCreateLogRequest(req);case LISTLOGS:return processListLogsRequest();case GETLOG:return processGetLogRequest(req);case DELETELOG:return processDeleteLog(req);default:CompletableFuture<Message> reply = super.query(request);return reply;}} catch (Exception e) {throw e;} finally {if (timerContext != null) {timerContext.stop();}}}}	1
3694	"public class A {private void threadLocalMicroBenchmark(boolean theThreadlocalInvokersEnabled, int theCount) {InterceptorService svc = new InterceptorService();svc.setThreadlocalInvokersEnabled(theThreadlocalInvokersEnabled);HookParams params = new HookParams().add(""A"").add(""B"");@Interceptor(order = 100)class LocalInterceptor {private int myCount = 0;@Hook(Pointcut.TEST_RB)public void testRb(String theString0, String theString1) {myCount++;}}LocalInterceptor interceptor = new LocalInterceptor();StopWatch sw = new StopWatch();for (int i = 0; i < theCount; i++) {svc.registerThreadLocalInterceptor(interceptor);try {svc.callHooks(Pointcut.TEST_RB, params);svc.callHooks(Pointcut.TEST_RB, params);svc.callHooks(Pointcut.TEST_RB, params);svc.callHooks(Pointcut.TEST_RB, params);svc.callHooks(Pointcut.TEST_RB, params);} finally {svc.unregisterThreadLocalInterceptor(interceptor);}}}}"	1
3695	public class A {private void processBuildTask(BuildTask task) {Consumer<BuildResult> onComplete = (result) -> completeBuild(task, result);try {synchronized (task) {if (task.getStatus() != BuildCoordinationStatus.ENQUEUED) {return;}if (!task.getBuildOptions().isForceRebuild()&& !datastoreAdapter.requiresRebuild(task, new HashSet<>())) {completeNoBuild(task, CompletionStatus.NO_REBUILD_REQUIRED);return;}task.setStartTime(new Date());updateBuildTaskStatus(task, BuildCoordinationStatus.BUILDING);}buildScheduler.startBuilding(task, onComplete);} catch (CoreException | ExecutorException e) {updateBuildTaskStatus(task, BuildCoordinationStatus.SYSTEM_ERROR, e.getMessage());try {datastoreAdapter.storeResult(task, Optional.empty(), e);} catch (DatastoreException e1) {}} catch (Error error) {updateBuildTaskStatus(task, BuildCoordinationStatus.SYSTEM_ERROR, error.getMessage());try {datastoreAdapter.storeResult(task, Optional.empty(), error);} catch (DatastoreException e1) {}throw error;} finally {ProcessStageUtils.logProcessStageEnd(BuildCoordinationStatus.ENQUEUED.toString());}}}	6
3696	public class A {@Overrideprotected void doBeginRead() throws Exception {if (readInProgress) {return;}ChannelPipeline pipeline = pipeline();Queue<Object> inboundBuffer = this.inboundBuffer;if (inboundBuffer.isEmpty()) {readInProgress = true;return;}final InternalThreadLocalMap threadLocals = InternalThreadLocalMap.get();final Integer stackDepth = threadLocals.localChannelReaderStackDepth();if (stackDepth < MAX_READER_STACK_DEPTH) {threadLocals.setLocalChannelReaderStackDepth(stackDepth + 1);try {for (; ; ) {Object received = inboundBuffer.poll();if (received == null) {break;}pipeline.fireChannelRead(received);}pipeline.fireChannelReadComplete();} finally {threadLocals.setLocalChannelReaderStackDepth(stackDepth);}} else {try {eventLoop().execute(readTask);} catch (Throwable cause) {close();peer.close();PlatformDependent.throwException(cause);}}}}	1
3697	public class A {private void checkTimeElapsedSinceLastExec(int sinceLastModified) {if (sinceLastModified > tickFrequencyInSeconds) {}}}	1
3698	public class A {protected ResultSet doQueryResult(PreparedStatement ps) throws SQLException {final ResultSet rs = executeQuery(ps);if (!isUseFunctionalResultSet()) {return rs;}if (isInternalDebugEnabled()) {}final FetchBean selbean = FetchAssistContext.getFetchBeanOnThread();final TnFetchAssistResultSet wrapper;if (OutsideSqlContext.isExistOutsideSqlContextOnThread()) {final OutsideSqlContext context = OutsideSqlContext.getOutsideSqlContextOnThread();final boolean offsetByCursorForcedly = context.isOffsetByCursorForcedly();final boolean limitByCursorForcedly = context.isLimitByCursorForcedly();wrapper =createFunctionalResultSet(rs, selbean, offsetByCursorForcedly, limitByCursorForcedly);} else {wrapper = createFunctionalResultSet(rs, selbean, false, false);}return wrapper;}}	1
3699	"public class A {@Testpublic void servicesExist() {if (logger.isDebugEnabled()) {}String url = serviceClient.getBaseURL() + ""idgenerators"";OptionsMethod method = new OptionsMethod(url);try {serviceClient = new TestServiceClient();int statusCode = httpClient.executeMethod(method);if (logger.isDebugEnabled()) {}Assert.assertEquals(statusCode, HttpStatus.SC_OK, ""expected "" + HttpStatus.SC_OK);} catch (HttpException e) {} catch (IOException e) {} catch (Exception e) {} finally {method.releaseConnection();}}}"	5
3700	public class A {@Overridepublic void createSymbolicLink(Path link, Path target, FileAttribute<?>... attrs)throws IOException {DELEGATE.createSymbolicLink(link, target, attrs);}}	1
3701	"public class A {private boolean handleByAgent(IMessage message, boolean isProcessed, IRequest req, IRealm matched) {if (ovrManager != null && ovrManager.isParenAppOverload(message.getSingleApplicationId())) {sendErrorAnswer(message, ""Overloaded"", ResultCode.TOO_BUSY);return true;} else {try {router.registerRequestRouteInfo(message);IMessage answer = (IMessage) matched.getAgent().processRequest(req, matched);if (isDuplicateProtection && answer != null) {peerTable.saveToDuplicate(message.getDuplicationKey(), answer);}isProcessed = true;if (answer != null) {sendMessage(answer);}if (statistic.isEnabled()) {statistic.getRecordByName(IStatisticRecord.Counters.SysGenResponse.name()).inc();}} catch (Exception exc) {sendErrorAnswer(message, ""Unable to process"", ResultCode.UNABLE_TO_COMPLY);return true;}}if (isProcessed) {if (statistic.isEnabled()) {statistic.getRecordByName(IStatisticRecord.Counters.NetGenRequest.name()).inc();}}return isProcessed;}}"	2
3702	public class A {private Path findCacheForLocalMode(String resourceName, String localName) throws IOException {assert resourceName != null;assert localName != null;Path remotePath = null;String remoteName = null;for (URI uri : context.getCacheFiles()) {if (localName.equals(uri.getFragment())) {if (LOG.isDebugEnabled()) {}String rpath = uri.getPath();remotePath = new Path(uri);remoteName = rpath.substring(rpath.lastIndexOf('/') + 1);break;}}if (remoteName == null) {if (LOG.isDebugEnabled()) {}return null;}assert remotePath != null;for (Path path : getLocalCacheFiles()) {String localFileName = path.getName();if (remoteName.equals(localFileName) == false) {continue;}if (localFileSystem.exists(path) == false) {continue;}if (LOG.isDebugEnabled()) {}return localFileSystem.makeQualified(path);}FileSystem remoteFileSystem = remotePath.getFileSystem(context.getConfiguration());remotePath = remoteFileSystem.makeQualified(remotePath);if (LOG.isDebugEnabled()) {}if (isLocal(remoteFileSystem) == false) {}return remotePath;}}	5
3703	"public class A {private boolean sendBySendmail(Mail mail) {PrintWriter out = null;try {List<String> allrecipients = new ArrayList<>();allrecipients.addAll(mail.getTo());allrecipients.addAll(mail.getCC());allrecipients.addAll(mail.getBCC());final StringBuilder recipients = new StringBuilder();for (String recipient : allrecipients) {recipients.append("" "");if (recipient.contains(""<"")) {recipients.append(recipient.substring(recipient.indexOf(""<"") + 1, recipient.indexOf("">"")));} else {recipients.append(recipient);}}Process p = Runtime.getRuntime().exec(""/usr/sbin/sendmail"" + recipients.toString());out = new PrintWriter(new OutputStreamWriter(p.getOutputStream(), charset));writeMessage(out, mail);} catch (IOException e) {return false;} finally {if (out != null) out.close();}return true;}}"	2
3704	public class A {public static Date resolveAbsoluteDate(final String str) throws LensException {try {return stringToDateCache.get(str, () -> ABSDATE_PARSER.get().parse(getAbsDateFormatString(str)));} catch (Exception e) {throw new LensException(LensCubeErrorCode.WRONG_TIME_RANGE_FORMAT.getLensErrorInfo(), ABSDATE_FMT, str);}}}	1
3705	"public class A {private void sendReplyFromPostmaster(Mail mail, String stringContent) {try {MailAddress notifier = getMailetContext().getPostmaster();MailAddress senderMailAddress = mail.getMaybeSender().get();MimeMessage message = mail.getMessage();MimeMessage reply = new MimeMessage(Session.getDefaultInstance(System.getProperties(), null));InternetAddress[] rcptAddr = new InternetAddress[1];rcptAddr[0] = senderMailAddress.toInternetAddress();reply.setRecipients(Message.RecipientType.TO, rcptAddr);reply.setFrom(notifier.toInternetAddress());MimeMultipart multipart = new MimeMultipart();MimeBodyPart part = new MimeBodyPart();part.setContent(stringContent, ""text/plain"");part.setHeader(RFC2822Headers.CONTENT_TYPE, ""text/plain"");multipart.addBodyPart(part);reply.setContent(multipart);reply.setHeader(RFC2822Headers.CONTENT_TYPE, multipart.getContentType());Set<MailAddress> recipients = new HashSet<>();recipients.add(senderMailAddress);if (reply.getHeader(RFC2822Headers.DATE) == null) {reply.setHeader(RFC2822Headers.DATE, DateFormats.RFC822_DATE_FORMAT.format(LocalDateTime.now()));}String subject = message.getSubject();if (subject == null) {subject = """";}if (subject.indexOf(""Re:"") == 0) {reply.setSubject(subject);} else {reply.setSubject(""Re:"" + subject);}reply.setHeader(RFC2822Headers.IN_REPLY_TO, message.getMessageID());getMailetContext().sendMail(notifier, recipients, reply);} catch (Exception e) {}}}"	1
3706	public class A {@Nonnullpublic static PluginsInitializeInfo initPlugins(@Nullable StartupProgress progress, boolean isHeadlessMode) {long start = System.currentTimeMillis();PluginsInitializeInfo info;try {info = initializePlugins(progress, isHeadlessMode);} catch (RuntimeException e) {throw e;}int pluginsCount = PluginManager.getPluginsCount();getLogger()logPlugins();return info;}}	2
3707	"public class A {private void loadDomain() {if (null == domain) throw new RuntimeException(""No security domain specified"");missingContainer.clear();getView().reset();ModelNode operation = new ModelNode();operation.get(OP).set(READ_RESOURCE_OPERATION);operation.get(ADDRESS).set(Baseadress.get());operation.get(ADDRESS).add(""subsystem"", ""security"");operation.get(ADDRESS).add(""security-domain"", domain);operation.get(RECURSIVE).set(true);operation.get(""recursive-depth"").set(2);dispatcher.execute(new DMRAction(operation),new SimpleCallback<DMRResponse>() {@Overridepublic void onSuccess(DMRResponse result) {ModelNode response = result.get();if (response.isFailure()) {} else {ModelNode payload = response.get(RESULT);for (SubResource subResource : SubResource.values()) {String type = subResource.getType();if (payload.hasDefined(type)) {List<Property> modules =payload.get(type).get(""classic"").get(subResource.getModuleDef()).asPropertyList();getView().updateSubResource(subResource, modules);} else {missingContainer.add(subResource);}}}}});}}"	1
3708	"public class A {public void deleteMachine(final MrMachine machine) {doProblemFactChange(scoreDirector -> {MachineReassignment machineReassignment = scoreDirector.getWorkingSolution();MrMachine workingMachine = scoreDirector.lookUpWorkingObject(machine);if (workingMachine == null) {return;}for (MrProcessAssignment processAssignment :machineReassignment.getProcessAssignmentList()) {if (processAssignment.getOriginalMachine() == workingMachine) {scoreDirector.beforeProblemPropertyChanged(processAssignment);processAssignment.setOriginalMachine(null);scoreDirector.afterProblemPropertyChanged(processAssignment);}if (processAssignment.getMachine() == workingMachine) {scoreDirector.beforeVariableChanged(processAssignment, ""machine"");processAssignment.setMachine(null);scoreDirector.afterVariableChanged(processAssignment, ""machine"");}}ArrayList<MrMachine> machineList = new ArrayList<>(machineReassignment.getMachineList());machineReassignment.setMachineList(machineList);scoreDirector.beforeProblemFactRemoved(workingMachine);machineList.remove(workingMachine);scoreDirector.afterProblemFactRemoved(workingMachine);scoreDirector.triggerVariableListeners();});}}"	1
3709	public class A {@Overridepublic void onFailure(final Exchange exchange) {if (onCompleteOnly) {return;}if (onWhen != null && !onWhen.matches(exchange)) {return;}final Exchange copy = prepareExchange(exchange);final Exception original = copy.getException();if (original != null) {copy.setException(null);}if (executorService != null) {executorService.submit(new Callable<Exchange>() {public Exchange call() throws Exception {doProcess(processor, copy);copy.setException(original);return null;}});} else {doProcess(processor, copy);copy.setException(original);}}}	2
3710	public class A {@Deprecatedpublic static com.liferay.commerce.product.model.CommerceChannelRelSoap[] getCommerceChannelRels(String className,long classPK,int start,int end,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.commerce.product.model.CommerceChannelRel>orderByComparator)throws RemoteException {try {java.util.List<com.liferay.commerce.product.model.CommerceChannelRel> returnValue =CommerceChannelRelServiceUtil.getCommerceChannelRels(className, classPK, start, end, orderByComparator);return com.liferay.commerce.product.model.CommerceChannelRelSoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
3711	public class A {@Overrideprotected synchronized void startScan() {Future<?> scanTask = this.scanTask;if (scanTask == null || scanTask.isDone()) {scanTask = scheduler.submit(this::discoverDevices);}}}	1
3712	public class A {@Overridepublic void resetHttpClient() {destroy();try {afterPropertiesSet();} catch (IOReactorException ioReactorException) {}}}	1
3713	"public class A {public static List<SourceOutput> parseSourceOutputs(String raw, PulseaudioClient client) {List<SourceOutput> items = new ArrayList<>();String[] parts = raw.split(""index: "");if (parts.length <= 1) {return items;}for (int i = 1; i < parts.length; i++) {String[] lines = parts[i].split(""\n"");Hashtable<String, String> properties = new Hashtable<>();int id = 0;try {id = Integer.valueOf(lines[0].trim());} catch (NumberFormatException e) {Matcher matcher = FALL_BACK_PATTERN.matcher(lines[0].trim());if (matcher.find()) {id = Integer.valueOf(matcher.group(1));properties.put(matcher.group(2).trim(), matcher.group(3).trim());}}for (int j = 1; j < lines.length; j++) {Matcher matcher = PATTERN.matcher(lines[j]);if (matcher.find()) {properties.put(matcher.group(1).trim(), matcher.group(2).trim());}}if (properties.containsKey(""source"")) {SourceOutput item =new SourceOutput(id,properties.get(""source""),client.getModule(getNumberValue(properties.get(""module""))));if (properties.containsKey(""state"")) {try {item.setState(AbstractAudioDeviceConfig.State.valueOf(properties.get(""state"")));} catch (IllegalArgumentException e) {}}if (properties.containsKey(""muted"")) {item.setMuted(""yes"".equalsIgnoreCase(properties.get(""muted"")));}if (properties.containsKey(""volume"")) {item.setVolume(Integer.valueOf(parseVolume(properties.get(""volume""))));}if (properties.containsKey(""source"")) {item.setSource(client.getSource(Integer.valueOf(getNumberValue(properties.get(""source"")))));}items.add(item);}}return items;}}"	1
3714	public class A {@Overridepublic void caseAAssignmentStmIR(AAssignmentStmIR node) throws AnalysisException {SStmIR newNode = null;if (node.getTarget() instanceof AMapSeqStateDesignatorIR) {AMapSeqStateDesignatorIR target = (AMapSeqStateDesignatorIR) node.getTarget();SExpIR col = target.getMapseq().apply(converter);SExpIR index = target.getExp();SExpIR value = node.getExp();AMapSeqUpdateStmIR mapSeqUpd = new AMapSeqUpdateStmIR();mapSeqUpd.setCol(col);mapSeqUpd.setIndex(index.clone());mapSeqUpd.setValue(value.clone());mapSeqUpd.setSourceNode(node.getSourceNode());mapSeqUpd.setTag(node.getTag());newNode = mapSeqUpd;} else {AAssignToExpStmIR assign = new AAssignToExpStmIR();assign.setTarget(node.getTarget().apply(converter));assign.setExp(node.getExp().clone());assign.setSourceNode(node.getSourceNode());assign.setTag(node.getTag());newNode = assign;}if (node.parent() != null) {node.parent().replaceChild(node, newNode);} else {}}}	1
3715	public class A {protected boolean processInjectable(Object bean, Object injectable) {boolean result = false;for (Class<?> c = bean.getClass(); c != Object.class; c = c.getSuperclass()) {Field[] fields = c.getDeclaredFields();for (Field field : fields) {if (field.getAnnotation(Inject.class) != null) {if (field.getType().isAssignableFrom(injectable.getClass())) {Object value = getField(bean, field);if (value != null) {if (LOGGER.isDebugEnabled()) {}continue;}setField(bean, field, injectable);result = true;if (LOGGER.isDebugEnabled()) {}}}}}List<Method> methods = findAnnotatedMethods(bean, Inject.class);for (Method method : methods) {Class<?>[] parameterTypes = method.getParameterTypes();if (parameterTypes.length == 1) {if (parameterTypes[0].isAssignableFrom(injectable.getClass())) {invokePrivate(bean, method, injectable);result = true;if (LOGGER.isDebugEnabled()) {}}}}return result;}}	3
3716	"public class A {@Overridepublic void cancelContinuous(String originNodeId, String routineId) {A.notNullOrEmpty(originNodeId, ""originNodeId"");A.notNullOrEmpty(routineId, ""routineId"");if (log.isInfoEnabled())cancelContinuous(UUID.fromString(originNodeId), UUID.fromString(routineId));}}"	1
3717	"public class A {@Overridepublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)throws IOException, ServletException {logger.entry(String.format(""begin doFilter() for %s"", ((HttpServletRequest) request).getRequestURI()));HttpServletRequest req = (HttpServletRequest) request;if (validatePathAndHttpMethod(req)) {String auth = req.getHeader(""Authorization"");if (StringUtils.isEmpty(auth)) {logger.exit(""token is empty, return 401 Unauthorized response"");setUnauthorizedResponse(response);} else {validateOAuthToken(request, response, chain, auth);}} else {chain.doFilter(request, response);}}}"	2
3718	"public class A {private void putEvent(final HRPlanningEntryDO entry,final DateTime start,final String suffix,final int durationDays,final BigDecimal hours) {if (NumberHelper.isGreaterZero(hours) == false) {return;}if (log.isDebugEnabled() == true) {}final Event event = new Event().setAllDay(true);event.setClassName(EVENT_CLASS_NAME);final String id = """" + entry.getId() + ""-"" + suffix;event.setId(id);event.setStart(start);if (durationDays > 0) {event.setEnd(start.plusDays(durationDays));} else {event.setEnd(start);}final StringBuffer buf = new StringBuffer();buf.append(NumberHelper.formatFraction2(hours)).append(getString(""calendar.unit.hour"")).append("" "").append(entry.getProjektNameOrStatus());if (StringUtils.isNotBlank(entry.getDescription()) == true) {buf.append("": "");if (durationDays > 2) {buf.append(StringUtils.abbreviate(entry.getDescription(), 100));} else if (durationDays > 1) {buf.append(StringUtils.abbreviate(entry.getDescription(), 50));} else {buf.append(StringUtils.abbreviate(entry.getDescription(), 20));}}event.setTitle(buf.toString());events.put(id, event);}}"	1
3719	public class A {@Overridepublic void onClose(int code, String reason) {execLatch.countDown();}}	1
3720	"public class A {private void waitForTableToBeDeleted(String pTableName) {long startTime = System.currentTimeMillis();long endTime = startTime + WAIT_TIME;while (System.currentTimeMillis() < endTime) {try {Thread.sleep(SLEEP_DELETE_TIME);} catch (Exception e) {}try {DescribeTableRequest request = new DescribeTableRequest().withTableName(pTableName);TableDescription tableDescription = getDynamoDBClient().describeTable(request).getTable();String tableStatus = tableDescription.getTableStatus();} catch (AmazonServiceException ase) {if (ase.getErrorCode().equalsIgnoreCase(""ResourceNotFoundException"") == true) return;}}}}"	4
3721	public class A {static void removeGlobalMetadataForFailedNode(Node failedNode, String regionIdentifier, InternalCache cache, final boolean lock) {Region root = PartitionedRegionHelper.getPRRoot(cache, false);if (root == null) {return;}PartitionRegionConfig prConfig = (PartitionRegionConfig) root.get(regionIdentifier);if (null == prConfig || !prConfig.containsNode(failedNode)) {return;}final PartitionedRegion.RegionLock rl =PartitionedRegion.getRegionLock(regionIdentifier, cache);try {if (lock) {rl.lock();}prConfig = (PartitionRegionConfig) root.get(regionIdentifier);if (prConfig != null && prConfig.containsNode(failedNode)) {if (logger.isDebugEnabled()) {}if ((prConfig.getNumberOfNodes() - 1) <= 0) {if (logger.isDebugEnabled()) {}try {root.destroy(regionIdentifier);} catch (EntryNotFoundException e) {}} else {prConfig.removeNode(failedNode);if (prConfig.getNumberOfNodes() == 0) {root.destroy(regionIdentifier);} else {root.put(regionIdentifier, prConfig);}}}} finally {if (lock) {rl.unlock();}}}}	3
3722	public class A {@Overridepublic List<TableMutation> tableMutations(Notification notification) {List<TableMutation> tableMutations = super.tableMutations(notification);for (NotificationIndexMapper im : indexMappers) {tableMutations.addAll(im.tableMutations(notification));}return tableMutations;}}	1
3723	public class A {public static XTextField findAnnotationFieldRecursive(Object element) {if (UNO.XEnumerationAccess(element) != null) {UnoCollection<Object> children = UnoCollection.getCollection(element, Object.class);for (Object child : children) {try {XTextField found = findAnnotationFieldRecursive(child);if (found != null) {return found;}} catch (Exception e) {}}}Object textField = Utils.getProperty(element, UnoProperty.TEXT_FIELD);if (textField != null&& UnoService.supportsService(textField, UnoService.CSS_TEXT_TEXT_FIELD_ANNOTATION)) {return UNO.XTextField(textField);}return null;}}	1
3724	"public class A {private void initializeInternalServer() throws BundleException {Bundle bundle;if (standalone) {bundle = Platform.getBundle(""sernet.gs.server"");if (bundle == null) {} else if (bundle.getState() == Bundle.INSTALLED || bundle.getState() == Bundle.RESOLVED) {bundle.start();}ServiceReference sr = context.getServiceReference(IInternalServer.class.getName());if (sr == null) {throw new IllegalStateException(""Cannot retrieve internal server service."");}internalServer = (IInternalServer) context.getService(sr);} else {internalServer = new ServerDummy();if (LOG.isDebugEnabled()) {}try {Bundle paxWebBundle = Platform.getBundle(PAX_WEB_SYMBOLIC_NAME);if (paxWebBundle != null) {paxWebBundle.stop();}} catch (Exception e) {}}}}"	4
3725	public class A {@Overridepublic void onRemoval(RemovalNotification<String, ExtTableSnapshotInfo> notification) {}}	1
3726	public class A {public boolean update(ProductBridgeIndex bridgeProductIndex,int productState,int productPosition,int productTarget) {if (!isRegistered(bridgeProductIndex)) {return false;}VeluxProduct thisProduct = this.get(bridgeProductIndex);dirty |= thisProduct.setState(productState);dirty |= thisProduct.setCurrentPosition(productPosition);dirty |= thisProduct.setTarget(productTarget);if (dirty) {String uniqueIndex = thisProduct.getProductUniqueIndex();existingProductsByUniqueIndex.replace(uniqueIndex, thisProduct);modifiedProductsByUniqueIndex.put(uniqueIndex, thisProduct);}return true;}}	4
3727	public class A {@Overridepublic void serviceChanged(ServiceEvent event) {if (event.getType() == ServiceEvent.REGISTERED) {} else if (event.getType() == ServiceEvent.UNREGISTERING) {} else {}}}	3
3728	"public class A {private void initState() {final HashMap<String, Object> properties = new HashMap<>();getPropertiesHelper().getEndpointProperties(getCamelContext(), configuration, properties);this.endpointProperties = Collections.unmodifiableMap(properties);this.endpointPropertyNames = Collections.unmodifiableSet(properties.keySet());final Set<String> arguments = new HashSet<>(endpointPropertyNames);if (inBody != null) {arguments.add(inBody);}interceptPropertyNames(arguments);candidates = new ArrayList<>();candidates.addAll(methodHelper.getCandidateMethods(methodName, arguments));candidates = Collections.unmodifiableList(candidates);if (candidates.isEmpty()) {throw new IllegalArgumentException(String.format(""No matching method for %s/%s, with arguments %s"",apiName.getName(), methodName, arguments));}if (log.isDebugEnabled()) {final Set<String> missing = methodHelper.getMissingProperties(methodName, arguments);if (!missing.isEmpty()) {}}}}"	1
3729	public class A {@Overridepublic GetSnapshotRepositoriesResponse execute(GetSnapshotRepositoriesRequest getSnapshotRepositoriesRequest) {GetRepositoriesRequest getRepositoriesRequest =createGetRepositoriesRequest(getSnapshotRepositoriesRequest);GetSnapshotRepositoriesResponse getSnapshotRepositoriesResponse =new GetSnapshotRepositoriesResponse();try {GetRepositoriesResponse elasticsearchGetRepositoriesResponse =getGetRepositoriesResponse(getRepositoriesRequest, getSnapshotRepositoriesRequest);List<RepositoryMetadata> repositoriesMetadatas =elasticsearchGetRepositoriesResponse.repositories();repositoriesMetadatas.forEach(repositoryMetadata -> {Settings repositoryMetadataSettings = repositoryMetadata.settings();SnapshotRepositoryDetails snapshotRepositoryDetails =new SnapshotRepositoryDetails(repositoryMetadata.name(),repositoryMetadata.type(),repositoryMetadataSettings.toString());getSnapshotRepositoriesResponse.addSnapshotRepositoryMetadata(snapshotRepositoryDetails);});} catch (RepositoryMissingException repositoryMissingException) {if (_log.isDebugEnabled()) {}}return getSnapshotRepositoriesResponse;}}	1
3730	"public class A {public void saveAsComplete(HoodieInstant instant, Option<byte[]> data) {ValidationUtils.checkArgument(instant.isInflight(),""Could not mark an already completed instant as complete again "" + instant);transitionState(instant, HoodieTimeline.getCompletedInstant(instant), data);}}"	2
3731	public class A {protected void logException(String message, SQLException se) {if (message != null) {}}}	4
3732	public class A {private void restartProduction(final DtoProduction production) {final BackendServiceAsync backendService = getPortal().getBackendService();AsyncCallback<DtoProductionRequest> callback =new AsyncCallback<DtoProductionRequest>() {@Overridepublic void onFailure(Throwable caught) {}@Overridepublic void onSuccess(final DtoProductionRequest request) {if (request != null) {final DialogBox submitDialog = OrderProductionView.createSubmitProductionDialog();submitDialog.center();backendService.orderProduction(request,new AsyncCallback<DtoProductionResponse>() {public void onSuccess(final DtoProductionResponse response) {submitDialog.hide();}public void onFailure(Throwable failure) {submitDialog.hide();failure.printStackTrace(System.err);}});} else {}}};backendService.getProductionRequest(production.getId(), callback);}}	3
3733	public class A {public static void main(String[] args) throws InterruptedException {BlockingQueue queue = new ArrayBlockingQueue<>(1);CustomThreadPool pool =new CustomThreadPool(1,1,1,TimeUnit.SECONDS,queue,new Notify() {@Overridepublic void notifyListen() {}});pool.execute(new Worker(0));pool.mainNotify();}}	2
3734	public class A {public void populateLuceneIdToIdMap() throws IOException {ids = new int[reader.maxDoc()];NumericDocValues ndv = atomicReader.getNumericDocValues(IndexItem.ID);for (int i = 0; i < reader.maxDoc(); i++) {ids[i] = (int) ndv.get(i);if (ids[i] > lastId) lastId = ids[i];}}}	1
3735	public class A {private static void processNoLongerDelinquent(final Registry registry, final Investment investment, final PowerTenant tenant) {registry.remove(investment);if (investment.getLoan().getPayments().getUnpaid() == 0&& investment.getPrincipal().getUnpaid().isZero()) {return;}tenant.fire(loanNoLongerDelinquentLazy(() -> {final Loan loan = tenant.getLoan(investment.getLoan().getId());return loanNoLongerDelinquent(investment, loan);}));}}	2
3736	"public class A {public ArrayList<String> getAllHistorianSystems() {ArrayList<String> ret = new ArrayList<String>();Connection conn = null;try {conn = getConnection();String sql = ""SELECT DISTINCT(system_name) FROM dmhist_services;"";PreparedStatement stmt = conn.prepareStatement(sql);ResultSet rs = stmt.executeQuery();while (rs.next() == true) {ret.add(rs.getString(1));}rs.close();stmt.close();} catch (SQLException e) {} finally {try {closeConnection(conn);} catch (SQLException e) {}}return ret;}}"	3
3737	"public class A {private void readExtensionPosTableFormat1(int lookupType,int lookupFlags,int lookupSequence,int subtableSequence,long subtableOffset,int subtableFormat)throws IOException {String tableTag = ""GPOS"";in.seekSet(subtableOffset);in.skip(2);int lt = in.readTTFUShort();long eo = in.readTTFULong();if (log.isDebugEnabled()) {}readGPOSSubtable(lt, lookupFlags, lookupSequence, subtableSequence, subtableOffset + eo);}}"	3
3738	public class A {public static void analyzeForUtilizedColumns(Analysis analysis, Node node) {UtilizedColumnsAnalyzer analyzer = new UtilizedColumnsAnalyzer(analysis);try {analyzer.analyze(node);} catch (Exception e) {analysis.getTableColumnReferences().forEach(analysis::addUtilizedTableColumnReferences);}}}	1
3739	public class A {@Overridepublic void initialize() {container.start();registerProperties();}}	2
3740	public class A {public void navigateTo() {driver.get(url);waitForElement(expectedElement, DEFAULT_TIMEOUT, notFoundMsg);}}	1
3741	public class A {@Overridepublic boolean unregisterTaskManager(InstanceID instanceId, Exception cause) {checkInit();TaskManagerRegistration taskManagerRegistration = taskManagerRegistrations.remove(instanceId);if (null != taskManagerRegistration) {internalUnregisterTaskManager(taskManagerRegistration, cause);return true;} else {return false;}}}	2
3742	"public class A {@Override@Measurepublic void clearAllIndexedPathInStoreWithOriginal(ArtifactStore store, ArtifactStore originalStore) {if (!config.isEnabled()) {return;}StoreKey sk = store.getKey();StoreKey osk = originalStore.getKey();long total =iterateRemove(() ->queryFactory.from(IndexedStorePath.class).maxResults(ITERATE_RESULT_SIZE).having(""packageType"").eq(osk.getPackageType()).and().having(""storeType"").eq(sk.getType().name()).and().having(""storeName"").eq(sk.getName()).and().having(""originStoreType"").eq(osk.getType().name()).and().having(""originStoreName"").eq(osk.getName()).toBuilder().build());}}"	2
3743	public class A {public void updateResources(BrokerCluster upgradedCluster, StandardInfraConfig infraConfig)throws Exception {if (upgradedCluster != null) {PersistentVolumeClaim existingClaim = null;StatefulSet existingBroker = null;for (HasMetadata item : resources.getItems()) {if (item instanceof PersistentVolumeClaim) {existingClaim = (PersistentVolumeClaim) item;}if (item instanceof StatefulSet) {existingBroker = (StatefulSet) item;}}KubernetesList newResources = upgradedCluster.getResources();StatefulSet newBroker = null;for (HasMetadata item : newResources.getItems()) {if (item instanceof StatefulSet) {newBroker = (StatefulSet) item;Kubernetes.addObjectAnnotation(item, AnnotationKeys.APPLIED_INFRA_CONFIG, mapper.writeValueAsString(infraConfig));break;}}if (newBroker == null) {return;}if (existingClaim != null && existingBroker != null) {Map<String, Quantity> newRequests =newBroker.getSpec().getVolumeClaimTemplates().get(0).getSpec().getResources().getRequests();newBroker.getSpec().setVolumeClaimTemplates(existingBroker.getSpec().getVolumeClaimTemplates());existingClaim.getSpec().getResources().setRequests(newRequests);newResources =new KubernetesListBuilder().withItems(newResources.getItems()).addToItems(existingClaim).build();}this.resources = newResources;}}}	1
3744	public class A {private ByteBuffer[] readMessages(Consumer consumer, int partitionGroup, short partition, long index, int count)throws IOException {PartitionGroupStore store = storeService.getStore(consumer.getTopic(), partitionGroup);if (index < store.getLeftIndex(partition) || index >= store.getRightIndex(partition)) {return null;}try {ReadResult readRst = store.read(partition, index, count, Long.MAX_VALUE);if (readRst.getCode() == JoyQueueCode.SUCCESS) {if (logger.isDebugEnabled()) {}return readRst.getMessages();} else {}} catch (PositionOverflowException overflow) {throw overflow;} catch (PositionUnderflowException underflow) {throw underflow;}return null;}}	4
3745	public class A {@Overridepublic Map<String, String> discoverLocalMetadata() {if (memberMetadata.isEmpty()) {String availabilityZone = awsClient.getAvailabilityZone();memberMetadata.put(PartitionGroupMetaData.PARTITION_GROUP_ZONE, availabilityZone);getPlacementGroup().ifPresent(pg -> memberMetadata.put(PARTITION_GROUP_PLACEMENT, availabilityZone + '-' + pg));}return memberMetadata;}}	1
3746	public class A {@Overridepublic void trace(final TraceLevel aTraceLevel, final String aMessage, final Throwable aThrowable) {}}	1
3747	"public class A {@DELETE@Path(""{seriesId}/property/{propertyName}"")@RestQuery(name = ""deleteSeriesProperty"",description = ""Deletes a series property"",returnDescription = ""No Content"",pathParameters = {@RestParameter(name = ""seriesId"",description = ""ID of series"",isRequired = true,type = Type.STRING),@RestParameter(name = ""propertyName"",description = ""Name of series property"",isRequired = true,type = Type.STRING)},responses = {@RestResponse(responseCode = SC_NO_CONTENT,description = ""The series property has been deleted.""),@RestResponse(responseCode = SC_NOT_FOUND,description = ""The series or property has not been found.""),@RestResponse(responseCode = SC_UNAUTHORIZED,description = ""If the current user is not authorized to perform this action"")})public Response deleteSeriesProperty(@PathParam(""seriesId"") String seriesId, @PathParam(""propertyName"") String propertyName)throws UnauthorizedException, NotFoundException {if (StringUtils.isBlank(seriesId)) {return Response.status(BAD_REQUEST).build();}if (StringUtils.isBlank(propertyName)) {return Response.status(BAD_REQUEST).build();}try {seriesService.deleteSeriesProperty(seriesId, propertyName);return Response.status(NO_CONTENT).build();} catch (UnauthorizedException e) {throw e;} catch (NotFoundException e) {throw e;} catch (Exception e) {}throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);}}"	3
3748	public class A {@Afterpublic void resetConfig() throws Exception {try (AccumuloClient client = Accumulo.newClient().from(getClientProps()).build()) {if (tservMaxMem != null) {client.instanceOperations().setProperty(Property.TSERV_MAXMEM.getKey(), tservMaxMem);tservMaxMem = null;getCluster().getClusterControl().stopAllServers(ServerType.TABLET_SERVER);getCluster().getClusterControl().startAllServers(ServerType.TABLET_SERVER);}if (tservMajcDelay != null) {client.instanceOperations().setProperty(Property.TSERV_MAJC_DELAY.getKey(), tservMajcDelay);tservMajcDelay = null;}}}}	2
3749	"public class A {private int receiveFlowFiles(final Transaction transaction, final ProcessContext context, final ProcessSession session)throws IOException, ProtocolException {final String userDn = transaction.getCommunicant().getDistinguishedName();final StopWatch stopWatch = new StopWatch(true);final Set<FlowFile> flowFilesReceived = new HashSet<>();long bytesReceived = 0L;while (true) {final long start = System.nanoTime();final DataPacket dataPacket = transaction.receive();if (dataPacket == null) {break;}FlowFile flowFile = session.create();flowFile = session.putAllAttributes(flowFile, dataPacket.getAttributes());final Communicant communicant = transaction.getCommunicant();final String host =StringUtils.isEmpty(communicant.getHost()) ? ""unknown"" : communicant.getHost();final String port =communicant.getPort() < 0 ? ""unknown"" : String.valueOf(communicant.getPort());final Map<String, String> attributes = new HashMap<>(2);attributes.put(SiteToSiteAttributes.S2S_HOST.key(), host);attributes.put(SiteToSiteAttributes.S2S_ADDRESS.key(), host + "":"" + port);flowFile = session.putAllAttributes(flowFile, attributes);flowFile = session.importFrom(dataPacket.getData(), flowFile);final long receiveNanos = System.nanoTime() - start;flowFilesReceived.add(flowFile);String sourceFlowFileIdentifier = dataPacket.getAttributes().get(CoreAttributes.UUID.key());if (sourceFlowFileIdentifier == null) {sourceFlowFileIdentifier = ""<Unknown Identifier>"";}final String transitUri =transaction.getCommunicant().createTransitUri(sourceFlowFileIdentifier);session.getProvenanceReporter().receive(flowFile,transitUri,""urn:nifi:"" + sourceFlowFileIdentifier,""Remote DN="" + userDn,TimeUnit.NANOSECONDS.toMillis(receiveNanos));session.transfer(flowFile, Relationship.ANONYMOUS);bytesReceived += dataPacket.getSize();}transaction.confirm();session.commit();transaction.complete();if (!flowFilesReceived.isEmpty()) {stopWatch.stop();final String flowFileDescription =flowFilesReceived.size() < 20? flowFilesReceived.toString(): flowFilesReceived.size() + "" FlowFiles"";final String uploadDataRate = stopWatch.calculateDataRate(bytesReceived);final long uploadMillis = stopWatch.getDuration(TimeUnit.MILLISECONDS);final String dataSize = FormatUtils.formatDataSize(bytesReceived);}return flowFilesReceived.size();}}"	1
3750	public class A {private boolean ensureUserIsAuthorized(UriAuthorizationFilter uriAuthorizationFilter,HttpServletRequest request,HttpServletResponse response)throws IOException {return uriAuthorizationFilter.ensureUserIsAuthorized(request, response);}}	1
3751	"public class A {@Overridepublic void handleAsyncInvoke(Map<String, Object> inputParams, Row input, ResultFuture<Row> resultFuture) throws Exception {String key = buildCacheKey(inputParams);BoolQueryBuilder boolQueryBuilder = Es6Util.setPredicateclause(sideInfo);boolQueryBuilder = setInputParams(inputParams, boolQueryBuilder);SearchSourceBuilder searchSourceBuilder = initConfiguration();searchSourceBuilder.query(boolQueryBuilder);searchRequest.source(searchSourceBuilder);rhlClient.searchAsync(searchRequest,RequestOptions.DEFAULT,new ActionListener<SearchResponse>() {@Overridepublic void onResponse(SearchResponse searchResponse) {List<Object> cacheContent = Lists.newArrayList();List<Row> rowList = Lists.newArrayList();SearchHit[] searchHits = searchResponse.getHits().getHits();if (searchHits.length > 0) {Elasticsearch6SideTableInfo tableInfo = null;RestHighLevelClient tmpRhlClient = null;try {while (true) {loadDataToCache(searchHits, rowList, cacheContent, input);if (searchHits.length < getFetchSize()) {break;}if (tableInfo == null) {tableInfo = (Elasticsearch6SideTableInfo) sideInfo.getSideTableInfo();tmpRhlClient =Es6Util.getClient(tableInfo.getAddress(),tableInfo.isAuthMesh(),tableInfo.getUserName(),tableInfo.getPassword());}Object[] searchAfterParameter = searchHits[searchHits.length - 1].getSortValues();searchSourceBuilder.searchAfter(searchAfterParameter);searchRequest.source(searchSourceBuilder);searchResponse = tmpRhlClient.search(searchRequest, RequestOptions.DEFAULT);searchHits = searchResponse.getHits().getHits();}dealCacheData(key, CacheObj.buildCacheObj(ECacheContentType.MultiLine, cacheContent));resultFuture.complete(rowList);} catch (Exception e) {dealFillDataError(input, resultFuture, e);} finally {if (tmpRhlClient != null) {try {tmpRhlClient.close();} catch (IOException e) {}}}} else {dealMissKey(input, resultFuture);dealCacheData(key, CacheMissVal.getMissKeyObj());}}@Overridepublic void onFailure(Exception e) {resultFuture.completeExceptionally(new RuntimeException(""Response failed!""));}});}}"	2
3752	"public class A {public void validateForRTGSPayment(final List<PaymentBean> billList, final String type)throws ValidationException, ApplicationException {getGlcodeIds();EntityType entity = null;final List<ValidationError> errors = new ArrayList<ValidationError>();Object[] obj = null;if (billList != null)for (final PaymentBean bean : billList) {if (bean == null) continue;if (type.equals(""Contractor""))obj =(Object[])persistenceService.findByNamedQuery(""getGlDetailForPayableCode"", bean.getBillId(), worksBillGlcodeList);else if (type.equals(""Supplier""))obj =(Object[])persistenceService.findByNamedQuery(""getGlDetailForPayableCode"", bean.getBillId(), purchaseBillGlcodeList);else if (type.equals(FinancialConstants.STANDARD_EXPENDITURETYPE_CONTINGENT))validateCBill(bean, ""Create"");if (type.equals(""Contractor"") || type.equals(""Supplier"")) {if (obj == null) {errors.add(new ValidationError(""entityType"",""Sub ledger details are missing for this bill number : ""+ bean.getBillNumber()));throw new ValidationException(errors);}entity = getEntity(Integer.valueOf(obj[0].toString()), (Serializable) obj[1]);if (type.equals(""Supplier"")&& (StringUtils.isBlank(entity.getTinno())|| StringUtils.isBlank(entity.getBankname())|| StringUtils.isBlank(entity.getBankaccount())|| StringUtils.isBlank(entity.getIfsccode()))) {errors.add(new ValidationError(""paymentMode"",""BankName, BankAccount,IFSC Code, Tin number is mandatory for RTGS Payment for ""+ entity.getName()));throw new ValidationException(errors);} else validateEntity(entity);}}}}"	4
3753	"public class A {@DELETE@JacksonSerialized@Path(""/{id}"")@Produces(MediaType.APPLICATION_JSON)public Response deleteAdapter(@PathParam(""id"") String id, @PathParam(""username"") String userName) {try {managementService.deleteAdapterTemplates(id);return ok(true);} catch (AdapterException e) {return fail();}}}"	1
3754	"public class A {private static String checkHighlightColor(String value) {String defaultColor = ""00000000"";try {if (value == null || value.equals("""") || value.equalsIgnoreCase(""none"")) return defaultColor;Integer.parseInt(value, 16);return value;} catch (NumberFormatException e) {return defaultColor;}}}"	1
3755	public class A {public static boolean deleteOnExitSilently(@Nonnull final Path path, @Nonnull final FileSystem fs) {try {return fs.deleteOnExit(path);} catch (final IOException e) {return false;}}}	1
3756	"public class A {@GET@Produces(MediaType.APPLICATION_JSON)@Path(""/genCSV"")public Response generateCSVFromLastestJSON(@QueryParam(""collectionCode"") String collectionCode,@QueryParam(""exportLimit"") int exportLimit)throws UnknownHostException {JsonDeserializer jsonD = new JsonDeserializer();String fileName = jsonD.generateJSON2CSV_100K_BasedOnTweetCount(collectionCode, exportLimit);fileName =PersisterConfigurator.getInstance().getProperty(PersisterConfigurationProperty.PERSISTER_DOWNLOAD_URL)+ collectionCode+ ""/""+ fileName;JSONObject obj = new JSONObject();obj.putAll(ResultStatus.getUIWrapper(collectionCode, null, fileName, true));return Response.ok(obj.toJSONString()).build();}}"	3
3757	public class A {public void sent(Channel channel, Object message) {for (ChannelHandler listener : channelHandlers) {try {listener.sent(channel, message);} catch (Throwable t) {}}}}	1
3758	"public class A {private void executeUpdate() {if (updateThread != null) {return;}Runnable updateRunnable =new Runnable() {@Overridepublic void run() {try {IUpdateManager updateManager = getUpdateManager();updateManager.update();} catch (Throwable e) {try {long cooldown = configurator.getUpdateFailureCooldown();Thread.sleep(cooldown);} catch (InterruptedException e1) {}}try {setStateSynchronized(HostState.IDLE);} catch (IOException e) {}updateThread = null;try {nextCommandSynchronized();} catch (IOException e) {}}};updateThread = new Thread(updateRunnable, ""Update manager thread"");updateThread.start();}}"	6
3759	public class A {private void tearDownApnsHttp2Connection(final ApnsClient client) {if (client != null) {client.close().whenComplete((result, cause) -> {if (result != null) {} else if (cause != null) {final Throwable t = cause;}});}}}	3
3760	public class A {@Overridepublic void run() {while (terminate == false) {synchronized (this) {try {this.wait(checkIntervalMsec);} catch (InterruptedException e) {}}if (terminate) {break;}Status newStatus = getStatus();if (newStatus == Status.RUNNING|| newStatus == Status.FINISHED|| newStatus == Status.ERROR|| newStatus == Status.ABORT) {break;}}terminate = true;}}	1
3761	"public class A {public static com.liferay.portal.kernel.model.EmailAddress fetchEmailAddress(HttpPrincipal httpPrincipal, long emailAddressId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(EmailAddressServiceUtil.class,""fetchEmailAddress"",_fetchEmailAddressParameterTypes2);MethodHandler methodHandler = new MethodHandler(methodKey, emailAddressId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.EmailAddress) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
3762	"public class A {private String downloader(final WebElement element, final String attribute)throws IOException, NullPointerException, URISyntaxException {final String fileToDownloadLocation = element.getAttribute(attribute);if (fileToDownloadLocation.trim().equals("""")) {throw new NullPointerException(""The element you have specified does not link to anything!"");}final URL fileToDownload = new URL(fileToDownloadLocation);final File downloadedFile = new TempFile(""test"", "".tmp"");if (downloadedFile.canWrite() == false) {downloadedFile.setWritable(true);}try (final CloseableHttpClient client = HttpClientBuilder.create().build()) {final BasicHttpContext localContext = new BasicHttpContext();if (mimicWebDriverCookieState) {localContext.setAttribute(ClientContext.COOKIE_STORE, mimicCookieState(driver.manage().getCookies()));}final HttpGet httpget = new HttpGet(fileToDownload.toURI());final HttpParams httpRequestParameters = httpget.getParams();httpRequestParameters.setParameter(ClientPNames.HANDLE_REDIRECTS, followRedirects);httpget.setParams(httpRequestParameters);try (final CloseableHttpResponse response = client.execute(httpget, localContext)) {httpStatusOfLastDownloadAttempt = response.getStatusLine().getStatusCode();FileUtils.copyInputStreamToFile(response.getEntity().getContent(), downloadedFile);}}final String downloadedFileAbsolutePath = downloadedFile.getAbsolutePath();return downloadedFileAbsolutePath;}}"	5
3763	public class A {public RhinoScriptBuilder evaluateChain(final InputStream stream, final String sourceName)throws IOException {notNull(stream);try (stream) {getContext().evaluateReader(scope, new InputStreamReader(stream), sourceName, 1, null);return this;} catch (final RhinoException e) {throw e;} catch (final RuntimeException e) {throw e;}}}	2
3764	public class A {protected final HashMap<String, Response> conversion(final String networkId, final Port port) {HashMap<String, Response> respList = new HashMap<String, Response>();for (String nwcId : conversionTable.getNetwork(networkId)) {NetworkInterface networkIf = this.networkInterfaces.get(nwcId);if (networkIf == null) {continue;}Response resp = networkIf.putPort(port);respList.put(nwcId, resp);try {Port body = resp.getBody(Port.class);conversionTable.addEntryPort(networkId, port.getNode(), port.getId(), nwcId, body.getNode(), body.getId());} catch (Exception e) {}}return respList;}}	2
3765	public class A {private List<JobTaskDirectoryMatch> findOrphansForTask(JobTask task) {List<JobTaskDirectoryMatch> rv = new ArrayList<>();Job job = getJob(task.getJobUUID());if (job == null) {return rv;}List<String> expectedTaskHosts = task.getAllTaskHosts();for (HostState host : hostManager.listHostStatus(job.getMinionType())) {if ((host == null)|| !host.isUp()|| host.isDead()|| host.getHostUuid().equals(task.getRebalanceTarget())) {continue;}if (!expectedTaskHosts.contains(host.getHostUuid())) {JobTaskDirectoryMatch.MatchType type = null;if (host.hasLive(task.getJobKey()) || host.hasIncompleteReplica(task.getJobKey())) {type = JobTaskDirectoryMatch.MatchType.ORPHAN_LIVE;}if (type != null) {rv.add(new JobTaskDirectoryMatch(type, task.getJobKey(), host.getHostUuid()));}}}return rv;}}	1
3766	public class A {public List<CapabilityState> getCapabilityStates()throws IOException, ApiException, AuthenticationException {return executeGetList(API_URL_CAPABILITY_STATES, CapabilityState[].class);}}	1
3767	public class A {public void checkAuthorization(final Organisation organisation, final Device device, final DeviceFunction function)throws NotAuthorizedException {final List<DeviceAuthorization> authorizations =this.deviceAuthorizationRepository.findByOrganisationAndDevice(organisation, device);final List<DeviceFunction> authorizedDeviceFunctions =this.getDeviceFunctionsForAuthorizations(authorizations);if (authorizedDeviceFunctions != null && authorizedDeviceFunctions.contains(function)) {return;}throw new NotAuthorizedException(organisation.getOrganisationIdentification());}}	2
3768	public class A {private void triggerBeforeBegin() {for (TransactionHook hook : getCurrentHooks()) {try {hook.beforeBegin();} catch (Exception e) {}}}}	1
3769	"public class A {public ModZobjBst findById(sernet.gs.reveng.ModZobjBstId id) {try {ModZobjBst instance =(ModZobjBst) sessionFactory.getCurrentSession().get(""sernet.gs.reveng.ModZobjBst"", id);if (instance == null) {} else {}return instance;} catch (RuntimeException re) {throw re;}}}"	4
3770	public class A {public static void importIfExist(String linterName,SensorContext sensorContext,File reportFile,BiConsumer<File, SensorContext> importFunction) {if (!reportFile.exists()) {return;}importFunction.accept(reportFile, sensorContext);}}	1
3771	"public class A {private void downloadFile(InstallProgressTracker installTracker,String urlPrefix,FileDescriptor fileDescriptor,String newFilePath) {int downloadAttempts = 0;String downloadFileChecksum = null;do {try (TaskActivity ta =TaskActivity.createActive(""Downloading "" + fileDescriptor.getFileName())) {myToolbox.getUIRegistry().getMenuBarRegistry().addTaskActivity(ta);URL downloadUrl = getDownloadUrl(urlPrefix, fileDescriptor);downloadUpdateFile(downloadUrl, newFilePath);downloadAttempts++;installTracker.incrementRetrievedFiles();File file = new File(newFilePath);installTracker.addToBytesDownloaded(FileUtils.sizeOf(file));downloadFileChecksum = DescriptorUtils.createChecksum(file);ta.setComplete(true);}} while (!fileDescriptor.getChecksum().equals(downloadFileChecksum)&& downloadAttempts <= DEFAULT_DOWNLOAD_ATTEMPTS);}}"	1
3772	public class A {private static void dumpAllThreads(String message) {}}	1
3773	public class A {public AnomalyDetectionInputContextBuilder fetchTimeSeriesData(List<Pair<Long, Long>> startEndTimeRanges, boolean endTimeInclusive)throws JobExecutionException, ExecutionException {Map<DimensionKey, MetricTimeSeries> dimensionKeyMetricTimeSeriesMap =getTimeSeriesForAnomalyDetection(anomalyFunctionSpec, startEndTimeRanges, endTimeInclusive);Map<DimensionMap, MetricTimeSeries> dimensionMapMetricTimeSeriesMap = new HashMap<>();for (Map.Entry<DimensionKey, MetricTimeSeries> entry :dimensionKeyMetricTimeSeriesMap.entrySet()) {DimensionKey dimensionKey = entry.getKey();String[] dimensionValues = dimensionKey.getDimensionValues();boolean isOTHERDimension = false;for (String dimensionValue : dimensionValues) {if (dimensionValue.equalsIgnoreCase(ResponseParserUtils.OTHER)|| dimensionValue.equalsIgnoreCase(ResponseParserUtils.UNKNOWN)) {isOTHERDimension = true;break;}}if (isOTHERDimension) {continue;}DimensionMap dimensionMap = DimensionMap.fromDimensionKey(dimensionKey, collectionDimensions);dimensionMapMetricTimeSeriesMap.put(dimensionMap, entry.getValue());if (entry.getValue().getTimeWindowSet().size() < 1) {}}this.anomalyDetectionInputContext.setDimensionMapMetricTimeSeriesMap(dimensionMapMetricTimeSeriesMap);return this;}}	1
3774	public class A {public static com.liferay.dispatch.model.DispatchTriggerSoap updateDispatchTrigger(long dispatchTriggerId,boolean active,String cronExpression,com.liferay.dispatch.executor.DispatchTaskClusterMode dispatchTaskClusterMode,int endDateMonth,int endDateDay,int endDateYear,int endDateHour,int endDateMinute,boolean neverEnd,boolean overlapAllowed,int startDateMonth,int startDateDay,int startDateYear,int startDateHour,int startDateMinute)throws RemoteException {try {com.liferay.dispatch.model.DispatchTrigger returnValue =DispatchTriggerServiceUtil.updateDispatchTrigger(dispatchTriggerId,active,cronExpression,dispatchTaskClusterMode,endDateMonth,endDateDay,endDateYear,endDateHour,endDateMinute,neverEnd,overlapAllowed,startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute);return com.liferay.dispatch.model.DispatchTriggerSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
3775	"public class A {private void checkBlockchainState() {BlockchainState state =propertiesHolder.isLightClient()? BlockchainState.LIGHT_CLIENT: (lookupBlockchainProcessor().isDownloading()|| blockchain.getLastBlockTimestamp() < timeService.getEpochTime() - 600)? BlockchainState.DOWNLOADING: (blockchain.getLastBlock().getBaseTarget()/ blockchainConfig.getCurrentConfig().getInitialBaseTarget()> 10)? BlockchainState.FORK: BlockchainState.UP_TO_DATE;if (state != currentBlockchainState) {JSONObject json = new JSONObject(myPeerInfo);json.put(""blockchainState"", state.ordinal());myPeerInfoResponse = JSON.prepare(json);json.put(""requestType"", ""getInfo"");myPeerInfoRequest = JSON.prepareRequest(json);currentBlockchainState = state;}}}"	1
3776	"public class A {@Overridepublic boolean acquireTieLock() {holdingTieLock = distributedLockService.lock(""PERSISTENCE_"" + regionPath, 0, -1);if (!holdingTieLock) {if (logger.isDebugEnabled(LogMarker.PERSIST_ADVISOR_VERBOSE)) {}}return holdingTieLock;}}"	1
3777	"public class A {private static void setVault() throws VaultException {final VaultConfig vaultConfig =new VaultConfig().address(getVaultAddress()).token(getVaultToken());System.out.println(""Vault PEM path: '"" + getVaultSslPEMPath() + ""'"");System.out.println(""context.getVaultSslPEMPath().trim().equals(\""\""): "" + getVaultSslPEMPath().equals(""""));if (getVaultSslPEMPath().trim().equals("""")) {} else {vaultConfig.sslConfig(new SslConfig().pemFile(new File(getVaultSslPEMPath().trim())).build());}vaultConfig.build();vault = new Vault(vaultConfig);}}"	7
3778	public class A {@Deprecated(forRemoval = true)public Builder disableEmbeddedIndexes(boolean disableEmbeddedIndexes) {assertNotLocked();return this;}}	1
3779	"public class A {public List findByProperty(String propertyName, Object value) {try {String queryString =""from MSchutzbedarfkategTxt as model where model."" + propertyName + ""= ?"";Query queryObject = getSession().createQuery(queryString);queryObject.setParameter(0, value);return queryObject.list();} catch (RuntimeException re) {throw re;}}}"	2
3780	public class A {private void o3ProcessPartitionSafe(Sequence partitionSubSeq, long cursor, O3PartitionTask partitionTask) {try {O3PartitionJob.processPartition(tempMem16b, partitionTask, cursor, partitionSubSeq);} catch (CairoException | CairoError e) {} catch (Throwable e) {}}}	2
3781	"public class A {@Testpublic void testQueryBboxLatLongEPSGCode() {Document doc = getAsDOM(WFS_GET_FEATURE + LATLONG + "",EPSG:4326"");assertXpathEvaluatesTo(""0"", ""/wfs:FeatureCollection/@numberOfFeatures"", doc);assertXpathCount(0, ""//ex:geomContainer"", doc);}}"	1
3782	public class A {@Overrideprotected ExecuteResult doWork(ExecutableContext context, IJobRunner jobRunner)throws ExecuteException {KylinConfig kylinConfig = context.getConfig();CubeManager cubeManager = CubeManager.getInstance(kylinConfig);TableMetadataManager metaMgr = TableMetadataManager.getInstance(kylinConfig);SnapshotManager snapshotMgr = SnapshotManager.getInstance(kylinConfig);CubeInstance cube = cubeManager.getCube(LookupExecutableUtil.getCubeName(this.getParams()));List<String> segmentIDs = LookupExecutableUtil.getSegments(this.getParams());String lookupTableName = LookupExecutableUtil.getLookupTableName(this.getParams());CubeDesc cubeDesc = cube.getDescriptor();try {TableDesc tableDesc = metaMgr.getTableDesc(lookupTableName, cube.getProject());IReadableTable hiveTable = SourceManager.createReadableTable(tableDesc, null);SnapshotTable snapshot = snapshotMgr.buildSnapshot(hiveTable, tableDesc, cube.getConfig());if (cubeDesc.isGlobalSnapshotTable(lookupTableName)) {LookupExecutableUtil.updateSnapshotPathToCube(cubeManager, cube, lookupTableName, snapshot.getResourcePath());} else {LookupExecutableUtil.updateSnapshotPathToSegments(cubeManager, cube, segmentIDs, lookupTableName, snapshot.getResourcePath());}return new ExecuteResult();} catch (IOException e) {return ExecuteResult.createError(e);}}}	3
3783	"public class A {private static String formatUndefined(String formatPattern) {String undefinedFormatPattern =formatPattern.replaceAll(IDENTIFY_FORMAT_PATTERN_PATTERN, ""%1\\$s"");try {return String.format(undefinedFormatPattern, ""-"");} catch (IllegalArgumentException e) {final Logger logger = LoggerFactory.getLogger(NeeoItemValueConverter.class);return ""(Error)"";}}}"	1
3784	"public class A {public List<GenSolvablePolynomial<C>> call() {try {List<GenSolvablePolynomial<C>> G = e1.leftGB(modv, F);if (debug) {}return G;} catch (PreemptingException e) {throw new RuntimeException(""SGBProxy e1 preempted "" + e);} catch (Exception e) {throw new RuntimeException(""SGBProxy e1 "" + e);}}}"	3
3785	public class A {public void propagateLine(String line) throws IOException {connectionListener.handleInput(line);}}	1
3786	"public class A {public static void processSemanticStream(Page page, final InputStream stream) {page.getRequestCycle().scheduleRequestHandlerAfterCurrent(new IRequestHandler() {public void detach(IRequestCycle requestCycle) {}public void respond(IRequestCycle requestCycle) {WebResponse response = (WebResponse) requestCycle.getResponse();response.setContentType(""application/rdf+xml"");response.setHeader(""Content-Disposition"", ""attachment;filename=eegdatabase.owl"");response.setStatus(HttpServletResponse.SC_OK);OutputStream out = response.getOutputStream();try {copyLarge(stream, out);out.flush();out.close();} catch (Exception e) {}}});}}"	3
3787	public class A {public void registerDiscoveryService(CaddxDiscoveryService discoveryService) {this.discoveryService = discoveryService;}}	1
3788	"public class A {public static void main(String[] args) {ZooKeeperServerMain main = new ZooKeeperServerMain();try {main.initializeAndRun(args);} catch (IllegalArgumentException e) {System.err.println(USAGE);ZKAuditProvider.addServerStartFailureAuditLog();ServiceUtils.requestSystemExit(ExitCode.INVALID_INVOCATION.getValue());} catch (ConfigException e) {System.err.println(""Invalid config, exiting abnormally"");ZKAuditProvider.addServerStartFailureAuditLog();ServiceUtils.requestSystemExit(ExitCode.INVALID_INVOCATION.getValue());} catch (DatadirException e) {System.err.println(""Unable to access datadir, exiting abnormally"");ZKAuditProvider.addServerStartFailureAuditLog();ServiceUtils.requestSystemExit(ExitCode.UNABLE_TO_ACCESS_DATADIR.getValue());} catch (AdminServerException e) {System.err.println(""Unable to start AdminServer, exiting abnormally"");ZKAuditProvider.addServerStartFailureAuditLog();ServiceUtils.requestSystemExit(ExitCode.ERROR_STARTING_ADMIN_SERVER.getValue());} catch (Exception e) {ZKAuditProvider.addServerStartFailureAuditLog();ServiceUtils.requestSystemExit(ExitCode.UNEXPECTED_ERROR.getValue());}ServiceUtils.requestSystemExit(ExitCode.EXECUTION_FINISHED.getValue());}}"	7
3789	public class A {@Overridepublic void run() {try {closeable.close();} catch (Throwable e) {Throwables.propagate(e);}}}	1
3790	public class A {public GpioPinDigitalOutput getOutputPin(ChannelUID channel) {GpioPinDigitalOutput outputPin = outputPins.get(channel);if (outputPin == null) {outputPin = initializeOutputPin(channel);outputPins.put(channel, outputPin);}return outputPin;}}	1
3791	"public class A {@GuardedBy(""lock"")private void createNewJobMasterServiceProcess(UUID leaderSessionId) throws FlinkException {Preconditions.checkState(jobMasterServiceProcess.closeAsync().isDone());try {runningJobsRegistry.setJobRunning(getJobID());} catch (IOException e) {throw new FlinkException(String.format(""Failed to set the job %s to running in the running jobs registry."", getJobID()),e);}jobMasterServiceProcess = jobMasterServiceProcessFactory.create(leaderSessionId);forwardIfValidLeader(leaderSessionId,jobMasterServiceProcess.getJobMasterGatewayFuture(),jobMasterGatewayFuture,""JobMasterGatewayFuture from JobMasterServiceProcess"");forwardResultFuture(leaderSessionId, jobMasterServiceProcess.getResultFuture());confirmLeadership(leaderSessionId, jobMasterServiceProcess.getLeaderAddressFuture());}}"	1
3792	public class A {public void printInfo(Logger logger) {for (VQSRRange r : points) {}}}	1
3793	"public class A {@Overridepublic void sgetrf(int M, int N, INDArray A, INDArray IPIV, INDArray INFO) {INDArray a = A;if (A.ordering() == 'c') a = A.dup('f');if (Nd4j.getExecutioner() instanceof GridExecutioner)((GridExecutioner) Nd4j.getExecutioner()).flushQueue();val ctx = allocator.getDeviceContext();cusolverDnHandle_t handle = ctx.getSolverHandle();cusolverDnContext solverDn = new cusolverDnContext(handle);synchronized (handle) {int result =cusolverDnSetStream(new cusolverDnContext(handle), new CUstream_st(ctx.getCublasStream()));if (result != 0) throw new BlasException(""solverSetStream failed"");CublasPointer xAPointer = new CublasPointer(a, ctx);val worksizeBuffer = (BaseCudaDataBuffer) Nd4j.getDataBufferFactory().createInt(1);worksizeBuffer.lazyAllocateHostPointer();int stat =cusolverDnSgetrf_bufferSize(solverDn,M,N,(FloatPointer) xAPointer.getDevicePointer(),M,(IntPointer) worksizeBuffer.addressPointer());if (stat != CUSOLVER_STATUS_SUCCESS) {throw new BlasException(""cusolverDnSgetrf_bufferSize failed"", stat);}int worksize = worksizeBuffer.getInt(0);Pointer workspace = new Workspace(worksize * Nd4j.sizeOfDataType());stat =cusolverDnSgetrf(solverDn,M,N,(FloatPointer) xAPointer.getDevicePointer(),M,new CudaPointer(workspace).asFloatPointer(),new CudaPointer(allocator.getPointer(IPIV, ctx)).asIntPointer(),new CudaPointer(allocator.getPointer(INFO, ctx)).asIntPointer());if (stat != CUSOLVER_STATUS_SUCCESS) {throw new BlasException(""cusolverDnSgetrf failed"", stat);}}allocator.registerAction(ctx, a);allocator.registerAction(ctx, INFO);allocator.registerAction(ctx, IPIV);if (a != A) A.assign(a);}}"	1
3794	"public class A {private void deleteFileDir(FileSystem fs, Path deletePath) throws IOException {if (!simulate) {if (fs.delete(deletePath, true)) {return;} else {throw new IOException(""Path "" + deletePath + "" couldn't be deleted."");}} else {}}}"	2
3795	"public class A {private ThingTypeUID identifyModel(VehicleConfig vehicleConfig) {switch (vehicleConfig.car_type) {case ""models"":case ""models2"":return TeslaBindingConstants.THING_TYPE_MODELS;case ""modelx"":return TeslaBindingConstants.THING_TYPE_MODELX;case ""model3"":return TeslaBindingConstants.THING_TYPE_MODEL3;case ""modely"":return TeslaBindingConstants.THING_TYPE_MODELY;default:return null;}}}"	2
3796	"public class A {@Overridepublic boolean processAction(ActionRequest actionRequest, ActionResponse actionResponse)throws PortletException {long oAuth2ApplicationId = ParamUtil.getLong(actionRequest, ""oAuth2ApplicationId"", -1);long[] oAuth2AuthorizationIds =StringUtil.split(ParamUtil.getString(actionRequest, ""oAuth2AuthorizationIds""), 0L);try {if ((oAuth2AuthorizationIds.length == 0) && (oAuth2ApplicationId != -1)) {_oAuth2AuthorizationService.revokeAllOAuth2Authorizations(oAuth2ApplicationId);} else {for (long oAuth2AuthorizationId : oAuth2AuthorizationIds) {_oAuth2AuthorizationService.revokeOAuth2Authorization(oAuth2AuthorizationId);}}} catch (PortalException portalException) {if (_log.isDebugEnabled()) {}SessionErrors.add(actionRequest, portalException.getClass());}String backURL = ParamUtil.get(actionRequest, ""backURL"", StringPool.BLANK);if (Validator.isNotNull(backURL)) {actionResponse.setRenderParameter(""redirect"", backURL);}return true;}}"	1
3797	public class A {public static synchronized FileSystem getCreate(URI uri, Configuration conf) throws IOException {FileSystem fs = FileSystem.get(uri, conf);UserGroupInformation currentUser = UserGroupInformation.getCurrentUser();if (fs instanceof CalvalusShFileSystem) {} else if (currentUser == UserGroupInformation.getLoginUser()) {} else {final CalvalusShFileSystem cfs = new CalvalusShFileSystem(currentUser.getShortUserName(), fs);cfs.initialize(uri, conf);FileSystemSetter.addFileSystemForTesting(FileSystem.getDefaultUri(conf), conf, cfs);fs = cfs;}return fs;}}	3
3798	public class A {public static Node getNodeWithXpath(Object obj, String expression) {Object root = null;if (obj instanceof Document) {Document doc = (Document) obj;root = doc.getDocumentElement();} else {root = (Node) obj;}XPath xpath = XPathFactory.newInstance().newXPath();xpath.setNamespaceContext(new MetadataNamespaceContext());Node result = null;try {result = ((Node) xpath.evaluate(expression, root, XPathConstants.NODE));return result;} catch (XPathExpressionException e) {return null;}}}	1
3799	public class A {@Overridepublic void onExit(Controller controller) {}}	1
3800	public class A {static List<List<Pair<SnapshotFileInfo, Long>>> getBalancedSplits(final List<Pair<SnapshotFileInfo, Long>> files, final int ngroups) {Collections.sort(files,new Comparator<Pair<SnapshotFileInfo, Long>>() {public int compare(Pair<SnapshotFileInfo, Long> a, Pair<SnapshotFileInfo, Long> b) {long r = a.getSecond() - b.getSecond();return (r < 0) ? -1 : ((r > 0) ? 1 : 0);}});List<List<Pair<SnapshotFileInfo, Long>>> fileGroups = new LinkedList<>();long[] sizeGroups = new long[ngroups];int hi = files.size() - 1;int lo = 0;List<Pair<SnapshotFileInfo, Long>> group;int dir = 1;int g = 0;while (hi >= lo) {if (g == fileGroups.size()) {group = new LinkedList<>();fileGroups.add(group);} else {group = fileGroups.get(g);}Pair<SnapshotFileInfo, Long> fileInfo = files.get(hi--);sizeGroups[g] += fileInfo.getSecond();group.add(fileInfo);g += dir;if (g == ngroups) {dir = -1;g = ngroups - 1;} else if (g < 0) {dir = 1;g = 0;}}if (LOG.isDebugEnabled()) {for (int i = 0; i < sizeGroups.length; ++i) {}}return fileGroups;}}	1
3801	"public class A {public static X509Certificate loadX509CertificateFromFile(File x509CertificateFile)throws IOException, CertificateNotYetValidException, CertificateExpiredException,CertificateException {if (!x509CertificateFile.exists()) {String message = ""The given file \"""" + x509CertificateFile + ""\"" does not exist."";LOG.error(message);throw new IOException(message);} else if (!x509CertificateFile.canRead()) {String message = ""The given file \"""" + x509CertificateFile + ""\"" cannot be read."";LOG.error(message);throw new IOException(message);}CertificateFactory certificateFactory = null;try {certificateFactory =CertificateFactory.getInstance(""X.509"", BouncyCastleProvider.PROVIDER_NAME);} catch (NoSuchProviderException e) {throw new RuntimeException(""Certificate provider not found."", e);}Certificate certificate =certificateFactory.generateCertificate(new FileInputStream(x509CertificateFile));if (certificate == null) {String message =""The given file \"""" + x509CertificateFile + ""\"" does not contain a X.509 certificate."";LOG.error(message);throw new CertificateException(message);}if (!certificate.getType().equalsIgnoreCase(""x.509"")) {String message =""The certificate contained in the given file \""""+ x509CertificateFile+ ""\"" is not a X.509 certificate."";throw new CertificateException(message);}X509Certificate x509Certificate = (X509Certificate) certificate;x509Certificate.checkValidity();return x509Certificate;}}"	2
3802	public class A {private static void disable(SingletonService service) {try {service.disable();} catch (RuntimeException e) {}}}	1
3803	public class A {public String evaluateAsString(Exchange exchange) throws Exception {StringWriter buffer = new StringWriter();SequenceIterator iter = getExpression().iterator(createDynamicContext(exchange));for (Item item = iter.next(); item != null; item = iter.next()) {buffer.append(item.getStringValueCS());}String answer = buffer.toString();buffer.close();return answer;}}	1
3804	public class A {private void removeFloatingIpFromNodeifAny(RegionAndId regionAndId) {try {removeFloatingIpFromNodeAndDeallocate.apply(regionAndId);} catch (RuntimeException e) {}}}	1
3805	"public class A {@Overridepublic JAXBContext getJAXBContext() throws KapuaException {if (context == null) {Map<String, Object> properties = new HashMap<>(1);properties.put(MarshallerProperties.JSON_WRAPPER_AS_ARRAY_NAME, true);Class<?>[] classes =new Class<?>[] {KapuaTmetadata.class,KapuaTocd.class,KapuaTad.class,KapuaTicon.class,TscalarImpl.class,KapuaToption.class,KapuaTdesignate.class,KapuaTobject.class,MetatypeXmlRegistry.class,EndPointContainer.class,SimpleEndPoint.class,ParentEndPoint.class,EndChainEndPoint.class,ServiceEvent.class,EventStoreRecordCreator.class,EventStoreRecordListResult.class,EventStoreRecordQuery.class,EventStoreXmlRegistry.class,JobStartOptions.class,ThrowableInfo.class,ExceptionInfo.class,CleanJobDataExceptionInfo.class,JobAlreadyRunningExceptionInfo.class,JobEngineExceptionInfo.class,JobExecutionEnqueuedExceptionInfo.class,JobInvalidTargetExceptionInfo.class,JobMissingStepExceptionInfo.class,JobMissingTargetExceptionInfo.class,JobNotRunningExceptionInfo.class,JobResumingExceptionInfo.class,JobRunningExceptionInfo.class,JobStartingExceptionInfo.class,JobStoppingExceptionInfo.class};try {context = JAXBContextFactory.createContext(classes, properties);} catch (JAXBException jaxbException) {throw KapuaException.internalError(jaxbException, ""Error creating JAXBContext!"");}}return context;}}"	1
3806	public class A {private String fieldsValue(List<Criteria.Field> fields) {StringBuilder sb = new StringBuilder();if (fields != null) {for (int i = 0; i < fields.size(); i++) {if (i > 0) {sb.append(Mapper.ROWKEY_SEP);}sb.append(fields.get(i).getValue());}}return sb.toString();}}	1
3807	"public class A {public void writePageHeaderAndDataIntoBuff(ByteBuffer data, PageHeader header, boolean isOnlyOnePageChunk) throws PageException {try {ReadWriteForEncodingUtils.writeUnsignedVarInt(header.getUncompressedSize(), pageBuffer);ReadWriteForEncodingUtils.writeUnsignedVarInt(header.getCompressedSize(), pageBuffer);if (!isOnlyOnePageChunk) {header.getStatistics().serialize(pageBuffer);}statistics.mergeStatistics(header.getStatistics());} catch (IOException e) {throw new PageException(""IO Exception in writeDataPageHeader,ignore this page"", e);}numOfPages++;try (WritableByteChannel channel = Channels.newChannel(pageBuffer)) {channel.write(data);} catch (IOException e) {throw new PageException(e);}}}"	2
3808	public class A {private boolean handle(List<ZookeeperJob> zookeeperJobList) {if (CollectionUtils.isEmpty(zookeeperJobList)) {return false;}ZookeeperJob defaultJob = ListUtils.getFirst(zookeeperJobList);ZookeeperJob.Type type = defaultJob.getType();switch (type) {case ADD:return handleUpdate(zookeeperJobList);case REMOVE:return handleDelete(zookeeperJobList);case CLEAR:return handleClear(zookeeperJobList);}return false;}}	1
3809	"public class A {@Overridepublic void updateWidgetPosition(String pageCode, Integer frameToMove, Integer destFrame) {Connection conn = null;int TEMP_FRAME_POSITION = -9999;try {conn = this.getConnection();conn.setAutoCommit(false);this.updateWidgetPosition(pageCode, frameToMove, TEMP_FRAME_POSITION, conn);this.updateWidgetPosition(pageCode, destFrame, frameToMove, conn);this.updateWidgetPosition(pageCode, TEMP_FRAME_POSITION, destFrame, conn);this.updatePageMetadataDraftLastUpdate(pageCode, new Date(), conn);conn.commit();} catch (Throwable t) {this.executeRollback(conn);throw new RuntimeException(""Error while updating widget position"", t);} finally {closeConnection(conn);}}}"	1
3810	public class A {@Overridepublic Object jobRun() {start = System.currentTimeMillis();while (abort == false) {count++;try {Thread.sleep(10);} catch (InterruptedException e) {}if (System.currentTimeMillis() - start > time) break;}return System.currentTimeMillis() - start;}}	1
3811	public class A {@PostConstructpublic void init() {commonInit();}}	2
3812	public class A {public void syncNewCards() {int rowAffected = queries.syncNewCards();}}	1
3813	public class A {@Overridepublic String getImageSrc() {if (user.getPortraitId() <= 0) {return null;}try {return user.getPortraitURL(themeDisplay);} catch (Exception exception) {if (_log.isDebugEnabled()) {}}return null;}}	1
3814	public class A {@Overridepublic void run() {for (JDBCJournalRecord record : records) {if (logger.isTraceEnabled()) {}record.complete(success);}}}	1
3815	"public class A {@Testpublic void testListEndpoints() throws Exception {template.sendBody(""browse:foo"", body1);template.sendBody(""browse:foo"", body2);Collection<Endpoint> list = context.getEndpoints();assertEquals(2, list.size(), ""number of endpoints"");for (Endpoint endpoint : list) {List<Exchange> exchanges = ((BrowseEndpoint) endpoint).getExchanges();assertEquals(2, exchanges.size(), ""Exchanges received on "" + endpoint);assertInMessageBodyEquals(exchanges.get(0), body1);assertInMessageBodyEquals(exchanges.get(1), body2);}}}"	1
3816	public class A {private Callable<Void> getTaskStartingCallable(final ConnectorTaskId taskId) {return () -> {try {startTask(taskId);} catch (Throwable t) {onFailure(taskId, t);}return null;};}}	1
3817	"public class A {void bindTo(final MetricRegistry registry) {final MemoryMXBean platformMXBean = ManagementFactory.getPlatformMXBean(MemoryMXBean.class);registry.add(""jvm.memory.heap.used"",Labels.EMPTY,new DoubleSupplier() {@Overridepublic double get() {return platformMXBean.getHeapMemoryUsage().getUsed();}});registry.add(""jvm.memory.heap.committed"",Labels.EMPTY,new DoubleSupplier() {@Overridepublic double get() {return platformMXBean.getHeapMemoryUsage().getCommitted();}});registry.add(""jvm.memory.heap.max"",Labels.EMPTY,new DoubleSupplier() {@Overridepublic double get() {return platformMXBean.getHeapMemoryUsage().getMax();}});registry.add(""jvm.memory.non_heap.used"",Labels.EMPTY,new DoubleSupplier() {@Overridepublic double get() {return platformMXBean.getNonHeapMemoryUsage().getUsed();}});registry.add(""jvm.memory.non_heap.committed"",Labels.EMPTY,new DoubleSupplier() {@Overridepublic double get() {return platformMXBean.getNonHeapMemoryUsage().getCommitted();}});registry.add(""jvm.memory.non_heap.max"",Labels.EMPTY,new DoubleSupplier() {@Overridepublic double get() {return platformMXBean.getNonHeapMemoryUsage().getMax();}});List<MemoryPoolMXBean> memoryPoolMXBeans = ManagementFactory.getMemoryPoolMXBeans();for (final MemoryPoolMXBean memoryPoolMXBean : memoryPoolMXBeans) {if (memoryPoolMXBean.getType() != MemoryType.HEAP) {continue;}final Labels memoryPoolTags = Labels.Mutable.of(""name"", memoryPoolMXBean.getName());try {registry.add(""jvm.memory.heap.pool.used"",memoryPoolTags,new DoubleSupplier() {@Overridepublic double get() {return memoryPoolMXBean.getUsage().getUsed();}});registry.add(""jvm.memory.heap.pool.committed"",memoryPoolTags,new DoubleSupplier() {@Overridepublic double get() {return memoryPoolMXBean.getUsage().getCommitted();}});registry.add(""jvm.memory.heap.pool.max"",memoryPoolTags,new DoubleSupplier() {@Overridepublic double get() {return memoryPoolMXBean.getUsage().getMax();}});} catch (Exception e) {}}}}"	1
3818	public class A {public static Schema unaliasSchema(OpenAPI openAPI, Schema schema, Map<String, String> importMappings) {Map<String, Schema> allSchemas = getSchemas(openAPI);if (allSchemas == null || allSchemas.isEmpty()) {return schema;}if (schema != null && StringUtils.isNotEmpty(schema.get$ref())) {String simpleRef = ModelUtils.getSimpleRef(schema.get$ref());if (importMappings.containsKey(simpleRef)) {return schema;}Schema ref = allSchemas.get(simpleRef);if (ref == null) {return schema;} else if (ref.getEnum() != null && !ref.getEnum().isEmpty()) {return schema;} else if (isArraySchema(ref)) {if (isGenerateAliasAsModel(ref)) {return schema;} else {return unaliasSchema(openAPI, allSchemas.get(ModelUtils.getSimpleRef(schema.get$ref())), importMappings);}} else if (isComposedSchema(ref)) {return schema;} else if (isMapSchema(ref)) {if (ref.getProperties() != null && !ref.getProperties().isEmpty()) return schema;else {if (isGenerateAliasAsModel(ref)) {return schema;} else {return unaliasSchema(openAPI, allSchemas.get(ModelUtils.getSimpleRef(schema.get$ref())), importMappings);}}} else if (isObjectSchema(ref)) {if (ref.getProperties() != null && !ref.getProperties().isEmpty()) {return schema;} else {return unaliasSchema(openAPI, allSchemas.get(ModelUtils.getSimpleRef(schema.get$ref())), importMappings);}} else {return unaliasSchema(openAPI, allSchemas.get(ModelUtils.getSimpleRef(schema.get$ref())), importMappings);}}return schema;}}	2
3819	"public class A {@Overridepublic void stop() {if (log.isTraceEnable()) {}this.getTimerWorkManager().cancel(""NotificaitonScheduleWorker"");}}"	1
3820	public class A {private boolean lostReliability(final InternalDistributedMember id, final Set newlyMissingRoles) {if (DistributedRegion.ignoreReconnect) {return false;}boolean async = false;try {if (getMembershipAttributes().getLossAction().isReconnect()) {async = true;doLostReliability(isInitializingThread, id, newlyMissingRoles);}} catch (CancelException cce) {throw cce;} catch (Exception e) {}return async;}}	1
3821	public class A {public void setInputStream(String body) {try (ByteArrayInputStream stream = new ByteArrayInputStream(body.getBytes(DEFAULT_CHARSET))) {cachedInputStream = new ByteArrayOutputStream();IOUtils.copy(stream, cachedInputStream);} catch (IOException e) {}}}	1
3822	public class A {@Overridepublic String forkGroup(JsonCluster definition, ClusterRuntime runtime, String groupName)throws KaramelException {return groupName;}}	1
3823	public class A {public static Builder newWriteChunkRequestBuilder(Pipeline pipeline, BlockID blockID, int datalen, int seq) throws IOException {ContainerProtos.WriteChunkRequestProto.Builder writeRequest =ContainerProtos.WriteChunkRequestProto.newBuilder();writeRequest.setBlockID(blockID.getDatanodeBlockIDProtobuf());ChunkBuffer data = getData(datalen);ChunkInfo info = getChunk(blockID.getLocalID(), seq, 0, datalen);setDataChecksum(info, data);writeRequest.setChunkData(info.getProtoBufMessage());writeRequest.setData(data.toByteString());Builder request = ContainerCommandRequestProto.newBuilder();request.setCmdType(ContainerProtos.Type.WriteChunk);request.setContainerID(blockID.getContainerID());request.setWriteChunk(writeRequest);request.setDatanodeUuid(pipeline.getFirstNode().getUuidString());return request;}}	1
3824	public class A {public List<UserWrapper> getNewUsers(int sinceDays, int length) {List<UserWrapper> results = new ArrayList<>();try {Weblogger roller = WebloggerFactory.getWeblogger();UserManager umgr = roller.getUserManager();List<User> users = umgr.getUsers(Boolean.TRUE, null, null, 0, length);for (User user : users) {results.add(UserWrapper.wrap(user));}} catch (Exception e) {}return results;}}	1
3825	public class A {@Overridepublic void sendMessage(String type, Serializable message) {if (isClustered()) {try {String id = newMessageId();ClusterMessage clusterMessage = new StandardClusterMessage(id, type, message);MessageDeliveryStatus status =new DefaultMessageDeliveryStatus(clusterMessage, new HashSet<String>(getMembersAsString()));if (sendAcknowledgementMessage) {ensureMessageDeliveryMap.put(clusterMessage.getId(), status);}channel.send(null, clusterMessage);} catch (Exception e) {}}}}	2
3826	public class A {private void rescheduleOrFail(final Executor delayedExecutor, final Throwable failure) {if (failure == null) {schedule(delayedExecutor);successCount.increment();} else if (failure instanceof TimeoutException) {schedule(delayedExecutor);} else {}}}	3
3827	"public class A {public static com.liferay.portal.kernel.repository.model.FileEntry addFileEntry(HttpPrincipal httpPrincipal,long repositoryId,long folderId,String sourceFileName,String mimeType,String title,String description,String changeLog,byte[] bytes,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DLAppServiceUtil.class, ""addFileEntry"", _addFileEntryParameterTypes0);MethodHandler methodHandler =new MethodHandler(methodKey,repositoryId,folderId,sourceFileName,mimeType,title,description,changeLog,bytes,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.repository.model.FileEntry) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
3828	"public class A {public ConnectorStateInfo connectorStatus(String connectorName) {ObjectMapper mapper = new ObjectMapper();String url = endpointForResource(String.format(""connectors/%s/status"", connectorName));Response response = requestGet(url);try {if (response.getStatus() < Response.Status.BAD_REQUEST.getStatusCode()) {return mapper.readerFor(ConnectorStateInfo.class).readValue(responseToString(response));}} catch (IOException e) {throw new ConnectException(""Could not not parse connector state"", e);}throw new ConnectRestException(response.getStatus(),""Could not read connector state. Error response: "" + responseToString(response));}}"	1
3829	"public class A {@Testpublic void testExtractParagraphsFromChapterFile_FIL_LRA_faa0d66e() throws IOException {ResourceLoader resourceLoader =new ClassRelativeResourceLoader(EPubParagraphExtractionHelper.class);Resource resource =resourceLoader.getResource(""fil-lra-faa0d66e-564f-4d72-a1d3-ec46fb754205.epub_Page_3.xhtml"");File xhtmlFile = resource.getFile();List<String> storyBookParagraphs =EPubParagraphExtractionHelper.extractParagraphsFromChapterFile(xhtmlFile);assertThat(storyBookParagraphs.size(), is(3));assertThat(storyBookParagraphs.get(0), is(""WAAAAHHHH!""));assertThat(storyBookParagraphs.get(1),is(""Ang ibong Brahminy ay umiiyak tulad ng isang gutom na sanggol.""));assertThat(storyBookParagraphs.get(2), is(""WAAAAHHHH!""));}}"	1
3830	public class A {public void marshal(Object value, HierarchicalStreamWriter writer, MarshallingContext context) {Password pass = (Password) value;try {if (pass.password != null) {writer.setValue(encrypter.encrypt(pass.password));}} catch (EncryptionException e) {}}}	1
3831	public class A {@Overridepublic void bind() {InterceptorRegistry.bind(interceptorRegistryAdaptor, lock);}}	1
3832	"public class A {protected Map<String, DfArrangeQueryTable> doExtractArrangeQuery(List<Table> tableList) {final Map<String, DfArrangeQueryTable> resultMap =new LinkedHashMap<String, DfArrangeQueryTable>();for (Table table : tableList) {final String tableDbName = table.getTableDbName();String beanClassName = table.getExtendedConditionBeanClassName();String queryClassName = table.getExtendedConditionQueryClassName();final DfArrangeQueryTable arrangeQueryTable =new DfArrangeQueryTable(tableDbName, beanClassName, queryClassName);{final String cbeanPath = prepareConditionBeanPath(table);final List<DfArrangeQueryMethod> beanMethodList =searchArrangeQueryMethodList(tableDbName, cbeanPath);if (!beanMethodList.isEmpty()) {}for (DfArrangeQueryMethod method : beanMethodList) {_log.info(""  o {}() // {}"", method.getMethodName(), method.getTitle());arrangeQueryTable.addBeanMethod(method);}}{final String queryPath = prepareConditionQueryPath(table);final List<DfArrangeQueryMethod> queryMethodList =searchArrangeQueryMethodList(tableDbName, queryPath);if (!queryMethodList.isEmpty()) {}for (DfArrangeQueryMethod method : queryMethodList) {arrangeQueryTable.addQueryMethod(method);}}if (!arrangeQueryTable.getBeanMethodList().isEmpty()|| !arrangeQueryTable.getQueryMethodList().isEmpty()) {resultMap.put(tableDbName, arrangeQueryTable);}}if (resultMap.isEmpty()) {}return resultMap;}}"	4
3833	public class A {public static Patient extractMpiPatientFromMessage(PRPAIN201305UV02 message) {PRPAMT201306UV02ParameterList queryParameterList = extractHL7QueryParamsFromMessage(message);Patient mpipatient = extractMpiPatientFromQueryParams(queryParameterList);return mpipatient;}}	2
3834	public class A {@Overridepublic void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {try {SettableFuture<Response> future = responseQueue.take();future.setException(cause);} catch (InterruptedException ie) {Thread.currentThread().interrupt();}}}	2
3835	"public class A {@Mockpublic static ExecutionResult[] executeStoredProcedures(Priority priority, Callable<Void>[] storedProcedures, ProgressCallback callback)throws InterruptedException {if (resultIsNull) {return null;}ExecutionResult[] result = new ExecutionResult[storedProcedures.length];for (int i = 0; i < result.length; i++) {VmOperation operation = getOperation(storedProcedures[i]);boolean flag = getFlag(operation);ExecutionResult r = null;if (flag) {r = new ExecutionResult(true, null);if (operation == VmOperation.CREATE_FOLDER) {CreateVMFolderSP sp = (CreateVMFolderSP) storedProcedures[i];setReturnFolder(sp);} else if (operation == VmOperation.CREATE_VM) {CreateVmSP sp = (CreateVmSP) storedProcedures[i];setReturnVM(sp);}r = new ExecutionResult(true, null);} else {r = new ExecutionResult(true, new Throwable(""test failure""));}result[i] = r;}return result;}}"	1
3836	"public class A {public HostAndPort findOpenSocketOnNode(final Iterable<? extends HostAndPort> sockets, Duration timeout) {checkNotNull(sockets, ""sockets"");checkState(!Iterables.isEmpty(sockets), ""No hostAndPort sockets supplied"");checkNotNull(timeout, ""timeout"");Iterable<HostAndPort> reachable =Optional.presentInstances(tryReachable(sockets, timeout, false));Iterator<HostAndPort> iter = reachable.iterator();if (iter.hasNext()) {return iter.next();} else {throw new NoSuchElementException(""Could not connect to any socket in "" + sockets);}}}"	1
3837	"public class A {protected void waitForAllNodesConnected(final int expectedNumberOfNodes, final long sleepMillis) {final NiFiClient client = getNifiClient();final long maxTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(60);while (true) {try {final ClusteSummaryEntity clusterSummary = client.getFlowClient().getClusterSummary();final int connectedNodeCount = clusterSummary.getClusterSummary().getConnectedNodeCount();if (connectedNodeCount == expectedNumberOfNodes) {return;}logEverySecond(""Waiting for {} nodes to connect but currently only {} nodes are connected"",expectedNumberOfNodes,connectedNodeCount);if (System.currentTimeMillis() > maxTime) {throw new RuntimeException(""Waited up to 60 seconds for both nodes to connect but only ""+ connectedNodeCount+ "" nodes connected"");}} catch (final Exception e) {e.printStackTrace();}try {Thread.sleep(sleepMillis);} catch (final InterruptedException ie) {Thread.currentThread().interrupt();return;}}}}"	1
3838	"public class A {@Overridepublic void destroy() throws Exception {if (!isShutdown && dataSource != null && dataSource instanceof EmbeddedDataSource) {EmbeddedDataSource ds = (EmbeddedDataSource) dataSource;try {ds.setShutdownDatabase(""shutdown"");ds.getConnection();} catch (SQLException except) {if (except.getSQLState().equals(""08006"")) {isShutdown = true;} else {}}}}}"	3
3839	"public class A {@Testpublic void interfaceIsValid() {Interface interface1 = new Interface();interface1.setName(""ge-2/0/0"");interface1.setPort(""12"");interface1.setIpAddress(""193.1.190.133/30"");interface1.setVlan(12);interface1.setType(null);interface1.setTemplateName(null);Set<ConstraintViolation<Interface>> constraintViolations = validator.validate(interface1);assertEquals(0, constraintViolations.size());}}"	2
3840	"public class A {@Overrideprotected void createOSLocalKillAllScript(File directory) throws IOFailure {File killAllScript = new File(directory, Constants.SCRIPT_NAME_KILL_ALL + scriptExtension);try {PrintWriter killPrinter = new PrintWriter(killAllScript, getTargetEncoding());try {killPrinter.println(ScriptConstants.ECHO_KILL_ALL_APPS+ Constants.COLON+ Constants.SPACE+ Constants.APOSTROPHE+ hostname+ Constants.APOSTROPHE);killPrinter.println(ScriptConstants.CD+ Constants.SPACE+ Constants.QUOTE_MARK+ getConfDirPath()+ Constants.QUOTE_MARK);for (Application app : applications) {String appScript =Constants.SCRIPT_NAME_LOCAL_KILL + app.getIdentification() + scriptExtension;killPrinter.print(ScriptConstants.OPERATING_SYSTEM_WINDOWS_RUN_BATCH_FILE);killPrinter.print(Constants.QUOTE_MARK);killPrinter.print(appScript);killPrinter.print(Constants.QUOTE_MARK);killPrinter.println();}killPrinter.print(ScriptConstants.OPERATING_SYSTEM_WINDOWS_10_SECONDS_WAIT);killPrinter.println();} finally {killPrinter.close();}} catch (IOException e) {String msg = ""Problems creating local kill all script. "";throw new IOFailure(msg, e);}}}"	1
3841	"public class A {@Testpublic void testParseToDate() throws Exception {Date date1 = ParserUtils.parseToDate(""1988-02-30"", ""yyyy-MM-dd"", true);assertEquals(""1988-03-01"", FormatterUtils.formatDate(date1, ""yyyy-MM-dd""));try {ParserUtils.parseToDate(""1988-20"", ""yyyy-MM"", false);fail(""Except get exception: Unparseable date: \""1988-20\"""");} catch (Exception e) {assertEquals(RuntimeException.class, e.getClass());}Date date2 = ParserUtils.parseToDate(""1987-06-21"", ""yyyy-MM-dd"", true);assertEquals(""1987-06-21"", FormatterUtils.formatDate(date2, ""yyyy-MM-dd""));Date date3 = ParserUtils.parseToDate(""1987-06-21 12:21:22"", ""yyyy-MM-dd hh:mm:ss"", true);assertEquals(""1987-06-21 12:21:22"", FormatterUtils.formatDate(date3, ""yyyy-MM-dd hh:mm:ss""));Date date4 =ParserUtils.parseToDate(""1987-06-21 12:21:22.123"", ""yyyy-MM-dd hh:mm:ss.SSS"", true);assertEquals(""1987-06-21 12:21:22.123"", FormatterUtils.formatDate(date4, ""yyyy-MM-dd hh:mm:ss.SSS""));}}"	1
3842	public class A {private void stopProgram(ProgramRunId programRunId) {try {programLifecycleService.stop(programRunId.getParent(), programRunId.getRun());} catch (Exception ex) {}}}	2
3843	"public class A {@Testpublic void zeppelinConnectionTest() {try {Thread.sleep(2000);} catch (InterruptedException e) {return;}ZeppelinClient client = ZeppelinClient.initialize(validWebsocketUrl, ""dummy token"", null);client.start();Session connectionA = client.getZeppelinConnection(""AAAA"", ""anonymous"", ""anonymous"");assertNotNull(connectionA);assertTrue(connectionA.isOpen());assertEquals(client.countConnectedNotes(), 1);assertEquals(connectionA, client.getZeppelinConnection(""AAAA"", ""anonymous"", ""anonymous""));Session connectionB = client.getZeppelinConnection(""BBBB"", ""anonymous"", ""anonymous"");assertNotNull(connectionB);assertTrue(connectionB.isOpen());assertEquals(client.countConnectedNotes(), 2);assertEquals(connectionB, client.getZeppelinConnection(""BBBB"", ""anonymous"", ""anonymous""));client.removeNoteConnection(""AAAA"");assertEquals(client.countConnectedNotes(), 1);assertNotEquals(connectionA, client.getZeppelinConnection(""AAAA"", ""anonymous"", ""anonymous""));assertEquals(client.countConnectedNotes(), 2);client.stop();}}"	2
3844	"public class A {public SessionId setSessionIdStateAuthenticated(HttpServletRequest httpRequest,HttpServletResponse httpResponse,SessionId sessionId,String p_userDn) {sessionId.setUserDn(p_userDn);sessionId.setAuthenticationTime(new Date());sessionId.setState(SessionIdState.AUTHENTICATED);final boolean persisted;if (appConfiguration.getChangeSessionIdOnAuthentication() && httpResponse != null) {final String oldSessionId = sessionId.getId();final String newSessionId = UUID.randomUUID().toString();remove(sessionId);sessionId.setId(newSessionId);sessionId.setDn(buildDn(newSessionId));sessionId.getSessionAttributes().put(SessionId.OLD_SESSION_ID_ATTR_KEY, oldSessionId);if (sessionId.getIsJwt()) {sessionId.setJwt(generateJwt(sessionId, sessionId.getUserDn()).asString());}persisted = persistSessionId(sessionId, true);cookieService.createSessionIdCookie(sessionId, httpRequest, httpResponse, false);} else {persisted = updateSessionId(sessionId, true, true, true);}auditLogging(sessionId);if (externalApplicationSessionService.isEnabled()) {String userName = sessionId.getSessionAttributes().get(Constants.AUTHENTICATED_USER);boolean externalResult =externalApplicationSessionService.executeExternalStartSessionMethods(httpRequest, sessionId);if (!externalResult) {reinitLogin(sessionId, true);throw new InvalidSessionStateException(""Session creation is prohibited by external session script!"");}externalEvent(new SessionEvent(SessionEventType.AUTHENTICATED, sessionId).setHttpRequest(httpRequest).setHttpResponse(httpResponse));}return sessionId;}}"	4
3845	public class A {@VisibleForTestingvoid registerFollowedEndpointgroup(TenantId gbpTenantId, EndpointGroupId epgId) {if (epgId == null) {return;}FollowedEndpointGroupBuilder fEpgBuilder = new FollowedEndpointGroupBuilder();fEpgBuilder.setId(epgId);WriteTransaction wTx = dataProvider.newWriteOnlyTransaction();wTx.put(LogicalDatastoreType.OPERATIONAL,IidFactory.followedEndpointgroupIid(rendererName, gbpTenantId, epgId),fEpgBuilder.build());if (DataStoreHelper.submitToDs(wTx)) {} else {}}}	2
3846	"public class A {@Testpublic void testPropertyRead() throws Exception {FlumeConfiguration configuration = provider.getFlumeConfiguration();Assert.assertNotNull(configuration);List<String> expected = Lists.newArrayList();expected.add(""host5 CONFIG_ERROR"");expected.add(""host5 INVALID_PROPERTY"");expected.add(""host4 CONFIG_ERROR"");expected.add(""host4 CONFIG_ERROR"");expected.add(""host4 PROPERTY_VALUE_NULL"");expected.add(""host4 PROPERTY_VALUE_NULL"");expected.add(""host4 PROPERTY_VALUE_NULL"");expected.add(""host4 AGENT_CONFIGURATION_INVALID"");expected.add(""ch2 ATTRS_MISSING"");expected.add(""host3 CONFIG_ERROR"");expected.add(""host3 PROPERTY_VALUE_NULL"");expected.add(""host3 AGENT_CONFIGURATION_INVALID"");expected.add(""host2 PROPERTY_VALUE_NULL"");expected.add(""host2 AGENT_CONFIGURATION_INVALID"");List<String> actual = Lists.newArrayList();for (FlumeConfigurationError error : configuration.getConfigurationErrors()) {actual.add(error.getComponentName() + "" "" + error.getErrorType().toString());}Collections.sort(expected);Collections.sort(actual);Assert.assertEquals(expected, actual);AgentConfiguration agentConfiguration = configuration.getConfigurationFor(""host1"");Assert.assertNotNull(agentConfiguration);Set<String> sources = Sets.newHashSet(""source1"");Set<String> sinks = Sets.newHashSet(""sink1"");Set<String> channels = Sets.newHashSet(""channel1"");Assert.assertEquals(sources, agentConfiguration.getSourceSet());Assert.assertEquals(sinks, agentConfiguration.getSinkSet());Assert.assertEquals(channels, agentConfiguration.getChannelSet());}}"	2
3847	"public class A {public <T> T execute(CommandConfig config, Command<T> command) {if (config.getTransactionPropagation() == TransactionPropagation.NOT_SUPPORTED) {return next.execute(config, command);}boolean requiresNew = config.getTransactionPropagation() == TransactionPropagation.REQUIRES_NEW;Transaction oldTx = null;try {boolean existing = isExisting();boolean isNew = !existing || requiresNew;if (existing && requiresNew) {oldTx = doSuspend();}if (isNew) {doBegin();}T result;try {result = next.execute(config, command);} catch (RuntimeException ex) {doRollback(isNew, ex);throw ex;} catch (Error err) {doRollback(isNew, err);throw err;} catch (Exception ex) {doRollback(isNew, ex);throw new UndeclaredThrowableException(ex, ""TransactionCallback threw undeclared checked exception"");}if (isNew) {doCommit();}return result;} finally {doResume(oldTx);}}}"	1
3848	public class A {@Overrideprotected int readDataWireFormat(byte[] buffer, int bufferIndex, int len) {int start = bufferIndex;ServerInfo1 e = null;ServerInfo1[] results = new ServerInfo1[getNumEntries()];for (int i = 0; i < getNumEntries(); i++) {results[i] = e = new ServerInfo1();e.name = readString(buffer, bufferIndex, 16, false);bufferIndex += 16;e.versionMajor = buffer[bufferIndex++] & 0xFF;e.versionMinor = buffer[bufferIndex++] & 0xFF;e.type = SMBUtil.readInt4(buffer, bufferIndex);bufferIndex += 4;int off = SMBUtil.readInt4(buffer, bufferIndex);bufferIndex += 4;off = (off & 0xFFFF) - this.converter;off = start + off;e.commentOrMasterBrowser = readString(buffer, off, 48, false);if (log.isTraceEnabled()) {}}setResults(results);this.lastName = e == null ? null : e.name;return bufferIndex - start;}}	1
3849	"public class A {public Object invokeMethodFromMessage(Message message) {@SuppressWarnings(""unchecked"")final List<Object> parms = message.get(List.class, ""MethodParms"");if ((parms == null && targetTypes.length != 0)|| (parms != null && parms.size() != targetTypes.length)) {throw new MessageDeliveryFailure(""wrong number of arguments sent to endpoint. (received: ""+ (parms == null ? 0 : parms.size())+ ""; required: ""+ targetTypes.length+ "")"");}try {RpcContext.set(message);return method.invoke(serviceProvider.get(message),(parms != null) ? parms.toArray(new Object[parms.size()]) : new Object[0]);} catch (final QueueUnavailableException e) {throw e;} catch (final MessageDeliveryFailure e) {throw e;} catch (final InvocationTargetException e) {throw new MessageDeliveryFailure(""error invoking RPC endpoint "" + method, e.getCause(), true);} catch (final Exception e) {throw new MessageDeliveryFailure(""error invoking endpoint"", e);} finally {RpcContext.remove();}}}"	1
3850	public class A {public StgRechteRolleZielobj merge(StgRechteRolleZielobj detachedInstance) {try {StgRechteRolleZielobj result =(StgRechteRolleZielobj) sessionFactory.getCurrentSession().merge(detachedInstance);return result;} catch (RuntimeException re) {throw re;}}}	3
3851	"public class A {@Testpublic void addSetInteger() throws Exception {int[] values = {20, 30, 40};GeppettoRecordingCreator creator = new GeppettoRecordingCreator(""sample.h5"");creator.addValues(""P.b.a"", values, ""ms"", TypesPackage.Literals.PARAMETER_TYPE.getName(), false);creator.create();assertNotNull(creator.getRecordingsFile());H5File file = creator.getRecordingsFile();file.open();Dataset dataset = (Dataset) file.findObject(file, ""/P/b/a"");int[] value = (int[]) dataset.read();Assert.assertEquals(30, value[1]);List metaData = dataset.getMetadata();Attribute unit = (Attribute) metaData.get(1);Assert.assertEquals(""ms"", ((String[]) unit.getValue())[0]);Attribute type = (Attribute) metaData.get(0);Assert.assertEquals(TypesPackage.Literals.PARAMETER_TYPE.getName(), ((String[]) type.getValue())[0]);file.close();}}"	2
3852	"public class A {@GET@Path(""/{start}/{end}"")public List<AppointmentDTO> range(@QueryParam(""sid"") @WebParam(name = ""sid"") String sid,@PathParam(""start"") @WebParam(name = ""start"") Calendar start,@PathParam(""end"") @WebParam(name = ""end"") Calendar end)throws ServiceException {return performCall(sid,User.Right.ROOM,sd -> AppointmentDTO.list(dao.getInRange(sd.getUserId(), start.getTime(), end.getTime())));}}"	1
3853	public class A {@Overridepublic Void call() throws Exception {for (NodeManager nodeManager : nodeManagers.values()) {nodeManager.beginShutdown(stopAgents);}for (NodeManager nodeManager : nodeManagers.values()) {nodeManager.waitForShutdown();}executor.shutdown();return null;}}	1
3854	"public class A {@Override@SuppressWarnings(""unchecked"")public LocalSolvablePolynomial<C> parse(Reader r) {GenPolynomialTokenizer pt = new GenPolynomialTokenizer(this, r);LocalSolvablePolynomial<C> p = null;try {GenSolvablePolynomial<SolvableLocal<C>> s = pt.nextSolvablePolynomial();p = new LocalSolvablePolynomial<C>(this, s);} catch (IOException e) {p = ZERO;}return p;}}"	1
3855	public class A {@Nullable@VisibleForTestingSecurityGroup getSecurityGroupForPublicIpNetwork(Client client, String publicIpInstanceId)throws UnauthorizedRequestException, InstanceNotFoundException, InvalidParameterException {VirtualNetwork virtualNetwork =OpenNebulaClientUtil.getVirtualNetwork(client, publicIpInstanceId);String securityGroupIdsStr = virtualNetwork.xpath(SECURITY_GROUPS_PATH);if (securityGroupIdsStr == null || securityGroupIdsStr.isEmpty()) {return null;}String[] securityGroupIds = securityGroupIdsStr.split(SECURITY_GROUP_SEPARATOR);String securityGroupName = generateSecurityGroupName(publicIpInstanceId);for (String securityGroupId : securityGroupIds) {SecurityGroup securityGroup = OpenNebulaClientUtil.getSecurityGroup(client, securityGroupId);if (securityGroup.getName().equals(securityGroupName)) {return securityGroup;}}return null;}}	1
3856	"public class A {@Overridepublic void createBranch(String projectPath, String newBranch) throws IOException {Lock writeLock = repositoryLock.writeLock();try {writeLock.lock();reset();Ref branchRef = git.getRepository().findRef(newBranch);boolean branchAbsents = branchRef == null;if (branchAbsents) {if (isEmpty()) {throw new IOException(""Can't create a branch on the empty repository."");}checkoutForced(branch);branchRef = git.branchCreate().setName(newBranch).call();pushBranch(new RefSpec().setSource(newBranch).setDestination(Constants.R_HEADS + newBranch));}lockSettings();try {BranchesData branches = getBranches(false);branches.addBranch(projectPath, branch, null);branches.addBranch(projectPath, newBranch, branchRef.getObjectId().getName());saveBranches();} finally {unlockSettings();}} catch (IOException e) {reset();try {git.branchDelete().setBranchNames(newBranch).call();} catch (Exception ignored) {}throw e;} catch (Exception e) {reset();try {git.branchDelete().setBranchNames(newBranch).call();} catch (Exception ignored) {}throw new IOException(e.getMessage(), e);} finally {writeLock.unlock();}}}"	2
3857	public class A {@Overrideprotected void writeInternal(final Object value, final HttpOutputMessage outputMessage)throws IOException {Writer writer = null;try {writer = new OutputStreamWriter(outputMessage.getBody(), CHARSET);String out = mapper.writeValueAsString(value);if (LOG.isDebugEnabled()) {if (value.getClass().equals(ArrayList.class)) {ArrayList arrayList = (ArrayList) value;if (arrayList.size() > 0&& arrayList.get(0).getClass().getName().equals(ACTIVITY_DTO_CLASS)) {} else {}} else {}}writer.append(out);writer.flush();} finally {IOUtils.closeQuietly(writer);}}}	3
3858	public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;getGatewayResourceProfile_result result = new getGatewayResourceProfile_result();if (e instanceof org.apache.airavata.model.error.InvalidRequestException) {result.ire = (org.apache.airavata.model.error.InvalidRequestException) e;result.setIreIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataClientException) {result.ace = (org.apache.airavata.model.error.AiravataClientException) e;result.setAceIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataSystemException) {result.ase = (org.apache.airavata.model.error.AiravataSystemException) e;result.setAseIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AuthorizationException) {result.ae = (org.apache.airavata.model.error.AuthorizationException) e;result.setAeIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}}	4
3859	"public class A {@RequestMapping(value = """",method = {RequestMethod.GET})@ResponseBody@Metered(name = ""listSourceTables"")public List<TableDesc> getHiveTables(@RequestParam(value = ""ext"", required = false) boolean withExt,@RequestParam(value = ""project"", required = false) String project) {long start = System.currentTimeMillis();List<TableDesc> tables = null;try {tables = cubeMgmtService.getProjectManager().listDefinedTables(project);} catch (Exception e) {throw new InternalErrorException(e.getLocalizedMessage());}if (withExt) {tables = cloneTableDesc(tables);}long end = System.currentTimeMillis();return tables;}}"	2
3860	"public class A {public static com.liferay.portal.kernel.model.Role getRole(HttpPrincipal httpPrincipal, long companyId, String name)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(RoleServiceUtil.class, ""getRole"", _getRoleParameterTypes8);MethodHandler methodHandler = new MethodHandler(methodKey, companyId, name);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.Role) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
3861	"public class A {private String getPublicUrlPrefix() {try {PrismObject<SystemConfigurationType> systemConfig =systemObjectCache.getSystemConfiguration(new OperationResult(""load system configuration""));return SystemConfigurationTypeUtil.getPublicHttpUrlPattern(systemConfig.asObjectable(), getRequest().getServerName());} catch (SchemaException e) {return null;}}}"	1
3862	public class A {@Overridepublic void onTrigger(final ProcessContext context, final ProcessSessionFactory sessionFactory) {sessionFactoryReference.compareAndSet(null, sessionFactory);for (final String id : findOldFlowFileIds(context)) {final FlowFileEntryTimeWrapper wrapper = flowFileMap.remove(id);if (wrapper != null) {getLogger()wrapper.session.rollback();}}context.yield();}}	1
3863	public class A {@Overridepublic void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {if (user == null) {return;}for (Callback callback : callbacks) {if (callback instanceof WSPasswordCallback) {WSPasswordCallback pc = (WSPasswordCallback) callback;if (user.equals(pc.getIdentifier())) {pc.setPassword(pass);break;}}}}}	1
3864	public class A {public boolean clickNextButton() {boolean res = nextButton.clickIfPresent(SHORT_TIMEOUT);return res;}}	1
3865	public class A {private int abortAbandonedRunningJobs(Date cutoff) {Set<JobState> jobStates = Util.asSet(JobState.RUNNING);AsyncJobStatusQueryArguments queryArgs =new AsyncJobStatusQueryArguments().setJobStates(jobStates).setEndDate(cutoff);int aborted = this.jobManager.abortNonTerminalJobs(queryArgs);return aborted;}}	1
3866	public class A {public static Expression repair(Expression e, Map<String, QName> bindings, Set<QName> validNames) {switch (e.getType()) {case ADD:Add a = (Add) e;return new Add(repair(a.getParameter1(), bindings, validNames),repair(a.getParameter2(), bindings, validNames));case CUSTOM:return e;case DIV:Div d = (Div) e;return new Div(repair(d.getParameter1(), bindings, validNames),repair(d.getParameter2(), bindings, validNames));case FUNCTION:return e;case LITERAL:return e;case MUL:Mul m = (Mul) e;return new Mul(repair(m.getParameter1(), bindings, validNames),repair(m.getParameter2(), bindings, validNames));case SUB:Sub s = (Sub) e;return new Sub(repair(s.getParameter1(), bindings, validNames),repair(s.getParameter2(), bindings, validNames));case VALUE_REFERENCE:ValueReference vr = (ValueReference) e;QName name = vr.getAsQName();if (name != null && !validNames.contains(name)) {if (!bindings.containsKey(name.getLocalPart())) {return e;}return new ValueReference(bindings.get(name.getLocalPart()));}return e;}return e;}}	2
3867	public class A {public static Mono<Void> noSelectorResult(final String pluginName, final ServerWebExchange exchange) {Object error =return WebFluxResultUtils.result(exchange, error);}}	2
3868	"public class A {@SuppressWarnings({""NullableProblems""})@Overridepublic void loadAll(@Nullable GridCacheTx tx, @Nullable Collection<? extends K> keys, GridBiInClosure<K, V> c)throws GridException {Collection<K> remaining = new LinkedList<>();for (K key : keys) {StatefulValue<V> val = writeCache.get(key);if (val != null) {val.readLock().lock();try {switch (val.operation()) {case PUT:c.apply(key, val.value());break;case RMV:c.apply(key, null);break;default:assert false : ""Unexpected operation: "" + val.status();}} finally {val.readLock().unlock();}} else remaining.add(key);}if (!remaining.isEmpty()) store.loadAll(null, remaining, c);}}"	1
3869	"public class A {@Overridepublic void run() {try {while (isRunning()) {final RecordPublisherRunResult result =recordPublisher.run(batch -> {if (!batch.getDeaggregatedRecords().isEmpty()) {}for (UserRecord userRecord : batch.getDeaggregatedRecords()) {if (filterDeaggregatedRecord(userRecord)) {deserializeRecordForCollectionAndUpdateState(userRecord);}}shardConsumerMetricsReporter.setAverageRecordSizeBytes(batch.getAverageRecordSizeBytes());shardConsumerMetricsReporter.setNumberOfAggregatedRecords(batch.getAggregatedRecordSize());shardConsumerMetricsReporter.setNumberOfDeaggregatedRecords(batch.getDeaggregatedRecordSize());ofNullable(batch.getMillisBehindLatest()).ifPresent(shardConsumerMetricsReporter::setMillisBehindLatest);return lastSequenceNum;});if (result == COMPLETE) {fetcherRef.updateState(subscribedShardStateIndex,SentinelSequenceNumber.SENTINEL_SHARD_ENDING_SEQUENCE_NUM.get());break;} else if (result == CANCELLED) {final String errorMessage =""Shard consumer cancelled: "" + subscribedShard.getShard().getShardId();throw new ShardConsumerCancelledException(errorMessage);}}} catch (Throwable t) {fetcherRef.stopWithError(t);}}}"	2
3870	public class A {private void doInstall(File artifact) {try {engine.saveDescriptions(TransformationUtils.getDescriptionsFromXMLFile(artifact));} catch (Exception e) {}}}	2
3871	public class A {@Overridepublic Long call() throws Exception {totalToProcess = drainer.drain(POISON).get();drainer.shutdown();drainer.awaitTermination(10, SECONDS);publisher.publish(Channel.NLP, new Message(INIT_MONITORING).add(VALUE, valueOf(totalToProcess)));consumer.shutdown();try {while (!consumer.awaitTermination(30, MINUTES)) {}} catch (InterruptedException iex) {}publisher.publish(Channel.NLP, new ShutdownMessage());if (consumer.getReporter() != null) consumer.getReporter().close();queue.close();return totalToProcess;}}	5
3872	"public class A {@Testpublic void testRgroupQueryFile7() throws Exception {String filename = ""data/mdl/rgfile.7.mol"";InputStream ins = this.getClass().getClassLoader().getResourceAsStream(filename);RGroupQueryReader reader = new RGroupQueryReader(ins);RGroupQuery rGroupQuery =(RGroupQuery) reader.read(new RGroupQuery(DefaultChemObjectBuilder.getInstance()));reader.close();Assert.assertNotNull(rGroupQuery);Assert.assertEquals(rGroupQuery.getRGroupDefinitions().size(), 1);Assert.assertEquals(rGroupQuery.getRootStructure().getAtomCount(), 9);Assert.assertEquals(rGroupQuery.getAllConfigurations().size(), 20);}}"	1
3873	"public class A {private void processPostAuth(ClientFilterService clientFilterService,HttpServletRequest servletRequest,HttpServletResponse servletResponse,FilterChain filterChain,boolean tokenEndpoint) {try {String clientId = """";String clientSecret = """";boolean isExistUserPassword = false;if (StringHelper.isNotEmpty(servletRequest.getParameter(""client_id""))&& StringHelper.isNotEmpty(servletRequest.getParameter(""client_secret""))) {clientId = servletRequest.getParameter(""client_id"");clientSecret = servletRequest.getParameter(""client_secret"");isExistUserPassword = true;}boolean requireAuth =!StringHelper.equals(clientId, identity.getCredentials().getUsername())|| !identity.isLoggedIn();if (requireAuth) {if (isExistUserPassword) {Client client = clientService.getClient(clientId);if (client != null&& AuthenticationMethod.CLIENT_SECRET_POST == client.getAuthenticationMethod()) {if (!clientId.equals(identity.getCredentials().getUsername())|| !identity.isLoggedIn()) {identity.logout();identity.getCredentials().setUsername(clientId);identity.getCredentials().setPassword(clientSecret);requireAuth = !authenticator.authenticateClient(servletRequest);} else {authenticator.configureSessionClient(client);}}} else if (Boolean.TRUE.equals(appConfiguration.getClientAuthenticationFiltersEnabled())) {String clientDn =clientFilterService.processAuthenticationFilters(servletRequest.getParameterMap());if (clientDn != null) {Client client = clientService.getClientByDn(clientDn);identity.logout();identity.getCredentials().setUsername(client.getClientId());identity.getCredentials().setPassword(null);requireAuth = !authenticator.authenticateClient(servletRequest, true);}} else if (tokenEndpoint) {Client client = clientService.getClient(servletRequest.getParameter(""client_id""));if (client != null && client.getAuthenticationMethod() == AuthenticationMethod.NONE) {identity.logout();identity.getCredentials().setUsername(client.getClientId());identity.getCredentials().setPassword(null);requireAuth = !authenticator.authenticateClient(servletRequest, true);}}}if (!requireAuth) {filterChain.doFilter(servletRequest, servletResponse);return;}if (!identity.isLoggedIn()) {sendError(servletResponse);}} catch (Exception ex) {}}}"	3
3874	public class A {@Overridepublic final void run() {try {if (index == -1) {return;}long time = System.currentTimeMillis();work(index, item);workTimeMS += (System.currentTimeMillis() - time);} catch (Exception ex) {exception = ex;} finally {index = -1;item = null;long time = System.currentTimeMillis();freeWorker(this);waitTimeMS += (System.currentTimeMillis() - time);}}}	2
3875	public class A {@Overridepublic final synchronized Entity get() {try {Entity result = Entities.submit(entity(), newTask()).get();return result;} catch (Exception e) {throw Exceptions.propagate(e);}}}	2
3876	"public class A {protected void checkKafkaConfiguration(String namespaceName, String podNamePrefix, Map<String, Object> config, String clusterName) {List<Pod> pods = kubeClient(namespaceName).listPodsByPrefixInName(namespaceName, podNamePrefix);Properties properties =configMap2Properties(kubeClient(namespaceName).getConfigMap(namespaceName, clusterName + ""-kafka-config""));for (Map.Entry<String, Object> property : config.entrySet()) {String key = property.getKey();Object val = property.getValue();assertThat(properties.keySet().contains(key), is(true));assertThat(properties.getProperty(key), is(val));}for (Pod pod : pods) {ExecResult result =cmdKubeClient(namespaceName).execInPod(pod.getMetadata().getName(), ""/bin/bash"", ""-c"", ""cat /tmp/strimzi.properties"");Properties execProperties = stringToProperties(result.out());for (Map.Entry<String, Object> property : config.entrySet()) {String key = property.getKey();Object val = property.getValue();assertThat(execProperties.keySet().contains(key), is(true));assertThat(execProperties.getProperty(key), is(val));}}}}"	1
3877	public class A {public static void close(final Closeable closeable, final Logger logger) {try {closeable.close();} catch (final IOException e) {}}}	1
3878	public class A {@Overridepublic void failed(Throwable x) {}}	1
3879	"public class A {protected LoginCredentials createUser(ComputeService computeService,NodeMetadata node,HostAndPort managementHostAndPort,LoginCredentials initialCredentials,ConfigBag config) {Image image = (node.getImageId() != null) ? computeService.getImage(node.getImageId()) : null;CreateUserStatements userCreation = createUserStatements(image, config);if (!userCreation.statements().isEmpty()) {org.jclouds.scriptbuilder.domain.OsFamily scriptOsFamily;if (isWindows(node, config)) {scriptOsFamily = org.jclouds.scriptbuilder.domain.OsFamily.WINDOWS;} else {scriptOsFamily = org.jclouds.scriptbuilder.domain.OsFamily.UNIX;}boolean windows = isWindows(node, config);if (windows) {} else {List<String> commands = Lists.newArrayList();for (Statement statement : userCreation.statements()) {InitAdminAccess initAdminAccess =new InitAdminAccess(new AdminAccessConfiguration.Default());initAdminAccess.visit(statement);commands.add(statement.render(scriptOsFamily));}String initialUser = initialCredentials.getUser();boolean authSudo = initialCredentials.shouldAuthenticateSudo();Optional<String> password = initialCredentials.getOptionalPassword();Map<String, Object> execProps =MutableMap.<String, Object>builder().put(ShellTool.PROP_RUN_AS_ROOT.getName(), true).put(SshTool.PROP_AUTH_SUDO.getName(), authSudo).put(SshTool.PROP_ALLOCATE_PTY.getName(), true).putIfNotNull(SshTool.PROP_PASSWORD.getName(), authSudo ? password.orNull() : null).put(SshTool.PROP_SSH_TRIES.getName(), 50).put(SshTool.PROP_SSH_TRIES_TIMEOUT.getName(), 10 * 60 * 1000).build();if (LOG.isDebugEnabled()) {}SshMachineLocation sshLoc =createTemporarySshMachineLocation(managementHostAndPort, initialCredentials, config);try {Map<String, ?> env = ImmutableMap.of(""PATH"", sbinPath());int exitcode = sshLoc.execScript(execProps, ""create-user"", commands, env);if (exitcode != 0) {}} finally {if (getManagementContext().getLocationManager().isManaged(sshLoc)) {getManagementContext().getLocationManager().unmanage(sshLoc);}Streams.closeQuietly(sshLoc);}}}return userCreation.credentials();}}"	3
3880	public class A {@Overridepublic void setUpCluster() throws Exception {util = getTestingUtil(getConf());util.initializeCluster(getMinServerCount());cluster = util.getHBaseClusterInterface();}}	2
3881	"public class A {@Afterpublic void removeAllRecord() throws Exception {List<Project> projectList = projectService.queryPageList(null, ""create_time"", ""desc"", 0, 100);for (Project project : projectList) {projectService.delete(project.getId());}}}"	1
3882	public class A {@Overridepublic Boolean apply(String s) {return true;}}	1
3883	public class A {public void addWsdlImport(URI from, URI wsdlImport, SourceLocation sloc) {Definition4BPEL def;try {WSDLReader r = _wsdlFactory.newWSDLReader();WSDLLocatorImpl locator =new WSDLLocatorImpl(_resourceFinder, _resourceFinder.resolve(from, wsdlImport));def = (Definition4BPEL) r.readWSDL(locator);} catch (WSDLException e) {recoveredFromError(sloc,new CompilationException(__cmsgs.errWsdlParseError(e.getFaultCode(), e.getLocation(), e.getMessage())));throw new CompilationException(__cmsgs.errWsdlImportFailed(wsdlImport.toASCIIString(), e.getFaultCode()).setSource(sloc),e);}try {_wsdlRegistry.addDefinition(def, _resourceFinder, _resourceFinder.resolve(from, wsdlImport));} catch (CompilationException ce) {recoveredFromError(sloc, ce);}}}	1
3884	"public class A {public void setArguments(List<Expression> arguments) throws XPathException {final int argCount = arguments.size();steps.addAll(arguments);if (""new"".equals(name)) {final Constructor<?>[] constructors = myClass.getConstructors();for (final Constructor<?> constructor : constructors) {if (Modifier.isPublic(constructor.getModifiers())) {final Class<?> paramTypes[] = constructor.getParameterTypes();if (paramTypes.length == argCount) {candidateMethods.add(constructor);}}}if (candidateMethods.size() == 0) {final String message = ""no constructor found with "" + argCount + "" arguments"";throw new XPathException(this, message, new NoSuchMethodException(message));}} else {final Method[] methods = myClass.getMethods();for (final Method method : methods) {if (Modifier.isPublic(method.getModifiers()) && method.getName().equals(name)) {final Class<?> paramTypes[] = method.getParameterTypes();if (Modifier.isStatic(method.getModifiers())) {if (paramTypes.length == argCount) {candidateMethods.add(method);}} else {if (paramTypes.length == argCount - 1) {candidateMethods.add(method);}}}}if (candidateMethods.size() == 0) {final String message = ""no method matches "" + name + "" with "" + argCount + "" arguments"";throw new XPathException(this, message, new NoSuchMethodException(message));}}}}"	3
3885	"public class A {@SkipValidation@Overridepublic String execute() {super.execute();try {_agencies = _transitDataService.getAgenciesWithCoverage();_situationsByAgency = new List[_agencies.size()];for (int i = 0; i < _agencies.size(); ++i) {AgencyWithCoverageBean agency = _agencies.get(i);String agencyId = agency.getAgency().getId();ListBean<ServiceAlertRecordBean> result =_alerts.getAllServiceAlertRecordsForAgencyId(agencyId);List<ServiceAlertRecordBean> serviceAlerts = result.getList();_situationsByAgency[i] = serviceAlerts;}for (int i = 0; i < _agencies.size(); ++i) {List<ServiceAlertRecordBean> serviceAlerts = _situationsByAgency[i];for (ServiceAlertRecordBean serviceAlert : serviceAlerts) {}}} catch (Throwable t) {throw new RemoteConnectFailureException(""Check your onebusaway-nyc-transit-data-federation-webapp configuration"", t);}return SUCCESS;}}"	5
3886	public class A {private State getDynamicChannelState(final Channel channel, final @Nullable String value) {final @Nullable String acceptedItemType = channel.getAcceptedItemType();if (value == null || acceptedItemType == null) {return UnDefType.UNDEF;}switch (acceptedItemType) {case CoreItemFactory.NUMBER:return new DecimalType(value);case CoreItemFactory.STRING:return StringType.valueOf(value);case CoreItemFactory.SWITCH:return OnOffType.from(value);default:return UnDefType.UNDEF;}}}	1
3887	public class A {@Overridepublic void refresh(final Collection<Invoker<T>> invokers) {if (invokers == null || invokers.isEmpty()) {sortedInvokersCache = null;staticWeightInvokersCache = null;return;}List<Invoker<T>> sortedInvokersTmp = new ArrayList<Invoker<T>>(invokers);Collections.sort(sortedInvokersTmp, comparator);sortedInvokersCache = sortedInvokersTmp;staticWeightInvokersCache = LoadBalanceHelper.buildStaticWeightList(sortedInvokersTmp, config);}}	2
3888	public class A {public static boolean updateRecord(Map<String, Object> propertiesMap, String channel, String userExtId, RequestContext context) {Map<String, Object> compositeKeysMap = new HashMap<>();compositeKeysMap.put(JsonKey.USER_EXT_ID, userExtId);compositeKeysMap.put(JsonKey.CHANNEL, channel);Response response =cassandraOperation.updateRecord(JsonKey.SUNBIRD, JsonKey.SHADOW_USER, propertiesMap, compositeKeysMap, context);return true;}}	1
3889	public class A {public <EO extends EventObject, FC extends FlowConfiguration> void save(final FlowManager<EO, FC> resource) {}}	1
3890	"public class A {@Overridepublic FSDataOutputStream create(final Path f,final FsPermission permission,final boolean overwrite,final int bufferSize,final short replication,final long blkSize,final Progressable progress)throws IOException {String key = OBSCommonUtils.pathToKey(this, f);FileStatus status;long objectLen = 0;try {status = getFileStatus(f);objectLen = status.getLen();if (status.isDirectory()) {throw new FileAlreadyExistsException(f + "" is a directory"");}if (!overwrite) {throw new FileAlreadyExistsException(f + "" already exists"");}} catch (FileNotFoundException e) {}return new FSDataOutputStream(new OBSBlockOutputStream(this,key,objectLen,new SemaphoredDelegatingExecutor(boundedMultipartUploadThreadPool, blockOutputActiveBlocks, true),false),null);}}"	2
3891	"public class A {public List<User> getAllUsers() throws RemoteException {int maxResults = 100;int startIndex = 0;List<User> results = new ArrayList<>();StringBuilder request =new StringBuilder(""search?entity-type=user&expand=user&restriction=active%3dtrue"").append(""&max-results="").append(maxResults).append(""&start-index="");try {while (true) {final HttpUriRequest getRequest =RequestBuilder.get(crowdServer.resolve(request.toString() + startIndex)).setConfig(requestConfig).addHeader(HEADER_ACCEPT_APPLICATION_XML).addHeader(HEADER_ACCEPT_CHARSET_UTF8).build();try (final CloseableHttpResponse response = client.execute(getRequest, clientContext)) {if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {handleHTTPError(response);}final Users users = JAXB.unmarshal(response.getEntity().getContent(), Users.class);if (users != null && users.user != null) {for (final User user : users.user) {user.name = JID.escapeNode(user.name);results.add(user);}if (users.user.size() != maxResults) {break;} else {startIndex += maxResults;}} else {break;}}}} catch (IOException ioe) {handleError(ioe);}return results;}}"	1
3892	"public class A {@Testpublic void testFixedWidthRecords() throws Exception {FixedWidthApplication app = new FixedWidthApplication();LocalMode lma = LocalMode.newInstance();Configuration conf = new Configuration(false);conf.set(""dt.operator.HDFSRecordReaderModule.prop.files"", inputDir);conf.set(""dt.operator.HDFSRecordReaderModule.prop.recordLength"", ""8"");conf.set(""dt.operator.HDFSRecordReaderModule.prop.blocksThreshold"", ""1"");conf.set(""dt.operator.HDFSRecordReaderModule.prop.scanIntervalMillis"", ""10000"");lma.prepareDAG(app, conf);LocalMode.Controller lc = lma.getController();lc.setHeartbeatMonitoringEnabled(true);lc.runAsync();Thread.sleep(1000 * 1);lc.shutdown();}}"	1
3893	public class A {@Overridepublic void close() {if (shpFile != null) {try {shpFile.close();} catch (IOException e) {}shpFile = null;}}}	1
3894	"public class A {private void prepareBaseDir() throws IOException {String property = ""java.io.tmpdir"";String tempDir = System.getProperty(property);base = new File(tempDir + File.separator + ""joyqueue-data"");if (!base.exists()) {base.mkdirs();}file = new File(base, ""329369803896"");}}"	1
3895	"public class A {private static File getUsersFile() {if (Constants.FEDORA_HOME == null || Constants.FEDORA_HOME.isEmpty()) {} else {if (logger.isDebugEnabled()) {}}return new File(Constants.FEDORA_HOME + ""/server/config/fedora-users.xml"");}}"	2
3896	public class A {@Overridepublic void handleCommand(ChannelUID channelUID, Command command) {if (isSpeakerReady()) {try {if (command instanceof RefreshType) {handleRefreshCommand(channelUID.getId());} else {handleSpeakerCommand(channelUID.getId(), command);}} catch (SpeakerException e) {}}}}	2
3897	public class A {private <T extends WebItem> T waitUntilItem(int timeInSeconds, Supplier<T> item, boolean present)throws Exception {int attempts = 0;T result = null;while (attempts++ < timeInSeconds) {if (present) {try {result = item.get();if (result != null) {break;}} catch (Exception ignored) {} finally {}} else {try {if (item.get() == null) {break;}} catch (Exception ignored) {} finally {}}Thread.sleep(1000);}return result;}}	4
3898	"public class A {protected void basicProcessVersionTag(InternalRegion region,VersionTag tag,boolean isTombstoneFromGII,boolean deltaCheck,VersionSource dmId,InternalDistributedMember sender,boolean checkForConflict) {if (tag != null) {VersionStamp stamp = getVersionStamp();StringBuilder verbose = null;if (logger.isTraceEnabled(LogMarker.TOMBSTONE_VERBOSE)) {VersionTag stampTag = stamp.asVersionTag();if (stampTag.hasValidVersion() && checkForConflict) {verbose = new StringBuilder();verbose.append(""processing tag for key "").append(getKey()).append("", stamp="").append(stamp.asVersionTag()).append("", tag="").append(tag).append("", checkForConflict="").append(checkForConflict);}}if (stamp == null) {throw new IllegalStateException(""message contained a version tag but this region has no version storage"");}boolean apply = true;try {if (checkForConflict) {apply =checkForConflict(region, stamp, tag, isTombstoneFromGII, deltaCheck, dmId, sender, verbose);}} catch (ConcurrentCacheModificationException e) {if (!tag.isGatewayTag()&& stamp.getDistributedSystemId() == tag.getDistributedSystemId()&& tag.getVersionTimeStamp() > stamp.getVersionTimeStamp()) {stamp.setVersionTimeStamp(tag.getVersionTimeStamp());tag.setTimeStampApplied(true);if (verbose != null) {verbose.append(""\nThough in conflict the tag timestamp was more recent and was recorded."");}}throw e;} finally {if (verbose != null) {}}if (apply) {applyVersionTag(region, stamp, tag, sender);}}}}"	1
3899	public class A {@PostMapping(CommonConstants.PATH_CHECK)public ResponseEntity<Void> checkExist(@RequestBody FileFormatDto fileFormat,@RequestHeader(value = CommonConstants.X_TENANT_ID_HEADER) Integer tenant) {final VitamContext vitamContext =securityService.buildVitamContext(securityService.getTenantIdentifier());final boolean exist = fileFormatInternalService.check(vitamContext, fileFormat);return RestUtils.buildBooleanResponse(exist);}}	1
3900	public class A {@Overridepublic void endTable() throws DataSetException {try {out.write(NEW_LINE);} catch (IOException e) {}}}	1
3901	public class A {@Overrideprotected void doBeginRead() throws Exception {if (readInProgress) {return;}Queue<Object> inboundBuffer = this.inboundBuffer;if (inboundBuffer.isEmpty()) {readInProgress = true;return;}final InternalThreadLocalMap threadLocals = InternalThreadLocalMap.get();final Integer stackDepth = threadLocals.localChannelReaderStackDepth();if (stackDepth < MAX_READER_STACK_DEPTH) {threadLocals.setLocalChannelReaderStackDepth(stackDepth + 1);try {readInbound();} finally {threadLocals.setLocalChannelReaderStackDepth(stackDepth);}} else {try {eventLoop().execute(readTask);} catch (Throwable cause) {close();virtualConnection.close();PlatformDependent.throwException(cause);}}}}	1
3902	public class A {@Overrideprotected void processRequest(DeleteRequest request, ImapSession session, Responder responder) {final MailboxPath mailboxPath =PathConverter.forSession(session).buildFullPath(request.getMailboxName());try {final SelectedMailbox selected = session.getSelected();if (selected != null && selected.getPath().equals(mailboxPath)) {session.deselect();}final MailboxManager mailboxManager = getMailboxManager();mailboxManager.deleteMailbox(mailboxPath, session.getMailboxSession());unsolicitedResponses(session, responder, false);okComplete(request, responder);} catch (MailboxNotFoundException e) {no(request, responder, HumanReadableText.FAILURE_NO_SUCH_MAILBOX);} catch (TooLongMailboxNameException e) {taggedBad(request, responder, HumanReadableText.FAILURE_MAILBOX_NAME);} catch (MailboxException e) {no(request, responder, HumanReadableText.GENERIC_FAILURE_DURING_PROCESSING);}}}	3
3903	public class A {public static <V> Callable<V> callableWithContext(final Callable<V> callable, final boolean logUnnecessaryCalls) {if (callable instanceof CallableWithContext) {if (logUnnecessaryCalls) {}return callable;} else if (NodeContext.getContext() == null) {if (logUnnecessaryCalls) {}return callable;} else {return new CallableWithContextImpl<V>(callable);}}}	2
3904	"public class A {private void handleCommandSelection(ChannelUID channelUID, Command command) {NhcAction nhcAction = this.nhcAction;if (nhcAction == null) {return;}if (command == REFRESH) {actionEvent(nhcAction.getState());return;}switch (channelUID.getId()) {case CHANNEL_BUTTON:case CHANNEL_SWITCH:handleSwitchCommand(command);updateStatus(ThingStatus.ONLINE);break;case CHANNEL_BRIGHTNESS:handleBrightnessCommand(command);updateStatus(ThingStatus.ONLINE);break;case CHANNEL_ROLLERSHUTTER:handleRollershutterCommand(command);updateStatus(ThingStatus.ONLINE);break;default:updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.COMMUNICATION_ERROR,""Channel unknown "" + channelUID.getId());}}}"	2
3905	"public class A {private void postReleaseReadLock(RemoteThread rThread, Object lock) {final boolean isDebugEnabled_DLS = logger.isTraceEnabled(LogMarker.DLS_VERBOSE);Integer integer = (Integer) readLockCountMap.get(rThread);int readLockCount = integer == null ? 0 : integer.intValue();if (readLockCount < 1) {if (isDebugEnabled_DLS) {}return;}readLockCount--;if (readLockCount == 0) {readLockCountMap.remove(rThread);} else {readLockCountMap.put(rThread, Integer.valueOf(readLockCount));}totalReadLockCount--;if (totalReadLockCount < 0) {if (isDebugEnabled_DLS) {}}if (totalReadLockCount == 0 && !suspendQueue.isEmpty()) {final DLockRequestMessage nextRequest = (DLockRequestMessage) suspendQueue.getFirst();if (nextRequest.isSuspendLockingRequest()) {suspendLocking(nextRequest.getRemoteThread(), nextRequest.getLockId());writeLockWaiters--;permittedRequests.add(suspendQueue.removeFirst());checkWriteLockWaiters();} else {String s =new StringBuilder(""\n (readLockCount="").append(readLockCount).append("", totalReadLockCount="").append(totalReadLockCount).append("", writeLockWaiters="").append(writeLockWaiters).append("",\nsuspendQueue="").append(suspendQueue).append("",\npermittedRequests="").append(permittedRequests).toString();Assert.assertTrue(false, String.format(""Released regular lock with waiting read lock: %s"", s));}}if (isDebugEnabled_DLS) {}checkTotalReadLockCount();}}"	4
3906	"public class A {public static Module readResource(String resource, ClassLoader classLoader)throws IOException, ParseException {String stripped = resource.startsWith(""/"") ? resource.substring(1) : resource;InputStream stream = null;if (classLoader != null) {stream = classLoader.getResourceAsStream(stripped);}if (stream == null) {stream = EPLModuleUtil.class.getResourceAsStream(resource);}if (stream == null) {stream = EPLModuleUtil.class.getClassLoader().getResourceAsStream(stripped);}if (stream == null) {throw new IOException(""Failed to find resource '"" + resource + ""' in classpath"");}try {return EPLModuleUtil.readInternal(stream, resource);} finally {try {stream.close();} catch (IOException e) {}}}}"	1
3907	public class A {public void setVoltageAngleNodeBreaker() {if (!context.nodeBreaker()) {return;}if (!checkValidVoltageAngle(null)) {return;}VoltageLevel vl = voltageLevel();if (vl == null) {return;}VoltageLevel.NodeBreakerView topo = vl.getNodeBreakerView();String connectivityNode = id;int iidmNode = context.nodeMapping().iidmNodeForConnectivityNode(connectivityNode, vl);if (!topo.hasAttachedEquipment(iidmNode)) {return;}Terminal t =topo.getOptionalTerminal(iidmNode).orElseGet(() -> Networks.getEquivalentTerminal(vl, iidmNode));if (t == null) {return;}Bus bus = t.getBusView().getBus();if (bus == null) {bus = t.getBusBreakerView().getBus();if (bus == null) {return;}}setVoltageAngle(bus);}}	4
3908	public class A {public void debug(Marker marker, String format, Object arg1, Object arg2) {if (!logger.isDebugEnabled(marker)) return;if (instanceofLAL) {String formattedMessage = MessageFormatter.format(format, arg1, arg2).getMessage();((LocationAwareLogger) logger).log(marker,fqcn,LocationAwareLogger.DEBUG_INT,formattedMessage,new Object[] {arg1, arg2},null);} else {}}}	1
3909	public class A {private <K, V> ILateralCacheListener<K, V> createListener(final ITCPLateralCacheAttributes attr, final ICompositeCacheManager cacheMgr) {ILateralCacheListener<K, V> listener = null;if (attr.isReceive()) {listener = LateralTCPListener.getInstance(attr, cacheMgr);cacheMgr.registerShutdownObserver((IShutdownObserver) listener);} else {}return listener;}}	2
3910	public class A {public void cleanup() {if (this.listenSock != null) {try {this.listenSock.close();} catch (IOException exc) {}this.listenSock = null;}}}	1
3911	public class A {public void activateOrganisation(@Identification final String organisationIdentification,@Identification final String organisationIdentificationToActivate)throws FunctionalException {final Organisation organisation = this.findOrganisation(organisationIdentification);final Organisation organisationToActivate =this.findOrganisation(organisationIdentificationToActivate);this.isAllowed(organisation, PlatformFunction.CHANGE_ORGANISATION);try {organisationToActivate.setIsEnabled(true);this.organisationRepository.save(organisationToActivate);} catch (final JpaSystemException ex) {if (ex.getCause() instanceof PersistenceException) {throw new FunctionalException(FunctionalExceptionType.UNKNOWN_ORGANISATION,ComponentType.WS_ADMIN,new UnknownEntityException(Organisation.class, organisationIdentificationToActivate, ex));}}}}	2
3912	public class A {public void parse(File wordpressXml) {try {SAXParserFactory factory = SAXParserFactory.newInstance();SAXParser parser = factory.newSAXParser();parser.parse(wordpressXml, this);} catch (Exception e) {}}}	1
3913	"public class A {@Overridepublic ResourcePermissions getPermissions() {try {Map permissions = getResourceResolver().resolve(location, ""permissions"", Map.class);if (permissions != null) {Map<String, List<String>> allow = (Map<String, List<String>>) permissions.get(""allow"");Map<String, List<String>> deny = (Map<String, List<String>>) permissions.get(""deny"");return new ResourcePermissions(this, translatePermissions(allow), translatePermissions(deny));} else {return getEmptyResourcePermissions();}} catch (Exception e) {return getEmptyResourcePermissions();}}}"	1
3914	"public class A {protected Connection createConnection() {Context jndiCntxt;Connection jmsConnection = null;try {jndiCntxt = new InitialContext();ConnectionFactory connFac = (ConnectionFactory) jndiCntxt.lookup(""ConnectionFactory"");jmsConnection = connFac.createConnection();jmsConnection.start();jmsConnection.setExceptionListener(new ExceptionListener() {@Overridepublic void onException(JMSException jmse) {}});} catch (NamingException e) {} catch (JMSException e) {} catch (Throwable t) {}return jmsConnection;}}"	5
3915	public class A {private Long forwardRemoveNode(Node node) {SyncMetaClient client =(SyncMetaClient) metaGroupMember.getSyncClient(metaGroupMember.getLeader());if (client != null) {try {return client.removeNode(node);} catch (TException e) {client.getInputProtocol().getTransport().close();} finally {ClientUtils.putBackSyncClient(client);}}return null;}}	1
3916	public class A {@Overridepublic void add(String nodeKey, String propertyName, T value) {keysByValue.put(value, nodeKey);}}	1
3917	public class A {@Overridepublic void asyncReadEntry(ReadHandle lh, PositionImpl position, final ReadEntryCallback callback, final Object ctx) {try {asyncReadEntry0(lh, position, callback, ctx);} catch (Throwable t) {invalidateAllEntries(lh.getId());callback.readEntryFailed(createManagedLedgerException(t), ctx);}}}	1
3918	"public class A {public void execute() {String url = ""http://www.google.com:80/index.html"";try {URLConnection connection = new URL(url).openConnection();connection.connect();} catch (IOException ioe) {try {String text =""At ""+ new Date()+ "" there was an error reported connecting to the internet address ""+ url+ "": ""+ ioe;Role role = Context.getUserService().getRole(""System Developer"");Collection<User> users = Context.getUserService().getUsersByRole(role);Context.getAlertService().saveAlert(new Alert(text, users));} catch (Exception e) {}}}}"	1
3919	public class A {@Overrideprotected void doSessionCreated(IoSessionEx session) throws Exception {if (logger.isDebugEnabled()) {}}}	1
3920	"public class A {private void vaildateHostPort(String host, String port) {if (host == null || !StringUtils.isNumeric(port) || port.isEmpty()) {throw new IllegalArgumentException(""Host or port should not be null / port should be numeric"");}}}"	1
3921	public class A {@Overridepublic boolean remove(String key) {Object[] idValues = getPKValues(key);return isApplied(getSession().execute(deleteStatement.bind(idValues)));}}	1
3922	public class A {private Object invokeEffectorNamed(Entity target, String effectorName, ConfigBag params) {Effector<?> effector = EffectorUtils.findEffectorDeclared(target, effectorName).get();return target.invoke(effector, params.getAllConfig()).getUnchecked();}}	1
3923	public class A {private void validateInConfigWithExplicitTotalFlinkMem(Configuration customConfig, Consumer<JobManagerProcessSpec> validateFunc) {Configuration config = configWithExplicitTotalFlinkMem();config.addAll(customConfig);JobManagerProcessSpec jobManagerProcessSpec =JobManagerProcessUtils.processSpecFromConfig(config);assertThat(jobManagerProcessSpec.getTotalFlinkMemorySize(), is(TOTAL_FLINK_MEM_SIZE));validateFunc.accept(jobManagerProcessSpec);}}	1
3924	public class A {private void cleanupPersistentnNetworkResources(NetworkVO network) {long networkOfferingId = network.getNetworkOfferingId();NetworkOfferingVO offering = _networkOfferingDao.findById(networkOfferingId);if (offering != null) {if (networkMeetsPersistenceCriteria(network, offering, true)&& _networksDao.getOtherPersistentNetworksCount(network.getId(), network.getBroadcastUri().toString(), offering.isPersistent())== 0) {List<HostVO> hosts =resourceManager.listAllUpAndEnabledHostsInOneZoneByType(Host.Type.Routing, network.getDataCenterId());for (HostVO host : hosts) {try {NicTO to = createNicTOFromNetworkAndOffering(network, offering, host);CleanupPersistentNetworkResourceCommand cmd =new CleanupPersistentNetworkResourceCommand(to);CleanupPersistentNetworkResourceAnswer answer =(CleanupPersistentNetworkResourceAnswer) _agentMgr.send(host.getId(), cmd);if (answer == null) {continue;}if (!answer.getResult()) {}} catch (Exception e) {}}}}}}	3
3925	"public class A {@RenderMethod(include = JSPX,portletNames = {""hello_world""})public void renderView() {String foo = portletConfig.getInitParameter(""foo"");}}"	2
3926	"public class A {private void initializeFetchedSequenceNumbers() {for (String shardId : toEmitPerShard.keySet()) {Map<Object, Object> state = zkConnection.readState(kinesisConfig.getStreamName(), shardId);if (state != null) {Object committedSequenceNumber = state.get(""committedSequenceNumber"");if (committedSequenceNumber != null) {fetchedSequenceNumberPerShard.put(shardId, (String) committedSequenceNumber);}}}}}"	1
3927	public class A {public void start() {if (delay_time > 0) {executor = Executors.newSingleThreadScheduledExecutor();executor.scheduleWithFixedDelay(new Runnable() {public void run() {try {AbstractTokenService.this.cleanExpiredTokens();} catch (Throwable t) {}}},0,delay_time,TimeUnit.SECONDS);}}}	1
3928	public class A {private static List<Enchantment> buildEnchantments(Enchantments enchantments, FastRandom random, ItemStack<?> toEnchant, int level) {int useLevel =level+ 1+ random.nextInt(toEnchant.enchantAbility() / 4 + 1)+ random.nextInt(toEnchant.enchantAbility() / 4 + 1);float f = (random.nextFloat() + random.nextFloat() - 1.0F) * 0.15F;useLevel =MathUtils.clamp(Math.round((float) useLevel + (float) useLevel * f), 1, Integer.MAX_VALUE);WeightedRandom<Enchantment> weightedRandom = new WeightedRandom<>(random);if (enchantment.canBeApplied(toEnchant)) {for (short i = enchantment.maxLevel(); i > enchantment.minLevel() - 1; --i) {if (useLevel >= enchantment.minEnchantAbility(i)&& useLevel <= enchantment.maxEnchantAbility(i)) {weightedRandom.add(enchantment.rarity().weight(), enchantments.create(enchantment.getClass(), i));break;}}}}List<Enchantment> selected = new ArrayList<>();if (!weightedRandom.isEmpty()) {selected.add(weightedRandom.next());while (random.nextInt(50) <= useLevel) {Enchantment lastItem = selected.get(selected.size() - 1);removeIncompatible(weightedRandom.iterator(), lastItem);if (weightedRandom.isEmpty()) {break;}selected.add(weightedRandom.next());useLevel /= 2;}if (LOGGER.isDebugEnabled()) {for (Enchantment enchantment : selected) {}}}return selected;}}	3
3929	"public class A {public Map<String, Object> dataByNativeQuery(int pageNo, int pageSize, String search) {pageNo = Math.max(1, pageNo);pageSize = Math.max(25, pageSize);Map<String, Object> o = new HashMap<>();o.put(""pageNo"", pageNo);o.put(""pageSize"", pageSize);String countSql = ""select count(*) from bc_identity_duty"";String rowsSql = ""select id, code, name from bc_identity_duty"";String orderSql = "" order by code"";boolean hasSearch = search != null && !search.isEmpty();Condition c = null;Query countQuery;Query rowsQuery;if (hasSearch) {String[] strings = new String[] {""code"", ""name""};c = ConditionUtils.toFuzzyCondition(search, strings, true);countSql += "" where "" + c.getExpression();rowsSql += "" where "" + c.getExpression() + orderSql;} else {rowsSql += orderSql;}countQuery = em.createNativeQuery(countSql);rowsQuery =em.createNativeQuery(rowsSql).setFirstResult((pageNo - 1) * pageSize).setMaxResults(pageSize);if (c != null) {int i = 0;for (Object value : c.getValues()) {i++;countQuery.setParameter(i, value);rowsQuery.setParameter(i, value);}}if (logger.isDebugEnabled()) {}o.put(""count"", countQuery.getSingleResult());o.put(""rows"", arrayListToMapList(rowsQuery.getResultList()));return o;}}"	1
3930	public class A {@Testpublic void geodeSecurityLoggerDoesNotAppendToLogWriterAppender() {assertThat(mainLogWriterAppender.getLogEvents()).isEmpty();}}	1
3931	public class A {@Overridepublic void onFailedMessageSend(JmsOutboundMessageDispatch envelope, ProviderException cause) {JmsSession session = sessions.get(envelope.getProducerId().getParentId());if (session != null) {session.onFailedMessageSend(envelope, cause);} else {}}}	1
3932	"public class A {@POST@Consumes(MediaType.WILDCARD)@Produces(MediaType.TEXT_PLAIN)@Path(""oidc/exchange"")@ApiOperation(value =""Retrieves a JWT following a successful login sequence using the configured OpenId""+ "" Connect provider."",response = String.class,notes = NON_GUARANTEED_ENDPOINT)public Response oidcExchange(@Context HttpServletRequest httpServletRequest,@Context HttpServletResponse httpServletResponse) {if (!httpServletRequest.isSecure()) {throw new AuthenticationNotSupportedException(AUTHENTICATION_NOT_ENABLED_MSG);}if (!oidcService.isOidcEnabled()) {return Response.status(Response.Status.CONFLICT).entity(OPEN_ID_CONNECT_SUPPORT_IS_NOT_CONFIGURED_MSG).build();}final String oidcRequestIdentifier =WebUtils.getCookie(httpServletRequest, OIDC_REQUEST_IDENTIFIER).getValue();if (oidcRequestIdentifier == null) {final String message =""The login request identifier was not found in the request. Unable to continue."";return Response.status(Response.Status.BAD_REQUEST).entity(message).build();}removeOidcRequestCookie(httpServletResponse);final String jwt = oidcService.getJwt(oidcRequestIdentifier);if (jwt == null) {throw new IllegalArgumentException(""A JWT for this login request identifier could not be found. Unable to continue."");}return generateTokenResponse(generateOkResponse(jwt), jwt);}}"	2
3933	public class A {@Overridepublic CacheState getCacheState(ExtTableSnapshotInfo extTableSnapshotInfo) {String resourcePath = extTableSnapshotInfo.getResourcePath();if (inBuildingTables.containsKey(resourcePath)) {return CacheState.IN_BUILDING;}File stateFile =getCacheStateFile(getSnapshotCachePath(extTableSnapshotInfo.getTableName(), extTableSnapshotInfo.getId()));if (!stateFile.exists()) {return CacheState.NONE;}try {String stateString = Files.toString(stateFile, Charsets.UTF_8);return CacheState.valueOf(stateString);} catch (IOException e) {}return CacheState.NONE;}}	1
3934	"public class A {@Overridepublic Boolean isAlreadyAnUser(String mailAddress) throws ApsSystemException {try {Collection<IApsEntity> profileTypes = this.getProfileManager().getEntityPrototypes().values();if (null == profileTypes || profileTypes.isEmpty()) {return false;}Iterator<IApsEntity> iter = profileTypes.iterator();while (iter.hasNext()) {IUserProfile type = (IUserProfile) iter.next();if (null != type.getMailAttributeName()) {EntitySearchFilter filterByEmail =new EntitySearchFilter(type.getMailAttributeName(), true, mailAddress, true);EntitySearchFilter[] filters = {filterByEmail};List<String> usernames = ((IEntityManager) this.getProfileManager()).searchId(filters);if (null != usernames && usernames.size() > 0) {return true;}}}} catch (Throwable t) {throw new ApsSystemException(""Error on 'isAlreadyAnUser' method"", t);}return false;}}"	1
3935	"public class A {@Overrideprotected List<Properties> buildCoords(Cluster cluster, Path buildPath) throws FalconException {List<Properties> props = new ArrayList<>();boolean isLifeCycleEnabled = FeedHelper.isLifecycleEnabled(this.entity, cluster.getName());if (isLifeCycleEnabled) {for (String name : FeedHelper.getPolicies(this.entity, cluster.getName())) {LifecyclePolicy policy = LifecyclePolicyMap.get().get(name);if (policy == null) {throw new FalconException(""Invalid policy name "" + name);}Properties appProps = policy.build(cluster, buildPath, this.entity);if (appProps != null) {props.add(appProps);}}} else {List<Properties> evictionProps =OozieCoordinatorBuilder.get(entity, Tag.RETENTION).buildCoords(cluster, buildPath);if (evictionProps != null) {props.addAll(evictionProps);}}List<Properties> replicationProps =OozieCoordinatorBuilder.get(entity, Tag.REPLICATION).buildCoords(cluster, buildPath);if (replicationProps != null) {props.addAll(replicationProps);}List<Properties> importProps =OozieCoordinatorBuilder.get(entity, Tag.IMPORT).buildCoords(cluster, buildPath);if (importProps != null) {props.addAll(importProps);}List<Properties> exportProps =OozieCoordinatorBuilder.get(entity, Tag.EXPORT).buildCoords(cluster, buildPath);if (exportProps != null) {props.addAll(exportProps);}if (!props.isEmpty()) {copySharedLibs(cluster, new Path(getLibPath(buildPath)));}return props;}}"	1
3936	"public class A {@Overridepublic Object visit(ASTwait_cmd node, Object data) {if (((SimpleNode) node.jjtGetChild(1)).jjtGetValue().equals(""TIME"")) {long julday = Long.parseLong((String) ((SimpleNode) node.jjtGetChild(2)).jjtGetValue());int Hour = Integer.parseInt((String) ((SimpleNode) node.jjtGetChild(3)).jjtGetValue());int Minute = Integer.parseInt((String) ((SimpleNode) node.jjtGetChild(4)).jjtGetValue());int Second = Integer.parseInt((String) ((SimpleNode) node.jjtGetChild(5)).jjtGetValue());((jmri.jmris.srcp.JmriSRCPTimeServer) ((jmri.jmris.ServiceHandler) data).getTimeServer()).setAlarm(julday, Hour, Minute, Second);} else if (((SimpleNode) node.jjtGetChild(1)).jjtGetValue().equals(""FB"")) {outputString = ""425 ERROR not supported"";} else {outputString = ""423 ERROR unsupported operation"";}return data;}}"	1
3937	"public class A {@Testvoid testCreateCustomerProfile() {CustomerCreateRequest customerDto =CustomerCreateRequest.builder().firstName(""pratik"").lastName(""das"").phoneNumber(""657576"").email(""prat@gmail.co"").gender(""M"").build();String customerID = customerProfileStore.createProfile(customerDto);assertTrue(customerID != null, ""Item created"");CustomerDto dto = customerProfileStore.fetchProfile(customerID);assertEquals(""pratik"", dto.getFirstName(), ""first name matched"");assertEquals(""das"", dto.getLastName(), ""last name matched"");}}"	1
3938	"public class A {@Testpublic void testNonPersistentSetServerAndClient() throws InitializationException, IOException {Assume.assumeFalse(""test is skipped due to build environment being OS X with JDK 1.8. See""+ "" https://issues.apache.org/jira/browse/NIFI-437"",SystemUtils.IS_OS_MAC && SystemUtils.IS_JAVA_1_8);final TestRunner runner = TestRunners.newTestRunner(Mockito.mock(Processor.class));final DistributedSetCacheServer server = new SetServer();runner.addControllerService(""server"", server);runner.enableControllerService(server);final DistributedSetCacheClientService client = createClient(server.getPort());final Serializer<String> serializer = new StringSerializer();final boolean added = client.addIfAbsent(""test"", serializer);assertTrue(added);final boolean contains = client.contains(""test"", serializer);assertTrue(contains);final boolean addedAgain = client.addIfAbsent(""test"", serializer);assertFalse(addedAgain);final boolean removed = client.remove(""test"", serializer);assertTrue(removed);final boolean containedAfterRemove = client.contains(""test"", serializer);assertFalse(containedAfterRemove);server.shutdownServer();}}"	1
3939	"public class A {public boolean geoIPProviderAPILoaded() {try {WebDriverWait wait = new WebDriverWait(this.getWebDriver(), 60);WebElement element =wait.until(ExpectedConditions.presenceOfElementLocated(By.id(""geovat-info"")));String geoApiMessage = element.getAttribute(""innerHTML"");if (StringUtils.isBlank(geoApiMessage)) {return false;}return GlobalConstants.GEOIP_API_PROVIDER_SUCCESS_LOGS.stream().anyMatch(entry -> geoApiMessage.toUpperCase().contains(entry));} catch (Exception e) {return false;}}}"	2
3940	public class A {protected void fail(Exception ex) {disconnect(true, CallCompleteEvent.Cause.ERROR, ex, null);}}	1
3941	public class A {private void shutdown() {for (SamsungTvService service : services) {stopService(service);}services.clear();}}	1
3942	"public class A {public static ClassLoaderProvider createReflectionProvider(final Object instance, final Method method) {return new ClassLoaderProvider() {@Overridepublic ClassLoader getClassLoader() {Object value = null;try {value = method.invoke(instance);} catch (InvocationTargetException te) {Throwable e = te.getTargetException();LOG.warn(""Failed to invoke "" + method + "" on "" + instance + "". "" + e, e);} catch (Exception e) {}if (value != null) {if (value instanceof ClassLoader) {return (ClassLoader) value;} else {}}return null;}@Overridepublic String toString() {return ""ReflectionClassLoaderProvider("" + instance + "", "" + method + "")"";}};}}"	2
3943	"public class A {@Overridepublic String computeMD5ChecksumOnDataObject(final IRODSFile irodsFile) throws JargonException {if (irodsFile == null) {throw new IllegalArgumentException(""irodsFile is null"");}DataObjInp dataObjInp = DataObjInp.instanceForDataObjectChecksum(irodsFile.getAbsolutePath());Tag response = getIRODSProtocol().irodsFunction(dataObjInp);if (response == null) {throw new JargonException(""invalid response to checksum call, received null response when doing checksum on file:""+ irodsFile);}String returnedChecksum = response.getTag(DataObjInp.MY_STR).getStringValue();return returnedChecksum;}}"	3
3944	public class A {private void merge(XLSChildTable childRow, Map<String, String> dataMap) {if (childRow != null) {for (int i = 0; i < childRow.getHeaders().size(); i++) {String currentHeader = childRow.getHeaders().get(i);if (StringUtils.isBlank(dataMap.get(currentHeader))) {if (!this.headers.contains(currentHeader)) this.headers.add(currentHeader);synchronized (dataMap) {dataMap.put(currentHeader, childRow.getDataRows().get(0).get(currentHeader));}}}}}}	2
3945	"public class A {public void assertTiming() {assert expectedMs != 0 : ""Must call .expect() before run test"";if (COVERAGE_ENABLED_BUILD) return;while (true) {attempts--;long start;try {if (setup != null) setup.run();start = System.currentTimeMillis();test.run();} catch (Throwable throwable) {throw new RuntimeException(throwable);}long finish = System.currentTimeMillis();long duration = finish - start;int expectedOnMyMachine = expectedMs;if (adjustForCPU) {expectedOnMyMachine =adjust(expectedOnMyMachine, Timings.CPU_TIMING, Timings.ETALON_CPU_TIMING);expectedOnMyMachine =usesAllCPUCores? expectedOnMyMachine * 8 / JobSchedulerImpl.getCPUCoresCount(): expectedOnMyMachine;}if (adjustForIO) {expectedOnMyMachine =adjust(expectedOnMyMachine, Timings.IO_TIMING, Timings.ETALON_IO_TIMING);}String logMessage = message;if (duration > expectedOnMyMachine) {int percentage = (int) (100.0 * (duration - expectedOnMyMachine) / expectedOnMyMachine);logMessage += "": "" + percentage + ""% longer"";}logMessage +="". Expected: ""+ formatTime(expectedOnMyMachine)+ "". Actual: ""+ formatTime(duration)+ "".""+ Timings.getStatistics();final double acceptableChangeFactor = 1.1;if (duration < expectedOnMyMachine) {int percentage = (int) (100.0 * (expectedOnMyMachine - duration) / expectedOnMyMachine);logMessage = percentage + ""% faster. "" + logMessage;System.out.println(""SUCCESS: "" + logMessage);} else if (duration < expectedOnMyMachine * acceptableChangeFactor) {TeamCityLogger.warning(logMessage, null);System.out.println(""WARNING: "" + logMessage);} else {if (attempts == 0) {throw new AssertionFailedError(logMessage);}System.gc();System.gc();System.gc();String s = ""Another epic fail (remaining attempts: "" + attempts + ""): "" + logMessage;TeamCityLogger.warning(s, null);System.err.println(s);continue;}break;}}}"	1
3946	public class A {private BigInteger calculateU(BigInteger clientPublic, BigInteger serverPublic, BigInteger modulus) {byte[] paddedClientPublic = calculatePadding(modulus, clientPublic);byte[] paddedServerPublic = calculatePadding(modulus, serverPublic);byte[] hashInput = ArrayConverter.concatenate(paddedClientPublic, paddedServerPublic);byte[] hashOutput = SHAsum(hashInput);return new BigInteger(1, hashOutput);}}	6
3947	public class A {private void writeRecordDigestLength(EncryptedServerNameIndicationExtensionMessage msg) {appendInt(msg.getRecordDigestLength().getValue(), ExtensionByteLength.RECORD_DIGEST_LENGTH);}}	1
3948	public class A {@ExceptionHandler(value = ValidationUpdateSelfException.class)@ResponseStatus(HttpStatus.FORBIDDEN)@ResponseBodypublic ErrorRestResponse processValidationError(ValidationUpdateSelfException ex) {BindingResult result = ex.getBindingResult();return processAllErrors(result);}}	1
3949	"public class A {private void displayPlatform() {Bundle thisBundle = context.getBundle();Version v = PluginUtilities.getBundleVersion(thisBundle);logger.info("""");logger.info(LogBanner.end());int pluginCount = 0;for (Bundle plugin : context.getBundles()) {if (isPlugin(plugin)) {if (isActive(plugin)) {pluginCount++;} else {}}}if (pluginCount == 0) {}for (Bundle plugin : context.getBundles()) {if (isPlugin(plugin)) {pluginSanityCheck(plugin);}}}}"	15
3950	public class A {@Overridepublic <T extends ElementFrame> T checkIndexUniqueness(String indexName, T element, Object key) {FramedGraph graph = Tx.getActive().getGraph();OrientBaseGraph orientBaseGraph = db.get().unwrapCurrentGraph();OrientElementType elementType = null;if (element instanceof EdgeFrame) {String label = ((EdgeFrame) element).getLabel();elementType = orientBaseGraph.getEdgeType(label);} else {elementType = orientBaseGraph.getVertexType(element.getClass().getSimpleName());}if (elementType != null) {OIndex index = elementType.getClassIndex(indexName);if (index != null) {Object recordId = index.get(key);if (recordId != null) {if (recordId.equals(element.getElement().getId())) {return null;} else {if (element instanceof EdgeFrame) {Edge edge = graph.getEdge(recordId);if (edge == null) {if (log.isDebugEnabled()) {}return null;} else {return (T) graph.frameElementExplicit(edge, element.getClass());}} else {return (T) graph.getFramedVertexExplicit(element.getClass(), recordId);}}}}}return null;}}	1
3951	public class A {@Overridepublic Void call() throws Exception {int nodeIdx = idx.getAndIncrement() % updateNodes.size();Ignite node = updateNodes.get(nodeIdx);final IgniteTransactions txs = node.transactions();final IgniteCache<Integer, Integer> cache = node.cache(cacheName);assertNotNull(cache);final ThreadLocalRandom rnd = ThreadLocalRandom.current();while (U.currentTimeMillis() < stopTime) {final Map<Integer, Integer> map = new LinkedHashMap<>();for (int i = 0; i < KEYS / 2; i++) map.put(rnd.nextInt(KEYS), rnd.nextInt());try {if (restart) {doInTransaction(node,OPTIMISTIC,SERIALIZABLE,new Callable<Void>() {@Overridepublic Void call() throws Exception {if (get) {for (Map.Entry<Integer, Integer> e : map.entrySet()) {if (rnd.nextBoolean()) {cache.get(e.getKey());if (rnd.nextBoolean()) cache.put(e.getKey(), e.getValue());} else cache.put(e.getKey(), e.getValue());}} else cache.putAll(map);return null;}});} else {try (Transaction tx = txs.txStart(OPTIMISTIC, SERIALIZABLE)) {if (get) {for (Map.Entry<Integer, Integer> e : map.entrySet()) {if (rnd.nextBoolean()) {cache.get(e.getKey());if (rnd.nextBoolean()) cache.put(e.getKey(), e.getValue());} else cache.put(e.getKey(), e.getValue());}} else cache.putAll(map);tx.commit();}}} catch (TransactionOptimisticException ignore) {} catch (Throwable e) {throw e;}}return null;}}	2
3952	"public class A {public static void main(String[] args) throws Exception {Options options = new Options();options.addOption(Option.builder(""a"").longOpt(""anonymize"").desc(""Strip out any possibly identifiable information"").build());options.addOption(Option.builder(""o"").longOpt(""output-dir"").argName(""<file>"").hasArg().desc(""Where to write (defaults to "" + DEFAULT_OUT_DIR + "")"").build());options.addOption(Option.builder(""h"").longOpt(""help"").desc(""Print a help message"").build());CommandLineParser parser = new DefaultParser();CommandLine cmd = null;boolean printHelp = false;try {cmd = parser.parse(options, args);} catch (ParseException e) {System.err.println(""ERROR "" + e.getMessage());printHelp = true;}if (printHelp || cmd.hasOption('h')) {new HelpFormatter().printHelp(""CaptureLoad [options] [topologyName]*"", options);return;}Config conf = new Config();int exitStatus = -1;String outputDir = DEFAULT_OUT_DIR;if (cmd.hasOption('o')) {outputDir = cmd.getOptionValue('o');}File baseOut = new File(outputDir);baseOut.mkdirs();try (NimbusClient nc = NimbusClient.getConfiguredClient(conf)) {Nimbus.Iface client = nc.getClient();List<String> topologyNames = cmd.getArgList();for (TopologySummary topologySummary : client.getTopologySummaries()) {if (topologyNames.isEmpty() || topologyNames.contains(topologySummary.get_name())) {TopologyLoadConf capturedConf = captureTopology(client, topologySummary);if (cmd.hasOption('a')) {capturedConf = capturedConf.anonymize();}capturedConf.writeTo(new File(baseOut, capturedConf.name + "".yaml""));}}exitStatus = 0;} catch (Exception e) {} finally {System.exit(exitStatus);}}}"	2
3953	"public class A {private Set<Bundle> _deployStaticBundlesFromFile(File file, Set<String> overrideStaticFileNames)throws Exception {Set<Bundle> bundles = new HashSet<>();String path = _getLPKGLocation(file);try (ZipFile zipFile = new ZipFile(file)) {Enumeration<? extends ZipEntry> enumeration = zipFile.entries();List<ZipEntry> zipEntries = new ArrayList<>();while (enumeration.hasMoreElements()) {ZipEntry zipEntry = enumeration.nextElement();String name = StringUtil.toLowerCase(zipEntry.getName());if (!name.endsWith("".jar"")) {continue;}if (!overrideStaticFileNames.isEmpty()) {String fileName = _extractFileName(name);fileName = fileName.concat("".jar"");if (overrideStaticFileNames.contains(fileName)) {if (_log.isInfoEnabled()) {StringBundler sb = new StringBundler(7);sb.append(zipFile.getName());sb.append(StringPool.COLON);sb.append(zipEntry);sb.append("" is overridden by "");sb.append(PropsValues.MODULE_FRAMEWORK_BASE_DIR);sb.append(""/static/"");sb.append(fileName);}continue;}}zipEntries.add(zipEntry);}Collections.sort(zipEntries,new Comparator<ZipEntry>() {@Overridepublic int compare(ZipEntry zipEntry1, ZipEntry zipEntry2) {String name1 = zipEntry1.getName();String name2 = zipEntry2.getName();return name1.compareTo(name2);}});for (ZipEntry zipEntry : zipEntries) {String zipEntryName = zipEntry.getName();String location =StringBundler.concat(zipEntryName, ""?lpkgPath="", path, ""&protocol=lpkg&static=true"");try (InputStream inputStream = zipFile.getInputStream(zipEntry)) {Bundle bundle = _installInitialBundle(location, inputStream);if (bundle != null) {bundles.add(bundle);}}}}return bundles;}}"	1
3954	"public class A {@Overridepublic CommercePriceListDiscountRel findByC_C(long commerceDiscountId, long commercePriceListId)throws NoSuchPriceListDiscountRelException {CommercePriceListDiscountRel commercePriceListDiscountRel =fetchByC_C(commerceDiscountId, commercePriceListId);if (commercePriceListDiscountRel == null) {StringBundler sb = new StringBundler(6);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""commerceDiscountId="");sb.append(commerceDiscountId);sb.append("", commercePriceListId="");sb.append(commercePriceListId);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchPriceListDiscountRelException(sb.toString());}return commercePriceListDiscountRel;}}"	1
3955	"public class A {public static com.liferay.asset.list.model.AssetListEntry getAssetListEntryByUuidAndGroupId(HttpPrincipal httpPrincipal, String uuid, long groupId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(AssetListEntryServiceUtil.class,""getAssetListEntryByUuidAndGroupId"",_getAssetListEntryByUuidAndGroupIdParameterTypes28);MethodHandler methodHandler = new MethodHandler(methodKey, uuid, groupId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.asset.list.model.AssetListEntry) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
3956	public class A {@Overrideprotected void tearDown() throws Exception {persistenceManager.stop();super.tearDown();}}	2
3957	"public class A {@Testpublic void testExplainAndPrepareQuery() throws Exception {QueryPlan queryPlan = qHelper.explainAndPrepareQuery(QueryInventory.HIVE_CUBE_QUERY);Assert.assertNotNull(queryPlan.getPrepareHandle(), ""not returning queryhandle"");}}"	1
3958	public class A {protected PendingWriteFuture enqueuePendingPacket(Buffer buffer) {if (KexState.DONE.equals(kexState.get())) {return null;}byte[] bufData = buffer.array();int cmd = bufData[buffer.rpos()] & 0xFF;if (cmd <= SshConstants.SSH_MSG_KEX_LAST) {return null;}String cmdName = SshConstants.getCommandMessageName(cmd);PendingWriteFuture future;int numPending;synchronized (pendingPackets) {if (KexState.DONE.equals(kexState.get())) {return null;}future = new PendingWriteFuture(cmdName, buffer);pendingPackets.add(future);numPending = pendingPackets.size();}if (log.isDebugEnabled()) {if (numPending == 1) {} else {}}return future;}}	2
3959	"public class A {public static BrokerInterceptor load(ServiceConfiguration conf) throws IOException {BrokerInterceptorDefinitions definitions =BrokerInterceptorUtils.searchForInterceptors(conf.getBrokerInterceptorsDirectory(), conf.getNarExtractionDirectory());ImmutableMap.Builder<String, BrokerInterceptorWithClassLoader> builder = ImmutableMap.builder();conf.getBrokerInterceptors().forEach(interceptorName -> {BrokerInterceptorMetadata definition =definitions.interceptors().get(interceptorName);if (null == definition) {throw new RuntimeException(""No broker interceptor is found for name `""+ interceptorName+ ""`. Available broker interceptors are : ""+ definitions.interceptors());}BrokerInterceptorWithClassLoader interceptor;try {interceptor =BrokerInterceptorUtils.load(definition, conf.getNarExtractionDirectory());if (interceptor != null) {builder.put(interceptorName, interceptor);}} catch (IOException e) {throw new RuntimeException(""Failed to load the broker interceptor for name `"" + interceptorName + ""`"");}});Map<String, BrokerInterceptorWithClassLoader> interceptors = builder.build();if (interceptors != null && !interceptors.isEmpty()) {return new BrokerInterceptors(interceptors);} else {return DISABLED;}}}"	2
3960	public class A {@Overridepublic void mutateMany(Map<String, KVMutation> mutations, StoreTransaction txh)throws BackendException {for (Map.Entry<String, KVMutation> mutation : mutations.entrySet()) {BerkeleyJEKeyValueStore store = openDatabase(mutation.getKey());KVMutation mutationValue = mutation.getValue();if (!mutationValue.hasAdditions() && !mutationValue.hasDeletions()) {} else {}if (mutationValue.hasAdditions()) {for (KeyValueEntry entry : mutationValue.getAdditions()) {store.insert(entry.getKey(), entry.getValue(), txh, entry.getTtl());}}if (mutationValue.hasDeletions()) {for (StaticBuffer del : mutationValue.getDeletions()) {store.delete(del, txh);}}}}}	4
3961	"public class A {@Overridepublic void serialize(Object value, JsonGenerator gen, SerializerProvider serializers)throws IOException {String toWrite = ""<REMOVED>"";if (value instanceof Optional) {Optional optional = (Optional) value;toWrite = optional.isPresent() ? ""<REMOVED>"" : ""<NOTSET>"";}gen.writeString(toWrite);}}"	1
3962	"public class A {@Testpublic void test05CdUp() {FTPClient ftp = setupFTPClient(""ftpuser1"");try (final Tx tx = StructrApp.getInstance(securityContext).tx()) {assertEmptyDirectory(ftp);String name1 = ""/FTPdir1"";ftp.makeDirectory(name1);ftp.changeWorkingDirectory(name1);String name2 = name1.concat(""/"").concat(""FTPdir2"");ftp.makeDirectory(name2);ftp.changeWorkingDirectory(name2);boolean success = ftp.changeToParentDirectory();assertTrue(success);String newWorkingDirectory = ftp.printWorkingDirectory();assertEquals(name1, newWorkingDirectory);ftp.disconnect();tx.success();} catch (IOException | FrameworkException ex) {fail(""Unexpected exception: "" + ex.getMessage());}}}"	1
3963	public class A {private static Class<?> erase(Type type) {if (type instanceof Class) {return (Class<?>) type;} else if (type instanceof ParameterizedType) {return (Class<?>) ((ParameterizedType) type).getRawType();} else if (type instanceof TypeVariable) {TypeVariable<?> tv = (TypeVariable<?>) type;return tv.getBounds().length == 0 ? Object.class : erase(tv.getBounds()[0]);} else if (type instanceof GenericArrayType) {return Array.newInstance(erase(((GenericArrayType) type).getGenericComponentType()), 0).getClass();}return Object.class;}}	1
3964	public class A {public void run() {while (true) {try {ObjectInputStream in = new ObjectInputStream(socket.getInputStream());String message = (String) in.readObject();in = new ObjectInputStream(socket.getInputStream());Long senderID = (Long) in.readObject();Object obj = in.readObject();callCallbacks(senderID, message, obj);} catch (Exception e) {if (e instanceof EOFException) {break;} else if (e instanceof SocketException) {break;} else {}}}}}	3
3965	public class A {public Set<TableName> getIncrementalBackupTableSet(String backupRoot) throws IOException {TreeSet<TableName> set = new TreeSet<>();try (Table table = connection.getTable(tableName)) {Get get = createGetForIncrBackupTableSet(backupRoot);Result res = table.get(get);if (res.isEmpty()) {return set;}List<Cell> cells = res.listCells();for (Cell cell : cells) {set.add(TableName.valueOf(CellUtil.cloneQualifier(cell)));}return set;}}}	1
3966	public class A {private void doWork(Map entries) {try {process(igniteCache, entries);updateMetrics(entries.size());} catch (Throwable e) {updateErrorMetrics(entries.size());}}}	1
3967	public class A {@Overridepublic void destroy() {try {dataSource.close();} catch (final Exception e) {}}}	1
3968	public class A {@Testpublic final void testPublisherNodeGenerator() {}}	1
3969	public class A {@Overridepublic AnswerItem<AppService> readByKeyWithDependency(String key, String activedetail) {AnswerItem<AppService> answerAppService = this.readByKey(key);AppService appService = (AppService) answerAppService.getItem();try {if (appService != null) {AnswerList<AppServiceContent> content =appServiceContentService.readByVarious(key, activedetail);if (content != null) {appService.setContentList((List<AppServiceContent>) content.getDataList());}AnswerList<AppServiceHeader> header =appServiceHeaderService.readByVarious(key, activedetail);if (header != null) {appService.setHeaderList((List<AppServiceHeader>) header.getDataList());}answerAppService.setItem(appService);}} catch (Exception e) {}return answerAppService;}}	1
3970	"public class A {private BufferedImage getImage(String url) throws Exception {HttpGet get = null;try {DefaultHttpClient client = new DefaultHttpClient(cManager);client.getParams().setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 20000);get = new HttpGet(url);client.getParams().setBooleanParameter(ClientPNames.HANDLE_REDIRECTS, true);HttpResponse response = client.execute(get);int resultCode = response.getStatusLine().getStatusCode();if (resultCode != 200) {throw new ServletException(""Could not load image: "" + url + "".  Errorcode "" + resultCode + "" from remote server."");}inputMimeType = response.getFirstHeader(HttpHeaders.CONTENT_TYPE).getValue();if (inputMimeType.equals(""image/gif"")|| inputMimeType.equals(""image/jpeg"")|| inputMimeType.equals(""image/tiff"")|| inputMimeType.equals(""image/bmp"")|| inputMimeType.equals(""image/x-ms-bmp"")|| inputMimeType.equals(""image/x-bitmap"")|| inputMimeType.equals(""image/png"")) {if (inputMimeType.endsWith(""p"")) {inputMimeType = ""image/bmp"";}return JAI.create(""stream"", new MemoryCacheSeekableStream(response.getEntity().getContent())).getAsBufferedImage();} else {throw new ServletException(""Source image was not a gif, png, "" + ""bmp, tiff, or jpg."");}} catch (Exception e) {LOGGER.log(Level.SEVERE, e.getMessage(), e);throw e;} finally {if (get != null) {get.releaseConnection();}}}}"	3
3971	public class A {@Overridepublic void restore(Map<String, Serializable> contextStore) {String iconSetName = (String) contextStore.get(PROP_ICON_THEME);if (iconSetName != null) {try {this.iconSetContext.setIconSet(this.iconSetManager.getIconSet(iconSetName));} catch (IconException e) {}}}}	1
3972	"public class A {public void createSecureConfiguration() throws InterpreterException {Properties properties = getProperties();CommandLine cmdLine = CommandLine.parse(shell);cmdLine.addArgument(""-c"", false);String kinitCommand =String.format(""kinit -k -t %s %s"",properties.getProperty(SUBMARINE_HADOOP_KEYTAB),properties.getProperty(SUBMARINE_HADOOP_PRINCIPAL));cmdLine.addArgument(kinitCommand, false);DefaultExecutor executor = new DefaultExecutor();try {executor.execute(cmdLine);} catch (Exception e) {throw new InterpreterException(e);}}}"	1
3973	public class A {private void removeFolderIfEmpty(String folderId) {if (!hasFolder(folderId)) return;Folder folder = getFolder(folderId);if (folder.countNotes() == 0 && !folder.hasChild()) {removeFolder(folderId);}}}	1
3974	public class A {private static MonitoredCallStructure getMonitoredCallStructure(StopBean stopBean,PresentationService presentationService,double distanceOfCallAlongTrip,double distanceOfVehicleFromCall,int visitNumber,int index,TimepointPredictionRecord prediction,boolean hasRealtimeData,long responseTimestamp,long scheduledArrivalTime,long scheduledDepartureTime,double scheduleDeviation) {boolean hasPrediction = prediction != null;Long predictedArrivalTime = null;Long predictedDepartureTime = null;if (hasPrediction) {predictedArrivalTime = prediction.getTimepointPredictedArrivalTime();predictedDepartureTime = prediction.getTimepointPredictedDepartureTime();}if (prediction != null&& prediction.getScheduleRelationship() != null&& prediction.isSkipped()) {return null;}MonitoredCallStructure monitoredCallStructure = new MonitoredCallStructure();monitoredCallStructure.setVisitNumber(BigInteger.valueOf(visitNumber));StopPointRefStructure stopPointRef = new StopPointRefStructure();stopPointRef.setValue(stopBean.getId());monitoredCallStructure.setStopPointRef(stopPointRef);NaturalLanguageStringStructure stopPoint = new NaturalLanguageStringStructure();stopPoint.setValue(stopBean.getName());monitoredCallStructure.setStopPointName(stopPoint);Date expectedArrivalTime =getExpectedTime(hasRealtimeData,hasPrediction,predictedArrivalTime,scheduledArrivalTime,scheduleDeviation,responseTimestamp);Date expectedDepartureTime =getExpectedTime(hasRealtimeData,hasPrediction,predictedDepartureTime,scheduledDepartureTime,scheduleDeviation,responseTimestamp);if (expectedArrivalTime.after(expectedDepartureTime)) {expectedDepartureTime = expectedArrivalTime;}monitoredCallStructure.setExpectedArrivalTime(expectedArrivalTime);monitoredCallStructure.setExpectedDepartureTime(expectedDepartureTime);if (monitoredCallStructure.getExpectedArrivalTime() != null) {monitoredCallStructure.setAimedArrivalTime(new Date(scheduledArrivalTime));}SiriExtensionWrapper wrapper = new SiriExtensionWrapper();ExtensionsStructure distancesExtensions = new ExtensionsStructure();SiriDistanceExtension distances = new SiriDistanceExtension();DecimalFormat df = new DecimalFormat();df.setMaximumFractionDigits(2);df.setGroupingUsed(false);distances.setStopsFromCall(index);distances.setCallDistanceAlongRoute(NumberUtils.toDouble(df.format(distanceOfCallAlongTrip)));distances.setDistanceFromCall(NumberUtils.toDouble(df.format(distanceOfVehicleFromCall)));distances.setPresentableDistance(presentationService.getPresentableDistance(distances));long deviation = 0L;if (monitoredCallStructure.getExpectedArrivalTime() != null&& monitoredCallStructure.getAimedArrivalTime() != null) {long deviationSeconds =monitoredCallStructure.getExpectedArrivalTime().getTime()- monitoredCallStructure.getAimedArrivalTime().getTime();deviation = Math.round(deviationSeconds / (1000.0 * 60.0));}wrapper.setDeviation(String.valueOf(deviation));wrapper.setDistances(distances);distancesExtensions.setAny(wrapper);monitoredCallStructure.setExtensions(distancesExtensions);return monitoredCallStructure;}}	1
3975	public class A {public void rollback(Exception e) {if (e != null) {}try {if (_connection != null) {_connection.rollback();} else {}} catch (SQLException ex) {} finally {closeTransaction(ROLLEDBACK);}}}	4
3976	"public class A {public void setQueryString(NameValuePair[] params) {queryString = EncodingUtil.formUrlEncode(params, ""UTF-8"");}}"	1
3977	"public class A {public void reportBegin(final Reportable source) {assert source != null;logFile = source.getLogFile();testName = source.getName();startTime = source.getStartTime().getTime();try {FileUtils.forceMkdir(reportsDirectory);} catch (IOException e) {}outputFile = new File(reportsDirectory, testName + "".txt"");reportFile = new File(reportsDirectory, ""TEST-"" + testName + "".xml"");if (reportFile.exists()) {reportFile.delete();}}}"	1
3978	public class A {public void onComplete(java.lang.Boolean o) {isUsernameAvailable_result result = new isUsernameAvailable_result();result.success = o;result.setSuccessIsSet(true);try {fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);} catch (org.apache.thrift.transport.TTransportException e) {fb.close();} catch (java.lang.Exception e) {onError(e);}}}	2
3979	public class A {@Overridepublic List<HostVO> filterOutHostsByReservedCapacity(List<HostVO> candidates, long requiredCpu, long requiredMemory) {ReservedCapacityFinder finder = new ReservedCapacityFinder();finder.hostUuids =CollectionUtils.transformToList(candidates,new Function<String, HostVO>() {@Overridepublic String call(HostVO arg) {return arg.getUuid();}});Map<String, ReservedHostCapacity> reserves = finder.find();List<HostVO> ret = new ArrayList<>(candidates.size());for (HostVO hvo : candidates) {ReservedHostCapacity hc = reserves.get(hvo.getUuid());if (requiredMemory == 0|| hvo.getCapacity().getAvailableMemory() - hc.getReservedMemoryCapacity()>= ratioMgr.calculateMemoryByRatio(hvo.getUuid(), requiredMemory)) {ret.add(hvo);} else {if (logger.isTraceEnabled()) {if (hvo.getCapacity().getAvailableMemory() - hc.getReservedMemoryCapacity()< requiredMemory) {}if (hvo.getCapacity().getAvailableCpu() - hc.getReservedCpuCapacity() < requiredCpu) {}}}}return ret;}}	2
3980	"public class A {private List<RoutingConfig> loadRoutingInfo(final NodeList list) {final ArrayList<RoutingConfig> result = new ArrayList<>();final Node channels = list.item(0);for (int s = 0; s < channels.getChildNodes().getLength(); s++) {final Node node = channels.getChildNodes().item(s);if (node.getNodeType() == Node.ELEMENT_NODE) {final Element element = (Element) node;if (""RoutingConfig"".equalsIgnoreCase(element.getNodeName())) {final RoutingConfig item = new RoutingConfig();for (int x = 0; x < element.getChildNodes().getLength(); x++) {final String nodeName = element.getChildNodes().item(x).getNodeName();final String nodeValue = element.getChildNodes().item(x).getTextContent();if (""Recipient"".equalsIgnoreCase(nodeName)) {item.setRecepient(nodeValue);} else if (""Bean"".equalsIgnoreCase(nodeName)) {item.setBean(nodeValue);}}result.add(item);}}}return result;}}"	1
3981	"public class A {@Overridepublic byte[] encode() {byte[] resourceIdBytes = resourceId != null ? resourceId.getBytes() : null;byte[] lockKeyBytes = lockKey != null ? lockKey.getBytes() : null;byte[] clientIdBytes = clientId != null ? clientId.getBytes() : null;byte[] applicationDataBytes = applicationData != null ? applicationData.getBytes() : null;byte[] xidBytes = xid != null ? xid.getBytes() : null;byte branchTypeByte = branchType != null ? (byte) branchType.ordinal() : -1;int size =calBranchSessionSize(resourceIdBytes, lockKeyBytes, clientIdBytes, applicationDataBytes, xidBytes);if (size > MAX_BRANCH_SESSION_SIZE) {if (lockKeyBytes == null) {throw new RuntimeException(""branch session size exceeded, size : ""+ size+ "" maxBranchSessionSize : ""+ MAX_BRANCH_SESSION_SIZE);}try {size -= lockKeyBytes.length;lockKeyBytes = CompressUtil.compress(lockKeyBytes);} catch (IOException e) {} finally {size += lockKeyBytes.length;}if (size > MAX_BRANCH_SESSION_SIZE) {throw new RuntimeException(""compress branch session size exceeded, compressSize : ""+ size+ "" maxBranchSessionSize : ""+ MAX_BRANCH_SESSION_SIZE);}}ByteBuffer byteBuffer = byteBufferThreadLocal.get();byteBuffer.clear();byteBuffer.putLong(transactionId);byteBuffer.putLong(branchId);if (resourceIdBytes != null) {byteBuffer.putInt(resourceIdBytes.length);byteBuffer.put(resourceIdBytes);} else {byteBuffer.putInt(0);}if (lockKeyBytes != null) {byteBuffer.putInt(lockKeyBytes.length);byteBuffer.put(lockKeyBytes);} else {byteBuffer.putInt(0);}if (clientIdBytes != null) {byteBuffer.putShort((short) clientIdBytes.length);byteBuffer.put(clientIdBytes);} else {byteBuffer.putShort((short) 0);}if (applicationDataBytes != null) {byteBuffer.putInt(applicationDataBytes.length);byteBuffer.put(applicationDataBytes);} else {byteBuffer.putInt(0);}if (xidBytes != null) {byteBuffer.putInt(xidBytes.length);byteBuffer.put(xidBytes);} else {byteBuffer.putInt(0);}byteBuffer.put(branchTypeByte);byteBuffer.put((byte) status.getCode());byteBuffer.flip();byte[] result = new byte[byteBuffer.limit()];byteBuffer.get(result);return result;}}"	1
3982	"public class A {private static boolean determinePatchedItext() {try {PdfContentByte.class.getMethod(""showText"", GlyphVector.class);return true;} catch (NoSuchMethodException e) {return false;} catch (SecurityException e) {throw new JRRuntimeException(e);}}}"	1
3983	"public class A {@ParallelTest@OpenShiftOnlyvoid testConnectS2ILogSetting(ExtensionContext extensionContext) {String clusterName = mapWithClusterNames.get(extensionContext.getDisplayName());String connectS2IClusterName = clusterName + ""-connect-s2i"";resourceManager.createResource(extensionContext,KafkaConnectS2ITemplates.kafkaConnectS2I(extensionContext, connectS2IClusterName, LOG_SETTING_CLUSTER_NAME, 1).editSpec().withNewInlineLogging().withLoggers(CONNECT_LOGGERS).endInlineLogging().withNewJvmOptions().withGcLoggingEnabled(true).endJvmOptions().endSpec().build());String connectS2IDepName = KafkaConnectS2IResources.deploymentName(connectS2IClusterName);Map<String, String> connectS2IPods =DeploymentConfigUtils.depConfigSnapshot(NAMESPACE, connectS2IDepName);String connectS2IMap =KafkaConnectS2IResources.metricsAndLogConfigMapName(connectS2IClusterName);assertThat(""KafkaConnectS2I's log level is set properly"",checkLoggersLevel(NAMESPACE, CONNECT_LOGGERS, connectS2IMap),is(true));assertThat(""ConnectS2I GC logging is enabled"",checkGcLoggingDeploymentConfig(NAMESPACE, connectS2IDepName),is(true));KafkaConnectS2IResource.replaceConnectS2IResourceInSpecificNamespace(connectS2IClusterName, cs2i -> cs2i.getSpec().setJvmOptions(JVM_OPTIONS), NAMESPACE);DeploymentConfigUtils.waitTillDepConfigHasRolled(NAMESPACE, connectS2IDepName, connectS2IPods);assertThat(""ConnectS2I GC logging is disabled"",checkGcLoggingDeploymentConfig(NAMESPACE, connectS2IDepName),is(false));kubectlGetStrimziUntilOperationIsSuccessful(NAMESPACE, connectS2IClusterName);checkContainersHaveProcessOneAsTini(NAMESPACE, connectS2IClusterName);}}"	1
3984	"public class A {@Overridepublic void init(FilterConfig filterConfig) throws ServletException {final FilterConfig globalConf = filterConfig;final Map<String, String> params = new HashMap<>();try {configuration = ApplicationProperties.get();} catch (Exception e) {throw new ServletException(e);}if (configuration != null) {headerProperties =ConfigurationConverter.getProperties(configuration.subset(""atlas.headers""));}String tokenValidityStr = null;if (configuration != null) {tokenValidityStr = configuration.getString(CONFIG_KERBEROS_TOKEN_VALIDITY);}if (StringUtils.isNotBlank(tokenValidityStr)) {try {Long tokenValidity = Long.parseLong(tokenValidityStr);if (tokenValidity > 0) {params.put(AuthenticationFilter.AUTH_TOKEN_VALIDITY, tokenValidity.toString());} else {throw new ServletException(tokenValidity+ "": invalid value for property '""+ CONFIG_KERBEROS_TOKEN_VALIDITY+ ""'. Must be a positive integer"");}} catch (NumberFormatException e) {throw new ServletException(tokenValidityStr+ "": invalid value for property '""+ CONFIG_KERBEROS_TOKEN_VALIDITY+ ""'. Must be a positive integer"",e);}}FilterConfig filterConfig1 =new FilterConfig() {@Overridepublic ServletContext getServletContext() {if (globalConf != null) {return globalConf.getServletContext();} else {return nullContext;}}@SuppressWarnings(""unchecked"")@Overridepublic Enumeration<String> getInitParameterNames() {return new IteratorEnumeration(params.keySet().iterator());}@Overridepublic String getInitParameter(String param) {return params.get(param);}@Overridepublic String getFilterName() {return ""AtlasAuthenticationFilter"";}};super.init(filterConfig1);ProxyUsers.refreshSuperUserGroupsConfiguration(getProxyuserConfiguration(), CONF_PROXYUSER_PREFIX);optionsServlet = new HttpServlet() {};optionsServlet.init();}}"	2
3985	public class A {private Fetch fetchServerItem(UserDataRequest udr,AnalysedSyncCollection collection,SyncCollectionCommandRequest fetch,ItemSyncState syncState,SyncKey newSyncKey)throws CollectionNotFoundException, DaoException, UnexpectedObmSyncServerException,ProcessingEmailException {final ServerId serverId = fetch.getServerId();try {Optional<ItemChange> optional =contentsExporter.fetch(udr,syncState,collection.getDataType(),collection.getCollectionId(),collection.getOptions(),serverId,newSyncKey);if (optional.isPresent()) {return new SyncClientCommands.Fetch(serverId, SyncStatus.OK, optional.get().getData());}return new SyncClientCommands.Fetch(serverId, SyncStatus.OBJECT_NOT_FOUND, null);} catch (ItemNotFoundException e) {return new SyncClientCommands.Fetch(serverId, SyncStatus.OBJECT_NOT_FOUND, null);} catch (ConversionException e) {return new SyncClientCommands.Fetch(serverId, SyncStatus.SERVER_ERROR, null);}}}	2
3986	public class A {@Overridepublic String publishText(String text) {return text;}}	1
3987	"public class A {@Overridepublic void handleSimple(ServerRequest<GeneratedMessageV3> serverRequest) {final GeneratedMessageV3 data = serverRequest.getData();if (data instanceof PAgentStat) {handleAgentStat((PAgentStat) data);} else if (data instanceof PAgentStatBatch) {handleAgentStatBatch((PAgentStatBatch) data);} else if (data instanceof PAgentUriStat) {if (collectorConfiguration.isUriStatEnable()) {handleAgentUriStat((PAgentUriStat) data);} else {}} else {throw Status.INTERNAL.withDescription(""Bad Request(invalid request type)"").asRuntimeException();}}}"	2
3988	"public class A {@Testpublic void testInsertTransformedWhere() throws Exception {StringBuilder update = new StringBuilder();update.append(getNamespaceDeclarations());update.append(""INSERT {?x rdfs:label [] . } WHERE {?y ex:containsPerson ?x.  }"");Update operation = con.prepareUpdate(QueryLanguage.SPARQL, update.toString());assertFalse(con.hasStatement(bob, RDFS.LABEL, null, true));assertFalse(con.hasStatement(alice, RDFS.LABEL, null, true));operation.execute();assertTrue(con.hasStatement(bob, RDFS.LABEL, null, true));assertTrue(con.hasStatement(alice, RDFS.LABEL, null, true));}}"	1
3989	public class A {@Overridepublic void init(Driver driver, Properties properties) {Collection<String> ips = REMOTE_IP.getValue(properties);if (ips.isEmpty()) {} else {String[] remoteURLS = Parameters.REMOTE_URL_BASE.getValue(properties);List<InetAddress> inetAddresses = new ArrayList<>();CustomizableDNSResolver customizableDNSResolver = new CustomizableDNSResolver();dnsResolver = customizableDNSResolver;for (String ip : ips) {try {inetAddresses.add(InetAddress.getByName(ip));} catch (UnknownHostException e) {}}for (String remoteURL : remoteURLS) {HttpHost host = UriUtils.extractHost(remoteURL);customizableDNSResolver.add(host.getHostName(), inetAddresses.toArray(new InetAddress[] {}));}driver.getEventManager().register(EventManager.EVENT_HTTP_BUILDER_INITIALIZATION, this);}}}	2
3990	public class A {@Overridepublic void onClick(final AjaxRequestTarget target, final ApplicationTO ignore) {try {ApplicationRestClient.delete(model.getObject().getKey());SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));target.add(container);} catch (SyncopeClientException e) {SyncopeConsoleSession.get().onException(e);}((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);}}	1
3991	public class A {@Testvoid preserveSynonyms() {if (!defaultDatabase.supportsSynonyms()) {return;}assertEquals(2, defaultDatabase.getSynonymNames().size());defaultDBClearer.clearDatabase();assertEquals(2, defaultDatabase.getSynonymNames().size());}}	1
3992	"public class A {public String getPayeeNameForCBill(final EgBillregister bill) {List<Object[]> obj = null;String payeeName = """";obj =persistenceService.findAllByNamedQuery(""getPayeeDetailsForPayableCode"", bill.getId(), cBillGlcodeIdList);if (obj == null || obj.size() == 0) {obj = persistenceService.findAllByNamedQuery(""getPayeeDetailsForDebitCode"", bill.getId());if (obj == null || obj.size() == 0) payeeName = bill.getEgBillregistermis().getPayto();else if (obj.size() > 1) payeeName = FinancialConstants.MULTIPLE;else payeeName = bill.getEgBillregistermis().getPayto();} else if (obj.size() > 1) payeeName = FinancialConstants.MULTIPLE;else payeeName = bill.getEgBillregistermis().getPayto();return payeeName;}}"	2
3993	"public class A {@Overridepublic PageModelDto getPageModel(String code) {PageModel pageModel = this.pageModelManager.getPageModel(code);if (null == pageModel) {throw new ResourceNotFoundException(PageModelValidator.ERRCODE_PAGEMODEL_NOT_FOUND, ""pageModel"", code);}PageModelDto dto = this.dtoBuilder.convert(pageModel);dto.setReferences(this.getReferencesInfo(pageModel));return dto;}}"	1
3994	"public class A {@Transactional(readOnly = true)private void getInterdependentImagesByL3NetworkUuids(APIGetInterdependentL3NetworksImagesMsg msg) {APIGetInterdependentL3NetworkImageReply reply = new APIGetInterdependentL3NetworkImageReply();List<List<BackupStorageVO>> bss = new ArrayList<>();for (String l3uuid : msg.getL3NetworkUuids()) {String sql =""select ps""+ "" from PrimaryStorageVO ps, L2NetworkClusterRefVO l2ref,""+ "" L3NetworkVO l3, PrimaryStorageClusterRefVO psref""+ "" where ps.uuid = psref.primaryStorageUuid""+ "" and psref.clusterUuid = l2ref.clusterUuid""+ "" and l2ref.l2NetworkUuid = l3.l2NetworkUuid""+ "" and l3.uuid = :l3uuid"";TypedQuery<PrimaryStorageVO> psq =dbf.getEntityManager().createQuery(sql, PrimaryStorageVO.class);psq.setParameter(""l3uuid"", l3uuid);List<PrimaryStorageVO> pss = psq.getResultList();List<BackupStorageVO> lst = new ArrayList<>();for (PrimaryStorageVO ps : pss) {PrimaryStorageType psType = PrimaryStorageType.valueOf(ps.getType());List<String> bsUuids = psType.findBackupStorage(ps.getUuid());if (!bsUuids.isEmpty()) {sql = ""select bs from BackupStorageVO bs where bs.uuid in (:uuids)"";TypedQuery<BackupStorageVO> bq =dbf.getEntityManager().createQuery(sql, BackupStorageVO.class);bq.setParameter(""uuids"", bsUuids);lst.addAll(bq.getResultList());} else {}}bss.add(lst);}List<BackupStorageVO> selectedBss = new ArrayList<>();for (List<BackupStorageVO> lst : bss) {selectedBss.addAll(lst);}for (List<BackupStorageVO> l : bss) {selectedBss = listIntersection(selectedBss, l);}if (selectedBss.isEmpty()) {reply.setInventories(new ArrayList());bus.reply(msg, reply);return;}List<String> bsUuids =selectedBss.stream().map(BackupStorageVO::getUuid).collect(Collectors.toList());String sql =""select img from ImageVO img, ImageBackupStorageRefVO iref, BackupStorageZoneRefVO zref,""+ "" BackupStorageVO bs where img.uuid = iref.imageUuid and iref.backupStorageUuid =""+ "" zref.backupStorageUuid and bs.uuid = zref.backupStorageUuid and bs.uuid in (:uuids)""+ "" and zref.zoneUuid = :zoneUuid group by img.uuid"";TypedQuery<ImageVO> iq = dbf.getEntityManager().createQuery(sql, ImageVO.class);iq.setParameter(""uuids"", bsUuids);iq.setParameter(""zoneUuid"", msg.getZoneUuid());List<ImageVO> vos = iq.getResultList();reply.setInventories(ImageInventory.valueOf(vos));bus.reply(msg, reply);}}"	1
3995	public class A {public void updateVertexPartialStatus(MigrationImportStatus status) {try {setEncodedProperty(vertex, PROPERTY_KEY_STATUS, status.getOperationStatus());} catch (Exception e) {} finally {graph.commit();}}}	1
3996	public class A {@Overridepublic boolean handleInsertResult(Object result, DataStoreMsg msg, DataStoreConnection connection) {Boolean isOK = (Boolean) result;if (isOK) {if (log.isDebugEnable()) {}} else {if (log.isDebugEnable()) {}}return isOK;}}	2
3997	public class A {protected void addCalendarValue(Document doc, String fieldName, Calendar internalValue) {try {doc.add(createFieldWithoutNorms(fieldName,DateField.timeToString(internalValue.getTimeInMillis()),PropertyType.DATE));} catch (IllegalArgumentException e) {}}}	1
3998	"public class A {@Overridepublic void replicateIrodsDataObjectAsynchronously(final String irodsCollectionAbsolutePath,final String fileName,final String resourceName,final int delayInMinutes)throws JargonException {if (irodsCollectionAbsolutePath == null || irodsCollectionAbsolutePath.isEmpty()) {throw new IllegalArgumentException(""null or empty irodsCollectionAbsolutePath"");}if (fileName == null || fileName.isEmpty()) {throw new IllegalArgumentException(""null or empty fileName"");}if (resourceName == null || resourceName.isEmpty()) {throw new IllegalArgumentException(""null or empty resourceName"");}if (delayInMinutes <= 0) {throw new IllegalArgumentException(""delay in minutes must be > 0"");}if (!getIRODSServerProperties().isTheIrodsServerAtLeastAtTheGivenReleaseVersion(""rods3.0"")) {throw new JargonException(""service not available on servers prior to rods3.0"");}RuleProcessingAO ruleProcessingAO =getIRODSAccessObjectFactory().getRuleProcessingAO(getIRODSAccount());List<IRODSRuleParameter> irodsRuleParameters = new ArrayList<>();StringBuilder sb = new StringBuilder();sb.append(irodsCollectionAbsolutePath);sb.append(""/"");sb.append(fileName);irodsRuleParameters.add(new IRODSRuleParameter(""*SourceFile"", MiscIRODSUtils.wrapStringInQuotes(sb.toString())));irodsRuleParameters.add(new IRODSRuleParameter(""*Resource"", MiscIRODSUtils.wrapStringInQuotes(resourceName)));irodsRuleParameters.add(new IRODSRuleParameter(""*DelayInfo"", RuleUtils.buildDelayParamForMinutes(delayInMinutes)));RuleInvocationConfiguration ruleInvocationConfiguration =RuleInvocationConfiguration.instanceWithDefaultAutoSettings(getJargonProperties());ruleInvocationConfiguration.setRuleProcessingType(RuleProcessingType.EXTERNAL);IRODSRuleExecResult result =ruleProcessingAO.executeRuleFromResource(""/rules/rulemsiDataObjReplAsync.r"", irodsRuleParameters, ruleInvocationConfiguration);}}"	5
3999	"public class A {private void initializeAssignOutput(final BPELPlan buildPlan,final Property2VariableMapping propMap,final ServiceTemplatePropertyToPropertyMapping mapping,AbstractServiceTemplate serviceTemplate) {try {final BPELPlanHandler buildPlanHandler = new BPELPlanHandler();final BPELPlanHandler processHandler = new BPELPlanHandler();final List<String> failedServiceTemplateProperties = new ArrayList<>();for (final String serviceTemplatePropertyName : mapping.getServiceTemplatePropertyNames()) {final String templatePropertyName =mapping.getTemplatePropertyName(serviceTemplatePropertyName);if (templatePropertyName == null) {failedServiceTemplateProperties.add(serviceTemplatePropertyName);continue;}buildPlanHandler.addStringElementToPlanResponse(serviceTemplatePropertyName, buildPlan);if (isConcatQuery(templatePropertyName)) {processHandler.addCopyStringToOutputAssign(generateCopyFromQueryToOutputAsString(templatePropertyName, ""//*[local-name()='"" + serviceTemplatePropertyName + ""']""),buildPlan);} else {final String templateId = mapping.getTemplateId(serviceTemplatePropertyName);if (templateId == null) {failedServiceTemplateProperties.add(serviceTemplatePropertyName);continue;}boolean assigned = false;for (PropertyVariable var : propMap.getPropertyVariables(serviceTemplate, templateId)) {if (var.getPropertyName().equals(templatePropertyName)) {assigned = true;processHandler.assginOutputWithVariableValue(var.getVariableName(), serviceTemplatePropertyName, buildPlan);}}if (!assigned) {failedServiceTemplateProperties.add(serviceTemplatePropertyName);continue;}}}for (final String failedServiceTempProp : failedServiceTemplateProperties) {mapping.removeServiceTemplatePropertyMapping(failedServiceTempProp);}} catch (final ParserConfigurationException e) {return;}}}"	4
4000	public class A {private Object get(Object unsafe, Type type) {Type completeRole = new DefaultParameterizedType(null, ScriptSafeProvider.class, type);if (this.component.hasComponent(completeRole)) {try {ScriptSafeProvider<Object> provider = this.component.getInstance(completeRole);return provider.get(unsafe);} catch (ComponentLookupException e) {}} else if (type instanceof ParameterizedType) {Type rawType = ((ParameterizedType) type).getRawType();Type rawRole = new DefaultParameterizedType(null, ScriptSafeProvider.class, rawType);if (this.component.hasComponent(rawRole)) {try {ScriptSafeProvider<Object> provider = this.component.getInstance(rawRole);return provider.get(unsafe);} catch (ComponentLookupException e) {}}}return null;}}	3
4001	public class A {@Overridepublic synchronized boolean freshIndex(KCluster cluster) {boolean containsKey = batchLocks.containsKey(cluster);boolean isFreshIndex = this.provider.isFreshIndex(cluster) && !containsKey;if (logger.isDebugEnabled()) {}return isFreshIndex;}}	1
4002	public class A {private boolean equals(final Field field,final Collection<?> col1,final Collection<?> col2,final boolean logDifference) {for (final Object colVal1 : col1) {boolean equals = false;for (final Object colVal2 : col2) {if (equals(colVal1, colVal2, false)) {equals = true;break;}}if (!equals) {if (logDifference) {}return false;}}return true;}}	1
4003	"public class A {@Override@SuppressWarnings(""null"")public synchronized void initialize() {Bridge tradfriGateway = getBridge();this.id = getConfigAs(TradfriDeviceConfig.class).id;TradfriGatewayHandler handler = (TradfriGatewayHandler) tradfriGateway.getHandler();active = true;updateStatus(ThingStatus.UNKNOWN);switch (tradfriGateway.getStatus()) {case ONLINE:String uriString = handler.getGatewayURI() + ""/"" + id;try {URI uri = new URI(uriString);coapClient = new TradfriCoapClient(uri);coapClient.setEndpoint(handler.getEndpoint());} catch (URISyntaxException e) {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, e.getMessage());return;}scheduler.schedule(() -> {observeRelation = coapClient.startObserve(this);},3,TimeUnit.SECONDS);break;case OFFLINE:default:updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.BRIDGE_OFFLINE,String.format(""Gateway offline '%s'"", tradfriGateway.getStatusInfo()));break;}}}"	1
4004	"public class A {@Testpublic void testExpandWildcardWithMultipleResources() {final WroModel model = new WroModel();final String uri =String.format(ClasspathUriLocator.PREFIX + ""%s/expander/*.js"", WroUtil.toPackageAsFolder(getClass()));model.addGroup(new Group(""group"").addResource(Resource.create(uri, ResourceType.JS)));Mockito.when(decoratedFactory.create()).thenReturn(model);final WroModel changedModel = transformer.transform(model);Assert.assertEquals(3, changedModel.getGroupByName(""group"").getResources().size());}}"	1
4005	public class A {@Testpublic void testListeners() {for (HealthCheckActionListener listener : listeners) {}}}	1
4006	public class A {private HttpClientConfigCallback httpClientConfig(Optional<HttpHost> proxy, HttpRequestInterceptor interceptor) {return (httpClientBuilder) -> {httpClientBuilder.addInterceptorLast(interceptor);if (proxy.isPresent()) {httpClientBuilder.setProxy(proxy.get());Optional<CredentialsProvider> credentialProvider = getCredentialsProvider(proxy.get());if (credentialProvider.isPresent()) {httpClientBuilder.setDefaultCredentialsProvider(credentialProvider.get());}}if (skipSslVerification) {try {SSLContext sslContext =new SSLContextBuilder().loadTrustMaterial(null, (x509Certificates, s) -> true).build();httpClientBuilder.setSSLContext(sslContext);httpClientBuilder.setSSLHostnameVerifier(NoopHostnameVerifier.INSTANCE);} catch (Exception e) {}}return httpClientBuilder;};}}	1
4007	public class A {@Overridepublic void onHalfClose() {delegate().onHalfClose();}}	1
4008	public class A {private Map<Long, Integer> getPriorityMap(final List<OrchestratorStore> orchestratorStoreList) {final Map<Long, Integer> priorityMap = new HashMap<>(orchestratorStoreList.size());for (final OrchestratorStore orchestratorStore : orchestratorStoreList) {priorityMap.put(orchestratorStore.getId(), orchestratorStore.getPriority());}return priorityMap;}}	1
4009	public class A {public void processPreQuery(QueryRequest request, SolrQuery query) {if (userHighlightIsOn(request)) {boolean isAnyText = false;try {isAnyText =filterAdapter.adapt(request.getQuery(), new PropertyExistsDelegate(Metacard.ANY_TEXT));} catch (UnsupportedQueryException e) {}enableHighlighter(query, isAnyText);}}}	1
4010	"public class A {public static byte[] waitUntilCertificateSigned(ApiClient apiClient, String csrObjectName, Duration retryInterval, Duration timeout)throws CSRNotApprovedException {CertificatesV1Api api = new CertificatesV1Api(apiClient);ScheduledExecutorService service = Executors.newSingleThreadScheduledExecutor();try {AtomicReference<byte[]> certRef = new AtomicReference<>();boolean certificateSigned =Wait.poll(retryInterval,timeout,() -> {try {V1CertificateSigningRequest current =api.readCertificateSigningRequest(csrObjectName, null, null, null);CSRUtils.getCertificate(current).ifPresent(cert -> certRef.set(cert));return true;} catch (ApiException e) {return false;}});if (!certificateSigned) {throw new CSRNotApprovedException(""Timeout - CertificateSigningRequest not approved: "" + csrObjectName);}return certRef.get();} finally {service.shutdown();}}}"	3
4011	"public class A {@Overrideprotected void prepareFileTypeAnalyzer(Engine engine) throws InitializationException {File repoFile = null;boolean repoEmpty = false;try {final String configuredUrl =getSettings().getString(Settings.KEYS.ANALYZER_RETIREJS_REPO_JS_URL, RetireJSDataSource.DEFAULT_JS_URL);final URL url = new URL(configuredUrl);final File filepath = new File(url.getPath());repoFile = new File(getSettings().getDataDirectory(), filepath.getName());if (!repoFile.isFile() || repoFile.length() <= 1L) {repoEmpty = true;getSettings().setBoolean(Settings.KEYS.ANALYZER_RETIREJS_FORCEUPDATE, true);}} catch (FileNotFoundException ex) {this.setEnabled(false);throw new InitializationException(String.format(""RetireJS repo does not exist locally (%s)"", repoFile), ex);} catch (IOException ex) {this.setEnabled(false);throw new InitializationException(""Failed to initialize the RetireJS"", ex);}final boolean autoupdate = getSettings().getBoolean(Settings.KEYS.AUTO_UPDATE, true);final boolean forceupdate =getSettings().getBoolean(Settings.KEYS.ANALYZER_RETIREJS_FORCEUPDATE, false);if ((!autoupdate && forceupdate) || (autoupdate && repoEmpty)) {final RetireJSDataSource ds = new RetireJSDataSource();try {ds.update(engine);} catch (UpdateException ex) {throw new InitializationException(""Unable to initialize the Retire JS respository"", ex);}}try (WriteLock lock = new WriteLock(getSettings(), true, repoFile.getName() + "".lock"")) {final File temp = getSettings().getTempDirectory();final File tempRepo = new File(temp, repoFile.getName());Files.copy(repoFile.toPath(), tempRepo.toPath());repoFile = tempRepo;} catch (WriteLockException | IOException ex) {this.setEnabled(false);throw new InitializationException(""Failed to copy the RetireJS repo"", ex);}try (FileInputStream in = new FileInputStream(repoFile)) {this.jsRepository = new VulnerabilitiesRepositoryLoader().loadFromInputStream(in);} catch (JSONException ex) {this.setEnabled(false);throw new InitializationException(""Failed to initialize the RetireJS repo: `""+ repoFile.toString()+ ""` appears to be malformed. Please delete the file or run the dependency-check""+ "" purge command and re-try running dependency-check."",ex);} catch (IOException ex) {this.setEnabled(false);throw new InitializationException(""Failed to initialize the RetireJS repo"", ex);}}}"	2
4012	public class A {public void backOff() {numRetries++;final long now = ticker.read();this.waitingTimeMs = getWaitingTimeMs();try {Thread.sleep(this.waitingTimeMs);} catch (InterruptedException e) {Thread.currentThread().interrupt();}this.expiryTimeMs = Math.max(now, now + waitingTimeMs);}}	1
4013	public class A {@Overridepublic OneTimeTokenAccount get(final long id) {try {GoogleMfaAuthAccount account =waRestClient.getSyncopeClient().getService(GoogleMfaAuthAccountService.class).read(id);if (account != null) {return mapGoogleMfaAuthAccount(account);}} catch (final SyncopeClientException e) {if (e.getType() == ClientExceptionType.NotFound) {} else {}}return null;}}	2
4014	"public class A {@Overridepublic void onCommandReceived(EthernetBridgeHandler bridge, IrCommand command) {IrCommand thingCompatibleCommand = new IrCommand();thingCompatibleCommand.setRemote((String) getConfig().get(REMOTE));thingCompatibleCommand.setCommand((String) getConfig().get(COMMAND));if (command.matches(thingCompatibleCommand)) {StringType stringType = new StringType(command.getRemote() + "","" + command.getCommand());updateState(CHANNEL_IO, stringType);}}}"	1
4015	"public class A {public void visit(final BatchEndedMessage beMsg) throws ArgumentNotValid {ArgumentNotValid.checkNotNull(beMsg, ""BatchEndedMessage beMsg"");bamon.signOfLife(beMsg.getBitarchiveID());try {new Thread() {public void run() {String errorMessages = null;if (!beMsg.isOk()) {errorMessages = beMsg.getErrMsg();}bamon.bitarchiveReply(beMsg.getOriginatingBatchMsgID(),beMsg.getBitarchiveID(),beMsg.getNoOfFilesProcessed(),beMsg.getFilesFailed(),beMsg.getRemoteFile(),errorMessages,beMsg.getExceptions());}}.start();} catch (Exception e) {}}}"	2
4016	"public class A {public static void main(String[] args) {String objectStoreServiceLocation =""http://beta.services.openaire.eu:8280/is/services/objectStore"";W3CEndpointReferenceBuilder eprBuilder = new W3CEndpointReferenceBuilder();eprBuilder.address(objectStoreServiceLocation);eprBuilder.build();ObjectStoreService objectStore =new JaxwsServiceResolverImpl().getService(ObjectStoreService.class, eprBuilder.build());}}"	1
4017	"public class A {@Overridepublic void handleCommand(ChannelUID channelUID, Command command) {AccountHandler accountHandler = this.accountHandler;if (accountHandler == null) {return;}int waitForUpdate = -1;ScheduledFuture<?> updateStateJob = this.updateStateJob;this.updateStateJob = null;if (updateStateJob != null) {updateStateJob.cancel(false);}String channelId = channelUID.getId();if (command instanceof RefreshType) {waitForUpdate = 0;}if (channelId.equals(CHANNEL_SAVE)) {if (command.equals(OnOffType.ON)) {saveCurrentProfile(accountHandler);waitForUpdate = 500;}}if (channelId.equals(CHANNEL_ACTIVE)) {if (command.equals(OnOffType.ON)) {String currentConfigurationJson = this.currentConfigurationJson;if (!currentConfigurationJson.isEmpty()) {accountHandler.setEnabledFlashBriefingsJson(currentConfigurationJson);updateState(CHANNEL_ACTIVE, OnOffType.ON);waitForUpdate = 500;}}}if (channelId.equals(CHANNEL_PLAY_ON_DEVICE)) {if (command instanceof StringType) {String deviceSerialOrName = command.toFullString();String currentConfigurationJson = this.currentConfigurationJson;if (!currentConfigurationJson.isEmpty()) {String old = accountHandler.getEnabledFlashBriefingsJson();accountHandler.setEnabledFlashBriefingsJson(currentConfigurationJson);Device device = accountHandler.findDeviceJsonBySerialOrName(deviceSerialOrName);if (device == null) {} else {@Nullable Connection connection = accountHandler.findConnection();if (connection == null) {} else {connection.executeSequenceCommand(device, ""Alexa.FlashBriefing.Play"", Map.of());scheduler.schedule(() -> accountHandler.setEnabledFlashBriefingsJson(old),1000,TimeUnit.MILLISECONDS);updateState(CHANNEL_ACTIVE, OnOffType.ON);}}updatePlayOnDevice = true;waitForUpdate = 1000;}}}if (waitForUpdate >= 0) {this.updateStateJob =scheduler.schedule(() -> accountHandler.updateFlashBriefingHandlers(),waitForUpdate,TimeUnit.MILLISECONDS);}}}"	2
4018	public class A {public static boolean relationshipTypeHasInstanceEdges(AtlasGraph graph, String typeName)throws AtlasBaseException {AtlasGraphQuery query =graph.query().has(TYPE_NAME_PROPERTY_KEY, AtlasGraphQuery.ComparisionOperator.EQUAL, typeName);Iterator<AtlasEdge> results = query.edges().iterator();boolean hasInstanceEdges = results != null && results.hasNext();if (LOG.isDebugEnabled()) {}return hasInstanceEdges;}}	1
4019	public class A {@Overridepublic ConnectionFactory getConnectionFactory(Properties configuration) {final String _brokerURI = config.getConfiguration(BrokerConfiguration.BROKER_URL_KEY);final boolean changed = checkBrokerURI(_brokerURI);if (LOGGER.isLoggable(Level.INFO)) {}if (cf == null) {cf = new PooledConnectionFactory(brokerURI);} else {if (changed) {try {destroyConnectionFactory();} catch (Exception e) {}cf = new PooledConnectionFactory(brokerURI);}}return cf;}}	1
4020	"public class A {public void doGet(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException {if (isDebug) {}PrintWriter writer = new FilterPrintWriter(response);try {AxisEngine engine = getEngine();ServletContext servletContext = getServletConfig().getServletContext();String pathInfo = request.getPathInfo();String realpath = servletContext.getRealPath(request.getServletPath());if (realpath == null) {realpath = request.getServletPath();}boolean isJWSPage = request.getRequestURI().endsWith("".jws"");if (isJWSPage) {pathInfo = request.getServletPath();}if (processQuery(request, response, writer) == true) {return;}boolean hasNoPath = (pathInfo == null || pathInfo.equals(""""));if (!disableServicesList) {if (hasNoPath) {reportAvailableServices(response, writer, request);} else if (realpath != null) {MessageContext msgContext = createMessageContext(engine, request, response);String url = HttpUtils.getRequestURL(request).toString();msgContext.setProperty(MessageContext.TRANS_URL, url);String serviceName;if (pathInfo.startsWith(""/"")) {serviceName = pathInfo.substring(1);} else {serviceName = pathInfo;}SOAPService s = engine.getService(serviceName);if (s == null) {if (isJWSPage) {reportCantGetJWSService(request, response, writer);} else {reportCantGetAxisService(request, response, writer);}} else {reportServiceInfo(response, writer, s, serviceName);}}} else {response.setContentType(""text/html; charset=utf-8"");writer.println(""<html><h1>Axis HTTP Servlet</h1>"");writer.println(Messages.getMessage(""reachedServlet00""));writer.println(""<p>"" + Messages.getMessage(""transportName00"", ""<b>"" + transportName + ""</b>""));writer.println(""</html>"");}} catch (AxisFault fault) {reportTroubleInGet(fault, response, writer);} catch (Exception e) {reportTroubleInGet(e, response, writer);} finally {writer.close();if (isDebug) {}}}}"	2
4021	"public class A {private void testJDBCDriver(String driver) {driverAvailable = true;try {Class.forName(driver);} catch (ClassNotFoundException e) {driverAvailable = false;String warn =""\n\n""+ ""\t!!!\n""+ ""\tTo avoid this error, place an appropriate JDBC driver file for serviceName '{}'""+ "" in addons directory.\n""+ ""\tCopy missing JDBC-Driver-jar to your openHab/addons Folder.\n""+ ""\t!!!\n""+ ""\tDOWNLOAD: \n"";switch (serviceName) {case ""derby"":warn +=""\tDerby:     version >= 10.11.1.1 from         ""+ "" https://mvnrepository.com/artifact/org.apache.derby/derby\n"";break;case ""h2"":warn +=""\tH2:        version >= 1.4.189 from           ""+ "" https://mvnrepository.com/artifact/com.h2database/h2\n"";break;case ""hsqldb"":warn +=""\tHSQLDB:    version >= 2.3.3 from             ""+ "" https://mvnrepository.com/artifact/org.hsqldb/hsqldb\n"";break;case ""mariadb"":warn +=""\tMariaDB:   version >= 1.2.0 from             ""+ "" https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client\n"";break;case ""mysql"":warn +=""\tMySQL:     version >= 5.1.36 from            ""+ "" https://mvnrepository.com/artifact/mysql/mysql-connector-java\n"";break;case ""postgresql"":warn +=""\tPostgreSQL:version >= 9.4.1208 from          ""+ "" https://mvnrepository.com/artifact/org.postgresql/postgresql\n"";break;case ""sqlite"":warn +=""\tSQLite:    version >= 3.16.1 from            ""+ "" https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc\n"";break;}}}}"	3
4022	public class A {protected <T> T makeHttpGetRequestAndCreateCustomResponse(String uri, Class<T> resultType) {KieServerHttpRequest request =invoke(uri,new RemoteHttpOperation() {@Overridepublic KieServerHttpRequest doOperation(String url) {return newRequest(url).get();}});KieServerHttpResponse response = request.response();owner.setConversationId(response.header(KieServerConstants.KIE_CONVERSATION_ID_TYPE_HEADER));if (response.code() == Response.Status.OK.getStatusCode()) {return deserialize(response.body(), resultType);} else {throw createExceptionForUnexpectedResponseCode(request, response);}}}	1
4023	public class A {public void attachDirty(SysUsertbs instance) {try {sessionFactory.getCurrentSession().saveOrUpdate(instance);} catch (RuntimeException re) {throw re;}}}	3
4024	"public class A {private Set<DataSegment> announceHistoricalSegmentBatch(final Handle handle, final Set<DataSegment> segments, final Set<DataSegment> usedSegments)throws IOException {final Set<DataSegment> toInsertSegments = new HashSet<>();try {Set<String> existedSegments = segmentExistsBatch(handle, segments);for (DataSegment segment : segments) {if (!existedSegments.contains(segment.getId().toString())) {toInsertSegments.add(segment);}}final List<List<DataSegment>> partitionedSegments =Lists.partition(new ArrayList<>(toInsertSegments), MAX_NUM_SEGMENTS_TO_ANNOUNCE_AT_ONCE);PreparedBatch preparedBatch =handle.prepareBatch(StringUtils.format(""INSERT INTO %1$s (id, dataSource, created_date, start, %2$send%2$s, partitioned,""+ "" version, used, payload) VALUES (:id, :dataSource, :created_date, :start,""+ "" :end, :partitioned, :version, :used, :payload)"",dbTables.getSegmentsTable(), connector.getQuoteString()));for (List<DataSegment> partition : partitionedSegments) {for (DataSegment segment : partition) {preparedBatch.add().bind(""id"", segment.getId().toString()).bind(""dataSource"", segment.getDataSource()).bind(""created_date"", DateTimes.nowUtc().toString()).bind(""start"", segment.getInterval().getStart().toString()).bind(""end"", segment.getInterval().getEnd().toString()).bind(""partitioned"", (segment.getShardSpec() instanceof NoneShardSpec) ? false : true).bind(""version"", segment.getVersion()).bind(""used"", usedSegments.contains(segment)).bind(""payload"", jsonMapper.writeValueAsBytes(segment));}final int[] affectedRows = preparedBatch.execute();final boolean succeeded =Arrays.stream(affectedRows).allMatch(eachAffectedRows -> eachAffectedRows == 1);if (succeeded) {log.infoSegments(partition, ""Published segments to DB"");} else {final List<DataSegment> failedToPublish =IntStream.range(0, partition.size()).filter(i -> affectedRows[i] != 1).mapToObj(partition::get).collect(Collectors.toList());throw new ISE(""Failed to publish segments to DB: %s"",SegmentUtils.commaSeparatedIdentifiers(failedToPublish));}}} catch (Exception e) {log.errorSegments(segments, ""Exception inserting segments"");throw e;}return toInsertSegments;}}"	1
4025	"public class A {public static com.liferay.expando.kernel.model.ExpandoColumn updateTypeSettings(HttpPrincipal httpPrincipal, long columnId, String typeSettings)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(ExpandoColumnServiceUtil.class,""updateTypeSettings"",_updateTypeSettingsParameterTypes6);MethodHandler methodHandler = new MethodHandler(methodKey, columnId, typeSettings);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.expando.kernel.model.ExpandoColumn) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4026	public class A {private void writeCipherSuite(StatePlaintext statePlaintext) {appendInt(statePlaintext.getCipherSuite().getValue(), HandshakeByteLength.CIPHER_SUITE);}}	1
4027	public class A {@Testpublic void testPublisherFansout() throws Exception {StubConnection connection1 = createConnection();ConnectionInfo connectionInfo1 = createConnectionInfo();SessionInfo sessionInfo1 = createSessionInfo(connectionInfo1);ConsumerInfo consumerInfo1 = createConsumerInfo(sessionInfo1, destination);connection1.send(connectionInfo1);connection1.send(sessionInfo1);connection1.request(consumerInfo1);StubConnection connection2 = createRemoteConnection();ConnectionInfo connectionInfo2 = createConnectionInfo();SessionInfo sessionInfo2 = createSessionInfo(connectionInfo2);ConsumerInfo consumerInfo2 = createConsumerInfo(sessionInfo2, destination);connection2.send(connectionInfo2);connection2.send(sessionInfo2);connection2.request(consumerInfo2);StubConnection connection3 = createFanoutConnection();ConnectionInfo connectionInfo3 = createConnectionInfo();SessionInfo sessionInfo3 = createSessionInfo(connectionInfo3);ProducerInfo producerInfo3 = createProducerInfo(sessionInfo3);connection3.send(connectionInfo3);connection3.send(sessionInfo3);connection3.send(producerInfo3);connection3.request(createMessage(producerInfo3, destination, deliveryMode));Assert.assertNotNull(receiveMessage(connection1));assertNoMessagesLeft(connection1);Assert.assertNotNull(receiveMessage(connection2));assertNoMessagesLeft(connection2);}}	1
4028	"public class A {@Overridepublic boolean apply(Application app) {VanillaWindowsProcess entity =Iterables.getOnlyElement(Entities.descendants(app, VanillaWindowsProcess.class));String winRMAddress = entity.getAttribute(AdvertiseWinrmLoginPolicy.VM_USER_CREDENTIALS);String ipPort = Strings.getFirstWordAfter(winRMAddress, ""@"");String user = Strings.getFirstWord(winRMAddress);String password = Strings.getFirstWordAfter(winRMAddress, "":"");WinRmTool winRmTool = WinRmTool.connect(ipPort, user, password);WinRmToolResponse winRmResponse =winRmTool.executePs(ImmutableList.of(""(Get-Item \""C:\\\\Program Files\\\\7-Zip\\\\7z.exe\"").name""));return ""7z.exe\r\n"".equals(winRmResponse.getStdOut());}}"	1
4029	"public class A {private void loadEnvironment(ConfigurableApplicationContext appContext,ConfigurableEnvironment env,String appName,ServletContext servletContext) {MutablePropertySources propertySources = env.getPropertySources();RawPropertyResolver props = new RawPropertyResolver(propertySources);String[] profiles = env.getActiveProfiles();DefaultPropertySource defaultPropertySource = new DefaultPropertySource();propertySources.addLast(defaultPropertySource);PreferencePropertySource preferencePropertySource = new PreferencePropertySource(appName);PreferencePropertySource.THE = preferencePropertySource;propertySources.addBefore(DefaultPropertySource.PROPS_NAME, preferencePropertySource);if (servletContext != null) {if (JndiLocatorDelegate.isDefaultJndiEnvironmentAvailable()) {propertySources.addFirst(new JndiPropertySource(""JNDI properties""));}propertySources.addFirst(new ServletContextPropertySource(""ServletContext init parameters"", servletContext));}propertySources.addBefore(PreferencePropertySource.PROPS_NAME,new ApplicationPropertySource(props, appName, profiles));DynamicPropertySource propertySource = new DynamicPropertySource(appName, props);DynamicPropertySource.THE = propertySource;propertySources.addBefore(ApplicationPropertySource.PROPS_NAME, propertySource);propertySources.addBefore(DynamicPropertySource.PROPS_NAME, new DisablePropertySource(propertySources));propertySources.addFirst(new SysInfoPropertySource());propertySources.addLast(new RefPropertySource(propertySources));registerPropertyBean(appContext, defaultPropertySource, props);}}"	8
4030	public class A {public static boolean checkIfRemoteEndpointAccessible(String host, int port) {try {Socket discover = new Socket();discover.setSoTimeout(1000);discover.connect(new InetSocketAddress(host, port), 1000);discover.close();return true;} catch (ConnectException cne) {if (LOG.isDebugEnabled()) {}return false;} catch (IOException ioe) {if (LOG.isDebugEnabled()) {}return false;}}}	2
4031	"public class A {public String createBucket(String bucketName, boolean bucketExistsThrowException)throws SenderException {try {if (!s3Client.doesBucketExistV2(bucketName)) {CreateBucketRequest createBucketRequest = null;if (isForceGlobalBucketAccessEnabled())createBucketRequest = new CreateBucketRequest(bucketName, getBucketRegion());else createBucketRequest = new CreateBucketRequest(bucketName);s3Client.createBucket(createBucketRequest);} else if (bucketExistsThrowException)throw new SenderException("" bucket with bucketName [""+ bucketName+ ""] already exists, please specify a unique bucketName"");} catch (AmazonServiceException e) {throw new SenderException(""Failed to create bucket with bucketName ["" + bucketName + ""]."" + e);}return bucketName;}}"	2
4032	"public class A {private KeyPair getOrImportKeyPairForPublicKey(ECSServiceTemplateOptions options, String regionId) {PublicKey userKey = readPublicKey(options.getPublicKey());final String fingerprint = computeFingerprint(userKey);KeyPair keyPair;synchronized (CreateResourcesThenCreateNodes.class) {Optional<KeyPair> keyPairOptional =Iterables.tryFind(api.sshKeyPairApi().list(regionId).concat(),new Predicate<KeyPair>() {@Overridepublic boolean apply(KeyPair input) {return input.keyPairFingerPrint().equals(fingerprint.replace("":"", """"));}});if (!keyPairOptional.isPresent()) {keyPair =api.sshKeyPairApi().importKeyPair(regionId,options.getPublicKey(),namingConvention.create().uniqueNameForGroup(JCLOUDS_KEYPAIR_IMPORTED));} else {keyPair = keyPairOptional.get();}return keyPair;}}}"	4
4033	"public class A {private void createValuesAsPrimitives(VM vm, final String regionName, final int size) {vm.invoke(new CacheSerializableRunnable(""Create values"") {@Overridepublic void run2() throws CacheException {Region region1 = getRootRegion().getSubregion(regionName);for (int i = 1; i <= size; i++) {switch (i % 5) {case 0:region1.put(""key"" + i, ""seeded"");break;case 1:region1.put(""key"" + i, ""seeding"");break;case 2:region1.put(""key"" + i, (double) i);break;case 3:region1.put(""key"" + i, i);break;case 4:region1.put(""key"" + i, new Portfolio(i));break;default:region1.put(""key"" + i, i);break;}}}});}}"	1
4034	public class A {@Overridepublic ICompilerFactory create() {return new ICompilerFactory() {@Overridepublic ICompiler createCompiler(final ILogicalPlan plan, final IMetadataProvider<?, ?> metadata, int varCounter) {final IOptimizationContext oc =optCtxFactory.createOptimizationContext(varCounter,expressionEvalSizeComputer,mergeAggregationExpressionFactory,expressionTypeComputer,missableTypeComputer,conflictingTypeResolver,physicalOptimizationConfig,clusterLocations,warningCollector);oc.setMetadataDeclarations(metadata);final HeuristicOptimizer opt =new HeuristicOptimizer(plan, logicalRewrites, physicalRewrites, oc);return new ICompiler() {@Overridepublic void optimize() throws AlgebricksException {opt.optimize();}@Overridepublic JobSpecification createJob(Object appContext, IJobletEventListenerFactory jobEventListenerFactory)throws AlgebricksException {JobGenContext context =new JobGenContext(null,metadata,appContext,serializerDeserializerProvider,hashFunctionFactoryProvider,hashFunctionFamilyProvider,comparatorFactoryProvider,typeTraitProvider,binaryBooleanInspectorFactory,binaryIntegerInspectorFactory,printerProvider,missingWriterFactory,unnestingPositionWriterFactory,normalizedKeyComputerFactoryProvider,expressionRuntimeProvider,expressionTypeComputer,oc,expressionEvalSizeComputer,partialAggregationTypeComputer,predEvaluatorFactoryProvider,physicalOptimizationConfig.getFrameSize(),clusterLocations,warningCollector,maxWarnings,physicalOptimizationConfig);PlanCompiler pc = new PlanCompiler(context);return pc.compilePlan(plan, jobEventListenerFactory);}};}};}}	1
4035	"public class A {@Testpublic void testGetServiceByDcIgnoreCase() throws Exception {when(consoleConfig.getConsoleDomains()).thenReturn(new HashMap<String, String>() {{put(""jq"", ""http://127.0.0.1:8080"");put(""OY"", ""http://127.0.0.1:8081"");}});ConsoleServiceManager manager = new ConsoleServiceManager(consoleConfig);Method method = ConsoleServiceManager.class.getDeclaredMethod(""getServiceByDc"", String.class);method.setAccessible(true);ConsoleService consoleService = (ConsoleService) method.invoke(manager, ""jq"");Assert.assertNotNull(consoleService);consoleService = (ConsoleService) method.invoke(manager, ""oy"");Assert.assertNotNull(consoleService);try {method.invoke(manager, ""rb"");Assert.fail();} catch (Exception e) {}}}"	1
4036	public class A {@Overridepublic Set<Future<AnalysisSubmission>> postProcessResults() {synchronized (postProcessingLock) {List<AnalysisSubmission> analysisSubmissions =analysisSubmissionRepository.findByAnalysisState(AnalysisState.TRANSFERRED);Set<Future<AnalysisSubmission>> submissions = Sets.newHashSet();for (AnalysisSubmission analysisSubmission : analysisSubmissions) {submissions.add(analysisExecutionService.postProcessResults(analysisSubmission));}return submissions;}}}	2
4037	"public class A {@Overridepublic void initialize() {config = getConfigAs(HandlerConfiguration.class);if (config.deviceid.isEmpty()) {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, ""Object ID unknown"");return;}device.initialize(config.basetopic, config.deviceid, thing.getChannels());super.initialize();}}"	1
4038	public class A {private Future<Map<String, Object>> userSearchDetails(Request request) {Map<String, Object> searchMap = new WeakHashMap<>();String value = (String) request.get(JsonKey.VALUE);String encryptedValue = null;try {encryptedValue =encryptionService.encryptData(StringUtils.lowerCase(value), request.getRequestContext());} catch (Exception var11) {throw new ProjectCommonException(ResponseCode.userDataEncryptionError.getErrorCode(),ResponseCode.userDataEncryptionError.getErrorMessage(),ResponseCode.SERVER_ERROR.getResponseCode());}searchMap.put((String) request.get(JsonKey.KEY), encryptedValue);SearchDTO searchDTO = new SearchDTO();searchDTO.getAdditionalProperties().put(JsonKey.FILTERS, searchMap);Future<Map<String, Object>> esFuture =esUtil.search(searchDTO, EsType.user.getTypeName(), request.getRequestContext());return esFuture;}}	1
4039	public class A {@Overridepublic SuiteStatusResult process() {return null;}}	1
4040	"public class A {@Testpublic void testAggregateTaskSummariesTargetEmpty() throws Exception {String json1 = read(this.getClass().getResourceAsStream(""/json/task-summary-1.json""));String json2 = read(this.getClass().getResourceAsStream(""/json/task-summary-empty.json""));JSONResponseAggregator aggregate = new JSONResponseAggregator();List<String> data = new ArrayList<>();data.add(json1);data.add(json2);String result = aggregate.aggregate(data);JSONObject aggregated = new JSONObject(result);assertNotNull(aggregated);Object processes = aggregated.get(""task-summary"");assertNotNull(processes);assertTrue(processes instanceof JSONArray);JSONArray processDefs = (JSONArray) processes;assertEquals(3, processDefs.length());}}"	1
4041	public class A {protected void singleTagRemoved(PluginTagEvent event, PluginTagListener listener) {try {listener.tagRemoved(event);} catch (Exception ex) {}}}	1
4042	public class A {public void buildMissingContainerSetAndValidate(Map<Long, Long> container2BCSIDMap) {container2BCSIDMap.entrySet().parallelStream().forEach((mapEntry) -> {long id = mapEntry.getKey();if (!containerMap.containsKey(id)) {missingContainerSet.add(id);} else {Container<?> container = containerMap.get(id);long containerBCSID = container.getBlockCommitSequenceId();long snapshotBCSID = mapEntry.getValue();if (containerBCSID < snapshotBCSID) {try {container.markContainerUnhealthy();} catch (StorageContainerException sce) {}}}});}}	3
4043	public class A {@Overridepublic void configure(@NonNull VocabCache<T> vocabCache,@NonNull WeightLookupTable<T> lookupTable,@NonNull VectorsConfiguration configuration) {this.vocabCache = vocabCache;this.lookupTable = lookupTable;this.configuration = configuration;if (configuration.getNegative() > 0) {if (((InMemoryLookupTable<T>) lookupTable).getSyn1Neg() == null) {((InMemoryLookupTable<T>) lookupTable).setUseHS(configuration.isUseHierarchicSoftmax());((InMemoryLookupTable<T>) lookupTable).setNegative(configuration.getNegative());((InMemoryLookupTable<T>) lookupTable).resetWeights(false);}}this.syn0 = new DeviceLocalNDArray(((InMemoryLookupTable<T>) lookupTable).getSyn0());this.syn1 = new DeviceLocalNDArray(((InMemoryLookupTable<T>) lookupTable).getSyn1());this.syn1Neg = new DeviceLocalNDArray(((InMemoryLookupTable<T>) lookupTable).getSyn1Neg());this.expTable =new DeviceLocalNDArray(Nd4j.create(((InMemoryLookupTable<T>) lookupTable).getExpTable(),new long[] {((InMemoryLookupTable<T>) lookupTable).getExpTable().length},syn0.get().dataType()));this.table = new DeviceLocalNDArray(((InMemoryLookupTable<T>) lookupTable).getTable());this.window = configuration.getWindow();this.useAdaGrad = configuration.isUseAdaGrad();this.negative = configuration.getNegative();this.sampling = configuration.getSampling();this.variableWindows = configuration.getVariableWindows();this.vectorLength = configuration.getLayersSize();}}	1
4044	"public class A {public void deployArtifact(final InputStream jarStream,final GAV gav,final boolean includeAdditionalRepositories,final Predicate<ArtifactRepository> filter) {File jarFile = new File(System.getProperty(""java.io.tmpdir""), toFileName(gav, ""jar""));try {inputStreamToFile(jarStream, jarFile);String pomXML = loadPomFromJar(new File(jarFile.getPath()));if (pomXML == null) {pomXML = generatePOM(gav);jarFile = appendFileToJar(pomXML, getPomXmlPath(gav), jarFile.getPath());}String pomProperties = loadGAVFromJarInternal(new File(jarFile.getPath()));if (pomProperties == null) {pomProperties = generatePomProperties(gav);jarFile = appendFileToJar(pomProperties, getPomPropertiesPath(gav), jarFile.getPath());}deployArtifact(gav, pomXML, jarFile, includeAdditionalRepositories, filter);} finally {try {jarFile.delete();} catch (Exception e) {}}}}"	1
4045	"public class A {@Test(timeout = 1000 * 60 * 10)public void run() {final String kafkaAddress = kafka.getBootstrapServers();final Producer<String, Invoke> invokeProducer = kafkaKeyedInvokesProducer(kafkaAddress);final Consumer<String, InvokeResult> invokeResultConsumer =kafkaInvokeResultsConsumer(kafkaAddress);final KafkaIOVerifier<String, Invoke, String, InvokeResult> verifier =new KafkaIOVerifier<>(invokeProducer, invokeResultConsumer);assertThat(verifier.sending(invoke(""foo""), invoke(""foo""), invoke(""bar"")),verifier.resultsInAnyOrder(is(invokeResult(""foo"", 1)), is(invokeResult(""foo"", 2)), is(invokeResult(""bar"", 1))));verificationApp.restartWorker(randomWorkerIndex());assertThat(verifier.sending(invoke(""foo""), invoke(""foo""), invoke(""bar"")),verifier.resultsInAnyOrder(is(invokeResult(""foo"", 3)), is(invokeResult(""foo"", 4)), is(invokeResult(""bar"", 2))));}}"	1
4046	public class A {@Overridepublic void stop() {if (nettyChannel != null) {nettyChannel.close();try {nettyChannel.getCloseFuture().await(60, TimeUnit.SECONDS);} catch (InterruptedException e) {} finally {nettyChannel = null;}}sourceCounter.stop();super.stop();}}	3
4047	public class A {public void storeToken(OzoneTokenIdentifier tokenId, long renewDate) throws IOException {if (LOG.isDebugEnabled()) {}try {omMetadataManager.getDelegationTokenTable().put(tokenId, renewDate);} catch (IOException e) {throw e;}}}	2
4048	public class A {public void finish(RunWriter runWriter) throws IOException {writeToWriter(runWriter, runWriter.writeSorted() ? new TreeMap<String, Posting>(postings) : postings);}}	2
4049	public class A {public void onExecutionFinish() {}}	1
4050	public class A {@Overridepublic void warn(String fqcn, Throwable t, String format, Object... arguments) {if (isWarnEnabled()) {if (this.isLocationAwareLogger) {locationAwareLog((LocationAwareLogger) this.logger,fqcn,LocationAwareLogger.WARN_INT,t,format,arguments);} else {}}}}	1
4051	public class A {@Overridepublic void reregistered(ExecutorDriver driver, SlaveInfo slaveInfo) {}}	1
4052	public class A {@Overridepublic boolean tryAppendDeleteRecord(final long id, final boolean sync, final IOCompletion callback) throws Exception {if (logger.isTraceEnabled()) {}checkJournalIsLoaded();lineUpContext(callback);if (!checkKnownRecordID(id, false)) {if (callback != null) {callback.done();}return false;}internalAppendDeleteRecord(id, sync, callback);return true;}}	1
4053	"public class A {@Override@Betapublic Collection<RegisteredType> addTypesAndValidateAllowInconsistent(String catalogYaml,@Nullable Map<RegisteredType, RegisteredType> result,boolean forceUpdate) {checkNotNull(catalogYaml, ""catalogYaml"");Maybe<OsgiManager> osgiManager = ((ManagementContextInternal) mgmt).getOsgiManager();if (osgiManager.isPresent() && AUTO_WRAP_CATALOG_YAML_AS_BUNDLE) {return addItemsOsgi(catalogYaml, forceUpdate, osgiManager.get()).getTypesInstalled();}if (result == null) result = MutableMap.of();collectCatalogItemsFromCatalogBomRoot(""unbundled catalog definition"",catalogYaml,null,null,result,false,MutableMap.of(),0,forceUpdate,true);Map<RegisteredType, Collection<Throwable>> validation = validateTypes(result.keySet());if (Iterables.concat(validation.values()).iterator().hasNext()) {throw new IllegalStateException(""Could not validate one or more items: "" + validation);}return validation.keySet();}}"	1
4054	"public class A {private boolean _isIndexedRecord(Object object) throws IOException {if (object instanceof IndexedRecord) {return true;}IllegalArgumentException illegalArgumentException =new IllegalArgumentException(""Indexed record is null"");if (object != null) {illegalArgumentException =new IllegalArgumentException(String.format(""Expected record instance of %s but actual instance "" + ""passed was %s"",IndexedRecord.class, object.getClass()));}if (_dieOnError) {throw new IOException(illegalArgumentException);}if (_logger.isWarnEnabled()) {}return false;}}"	1
4055	"public class A {@Overridepublic void safeProcessResult(int rc, String path, Object ctx, String name) {if (rc == Code.OK.intValue()) {if (logger.isDebugEnabled()) {}notifyListenersAndAddToOwnedTopics(topic, cb, ctx);hubManager.notifyClaimedTopic();} else if (rc == Code.NODEEXISTS.intValue()) {read();} else {KeeperException e =ZkUtils.logErrorAndCreateZKException(""Failed to create ephemeral node to claim ownership of topic: ""+ topic.toStringUtf8(),path,rc);cb.operationFailed(ctx, new PubSubException.ServiceDownException(e));}}}"	1
4056	public class A {@Overrideprotected AmazonKinesisFirehoseClient createClient(final ProcessContext context,final AWSCredentialsProvider credentialsProvider,final ClientConfiguration config) {return new AmazonKinesisFirehoseClient(credentialsProvider, config);}}	1
4057	public class A {@Overridepublic boolean annotate(VcfEntry vcfEntry) {boolean printed = false;boolean filteredOut = false;VcfFileIterator vcfFile = vcfEntry.getVcfFileIterator();try {countInputLines++;countVcfEntries++;if (vcfFile.isHeadeSection()) {if (cancer) {pedigree = readPedigree(vcfFile);anyCancerSample = pedigree.anyDerived();}}if (createSummaryHtml || createSummaryCsv) vcfStats.sample(vcfEntry);if ((filterIntervals != null) && (filterIntervals.query(vcfEntry).isEmpty())) {filteredOut = true;return false;}outputFormatter.startSection(vcfEntry);boolean impactLowOrHigher = false;List<Variant> variants = vcfEntry.variants();for (Variant variant : variants) {showProgress();impactLowOrHigher |= annotateVariant(variant);}if (anyCancerSample && impactLowOrHigher) annotateVariantCancer(variants, vcfEntry);outputFormatter.printSection(vcfEntry);printed = true;} catch (Throwable t) {totalErrs++;} finally {if (!printed && !filteredOut) outputFormatter.printSection(vcfEntry);}return true;}}	1
4058	"public class A {@Overridepublic void updateConfigs(PreferencesRegistry prefsRegistry) {Preferences proxyPreferences =prefsRegistry.getPreferences(""io.opensphere.core.net.NetworkConfigurationManagerImpl"");Set<String> preferenceKeys =New.set(""ProxyConfigUrl"",""ProxyExclusionPatterns"",""ProxyHost"",""ProxyPort"",""SystemProxiesEnabled"");Map<String, String> preferenceValues = new HashMap<>();for (String key : preferenceKeys) {String preferenceValue = proxyPreferences.getString(key, """");if (!preferenceValue.isEmpty()) {preferenceValues.put(key, preferenceValue);}proxyPreferences.remove(key, this);}if (!preferenceValues.isEmpty()) {ProxyConfigurations proxyConfigs = convertPreferences(preferenceValues);proxyPreferences.putJAXBObject(""configurations"", proxyConfigs, false, this);proxyPreferences.printPrefs();}}}"	2
4059	"public class A {@SuppressWarnings({""rawtypes"", ""unchecked""})@Testpublic void testSqlGroupBy() throws Exception {GroupByHavingOperator oper = new GroupByHavingOperator();oper.addColumnGroupByIndex(new ColumnIndex(""b"", null));FunctionIndex sum = new SumFunction(""c"", null);oper.addAggregateIndex(sum);HavingCondition having = new HavingCompareValue<Double>(sum, 6.0, 0);oper.addHavingCondition(having);EqualValueCondition condition = new EqualValueCondition();condition.addEqualValue(""a"", 1);oper.setCondition(condition);CollectorTestSink sink = new CollectorTestSink();oper.outport.setSink(sink);oper.setup(null);oper.beginWindow(1);HashMap<String, Object> tuple = new HashMap<String, Object>();tuple.put(""a"", 1);tuple.put(""b"", 1);tuple.put(""c"", 2);oper.inport.process(tuple);tuple = new HashMap<String, Object>();tuple.put(""a"", 1);tuple.put(""b"", 1);tuple.put(""c"", 4);oper.inport.process(tuple);tuple = new HashMap<String, Object>();tuple.put(""a"", 1);tuple.put(""b"", 2);tuple.put(""c"", 6);oper.inport.process(tuple);tuple = new HashMap<String, Object>();tuple.put(""a"", 1);tuple.put(""b"", 2);tuple.put(""c"", 7);oper.inport.process(tuple);oper.endWindow();oper.teardown();}}"	1
4060	"public class A {@Overridepublic void enforceListMethods(Context context, String pid, Date asOfDate) throws AuthzException {try {String target = Constants.ACTION.LIST_METHODS.uri;context.setActionAttributes(null);MultiValueMap<URI> resourceAttributes = new MultiValueMap<URI>();try {resourceAttributes.set(Constants.RESOURCE.AS_OF_DATETIME.attributeId, ensureDate(asOfDate, context));} catch (Exception e) {context.setResourceAttributes(null);throw new AuthzOperationalException(target + "" couldn't set "" + Constants.RESOURCE.AS_OF_DATETIME.uri, e);}context.setResourceAttributes(resourceAttributes);xacmlPep.enforce(context.getSubjectValue(Constants.SUBJECT.LOGIN_ID.uri),target,Constants.ACTION.APIA.uri,pid,extractNamespace(pid),context);} finally {}}}"	2
4061	public class A {public void sendBytes(byte[] bytes) {if (bytes.length > TRACE_FRAME_PAYLOAD_LENGTH) {Binary print = new Binary(bytes, 0, TRACE_FRAME_PAYLOAD_LENGTH);} else {}try {_networkOutputStream.write(bytes);_networkOutputStream.flush();} catch (IOException e) {throw new RuntimeException(e);}}}	2
4062	"public class A {@Overrideprotected void doHealthCheck(Health.Builder builder) throws Exception {File path = this.properties.getPath();long diskFreeInBytes = path.getFreeSpace();if (diskFreeInBytes >= this.properties.getThreshold()) {builder.up();} else {builder.down();}builder.withDetail(""total"", path.getTotalSpace()).withDetail(""free"", diskFreeInBytes).withDetail(""threshold"", this.properties.getThreshold());}}"	1
4063	public class A {protected String getExportDataRootElementString(Element rootElement) {if (rootElement == null) {return StringPool.BLANK;}try {Document document = rootElement.getDocument();return document.formattedString();} catch (IOException ioException) {if (_log.isDebugEnabled()) {}return StringPool.BLANK;}}}	1
4064	"public class A {private void initLastTxn(Map<String, Object> conf, int partition) {String indexFileName = String.format("".index.%s.%d"", conf.get(Config.TOPOLOGY_NAME), partition);this.indexFilePath = new Path(options.fileNameFormat.getPath(), indexFileName);try {this.lastSeenTxn = getTxnRecord(indexFilePath);} catch (IOException e) {throw new RuntimeException(e);}}}"	2
4065	"public class A {private void printXML(String message, Node xmlNode) {TransformerProperties transformerProperties = new TransformerProperties();transformerProperties.addOutputProperty(OutputKeys.OMIT_XML_DECLARATION, ""yes"");if (LOGGER.isTraceEnabled()) {}}}"	1
4066	public class A {@Overridepublic void onError(Throwable t) {if (t instanceof EofException) {} else {}}}	2
4067	"public class A {@Overridepublic void run() {if (isInterrupted.get()) {return;}try (InputStream fStream = Files.newInputStream(Paths.get(stagedUri))) {MultiDigestInputStreamWrapper digestWrapper =new MultiDigestInputStreamWrapper(fStream, existingDigests, REQUIRED_ALGS);digestWrapper.checkFixity();receiveResult(new FixityCheckResult(rescPid, stagedUri, origResc, digestWrapper.getDigests()));} catch (InvalidChecksumException e) {failJob(String.format(""Fixity check failed for %s belonging to %s"", stagedUri, origResc.getURI()),e.getMessage());} catch (IOException e) {failJob(e, ""Failed to read file {0} for fixity check"", stagedUri);}}}"	2
4068	public class A {@Overridepublic boolean deleteObjects(List<String> keyNameList) {if (keyNameList.size() == 0) {return true;}if (!areInSameBucket(keyNameList)) {return false;}try {OFSPath firstKeyPath = new OFSPath(keyNameList.get(0));OzoneBucket bucket = getBucket(firstKeyPath, false);return deleteObjects(bucket, keyNameList);} catch (IOException ioe) {return false;}}}	2
4069	"public class A {public static void testAddClassName_Rollback(HttpPrincipal httpPrincipal, String classNameValue) {try {MethodKey methodKey =new MethodKey(PortalServiceUtil.class,""testAddClassName_Rollback"",_testAddClassName_RollbackParameterTypes3);MethodHandler methodHandler = new MethodHandler(methodKey, classNameValue);try {TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {throw new com.liferay.portal.kernel.exception.SystemException(exception);}} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4070	"public class A {@Overridepublic AttributedList<Path> list(final Path directory, final ListProgressListener listener)throws BackgroundException {try {final AttributedList<Path> children = new AttributedList<Path>();for (final DavResource resource : this.list(directory)) {final String href = PathNormalizer.normalize(resource.getHref().getPath(), true);if (href.equals(directory.getAbsolute())) {if (resource.isDirectory()) {continue;}throw new NotfoundException(directory.getAbsolute());}final PathAttributes attr = attributes.toAttributes(resource);final Path file =new Path(directory,PathNormalizer.name(href),resource.isDirectory()? EnumSet.of(Path.Type.directory): EnumSet.of(Path.Type.file),attr);children.add(file);listener.chunk(directory, children);}return children;} catch (SardineException e) {throw new DAVExceptionMappingService().map(""Listing directory {0} failed"", e, directory);} catch (IOException e) {throw new HttpExceptionMappingService().map(e, directory);}}}"	1
4071	public class A {void asyncProcessLevelNodes(final String path,final Processor<String> processor,final AsyncCallback.VoidCallback finalCb,final Object context,final int successRc,final int failureRc) {zk.sync(path,new AsyncCallback.VoidCallback() {@Overridepublic void processResult(int rc, String path, Object ctx) {if (rc == Code.NONODE.intValue()) {finalCb.processResult(successRc, null, context);return;} else if (rc != Code.OK.intValue()) {finalCb.processResult(failureRc, null, context);return;}zk.getChildren(path,false,new AsyncCallback.ChildrenCallback() {@Overridepublic void processResult(int rc, String path, Object ctx, List<String> levelNodes) {if (rc == Code.NONODE.intValue()) {finalCb.processResult(successRc, null, context);return;} else if (rc != Code.OK.intValue()) {finalCb.processResult(failureRc, null, context);return;}AsyncListProcessor<String> listProcessor =new AsyncListProcessor<String>(scheduler);listProcessor.process(levelNodes, processor, finalCb, context, successRc, failureRc);}},null);}},null);}}	2
4072	public class A {private PhysicalExec createInnerJoinPlan(TaskAttemptContext context, JoinNode plan, PhysicalExec leftExec, PhysicalExec rightExec)throws IOException {Enforcer enforcer = context.getEnforcer();EnforceProperty property = getAlgorithmEnforceProperty(enforcer, plan);if (property != null) {JoinAlgorithm algorithm = property.getJoin().getAlgorithm();switch (algorithm) {case IN_MEMORY_HASH_JOIN:PhysicalExec[] orderedChilds =switchJoinSidesIfNecessary(context, plan, leftExec, rightExec);return new HashJoinExec(context, plan, orderedChilds[1], orderedChilds[0]);case MERGE_JOIN:return createMergeInnerJoin(context, plan, leftExec, rightExec);case HYBRID_HASH_JOIN:default:return createMergeInnerJoin(context, plan, leftExec, rightExec);}} else {return createBestInnerJoinPlan(context, plan, leftExec, rightExec);}}}	4
4073	"public class A {@Test@Tag(""vat-pricing-test"")@Tag(GlobalConstants.TAG_DAILY_EU_PROXY)public final void givenOnTheCoursePage_whenThePageLoadsInEUCountry_thenTheVATPricesAreShown() {try {page.openNewWindowWithProxy(proxyHost, proxyServerPort, proxyUsername, proxyPasswod);page.setUrl(page.getBaseURL() + GlobalConstants.COURSE_PAGE_FOR_VAT_TEST);page.loadUrl();assertTrue(page.vatPricesAvailableThePage(),""VAT prices not displayed in EU region. Proxy Server:""+ proxyHost+ "":""+ proxyServerPort);} catch (Exception e) {if (maxRetries == retryCount + 1) {fail(e.getMessage());} else {page.closeWindow();retryCount++;givenOnTheCoursePage_whenThePageLoadsInEUCountry_thenTheVATPricesAreShown();}}}}"	2
4074	"public class A {@Overridepublic boolean validateStudyActions(String studyId) {logger.entry(""begin validateStudyAction()"");String message = FdahpStudyDesignerConstants.SUCCESS;Session session = null;StudySequenceBo studySequenceBo = null;StudyBo studyBo = null;boolean markedAsCompleted = false;try {session = hibernateTemplate.getSessionFactory().openSession();if (StringUtils.isNotEmpty(studyId)) {studyBo =(StudyBo)session.getNamedQuery(FdahpStudyDesignerConstants.STUDY_LIST_BY_ID).setInteger(""id"", Integer.parseInt(studyId)).uniqueResult();studySequenceBo =(StudySequenceBo)session.getNamedQuery(FdahpStudyDesignerConstants.STUDY_SEQUENCE_BY_ID).setInteger(FdahpStudyDesignerConstants.STUDY_ID, studyBo.getId()).uniqueResult();if (studySequenceBo != null) {markedAsCompleted = getErrorForAction(studySequenceBo);if (markedAsCompleted) {return markedAsCompleted;} else {markedAsCompleted = false;}}} else {message = ""Action is missing"";}} catch (Exception e) {} finally {if ((null != session) && session.isOpen()) {session.close();}}logger.exit(""validateStudyAction() - Ends"");return markedAsCompleted;}}"	1
4075	"public class A {@Testpublic void testSuccessfulExchange_PreHashedServer() throws Exception {Map<String, Object> serverProps = new HashMap<String, Object>();serverProps.put(PRE_DIGESTED_PROPERTY, ""true"");SaslServer server =new SaslServerBuilder(DigestServerFactory.class, DIGEST).setUserName(""George"").setPassword(DigestPassword.ALGORITHM_DIGEST_MD5,getDigestKeySpec(""George"", ""gpwd"", ""TestRealm"")).setProperties(serverProps).setProtocol(""TestProtocol"").addMechanismRealm(""TestRealm"").setServerName(""TestServer"").build();CallbackHandler clientCallback = createClearPwdClientCallbackHandler(""George"", ""gpwd"", null);SaslClient client =Sasl.createSaslClient(new String[] {DIGEST},""George"",""TestProtocol"",""TestServer"",Collections.<String, Object>emptyMap(),clientCallback);assertFalse(client.hasInitialResponse());byte[] message = server.evaluateResponse(new byte[0]);message = client.evaluateChallenge(message);message = server.evaluateResponse(message);client.evaluateChallenge(message);assertTrue(server.isComplete());assertTrue(client.isComplete());assertEquals(""George"", server.getAuthorizationID());}}"	3
4076	"public class A {private MessageValidator<? extends ValidationContext> getMessageValidator() {if (messageValidator != null) {return messageValidator;}Optional<MessageValidator<? extends ValidationContext>> defaultMessageValidator =getTestContextFactory().getMessageValidatorRegistry().findMessageValidator(DEFAULT_XML_MESSAGE_VALIDATOR);if (defaultMessageValidator.isEmpty()) {try {defaultMessageValidator =Optional.of(getTestContextFactory().getReferenceResolver().resolve(DEFAULT_XML_MESSAGE_VALIDATOR, MessageValidator.class));} catch (CitrusRuntimeException e) {}}if (defaultMessageValidator.isEmpty()) {defaultMessageValidator = MessageValidator.lookup(""xml"");}if (defaultMessageValidator.isPresent()) {messageValidator = defaultMessageValidator.get();return messageValidator;}throw new CitrusRuntimeException(""Unable to locate proper XML message validator - please add validator to project"");}}"	1
4077	"public class A {@Testpublic void testMaxIvaratorResults() throws Exception {String regex = RE_OP + ""'b.*'"";String city = EQ_OP + ""'b-city'"";String query = Constants.ANY_FIELD + regex + AND_OP + Constants.ANY_FIELD + city;String anyRegex = this.dataManager.convertAnyField(regex);String anyCity = this.dataManager.convertAnyField(city);String expect = anyRegex + AND_OP + anyCity;List<String> dirs = ivaratorConfig();this.logic.setCollapseUids(true);this.logic.setMaxValueExpansionThreshold(1);this.logic.setIvaratorCacheBufferSize(2);runTest(query, expect);assertTrue(countComplete(dirs) >= 1);dirs.clear();dirs = ivaratorConfig();this.logic.setMaxIvaratorResults(1);runTest(query, expect);assertEquals(0, countComplete(dirs));}}"	1
4078	"public class A {@Overridepublic void triggerCheckpointOnBarrier(CheckpointMetaData checkpointMetaData,CheckpointOptions checkpointOptions,CheckpointMetricsBuilder checkpointMetrics)throws IOException {FlinkSecurityManager.monitorUserSystemExitForCurrentThread();try {if (performCheckpoint(checkpointMetaData, checkpointOptions, checkpointMetrics)) {if (isSynchronousSavepointId(checkpointMetaData.getCheckpointId())) {runSynchronousSavepointMailboxLoop();}}} catch (CancelTaskException e) {throw e;} catch (Exception e) {throw new IOException(""Could not perform checkpoint ""+ checkpointMetaData.getCheckpointId()+ "" for operator ""+ getName()+ '.',e);} finally {FlinkSecurityManager.unmonitorUserSystemExitForCurrentThread();}}}"	1
4079	"public class A {private void onResponse(MyRoleMessageExchange mex, MessageContext msgContext) throws AxisFault {switch (mex.getStatus()) {case FAULT:SOAPFault fault =_converter.createSoapFault(mex.getFaultResponse().getMessage(), mex.getFault(), mex.getOperation());msgContext.getEnvelope().getBody().addFault(fault);if (__log.isDebugEnabled())break;case ASYNC:case RESPONSE:_converter.createSoapResponse(msgContext, mex.getResponse(), mex.getOperation());writeHeader(msgContext, mex);break;case FAILURE:throw new OdeFault(""Message exchange failure"");default:throw new OdeFault(""Received ODE message exchange in unexpected state: "" + mex.getStatus());}}}"	3
4080	public class A {public boolean addGitIgnoreFile(String siteId) {String defaultFileLocation = studioConfiguration.getProperty(REPO_DEFAULT_IGNORE_FILE);ClassPathResource defaultFile = new ClassPathResource(defaultFileLocation);if (defaultFile.exists()) {Path siteSandboxPath = buildRepoPath(GitRepositories.SANDBOX, siteId);Path ignoreFile = siteSandboxPath.resolve(GitContentRepositoryConstants.IGNORE_FILE);if (!Files.exists(ignoreFile)) {try (OutputStream out = Files.newOutputStream(ignoreFile, StandardOpenOption.CREATE);InputStream in = defaultFile.getInputStream()) {IOUtils.copy(in, out);} catch (IOException e) {return false;}} else {}} else {}return true;}}	4
4081	public class A {@Overridepublic void onUnhandled(Event event) {try {super.onUnhandled(event);} catch (NullPointerException e) {}}}	1
4082	public class A {@Overridepublic boolean isSkip() {try {String type = filtered.optString(SenseiSchema.EVENT_TYPE_FIELD, null);if (type == null) return filtered.optBoolean(_skipField);else return SenseiSchema.EVENT_TYPE_SKIP.equalsIgnoreCase(type);} catch (Exception e) {return false;}}}	1
4083	public class A {private void setNewUser(PfHistoryMasterDO pfm, XmlDumpRestoreContext ctx) {String smodby = pfm.getModifiedBy();if (!NumberUtils.isDigits(smodby)) {return;}Integer olduserpk = Integer.parseInt(smodby);PFUserDO user = ctx.findEntityByOldPk(olduserpk, PFUserDO.class);if (user == null) {return;}Integer pk = user.getId();if (pk == null) {return;}String spk = Integer.toString(pk);pfm.visit((rec) -> {StdRecord<?> srec = (StdRecord<?>) rec;srec.setModifiedBy(spk);srec.setCreatedBy(spk);});}}	2
4084	public class A {public void delete(MYesno persistentInstance) {try {sessionFactory.getCurrentSession().delete(persistentInstance);} catch (RuntimeException re) {throw re;}}}	3
4085	public class A {@Overridepublic boolean acceptRemoteIpAddress(final String remoteIpAddress) {try {final InetAddress address = InetAddress.getByName(remoteIpAddress);for (final NetworkPatternEntry entry : this.patterns) {final byte[] patternMask = this.applyMask(entry.getIpAddress(), entry.getMask());final byte[] addressMask = this.applyMask(address.getAddress(), entry.getMask());if (Arrays.equals(patternMask, addressMask)) {return true;}}} catch (final UnknownHostException e) {}return false;}}	1
4086	public class A {public boolean removeFromTempQueueEvents(Object tailKey) {synchronized (this.queuedEventsSync) {Iterator<TmpQueueEvent> itr = this.tmpQueuedEvents.iterator();while (itr.hasNext()) {TmpQueueEvent event = itr.next();if (tailKey.equals(event.getEvent().getTailKey())) {if (logger.isDebugEnabled()) {}event.release();itr.remove();return true;}}return false;}}}	1
4087	public class A {@Overrideprotected Set<Pair<MetricNameDto, List<PlotSingleDto>>> fetchData(List<MetricNameDto> metricNames) {if (metricNames.isEmpty()) {return Collections.emptySet();}Collection<AbstractMetricPlotFetcher.MetricRawData> allRawData =abstractMetricPlotFetcher.getAllRawData(metricNames);if (allRawData.isEmpty()) {return Collections.emptySet();}return getResult(allRawData, metricNames);}}	1
4088	public class A {@Overridepublic synchronized void updateSize() {super.updateSize();updateAxesPosition();m_lines = calculateLines();((ParallelCoordinateDrawingPane) getDrawingPane()).setLines(m_lines);getDrawingPane().repaint();}}	1
4089	public class A {protected static Properties loadConfiguration(CommandLineArguments commandLineArguments) {URL propertiesAsURL = null;String customConfigFile = commandLineArguments.getConfigFile();if (customConfigFile == null) {if (new File(DBMAINTAIN_PROPERTIES).exists()) {propertiesAsURL = getPropertiesAsURL(DBMAINTAIN_PROPERTIES);}} else {propertiesAsURL = getPropertiesAsURL(customConfigFile);}return new DbMaintainConfigurationLoader().loadConfiguration(propertiesAsURL);}}	2
4090	"public class A {@Testpublic void test_36_EffectImpact() {Chromosome chr = new Chromosome(null, 0, 1, ""1"");Variant var = new Variant(chr, 1, ""A"", ""C"");var.setVariantType(VariantType.SNP);for (EffectType eff : EffectType.values()) {VariantEffect varEff = new VariantEffect(var);varEff.setEffectType(eff);}}}"	3
4091	"public class A {@Overridepublic Response toResponse(NotFoundException exception) {Map<String, Object> errorResponse = new HashMap<>();errorResponse.put(""message"", exception.getMessage());return Response.status(Response.Status.NOT_FOUND).entity(errorResponse).type(MediaType.APPLICATION_JSON_TYPE).build();}}"	1
4092	"public class A {void grabAndStoreActiveStreams(Optional<Node> maybeNode)throws JsonProcessingException, ReaperException {Preconditions.checkState(context.config.getDatacenterAvailability().isInCollocatedMode(),""grabAndStoreActiveStreams() can only be called in sidecar"");Node node = getNode(maybeNode);List<StreamSession> activeStreams = ClusterFacade.create(context).listStreamsDirect(node);((IDistributedStorage) context.storage).storeOperations(node.getClusterName(),OpType.OP_STREAMING,node.getHostname(),objectMapper.writeValueAsString(activeStreams));}}"	1
4093	"public class A {@Overridepublic Sequence eval(Sequence[] args, Sequence contextSequence) throws XPathException {if (args[0].isEmpty()) {return Sequence.EMPTY_SEQUENCE;}Image image = null;BinaryValue imageData = (BinaryValue) args[0].itemAt(0);try (InputStream inputStream = imageData.getInputStream()) {image = ImageIO.read(inputStream);} catch (IOException ioe) {return Sequence.EMPTY_SEQUENCE;}if (image == null) {logger.error(""Unable to read image data!"");return Sequence.EMPTY_SEQUENCE;}int iHeight = image.getHeight(null);if (iHeight == -1) {return Sequence.EMPTY_SEQUENCE;} else {return new IntegerValue(iHeight);}}}"	2
4094	public class A {@Overridepublic void configure(TestElement te) {super.configure(te);DbMonCollector dmte = (DbMonCollector) te;JMeterProperty dbmonValues = dmte.getSamplerSettings();if (!(dbmonValues instanceof NullProperty)) {JMeterPluginsUtils.collectionPropertyToTableModelRows((CollectionProperty) dbmonValues, tableModel, columnClasses);} else {}}}	1
4095	public class A {protected void writeResponseHeaders(HttpServletResponse resp, HttpResponse httpResp) {final Set<String> hopByHopHeaderNames = getConnectionHeaderValues(httpResp);for (Entry<String, Object> entry : httpResp.getHeaders().entrySet()) {String name = entry.getKey();String value =Objects.toString(entry.getValue() instanceof Collection<?>? CollectionUtility.firstElement((Collection<?>) entry.getValue()): entry.getValue());if (name != null && hopByHopHeaderNames.contains(name.toLowerCase(Locale.US))) {continue;}String originalValue = value;for (IHttpHeaderFilter filter : getResponseHeaderFilters()) {value = filter.filter(name, value);}if (value != null) {resp.setHeader(entry.getKey(), value);} else {}}}}	3
4096	"public class A {@Overridepublic boolean get(URIish uri, CredentialItem... items) {if (logger.isDebugEnabled()) {}for (CredentialItem item : items) {if (logger.isDebugEnabled()) {}if ((item instanceof CredentialItem.StringType || item instanceof CredentialItem.Password)&& item.getPromptText().startsWith(""Passphrase"")) {return treatPassphrase(item);}if (item instanceof CredentialItem.YesNoType) {if (logger.isDebugEnabled()) {}boolean userResponse = askUser(item.getPromptText());((CredentialItem.YesNoType) item).setValue(userResponse);return true;}}return super.get(uri, items);}}"	4
4097	public class A {public Map<String, AttributeInterface> extractAttributes(BeanFactory beanFactory, String entityManagerName) {Map<String, AttributeInterface> attributes = null;try {attributes = this.loadExtraAttributes(beanFactory, entityManagerName);} catch (Throwable t) {}return attributes;}}	1
4098	"public class A {private void createPostProcess(Element postProcessElement, Map<String, String> postProcessClasses)throws ApsSystemException {try {String name = postProcessElement.getName();String className = postProcessClasses.get(name);if (null != className) {Class postProcessClass = Class.forName(className);IPostProcess postProcess = (IPostProcess) postProcessClass.newInstance();postProcess.createConfig(postProcessElement);if (null == this.getPostProcesses()) {this.setPostProcesses(new ArrayList<IPostProcess>());}this.getPostProcesses().add(postProcess);} else {}} catch (Throwable t) {throw new ApsSystemException(""Error creating Post Process"", t);}}}"	2
4099	public class A {@Overridepublic void run(Timeout timeout) {try {Invoker<T> retryInvoker =select(loadbalance, invocation, invokers, Collections.singletonList(lastInvoker));lastInvoker = retryInvoker;retryInvoker.invoke(invocation);} catch (Throwable e) {if ((++retryTimes) >= retries) {} else {rePut(timeout);}}}}	2
4100	"public class A {private static boolean markFileAsExecutableUsingChmod(final File file) throws USMException {try {final Process p =Runtime.getRuntime().exec(new String[] {""chmod"", ""+x"", file.getAbsolutePath()});final int result = p.waitFor();if (result != 0) {final String msg =""chmod command did not terminate successfully. File ""+ file+ "" may not be executable!"";logger.warning(msg);}return result == 0;} catch (final IOException e) {throw new USMException(""Failed to execute chmod command:  chmod +x "" + file.getAbsolutePath(), e);} catch (final InterruptedException e) {throw new USMException(""Failed to execute chmod command on file "" + file, e);}}}"	2
4101	"public class A {@Test@WithMockUser(username = ""fbristow"", password = ""password1"", roles = ""ADMIN"")public void testAddDetachedRunToSequenceFile() throws IOException, InterruptedException {final String SEQUENCE = ""ACGTACGTN"";final byte[] FASTQ_FILE_CONTENTS =(""@testread\n"" + SEQUENCE + ""\n+\n?????????\n@testread2\n"" + SEQUENCE + ""\n+\n?????????"").getBytes();Path p = Files.createTempFile(null, null);Files.write(p, FASTQ_FILE_CONTENTS);SequenceFile sf = new SequenceFile();sf.setFile(p);SingleEndSequenceFile so = new SingleEndSequenceFile(sf);Sample sample = sampleService.read(1L);SequencingRun run = miseqRunService.read(2L);objectService.createSequencingObjectInSample(so, sample);miseqRunService.addSequencingObjectToSequencingRun(run, so);AnalysisFastQC analysis = null;do {try {analysis = analysisService.getFastQCAnalysisForSequenceFile(so, sf.getId());} catch (final EntityNotFoundException e) {Thread.sleep(1000);}} while (analysis == null);assertNotNull(""FastQC analysis should have been created for sequence file."", analysis);}}"	1
4102	public class A {private void addData(@Nullable final SolrInputDocument doc,@Nonnull final String fieldName,@Nonnull final String fieldValue) {if (doc != null) {doc.addField(fieldName, fieldValue);} else {}}}	1
4103	public class A {@Overridepublic void destroy() {Iterator<SCTPServerConnection> it = this.serverConnections.iterator();while (it.hasNext()) {try {SCTPServerConnection server = it.next();it.remove();if (server != null && server.isConnected()) {server.disconnect();server.destroy();}} catch (Exception e) {}}}}	2
4104	public class A {protected <T extends MessageInput> void installInput(MapBinder<String, MessageInput.Factory<? extends MessageInput>> inputMapBinder,Class<T> target) {Class<? extends MessageInput.Factory<T>> factoryClass =(Class<? extends MessageInput.Factory<T>>)findInnerClassAnnotatedWith(FactoryClass.class, target, MessageInput.Factory.class);if (factoryClass == null) {return;}installInput(inputMapBinder, target, factoryClass);}}	1
4105	public class A {private List<Pattern> buildPatternList(String propertyName) {List<String> values = configService.getListProperty(propertyName).value();List<Pattern> patterns = new ArrayList<Pattern>();for (String value : values) {try {patterns.add(Pattern.compile(value.trim(), Pattern.DOTALL));} catch (PatternSyntaxException e) {}}return ImmutableList.copyOf(patterns);}}	1
4106	"public class A {@Overridepublic synchronized void insert(Role role)throws DataServiceException, DuplicatedCommonNameException {if (role.getName().length() == 0) {throw new IllegalArgumentException(""given name is required"");}try {if (findByCommonName(role.getName()) == null) throw new NameNotFoundException(""Not found"");throw new DuplicatedCommonNameException(""there is a role with this name: "" + role.getName());} catch (NameNotFoundException e1) {}Name dn = buildRoleDn(role.getName());DirContextAdapter context = new DirContextAdapter(dn);mapToContext(role, context);try {this.ldapTemplate.bind(dn, context, null);} catch (org.springframework.ldap.NamingException e) {throw new DataServiceException(e);}}}"	2
4107	public class A {@Overridepublic Object apply(final ActionContext ctx, final Object caller, final Object[] sources)throws FrameworkException {try {assertArrayHasLengthAndAllElementsNotNull(sources, 1);final String cacheKey = sources[0].toString();return CacheExpression.hasCachedValue(cacheKey);} catch (ArgumentNullException | ArgumentCountException pe) {logParameterError(caller, sources, pe.getMessage(), ctx.isJavaScriptContext());return false;}}}	1
4108	public class A {private ReadResponse getLongPollReadResponse() {if (!shouldReadEntry() && readRequest.hasTimeOut()) {if (logger.isTraceEnabled()) {}final Stopwatch startTimeSw = Stopwatch.createStarted();final Observable observable;try {observable = bookie.waitForLastAddConfirmedUpdate(ledgerId, previousLAC, this);} catch (Bookie.NoLedgerException e) {return buildErrorResponse(StatusCode.ENOLEDGER, startTimeSw);} catch (IOException ioe) {return buildErrorResponse(StatusCode.EIO, startTimeSw);}registerSuccessfulEvent(statsLogger.getOpStatsLogger(READ_ENTRY_LONG_POLL_PRE_WAIT), startTimeSw);lastPhaseStartTime.reset().start();if (null != observable) {if (logger.isTraceEnabled()) {}synchronized (this) {expirationTimerTask =requestTimer.newTimeout(new TimerTask() {@Overridepublic void run(Timeout timeout) throws Exception {LongPollReadEntryProcessorV3.this.scheduleDeferredRead(observable, true);}},readRequest.getTimeOut(),TimeUnit.MILLISECONDS);}return null;}}return getReadResponse();}}	4
4109	"public class A {@Testpublic void testConfigReload() throws Exception {agentProps.put(""agent.channels.mem-01.transactionCapacity"", ""10"");agentProps.put(""agent.sinks.roll-01.sink.batchSize"", ""20"");StagedInstall.getInstance().startAgent(""agent"", agentProps, agentEnv, agentOptions);TimeUnit.SECONDS.sleep(10);validateSeenEvents(sinkOutputDir1, 0, 0);validateSeenEvents(sinkOutputDir2, 1, 100);validateSeenEvents(sinkOutputDir3, 1, 100);agentProps.put(""agent.channels.mem-01.transactionCapacity"", ""20"");StagedInstall.getInstance().reconfigure(agentProps);TimeUnit.SECONDS.sleep(40);validateSeenEvents(sinkOutputDir1, 1, 100);}}"	3
4110	public class A {private void respond(Socket socket) throws Exception {try {try {if (Constants.useSocketTcpNoDelay()) {socket.setTcpNoDelay(true);}if (Constants.useSocketKeepAlive()) {socket.setKeepAlive(true);}} catch (SocketException e) {}socket.setSoTimeout(unicastDiscoveryConstraints.getUnicastSocketTimeout(DEFAULT_SOCKET_TIMEOUT));int pv = new DataInputStream(socket.getInputStream()).readInt();unicastDiscoveryConstraints.checkProtocolVersion(pv);getDiscovery(pv).handleUnicastDiscovery(new UnicastResponse(myLocator.getHost(), myLocator.getPort(), memberGroups, proxy),socket,unicastDiscoveryConstraints.getUnfulfilledConstraints(),unicastDiscoverySubjectChecker,Collections.EMPTY_LIST);} finally {try {socket.close();} catch (IOException e) {}}}}	2
4111	public class A {@Overrideprotected void actualDelivery(AMQPMessage message, Delivery delivery, Receiver receiver, Transaction tx) {try {if (sessionSPI != null) {if (address == null && message != null) {validateAddressOnAnonymousLink(message);}sessionSPI.serverSend(this, tx, receiver, delivery, address, routingContext, message);}} catch (Exception e) {deliveryFailed(delivery, receiver, e);}}}	1
4112	public class A {private void dumpDestroyedEntries(Region region) throws EntryNotFoundException {if (entriesDumped) {return;}entriesDumped = true;for (int i = 5; i < NB1_NUM_ENTRIES; i += 6) {}}}	2
4113	"public class A {@Overridepublic Answer createVolume(CreateObjectCommand cmd) {DataTO data = cmd.getData();VolumeObjectTO volume = (VolumeObjectTO) data;try {String poolUuid = data.getDataStore().getUuid();String storeUrl = data.getDataStore().getUrl();URI uri = new URI(storeUrl);String host = uri.getHost();String file = getVirtualDiskPath(volume.getUuid(), poolUuid);Long size = volume.getSize();StoragePlugin sp = new StoragePlugin(c);FileProperties fp = sp.storagePluginCreate(poolUuid, host, file, size, false);if (!fp.getName().equals(file)) {return new CreateObjectAnswer(""Filename mismatch: "" + fp.getName() + "" != "" + file);}VolumeObjectTO newVol = new VolumeObjectTO();newVol.setName(volume.getName());newVol.setSize(fp.getSize());newVol.setPath(volume.getUuid());return new CreateObjectAnswer(newVol);} catch (Ovm3ResourceException | URISyntaxException e) {return new CreateObjectAnswer(e.toString());}}}"	2
4114	public class A {void append(final List<AckEntry> batch) {if (batch == null || batch.isEmpty()) return;updateLock.lock();try {if (lastAppendOffset != -1 && lastAppendOffset + 1 != batch.get(0).pullOffset()) {appendErrorCount.inc();}if (head == null) {beginScanPosition = head = batch.get(0);minPullOffset.set(head.pullOffset());}if (tail != null) {tail.setNext(batch.get(0));}tail = batch.get(batch.size() - 1);lastAppendOffset = tail.pullOffset();maxPullOffset.set(tail.pullOffset());toSendNum.getAndAdd(batch.size());} finally {updateLock.unlock();}}}	1
4115	public class A {public void valueHasChanged(SharedValueReader sharedValue, byte[] newValue) throws Exception {if (log.isDebugEnabled()) {}listener.stateHasChanged(SharedTriState.this, SharedTriState.fromBytes(newValue));}}	1
4116	public class A {private void parseCSVLines() {long currentRowNumber = 0;try {CollectSurvey survey = (CollectSurvey) codeList.getSurvey();List<String> languages = survey.getLanguages();String defaultLanguage = survey.getDefaultLanguage();File file = OpenForisIOUtils.copyToTempFile(inputStream);reader = new CodeListCSVReader(file, csvFileOptions, languages, defaultLanguage);reader.init();levels = reader.getLevels();addProcessedRow(1);currentRowNumber = 2;while (isRunning()) {try {CodeListLine line = reader.readNextLine();if (line != null) {CodeListItem currentParentItem = null;List<String> levelCodes = line.getLevelCodes();for (int levelIdx = 0; levelIdx < levelCodes.size(); levelIdx++) {boolean lastLevel = levelIdx == levelCodes.size() - 1;CodeListItem item = processLevel(currentParentItem, line, levelIdx, lastLevel);currentParentItem = item;}addProcessedRow(currentRowNumber);}if (!reader.isReady()) {break;}} catch (ParsingException e) {addParsingError(currentRowNumber, e.getError());} finally {currentRowNumber++;}}} catch (ParsingException e) {changeStatus(Status.FAILED);addParsingError(1, e.getError());} catch (Exception e) {changeStatus(Status.FAILED);addParsingError(currentRowNumber, new ParsingError(ErrorType.IOERROR, e.toString()));} finally {IOUtils.closeQuietly(reader);}}}	1
4117	"public class A {@SuppressWarnings(""unchecked"")public void notifyHandlers(UnitOfWork<T> unitOfWork, Phase phase) {if (LOGGER.isDebugEnabled()) {}Deque<Consumer<UnitOfWork<T>>> l = handlers.getOrDefault(phase, EMPTY);while (!l.isEmpty()) {try {l.remove().accept(unitOfWork);} catch (Exception e) {if (phase.isSuppressHandlerErrors()) {} else {throw e;}}}}}"	2
4118	"public class A {private MessageEvent doActionSetNetworkTrafficContent(TestCaseExecution exe,TestCaseStepActionExecution actionexe,String urlToFilter,String withResponseContent)throws IOException {MessageEvent message;try {if (!""Y"".equalsIgnoreCase(exe.getRobotExecutorObj().getExecutorProxyActive())|| StringUtil.isNullOrEmpty(exe.getRobotExecutorObj().getExecutorProxyHost())) {message =new MessageEvent(MessageEventEnum.ACTION_FAILED_SETNETWORKTRAFFICCONTENT_ROBOTEXECUTORPROXYNOTACTIVATED);message.setDescription(message.getDescription().replace(""%ROBOT%"", exe.getRobotExecutorObj().getRobot()).replace(""%EXECUTOR%"", exe.getRobotExecutorObj().getExecutor()));return message;}Integer indexFrom = 0;if (!exe.getNetworkTrafficIndexList().isEmpty()) {indexFrom =exe.getNetworkTrafficIndexList().get(exe.getNetworkTrafficIndexList().size() - 1).getIndexRequestNb();}boolean doWithResponse = ParameterParserUtil.parseBooleanParam(withResponseContent, false);JSONObject har =executorService.getHar(urlToFilter,doWithResponse,exe.getRobotExecutorObj().getExecutorExtensionHost(),exe.getRobotExecutorObj().getExecutorExtensionPort(),exe.getRemoteProxyUUID(),exe.getSystem(),indexFrom);har =harService.enrichWithStats(har,exe.getCountryEnvironmentParameters().getDomain(),exe.getSystem(),exe.getNetworkTrafficIndexList());AppService appSrv =factoryAppService.create("""",AppService.TYPE_REST,AppService.METHOD_HTTPGET,"""","""","""","""","""","""","""","""","""",true,"""","""","""",null,"""",null,null);appSrv.setResponseHTTPBody(har.toString());appSrv.setResponseHTTPBodyContentType(AppService.RESPONSEHTTPBODYCONTENTTYPE_JSON);appSrv.setRecordTraceFile(false);exe.setLastServiceCalled(appSrv);actionexe.addFileList(recorderService.recordNetworkTrafficContent(exe, actionexe, 0, null, appSrv, true));exe.setAppTypeEngine(Application.TYPE_SRV);if (!exe.getNetworkTrafficIndexList().isEmpty()) {message =new MessageEvent(MessageEventEnum.ACTION_SUCCESS_SETNETWORKTRAFFICCONTENT).resolveDescription(""INDEX"", String.valueOf(exe.getNetworkTrafficIndexList().size())).resolveDescription(""NBHITS"", String.valueOf(indexFrom));} else {message =new MessageEvent(MessageEventEnum.ACTION_SUCCESS_SETNETWORKTRAFFICCONTENT_FROMINDEX0);}return message;} catch (Exception ex) {message = new MessageEvent(MessageEventEnum.ACTION_FAILED_SETNETWORKTRAFFICCONTENT);message.setDescription(message.getDescription().replace(""%DETAIL%"", ex.toString()));return message;}}}"	2
4119	"public class A {public void dispose(@NonNull Resource accountData) {try {File file = accountData.getFile();if (!file.exists()) {return;}try {ZipFile zipFile = new ZipFile(file);zipFile.close();} catch (ZipException notAZipFile) {throw new IllegalArgumentException(""The provided resource is not a ZIP file"");}file.delete();} catch (FileNotFoundException notAFileSystemResource) {} catch (IOException e) {}}}"	2
4120	"public class A {public static com.liferay.portal.kernel.model.Website addWebsite(HttpPrincipal httpPrincipal,String className,long classPK,String url,long typeId,boolean primary,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(WebsiteServiceUtil.class, ""addWebsite"", _addWebsiteParameterTypes0);MethodHandler methodHandler =new MethodHandler(methodKey, className, classPK, url, typeId, primary, serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.Website) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4121	public class A {public void persist(StgG20Sys transientInstance) {try {sessionFactory.getCurrentSession().persist(transientInstance);} catch (RuntimeException re) {throw re;}}}	3
4122	public class A {@Overridepublic void disconnect() throws IOException {try {batchwriter.close();} catch (MutationsRejectedException e) {DTThrowable.rethrow(e);}}}	1
4123	public class A {private <T> void executeOnPooledConnection(final Address address,final String type,final Function<ClientConnection, CompletableFuture<T>> callback,final Executor executor,final CompletableFuture<T> future) {if (address.equals(advertisedAddress)) {callback.apply(localConnection).whenComplete((result, error) -> {if (error == null) {executor.execute(() -> future.complete(result));} else {executor.execute(() -> future.completeExceptionally(error));}});return;}openFutures.add(future);channelPool.getChannel(address, type).whenComplete((channel, channelError) -> {if (channelError == null) {final ClientConnection connection = getOrCreateClientConnection(channel);callback.apply(connection).whenComplete((result, sendError) -> {if (sendError == null) {executor.execute(() -> {future.complete(result);openFutures.remove(future);});} else {final Throwable cause = Throwables.getRootCause(sendError);if (!(cause instanceof TimeoutException)&& !(cause instanceof MessagingException)) {channel.close().addListener(f -> {connection.close();connections.remove(channel);});}executor.execute(() -> {future.completeExceptionally(sendError);openFutures.remove(future);});}});} else {executor.execute(() -> {future.completeExceptionally(channelError);openFutures.remove(future);});}});}}	1
4124	"public class A {@Overridepublic void open(Configuration configuration) throws Exception {if (logFailuresOnly) {callback =new Callback() {@Overridepublic void onCompletion(RecordMetadata metadata, Exception e) {if (e != null) {}acknowledgeMessage();}};} else {callback =new Callback() {@Overridepublic void onCompletion(RecordMetadata metadata, Exception exception) {if (exception != null && asyncException == null) {asyncException = exception;}acknowledgeMessage();}};}RuntimeContext ctx = getRuntimeContext();if (flinkKafkaPartitioner != null) {flinkKafkaPartitioner.open(ctx.getIndexOfThisSubtask(), ctx.getNumberOfParallelSubtasks());}if (kafkaSchema instanceof KafkaContextAware) {KafkaContextAware<IN> contextAwareSchema = (KafkaContextAware<IN>) kafkaSchema;contextAwareSchema.setParallelInstanceId(ctx.getIndexOfThisSubtask());contextAwareSchema.setNumParallelInstances(ctx.getNumberOfParallelSubtasks());}if (kafkaSchema != null) {kafkaSchema.open(RuntimeContextInitializationContextAdapters.serializationAdapter(getRuntimeContext(), metricGroup -> metricGroup.addGroup(""user"")));}super.open(configuration);}}"	1
4125	public class A {protected void setupTestResources() throws Exception {ManifestManager manager = new ManifestManager(carbonHome);manager.execute();}}	2
4126	"public class A {@Overridepublic final Enumeration<URL> getResources(String name) throws IOException {if (name.startsWith(""META-INF/"")) {return getParent().getResources(name);}Vector<URL> urls = new Vector<URL>();URL localResource = getResource(name, false);if (localResource != null) {urls.add(localResource);}urls.addAll(Collections.list(getParent().getResources(name)));if (log.isTraceEnabled())return urls.elements();}}"	1
4127	"public class A {public static NodeList getClassNodes(final NodeList sources) {if (sources.getLength() == 0) {return null;}DocumentBuilder documentBuilder = MCRDOMUtils.getDocumentBuilderUnchecked();try {Document document = documentBuilder.newDocument();final Element source = (Element) sources.item(0);final String categId = source.getAttributeNS(MCRConstants.MCR_NAMESPACE.getURI(), ""categId"");final MCRCategoryID categoryID = MCRCategoryID.fromString(categId);final Element returns =document.createElementNS(source.getNamespaceURI(), source.getLocalName());MCRClassMapper.assignCategory(returns, categoryID);return returns.getChildNodes();} catch (Throwable e) {return null;} finally {MCRDOMUtils.releaseDocumentBuilder(documentBuilder);}}}"	2
4128	public class A {@BeforeSuitepublic void testOnStartup() throws ServletException {try {ApplicationConfigCache.loadConfigCache();changeAnnotationValue();loadDBDetails();} catch (InsightsCustomException| NoSuchFieldException| SecurityException| ClassNotFoundException e) {}}}	2
4129	public class A {@Overridepublic void run() {try {final InetAddress address = InetAddress.getByName(hostname);resolved.set(address);if (log.isInfoEnabled()) {}} catch (UnknownHostException e) {failure.set(e);} finally {signal.countDown();}}}	2
4130	"public class A {@Overridepublic Concept getConceptByName(final String name) {Criteria criteria = sessionFactory.getCurrentSession().createCriteria(ConceptName.class);Locale locale = Context.getLocale();Locale language = new Locale(locale.getLanguage() + ""%"");criteria.add(Restrictions.or(Restrictions.eq(""locale"", locale), Restrictions.like(""locale"", language)));if (Context.getAdministrationService().isDatabaseStringComparisonCaseSensitive()) {criteria.add(Restrictions.ilike(""name"", name));} else {criteria.add(Restrictions.eq(""name"", name));}criteria.add(Restrictions.eq(""voided"", false));criteria.createAlias(""concept"", ""concept"");criteria.add(Restrictions.eq(""concept.retired"", false));@SuppressWarnings(""unchecked"")List<ConceptName> list = criteria.list();LinkedHashSet<Concept> concepts = transformNamesToConcepts(list);if (concepts.size() == 1) {return concepts.iterator().next();} else if (list.isEmpty()) {} else {for (Concept concept : concepts) {for (ConceptName conceptName : concept.getNames(locale)) {if (conceptName.getName().equalsIgnoreCase(name)) {return concept;}}for (ConceptName indexTerm : concept.getIndexTermsForLocale(locale)) {if (indexTerm.getName().equalsIgnoreCase(name)) {return concept;}}}}return null;}}"	2
4131	"public class A {@Test(description = ""Verify the sample installation process"",groups = Constants.TestSample.SAMPLE_INSTALL,dependsOnMethods = {""sampleBuildTest""})public void sampleInstallationTest() throws IOException {File dir = new File(carbonHome);try {if (System.getProperty(Constants.OS_NAME).toLowerCase().contains(""windows"")) {commands =new String[] {""cmd.exe"", ""/c"", ""mvn clean install -f device-plugins-deployer.xml""};tempProcess = Runtime.getRuntime().exec(commands, null, dir);} else {commands = new String[] {""mvn"", ""clean"", ""install"", ""-f"", ""device-plugins-deployer.xml""};tempProcess = Runtime.getRuntime().exec(commands, null, dir);}boolean buildStatus =waitForMessage(tempProcess.getInputStream(), Constants.BUILD_SUCCESS_MSG);Assert.assertTrue(buildStatus, ""Sample installation was not successful"");} finally {if (tempProcess != null) {tempProcess.destroy();}}}}"	2
4132	"public class A {protected void internalRestore(VersionSet versions, boolean removeExisting)throws RepositoryException, ItemStateException {int numRestored = 0;while (versions.versions().size() > 0) {Set<InternalVersion> restored = null;for (InternalVersion v : versions.versions().values()) {NodeStateEx state = getNodeStateEx(v.getFrozenNode().getFrozenId());if (state != null) {int options = ItemValidator.CHECK_LOCK | ItemValidator.CHECK_HOLD;checkModify(state, options, Permission.NONE);restored = internalRestore(state, v, versions, removeExisting);for (InternalVersion r : restored) {versions.versions().remove(r.getVersionHistory().getId());}numRestored += restored.size();break;}}if (restored == null) {String msg =numRestored == 0? ""Unable to restore. At least one version needs existing versionable node in""+ "" workspace."": ""Unable to restore. All versions with non existing versionable nodes need""+ "" parent."";throw new VersionException(msg);}}}}"	1
4133	public class A {private void joinElection() {String zkRoot = HAConfiguration.getZookeeperProperties(configuration).getZkRoot();leaderLatch = curatorFactory.leaderLatchInstance(serverId, zkRoot);leaderLatch.addListener(this);try {leaderLatch.start();} catch (Exception e) {}}}	3
4134	"public class A {@Overridepublic Answer createSnapshot(final CreateObjectCommand cmd) {final Connection conn = hypervisorResource.getConnection();final SnapshotObjectTO snapshotTO = (SnapshotObjectTO) cmd.getData();final long snapshotId = snapshotTO.getId();final String snapshotName = snapshotTO.getName();String details = ""create snapshot operation Failed for snapshotId: "" + snapshotId;String snapshotUUID = null;try {final String volumeUUID = snapshotTO.getVolume().getPath();final VDI volume = VDI.getByUuid(conn, volumeUUID);final VDI snapshot = volume.snapshot(conn, new HashMap<String, String>());if (snapshotName != null) {snapshot.setNameLabel(conn, snapshotName);}snapshotUUID = snapshot.getUuid(conn);final String preSnapshotUUID = snapshotTO.getParentSnapshotPath();if (preSnapshotUUID != null) {final SR sr = volume.getSR(conn);final String srUUID = sr.getUuid(conn);final String type = sr.getType(conn);final Boolean isISCSI = IsISCSI(type);final String snapshotParentUUID = getVhdParent(conn, srUUID, snapshotUUID, isISCSI);try {final String preSnapshotParentUUID = getVhdParent(conn, srUUID, preSnapshotUUID, isISCSI);if (snapshotParentUUID != null && snapshotParentUUID.equals(preSnapshotParentUUID)) {snapshot.destroy(conn);snapshotUUID = preSnapshotUUID;}} catch (final Exception e) {}}final SnapshotObjectTO newSnapshot = new SnapshotObjectTO();newSnapshot.setPath(snapshotUUID);return new CreateObjectAnswer(newSnapshot);} catch (final XenAPIException e) {details += "", reason: "" + e.toString();s_logger.warn(details, e);} catch (final Exception e) {details += "", reason: "" + e.toString();}return new CreateObjectAnswer(details);}}"	2
4135	public class A {void log(final String message, final Object... objects) {}}	1
4136	"public class A {@PUT@Path(""{pathId : .+}/creator"")@Consumes({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@StatusCodes({@ResponseCode(code = 200, condition = ""Successfully retrieved file.""),@ResponseCode(code = 500, condition = ""Failed to download file because of some other error."")})@Facet(name = ""Unsupported"")public Response doSetContentCreator(@PathParam(""pathId"") String pathId, RepositoryFileDto contentCreator) {try {fileService.doSetContentCreator(pathId, contentCreator);return buildOkResponse();} catch (FileNotFoundException e) {return buildStatusResponse(Response.Status.NOT_FOUND);} catch (Throwable t) {return buildStatusResponse(Response.Status.INTERNAL_SERVER_ERROR);}}}"	2
4137	"public class A {@GET@Timed@Produces(APPLICATION_JSON_WITH_CHARSET)public String list(@Context GraphManager manager,@PathParam(""graph"") String graph,@QueryParam(""group"") String group,@QueryParam(""target"") String target,@QueryParam(""limit"") @DefaultValue(""100"") long limit) {E.checkArgument(group == null || target == null, ""Can't pass both group and target at the same time"");HugeGraph g = graph(manager, graph);List<HugeAccess> belongs;if (group != null) {Id id = UserAPI.parseId(group);belongs = manager.authManager().listAccessByGroup(id, limit);} else if (target != null) {Id id = UserAPI.parseId(target);belongs = manager.authManager().listAccessByTarget(id, limit);} else {belongs = manager.authManager().listAllAccess(limit);}return manager.serializer(g).writeAuthElements(""accesses"", belongs);}}"	1
4138	"public class A {private static boolean loadMap() {Path path = getStorageDir().resolve(""board.dat"");if (!Files.exists(path)) {for (int x = 0; x < width; x++) {for (int y = 0; y < height; y++) {board[x + width * y] = getDefaultColor(x, y);}}saveMapToDir(path);return true;}try {byte[] bytes = Files.readAllBytes(path);System.arraycopy(bytes, 0, board, 0, width * height);return true;} catch (ArrayIndexOutOfBoundsException e) {return false;} catch (IOException e) {e.printStackTrace();return false;}}}"	2
4139	"public class A {public static void logBefore(PLogger logger,Object target,String className,String methodName,String parameterDescription,Object[] args) {StringBuilder sb = new StringBuilder(512);sb.append(""BEFORE "");logMethod(sb, getTarget(target), className, methodName, parameterDescription, args);}}"	1
4140	public class A {public static void commitNonXAConns() {Map<String, DataServiceConnection> conns = tlCons.get();for (DataServiceConnection conn : conns.values()) {if (!conn.isXA()) {try {conn.commit();if (log.isDebugEnabled()) {}} catch (Exception e) {}}}}}	2
4141	public class A {@Overridepublic void deleteStates(Set<String> ids) {if (log.isTraceEnabled()) {}for (String id : ids) {if (states.remove(id) == null) {}}}}	2
4142	public class A {@Overridepublic void info(String text, Throwable e) {}}	1
4143	"public class A {public void process(@Nullable AudioStream audioStream) throws UnsupportedAudioFormatException {if (audioStream == null) {commander.handleStop(OnOffType.ON);} else {final String url;if (audioStream instanceof URLAudioStream) {URLAudioStream urlAudioStream = (URLAudioStream) audioStream;url = urlAudioStream.getURL();} else {if (callbackUrl != null) {String relativeUrl;if (audioStream instanceof FixedLengthAudioStream) {relativeUrl = audioHTTPServer.serve((FixedLengthAudioStream) audioStream, 10);} else {relativeUrl = audioHTTPServer.serve(audioStream);}url = callbackUrl + relativeUrl;} else {return;}}commander.playMedia(""Notification"",url,AudioFormat.MP3.isCompatible(audioStream.getFormat())? MIME_TYPE_AUDIO_MPEG: MIME_TYPE_AUDIO_WAV);}}}"	2
4144	"public class A {@Refreshable(dependsOn = {""tds.inputQueueHost"", ""tds.inputQueuePort"", ""tds.inputQueueName""})public void startListenerThread() {if (_initialized == true) {return;}String host = getQueueHost();String queueName = getQueueName();Integer port = getQueuePort();if (host == null) {return;}try {initializeQueue(host, queueName, port);} catch (InterruptedException ie) {return;}_initialized = true;}}"	3
4145	"public class A {@JsxFunctionpublic String getAllResponseHeaders() {if (state_ == STATE_UNSENT || state_ == STATE_OPENED) {throw Context.reportRuntimeError(""Unspecified error (request not sent)."");}if (webResponse_ != null) {final StringBuilder builder = new StringBuilder();for (final NameValuePair header : webResponse_.getResponseHeaders()) {builder.append(header.getName()).append("": "").append(header.getValue()).append(""\r\n"");}return builder.append(""\r\n"").toString();}if (LOG.isErrorEnabled()) {}return null;}}"	1
4146	public class A {private void unregister() throws IOException {synchronized (mMonitor) {if (mCurrentNode != null) {try {ZooKeeperMonitor.this.mZKClient.delete(mCurrentNode, -1);mCurrentNode = null;} catch (KeeperException e) {throw new IOException(e);}}}}}	1
4147	"public class A {private AdminSettings loadMailTemplates() throws Exception {Map<String, Object> mailTemplates = new HashMap<>();Pattern startPattern = Pattern.compile(""<div class=\""content\"".*?>"");Pattern endPattern = Pattern.compile(""<div class=\""footer\"".*?>"");File[] files =new DefaultResourceLoader().getResource(""classpath:/templates/"").getFile().listFiles();for (File file : files) {Map<String, String> mailTemplate = new HashMap<>();String name = validateName(file.getName());String stringTemplate = FileUtils.readFileToString(file, StandardCharsets.UTF_8);Matcher start = startPattern.matcher(stringTemplate);Matcher end = endPattern.matcher(stringTemplate);if (start.find() && end.find()) {String body =StringUtils.substringBetween(stringTemplate, start.group(), end.group()).replaceAll(""\t"", """");String subject = StringUtils.substringBetween(body, ""<h2>"", ""</h2>"");mailTemplate.put(""subject"", subject);mailTemplate.put(""body"", body);mailTemplates.put(name, mailTemplate);} else {}}AdminSettings adminSettings = new AdminSettings();adminSettings.setId(new AdminSettingsId(Uuids.timeBased()));adminSettings.setKey(""mailTemplates"");adminSettings.setJsonValue(mapper.convertValue(mailTemplates, JsonNode.class));return adminSettings;}}"	1
4148	public class A {@Overridepublic IUS findByID(Integer id) {IUS ius = null;if (id != null) {try {ius = dao.findByID(id);} catch (Exception exception) {}}return ius;}}	2
4149	public class A {@Overridepublic FilterType within(String propertyName, String wkt) {if (!isValidInputParameters(propertyName, wkt)) {throw new IllegalArgumentException(MISSING_PARAMETERS_MSG);}if (supportedGeo.contains(SPATIAL_OPERATORS.WITHIN.getValue())) {return buildGeospatialFilterType(SPATIAL_OPERATORS.WITHIN.toString(), propertyName, wkt, null);} else if (supportedGeo.contains(SPATIAL_OPERATORS.CONTAINS.getValue())) {return not(within(propertyName, wkt));} else {return null;}}}	1
4150	"public class A {@SuppressWarnings(""unchecked"")public void refreshGadgetDefinitionUserCounts() {Query q = getEntityManager().createQuery(""from GadgetDefinition gd"");List<GadgetDefinition> gadgetDefs = (List<GadgetDefinition>) q.getResultList();Query gadgetQuery;int numUsersCount;for (GadgetDefinition currentGadgetDef : gadgetDefs) {gadgetQuery =getEntityManager().createQuery(""select g.owner.id ""+ ""from Gadget g ""+ ""where g.gadgetDefinition.id=:gadgetDefId ""+ ""and g.owner.id is not null ""+ ""group by g.owner.id, g.gadgetDefinition.id"").setParameter(""gadgetDefId"", currentGadgetDef.getId());try {numUsersCount = gadgetQuery.getResultList().size();} catch (NoResultException nrex) {numUsersCount = 0;}currentGadgetDef.setNumberOfUsers(numUsersCount);}getEntityManager().flush();}}"	2
4151	public class A {private WebServiceTemplate createTemplate(final NotificationWebServiceLookupKey id)throws WebServiceSecurityException {final Optional<NotificationWebServiceConfiguration> config = this.configRepository.findById(id);if (!config.isPresent()) {return null;}return this.createTemplate(config.get());}}	1
4152	"public class A {@MCRCommand(syntax = ""try fix invalid mets"",help =""This Command can be used to fix invalid mets files that was found in any validate""+ "" selected mets runs."",order = 15)public static void fixInvalidMets() {while (true) {String selectedObjectID = invalidMetsQueue.poll();if (selectedObjectID == null) {break;}MCRPath metsFile = MCRPath.getPath(selectedObjectID, ""/mets.xml"");SAXBuilder saxBuilder = new SAXBuilder();Document metsDocument;try (InputStream metsInputStream = Files.newInputStream(metsFile)) {metsDocument = saxBuilder.build(metsInputStream);} catch (IOException | JDOMException e) {return;}MCRMetsSimpleModel mcrMetsSimpleModel;try {mcrMetsSimpleModel = MCRXMLSimpleModelConverter.fromXML(metsDocument);} catch (Exception e) {return;}Document newMets = MCRSimpleModelXMLConverter.toXML(mcrMetsSimpleModel);XMLOutputter xmlOutputter = new XMLOutputter();try (OutputStream os = Files.newOutputStream(metsFile)) {xmlOutputter.output(newMets, os);} catch (IOException e) {}}}}"	4
4153	public class A {@Overridepublic void handleCommand(final ChannelUID channelUID, final Command command) {if (command instanceof RefreshType) {this.scheduler.execute(this::updateCollectionDates);} else {}}}	1
4154	"public class A {public final ContainerInfo getAppMasterContainerInfo() {ContainerInfo ci = new ContainerInfo();ci.id = System.getenv(ApplicationConstants.Environment.CONTAINER_ID.toString());String nmHost = System.getenv(ApplicationConstants.Environment.NM_HOST.toString());String nmPort = System.getenv(ApplicationConstants.Environment.NM_PORT.toString());String nmHttpPort = System.getenv(ApplicationConstants.Environment.NM_HTTP_PORT.toString());ci.state = ""ACTIVE"";ci.jvmName = ManagementFactory.getRuntimeMXBean().getName();ci.numOperators = 0;YarnConfiguration conf = new YarnConfiguration();if (nmHost != null) {if (nmPort != null) {ci.host = nmHost + "":"" + nmPort;}if (nmHttpPort != null) {String nodeHttpAddress = nmHost + "":"" + nmHttpPort;if (allocatedMemoryMB == 0) {String url =ConfigUtils.getSchemePrefix(conf)+ nodeHttpAddress+ ""/ws/v1/node/containers/""+ ci.id;try (YarnClient rmClient = YarnClient.createYarnClient()) {rmClient.init(conf);rmClient.start();ContainerReport content = rmClient.getContainerReport(ContainerId.fromString(ci.id));int totalMemoryNeededMB = content.getAllocatedResource().getMemory();if (totalMemoryNeededMB > 0) {allocatedMemoryMB = totalMemoryNeededMB;} else {}} catch (Exception ex) {}}ci.containerLogsUrl =ConfigUtils.getSchemePrefix(conf)+ nodeHttpAddress+ ""/node/containerlogs/""+ ci.id+ ""/""+ System.getenv(ApplicationConstants.Environment.USER.toString());ci.rawContainerLogsUrl =ConfigUtils.getRawContainerLogsUrl(conf,nodeHttpAddress,plan.getLogicalPlan().getAttributes().get(LogicalPlan.APPLICATION_ID),ci.id);}}ci.memoryMBAllocated = allocatedMemoryMB;ci.memoryMBFree = ((int) (Runtime.getRuntime().freeMemory() / (1024 * 1024)));ci.lastHeartbeat = -1;ci.startedTime = startTime;ci.finishedTime = -1;return ci;}}"	3
4155	"public class A {@Testpublic void testPropertyIsEqualToQueryContentTypeIsMappedToFormat()throws JAXBException, UnsupportedQueryException, DatatypeConfigurationException, SAXException,IOException, SecurityServiceException {int pageSize = 10;int numRecordsReturned = 1;long numRecordsMatched = 1;String format = ""myContentType"";setupMockContextForMetacardTypeRegistrationAndUnregistration(getDefaultContentTypes());try {configureMockCsw(numRecordsReturned, numRecordsMatched, CswConstants.VERSION_2_0_2);} catch (CswException e) {fail(""Could not configure Mock Remote CSW: "" + e.getMessage());}QueryImpl propertyIsEqualToQuery =new QueryImpl(builder.attribute(Metacard.CONTENT_TYPE).is().text(format));propertyIsEqualToQuery.setPageSize(pageSize);AbstractCswSource cswSource = getCswSource(mockCsw, mockContext, CswConstants.CSW_FORMAT);cswSource.setCswUrl(URL);cswSource.setId(ID);cswSource.query(getQueryRequestWithSubject(propertyIsEqualToQuery));ArgumentCaptor<GetRecordsType> captor = ArgumentCaptor.forClass(GetRecordsType.class);try {verify(mockCsw, times(2)).getRecords(captor.capture());} catch (CswException e) {fail(""Could not verify Mock CSW record count "" + e.getMessage());}GetRecordsType getRecordsType = captor.getValue();String xml = getGetRecordsTypeAsXml(getRecordsType);Diff xmlDiff = new Diff(getRecordsControlXml202ContentTypeMappedToFormat, xml);if (!xmlDiff.similar()) {}assertXMLEqual(getRecordsControlXml202ContentTypeMappedToFormat, xml);}}"	3
4156	"public class A {public boolean isExistingDefaultAuthenticationSequence()throws IdentityDefaultSeqManagementServiceDefaultAuthSeqMgtException {try {if (log.isDebugEnabled()) {}return stub.isExistingDefaultAuthenticationSequence(DEFAULT_AUTH_SEQ);} catch (RemoteException e) {throw new IdentityDefaultSeqManagementServiceDefaultAuthSeqMgtException(""Server error occurred."");}}}"	2
4157	"public class A {protected void logStatusMessage(int status) {switch (status) {case EXIT_OK:break;case EXIT_BAD_ARGS:logger.severe(""SCHEMA CHANGE: BAD ARGS"");break;case EXIT_RUNTIME_ERROR:logger.severe(""SCHEMA CHANGE: RUNTIME ERROR"");break;case EXIT_VALIDATION_FAILED:logger.warning(""SCHEMA CHANGE: FAILED"");break;default:logger.severe(""SCHEMA CHANGE: RUNTIME ERROR"");break;}}}"	1
4158	"public class A {@Testpublic void testHighlanderMultiNode() throws Exception {int enqueueLoops = 1000;HashMap<String, String> parameters = new HashMap<String, String>();parameters.put(""delay_ms"", ""200"");CreationTools.createJobDef(null,true,""pyl.Wait"",parameters,""jqm-tests/jqm-test-pyl/target/test.jar"",TestHelpers.qVip,42,""MarsuApplication1"",null,""Franquin"",""ModuleMachin"",""other"",""other"",true,cnx);CreationTools.createJobDef(null,true,""pyl.WaitRandom"",parameters,""jqm-tests/jqm-test-pyl/target/test.jar"",TestHelpers.qVip,42,""MarsuApplication2"",null,""Franquin"",""ModuleMachin"",""other"",""other"",true,cnx);JobRequest j1 = new JobRequest(""MarsuApplication1"", ""TestUser"");JobRequest j2 = new JobRequest(""MarsuApplication2"", ""TestUser"");for (int i = 0; i < 9; i++) {JqmClientFactory.getClient().enqueue(j1);}addAndStartEngine();addAndStartEngine(""localhost4"");addAndStartEngine(""localhost5"");TestHelpers.waitFor(1, 10000, cnx);for (int i = 0; i < enqueueLoops; i++) {JqmClientFactory.getClient().enqueue(j1);JqmClientFactory.getClient().enqueue(j2);}TestHelpers.waitFor(20, 5000, cnx);Assert.assertEquals(0, TestHelpers.getNonOkCount(cnx));List<com.enioka.jqm.api.JobInstance> res =Query.create().addSortAsc(Sort.ID).setApplicationName(""MarsuApplication1"").run();Assert.assertTrue(res.size() >= 2);Assert.assertTrue(res.size() < 10 + enqueueLoops - 1);Calendar prevEnd = null;for (com.enioka.jqm.api.JobInstance h : res) {Assert.assertEquals(State.ENDED, h.getState());Assert.assertEquals(true, h.isHighlander());if (h.getBeganRunningDate().before(prevEnd)) {Assert.fail(""executions were not exclusive"");}prevEnd = h.getEndDate();}}}"	2
4159	public class A {@Overridepublic void broadcast(final long agentId, final String cmds) {final Date cutTime = DateUtil.currentGMTTime();final List<ManagementServerHostVO> peers =_mshostDao.getActiveList(new Date(cutTime.getTime() - HeartbeatThreshold.value()));for (final ManagementServerHostVO peer : peers) {final String peerName = Long.toString(peer.getMsid());if (getSelfPeerName().equals(peerName)) {continue;}try {if (s_logger.isDebugEnabled()) {}executeAsync(peerName, agentId, cmds, true);} catch (final Exception e) {}}}}	2
4160	public class A {@Beforepublic void setUp() throws Exception {dataRepository = createRepository();if (dataset != null) {try {uploadDataset(dataset);} catch (Exception exc) {try {dataRepository.shutDown();dataRepository = null;} catch (Exception e2) {}throw exc;}}}}	1
4161	"public class A {@POST@Path(""/roles"")@Consumes(APPLICATION_JSON)@Produces(APPLICATION_JSON)@ApiOperation(value = ""Assign roles for a list of users and applications"")@Timedpublic Response assignUserRoles(@ApiParam(name = ""userRoleList"", value = ""Please see model example"", required = true)final UserRoleList userRoleList,@HeaderParam(AUTHORIZATION) @ApiParam(value = EXAMPLE_AUTHORIZATION_HEADER, required = true)final String authorizationHeader) {try {List<Map> status = updateUserRole(userRoleList, authorizationHeader);return httpHeader.headers().entity(ImmutableMap.<String, Object>builder().put(""assignmentStatuses"", status).build()).build();} catch (Exception exception) {throw exception;}}}"	1
4162	public class A {private Dataset readDatasetFromFileWithIndex(final int fileIndexToUse) {try {if (fileIndexToUse >= this.files.length) return null;return this.fileBasedAtomProducer.readAtomFromFile(this.files[fileIndexToUse]);} catch (IOException e) {} catch (DataIntegrityException e) {}return null;}}	2
4163	"public class A {@Overridepublic void run() {for (String stifLocation : response.getStifZipList()) {}String stifTransformation = null;for (String transformationPath : response.getTransformationList()) {if (transformationPath.toLowerCase().contains(""stif"")) {stifTransformation = transformationPath;}}if (stifTransformation == null) {response.addStatusMessage(""No Stif Transformation Found"");for (String stifZip : response.getStifZipList()) {new org.onebusaway.nyc.admin.util.FileUtils().unzip(stifZip, stifOutputPath);}return;}StifTransformerTaskSupport.transformStifFiles(response.getStifZipList().toArray(new String[response.getStifZipList().size()]),stifTransformation,stifOutputPath,response.getTmpDirectory() + ""/StifWorkingDirectory"");}}"	4
4164	"public class A {private InputSource apply_merge(IncludeTag includeTag) throws SAXException, IOException {InputSource result = null;ArrayList<InputSource> inputSources = this.find_all_entities(includeTag);if (inputSources != null && inputSources.isEmpty() == false) {InputStream mergedStream = null;try {Properties xmlmergeProps = getXMLMergeProperties(includeTag.merge);String src = includeTag.src.replaceAll(""\\s+"", """");mergedStream = merge(src.replace(',', '_'), xmlmergeProps, toArray(inputSources));} catch (Throwable e) {String msg =String.format(""Config Generation: '%s' - Error while processing %s.  Check the included files for""+ "" syntax errors. : Could not merge the include files: '%s'."",e.getMessage(), getSrcFileName(), includeTag.src);throw new IOException(msg, e);}result = new InputSource(mergedStream);}return result;}}"	1
4165	public class A {@Overrideprotected List<String> getSchemaLocations() {List<String> schemas = new ArrayList<String>();schemas.add(getResourceURI(JRXmlConstants.JASPERPRINT_XSD_RESOURCE));schemas.add(getResourceURI(JRXmlConstants.JASPERPRINT_XSD_DTD_COMPAT_RESOURCE));List<XmlValueHandler> handlers = XmlValueHandlerUtils.instance().getHandlers();for (XmlValueHandler handler : handlers) {XmlHandlerNamespace namespace = handler.getNamespace();if (namespace != null) {String schemaURI;String schemaResource = namespace.getInternalSchemaResource();if (schemaResource != null) {schemaURI = getResourceURI(schemaResource);} else {schemaURI = namespace.getPublicSchemaLocation();}if (log.isDebugEnabled()) {}schemas.add(schemaURI);}}return schemas;}}	1
4166	public class A {@Overridepublic Future<CommandRouterResult> unregisterCommandConsumer(final String tenantId,final String deviceId,final String adapterInstanceId,final Span span) {return deviceConnectionInfo.removeCommandHandlingAdapterInstance(tenantId, deviceId, adapterInstanceId, span).recover(thr -> {if (ServiceInvocationException.extractStatusCode(thr)!= HttpURLConnection.HTTP_PRECON_FAILED) {}return Future.failedFuture(thr);}).map(v -> CommandRouterResult.from(HttpURLConnection.HTTP_NO_CONTENT)).otherwise(t -> CommandRouterResult.from(ServiceInvocationException.extractStatusCode(t)));}}	1
4167	"public class A {public List<DecoratedLogLine> getDecoratedLogLines(final String componentId)throws IOException, TException, MalformedURLException {final String logs = getLogs(componentId);final String dateRegex = ""\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{3}"";Pattern pattern = Pattern.compile(""(?=\\n"" + dateRegex + "")"");final String[] logLines = pattern.split(logs);List<DecoratedLogLine> sortedLogs =Arrays.asList(logLines).stream().filter(log -> log != null && StringDecorator.isDecorated(componentId, log)).map(DecoratedLogLine::new).sorted().collect(Collectors.toList());return sortedLogs;}}"	1
4168	"public class A {@Overridepublic WorkItemServiceState reportWorkItemStatus(WorkItemStatus workItemStatus)throws IOException {DateTime endTime = DateTime.now();workItemStatus.setFactory(Transport.getJsonFactory());if (firstNonNull(workItemStatus.getCompleted(), Boolean.FALSE)&& DataflowWorkerLoggingMDC.getStageName() != null) {DateTime startTime = stageStartTime.get();if (startTime != null) {long elapsed = endTime.getMillis() - startTime.getMillis();int numErrors = workItemStatus.getErrors() == null ? 0 : workItemStatus.getErrors().size();}}shortIdCache.shortenIdsIfAvailable(workItemStatus.getCounterUpdates());ReportWorkItemStatusRequest request =new ReportWorkItemStatusRequest().setWorkerId(options.getWorkerId()).setWorkItemStatuses(Collections.singletonList(workItemStatus)).setCurrentWorkerTime(toCloudTime(endTime));ReportWorkItemStatusResponse result =dataflow.projects().locations().jobs().workItems().reportStatus(options.getProject(), options.getRegion(), options.getJobId(), request).execute();if (result == null) {throw new IOException(""Got null work item status response"");}if (result.getWorkItemServiceStates() == null) {logger.warn(""Report work item status response: {}"", result);throw new IOException(""Report work item status contained no work item service states"");}if (result.getWorkItemServiceStates().size() != 1) {throw new IOException(""This version of the SDK expects exactly one work item service state from the service ""+ ""but got ""+ result.getWorkItemServiceStates().size()+ "" states"");}shortIdCache.storeNewShortIds(request, result);WorkItemServiceState state = result.getWorkItemServiceStates().get(0);return state;}}"	5
4169	"public class A {private void startCapturing(final PcapNetworkInterfaceWrapper pcapNetworkInterface) {if (packetCapturingServices.containsKey(pcapNetworkInterface)) {return;}PacketCapturingService packetCapturingService =new PacketCapturingService(pcapNetworkInterface);packetCapturingServices.put(pcapNetworkInterface, packetCapturingService);final String interfaceName = pcapNetworkInterface.getName();final boolean capturingStarted =packetCapturingService.startCapturing(new PacketCapturingHandler() {@Overridepublic void packetCaptured(MacAddress macAddress) {String macAdressString = macAddress.toString();if (isAmazonVendor(macAdressString)) {ThingUID dashButtonThing =new ThingUID(DASH_BUTTON_THING_TYPE, macAdressString.replace("":"", ""-""));DiscoveryResult discoveryResult =DiscoveryResultBuilder.create(dashButtonThing).withLabel(""Dash Button"").withRepresentationProperty(Thing.PROPERTY_MAC_ADDRESS).withProperty(Thing.PROPERTY_MAC_ADDRESS, macAdressString).withProperty(PROPERTY_NETWORK_INTERFACE_NAME, interfaceName).withProperty(PROPERTY_PACKET_INTERVAL, BigDecimal.valueOf(5000)).build();thingDiscovered(discoveryResult);} else {}}});if (capturingStarted) {}}}"	3
4170	"public class A {public String generateCSR(String fileName) throws IOException {if (Security.getProvider(BouncyCastleProvider.PROVIDER_NAME) == null) {Security.addProvider(new BouncyCastleProvider());}KeyPair pair = getKeyPair(fileName);boolean result = false;if (pair != null) {String url = appConfiguration.getIdpUrl().replaceFirst("".*//"", """");String csrPrincipal = String.format(""CN=%s"", url);X500Principal principal = new X500Principal(csrPrincipal);PKCS10CertificationRequest csr = null;try {csr =new PKCS10CertificationRequest(""SHA1withRSA"", principal, pair.getPublic(), null, pair.getPrivate());} catch (GeneralSecurityException e) {return OxTrustConstants.RESULT_FAILURE;}StringBuilder response = new StringBuilder();response.append(BEGIN_CERT_REQ + ""\n"");response.append(WordUtils.wrap(new String(Base64.encode(csr.getEncoded(ASN1Encoding.DER))), 64, ""\n"", true)+ ""\n"");response.append(END_CERT_REQ + ""\n"");FacesContext facesContext = FacesContext.getCurrentInstance();result =ResponseHelper.downloadFile(""csr.pem"",OxTrustConstants.CONTENT_TYPE_TEXT_PLAIN,response.toString().getBytes(),facesContext);}return result ? OxTrustConstants.RESULT_SUCCESS : OxTrustConstants.RESULT_FAILURE;}}"	1
4171	public class A {@Overridepublic CommerceInventoryAuditType getCommerceInventoryAuditType(String key) {ServiceWrapper<CommerceInventoryAuditType> commerceChannelTypeServiceWrapper =_serviceTrackerMap.getService(key);if (commerceChannelTypeServiceWrapper == null) {if (_log.isDebugEnabled()) {}return null;}return commerceChannelTypeServiceWrapper.getService();}}	1
4172	"public class A {public OSMRole getOSMRoleOf(OSHDBRole role) {if (this.roleToString.containsKey(role)) {return this.roleToString.get(role);}OSMRole roleString;try {synchronized (roleTxtQuery) {roleTxtQuery.setInt(1, role.toInt());try (ResultSet roles = roleTxtQuery.executeQuery()) {if (!roles.next()) {throw new OSHDBTagOrRoleNotFoundException(String.format(""Unable to find role id %d in keytables."", role.toInt()));} else {roleString = new OSMRole(roles.getString(""TXT""));}}}} catch (SQLException ex) {throw new RuntimeException(UNABLE_TO_ACCESS_KEYTABLES);}this.roleToInt.put(roleString, role);this.roleToString.put(role, roleString);return roleString;}}"	1
4173	public class A {public static int searchCommercePriceEntriesCount(long companyId, long commercePriceListId, String keywords) throws RemoteException {try {int returnValue =CommercePriceEntryServiceUtil.searchCommercePriceEntriesCount(companyId, commercePriceListId, keywords);return returnValue;} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4174	public class A {@Overridepublic void process(DistributionMessage msg) {if (logger.isDebugEnabled()) {}if (msg instanceof ShutdownAllResponse) {if (((ShutdownAllResponse) msg).isToShutDown()) {synchronized (results) {this.results.add(msg.getSender());}} else {removeMember(msg.getSender(), false);}if (msg.getSender().equals(this.dmgr.getDistributionManagerId())) {removeMember(msg.getSender(), false);}}if (msg instanceof ReplyMessage) {ReplyException ex = ((ReplyMessage) msg).getException();if (ex != null) {processException(msg, ex);}}checkIfDone();}}	2
4175	"public class A {@Testpublic void testFillWalAndReadRecords() throws Exception {setWalAndArchiveToSameVal = false;Ignite ignite0 = startGrid();ignite0.cluster().active(true);Serializable consistentId = (Serializable) ignite0.cluster().localNode().consistentId();String subfolderName = genNewStyleSubfolderName(0, (UUID) consistentId);int cacheObjectsToWrite = 10_000;putDummyRecords(ignite0, cacheObjectsToWrite);stopGrid();String workDir = U.defaultWorkDirectory();File db = U.resolveWorkDirectory(workDir, DFLT_STORE_DIR, false);IgniteWalIteratorFactory factory = new IgniteWalIteratorFactory(log);IteratorParametersBuilder params =createIteratorParametersBuilder(workDir, subfolderName).filesOrDirs(db);int cntArchiveDir = iterateAndCount(factory.iterator(params));assertTrue(cntArchiveDir > 0);int[] checkKeyIterArr = new int[cacheObjectsToWrite];fill(checkKeyIterArr, 0);iterateAndCountDataRecord(factory.iterator(params), (o1, o2) -> checkKeyIterArr[(Integer) o1]++, null);for (int i = 0; i < cacheObjectsToWrite; i++)assertTrue(""Iterator didn't find key="" + i, checkKeyIterArr[i] > 0);}}"	1
4176	public class A {private Key generateMasterKey() throws NoSuchAlgorithmException {if (logger.isDebugEnabled()) {}KeyGenerator kg = KeyGenerator.getInstance(MK_CIPHER);kg.init(MK_KeySize);return kg.generateKey();}}	1
4177	"public class A {void persistSnpCheck(@NotNull final ListMultimap<Chromosome, BaseDepth> baseDepths) {if (baseDepths.size() > 0) {final String outputVcf =mConfig.OutputDir + File.separator + mConfig.primaryReference() + "".amber.snp.vcf.gz"";new AmberVCF(mConfig).writeSNPCheck(outputVcf, Lists.newArrayList(baseDepths.values()));}}}"	1
4178	public class A {public void handleSetPushSetupAlarmResponse(final DeviceMessageMetadata deviceMessageMetadata,final ResponseMessageResultType deviceResult,final OsgpException exception) {ResponseMessageResultType result = deviceResult;if (exception != null) {result = ResponseMessageResultType.NOT_OK;}final ResponseMessage responseMessage =ResponseMessage.newResponseMessageBuilder().withCorrelationUid(deviceMessageMetadata.getCorrelationUid()).withOrganisationIdentification(deviceMessageMetadata.getOrganisationIdentification()).withDeviceIdentification(deviceMessageMetadata.getDeviceIdentification()).withResult(result).withOsgpException(exception).withMessagePriority(deviceMessageMetadata.getMessagePriority()).build();this.webServiceResponseMessageSender.send(responseMessage, deviceMessageMetadata.getMessageType());}}	2
4179	"public class A {@Testpublic void java_util_logger_batching() {java.util.logging.Logger LOGGER = java.util.logging.Logger.getLogger(""splunk.java.util"");readConf(""handlers=com.splunk.logging.HttpEventCollectorLoggingHandler\n""+ ""com.splunk.logging.HttpEventCollectorLoggingHandler.url=http://localhost:8088\n""+ ""com.splunk.logging.HttpEventCollectorLoggingHandler.token=TOKEN\n""+ ""com.splunk.logging.HttpEventCollectorLoggingHandler.middleware=HttpEventCollectorUnitTestMiddleware\n""+ ""com.splunk.logging.HttpEventCollectorLoggingHandler.batch_size_count=3\n"");HttpEventCollectorUnitTestMiddleware.eventsReceived = 0;HttpEventCollectorUnitTestMiddleware.io =new HttpEventCollectorUnitTestMiddleware.IO() {@Overridepublic void input(List<HttpEventCollectorEventInfo> events) {Assert.assertTrue(events.size() == 3);Assert.assertTrue(events.get(0).getMessage().compareTo(""one"") == 0);Assert.assertTrue(events.get(1).getMessage().compareTo(""two"") == 0);Assert.assertTrue(events.get(2).getMessage().compareTo(""three"") == 0);}};Assert.assertTrue(HttpEventCollectorUnitTestMiddleware.eventsReceived == 3);}}"	3
4180	"public class A {@RequestMapping(value = ""/followup/mark"",method = RequestMethod.POST,consumes = MediaType.APPLICATION_JSON_VALUE)@ResponseStatus(HttpStatus.NO_CONTENT)public @ResponseBody void markDataValues(@RequestBody UpdateFollowUpForDataValuesRequest params) {List<DataValue> dataValues = new ArrayList<>();for (FollowupParams followup : params.getFollowups()) {DataElement dataElement = dataElementService.getDataElement(followup.getDataElementId());Period period = periodService.getPeriod(followup.getPeriodId());OrganisationUnit source =organisationUnitService.getOrganisationUnit(followup.getOrganisationUnitId());CategoryOptionCombo categoryOptionCombo =categoryService.getCategoryOptionCombo(followup.getCategoryOptionComboId());CategoryOptionCombo attributeOptionCombo =categoryService.getCategoryOptionCombo(followup.getAttributeOptionComboId());DataValue dataValue =dataValueService.getDataValue(dataElement, period, source, categoryOptionCombo, attributeOptionCombo);if (dataValue != null) {dataValue.setFollowup(followup.isFollowup());dataValues.add(dataValue);}}if (dataValues.size() > 0) {dataValueService.updateDataValues(dataValues);}}}"	1
4181	public class A {public void createTable(HTableDescriptor tableDesc, byte[][] splitKeys) throws IOException {hbaseAdmin.createTable(tableDesc, splitKeys);}}	1
4182	"public class A {@Overridepublic boolean onCycleResult(long completedCycle, int result) {if (filter != null && !filter.test(new ResultReadableWrapper(result))) {return true;}sb.get().setLength(0);sb.get().append(""activity="").append(def.getAlias()).append("",cycle="").append(completedCycle).append("",result="").append((byte) (result & 127));return true;}}"	1
4183	"public class A {public void delete(String username) {byte[] data = zkClient.readData(""/config/users/"" + username, true);if (data != null) {JsonObject deletedJson = removeScramCredentialsFromUserJson(data);if (configJsonIsEmpty(deletedJson)) {zkClient.deleteRecursive(""/config/users/"" + username);} else {zkClient.writeData(""/config/users/"" + username, deletedJson.toBuffer().getBytes());}notifyChanges(username);} else {}}}"	2
4184	public class A {@Overridepublic void writeLock() throws IOException {initWriteChannel();writeFileLock = writeChannel.lock(0, Long.MAX_VALUE, false);}}	2
4185	public class A {@Overrideprotected void encode(final ChannelHandlerContext ctx, final EncodedRequest msg, final ByteBuf out) {out.writeBytes(msg.getEncoded());}}	1
4186	public class A {@Overridepublic BackgroundTaskResult call() throws Exception {try {keyManager.getExpiredOpenKeys(0);} catch (IOException e) {}return BackgroundTaskResult.EmptyTaskResult.newResult();}}	1
4187	public class A {protected void checkSelectorFetchSize(Selector selector) {if (selector == null) {return;}int maxRecordsToFetch = selector.getMaxRecordsToFetch();if (maxRecordsToFetch > _maxRecordsPerRowFetchRequest) {selector.setMaxRecordsToFetch(_maxRecordsPerRowFetchRequest);}}}	1
4188	public class A {private CompletableFuture<DeviceMessageStatus> simulateReboot(final Device device) {final String deviceUid = device.getDeviceUid();this.startRebooting(deviceUid);return CompletableFuture.supplyAsync(() -> {DeviceMessageStatus result = DeviceMessageStatus.FAILURE;try {result =Executors.newSingleThreadScheduledExecutor().schedule(() -> this.performDeviceRegistration(device),this.deviceManagementService.getRebootDelay(),TimeUnit.SECONDS).get();} catch (final InterruptedException e) {Thread.currentThread().interrupt();} catch (final ExecutionException e) {}this.finishRebooting(deviceUid);return result;});}}	2
4189	public class A {public void destroy() throws Exception {shutdown(true);this.started = false;}}	1
4190	public class A {private static void closeSplitSources(StageExecutionPlan plan) {for (SplitSource source : plan.getSplitSources().values()) {try {source.close();} catch (Throwable t) {}}for (StageExecutionPlan stage : plan.getSubStages()) {closeSplitSources(stage);}}}	1
4191	public class A {@Overridepublic void doAction() {String clusterName = getHolder().clusterName();List<MigrationShard> failedShards =getHolder().getMigrationShards().stream().filter(shard ->!shard.getShardMigrationResult().stepSuccess(ShardMigrationStep.MIGRATE_NEW_PRIMARY_DC)).collect(Collectors.toList());if (failedShards.isEmpty()) {refresh();} else {failedShards.forEach(shard ->shard.getShardMigrationResult().stepRetry(ShardMigrationStep.MIGRATE_NEW_PRIMARY_DC));failedShards.forEach(shard -> {String shardName = shard.shardName();executors.execute(new AbstractExceptionLogTask() {@Overridepublic void doRun() {shard.doMigrate();}});});}}}	4
4192	"public class A {@Testpublic void testNumWithoutQuotesAndNot() throws Exception {for (TestCities city : TestCities.values()) {String query =CityField.NUM.name()+ EQ_OP+ ""110""+ AND_OP+ ""not (""+ CityField.CITY.name()+ EQ_OP+ ""'""+ city.name()+ ""')"";runTest(query, query);}}}"	1
4193	public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;getGroups_result result = new getGroups_result();if (einstanceoforg.apache.airavata.service.profile.groupmanager.cpi.exception.GroupManagerServiceException) {result.gse =(org.apache.airavata.service.profile.groupmanager.cpi.exception.GroupManagerServiceException)e;result.setGseIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AuthorizationException) {result.ae = (org.apache.airavata.model.error.AuthorizationException) e;result.setAeIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}}	4
4194	"public class A {private boolean readFile(FileSystem fs) throws IOException, AlluxioException {boolean pass = true;for (int i = 0; i < mNumFiles; i++) {AlluxioURI filePath = new AlluxioURI(mFileFolder + ""/part-"" + i);FileInStream is = fs.openFile(filePath);URIStatus status = fs.getStatus(filePath);ByteBuffer buf = ByteBuffer.allocate((int) status.getBlockSizeBytes());is.read(buf.array());buf.order(ByteOrder.nativeOrder());for (int k = 0; k < mNumFiles; k++) {pass = pass && (buf.getInt() == k);}is.close();}return pass;}}"	1
4195	"public class A {public static void main(String[] args) throws IOException, InterruptedException {LoggingFactory.init(Level.INFO);Status test = new Status(""i am pessimistic"");String json = CodecUtils.toJson(test);Status z = CodecUtils.fromJson(json, Status.class);}}"	2
4196	"public class A {private void handleModeCommand(DatagramSocket socket, Command command) throws GreeException {int mode = -1;String modeStr = """";boolean isNumber = false;if (command instanceof DecimalType) {mode = ((DecimalType) command).intValue();} else if (command instanceof OnOffType) {device.setDevicePower(socket, getOnOff(command));} else {modeStr = command.toString().toLowerCase();switch (modeStr) {case MODE_AUTO:mode = GREE_MODE_AUTO;break;case MODE_COOL:mode = GREE_MODE_COOL;break;case MODE_HEAT:mode = GREE_MODE_HEAT;break;case MODE_DRY:mode = GREE_MODE_DRY;break;case MODE_FAN:case MODE_FAN2:mode = GREE_MODE_FAN;break;case MODE_ECO:mode = GREE_MODE_COOL;break;case MODE_ON:case MODE_OFF:device.setDevicePower(socket, modeStr.equals(MODE_ON) ? 1 : 0);return;default:mode = Integer.parseInt(modeStr);isNumber = true;break;}}if (mode == -1) {throw new IllegalArgumentException(""Invalid Mode selection"");}if (!isNumber && (device.getIntStatusVal(GREE_PROP_POWER) == 0)) {device.setDevicePower(socket, 1);}device.setDeviceMode(socket, mode);switch (modeStr) {case MODE_ECO:device.setDevicePwrSaving(socket, 1);break;}}}"	6
4197	public class A {private List<ArtifactStore> maybeFilter(String groupName, List<ArtifactStore> delegateResult) {Logger logger = LoggerFactory.getLogger(getClass());if (delegateResult == null || delegateResult.isEmpty() || config.isEnabledForGroup(groupName)) {return delegateResult;}List<ArtifactStore> result = new ArrayList<>();delegateResult.stream().filter((store) -> !IMPLIED_REPO_ORIGIN.equals(store.getMetadata(METADATA_ORIGIN))).forEach((store) -> result.add(store));return result;}}	2
4198	public class A {private boolean saveUsers(File file) {User[] ua = new User[] {};ua = getUsers().values().toArray(ua);FreedomXStream.toXML(ua, file);return true;}}	1
4199	"public class A {@Deprecatedprivate boolean loadEnvironmentsFromDir(File folder, boolean makeUnique)throws RepositoryException {if (folder == null) {throw new RepositoryException(""Cannot load environments from a null folder"");}environments.clear();FileFilter envFileFilter =new FileFilter() {@Overridepublic boolean accept(File file) {return file.isFile() && file.getName().endsWith(ENVIRONMENT_FILE_EXTENSION);}};File[] files = folder.listFiles(envFileFilter);for (File file : files) {try {EnvironmentLogic envLogic = loadEnvironmentFromFile(file);if (envLogic != null) {add(envLogic, false);}} catch (RepositoryException re) {}}thingsRepository.loadAll(EnvironmentRepositoryImpl.getEnvironments().get(0).getObjectFolder());return true;}}"	1
4200	"public class A {private String getImageFromPost(String url) {sleep(1000);Document d = null;try {d = Http.url(url).cookies(cookies).get();Elements links = d.getElementsByTag(""a"");for (Element link : links) {if (link.text().equals(""Download"")) {return ""https:"" + link.attr(""href"");}}} catch (IOException e) {return null;}return null;}}"	1
4201	"public class A {public static int getCPDefinitionSpecificationOptionValuesCount(HttpPrincipal httpPrincipal, long cpDefinitionId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CPDefinitionSpecificationOptionValueServiceUtil.class,""getCPDefinitionSpecificationOptionValuesCount"",_getCPDefinitionSpecificationOptionValuesCountParameterTypes7);MethodHandler methodHandler = new MethodHandler(methodKey, cpDefinitionId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Integer) returnObj).intValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4202	public class A {@VisibleForTestingpublic void doTransitionToWritableMode() {if (shuttingdown || forceReadOnly.get()) {return;}if (!bookieStatus.setToWritableMode()) {return;}if (conf.isPersistBookieStatusEnabled()) {bookieStatus.writeToDirectories(statusDirs);}if (isRegistrationManagerDisabled()) {return;}try {doRegisterBookie(false);} catch (IOException e) {transitionToReadOnlyMode();return;}try {rm.get().unregisterBookie(bookieId, true);} catch (BookieException e) {return;}}}	3
4203	"public class A {@Overrideprotected void preClose() {if (!isEofSent()) {}try {signalChannelClosed(null);} finally {this.channelListeners.clear();}IOException err = IoUtils.closeQuietly(getLocalWindow(), getRemoteWindow());if (err != null) {debug(""Failed ({}) to pre-close window(s) of {}: {}"",err.getClass().getSimpleName(),this,err.getMessage(),err);}super.preClose();}}"	1
4204	public class A {private void hideClosedCaptioning() {try {TextView subTitlesTv = (TextView) getActivity().findViewById(R.id.txtSubtitles_tv);if (subTitlesTv != null) {subTitlesTv.setVisibility(View.GONE);}} catch (Exception e) {}}}	1
4205	"public class A {String storeFile(String artifactPath, InputStream uploadedFileInputStream, HttpServletRequest request)throws ModelDBException {TrialUtils.validateArtifactSizeForTrial(config.trial, artifactPath, request.getContentLength());try {String cleanArtifactPath = StringUtils.cleanPath(Objects.requireNonNull(artifactPath));String[] folders = cleanArtifactPath.split(""/"");StringBuilder folderPath = new StringBuilder();for (int i = 0; i < folders.length - 1; i++) {folderPath.append(folders[i]);folderPath.append(File.separator);}File foldersExists =new File(this.fileStorageLocation + File.separator + folderPath.toString());if (!foldersExists.exists()) {boolean folderCreatingStatus = foldersExists.mkdirs();}File destinationFile =new File(this.fileStorageLocation + File.separator + cleanArtifactPath);if (!destinationFile.exists()) {boolean destFileCreatingStatus = destinationFile.createNewFile();}FileOutputStream fileOutputStream = new FileOutputStream(destinationFile);IOUtils.copy(uploadedFileInputStream, fileOutputStream);fileOutputStream.close();uploadedFileInputStream.close();return destinationFile.getName();} catch (IOException ex) {String errorMessage = ""Could not store file. Please try again!"";throw new ModelDBException(errorMessage, ex);}}}"	9
4206	"public class A {public String view() {try {if (!isKieServerConfigurationValid()) {return SUCCESS;}String frontEndCaseDataIn = extractWidgetConfig(""frontEndCaseData"");this.setFrontEndCaseData(frontEndCaseDataIn);String channelIn = extractWidgetConfig(""channel"");this.setChannel(channelIn);KieBpmConfig config =formManager.getKieServerConfigurations().get(this.getKnowledgeSourceId());this.setRoles(caseManager.getCaseRoles(config, this.getContainerid(), this.getCasePath()).toString());} catch (ApsSystemException t) {return FAILURE;}return SUCCESS;}}"	1
4207	public class A {public ResultCode Log(List<LogEntry> list) throws TException {if (list != null) {sourceCounter.addToEventReceivedCount(list.size());try {List<Event> events = new ArrayList<Event>(list.size());for (LogEntry entry : list) {Map<String, String> headers = new HashMap<String, String>(1, 1);String category = entry.getCategory();if (category != null) {headers.put(SCRIBE_CATEGORY, category);}Event event = EventBuilder.withBody(entry.getMessage().getBytes(), headers);events.add(event);}if (events.size() > 0) {getChannelProcessor().processEventBatch(events);}sourceCounter.addToEventAcceptedCount(list.size());return ResultCode.OK;} catch (Exception e) {sourceCounter.incrementEventReadOrChannelFail(e);}}return ResultCode.TRY_LATER;}}	1
4208	public class A {@Override@Transactionalpublic synchronized void addOrUpdate(final Channel channel) {Set<TaskError> errors = ChannelValidator.validate(channel);if (!isEmpty(errors)) {throw new ValidationException(ChannelValidator.CHANNEL, TaskError.toDtos(errors));}ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();try {Thread.currentThread().setContextClassLoader(channel.getClass().getClassLoader());final Channel existingChannel = getChannel(channel.getModuleName());if (existingChannel != null && !existingChannel.equals(channel)) {existingChannel.setActionTaskEvents(channel.getActionTaskEvents());existingChannel.setTriggerTaskEvents(channel.getTriggerTaskEvents());existingChannel.setDescription(channel.getDescription());existingChannel.setDisplayName(channel.getDisplayName());existingChannel.setModuleName(channel.getModuleName());existingChannel.setModuleVersion(channel.getModuleVersion());channelsDataService.update(existingChannel);sendChannelUpdatedEvent(channel);} else if (existingChannel == null) {channelsDataService.create(channel);}} finally {Thread.currentThread().setContextClassLoader(contextClassLoader);}}}	3
4209	"public class A {public static GceContext validateCredentials(Credentials credentials)throws InvalidCredentialsException {try {GceContext context = new GceContext(credentials);GoogleComputeEngineApi gceApi = context.getGceApi();String projectName = gceApi.project().get().name();context.setProjectName(projectName);return context;} catch (AuthorizationException e) {throw new InvalidCredentialsException(""accountid:"" + credentials.identity, e);}}}"	1
4210	"public class A {@Test(enabled = true && !DEBUG,dataProvider = ""NanoSchedulerBasicTest"",timeOut = NANO_SCHEDULE_MAX_RUNTIME,dependsOnMethods = ""testSingleThreadedNanoScheduler"")public void testMultiThreadedNanoScheduler(final NanoSchedulerBasicTest test)throws InterruptedException {if (test.nThreads >= 1) testNanoScheduler(test);}}"	1
4211	"public class A {public static void downloadAndUpdate(final JobMonitor monitor, final File install_location)throws Exception {monitor.beginTask(""Update"", 100);if (update_url.startsWith(""file:""))update(monitor, install_location, new File(update_url.substring(5)));else {final URL distribution_url = new URL(update_url);monitor.updateTaskName(""Download "" + update_url);final File distribution_zip = download(monitor, distribution_url);try {update(monitor, install_location, distribution_zip);} finally {distribution_zip.delete();}}}}"	2
4212	public class A {@Overridepublic List<String> getAll(BatchRunContext batchRunContext) {SystemAccount actor = getSystemAccount();List<String> allShares = service.findAllExpiredEntries(actor, actor);return allShares;}}	2
4213	"public class A {public static String getRuntimePropertiesFileNameInTestMode() {String filename = null;if (isTestMode()) {filename = getOpenMRSVersionInTestMode() + ""-test-runtime.properties"";}return filename;}}"	1
4214	"public class A {public void writeEvaluationResultOfEachQuery(String resultEvalFilename) {int[] queryids = queryNumbers.toArray();Arrays.sort(queryids);try {final PrintWriter out = new PrintWriter(Files.writeFileWriter(resultEvalFilename));final StringBuilder sb = new StringBuilder();for (int i = 0; i < this.queryNumbers.size(); i++) {sb.append(queryids[i]+ "" ""+ Rounding.toString(recipRank.get(queryids[i]), 4)+ ApplicationSetup.EOL);}out.print(sb.toString());out.close();} catch (IOException fnfe) {}}}"	1
4215	"public class A {private <ReqT, RespT> boolean authenticateCall(ServerCall<ReqT, RespT> call, Metadata headers) {if (call.isCancelled()) {return false;}UUID channelId = headers.get(ChannelIdInjector.S_CLIENT_ID_KEY);boolean callAuthenticated = false;if (channelId != null) {try {AuthenticatedUserInfo userInfo = mAuthenticationServer.getUserInfoForChannel(channelId);if (userInfo != null) {AuthenticatedClientUser.set(userInfo.getAuthorizedUserName());AuthenticatedClientUser.setConnectionUser(userInfo.getConnectionUserName());AuthenticatedClientUser.setAuthMethod(userInfo.getAuthMethod());} else {AuthenticatedClientUser.remove();}callAuthenticated = true;} catch (UnauthenticatedException e) {String message =String.format(""Channel: %s is not authenticated for call: %s"",channelId.toString(), call.getMethodDescriptor().getFullMethodName());closeQuietly(call, Status.UNAUTHENTICATED.withDescription(message), headers);}} else {String message =String.format(""Channel Id is missing for call: %s."",call.getMethodDescriptor().getFullMethodName());closeQuietly(call, Status.UNAUTHENTICATED.withDescription(message), headers);}return callAuthenticated;}}"	2
4216	"public class A {@Overridepublic DumpPropsToLogResponseType dumpPropsToLog(DumpPropsToLogRequestType dumpPropsToLogRequest) {DumpPropsToLogResponseType oOutput = null;try {oOutput = PropertyAccessHelper.dumpPropsToLog(dumpPropsToLogRequest);} catch (Exception e) {String sMessage = ""Failed to dump property file to log.  Exception: "" + e.getMessage();}return oOutput;}}"	1
4217	public class A {public void close() {for (FilterHolder filterHolder : _filtersRepository.values()) {try {filterHolder.getFilter().close();} catch (RuntimeException ex) {if (_logger.isErrorEnabled()) {}}}}}	1
4218	"public class A {private JavaClass _getExtendedJavaClass(String absolutePath, String content) {Matcher matcher = _extendedClassPattern.matcher(content);if (!matcher.find()) {return null;}String extendedClassName = matcher.group(1);Pattern pattern = Pattern.compile(""\nimport (.*\\."" + extendedClassName + "");"");matcher = pattern.matcher(content);if (matcher.find()) {extendedClassName = matcher.group(1);if (!extendedClassName.startsWith(""com.liferay."")) {return null;}}if (!extendedClassName.contains(StringPool.PERIOD)) {extendedClassName =JavaSourceUtil.getPackageName(content) + StringPool.PERIOD + extendedClassName;}int pos = absolutePath.lastIndexOf(""/com/liferay/"");String extendedClassFileName =absolutePath.substring(0, pos + 1)+ StringUtil.replace(extendedClassName, '.', '/')+ "".java"";try {return JavaClassParser.parseJavaClass(extendedClassFileName, FileUtil.read(new File(extendedClassFileName)));} catch (Exception exception) {if (_log.isDebugEnabled()) {}return null;}}}"	1
4219	public class A {private void registerShutdownHook(AbstractLightyModule application) {Runtime.getRuntime().addShutdownHook(new Thread(() -> {try {application.shutdown().get();} catch (ExecutionException e) {} catch (InterruptedException e) {Thread.currentThread().interrupt();}}));}}	4
4220	"public class A {public static java.util.List<com.liferay.dynamic.data.mapping.model.DDMFormInstance>getFormInstances(HttpPrincipal httpPrincipal, long companyId, long groupId, int start, int end) {try {MethodKey methodKey =new MethodKey(DDMFormInstanceServiceUtil.class,""getFormInstances"",_getFormInstancesParameterTypes6);MethodHandler methodHandler = new MethodHandler(methodKey, companyId, groupId, start, end);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<com.liferay.dynamic.data.mapping.model.DDMFormInstance>) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4221	"public class A {@Testpublic void testWithStringBundle() throws Exception {Bundle transactionBundle = createTransactionBundle();String stringBundle = fhirContext.newJsonParser().encodeResourceToString(transactionBundle);final String result = requestBody(""direct://WITH_STRING_BUNDLE"", stringBundle);assertNotNull(result, ""withBundle result"");assertTrue(result.contains(""Bundle""));}}"	1
4222	"public class A {public ArrayList<URITemplate> getAllURITemplates(String context, String apiVersion)throws APISecurityException {try {return apiKeyValidationService.getAllURITemplates(context, apiVersion);} catch (APIManagementException e) {throw new APISecurityException(APISecurityConstants.API_AUTH_GENERAL_ERROR,""Error while retrieving data from datastore"",e);}}}"	1
4223	public class A {private void checkAnnotators() {synchronized (observedRequests) {long waitingTime;long currentTime = System.currentTimeMillis();ObservedHttpRequest observedRequest;Iterator<Entry<ObservedHttpRequest, Long>> iterator = observedRequests.entrySet().iterator();while (iterator.hasNext()) {Entry<ObservedHttpRequest, Long> entry = iterator.next();waitingTime = currentTime - entry.getValue();if (waitingTime > maxWaitingTime) {observedRequest = entry.getKey();if (observedRequest.request.isAborted()) {iterator.remove();} else {try {observedRequest.emitter.interrupt(observedRequest.request);} catch (UnsupportedOperationException ex) {}}}}}}}	3
4224	public class A {public Collection<File> getWalFilesFromArchive(WALPointer low, WALPointer high)throws IgniteCheckedException {segmentAware.awaitSegmentArchived(high.index() - 1);List<File> res = new ArrayList<>();for (long i = low.index(); i < high.index(); i++) {String segmentName = fileName(i);File file = new File(walArchiveDir, segmentName);File fileZip = new File(walArchiveDir, segmentName + ZIP_SUFFIX);if (file.exists()) res.add(file);else if (fileZip.exists()) res.add(fileZip);else {if (log.isInfoEnabled())res.clear();break;}}return res;}}	1
4225	"public class A {@Overridepublic CompletableFuture<PlcReadResponse> read(PlcReadRequest readRequest) {return CompletableFuture.supplyAsync(() -> {Validate.notNull(device, ""No device is set in the mock connection!"");Map<String, ResponseItem<PlcValue>> response =readRequest.getFieldNames().stream().collect(Collectors.toMap(Function.identity(),name ->device.read(((MockField) readRequest.getField(name)).getAddress())));return new DefaultPlcReadResponse((DefaultPlcReadRequest) readRequest, response);});}}"	1
4226	public class A {public static void main(String[] args) {if (args.length < 2) {return;}String zkAddress = args[0];String yamlFile = args[1];InputStream input;try {input = new FileInputStream(new File(yamlFile));} catch (FileNotFoundException e) {return;}new YAMLClusterSetup(zkAddress).setupCluster(input);}}	2
4227	public class A {@Overridepublic void stsSecretKeyNotEncrypted() {}}	1
4228	public class A {@Overridepublic void heartbeat() {MetaCommand command = null;try {if (mMasterId.get() == UNINITIALIZED_MASTER_ID) {setIdAndRegister();}command = mMasterClient.heartbeat(mMasterId.get());handleCommand(command);} catch (IOException e) {if (command == null) {} else {}mMasterClient.disconnect();}}}	2
4229	"public class A {@Overrideprotected Result check() {List<String> inactive = new ArrayList<>();for (Bundle bundle : context.getBundles()) {if (bundle.getState() != Bundle.ACTIVE) {inactive.add(bundle.getSymbolicName());}}if (inactive.isEmpty()) {return Result.healthy(""All bundles active"");} else {return Result.unhealthy(""Inactive bundles: "" + inactive);}}}"	1
4230	"public class A {public void logLine() {if (buf.size() > 0) {try {if (isLineLengthExceeded()) {buf.write(WRAP);}String line = buf.toString(StandardCharsets.UTF_8.name());buf.reset();} catch (IOException e) {throw new IllegalStateException(""Can not log output stream"", e);}}}}"	1
4231	"public class A {private void checkUnregisterServiceParameters(final String serviceDefinition,final String providerName,final String providerAddress,final int providerPort) {final String origin =CommonConstants.SERVICE_REGISTRY_URI + CommonConstants.OP_SERVICE_REGISTRY_UNREGISTER_URI;if (Utilities.isEmpty(serviceDefinition)) {throw new BadPayloadException(""Service definition is blank"", HttpStatus.SC_BAD_REQUEST, origin);}if (Utilities.isEmpty(providerName)) {throw new BadPayloadException(""Name of the provider system is blank"", HttpStatus.SC_BAD_REQUEST, origin);}if (Utilities.isEmpty(providerAddress)) {throw new BadPayloadException(""Address of the provider system is blank"", HttpStatus.SC_BAD_REQUEST, origin);}if (providerPort < CommonConstants.SYSTEM_PORT_RANGE_MIN|| providerPort > CommonConstants.SYSTEM_PORT_RANGE_MAX) {throw new BadPayloadException(""Port must be between ""+ CommonConstants.SYSTEM_PORT_RANGE_MIN+ "" and ""+ CommonConstants.SYSTEM_PORT_RANGE_MAX+ ""."",HttpStatus.SC_BAD_REQUEST,origin);}}}"	1
4232	"public class A {@Overridepublic synchronized boolean connect(RemoteFileConfiguration configuration, Exchange exchange)throws GenericFileOperationFailedException {if (isConnected()) {return true;}boolean connected = false;int attempt = 0;while (!connected) {try {if (LOG.isTraceEnabled() && attempt > 0) {}if (channel == null || !channel.isConnected()) {if (session == null || !session.isConnected()) {session = createSession(configuration);if (endpoint.getConfiguration().getConnectTimeout() > 0) {session.connect(endpoint.getConfiguration().getConnectTimeout());} else {session.connect();}}channel = (ChannelSftp) session.openChannel(""sftp"");if (endpoint.getConfiguration().getConnectTimeout() > 0) {channel.connect(endpoint.getConfiguration().getConnectTimeout());} else {channel.connect();}}connected = true;} catch (Exception e) {if (Thread.currentThread().isInterrupted()) {throw new GenericFileOperationFailedException(""Interrupted during connecting"",new InterruptedException(""Interrupted during connecting""));}GenericFileOperationFailedException failed =new GenericFileOperationFailedException(""Cannot connect to "" + configuration.remoteServerInformation(), e);attempt++;if (attempt > endpoint.getMaximumReconnectAttempts()) {throw failed;}if (endpoint.getReconnectDelay() > 0) {try {Thread.sleep(endpoint.getReconnectDelay());} catch (InterruptedException ie) {Thread.currentThread().interrupt();throw new GenericFileOperationFailedException(""Interrupted during sleeping"", ie);}}}}configureBulkRequests();return true;}}"	9
4233	"public class A {public static void main(String[] args) throws Exception {Logging.initialize();DistributedQueryRunner queryRunner =createAccumuloQueryRunner(ImmutableMap.of(""http-server.http.port"", ""8080""));Thread.sleep(10);Logger log = Logger.get(AccumuloQueryRunner.class);}}"	2
4234	"public class A {static void assertAtLeastNCommits(int minExpected, String tablePath, FileSystem fs) {HoodieTableMetaClient meta =HoodieTableMetaClient.builder().setConf(fs.getConf()).setBasePath(tablePath).build();HoodieTimeline timeline = meta.getActiveTimeline().filterCompletedInstants();int numDeltaCommits = (int) timeline.getInstants().count();assertTrue(minExpected <= numDeltaCommits, ""Got="" + numDeltaCommits + "", exp >="" + minExpected);}}"	1
4235	public class A {@Overridepublic void handleCommand(ChannelUID channelUID, Command command) {if (!(command instanceof RefreshType)) {Channel channel = getSpecificChannel(channelUID.getIdWithoutGroup());if (channel != null) {ChannelTypeUID typeUID = channel.getChannelTypeUID();if (typeUID != null&& typeUID.getId() != null&& typeUID.getId().startsWith(NibeUplinkBindingConstants.RW_CHANNEL_PREFIX)) {webInterface.enqueueCommand(new UpdateSetting(this, channel, command));}}}}}	1
4236	"public class A {public static void registerClientConfigProperty(SentinelProperty<ClusterClientConfig> property) {AssertUtil.notNull(property, ""property cannot be null"");synchronized (CONFIG_PROPERTY_LISTENER) {clientConfigProperty.removeListener(CONFIG_PROPERTY_LISTENER);property.addListener(CONFIG_PROPERTY_LISTENER);clientConfigProperty = property;}}}"	1
4237	"public class A {@Overridepublic AnnotationVisitor visitAnnotation(final String desc, final boolean visible) {if (isAnnotation(desc, RendererBean.class)) {if (_renderingFormatPredicate == null || _renderingFormatPredicate instanceof TruePredicate) {initializeClass();return null;}return new AnnotationVisitor(API_VERSION) {@Overridepublic void visit(final String name, final Object value) {final Type valueType = (Type) value;final String renderingFormatClassName = valueType.getClassName();final Class<? extends RenderingFormat<?>> renderingFormatClass;try {@SuppressWarnings(""unchecked"")final Class<? extends RenderingFormat<?>> cls =(Class<? extends RenderingFormat<?>>)Class.forName(renderingFormatClassName, false, _classLoader);renderingFormatClass = cls;} catch (final Exception e) {if (logger.isWarnEnabled()) {}return;}final Boolean proceed = _renderingFormatPredicate.test(renderingFormatClass);if (proceed == null || !proceed.booleanValue()) {return;}initializeClass();}};}if (isAnnotation(desc, Named.class)) {initializeClass();}return null;}}"	2
4238	"public class A {@GET@Path(""/session_status"")@Produces({MediaType.APPLICATION_JSON})public Response requestCheckSessionStatus(@Context HttpServletRequest httpRequest,@Context HttpServletResponse httpResponse,@Context SecurityContext securityContext)throws IOException {String sessionIdCookie = cookieService.getSessionIdFromCookie(httpRequest);CheckSessionResponse response = new CheckSessionResponse(""unknown"", """");SessionId sessionId = sessionIdService.getSessionId(sessionIdCookie);if (sessionId != null) {response.setState(sessionId.getState().getValue());response.setAuthTime(sessionId.getAuthenticationTime());String sessionCustomState =sessionId.getSessionAttributes().get(SessionIdService.SESSION_CUSTOM_STATE);if (StringHelper.isNotEmpty(sessionCustomState)) {response.setCustomState(sessionCustomState);}}String responseJson = ServerUtil.asJson(response);return Response.ok().type(MediaType.APPLICATION_JSON).entity(responseJson).build();}}"	2
4239	public class A {private List<MailAddress> getSenderAsList(Mail originalMail) {MaybeSender reversePath = originalMail.getMaybeSender();if (getInitParameters().isDebug()) {}return reversePath.asList();}}	1
4240	"public class A {private void handleCommit(RequestEvent event) throws Exception {long startTimestamp = event.getStartTimestamp();Iterable<Long> writeSet = event.writeSet();Collection<Long> tableIdSet = event.getTableIdSet();boolean isCommitRetry = event.isCommitRetry();Channel c = event.getChannel();boolean nonEmptyWriteSet = writeSet.iterator().hasNext();if (startTimestamp > lowWatermark&& !hasConflictsWithFences(startTimestamp, tableIdSet)&& !hasConflictsWithCommittedTransactions(startTimestamp, writeSet)) {long commitTimestamp = timestampOracle.next();Optional<Long> forwardNewWaterMark = Optional.absent();if (nonEmptyWriteSet) {long newLowWatermark = lowWatermark;for (long r : writeSet) {long removed = hashmap.putLatestWriteForCell(r, commitTimestamp);newLowWatermark = Math.max(removed, newLowWatermark);}if (newLowWatermark != lowWatermark) {lowWatermark = newLowWatermark;forwardNewWaterMark = Optional.of(lowWatermark);}}event.getMonCtx().timerStop(""request.processor.commit.latency"");forwardCommit(startTimestamp, commitTimestamp, c, event.getMonCtx(), forwardNewWaterMark);} else {event.getMonCtx().timerStop(""request.processor.commit.latency"");if (isCommitRetry) {forwardCommitRetry(startTimestamp, c, event.getMonCtx());} else {forwardAbort(startTimestamp, c, event.getMonCtx());}}}}"	1
4241	"public class A {private boolean handleNodeSubscription(Element elm, JID actorJID, JID subscribingJid)throws NodeStoreException, InterruptedException {boolean isLocalNode = false;try {isLocalNode = Configuration.getInstance().isLocalNode(node);} catch (IllegalArgumentException e) {createExtendedErrorReply(PacketError.Type.modify,PacketError.Condition.bad_request,INVALID_NODE_FORMAT,Buddycloud.NS_ERROR);outQueue.put(response);return false;}if (!isLocalNode && !node.equals(""/firehose"")) {makeRemoteRequest();return false;}JID jid = new JID(request.getChildElement().element(""subscribe"").attributeValue(""jid""));if (!subscribingJid.toBareJID().equals(jid.toBareJID())) {IQ reply = IQ.createResultIQ(request);reply.setType(Type.error);Element badRequest =new DOMElement(""bad-request"", new org.dom4j.Namespace("""", JabberPubsub.NS_XMPP_STANZAS));Element nodeIdRequired =new DOMElement(INVALID_JID, new org.dom4j.Namespace("""", JabberPubsub.NS_PUBSUB_ERROR));Element error = new DOMElement(""error"");error.addAttribute(""type"", PacketError.Type.modify.toXMPP());error.add(badRequest);error.add(nodeIdRequired);reply.setChildElement(error);outQueue.put(reply);return false;}if (!channelManager.nodeExists(node)) {IQ reply = IQ.createResultIQ(request);reply.setType(Type.error);PacketError pe =new PacketError(PacketError.Condition.item_not_found, PacketError.Type.cancel);reply.setError(pe);outQueue.put(reply);return false;}return true;}}"	1
4242	"public class A {@Testpublic void test02GetDataArraySelect() throws ServiceFailureException {String urlString =ServiceUrlHelper.buildURLString(serverSettings.getServiceUrl(version),EntityType.OBSERVATION,null,null,""?$count=true&$top=4&$resultFormat=dataArray&$select=result,phenomenonTime&$orderby=phenomenonTime%20desc"");HttpResponse responseMap = HTTPMethods.doGet(urlString);String message = ""Error getting Observations using Data Array: Code "" + responseMap.response;Assert.assertEquals(message, 200, responseMap.code);validateGetDataArrayResponse(responseMap.response, urlString, new HashSet<>(Arrays.asList(""result"", ""phenomenonTime"")));}}"	1
4243	public class A {public static void scheduleWithFixedDelay(final ScheduledExecutorService exec,final Duration initialDelay,final Duration delay,final Callable<Signal> callable) {exec.schedule(new Runnable() {@Overridepublic void run() {try {if (callable.call() == Signal.REPEAT) {exec.schedule(this, delay.getMillis(), TimeUnit.MILLISECONDS);} else {}} catch (Throwable e) {}}},initialDelay.getMillis(),TimeUnit.MILLISECONDS);}}	5
4244	"public class A {@Overridepublic void initialize() throws ContainerInitializationException {Timer.start(TIMER_STRUTS_2_COLD_START_INIT);try {if (this.startupHandler != null) {this.startupHandler.onStartup(this.getServletContext());}StrutsPrepareAndExecuteFilter filter = new StrutsPrepareAndExecuteFilter();FilterRegistration.Dynamic filterRegistration =this.getServletContext().addFilter(STRUTS_FILTER_NAME, filter);filterRegistration.addMappingForUrlPatterns(EnumSet.of(DispatcherType.REQUEST,DispatcherType.ASYNC,DispatcherType.INCLUDE,DispatcherType.FORWARD),true,""/*"");} catch (Exception e) {throw new ContainerInitializationException(""Could not initialize Struts2"", e);}this.initialized = true;Timer.stop(TIMER_STRUTS_2_COLD_START_INIT);}}"	2
4245	"public class A {public String existingBuildList() {existingBuildList.clear();List<String> existingDirectories =fileService.listBundleBuilds(selectedBundleName + ""/"" + fileService.getBuildPath() + ""/"", MAX_RESULTS);if (existingDirectories == null) {return null;}int i = 1;for (String directory : existingDirectories) {String[] buildSplit = directory.split(""/"");existingBuildList.put(buildSplit[buildSplit.length - 1], """" + i++);}return ""existingBuildList"";}}"	1
4246	"public class A {@Overridepublic Object executeAction(DataFetchingEnvironment env) {User currentUser = getUser(env);String dataSetName = env.getArgument(""dataSetName"");try {return new DataSetWithDatabase(dataSetRepository.createDataSet(currentUser, dataSetName),env.<ContextData>getContext().getUserPermissionCheck());} catch (DataStoreCreationException e) {throw new RuntimeException(""Data set could not be created"");} catch (IllegalDataSetNameException e) {throw new RuntimeException(""Data set id is not supported: "" + e.getMessage());} catch (DataSetCreationException e) {throw new RuntimeException(e.getMessage());}}}"	1
4247	public class A {@Overridepublic void removeIsotope(IIsotope isotope) {super.removeIsotope(isotope);}}	1
4248	"public class A {@VisibleForTestingstatic String calculateString(final String packageName,final Locale locale,final String key,final Object[] parameters,final Class<?> resourceClass,final String bundleName,final boolean fallbackOnRoot)throws MissingResourceException {try {ResourceBundle bundle =getBundle(locale, packageName + ""."" + bundleName, resourceClass, fallbackOnRoot);String unformattedString = bundle.getString(key);String string = MessageFormat.format(unformattedString, parameters);return string;} catch (IllegalArgumentException e) {final StringBuilder msg = new StringBuilder();msg.append(""Format problem with key=["").append(key).append(""], locale=["").append(locale).append(""], package="").append(packageName).append("" : "").append(e.toString());throw new MissingResourceException(msg.toString(), packageName, key);}}}"	2
4249	"public class A {@RetryableTestpublic void verifyLog() throws Exception {LogsQuery logsQuery =new LogsQuery().serviceId(""WW91cl9BcHBsaWNhdGlvbk5hbWU=.1"").start(startTime).end(Times.now());if (graphql.supportQueryLogsByKeywords()) {logsQuery.keywordsOfContent(""now"");}final List<Log> logs = graphql.logs(logsQuery);load(""expected/log/logs.yml"").as(LogsMatcher.class).verifyLoosely(logs);}}"	1
4250	public class A {@Overridepublic <T> String[] getConstructorParametersNames(Constructor<T> ctor) {try {return ConstructorPropertyNameExtractor.getParameterNames(ctor);} catch (IOException e) {if (_logger.isWarnEnabled())}return _fallbackFactory.getConstructorParametersNames(ctor);}}	1
4251	"public class A {@Overridepublic void process(IContinuation continuation,UserDataRequest udr,Document doc,ActiveSyncRequest request,Responder responder) {try {Document documentResponse = protocol.encodeResponse(udr.getUser());responder.sendWBXMLResponse(""Settings"", documentResponse);} catch (Exception e) {}}}"	1
4252	"public class A {public List<IAtomType> readAtomTypes(IChemObjectBuilder builder) {List<IAtomType> isotopes = new ArrayList<IAtomType>();try {parser.setFeature(""http://xml.org/sax/features/validation"", false);} catch (SAXException exception) {logger.debug(exception);}AtomTypeHandler handler = new AtomTypeHandler(builder);parser.setContentHandler(handler);try {parser.parse(new InputSource(input));isotopes = handler.getAtomTypes();} catch (IOException exception) {} catch (SAXException saxe) {}return isotopes;}}"	6
4253	"public class A {protected JSONObject createRecords(Storage storage, UIRequest ui) throws UIException {tty.line(""Making "" + this.record.getID());tty.flush();JSONObject returnData = new JSONObject();JSONObject out = datagenerator(storage, ui);try {JSONObject data = new JSONObject();Iterator rit = out.keys();JSONObject dataitems = new JSONObject();while (rit.hasNext()) {String key = (String) rit.next();data.put(""fields"", out.getJSONObject(key));String path = writer.sendJSON(storage, null, data, null);dataitems.put(key, path);tty.line(""created "" + this.record.getID() + "" with csid of: "" + path);tty.flush();}returnData.put(this.record.getID(), dataitems);} catch (JSONException x) {tty.line(""JSONException(Failed to parse json: "" + x);throw new UIException(""Failed to parse json: "" + x, x);} catch (ExistException x) {tty.line(""ExistException(Existence exception: "" + x);throw new UIException(""Existence exception: "" + x, x);} catch (UnimplementedException x) {tty.line(""UnimplementedException(UnimplementedException: "" + x);throw new UIException(""Unimplemented exception: "" + x, x);} catch (UnderlyingStorageException x) {tty.line(""UnderlyingStorageException(UnderlyingStorageException: "" + x);throw new UIException(""Problem storing: "" + x.getLocalizedMessage(), x.getStatus(), x.getUrl(), x);}return returnData;}}"	6
4254	public class A {public void run() {try {NamedThreadFactory.executeWithNewThreadName(taskName, r);} finally {}}}	2
4255	public class A {@Overridepublic void run() {int numberOfActiveSipApplicationSessions =((SipContext) sipContext).getSipManager().getActiveSipApplicationSessions();int numberOfActiveHttpSessions = sipContext.getManager().getActiveSessions();if (logger.isTraceEnabled()) {}boolean stopPrematuraly = false;long currentTime = System.currentTimeMillis();long elapsedTime = currentTime - startTime;if (timeToWait > 0 && (elapsedTime > timeToWait)) {stopContext();}if (logger.isDebugEnabled()) {}if (numberOfActiveSipApplicationSessions <= 0 && numberOfActiveHttpSessions <= 0) {boolean servicePremature = true;ContainerListener containerListener =((SipContext) sipContext).getListeners().getContainerListener();if (containerListener != null) {GracefulShutdownCheckEvent event = new GracefulShutdownCheckEvent(elapsedTime, timeToWait);((SipContext) sipContext).getListeners().callbackContainerListener(event);servicePremature =sipContext.getServletContext().getAttribute(PREVENT_PREMATURE_SHUTDOWN) == null;}if (servicePremature) {stopContext();}}}}	5
4256	"public class A {public void testSendCommandAndWaitTimeout() {Command command = new Command();command.setName(""Unlistened command test"");command.setReceiver(""unlistened.test.channel"");command.setReplyTimeout(100);Command result = busService.send(command);assertEquals(""Timeout reply command is the original command"", result, command);assertFalse(""When timeout is reached the original command is marked as not executed"",result.isExecuted());}}"	2
4257	"public class A {private void addEntityCheckCache(SessionFactoryImplementor sessionFactory) throws Exception {Item item = new Item(""chris"", ""Chris's Item"");withTxSession(s -> s.persist(item));withTxSession(s -> {Item found = s.load(Item.class, item.getId());Statistics stats = sessionFactory.getStatistics();assertEquals(item.getDescription(), found.getDescription());assertEquals(0, stats.getSecondLevelCacheMissCount());assertEquals(1, stats.getSecondLevelCacheHitCount());s.delete(found);});}}"	1
4258	public class A {synchronized boolean addHead(FlumeEventPointer e) {if (backingStore.getSize() == backingStore.getCapacity()) {return false;}long value = e.toLong();Preconditions.checkArgument(value != EMPTY);backingStore.incrementFileID(e.getFileID());add(0, value);return true;}}	1
4259	public class A {public void acknowledge(final FlowFileRecord flowFile) {incrementUnacknowledgedQueueSize(-1, -flowFile.getSize());}}	1
4260	"public class A {@Overridepublic boolean initialImageInit(final InternalRegion region,final long lastModified,final Object newValue,final boolean create,final boolean wasRecovered,final boolean acceptedVersionTag)throws RegionClearedException {boolean result = false;Token vTok = getValueAsToken();if (acceptedVersionTag || create || (vTok != Token.DESTROYED || vTok != Token.TOMBSTONE)) {Object newValueToWrite = newValue;boolean putValue =acceptedVersionTag|| create|| (newValueToWrite != Token.LOCAL_INVALID&& (wasRecovered || (vTok == Token.LOCAL_INVALID)));if (region.isUsedForPartitionedRegionAdmin()&& newValueToWrite instanceof CachedDeserializable) {newValueToWrite =((CachedDeserializable) newValueToWrite).getDeserializedValue(region, null);if (!create && newValueToWrite instanceof Versionable) {final Object oldValue = getValueInVM(region);if (oldValue == null) {putValue = true;} else if (oldValue instanceof Versionable) {Versionable nv = (Versionable) newValueToWrite;Versionable ov = (Versionable) oldValue;putValue = nv.isNewerThan(ov);}}}if (putValue) {if (create || acceptedVersionTag) {ImageState imageState = region.getImageState();if (imageState.getRegionInvalidated()) {if (newValueToWrite != Token.TOMBSTONE) {newValueToWrite = Token.INVALID;}} else if (imageState.getClearRegionFlag()) {boolean entryOK = false;RegionVersionVector rvv = imageState.getClearRegionVersionVector();if (rvv != null) {VersionSource id = getVersionStamp().getMemberID();if (id == null) {id = region.getVersionMember();}if (!rvv.contains(id, getVersionStamp().getRegionVersion())) {entryOK = true;}}if (!entryOK) {newValueToWrite = Token.DESTROYED;imageState.addDestroyedEntry(this.getKey());throw new RegionClearedException(""During the GII put of entry, the region got cleared so aborting the operation"");}}}setValue(region, this.prepareValueForCache(region, newValueToWrite, false));result = true;if (newValueToWrite != Token.TOMBSTONE) {if (create) {region.getCachePerfStats().incCreates();}region.updateStatsForPut(this, lastModified, false);}if (logger.isTraceEnabled()) {if (newValueToWrite instanceof CachedDeserializable) {} else {}}}}return result;}}"	2
4261	"public class A {private TrackerResponse sendEvent(TrackerRequestType eventType, TrackerRequestBuilder requestBuilder) {String requestUri;try {String query = buildQuery(eventType, requestBuilder);String baseUrl = baseUri.toASCIIString();if (baseUrl.endsWith(""/"")) {baseUrl = baseUrl.substring(0, baseUrl.length() - 1);}URL requestUrl = new URL(baseUrl + (baseUri.getRawQuery() == null ? ""?"" : ""&"") + query);requestUri = requestUrl.toURI().toString();} catch (Exception e) {throw new BtException(""Failed to build tracker request"", e);}HttpGet request = new HttpGet(requestUri);try {if (LOGGER.isDebugEnabled()) {}return httpClient.execute(request, httpResponseHandler);} catch (IOException e) {return TrackerResponse.exceptional(e);}}}"	1
4262	public class A {private static <X> Function<? super Publisher<X>, ? extends Publisher<X>> wrapOperators(final Tracer tracer) {return Operators.liftPublisher(new BiFunction<Publisher, CoreSubscriber<? super X>, CoreSubscriber<? super X>>() {@Overridepublic CoreSubscriber<? super X> apply(Publisher publisher, CoreSubscriber<? super X> subscriber) {if (publisher instanceof Fuseable.ScalarCallable) {return subscriber;}AbstractSpan<?> active = tracer.getActive();if (active == null) {return subscriber;}return new TracedSubscriber<>(subscriber, tracer, active);}});}}	2
4263	public class A {private void saveHnrLinkedIds(Facility facility, Provider provider, Integer demographicId) {try {List<ClientLink> currentLinks =clientLinkDao.findByFacilityIdClientIdType(facility.getId(), demographicId, true, ClientLink.Type.HNR);boolean isCheckedClientExistingLink = false;for (ClientLink existingLink : currentLinks) {if (newHnrLinkedId == null || !newHnrLinkedId.equals(existingLink.getRemoteLinkId())) {existingLink.setUnlinkDate(new Date());existingLink.setUnlinkProviderNo(provider.getProviderNo());clientLinkDao.merge(existingLink);} else {isCheckedClientExistingLink = true;}}if (newHnrLinkedId != null && !isCheckedClientExistingLink) {ClientLink newLink = new ClientLink();newLink.setFacilityId(facility.getId());newLink.setClientId(demographicId);newLink.setLinkDate(new Date());newLink.setLinkProviderNo(provider.getProviderNo());newLink.setLinkType(ClientLink.Type.HNR);newLink.setRemoteLinkId(newHnrLinkedId);clientLinkDao.persist(newLink);}} catch (Exception e) {}}}	1
4264	"public class A {@SuppressWarnings(""unused"")private SlaveEntryPosition findSlavePosition(MysqlConnection mysqlConnection) {try {ResultSetPacket packet = mysqlConnection.query(""show slave status"");List<FieldPacket> names = packet.getFieldDescriptors();List<String> fields = packet.getFieldValues();if (CollectionUtils.isEmpty(fields)) {return null;}int i = 0;Map<String, String> maps = new HashMap<>(names.size(), 1f);for (FieldPacket name : names) {maps.put(name.getName(), fields.get(i));i++;}String errno = maps.get(""Last_Errno"");String slaveIORunning = maps.get(""Slave_IO_Running"");String slaveSQLRunning = maps.get(""Slave_SQL_Running"");if ((!""0"".equals(errno))|| (!""Yes"".equalsIgnoreCase(slaveIORunning))|| (!""Yes"".equalsIgnoreCase(slaveSQLRunning))) {return null;}String masterHost = maps.get(""Master_Host"");String masterPort = maps.get(""Master_Port"");String binlog = maps.get(""Master_Log_File"");String position = maps.get(""Exec_Master_Log_Pos"");return new SlaveEntryPosition(binlog, Long.valueOf(position), masterHost, masterPort);} catch (IOException e) {}return null;}}"	2
4265	"public class A {@Test@Ignorepublic void testJMSEmbeddedConnector() throws ConnectorDataTransmissionException {final Thread messageGenerator =new Thread(new JMSMessageGenerator(ConfigurationParameters.JMS_EMBEDDED_URI,ConfigurationParameters.JMS_EMBEDDED_FACTORY_LOOKUP_NAME),""Generator"");final Configuration configuration = ConfigurationFactory.createSingletonConfiguration();configuration.setProperty(JMSEmbeddedConnector.PORT, String.valueOf(ConfigurationParameters.JMS_EMBEDDED_PORT));configuration.setProperty(JMSClientConnector.USERNAME, String.valueOf(ConfigurationParameters.JMS_USERNAME));configuration.setProperty(JMSClientConnector.PASSWORD, String.valueOf(ConfigurationParameters.JMS_PASSWORD));configuration.setProperty(JMSClientConnector.URI, ConfigurationParameters.JMS_EMBEDDED_URI);configuration.setProperty(JMSClientConnector.FACTORY_LOOKUP_NAME,ConfigurationParameters.JMS_EMBEDDED_FACTORY_LOOKUP_NAME);this.setConnector(new JMSEmbeddedConnector(configuration, this.createLookupEntityMap()));this.initialize();messageGenerator.start();this.deserialize(ConfigurationParameters.SEND_NUMBER_OF_RECORDS, true);this.close(ConfigurationParameters.SEND_NUMBER_OF_RECORDS);try {messageGenerator.join(2000);} catch (final InterruptedException e) {}}}"	1
4266	"public class A {public static List<JsonObject> predictClassification(List<JsonObject> data, JsonArray columnNames, String usecaseName) throws PredictException {List<JsonObject> predictionData = new ArrayList<>();try {BinomialModelPrediction p = null;AutoMLConfig autoMLConfig = autoMlDAL.getMLConfigByUsecase(usecaseName);String deployedMojoName = autoMLConfig.getMojoDeployed();String predectionColumn = autoMLConfig.getPredictionColumn();String path = FileUtils.getTempDirectoryPath();byte[] mojoData = autoMLConfig.getMojoDeployedZip();File file = new File(path + usecaseName + "".zip"");FileUtils.writeByteArrayToFile(file, mojoData);EasyPredictModelWrapper model =new EasyPredictModelWrapper(MojoModel.load(new TmpMojoReaderBackend(file)));Gson gson = new Gson();Type type = new TypeToken<Map<String, String>>() {}.getType();for (JsonElement eachObject : data) {JsonObject object = eachObject.getAsJsonObject();RowData row = new RowData();JsonObject rowObject = new JsonObject();for (JsonElement eachColumn : columnNames) {String column = eachColumn.getAsString();String value = object.get(column) == null ? """" : object.get(column).getAsString();if (!value.equals("""")) {rowObject.addProperty(column, value);}}Map<String, String> eachRow = gson.fromJson(rowObject, type);row.putAll(eachRow);p = model.predictBinomial(row);object.addProperty(""predictedColumn"", predectionColumn);object.addProperty(""predictedValue"", String.valueOf(p.label));predictionData.add(object);}} catch (Exception e) {throw new PredictException(""Something went wrong while executing classification prediction for ""+ usecaseName+ "" ""+ e.getMessage());}return predictionData;}}"	2
4267	public class A {public synchronized void unregisterPollTask() {if (config == null) {return;}PollTask localPollTask = this.pollTask;if (localPollTask != null) {comms.unregisterRegularPoll(localPollTask);}this.pollTask = null;request = null;comms = null;updateStatus(ThingStatus.OFFLINE);}}	2
4268	public class A {private static Future<AmqpBridge> deployAmqpBridge(Vertx vertx, BridgeConfig bridgeConfig, MetricsReporter metricsReporter) {Promise<AmqpBridge> amqpPromise = Promise.promise();if (bridgeConfig.getAmqpConfig().isEnabled()) {AmqpBridge amqpBridge = new AmqpBridge(bridgeConfig, metricsReporter);vertx.deployVerticle(amqpBridge,done -> {if (done.succeeded()) {amqpPromise.complete(amqpBridge);} else {amqpPromise.fail(done.cause());}});} else {amqpPromise.complete();}return amqpPromise.future();}}	2
4269	public class A {public boolean move(SafFile<T> destination) {return false;}}	1
4270	"public class A {@POST@Path(""generate"")@Produces(MediaType.TEXT_XML)@RestQuery(name = ""generate"",description = ""Generates a cover image based on the given metadata"",restParameters = {@RestParameter(description = ""Metadata XML"",isRequired = false,name = ""xml"",type = Type.TEXT),@RestParameter(description = ""XSLT stylesheet"",isRequired = true,name = ""xsl"",type = Type.TEXT),@RestParameter(description = ""Width of the cover image"",isRequired = true,name = ""width"",type = Type.INTEGER,defaultValue = ""1600""),@RestParameter(description = ""Height of the cover image"",isRequired = true,name = ""height"",type = Type.INTEGER,defaultValue = ""900""),@RestParameter(description = ""URI of poster image"",isRequired = false,name = ""posterimage"",type = Type.STRING),@RestParameter(description = ""Flavor of target cover image"",isRequired = true,name = ""targetflavor"",type = Type.STRING,defaultValue = ""image/cover"")},responses = {@RestResponse(description =""Results in an xml document containing the job for the cover image generation task"",responseCode = HttpServletResponse.SC_OK),@RestResponse(description = ""If required parameters aren't set or not valid"",responseCode = HttpServletResponse.SC_BAD_REQUEST)},returnDescription = """")public Response generateCoverImage(@FormParam(""xml"") String xml,@FormParam(""xsl"") String xsl,@FormParam(""width"") String width,@FormParam(""height"") String height,@FormParam(""posterimage"") String posterFlavor,@FormParam(""targetflavor"") String targetFlavor) {try {Job job =coverImageService.generateCoverImage(xml, xsl, width, height, posterFlavor, targetFlavor);return Response.ok().entity(new JaxbJob(job)).build();} catch (CoverImageException e) {return Response.status(Response.Status.INTERNAL_SERVER_ERROR).build();}}}"	1
4271	"public class A {public void killQuery(String queryName,String state,String user,String sessionHandleString,String fromDate,String toDate)throws LensException {MapBuilder query = new MapBuilder(""sessionid"", sessionHandleString);if (queryName != null) {query.put(""queryName"", queryName);}if (state != null) {query.put(""state"", state);}if (user != null) {query.put(""user"", user);}if (fromDate != null) {query.put(""fromDate"", fromDate);}if (toDate != null) {query.put(""toDate"", toDate);}Response response = this.exec(""delete"", QueryURL.QUERY_URL, servLens, null, query);AssertUtil.assertSucceededResponse(response);}}"	1
4272	"public class A {private void processAIP(AIP aip,DisposalConfirmation disposalConfirmation,ModelService model,Job cachedJob,Report report,JobPluginInfo jobPluginInfo) {Report reportItem = PluginHelper.initPluginReportItem(this, aip.getId(), AIP.class);PluginHelper.updatePartialJobReport(this, model, reportItem, false, cachedJob);PluginState state = PluginState.SUCCESS;String outcomeText;try {if (AIPState.DESTROYED.equals(aip.getState())) {state = PluginState.SKIPPED;outcomeText =""AIP '""+ aip.getId()+ "" has been skipped because destruction process was successfully done"";} else {aip.setState(AIPState.DESTROY_PROCESSING);model.updateAIPState(aip, cachedJob.getUsername());testAndExecuteCopyAIP2DisposalBin(aip, disposalConfirmation.getId());executeSetAIPMetadataInformation(aip, cachedJob.getUsername());executeApplyStylesheet(aip, model);executeRemoveAllRepresentations(aip, model);model.destroyAIP(aip, cachedJob.getUsername());outcomeText =""AIP '""+ aip.getId()+ ""' has been destroyed with disposal confirmation '""+ disposalConfirmation.getTitle()+ ""' (""+ disposalConfirmation.getId()+ "")"";}reportItem.setPluginDetails(outcomeText);} catch (IOException| CommandException| RequestNotValidException| GenericException| AuthorizationDeniedException| NotFoundException| AlreadyExistsException e) {state = PluginState.FAILURE;outcomeText =""AIP '""+ aip.getId()+ ""' has not been destroyed with disposal confirmation '""+ disposalConfirmation.getTitle()+ ""' (""+ disposalConfirmation.getId()+ "")"";reportItem.setPluginDetails(outcomeText + "": "" + e.getMessage());processedWithErrors = true;}model.createEvent(aip.getId(),null,null,null,RodaConstants.PreservationEventType.DESTRUCTION,EVENT_DESCRIPTION,null,null,state,outcomeText,"""",cachedJob.getUsername(),true);try {DisposalConfirmationPluginUtils.copyAIPToDisposalBin(aip, disposalConfirmation.getId(), Arrays.asList(""-r"", ""--ignore-existing""));} catch (RequestNotValidException | GenericException | CommandException e) {}jobPluginInfo.incrementObjectsProcessed(state);reportItem.setPluginState(state);report.addReport(reportItem);PluginHelper.updatePartialJobReport(this, model, reportItem, true, cachedJob);}}"	3
4273	"public class A {@Override@SuppressWarnings(""unchecked"")protected void doPost(final HttpServletRequest request, final HttpServletResponse response)throws ServletException, IOException {try {final Reader requestReader = request.getReader();final Map<String, Object> jsonObject = (Map<String, Object>) JSON.parse(requestReader);final String classname = (String) jsonObject.get(""class"");final String rawTimestamp = (String) jsonObject.get(""timestamp"");final Object[] rawValues = (Object[]) jsonObject.get(""values"");if ((classname == null) || (rawTimestamp == null) || (rawValues == null)) {response.sendError(400, ""Invalid data received"");return;}final long timestamp = Integer.parseInt(rawTimestamp);final String[] values = Arrays.copyOf(rawValues, rawValues.length, String[].class);final Class<? extends IMonitoringRecord> clazz =AbstractMonitoringRecord.classForName(classname);} catch (final ClassCastException ex) {LOGGER.warn(""Invalid data received"", ex);response.sendError(400, ""Invalid data received"");} catch (final ArrayStoreException ex) {LOGGER.warn(""Invalid data received"", ex);response.sendError(400, ""Invalid data received"");} catch (final NumberFormatException ex) {LOGGER.warn(""Invalid data received"", ex);response.sendError(400, ""Invalid data received"");} catch (final MonitoringRecordException ex) {response.sendError(400, ""Could not deserialize monitoring record"");} catch (final IllegalStateException ex) {response.sendError(400, ""Invalid data received"");}}}"	3
4274	"public class A {@GET@Timed@Path(""shards"")@Compress@Produces(APPLICATION_JSON_WITH_CHARSET)public String shards(@Context GraphManager manager,@PathParam(""graph"") String graph,@QueryParam(""split_size"") long splitSize) {HugeGraph g = graph(manager, graph);List<Shard> shards = g.metadata(HugeType.EDGE_OUT, ""splits"", splitSize);return manager.serializer(g).writeList(""shards"", shards);}}"	1
4275	public class A {public String mapUser(String user) {if (getMappingExtension() != null) {user =getMappingExtension().invoke(new ExtMap().mput(Base.InvokeKeys.COMMAND, Mapping.InvokeCommands.MAP_USER).mput(Mapping.InvokeKeys.USER, user),true).get(Mapping.InvokeKeys.USER, user);}return user;}}	2
4276	public class A {public void replace(CnATreeElement newElement) {if (this == newElement) {if (log.isDebugEnabled()) {}return;}if (getParent() == null) {if (log.isDebugEnabled()) {}this.children = newElement.getChildren();this.setChildrenLoaded(true);} else {if (log.isDebugEnabled()) {}getParent().removeChild(this);getParent().addChild(newElement);newElement.setParentAndScope(getParent());}}}	3
4277	public class A {protected final void doAsyncQueryData(CompletableFuture<Collection<Row>> future,SQLClient rdbSqlClient,AtomicLong failCounter,AtomicBoolean finishFlag,CountDownLatch latch,Object... keys) {rdbSqlClient.getConnection(conn -> {try {if (conn.failed()) {connectionStatus.set(false);if (failCounter.getAndIncrement() % 1000 == 0) {}if (failCounter.get() >= sideTableInfo.getConnectRetryMaxNum(100)) {future.completeExceptionally(conn.cause());finishFlag.set(true);}return;}connectionStatus.set(true);handleQuery(conn.result(), future, keys);finishFlag.set(true);} catch (Exception e) {dealFillDataError(future, e);} finally {latch.countDown();}});}}	1
4278	public class A {@Overrideprotected void onBootstrap(ApplicationEvent event) {AuthenticationUtil.runAs(new RunAsWork<Object>() {public Object doWork() {RetryingTransactionCallback<Void> callback =new RetryingTransactionCallback<Void>() {public Void execute() {try {updateExtractor();} catch (RuntimeException e) {if (logger.isWarnEnabled()) {}customMappings = null;throw e;}return null;}};transactionService.getRetryingTransactionHelper().doInTransaction(callback);return null;}},AuthenticationUtil.getSystemUserName());}}	1
4279	public class A {@Overridepublic void open() throws InterpreterException {this.sparkInterpreter = getInterpreterInTheSameSessionByClassName(SparkInterpreter.class);this.sc = sparkInterpreter.getSparkContext();this.jsc = sparkInterpreter.getJavaSparkContext();this.sparkVersion = new SparkVersion(sc.version());this.isSpark1 = sparkVersion.getMajorVersion() == 1;Arrays.stream(sc.getConf().getAll())properties.entrySet().stream()ZeppelinRContext.setSparkContext(sc);ZeppelinRContext.setJavaSparkContext(jsc);if (!isSpark1) {ZeppelinRContext.setSparkSession(sparkInterpreter.getSparkSession());}ZeppelinRContext.setSqlContext(sparkInterpreter.getSQLContext());ZeppelinRContext.setZeppelinContext(sparkInterpreter.getZeppelinContext());super.open();}}	3
4280	"public class A {static CustomWeighting.Parameters createWeightingParameters(CustomModel customModel,EncodedValueLookup lookup,double globalMaxSpeed,DecimalEncodedValue avgSpeedEnc) {String key = customModel.toString() + "",global:"" + globalMaxSpeed;if (key.length() > 100_000)throw new IllegalArgumentException(""Custom Model too big: "" + key.length());Class<?> clazz = customModel.isInternal() ? INTERNAL_CACHE.get(key) : null;if (CACHE_SIZE > 0 && clazz == null) clazz = CACHE.get(key);if (clazz == null) {clazz = createClazz(customModel, lookup, globalMaxSpeed);if (customModel.isInternal()) {INTERNAL_CACHE.put(key, clazz);if (INTERNAL_CACHE.size() > 100) {CACHE.putAll(INTERNAL_CACHE);INTERNAL_CACHE.clear();LoggerFactory.getLogger(CustomModelParser.class)}} else if (CACHE_SIZE > 0) {CACHE.put(key, clazz);}}try {CustomWeightingHelper prio =(CustomWeightingHelper) clazz.getDeclaredConstructor().newInstance();prio.init(lookup, avgSpeedEnc, customModel.getAreas());return new CustomWeighting.Parameters(prio::getSpeed,prio::getPriority,findMaxSpeed(customModel, globalMaxSpeed),customModel.getDistanceInfluence(),customModel.getHeadingPenalty());} catch (ReflectiveOperationException ex) {throw new IllegalArgumentException(""Cannot compile expression "" + ex.getMessage(), ex);}}}"	1
4281	public class A {public void handlePaxLoggingEvent(PaxLoggingEvent event) {synchronized (this.subscriptions) {if (this.subscriptions.isEmpty()) {return;}EdgeRpcNotification notification =new EdgeRpcNotification(WebsocketApi.EDGE_ID, SystemLogNotification.fromPaxLoggingEvent(event));for (Iterator<String> iter = this.subscriptions.iterator(); iter.hasNext(); ) {String token = iter.next();try {this.parent.getWsDataForTokenOrError(token).send(notification);} catch (OpenemsNamedException e) {iter.remove();}}}}}	1
4282	public class A {private void setGUISizeTooltipContainer() {try {int height = GUISizeHelper.enlargedImageHeight;int width = (int) ((float) height * (float) 0.64);JPanel cardPreviewContainer = (JPanel) UI.getComponent(MageComponents.CARD_PREVIEW_CONTAINER);cardPreviewContainer.setBounds(0, 0, width + 80, height + 30);BigCard bigCard = (BigCard) UI.getComponent(MageComponents.CARD_PREVIEW_PANE);bigCard.setSize(width, height);JPanel cardPreviewContainerRotated =(JPanel) UI.getComponent(MageComponents.CARD_PREVIEW_CONTAINER_ROTATED);cardPreviewContainerRotated.setBounds(0, 0, height + 80, width + 100 + 30);BigCard bigCardRotated = (BigCard) UI.getComponent(MageComponents.CARD_PREVIEW_PANE_ROTATED);bigCardRotated.setSize(height, width + 30);} catch (Exception e) {}}}	1
4283	public class A {protected String uploadJar(final FormData formData) throws IOException {GAV gav = formData.getGav();InputStream jarStream = null;try {jarStream = formData.getFile().getInputStream();if (gav == null) {if (!jarStream.markSupported()) {jarStream = new BufferedInputStream(jarStream);}jarStream.mark(jarStream.available());PomModel pomModel = PomModelResolver.resolveFromJar(jarStream);if (pomModel != null) {String groupId = pomModel.getReleaseId().getGroupId();String artifactId = pomModel.getReleaseId().getArtifactId();String version = pomModel.getReleaseId().getVersion();if (isNullOrEmpty(groupId) || isNullOrEmpty(artifactId) || isNullOrEmpty(version)) {return UPLOAD_MISSING_POM;} else {gav = new GAV(groupId, artifactId, version);}} else {return UPLOAD_MISSING_POM;}jarStream.reset();formData.setGav(gav);}deploy(gav, jarStream);return UPLOAD_OK;} catch (IOException ioe) {throw ExceptionUtilities.handleException(ioe);} finally {if (jarStream != null) {jarStream.close();}}}}	1
4284	"public class A {@Overridepublic void rip() throws IOException {Document doc = Http.url(this.url).get();Elements videos = doc.select(""meta[name=twitter:player:stream]"");if (videos.size() == 0) {throw new IOException(""Could not find twitter:player:stream at "" + url);}String vidUrl = videos.first().attr(""content"");vidUrl = vidUrl.replaceAll(""&amp;"", ""&"");addURLToDownload(new URL(vidUrl), HOST + ""_"" + getGID(this.url));waitForThreads();}}"	1
4285	public class A {@Overridepublic void doExecute(final TestContext context) {Boolean conditionSatisfied = null;long timeLeft = getWaitTimeMs(context);long intervalMs = getIntervalMs(context);if (intervalMs > timeLeft) {intervalMs = timeLeft;}Callable<Boolean> callable = () -> condition.isSatisfied(context);while (timeLeft > 0) {timeLeft -= intervalMs;if (log.isDebugEnabled()) {}ExecutorService executor = Executors.newSingleThreadExecutor();Future<Boolean> future = executor.submit(callable);long checkStartTime = System.currentTimeMillis();try {conditionSatisfied = future.get(intervalMs, TimeUnit.MILLISECONDS);} catch (InterruptedException | TimeoutException | ExecutionException e) {}executor.shutdown();if (Boolean.TRUE.equals(conditionSatisfied)) {return;}long sleepTime = intervalMs - (System.currentTimeMillis() - checkStartTime);if (sleepTime > 0) {try {Thread.sleep(sleepTime);} catch (InterruptedException e) {}}}throw new CitrusRuntimeException(condition.getErrorMessage(context));}}	4
4286	"public class A {public static DataSource createDefaultDataSource() {String driverClass = ""org.h2.Driver"";String jdbcUrl =""jdbc:h2:mem:taskana;IGNORECASE=TRUE;LOCK_MODE=0;""+ ""INIT=CREATE SCHEMA IF NOT EXISTS TASKANA\\;""+ ""SET COLLATION DEFAULT_de_DE"";String username = ""sa"";String password = ""sa"";return createDatasource(driverClass, jdbcUrl, username, password);}}"	1
4287	"public class A {public static void assertEquals(String val, String val2, String message)throws AssertFailException {if (!val.equals(val2)) throw new AssertFailException(""FAIL: "" + message);}}"	1
4288	public class A {@Overridepublic void disconnected(SchedulerDriver schedulerDriver) {}}	1
4289	"public class A {@Nullableprivate <T> T getDocument(String uri, Class<T> response) throws IOException {try {String result = HttpUtil.executeUrl(""GET"", uri, REQUEST_TIMEOUT_MS);if (result != null && !result.isBlank()) {JAXBContext jc = JAXBContext.newInstance(response);XMLInputFactory xif = XMLInputFactory.newInstance();xif.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);xif.setProperty(XMLInputFactory.SUPPORT_DTD, false);XMLStreamReader xsr =xif.createXMLStreamReader(new ByteArrayInputStream(result.getBytes(StandardCharsets.UTF_8)));xsr = new PropertyRenamerDelegate(xsr);@SuppressWarnings(""unchecked"")T obj = (T) jc.createUnmarshaller().unmarshal(xsr);return obj;}} catch (UnmarshalException e) {} catch (JAXBException e) {} catch (XMLStreamException e) {}return null;}}"	4
4290	"public class A {@Testpublic void testToString() {MatchingResources mr = new MatchingResources(""classpath*:org/wicketstuff/config/*.class"");assertTrue(mr.getAllMatches().length > 0);}}"	1
4291	public class A {@Overridepublic DispatchLog remove(Serializable primaryKey) throws NoSuchLogException {Session session = null;try {session = openSession();DispatchLog dispatchLog = (DispatchLog) session.get(DispatchLogImpl.class, primaryKey);if (dispatchLog == null) {if (_log.isDebugEnabled()) {}throw new NoSuchLogException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return remove(dispatchLog);} catch (NoSuchLogException noSuchEntityException) {throw noSuchEntityException;} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}}	1
4292	"public class A {private IsotopicDistributionSpectrum calculateIsotopicDistribution(AASequenceImpl validatedPeptideSequence, Integer peptideCharge, int labedDifference) {double mzValue = validatedPeptideSequence.getMz(peptideCharge);IsotopicDistribution lIso = validatedPeptideSequence.getIsotopicDistribution();if (labedDifference > 0) {lIso.setLabelDifference(labedDifference);}HashMap lPeaks = new HashMap();try {for (int i = 0; i < 15; i++) {int numberOfSidePeaks = 10;if (currentGraphicsPanelType.equals(GraphicsPanelType.isotopicDistributionProfile)) {for (int j = 0; j < numberOfSidePeaks; j++) {lPeaks.put(mzValue+ (i * (new MassCalc().calculateMass(""H"") / (double) peptideCharge))- 0.01 * (numberOfSidePeaks - j),lIso.getPercMax()[i] * j * 10);}}lPeaks.put(mzValue + (i * (new MassCalc().calculateMass(""H"") / (double) peptideCharge)),lIso.getPercMax()[i] * 100);if (currentGraphicsPanelType.equals(GraphicsPanelType.isotopicDistributionProfile)) {for (int j = 1; j <= numberOfSidePeaks; j++) {lPeaks.put(mzValue+ (i * (new MassCalc().calculateMass(""H"") / (double) peptideCharge))+ 0.01 * j,lIso.getPercMax()[i] * (100 - j * 10));}}}} catch (UnknownElementMassException ume) {}IsotopicDistributionSpectrum lSpecFile = new IsotopicDistributionSpectrum();lSpecFile.setCharge(peptideCharge);lSpecFile.setPrecursorMZ(mzValue);lSpecFile.setPeaks(lPeaks);return lSpecFile;}}"	1
4293	public class A {private void processLink(LinkInformation linkInformation, String copyTargetUUID) {String otherElementUUID = linkInformation.otherElementUUID;String copyDestinationUuid = sourceDestMap.get(otherElementUUID);if (copyDestinationUuid == null) {if (copyLinksMode == CopyLinksMode.FROM_COMPENDIUM_TO_MODEL) {if (logger.isDebugEnabled()) {}return;} else {if (logger.isDebugEnabled()) {}}} else {if (logger.isDebugEnabled()) {}otherElementUUID = copyDestinationUuid;}if (linkInformation.direction == Direction.FROM_COPIED_ELEMENT) {createLink(copyTargetUUID, otherElementUUID, linkInformation.type, linkInformation.comment);} else {createLink(otherElementUUID, copyTargetUUID, linkInformation.type, linkInformation.comment);}}}	3
4294	public class A {protected final void startUpdateTopics(DatumGenerator<String, String> updateGenerator, int howManyUpdate)throws InterruptedException {new ProduceData(updateGenerator, getKafkaBrokerPort(), UPDATE_TOPIC, howManyUpdate, 0).start();}}	1
4295	"public class A {@Overridepublic void run() {try {Object session =TEST_SESSION_ACCESS.mockSession(jtaPlatform, TIME_SERVICE, localEnvironment.getRegionFactory());withTx(localEnvironment,session,() -> {assertEquals(""Correct initial value"",VALUE1,testLocalAccessStrategy.get(session, KEY, SESSION_ACCESS.getTimestamp(session)));doUpdate(testLocalAccessStrategy, session, KEY, VALUE2);pferLatch.countDown();commitLatch.await();return null;});} catch (Exception e) {node1Exception = e;} catch (AssertionError e) {node1Failure = e;} finally {completionLatch.countDown();}}}"	1
4296	"public class A {public ExplorePage expectGroupListContains(final String expected) {String msg = ""Group search list contains "" + expected;waitForAMoment().withMessage(""Waiting for search contains"").until(webDriver -> getGroupSearchResults().contains(expected));assertThat(getGroupSearchResults()).as(msg).contains(expected);return new ExplorePage(getDriver());}}"	1
4297	"public class A {@Overridepublic void updateEntitlement(String name, Entitlement entitlement) {Query query = em.createQuery(""select e from Entitlement e where e.name=:name"");query.setParameter(""name"", name);EntitlementEntity entitlementEntity = (EntitlementEntity) query.getSingleResult();domain2entity(entitlement, entitlementEntity);em.persist(entitlementEntity);}}"	1
4298	public class A {@VisibleForTestingvoid endpointPolicyUpdated(TenantId tenantId, EndpointGroupId epgId, WriteTransaction wTx) {FollowedEndpointGroup followedEpg = new FollowedEndpointGroupBuilder().setId(epgId).build();wTx.put(LogicalDatastoreType.OPERATIONAL,IidFactory.followedEndpointgroupIid(IovisorRenderer.RENDERER_NAME, tenantId, epgId),followedEpg,true);if (DataStoreHelper.submitToDs(wTx)) {return;} else {return;}}}	2
4299	public class A {public static void deleteCommerceTierPriceEntry(long commerceTierPriceEntryId)throws RemoteException {try {CommerceTierPriceEntryServiceUtil.deleteCommerceTierPriceEntry(commerceTierPriceEntryId);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4300	public class A {protected void setAttributes(int designator, Map<String, Attribute> attributes) {m_attributes.put(Integer.valueOf(designator), attributes);if (logger.isDebugEnabled()) {for (String attrName : attributes.keySet()) {}}}}	2
4301	"public class A {public void processSolution(BuildingBlockExecution execution, String asyncResponse) {try {validateSolution(asyncResponse);ServiceInstance serviceInstance =execution.getGeneralBuildingBlock().getCustomer().getServiceSubscription().getServiceInstances().get(0);JSONObject response = new JSONObject(asyncResponse);if (response.has(SOLUTIONS)) {JSONObject allSolutions = response.getJSONObject(SOLUTIONS);if (allSolutions.has(""placementSolutions"")) {JSONArray placementSolutions = allSolutions.getJSONArray(""placementSolutions"");for (int i = 0; i < placementSolutions.length(); i++) {JSONArray placements = placementSolutions.getJSONArray(i);processPlacementSolution(serviceInstance, placements, i);}}if (allSolutions.has(""licenseSolutions"")) {JSONArray licenseSolutions = allSolutions.getJSONArray(""licenseSolutions"");if (licenseSolutions.length() > 0) {processLicenseSolution(serviceInstance, licenseSolutions);}}} else {throw new BpmnError(UNPROCESSABLE, ""Sniro Managers response does not contain: "" + SOLUTIONS);}execution.setVariable(""generalBuildingBlock"", execution.getGeneralBuildingBlock());} catch (BpmnError e) {logger.error(EXCEPTION_OCCURRED, e);exceptionUtil.buildAndThrowWorkflowException(execution, Integer.parseInt(e.getErrorCode()), e.getMessage(), ONAPComponents.SNIRO);} catch (BadResponseException e) {logger.error(EXCEPTION_OCCURRED, e);exceptionUtil.buildAndThrowWorkflowException(execution, 400, e.getMessage(), ONAPComponents.SNIRO);} catch (Exception e) {exceptionUtil.buildAndThrowWorkflowException(execution,INTERNAL,""Internal Error - occurred while processing sniro asynchronous response: ""+ e.getMessage(),ONAPComponents.SO);}}}"	4
4302	"public class A {@Overridepublic String getIntegratedCirquitCardId() throws KuraException {synchronized (this.atLock) {if (this.iccid == null && isSimCardReady()) {byte[] reply;CommConnection commAtConnection = openSerialPort(getAtPort());if (!isAtReachable(commAtConnection)) {closeSerialPort(commAtConnection);throw new KuraException(KuraErrorCode.NOT_CONNECTED, MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG);}try {reply =commAtConnection.sendCommand(HspaModemAtCommands.getICCID.getCommand().getBytes(), 1000, 100);} catch (IOException e) {closeSerialPort(commAtConnection);throw new KuraException(KuraErrorCode.CONNECTION_FAILED, e);}closeSerialPort(commAtConnection);if (reply != null) {String cirquitCardId = getResponseString(reply);if (cirquitCardId != null && !cirquitCardId.isEmpty()) {if (cirquitCardId.startsWith(""+CCID:"")) {cirquitCardId = cirquitCardId.substring(""+CCID:"".length()).trim();}this.iccid = cirquitCardId;}}}}return this.iccid;}}"	1
4303	public class A {private void waitUntilSyncDone() {final CheckpointManager checkpointManager = storage.getCheckpointManager();final long messageCheckpointOffset = checkpointManager.getMessageCheckpointOffset();final long actionCheckpointOffset = checkpointManager.getActionCheckpointOffset();while (true) {final long maxMessageOffset = storage.getMaxMessageOffset();final long maxActionLogOffset = storage.getMaxActionLogOffset();if (maxMessageOffset >= messageCheckpointOffset&& maxActionLogOffset >= actionCheckpointOffset) {return;}try {TimeUnit.SECONDS.sleep(2);} catch (InterruptedException ignore) {}}}}	2
4304	public class A {public boolean checkParams(Object params) {return true;}}	1
4305	public class A {private void createForeignKey(EntityType entityType, Attribute attr) {String createForeignKeySql = getSqlCreateForeignKey(entityType, attr);if (LOG.isDebugEnabled()) {if (LOG.isTraceEnabled()) {}}jdbcTemplate.execute(createForeignKeySql);}}	2
4306	public class A {@Overridepublic void establishConnection(String serverIp, int serverPort) throws SyncConnectionException {RpcTransportFactory.setDefaultBufferCapacity(ioTDBConfig.getThriftDefaultBufferSize());RpcTransportFactory.setThriftMaxFrameSize(ioTDBConfig.getThriftMaxFrameSize());try {transport =RpcTransportFactory.INSTANCE.getTransport(TSocketWrapper.wrap(tConfiguration, serverIp, serverPort, TIMEOUT_MS));TProtocol protocol;if (ioTDBConfig.isRpcThriftCompressionEnable()) {protocol = new TCompactProtocol(transport);} else {protocol = new TBinaryProtocol(transport);}serviceClient = new SyncService.Client(protocol);if (!transport.isOpen()) {transport.open();}} catch (TTransportException e) {throw new SyncConnectionException(e);}}}	1
4307	public class A {@NotNullpublic List<Ref> createBranches(@NotNull String prefix, int number) throws GitAPIException {List<Ref> refs = new ArrayList<>();for (int i = 1; i < number + 1; i++) {Ref ref = client.branchCreate().setName(prefix + i).call();refs.add(ref);}return refs;}}	1
4308	public class A {@Afterpublic void removeEntities() {for (String projectId : projectsMap.keySet()) {DeleteProject deleteProject = DeleteProject.newBuilder().setId(projectId).build();DeleteProject.Response deleteProjectResponse =projectServiceStub.deleteProject(deleteProject);assertTrue(deleteProjectResponse.getStatus());}projectsMap = new HashMap<>();experimentMap = new HashMap<>();experimentRunMap = new HashMap<>();}}	2
4309	public class A {@Overridepublic void emitTuples() {if (testTuples == null || testTuples.isEmpty()) {if (blockEndStream) {return;}BaseOperator.shutdown();}if (first) {List<T> tuples = testTuples.remove(0);for (T t : tuples) {output.emit(t);}first = false;}}}	1
4310	public class A {protected void notifyMessageListeners(Message[] messages) throws MessagingException {if (_log.isDebugEnabled()) {}for (Message message : messages) {if (_log.isDebugEnabled()) {}String from = getEmailAddress(message.getFrom());List<String> recipients = getEmailAddresses(message.getRecipients(Message.RecipientType.TO));if (_log.isDebugEnabled()) {}for (MessageListener messageListener : _messageListenerWrappers.values()) {try {if (messageListener.accept(from, recipients, message)) {messageListener.deliver(from, recipients, message);}} catch (MessageListenerException messageListenerException) {}}}}}	5
4311	"public class A {private void setupCouchbaseClient() throws URISyntaxException, IOException {if (mc != null) {mc.shutdown();}final List<URI> uris = getURIs();mc = new CouchbaseClient(uris, ""default"", """");}}"	2
4312	"public class A {@Testpublic void obtainLocationWithGeography() throws Exception {mgmt.getBrooklynProperties().put(""brooklyn.location.named.lhx"", ""localhost"");mgmt.getBrooklynProperties().put(""brooklyn.location.named.lhx.latitude"", 42d);mgmt.getBrooklynProperties().put(""brooklyn.location.named.lhx.longitude"", -20d);MachineProvisioningLocation<?> p =(MachineProvisioningLocation<?>) mgmt.getLocationRegistry().getLocationManaged(""named:lhx"");SshMachineLocation m = (SshMachineLocation) p.obtain(MutableMap.of());HostGeoInfo geo = HostGeoInfo.fromLocation(m);Assert.assertEquals(geo.latitude, 42d, 0.00001);Assert.assertEquals(geo.longitude, -20d, 0.00001);}}"	1
4313	"public class A {@Overridepublic void assignUsers(String name, Collection<String> users)throws SecurityManagementException {if (name == null) {throw new NullPointerException();}if (users != null) {if (users.isEmpty()) {throw new RuntimeException(""The realm based on properties file does not allow groups with no users assigned."");}for (String username : users) {try {final String groupsStr = groupsPropertiesFileLoader.getProperties().getProperty(username);Set<String> groupSet = null;if (groupsStr != null && groupsStr.trim().length() > 0) {String[] gs = groupsStr.split("","");groupSet = new HashSet<String>(gs.length);Collections.addAll(groupSet, gs);} else {groupSet = new HashSet<String>(1);}groupSet.add(name);final String errorMsg = ""Error updating groups for user "" + username;final String newGroupsStr = StringUtils.join(groupSet, ',');updateGroupProperty(username, newGroupsStr, errorMsg);} catch (IOException e) {throw new SecurityManagementException(e);}}}}}"	1
4314	public class A {protected void parseSelectedCiphersuite(HelloRetryRequestMessage message) {message.setSelectedCipherSuite(parseByteArrayField(HandshakeByteLength.CIPHER_SUITE));}}	1
4315	public class A {@Overridepublic List<Snapshot> call() throws Exception {List<Snapshot> remoteSnapshots = api.snapshotApi().list(new DepthOptions().depth(1));return remoteSnapshots;}}	2
4316	public class A {@Overridepublic void finish() {if (log.isDebugEnabled()) {}super.finish();queue.remove(transfer);source.shutdown();destination.shutdown();}}	1
4317	"public class A {@Overridepublic void leaderReport(TopicName topic, int partitionGroup, int leaderBrokerId, Set<Integer> isrId, int termId) {TopicConfig topicConfig = doGetTopicConfig(topic);if (topicConfig == null) {return;}PartitionGroup group = null;Iterator<PartitionGroup> groupIterator = topicConfig.getPartitionGroups().values().iterator();while (groupIterator.hasNext()) {PartitionGroup pgroup = groupIterator.next();if (pgroup.getGroup() == partitionGroup) {group = pgroup;break;}}if (null == group) {throw new RuntimeException(String.format(""topic[%s] group[%s] does not exist"", topic, partitionGroup));}group.setIsrs(isrId);group.setLeader(leaderBrokerId);group.setTerm(termId);metaManager.leaderReport(group);}}"	2
4318	"public class A {@Overridepublic final synchronized void filterParams(final Config params, boolean fireCommand) {String input = params.getProperty(""value"").trim();int parsed = getMin();try {if (input.startsWith(""++"")) {parsed = getValue() + Integer.parseInt(input.replace(""++"", """"));} else {if (input.startsWith(""--"")) {parsed = getValue() - Integer.parseInt(input.replace(""--"", """"));} else {parsed = (int) Double.parseDouble(input);}}} catch (NumberFormatException numberFormatException) {}if (""next"".equalsIgnoreCase(input)) {parsed = getValue() + getStep();}if (""previous"".equalsIgnoreCase(input)) {parsed = getValue() - getStep();}if (""opposite"".equalsIgnoreCase(input)) {}performValueChange(parsed, params, fireCommand);}}"	1
4319	"public class A {private void updateControllerStateChannel() {try {String state = ihc.getControllerState().getState();String value;switch (state) {case IhcClient.CONTROLLER_STATE_INITIALIZE:value = ""Initialize"";break;case IhcClient.CONTROLLER_STATE_READY:value = ""Ready"";break;default:value = ""Unknown state: "" + state;}updateState(new ChannelUID(getThing().getUID(), CHANNEL_CONTROLLER_STATE), new StringType(value));} catch (IhcExecption e) {}}}"	1
4320	public class A {public void sendReply(long transactionId, String message) {if (routeModified) {sendModifiedReply(transactionId, message);} else {sendAgreeMsg(transactionId, message);}routeModified = false;}}	1
4321	public class A {public void shutdown() {if (clusterTopologyRefreshActivated.compareAndSet(true, false)) {ScheduledFuture<?> scheduledFuture = clusterTopologyRefreshFuture.get();try {scheduledFuture.cancel(false);clusterTopologyRefreshFuture.set(null);} catch (Exception e) {}}}}	1
4322	public class A {@Overridepublic void onExchangeDone(Route route, Exchange exchange) {if (isExcluded(route.getId())) {return;}if (LOG.isTraceEnabled()) {}Entity entity = getTraceEntityFromExchange(exchange);AWSXRay.setTraceEntity(entity);try {SegmentDecorator sd = getSegmentDecorator(route.getEndpoint());sd.post(entity, exchange, route.getEndpoint());entity.close();if (LOG.isTraceEnabled()) {}exchange.setProperty(CURRENT_SEGMENT, entity.getParent());} catch (AlreadyEmittedException aeEx) {} catch (Exception e) {} finally {AWSXRay.setTraceEntity(null);}}}	4
4323	"public class A {@Test@Tag(GlobalConstants.TAG_GITHUB_RELATED)@Tag(GlobalConstants.TAG_SKIP_METRICS)public final void givenAGitHubModuleReadme_whenAnalysingTheReadme_thenLinksToAndFromGithubMatch()throws IOException {tutorialsRepoCrawlerController.startCrawlingWithAFreshController(CrawlerForFindingReadmeURLs.class, Runtime.getRuntime().availableProcessors());List<String> readmeURLs =Utils.getDiscoveredLinks(tutorialsRepoCrawlerController.getDiscoveredURLs());Multimap<String, LinkVO> badURLs = ArrayListMultimap.create();Map<String, Integer> articleCountByReadme = new HashMap<>();readmeURLs.forEach(readmeURL -> {try {page.setUrl(readmeURL);page.loadUrl();List<LinkVO> urlsInReadmeFile = page.getLinksToTheBaeldungSite();if (readmeURL.toLowerCase().contains(""spring"")) {if (urlsInReadmeFile.size() > limitForSpringRelatedReadmeHavingArticles) {articleCountByReadme.put(readmeURL, urlsInReadmeFile.size());}} else if (urlsInReadmeFile.size() > limitForReadmeHavingArticles) {articleCountByReadme.put(readmeURL, urlsInReadmeFile.size());}String reamdmeParentURL = Utils.getTheParentOfReadme(readmeURL);urlsInReadmeFile.forEach(link -> {page.setUrl(link.getLink());page.loadUrlWithThrottling();if (!page.getWebDriver().getPageSource().toLowerCase().contains(reamdmeParentURL.toLowerCase())) {badURLs.put(readmeURL, link);}});} catch (Exception e) {}});if (badURLs.size() > 0 || articleCountByReadme.size() > 0) {recordMetrics(badURLs.size(), TestMetricTypes.FAILED);recordMetrics(articleCountByReadme.size(), TestMetricTypes.FAILED);getMetrics(TestMetricTypes.FAILED);failTestWithLoggingTotalNoOfFailures(""\nwe found issues with following READMEs""+ Utils.getErrorMessageForInvalidLinksInReadmeFiles(badURLs)+ Utils.compileReadmeCountResults(articleCountByReadme,GlobalConstants.GivenAGitHubModuleReadme_whenAnalysingTheReadme_thentheReadmeDoesNotLikTooManyArticles));}}}"	1
4324	"public class A {@Test(groups = {""res-mgmt""})public void updateServerInfo() {serverInfoDao =new MockUp<IServerInfoDAO>() {@MockList<ServerInfoEntity> findAll() {List<ServerInfoEntity> serverInfos = new ArrayList<ServerInfoEntity>();ServerInfoEntity serverInfo = new ServerInfoEntity();serverInfo.setResourceInitialized(false);serverInfos.add(serverInfo);return serverInfos;}@Mock(invocations = 1)void update(ServerInfoEntity serverInfo) {}}.getMockInstance();service.setServerInfoDao(serverInfoDao);service.updateOrInsertServerInfo();}}"	1
4325	public class A {@Overridepublic Integer getScore(final NamedOperation operation, final ScoreResolver defaultScoreResolver) {Integer namedOpScore = null;NamedOperationDetail namedOpDetail = null;if (null == operation) {return 0;}try {namedOpDetail = cache.getFromCache(operation.getOperationName());} catch (final CacheOperationFailedException e) {}if (null != namedOpDetail) {namedOpScore = namedOpDetail.getScore();if (null == namedOpScore && null != defaultScoreResolver) {namedOpScore =defaultScoreResolver.getScore(namedOpDetail.getOperationChain(operation.getParameters()));}}if (null != defaultScoreResolver) {if (null == namedOpScore) {namedOpScore = 0;}List parameterOperations = operation.getOperations();if (null != parameterOperations) {for (final Object objectOperation : parameterOperations) {Operation op = (Operation) objectOperation;Integer parameterOpScore = defaultScoreResolver.getScore(op);namedOpScore += parameterOpScore;}}}return namedOpScore;}}	1
4326	"public class A {protected void assign(boolean shouldAttachHandler) {if (this.topicSubscriptions.isEmpty()) {throw new IllegalArgumentException(""At least one topic to subscribe has to be specified!"");}this.shouldAttachSubscriberHandler = shouldAttachHandler;this.assigned = true;this.partitionsAssignmentAndSeek();}}"	1
4327	public class A {private int batchExecuteUpdate(final String sql, final List<List<Object>> params) {try (Connection con = dataSource.getConnection()) {con.setAutoCommit(false);try (PreparedStatement ps = con.prepareStatement(sql)) {for (List<Object> each : params) {int index = 1;for (Object param : each) {ps.setObject(index, param);index++;}ps.addBatch();}int[] count = ps.executeBatch();if (params.size() != Arrays.stream(count).sum()) {con.rollback();return 0;}con.commit();return params.size();} catch (SQLException ex) {con.rollback();return FAIL_ROWS;}} catch (SQLException ex) {return FAIL_ROWS;}}}	1
4328	"public class A {@Overrideprotected void doOpen() throws Exception {if (resource == null) throw new IllegalStateException(""A resource has not been set."");if (!resource.exists()) {if (strict) {throw new IllegalStateException(""Input resource must exist (reader is in 'strict' mode): "" + resource);} else {return;}}ldifParser.open();for (int i = 0; i < recordsToSkip; i++) {LdapAttributes record = ldifParser.getRecord();if (skippedRecordsCallback != null) {skippedRecordsCallback.handleRecord(record);}}}}"	1
4329	"public class A {private static String getClusterControllerServicePackageName(Context context) {Intent intent = new Intent(""io.joynr.android.action.COMMUNICATE"");List<ResolveInfo> services = context.getPackageManager().queryIntentServices(intent, 0);if (services == null || services.isEmpty()) {return null;}return services.get(0).serviceInfo.applicationInfo.packageName;}}"	1
4330	public class A {private Iterator<DomainConfiguration> getExistingSnapshotJobGenerationMethod(final DomainDAO dao, final HarvestDefinition previousHd) {Iterator<HarvestInfo> i = dao.getHarvestInfoBasedOnPreviousHarvestDefinition(previousHd);return new FilterIterator<HarvestInfo, DomainConfiguration>(i) {protected DomainConfiguration filter(HarvestInfo harvestInfo) {if (harvestInfo.getStopReason() == StopReason.DOWNLOAD_COMPLETE|| harvestInfo.getStopReason() == StopReason.DOWNLOAD_UNFINISHED) {return null;}DomainConfiguration config = getConfigurationFromPreviousHarvest(harvestInfo, dao);if (harvestInfo.getStopReason() == StopReason.CONFIG_SIZE_LIMIT) {int compare =NumberUtils.compareInf(config.getMaxBytes(), harvestInfo.getSizeDataRetrieved());if (compare < 1) {return null;} else {return config;}}if (harvestInfo.getStopReason() == StopReason.CONFIG_OBJECT_LIMIT) {int compare =NumberUtils.compareInf(config.getMaxObjects(), harvestInfo.getCountObjectRetrieved());if (compare < 1) {return null;} else {return config;}}Domain d = dao.read(config.getDomainName());if (d.getAliasInfo() != null && !d.getAliasInfo().isExpired()) {return null;} else {return config;}}};}}	2
4331	"public class A {private void pickUserAccount() {try {String[] accountTypes = new String[] {""com.google""};Intent intent =AccountPicker.newChooseAccountIntent(null, null, accountTypes, true, null, null, null, null);if (activity == null) return;int result = GooglePlayServicesUtil.isGooglePlayServicesAvailable(activity);if (ConnectionResult.SUCCESS == result) {activity.startActivityForResult(intent, REQUEST_CODE_PICK_ACCOUNT);} else {GooglePlayServicesUtil.getErrorDialog(result, activity, 100).show();}} catch (ActivityNotFoundException ex) {}}}"	3
4332	public class A {private boolean setOrVerifyRelation(PatientReference patientA,PatientReference patientC,String aToBrelation,String bToCrelation) {if (patientC.equals(patientA)) {return false;}Integer indexAtoB = DERIVED_RELATIONS_INDEX.get(aToBrelation);Integer indexBtoC = DERIVED_RELATIONS_INDEX.get(bToCrelation);if (indexAtoB == null || indexBtoC == null) {return false;}String expectedAtoC = DERIVED_RELATIONS_TABLE[indexBtoC][indexAtoB];String actualAtoC = this.getRelation(patientA, patientC);if (actualAtoC != null) {if (!actualAtoC.equals(expectedAtoC)) {this.complicatedDetected = true;}} else {this.addRelation(patientA, patientC, expectedAtoC);return true;}return false;}}	1
4333	public class A {@Overridepublic void onOpen(CoreSession coreSession, Callback callback) {this.coreSession = coreSession;callback.succeeded();}}	1
4334	public class A {@Overridepublic void initialize() {groupConfig = getConfigAs(GroupConfig.class);serverPort = groupConfig.getServerPort();pollTimeInSeconds = new BigDecimal(groupConfig.getPollTime());pollTimeInSeconds = pollTimeInSeconds.divide(new BigDecimal(1000), 1, RoundingMode.HALF_UP);motionChangesOrder = groupConfig.getMotionChangesOrder();if (serverPort == -1) {} else if (serverPort < 1025) {}if (groupConfig.getServerPort() > 0) {startStreamServer(true);}updateStatus(ThingStatus.ONLINE);pollCameraGroupJob =pollCameraGroup.scheduleWithFixedDelay(this::pollCameraGroup, 10000, groupConfig.getPollTime(), TimeUnit.MILLISECONDS);}}	2
4335	public class A {@Overridepublic boolean isMatched(RangerAccessRequest request) {if (LOG.isDebugEnabled()) {}boolean matched = false;RangerAccessRequest readOnlyRequest = request.getReadOnlyCopy();RangerScriptExecutionContext context = new RangerScriptExecutionContext(readOnlyRequest);Set<String> resourceTags = context.getAllTagTypes();if (resourceTags != null) {matched = (!Collections.disjoint(resourceTags, policyConditionTags));}if (LOG.isDebugEnabled()) {}return matched;}}	2
4336	public class A {private Job initNewJob(HarvestDefinition harvest, DomainConfiguration cfg) {HarvestJobGenerationState jobsUnderConstruction = getExistingStateForHarvest(harvest);Job job = getNewJob(harvest, cfg);final DomainConfigurationKey domainConfigurationKey = new DomainConfigurationKey(cfg);jobsUnderConstruction.put(domainConfigurationKey, job);return job;}}	1
4337	"public class A {@Overridepublic void updateReadOnlyHdfsPolicy(String categoryName, String feedName, List<String> groups, List<String> hdfsPaths) {String hdfsPathForACLCreation = convertListToString(hdfsPaths, "","");String groupListStringyfied = convertListToString(groups, "","");try {sentryClientObject.createAcl(sentryConnection.getHadoopConfiguration(),groupListStringyfied,hdfsPathForACLCreation,HDFS_READ_ONLY_PERMISSION);} catch (Exception e) {throw new RuntimeException(e);}}}"	1
4338	"public class A {@Overridepublic void init() throws MessagingException {passThrough = (getInitParameter(""passThrough"", ""true"").compareToIgnoreCase(""true"") == 0);String targetUrl = getInitParameter(""url"");parameterKey = getInitParameter(""parameterKey"");parameterValue = getInitParameter(""parameterValue"");if (targetUrl == null || targetUrl.equals("""")) {throw new MessagingException(""Please configure a targetUrl (\""url\"")"");} else {try {url = new URL(targetUrl).toExternalForm();} catch (MalformedURLException e) {throw new MessagingException(""Unable to contruct URL object from url"");}}if (LOGGER.isDebugEnabled()) {}}}"	1
4339	"public class A {public void testIncludeFields204() {try {Set<String> includeFields =new HashSet<String>(Arrays.asList(""system_info.userId"",""place.area"",""system_info.date"",""place.country"",""system_info.removed"",""system_info.premium"",""place.default"",""system_info.price""));String mongoDocument =copyToStringFromClasspath(""/org/elasticsearch/river/mongodb/test-include-fields-document-204.json"");DBObject dbObject = (DBObject) JSON.parse(mongoDocument);DBObject filteredObject = MongoDBHelper.applyIncludeFields(dbObject, includeFields);Assert.assertNotNull(filteredObject);Assert.assertFalse(filteredObject.containsField(""gross_weight""));Assert.assertTrue(((DBObject) filteredObject.get(""system_info"")).containsField(""userId""));Assert.assertTrue(((DBObject) filteredObject.get(""place"")).containsField(""area""));Assert.assertTrue(((DBObject) filteredObject.get(""system_info"")).containsField(""date""));Assert.assertTrue(((DBObject) filteredObject.get(""place"")).containsField(""country""));Assert.assertTrue(((DBObject) filteredObject.get(""system_info"")).containsField(""removed""));Assert.assertTrue(((DBObject) filteredObject.get(""system_info"")).containsField(""premium""));Assert.assertTrue(((DBObject) filteredObject.get(""place"")).containsField(""default""));Assert.assertTrue(((DBObject) filteredObject.get(""system_info"")).containsField(""price""));Assert.assertFalse(filteredObject.containsField(""truck_mounted_crane""));Assert.assertFalse(((DBObject) filteredObject.get(""system_info"")).containsField(""photos""));} catch (Throwable t) {Assert.fail();}}}"	3
4340	"public class A {@Testpublic void paxLoggingSpecificAvalonFactory() {Logger log = AvalonLogFactory.getLogger(this.getClass().getName());assertTrue(log.getClass().getName().startsWith(""org.ops4j.pax.logging.avalon""));}}"	1
4341	"public class A {@Testpublic void testGetExecutionCount() throws Exception {final String jobId = ""Job-1"";long time = 10000;final CountDownLatch done = new CountDownLatch(10);String str = new String(""test"");scheduler.schedule(jobId, new ByteSequence(str.getBytes()), """", time, 1000, 10);int size = scheduler.getAllJobs().size();assertEquals(size, 1);scheduler.addListener(new JobListener() {@Overridepublic void scheduledJob(String id, ByteSequence job) {done.countDown();}});List<Job> jobs = scheduler.getNextScheduleJobs();assertEquals(1, jobs.size());Job job = jobs.get(0);assertEquals(jobId, job.getJobId());assertEquals(0, job.getExecutionCount());assertTrue(""Should have fired ten times."", done.await(60, TimeUnit.SECONDS));assertTrue(job.getExecutionCount() >= 9);}}"	1
4342	"public class A {@GET@Path(""/{userid}/{start}/{end}"")public List<AppointmentDTO> rangeForUser(@QueryParam(""sid"") @WebParam(name = ""sid"") String sid,@PathParam(""userid"") @WebParam(name = ""userid"") long userid,@PathParam(""start"") @WebParam(name = ""start"") Calendar start,@PathParam(""end"") @WebParam(name = ""end"") Calendar end)throws ServiceException {return performCall(sid,User.Right.SOAP,sd -> AppointmentDTO.list(dao.getInRange(userid, start.getTime(), end.getTime())));}}"	1
4343	"public class A {@SuppressWarnings({""rawtypes"", ""unchecked""})public <V extendsAbstractNodeView<?>& InteractiveView<?, ? extends ViewContent, ? extends ViewContent>>V getInteractiveView(final String title) {LOGGER.assertLog(NodeContext.getContext() != null,""No node context available, please check call hierarchy and fix it"");if (!(m_factory instanceof InteractiveNodeFactoryExtension)) {String errorMsg = ""Interactive View instantiation failed: wrong factory!"";throw new RuntimeException(errorMsg);}try {return (V) ((InteractiveNodeFactoryExtension) m_factory).createInteractiveView(m_model);} catch (Throwable e) {String errorMsg = ""Interactive View instantiation failed: "" + e.getMessage();throw new RuntimeException(errorMsg, e);}}}"	2
4344	public class A {protected void startInternal() {List<String> command = new ArrayList<String>();command.addAll(service.getCommand());Map<String, String> env = service.getEnvironment();ProcessBuilder pb = new ProcessBuilder().command(command);for (Map.Entry<String, String> envVar : env.entrySet()) {pb.environment().put(envVar.getKey(), envVar.getValue());}StreamWriter inputWriter = getInputWriter();StreamReader outputReader = getOutputReader();StreamReader errorReader = getErrorReader();if (inputWriter == null) {pb.redirectInput(ProcessBuilder.Redirect.INHERIT);}if (outputReader == null) {pb.redirectOutput(ProcessBuilder.Redirect.INHERIT);}if (errorReader == null) {pb.redirectError(ProcessBuilder.Redirect.INHERIT);}try {process = pb.start();if (inputWriter != null) inputWriter.setStream(process.getOutputStream());if (outputReader != null) outputReader.setStream(process.getInputStream());if (errorReader != null) errorReader.setStream(process.getErrorStream());setPid(getProcessId(process));} catch (IOException e) {}}}	3
4345	"public class A {@Overrideprotected Object executeWithSubject() throws Exception {final PrintStream console = System.out;final ProgressCallback progressCallback =progress -> {console.printf(""\r%d%%"", progress);console.flush();};final FeatureIndexer.IndexCallback featureIndexCallback =count -> {console.printf(""\r%d features indexed"", count);console.flush();};console.println(""Updating..."");try {if (isResourceGeoJSON()) {featureIndexer.updateIndex(resource, featureExtractor, create, featureIndexCallback);} else {geoEntryIndexer.updateIndex(resource, geoEntryExtractor, create, progressCallback);}console.println(""\nDone."");} catch (GeoEntryExtractionException | FeatureExtractionException e) {console.printf(""Could not extract data from resource %s.%n Message: %s%n Check the logs for more""+ "" details.%n"",resource, e.getMessage());} catch (GeoEntryIndexingException | FeatureIndexingException e) {console.printf(""Could not index the  data.%n Message: %s%n Check the logs for more details.%n"",e.getMessage());} catch (GeoNamesRemoteDownloadException e) {console.printf(""Could not download the GeoNames file %s.%n  Message: %s%n Check the logs for more""+ "" details.%n"",resource, e.getMessage());}return null;}}"	3
4346	public class A {@Overridepublic boolean areAllPrimaryKeyAttributesPopulated() {if (metadata != null) {List<String> primaryKeyAttributeNames = metadata.getPrimaryKeyAttributeNames();if (primaryKeyAttributeNames != null) {for (String primaryKeyAttributeName : primaryKeyAttributeNames) {Object propValue = getPropertyValue(primaryKeyAttributeName);if (propValue == null|| (propValue instanceof String && StringUtils.isBlank((String) propValue))) {return false;}}}return true;} else {return true;}}}	1
4347	public class A {@Overridepublic boolean choose(Outcome outcome, Cards cards, TargetCard target, Game game) {if (cards == null || cards.isEmpty()) {return true;}UUID abilityControllerId = playerId;if (target.getTargetController() != null && target.getAbilityController() != null) {abilityControllerId = target.getAbilityController();}List<Card> cardChoices = new ArrayList<>(cards.getCards(target.getFilter(), game));while (!target.doneChosing()) {Card card = pickTarget(abilityControllerId, cardChoices, outcome, target, null, game);if (card != null) {target.add(card.getId(), game);cardChoices.remove(card);} else {return target.getTargets().size() >= target.getNumberOfTargets();}if (outcome == Outcome.Neutral&& target.getTargets().size()> target.getNumberOfTargets()+ (target.getMaxNumberOfTargets() - target.getNumberOfTargets()) / 2) {return true;}}return true;}}	1
4348	"public class A {@GuardedBy(""lock"")private CompletableFuture<Void> stopJobMasterServiceProcess() {jobMasterGatewayFuture.completeExceptionally(new FlinkException(""Cannot obtain JobMasterGateway because the JobMaster lost leadership.""));jobMasterGatewayFuture = new CompletableFuture<>();hasCurrentLeaderBeenCancelled = false;return jobMasterServiceProcess.closeAsync();}}"	1
4349	"public class A {void updateGroupMemberDt(final String groupId, final long dt) {Connection connection = null;PreparedStatement statement = null;try {connection = DBUtil.getConnection();String sql = ""update t_group set `_member_dt` = ?, `_dt` = ? where `_gid` = ?"";statement = connection.prepareStatement(sql);int index = 1;statement.setLong(index++, dt);statement.setLong(index++, dt);statement.setString(index++, groupId);int c = statement.executeUpdate();} catch (SQLException e) {e.printStackTrace();Utility.printExecption(LOG, e, RDBS_Exception);} finally {DBUtil.closeDB(connection, statement);}}}"	1
4350	public class A {@Overridepublic void handleCommand(ChannelUID channelUID, Command command) {if (command instanceof RefreshType) {if (channelUID.getId().equals(CHANNEL_STATUS)&& channelUID.getThingUID().equals(getThing().getUID())) {scheduleImmediateRefresh(0);} else {scheduleImmediateRefresh(REFRESH_DELAY_SECONDS);}} else {}}}	4
4351	"public class A {public Collection<SaplDocument> retrievePolicyDocuments(Log log, MavenProject project, String policyPath) throws MojoExecutionException {DefaultSAPLInterpreter interpreter = new DefaultSAPLInterpreter();File policyDir = findPolicyDirOnClasspath(project, policyPath);File[] files = policyDir.listFiles();if (files == null) {throw new MojoExecutionException(String.format(ERROR_PATH_WAS_FILE, policyDir.getAbsolutePath()));}List<SaplDocument> saplDocuments = new LinkedList<>();for (File file : files) {if (file.isFile() && file.getName().endsWith("".sapl"")) {String fileContent = null;try {fileContent = Files.readString(file.toPath());int linecount = Files.readAllLines(file.toPath()).size();saplDocuments.add(new SaplDocument(file.toPath(), linecount, interpreter.parse(fileContent)));} catch (IOException e) {}}}return saplDocuments;}}"	3
4352	"public class A {@Testpublic void testInOut() throws Exception {StagedInstall.getInstance().startAgent(""a1"", agentProps);TimeUnit.SECONDS.sleep(10);StringBuffer sb = new StringBuffer();for (int i = 1; i <= 100; i++) {sb.append(i).append(""\n"");}String expectedOutput = sb.toString();File[] sinkOutputDirChildren = sinkOutputDir.listFiles();Assert.assertEquals(""Expected FILE_ROLL sink's dir to have only 1 child,""+ "" but found ""+ sinkOutputDirChildren.length+ "" children."",1,sinkOutputDirChildren.length);File actualOutput = sinkOutputDirChildren[0];if (!Files.toString(actualOutput, Charsets.UTF_8).equals(expectedOutput)) {throw new AssertionError(""FILE_ROLL sink's actual output doesn't "" + ""match expected output."");}}}"	4
4353	"public class A {protected static String getDoasUser(HttpServletRequest request) {String doAsUser = """";String queryString = request.getQueryString();if (queryString != null) {String[] pairs = queryString.split(QUERY_STRING_DELIMITER);try {for (String pair : pairs) {if (pair.startsWith(DOAS_QUERY_STRING)) {doAsUser =URLDecoder.decode(pair.substring(DOAS_QUERY_STRING.length()), ""UTF-8"").trim();}}} catch (UnsupportedEncodingException ex) {}}return doAsUser.isEmpty() ? null : doAsUser;}}"	1
4354	public class A {SessionListener createSessionListener() {return new SessionListener() {@Overridepublic void sessionEvent(final Session session, final Event event) {ClientSession clientSession = (ClientSession) session;switch (event) {case KeyEstablished:doAuth(clientSession);break;case Authenticated:CallHomeSessionContext.getFrom(clientSession).openNetconfChannel();break;default:break;}}@Overridepublic void sessionCreated(final Session session) {}@Overridepublic void sessionClosed(final Session session) {CallHomeSessionContext ctx = CallHomeSessionContext.getFrom((ClientSession) session);if (ctx != null) {ctx.removeSelf();}}private void doAuth(final ClientSession session) {try {final AuthFuture authFuture = CallHomeSessionContext.getFrom(session).authorize();authFuture.addListener(newAuthSshFutureListener(session));} catch (IOException e) {}}};}}	4
4355	public class A {@Overridepublic void close() {removeUpTo(CURRENT_TXN, null);if (_stack.size() == 0) {cleanup();}}}	1
4356	public class A {private void handleEvent(final String type, final String payload, final String topic, final @Nullable String source) {final EventFactory eventFactory = typedEventFactories.get(type);if (eventFactory == null) {return;}final Set<EventSubscriber> eventSubscribers = getEventSubscribers(type);if (eventSubscribers.isEmpty()) {return;}final Event event = createEvent(eventFactory, type, payload, topic, source);if (event == null) {return;}dispatchEvent(eventSubscribers, event);}}	1
4357	"public class A {private static void saveBoundingBoxImage(Image img, DetectedObjects detection)throws IOException {Path outputDir = Paths.get(""build/output"");Files.createDirectories(outputDir);Image newImage = img.duplicate(Image.Type.TYPE_INT_ARGB);newImage.drawBoundingBoxes(detection);Path imagePath = outputDir.resolve(""detected-dog_bike_car.png"");newImage.save(Files.newOutputStream(imagePath), ""png"");}}"	1
4358	"public class A {public void init(WordpressAPIConfiguration config) {checkNotNull(emptyToNull(config.getApiUrl()),""Please inform the Wordpress API url , eg.: http://myblog.com/wp-json/wp"");if (isNullOrEmpty(config.getApiVersion())) {config.setApiVersion(WordpressConstants.API_VERSION);}final WordpressServicePosts servicePosts =new WordpressServicePostsAdapter(config.getApiUrl(), config.getApiVersion());final WordpressServiceUsers serviceUsers =new WordpressServiceUsersAdapter(config.getApiUrl(), config.getApiVersion());servicePosts.setWordpressAuthentication(config.getAuthentication());serviceUsers.setWordpressAuthentication(config.getAuthentication());this.services = new HashMap<>();this.services.put(WordpressServicePosts.class, servicePosts);this.services.put(WordpressServiceUsers.class, serviceUsers);this.configuration = config;}}"	1
4359	public class A {public NodeSet findAncestorsByTagName(byte type, QName qname, int axis, DocumentSet docs, NodeSet contextSet, int contextId) {final NewArrayNodeSet result = new NewArrayNodeSet();try (final ManagedLock<ReentrantLock> btreeLock =index.lockManager.acquireBtreeReadLock(index.btree.getLockName())) {for (final NodeProxy descendant : contextSet) {NodeId parentId;if (axis == Constants.ANCESTOR_SELF_AXIS || axis == Constants.SELF_AXIS) {parentId = descendant.getNodeId();} else {parentId = descendant.getNodeId().getParentId();}final DocumentImpl doc = descendant.getOwnerDocument();while (parentId != NodeId.DOCUMENT_NODE) {final byte[] key = computeKey(type, qname, doc.getDocId(), parentId);final long address = index.btree.findValue(new Value(key));if (address != -1) {final NodeProxy storedNode =new NodeProxy(doc,parentId,type == ElementValue.ATTRIBUTE ? Node.ATTRIBUTE_NODE : Node.ELEMENT_NODE,address);result.add(storedNode);if (Expression.NO_CONTEXT_ID != contextId) {storedNode.deepCopyContext(descendant, contextId);} else {storedNode.copyContext(descendant);}if (contextSet.getTrackMatches()) {storedNode.addMatches(descendant);}}if (axis == Constants.SELF_AXIS || axis == Constants.PARENT_AXIS) {break;}parentId = parentId.getParentId();}}} catch (final LockException e) {} catch (final Exception e) {}result.sort(true);return result;}}	2
4360	public class A {public static void addUserGroupRoles(long userId, long groupId, long[] roleIds)throws RemoteException {try {UserGroupRoleServiceUtil.addUserGroupRoles(userId, groupId, roleIds);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4361	public class A {public Provider getProviderByUUID(String uuid) {Provider provider = null;IProvider storedProvider = providerDAO.getByUUID(uuid);if (storedProvider != null) provider = modelConverter.getProviderXML(storedProvider);return provider;}}	2
4362	public class A {private JavaProjectBuilder _getJavaProjectBuilder(String content) {JavaProjectBuilder javaProjectBuilder =new JavaProjectBuilder(new ThreadSafeSortedClassLibraryBuilder());try {javaProjectBuilder.addSource(new UnsyncStringReader(content));} catch (ParseException parseException) {if (_log.isDebugEnabled()) {}return null;}return javaProjectBuilder;}}	1
4363	"public class A {public void finishTransferFlowFiles(final CommunicationsSession commSession) throws IOException {if (postResult == null) {new IllegalStateException(""Data transfer has not started yet."");}commSession.getOutput().getOutputStream().close();try {if (!transferDataLatch.await(requestExpirationMillis, TimeUnit.MILLISECONDS)) {throw new IOException(""Awaiting transferDataLatch has been timeout."");}} catch (final InterruptedException e) {throw new IOException(""Awaiting transferDataLatch has been interrupted."", e);}stopExtendingTtl();final HttpResponse response;try {response = postResult.get(readTimeoutMillis, TimeUnit.MILLISECONDS);} catch (final ExecutionException e) {throw toIOException(e);} catch (TimeoutException | InterruptedException e) {throw new IOException(e);}final int responseCode = response.getStatusLine().getStatusCode();switch (responseCode) {case RESPONSE_CODE_ACCEPTED:final String receivedChecksum = EntityUtils.toString(response.getEntity());((HttpInput) commSession.getInput()).setInputStream(new ByteArrayInputStream(receivedChecksum.getBytes()));((HttpCommunicationsSession) commSession).setChecksum(receivedChecksum);break;default:try (InputStream content = response.getEntity().getContent()) {throw handleErrResponse(responseCode, content);}}}}"	3
4364	public class A {@Overridepublic Map<ReturnableData, Object> handle(final RequestWrapper request, final HttpSession session) {final User user = (User) session.getAttribute(SessionAttribute.USER);assert (user != null);if (!user.isAdmin()) {return error(ErrorCode.NOT_ADMIN);}if (null == request.getParameter(AjaxRequest.NICKNAME)|| request.getParameter(AjaxRequest.NICKNAME).isEmpty()) {return error(ErrorCode.NO_NICK_SPECIFIED);}final User kickUser = connectedUsers.getUser(request.getParameter(AjaxRequest.NICKNAME));if (null == kickUser) {return error(ErrorCode.NO_SUCH_USER);}final Map<ReturnableData, Object> kickData = new HashMap<ReturnableData, Object>();kickData.put(LongPollResponse.EVENT, LongPollEvent.KICKED.toString());final QueuedMessage qm = new QueuedMessage(MessageType.KICKED, kickData);kickUser.enqueueMessage(qm);connectedUsers.removeUser(kickUser, DisconnectReason.KICKED);return new HashMap<ReturnableData, Object>();}}	1
4365	"public class A {public EntityType getEntityType(final Accountdetailtype accountdetailtype, final Serializable detailkey)throws ApplicationException {EntityType entity = null;try {final Class aClass = Class.forName(accountdetailtype.getFullQualifiedName());final java.lang.reflect.Method method = aClass.getMethod(""getId"");final String dataType = method.getReturnType().getSimpleName();if (dataType.equals(""Long""))entity =(EntityType)persistenceService.getSession().load(aClass, Long.valueOf(detailkey.toString()));else entity = (EntityType) persistenceService.getSession().load(aClass, detailkey);} catch (final ClassCastException e) {throw new ApplicationException(e.getMessage());} catch (final Exception e) {throw new ApplicationException(e.getMessage());}return entity;}}"	4
4366	"public class A {private void checkCertValidity(CertificateDTO cert) {try {cert.getX509Cert().checkValidity();} catch (CertificateExpiredException ex) {expiredCert = true;HelperUtil.addMessageError(IMPORT_CERT_ERR_MSG_ID, ""Expired Certificate"");} catch (CertificateNotYetValidException ex) {HelperUtil.addMessageError(IMPORT_CERT_ERR_MSG_ID, ""Certificate not valid yet"");}}}"	2
4367	"public class A {private static PublicKey bytesToPublicKey(byte[] bytes) {PublicKey publicKey;try {EncodedKeySpec publicKeySpec = new X509EncodedKeySpec(bytes);KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");publicKey = keyFactory.generatePublic(publicKeySpec);} catch (NoSuchAlgorithmException | InvalidKeySpecException e) {throw new IllegalArgumentException(""Malformed public key!"");}return publicKey;}}"	1
4368	"public class A {public static Path findFlinkDist() {Optional<Path> distributionDirectory = DISTRIBUTION_DIRECTORY.get();if (!distributionDirectory.isPresent()) {Path projectRootPath;Optional<Path> projectRoot = PROJECT_ROOT_DIRECTORY.get();if (projectRoot.isPresent()) {projectRootPath = projectRoot.get();} else {Optional<Path> projectRootDirectory =findProjectRootDirectory(Paths.get("""").toAbsolutePath());if (projectRootDirectory.isPresent()) {projectRootPath = projectRootDirectory.get();} else {throw new IllegalArgumentException(""The 'distDir' property was not set and the flink-dist module could not be found""+ "" automatically. Please point the 'distDir' property to the directory""+ "" containing distribution; you can set it when running maven via""+ "" -DdistDir=<path> ."");}}Optional<Path> distribution = findDistribution(projectRootPath);if (!distribution.isPresent()) {throw new IllegalArgumentException(""The 'distDir' property was not set and a distribution could not be found""+ "" automatically. Please point the 'distDir' property to the directory containing""+ "" distribution; you can set it when running maven via -DdistDir=<path> ."");} else {distributionDirectory = distribution;}}return distributionDirectory.get();}}"	1
4369	"public class A {private String getPropertyValue(String key, String input) {if (propertiesComponent != null) {for (PropertiesFunction function : propertiesComponent.getFunctions().values()) {String token = function.getName() + "":"";if (key.startsWith(token)) {String remainder = key.substring(token.length());String value = function.apply(remainder);if (value == null) {throw new IllegalArgumentException(""Property with key [""+ key+ ""] using function [""+ function.getName()+ ""]""+ "" returned null value which is not allowed, from input: ""+ input);} else {if (log.isDebugEnabled()) {}return value;}}}}String defaultValue = null;if (defaultFallbackEnabled && key.contains(GET_OR_ELSE_TOKEN)) {defaultValue = StringHelper.after(key, GET_OR_ELSE_TOKEN);key = StringHelper.before(key, GET_OR_ELSE_TOKEN);}boolean optional = key != null && key.startsWith(OPTIONAL_TOKEN);if (optional) {key = key.substring(OPTIONAL_TOKEN.length());}String value = doGetPropertyValue(key);if (value == null && defaultValue != null) {value = defaultValue;}if (value == null) {if (!optional) {StringBuilder esb = new StringBuilder();esb.append(""Property with key ["").append(key).append(""] "");esb.append(""not found in properties from text: "").append(input);throw new IllegalArgumentException(esb.toString());} else {if (keepUnresolvedOptional) {return UNRESOLVED_PREFIX_TOKEN + OPTIONAL_TOKEN + key + UNRESOLVED_SUFFIX_TOKEN;} else {return null;}}}return value;}}"	3
4370	"public class A {@Testpublic void removeAction() throws CapabilityException {IAction action = new MockAction();action.setActionID(""mockAction"");queueManagerCapability.queueAction(action);Assert.assertTrue(queueManagerCapability.getActions().size() == 1);queueManagerCapability.clear();Assert.assertTrue(queueManagerCapability.getActions().size() == 0);}}"	2
4371	"public class A {private Partition instantiateDirectoryService() throws Exception {this.service = new DefaultDirectoryService();this.service.setInstanceId(INSTANCE_NAME);this.service.setInstanceLayout(new InstanceLayout(this.dataDirectory.toFile()));final CacheService cacheService = new CacheService();cacheService.initialize(this.service.getInstanceLayout());this.service.setCacheService(cacheService);initSchemaPartition();final File systemPartitionPath =new File(this.service.getInstanceLayout().getPartitionsDirectory(), ""system"");if (systemPartitionPath.exists() && !FileUtils.deleteQuietly(systemPartitionPath)) {}Partition systemPartition =createPartition(this.service.getDnFactory(),""system"",ServerDNConstants.SYSTEM_DN,systemPartitionPath);this.service.setSystemPartition(systemPartition);final Partition rodaPartition = addPartition(INSTANCE_NAME, this.ldapRootDN);addIndex(rodaPartition, OBJECT_CLASS, OU, UID);this.service.startup();final CoreSession session = this.service.getAdminSession();ModifyRequestImpl modifyRequestImpl = new ModifyRequestImpl();modifyRequestImpl.setName(new Dn(""cn=nis,ou=schema""));modifyRequestImpl.replace(""m-disabled"", ""FALSE"");session.modify(modifyRequestImpl);modifyRequestImpl = new ModifyRequestImpl();modifyRequestImpl.setName(new Dn(this.ldapAdminDN));modifyRequestImpl.replace(USER_PASSWORD, this.ldapAdminPassword);session.modify(modifyRequestImpl);return rodaPartition;}}"	1
4372	public class A {private boolean urlLaden(String dateiUrl, ListeFilme listeFilme, int days) {boolean ret = false;try {if (!dateiUrl.isEmpty()) {msFilmListReader.readFilmListe(dateiUrl, listeFilme, days);if (!listeFilme.isEmpty()) {ret = true;}}} catch (Exception ex) {}return ret;}}	2
4373	"public class A {private String convertSummerTimeWinterTimeDetails(final DateTime dateTime) {final String formattedTimeDetails =String.format(""%02d"", dateTime.getMonthOfYear())+ (dateTime.getDayOfWeek() - 1)+ String.format(""%02d"", dateTime.getHourOfDay())+ String.format(""%02d"", dateTime.getMinuteOfHour());return formattedTimeDetails;}}"	2
4374	"public class A {@RestAccessControl(permission = Permission.MANAGE_USERS)@RequestMapping(value = ""/{username:.+}/password"",method = RequestMethod.POST,produces = MediaType.APPLICATION_JSON_VALUE)public ResponseEntity<SimpleRestResponse<UserDto>> updateUserPassword(@PathVariable String username,@Valid @RequestBody UserPasswordRequest passwordRequest,BindingResult bindingResult) {if (bindingResult.hasErrors()) {throw new ValidationGenericException(bindingResult);}this.getUserValidator().validateChangePasswords(username, passwordRequest, bindingResult);if (bindingResult.hasErrors()) {throw new ValidationGenericException(bindingResult);}UserDto userDto = this.getUserService().updateUserPassword(passwordRequest);return new ResponseEntity<>(new SimpleRestResponse<>(userDto), HttpStatus.OK);}}"	1
4375	"public class A {@Overridepublic String format(Object value) {if (!(value instanceof Number)) {return null;}double doubleValue = ((Number) value).doubleValue();String formattedDate = dataFormatter.formatRawCellContents(doubleValue, formatIndex, format);if (format.startsWith(""# ?/"") || format.startsWith(""# ??/"") || format.startsWith(""# ???/"")) {if (doubleValue < 1 && doubleValue > 0) {formattedDate = formattedDate.substring(2);} else if (doubleValue < 0 && doubleValue > -1) {formattedDate = ""-"" + formattedDate.substring(3);}}return formattedDate;}}"	1
4376	public class A {@Overridepublic void after(Object target, Object[] args, Object result, Throwable throwable) {if (isDebug) {logger.afterInterceptor(target, args, result, throwable);}final AsyncContext asyncContext = getAsyncContext(target, args);if (asyncContext == null) {return;}if (isDebug) {}final Trace trace = asyncContext.currentAsyncTraceObject();if (trace == null) {return;}if (isDebug) {}if (!leaveAsyncTraceScope(trace)) {if (logger.isWarnEnabled()) {}deleteAsyncTrace(trace);return;}try {final SpanEventRecorder recorder = trace.currentSpanEventRecorder();doInAfterTrace(recorder, target, args, result, throwable);} catch (Throwable th) {if (logger.isWarnEnabled()) {}} finally {trace.traceBlockEnd();if (isAsyncTraceDestination(trace)) {if (isDebug) {}deleteAsyncTrace(trace);}finishAsyncState(asyncContext);}}}	6
4377	public class A {@Overridepublic void onAction(DelayActionContext delayActionContext) {try {proxy.writeBinMultiDataPoint(getPoint(delayActionContext));} catch (Exception e) {}}}	1
4378	public class A {@Overridepublic List<ContextKeyValue> getValues(ContextID contextID, String keyword, ContextType csType) {if (null == contextID || StringUtils.isBlank(keyword)) {return null;}try {ContextIDValue contextIDValue = contextCache.getContextIDValue(contextID);return contextIDValue.getContextKeyValueContext().getValues(keyword, csType);} catch (Exception e) {}return null;}}	1
4379	"public class A {@Overridepublic int doEndTag() throws PageException {Object ds = DBInfo.getDatasource(pageContext, datasource);DataSourceManager manager = pageContext.getDataSourceManager();DatasourceConnection dc =ds instanceof DataSource? manager.getConnection(pageContext, (DataSource) ds, username, password): manager.getConnection(pageContext, Caster.toString(ds), username, password);try {Struct meta = Insert.getMeta(dc, tablequalifier, tableowner, tablename);String[] pKeys = getPrimaryKeys(dc);SQL sql = createSQL(dc, pKeys, meta);if (sql != null) {QueryImpl query = new QueryImpl(pageContext, dc, sql, -1, -1, null, ""query"");String dsn = ds instanceof DataSource ? ((DataSource) ds).getName() : Caster.toString(ds);boolean logdb =((ConfigPro) pageContext.getConfig()).hasDebugOptions(ConfigPro.DEBUG_DATABASE);if (logdb) {boolean debugUsage = DebuggerUtil.debugQueryUsage(pageContext, query);DebuggerImpl di = (DebuggerImpl) pageContext.getDebugger();di.addQuery(debugUsage ? query : null,dsn,"""",sql,query.getRecordcount(),Query.toTemplateLine(pageContext.getConfig(), sourceTemplate, pageContext.getCurrentPageSource()),query.getExecutionTime());}}Log log = pageContext.getConfig().getLog(""datasource"");if (log.getLogLevel() >= Log.LEVEL_INFO) {}}return EVAL_PAGE;} catch (PageException pe) {throw pe;} finally {manager.releaseConnection(pageContext, dc);}}}"	3
4380	"public class A {private MessageEvent doActionFocusToIframe(TestCaseExecution tCExecution, String object, String property) {MessageEvent message;String element;try {element = getElementToUse(object, property, ""focusToIframe"", tCExecution);Identifier identifier = identifierService.convertStringToIdentifier(element);identifierService.checkWebElementIdentifier(identifier.getIdentifier());if (tCExecution.getApplicationObj().getType().equalsIgnoreCase(Application.TYPE_GUI)) {return webdriverService.doSeleniumActionFocusToIframe(tCExecution.getSession(), identifier);}message = new MessageEvent(MessageEventEnum.ACTION_NOTEXECUTED_NOTSUPPORTED_FOR_APPLICATION);message.setDescription(message.getDescription().replace(""%ACTION%"", ""FocusToIframe""));message.setDescription(message.getDescription().replace(""%APPLICATIONTYPE%"", tCExecution.getApplicationObj().getType()));return message;} catch (CerberusEventException ex) {return ex.getMessageError();}}}"	1
4381	"public class A {public void setVersion(Version version) {boolean versionChanged = version == null || !version.equals(this.version);this.version = version;isOldVersion = false;if (Constants.APPLICATION.equals(pi.getApplication())) {isOldVersion = Version.isOldVersion(version, Constants.MIN_VERSION);if (isOldVersion) {if (versionChanged) {}blacklistingCause = ""Old version: "" + version;setState(PeerState.NON_CONNECTED);peers.notifyListeners(this, PeersService.Event.BLACKLIST);}}}}"	3
4382	public class A {@Overridepublic void updateChannelValue(ChannelUID channelUID, int value) {updateState(channelUID, Util.toPercentValue(value));switch (channelUID.getId()) {case CHANNEL_BRIGHTNESS_R:currentValues.set(0, value);break;case CHANNEL_BRIGHTNESS_G:currentValues.set(1, value);break;case CHANNEL_BRIGHTNESS_B:currentValues.set(2, value);break;default:return;}updateCurrentColor();updateState(new ChannelUID(this.thing.getUID(), CHANNEL_COLOR), currentColor);}}	2
4383	public class A {private Integer getTrackNumber(String track) {Integer trackNumber = null;if (track != null) {try {trackNumber = Integer.valueOf(track);} catch (NumberFormatException x) {if (LOG.isWarnEnabled()) {}}}return trackNumber;}}	1
4384	public class A {private ClassicHttpResponse handleCacheHit(final HttpHost target,final ClassicHttpRequest request,final ExecChain.Scope scope,final ExecChain chain,final HttpCacheEntry entry)throws IOException, HttpException {final HttpClientContext context = scope.clientContext;context.setAttribute(HttpCoreContext.HTTP_REQUEST, request);recordCacheHit(target, request);final Date now = getCurrentDate();if (suitabilityChecker.canCachedResponseBeUsed(target, request, entry, now)) {try {return convert(generateCachedResponse(request, context, entry, now), scope);} catch (final ResourceIOException ex) {recordCacheFailure(target, request);if (!mayCallBackend(request)) {return convert(generateGatewayTimeout(context), scope);}setResponseStatus(scope.clientContext, CacheResponseStatus.FAILURE);return chain.proceed(request, scope);}} else if (!mayCallBackend(request)) {return convert(generateGatewayTimeout(context), scope);} else if (!(entry.getStatus() == HttpStatus.SC_NOT_MODIFIED&& !suitabilityChecker.isConditional(request))) {try {if (cacheRevalidator != null&& !staleResponseNotAllowed(request, entry, now)&& validityPolicy.mayReturnStaleWhileRevalidating(entry, now)) {final String exchangeId = ExecSupport.getNextExchangeId();final ExecChain.Scope fork =new ExecChain.Scope(exchangeId,scope.route,scope.originalRequest,scope.execRuntime.fork(null),HttpClientContext.create());final SimpleHttpResponse response = generateCachedResponse(request, context, entry, now);cacheRevalidator.revalidateCacheEntry(responseCache.generateKey(target, request, entry),() -> revalidateCacheEntry(target, request, fork, chain, entry));return convert(response, scope);}return revalidateCacheEntry(target, request, scope, chain, entry);} catch (final IOException ioex) {return convert(handleRevalidationFailure(request, context, entry, now), scope);}} else {return callBackend(target, request, scope, chain);}}}	5
4385	public class A {private synchronized void schedulePolling() {cancelPolling();scheduledPolling =super.scheduler.scheduleWithFixedDelay(this::pollAudioSource, 0, POLL_DELAY_SECONDS, TimeUnit.SECONDS);}}	1
4386	public class A {public void receiveCommand(ItemCommandEvent commandEvent, Item item) {if (!enabled) {return;}final String itemName = commandEvent.getItemName();final Command command = commandEvent.getItemCommand();if (command instanceof State) {final State state = (State) command;Recommendation autoUpdate = shouldAutoUpdate(item);MetadataKey key = new MetadataKey(AUTOUPDATE_KEY, itemName);Metadata metadata = metadataRegistry.get(key);if (metadata != null && !metadata.getValue().isBlank()) {boolean override = Boolean.parseBoolean(metadata.getValue());if (override) {autoUpdate = Recommendation.REQUIRED;} else {autoUpdate = Recommendation.DONT;}}switch (autoUpdate) {case REQUIRED:postUpdate(item, state, EVENT_SOURCE);break;case RECOMMENDED:postUpdate(item, state, EVENT_SOURCE);break;case OPTIMISTIC:postPrediction(item, state, false);if (sendOptimisticUpdates) {postUpdate(item, state, EVENT_SOURCE_OPTIMISTIC);}break;case DONT:break;case REVERT:postPrediction(item, item.getState(), true);break;}}}}	7
4387	"public class A {private String saveUpdatedCSV(String data, String usecaseName) {String path =ConfigOptions.ML_DATA_STORAGE_RESOLVED_PATH+ ConfigOptions.FILE_SEPERATOR+ usecaseName+ ConfigOptions.FILE_SEPERATOR+ usecaseName+ ""W2V.csv"";CSVFormat csvFileFormat = CSVFormat.RFC4180.withHeader();try (FileWriter fileWriter = new FileWriter(path);CSVPrinter csvFilePrinter = new CSVPrinter(fileWriter, csvFileFormat);CSVReader reader = new CSVReader(new StringReader(data))) {csvFilePrinter.printRecords(reader.readAll());} catch (Exception e) {}return path;}}"	1
4388	public class A {@Overridepublic void validate() {}}	1
4389	"public class A {private void addDefaultJobs(List<JobConfiguration> jobConfigurations) {if (verifyNoJobExist(DEFAULT_FILE_RESOURCE_CLEANUP, jobConfigurations)) {JobConfiguration fileResourceCleanUp =new JobConfiguration(DEFAULT_FILE_RESOURCE_CLEANUP, FILE_RESOURCE_CLEANUP, CRON_DAILY_2AM, null);fileResourceCleanUp.setUid(DEFAULT_FILE_RESOURCE_CLEANUP_UID);fileResourceCleanUp.setLeaderOnlyJob(true);addAndScheduleJob(fileResourceCleanUp);}if (verifyNoJobExist(DEFAULT_DATA_STATISTICS, jobConfigurations)) {JobConfiguration dataStatistics =new JobConfiguration(DEFAULT_DATA_STATISTICS, DATA_STATISTICS, CRON_DAILY_2AM, null);portJob(systemSettingManager, dataStatistics, SettingKey.LAST_SUCCESSFUL_DATA_STATISTICS);dataStatistics.setLeaderOnlyJob(true);dataStatistics.setUid(DEFAULT_DATA_STATISTICS_UID);addAndScheduleJob(dataStatistics);}if (verifyNoJobExist(DEFAULT_VALIDATION_RESULTS_NOTIFICATION, jobConfigurations)) {JobConfiguration validationResultNotification =new JobConfiguration(DEFAULT_VALIDATION_RESULTS_NOTIFICATION,VALIDATION_RESULTS_NOTIFICATION,CRON_DAILY_7AM,null);validationResultNotification.setLeaderOnlyJob(true);validationResultNotification.setUid(DEFAULT_VALIDATION_RESULTS_NOTIFICATION_UID);addAndScheduleJob(validationResultNotification);}if (verifyNoJobExist(DEFAULT_CREDENTIALS_EXPIRY_ALERT, jobConfigurations)) {JobConfiguration credentialsExpiryAlert =new JobConfiguration(DEFAULT_CREDENTIALS_EXPIRY_ALERT, CREDENTIALS_EXPIRY_ALERT, CRON_DAILY_2AM, null);credentialsExpiryAlert.setLeaderOnlyJob(true);credentialsExpiryAlert.setUid(DEFAULT_CREDENTIALS_EXPIRY_ALERT_UID);addAndScheduleJob(credentialsExpiryAlert);}if (verifyNoJobExist(DEFAULT_DATA_SET_NOTIFICATION, jobConfigurations)) {JobConfiguration dataSetNotification =new JobConfiguration(DEFAULT_DATA_SET_NOTIFICATION, DATA_SET_NOTIFICATION, CRON_DAILY_2AM, null);dataSetNotification.setLeaderOnlyJob(true);dataSetNotification.setUid(DEFAULT_DATA_SET_NOTIFICATION_UID);addAndScheduleJob(dataSetNotification);}if (verifyNoJobExist(DEFAULT_REMOVE_EXPIRED_RESERVED_VALUES, jobConfigurations)) {JobConfiguration removeExpiredReservedValues =new JobConfiguration(DEFAULT_REMOVE_EXPIRED_RESERVED_VALUES,REMOVE_EXPIRED_RESERVED_VALUES,CRON_HOURLY,null);removeExpiredReservedValues.setLeaderOnlyJob(true);removeExpiredReservedValues.setUid(DEFAULT_REMOVE_EXPIRED_RESERVED_VALUES_UID);addAndScheduleJob(removeExpiredReservedValues);}if (verifyNoJobExist(DEFAULT_LEADER_ELECTION, jobConfigurations)&& ""true"".equalsIgnoreCase(redisEnabled)) {JobConfiguration leaderElectionJobConfiguration =new JobConfiguration(DEFAULT_LEADER_ELECTION,LEADER_ELECTION,String.format(LEADER_JOB_CRON_FORMAT, leaderElectionTime),null);leaderElectionJobConfiguration.setLeaderOnlyJob(false);leaderElectionJobConfiguration.setUid(DEFAULT_LEADER_ELECTION_UID);addAndScheduleJob(leaderElectionJobConfiguration);} else {checkLeaderElectionJobConfiguration(jobConfigurations);}}}"	1
4390	public class A {private BrokerInfo readBrokerInfo(final Member eventSource) {final BrokerInfo brokerInfo = BrokerInfo.fromProperties(eventSource.properties());if (brokerInfo != null && !isStaticConfigValid(brokerInfo)) {return null;}return brokerInfo;}}	1
4391	"public class A {@RequestMapping(value = {""/Groups/{groupId}""},method = RequestMethod.PUT)@ResponseBodypublic ScimGroup updateGroup(@RequestBody ScimGroup group,@PathVariable String groupId,@RequestHeader(value = ""If-Match"", required = false) String etag,HttpServletResponse httpServletResponse) {if (etag == null) {throw new ScimException(""Missing If-Match for PUT"", HttpStatus.BAD_REQUEST);}int version = getVersion(groupId, etag);group.setVersion(version);ScimGroup existing = getGroup(groupId, httpServletResponse);try {group.setZoneId(identityZoneManager.getCurrentIdentityZoneId());ScimGroup updated =dao.update(groupId, group, identityZoneManager.getCurrentIdentityZoneId());if (group.getMembers() != null && group.getMembers().size() > 0) {membershipManager.updateOrAddMembers(updated.getId(), group.getMembers(), identityZoneManager.getCurrentIdentityZoneId());} else {membershipManager.removeMembersByGroupId(updated.getId(), identityZoneManager.getCurrentIdentityZoneId());}updated.setMembers(membershipManager.getMembers(updated.getId(), false, identityZoneManager.getCurrentIdentityZoneId()));addETagHeader(httpServletResponse, updated);return updated;} catch (IncorrectResultSizeDataAccessException ex) {existing.setVersion(getVersion(groupId, ""*""));dao.update(groupId, existing, identityZoneManager.getCurrentIdentityZoneId());throw new ScimException(ex.getMessage(), ex, HttpStatus.CONFLICT);} catch (ScimResourceNotFoundException ex) {existing.setVersion(getVersion(groupId, ""*""));dao.update(groupId, existing, identityZoneManager.getCurrentIdentityZoneId());throw new ScimException(ex.getMessage(), ex, HttpStatus.BAD_REQUEST);}}}"	3
4392	"public class A {private boolean passesCrl(X509Certificate[] certs) {if (certs != null) {for (X509Certificate curCert : certs) {if (crlCache.get() != null && crlCache.get().isRevoked(curCert)) {securityLogger.audit(""Denying access for subject DN: ""+ curCert.getSubjectDN()+ "" due to certificate being revoked by CRL."");return false;}}} else {return true;}return true;}}"	2
4393	public class A {void stopJobHelper(IJob job, Optional<Boolean> cancelParam, Optional<Boolean> forceParam, int nodeId)throws Exception {String id = job.getId();boolean cancelRekick = cancelParam.or(false);boolean force = forceParam.or(false);if (cancelRekick) {job.setRekickTimeout(null);}if (nodeId < 0) {if (force) {spawn.killJob(id);} else {spawn.stopJob(id);}} else {if (force) {spawn.killTask(id, nodeId);} else {spawn.stopTask(id, nodeId);}}}}	1
4394	public class A {public Exception[] cancelLeases(Object[] regIDs, Uuid[] leaseIDs) throws NoSuchObjectException {long startTime = 0;if (loggerStats.isTraceEnabled()) {startTime = SystemTime.timeMillis();}concurrentObj.writeLock();try {ready.check();Exception[] exceptions = cancelLeasesDo(regIDs, leaseIDs);queueEvents();if (logger.isDebugEnabled()) {for (int i = 0; i < regIDs.length; i++) {if (exceptions != null && exceptions[i] != null) {continue;}if (regIDs[i] instanceof ServiceID) {} else {}}}return exceptions;} finally {concurrentObj.writeUnlock();if (loggerStats.isTraceEnabled()) {long duration = SystemTime.timeMillis() - startTime;if (duration > cancelLeasesMaxDuration) {cancelLeasesMaxDuration = duration;}}}}}	3
4395	public class A {protected void internalDeleteSubscribeRate() {validateSuperUserAccess();try {final String path = path(POLICIES, namespaceName.toString());updatePolicies(path,(policies) -> {policies.clusterSubscribeRate.remove(pulsar().getConfiguration().getClusterName());return policies;});} catch (Exception e) {throw new RestException(e);}}}	2
4396	"public class A {@SuppressWarnings(""serial"")public Set<Bean<?>> findServiceProviderBeans() {Set<Bean<?>> result = new HashSet<>();for (Bean<?> bean : beanManager.getBeans(Object.class, new AnnotationLiteral<Any>() {})) {ServiceProvider serviceProvider = bean.getBeanClass().getAnnotation(ServiceProvider.class);if (serviceProvider != null) {ProvidedBy providedBy = getProvidedByAnnotation(serviceProvider.serviceInterface());verifyProvidedBy(providedBy, serviceProvider.serviceInterface(), bean);result.add(bean);if (logger.isTraceEnabled()) {}} else if (logger.isTraceEnabled()) {}}if (logger.isDebugEnabled()) {}return result;}}"	3
4397	"public class A {@Overridepublic synchronized void close() throws IOException {if (!closed) {closed = true;try {closeStream(""close() operation"", contentRangeFinish);super.close();} finally {}}}}"	1
4398	public class A {public static Boolean containsBaseModelPermission(PermissionChecker permissionChecker,long groupId,String className,long classPK,String actionId) {ModelResourcePermission<?> modelResourcePermission = _modelPermissions.getService(className);if (modelResourcePermission != null) {try {PortletResourcePermission portletResourcePermission =modelResourcePermission.getPortletResourcePermission();if (portletResourcePermission == null) {return modelResourcePermission.contains(permissionChecker, classPK, actionId);}return ModelResourcePermissionUtil.contains(modelResourcePermission, permissionChecker, groupId, classPK, actionId);} catch (PortalException portalException) {if (_log.isWarnEnabled()) {}return false;}}BaseModelPermissionChecker baseModelPermissionChecker =_baseModelPermissionCheckers.getService(className);if (baseModelPermissionChecker == null) {return null;}try {baseModelPermissionChecker.checkBaseModel(permissionChecker, groupId, classPK, actionId);} catch (Exception exception) {if (_log.isDebugEnabled()) {}return false;}return true;}}	2
4399	public class A {@Overridepublic void consumeVideoChunk(long startTimeMS, long endTimeMS, ListOfBytesOutputStream chunkStream, TLongList keyFrames) {VideoChunk chunk = new RawVideoChunk(chunkStream, keyFrames, startTimeMS, endTimeMS);if (myExpirationDuration == Long.MAX_VALUE) {myCurrentExpiration = myExpirationDuration;} else if (myCurrentExpiration == -1|| myCurrentExpiration - System.currentTimeMillis() < myExpirationBuffer) {myCurrentExpiration = System.currentTimeMillis() + myExpirationDuration + myExpirationBuffer;}if (LOGGER.isDebugEnabled()) {}DefaultCacheDeposit<VideoChunk> deposit =new DefaultCacheDeposit<VideoChunk>(myCategory,chunk.getPropertyAccessors(myStreamSpan),New.list(chunk),true,new Date(myCurrentExpiration),true);try {myQueryReceiver.receive(deposit);} catch (CacheException e) {}}}	2
4400	public class A {private void doMigrationForV0010() {IDatabaseAdapter adapter = getDbAdapter(dbType, connectionPool);Set<String> resourceTypes = getResourceTypes();for (String resourceTypeName : resourceTypes) {try (ITransaction tx = TransactionFactory.openTransaction(connectionPool)) {try {GetXXLogicalResourceNeedsMigration needsMigrating =new GetXXLogicalResourceNeedsMigration(schema.getSchemaName(), resourceTypeName);if (adapter.runStatement(needsMigrating)) {InitializeLogicalResourceDenorms cmd =new InitializeLogicalResourceDenorms(schema.getSchemaName(), resourceTypeName);adapter.runStatement(cmd);}} catch (DataAccessException x) {tx.setRollbackOnly();throw x;}}}}}	1
4401	public class A {@Overridepublic void run() {try {final InputStreamReader isr = new InputStreamReader(is);final BufferedReader br = new BufferedReader(isr);String line = null;} catch (final IOException ioe) {ioe.printStackTrace();}}}	1
4402	public class A {public void notifyMessageAddition(ChannelHandlerContext ctx) {messagesInFlight++;if (messagesInFlight > highLimit && inflowEnabled) {inflowEnabled = false;ctx.writeAndFlush(new ChannelFlow(channel.getChannelId(), false));ctx.channel().config().setAutoRead(false);}}}	1
4403	"public class A {@RetryingOperationpublic boolean cleanOldMetadata(String site) throws SiteNotFoundException {SiteFeed siteFeed = siteService.getSite(site);Map<String, String> params = new HashMap<String, String>();params.put(""site"", site);try {dependencyService.deleteSiteDependencies(site);} catch (Exception error) {}try {publishRequestMapper.deleteDeploymentDataForSite(params);} catch (Exception error) {}try {itemServiceInternal.deleteItemsForSite(siteFeed.getId());} catch (Exception error) {}try {contentRepository.deleteGitLogForSite(site);} catch (Exception error) {}return true;}}"	9
4404	public class A {private String generateCommon(X509Credential signingCred, String persistentId, EntityParam entityId) {Date now = new Date();long ttl = 1000 * config.getIntValue(JWTAuthenticationProperties.TOKEN_TTL);Date expiration = new Date(now.getTime() + ttl);String id = UUID.randomUUID().toString();String token;try {token = JWTUtils.generate(signingCred, persistentId, issuer, audience, expiration, id);} catch (Exception e) {throw new InternalServerErrorException();}try {tokensMan.addToken(JWT_TOKEN_ID, id, entityId, token.getBytes(StandardCharsets.UTF_8), now, expiration);} catch (Exception e) {throw new InternalServerErrorException();}return token;}}	2
4405	public class A {private void put(ChannelSftp channel, File file) throws SftpException, FileNotFoundException {InputStream is = null;try {is = new BufferedInputStream(new FileInputStream(file));channel.put(is, file.getName());} finally {if (is != null) {try {is.close();} catch (IOException e) {}}}}}	1
4406	"public class A {String handleRequest(JsonRequest request) throws Exception {String output = """";long starttime = 0;long endtime = 0;long period = 0;starttime = request.getNumber(""start"", 0);endtime = request.getNumber(""end"", 0);period = request.getNumber(""period"", 0);if (starttime == 0) {starttime = source.getStartTime();}if (endtime == 0) {if (period > 0) {endtime = starttime + period;} else {endtime = source.getEndTime();}}long size = 0;LogIterator iter = source.iterator(starttime, endtime);size = iter.size();ObjectMapper mapper = new ObjectMapper();JsonNode data = mapper.createObjectNode();((ObjectNode) data).put(""startTime"", starttime);((ObjectNode) data).put(""endTime"", endtime);((ObjectNode) data).put(""numEntries"", iter.size());if (LOG.isDebugEnabled()) {}iter.close();String jsonString = mapper.writer(new MinimalPrettyPrinter()).writeValueAsString(data);return jsonString;}}"	1
4407	"public class A {public KieFormOverride loadKieFormOverride(int id) {KieFormOverride kieFormOverride = null;Connection conn = null;PreparedStatement stat = null;ResultSet res = null;try {conn = this.getConnection();kieFormOverride = this.loadKieFormOverride(id, conn);} catch (Throwable t) {throw new RuntimeException(""Error loading kieFormOverride with id "" + id, t);} finally {closeDaoResources(res, stat, conn);}return kieFormOverride;}}"	1
4408	"public class A {@Overridepublic void init(Properties confParams, File confDir) throws Exception {super.init(confParams, confDir);if (!isEnabled) {return;}try {if (!caseData.isIpedReport()) Class.forName(""com.google.cloud.speech.v1p1beta1.SpeechClient"");} catch (ClassNotFoundException e) {throw new IPEDException(""Coud not found required class. Do you put google-cloud-speech.jar and its dependencies""+ "" in plugin dir?"");}String credential = System.getenv(CREDENTIAL_KEY);if (credential == null || credential.trim().isEmpty()) {throw new IPEDException(""To use Google transcription, you must specify environment variable "" + CREDENTIAL_KEY);}requestIntervalMillis = Integer.valueOf(props.getProperty(REQUEST_INTERVAL_KEY).trim());if (!super.isFfmpegOk()) {}speechClient = SpeechClient.create();}}"	1
4409	public class A {@Overrideprotected AuditMessageType getParticipantObjectIdentificationForRequest(RetrieveDocumentSetRequestType request, AssertionType assertion, AuditMessageType auditMsg) {if (CollectionUtils.isNotEmpty(assertion.getUniquePatientId())&& StringUtils.isNotEmpty(assertion.getUniquePatientId().get(0))) {auditMsg =createPatientParticipantObjectIdentification(auditMsg, assertion.getUniquePatientId().get(0));}try {auditMsg = getDocumentParticipantObjectIdentificationForRequest(request, auditMsg);} catch (JAXBException ex) {}return auditMsg;}}	1
4410	public class A {@Overridepublic void execute(ExecutionContext executionContext, int curItrCount) throws Exception {HoodieTableMetaClient metaClient =HoodieTableMetaClient.builder().setConf(executionContext.getHoodieTestSuiteWriter().getConfiguration()).setBasePath(executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath).build();Option<HoodieInstant> lastInstant =metaClient.getActiveTimeline().getWriteTimeline().filterPendingCompactionTimeline().lastInstant();if (lastInstant.isPresent()) {this.result =executionContext.getHoodieTestSuiteWriter().compact(Option.of(lastInstant.get().getTimestamp()));}}}	1
4411	public class A {private RunState transition(Event event, long expectedCounter) {try {return storage.runInTransactionWithRetries(tx -> transition0(tx, event, expectedCounter));} catch (Throwable e) {Throwables.throwIfUnchecked(e);throw new RuntimeException(e);}}}	1
4412	"public class A {@Overridepublic void performAction() throws JmriException {try {this.getRoute().setRoute();} catch (NullPointerException ex) {InitializationException exception =new InitializationException(Bundle.getMessage(Locale.ENGLISH, ""TriggerRouteModel.RouteNotDefined"", this.getUserName()),Bundle.getMessage(""TriggerRouteModel.RouteNotDefined"", this.getUserName()),ex);this.addException(exception);throw new JmriException(exception);}}}"	2
4413	"public class A {@Overridepublic void write(@Nonnull Writer writer,@Nonnull Server server,@Nonnull Query query,@Nonnull Iterable<Result> results)throws IOException {for (Result result : results) {Object value = result.getValue();if (isValidNumber(value)) {String line =KeyUtils.getKeyString(server, query, result, typeNames, rootPrefix).replaceAll(""[()]"", ""_"")+ "" ""+ value.toString()+ "" ""+ SECONDS.convert(result.getEpoch(), MILLISECONDS)+ ""\n"";writer.write(line);} else {onlyOnceLogger.infoOnce(""Unable to submit non-numeric value to Graphite: [{}] from result [{}]"", value, result);}}}}"	2
4414	public class A {private void addRelation(PatientReference patient, PatientReference otherPatient, String relation) {Map<PatientReference, String> patientRelations = this.getPatientRelations(patient);String patientToOther = patientRelations.get(otherPatient);if (patientToOther != null) {if (!patientToOther.equals(relation)) {this.inconsistenciesDetected = true;}return;} else {patientRelations.put(otherPatient, relation);}String inverseRelation = INVERSE_RELATIONSHIP.get(relation);Map<PatientReference, String> otherRelations = this.getPatientRelations(otherPatient);String otherToPatient = otherRelations.get(patient);if (otherToPatient != null) {if (!otherToPatient.equals(inverseRelation)) {this.inconsistenciesDetected = true;}return;} else {otherRelations.put(patient, inverseRelation);}}}	1
4415	"public class A {@Given(""I successfully schedule a topic message submit with {string}'s submit key"")@Retryable(value = {PrecheckStatusException.class},exceptionExpression = ""#{message.contains('BUSY')}"")public void createNewHCSSchedule(String accountName)throws ReceiptStatusException, PrecheckStatusException, TimeoutException {expectedSignersCount = 1;currentSignersCount = 0 + signatoryCountOffset;ExpandedAccountId submitAdmin =accountClient.getAccount(AccountClient.AccountNameEnum.valueOf(accountName));networkTransactionResponse =topicClient.createTopic(accountClient.getTokenTreasuryAccount(), submitAdmin.getPublicKey());assertNotNull(networkTransactionResponse.getTransactionId());assertNotNull(networkTransactionResponse.getReceipt());TopicId topicId = networkTransactionResponse.getReceipt().topicId;assertNotNull(topicId);scheduledTransaction =topicClient.getTopicMessageSubmitTransaction(topicId, ""scheduled hcs message"".getBytes(StandardCharsets.UTF_8));createNewSchedule(scheduledTransaction, null);}}"	1
4416	public class A {@Overridepublic void putEntity(String key, T entity, boolean store) throws Exception {key = key.trim();if (entities.put(key, entity) == null) {} else {}if (store) {spawnDataStore.putAsChild(dataStorePath, key, CodecJSON.encodeString(entity));}}}	2
4417	"public class A {private void validateCartridgeGroupReference(String applicationId, ServiceGroup serviceGroup, Group group)throws CartridgeNotFoundException {List<String> cartridgeTypes = findCartridgeTypesInServiceGroup(serviceGroup);for (String cartridgeType : cartridgeTypes) {if (findClusterDataInGroup(group, cartridgeType) == null) {throw new CartridgeNotFoundException(String.format(""Cartridge %s not defined in cartridge group: ""+ ""[application] %s [cartridge-group-name] %s [cartridge-group-alias] %s"",cartridgeType, applicationId, group.getName(), group.getAlias()));}}}}"	1
4418	public class A {@Overridepublic boolean check(VirtualMachineProfile vmProfile, DeployDestination plannedDestination)throws AffinityConflictException {if (plannedDestination.getHost() == null) {return true;}long plannedHostId = plannedDestination.getHost().getId();VirtualMachine vm = vmProfile.getVirtualMachine();List<AffinityGroupVMMapVO> vmGroupMappings =_affinityGroupVMMapDao.findByVmIdType(vm.getId(), getType());for (AffinityGroupVMMapVO vmGroupMapping : vmGroupMappings) {List<Long> groupVMIds =_affinityGroupVMMapDao.listVmIdsByAffinityGroup(vmGroupMapping.getAffinityGroupId());groupVMIds.remove(vm.getId());for (Long groupVMId : groupVMIds) {VMReservationVO vmReservation = _reservationDao.findByVmId(groupVMId);if (vmReservation != null&& vmReservation.getHostId() != null&& vmReservation.getHostId().equals(plannedHostId)) {if (s_logger.isDebugEnabled()) {}return false;}}}return true;}}	1
4419	public class A {private void notifyHeaders(Response.HeadersListener listener, Response response) {try {listener.onHeaders(response);} catch (Throwable x) {}}}	1
4420	"public class A {@Overridepublic Answer execute(final OvsVpcRoutingPolicyConfigCommand command,final LibvirtComputingResource libvirtComputingResource) {try {final Script scriptCommand =new Script(libvirtComputingResource.getOvsTunnelPath(),libvirtComputingResource.getTimeout(),s_logger);scriptCommand.add(""configure_ovs_bridge_for_routing_policies"");scriptCommand.add(""--bridge"", command.getBridgeName());scriptCommand.add(""--config"", command.getVpcConfigInJson());final String result = scriptCommand.execute();if (result.equalsIgnoreCase(""SUCCESS"")) {return new Answer(command, true, result);} else {return new Answer(command, false, result);}} catch (final Exception e) {return new Answer(command, false, e.getMessage());}}}"	1
4421	public class A {public List<ChequeAssignment> getPaymentVoucherNotInInstrument(final Map<String, String[]> parameters) throws ApplicationException, ParseException {finalChequeAssignmentList.addAll(getExpenseBillPayments());finalChequeAssignmentList.addAll(getDirectBankPaymentsForChequeAssignment());finalChequeAssignmentList.addAll(getContractorSupplierPaymentsForChequeAssignment(parameters));return finalChequeAssignmentList;}}	2
4422	public class A {protected boolean clearSpecial(DatabaseConnection connection, Logger logger) {NestedConnection currentSaved = specialConnection.get();boolean cleared = false;if (connection == null) {} else if (currentSaved == null) {} else if (currentSaved.connection == connection) {if (currentSaved.decrementAndGet() == 0) {specialConnection.set(null);}cleared = true;} else {}return cleared;}}	2
4423	"public class A {private static RedirectStatus handleConsentRealm(RedirectCallbackProcessor.REALM realm,String param,String identifier,OAuthCallback oAuthCallback) {String path = String.format(""%s/%s/%s"", realm.name().toLowerCase(), param, identifier);if (oAuthCallback.getError() == null&& handleSuccessfulOAuth2(oAuthCallback.getCode(), oAuthCallback.getState(), path)) {return new RedirectStatus(StatusType.SUCCESS, oAuthCallback.getState());} else {return new RedirectStatus(StatusType.ERROR, oAuthCallback.getState());}}}"	2
4424	public class A {private void loadTrustStore() {try {trustStore = KeyStore.getInstance(KeyStore.getDefaultType());trustStore.load(null);String truststoreFilePath = getEnvVarConfig().getTrustedAdapterCertsPath();TLSUtils.addCertsToTruststore(trustStore, truststoreFilePath);trustManagerFactory =TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());trustManagerFactory.init(trustStore);} catch (KeyStoreException | CertificateException | NoSuchAlgorithmException | IOException e) {}}}	1
4425	public class A {private void testBuffer(int threads) throws Exception {long seed = System.nanoTime();Random rnd = new Random(seed);for (int i = 0; i < 10; i++) {int cnt = rnd.nextInt(10_000) + 1;testBuffer(rnd, new CacheContinuousQueryEventBuffer(0), cnt, 1, 0.5f, threads);testBuffer(rnd, new CacheContinuousQueryEventBuffer(0), cnt, 1, 0.9f, threads);testBuffer(rnd, new CacheContinuousQueryEventBuffer(0), cnt, 1, 0.99f, threads);testBuffer(rnd, new CacheContinuousQueryEventBuffer(0), cnt, 1, 0.01f, threads);testBuffer(rnd, new CacheContinuousQueryEventBuffer(0), cnt, 1, 0.f, threads);}CacheContinuousQueryEventBuffer b = new CacheContinuousQueryEventBuffer(0);long cntr = 1;for (int i = 0; i < 10; i++) {int cnt = rnd.nextInt(10_000) + 1;float ratio = rnd.nextFloat();testBuffer(rnd, b, cnt, cntr, ratio, threads);cntr += cnt;}}}	1
4426	public class A {void uninstallAll() throws Exception {File extDirectory = getDefaultExtDirectory();for (String name : this.installCounts.stringPropertyNames()) {new File(extDirectory, name).delete();}this.installCounts.clear();saveInstallCounts();}}	1
4427	public class A {public static void writeFileIfChanged(String newContent, File file, Log log) throws IOException {boolean write = true;file = file.getCanonicalFile();if (file.exists()) {try (FileReader fr = new FileReader(file)) {String oldContent = IOUtils.toString(fr);if (!newContent.equals(oldContent)) {} else {write = false;}}} else {File parent = file.getParentFile();parent.mkdirs();}if (write) {try (FileWriter fw = new FileWriter(file)) {IOUtils.write(newContent, fw);}}}}	2
4428	"public class A {@Overridepublic Answer createVolumeFromSnapshot(final CopyCommand cmd) {Connection conn = hypervisorResource.getConnection();DataTO srcData = cmd.getSrcTO();SnapshotObjectTO snapshot = (SnapshotObjectTO) srcData;DataStoreTO imageStore = srcData.getDataStore();DataTO destData = cmd.getDestTO();if (isCreateManagedVolumeFromManagedSnapshot(cmd.getOptions2(), cmd.getOptions())) {return createManagedVolumeFromManagedSnapshot(cmd);}if (isCreateNonManagedVolumeFromManagedSnapshot(cmd.getOptions2(), cmd.getOptions())) {return createNonManagedVolumeFromManagedSnapshot(cmd);}if (!(imageStore instanceof NfsTO)) {return new CopyCmdAnswer(""unsupported protocol"");}NfsTO nfsImageStore = (NfsTO) imageStore;String primaryStorageNameLabel = destData.getDataStore().getUuid();String secondaryStorageUrl = nfsImageStore.getUrl();int wait = cmd.getWait();boolean result = false;String details;String volumeUUID;if (secondaryStorageUrl == null) {details = ""The URL passed in 'null'."";return new CopyCmdAnswer(details);}try {SR primaryStorageSR =hypervisorResource.getSRByNameLabelandHost(conn, primaryStorageNameLabel);if (primaryStorageSR == null) {throw new InternalErrorException(""Could not create volume from snapshot because the primary storage SR could not be ""+ ""created from the name label: ""+ primaryStorageNameLabel);}String snapshotInstallPath = snapshot.getPath();int index = snapshotInstallPath.lastIndexOf(nfsImageStore.getPathSeparator());String snapshotName = snapshotInstallPath.substring(index + 1);if (!snapshotName.startsWith(""VHD-"") && !snapshotName.endsWith("".vhd"")) {snapshotInstallPath = snapshotInstallPath + "".vhd"";}URI snapshotURI =new URI(secondaryStorageUrl + nfsImageStore.getPathSeparator() + snapshotInstallPath);String snapshotPath = snapshotURI.getHost() + "":"" + snapshotURI.getPath();String srUuid = primaryStorageSR.getUuid(conn);volumeUUID = copy_vhd_from_secondarystorage(conn, snapshotPath, srUuid, wait);result = true;VDI volume = VDI.getByUuid(conn, volumeUUID);VDI.Record vdir = volume.getRecord(conn);VolumeObjectTO newVol = new VolumeObjectTO();newVol.setPath(volumeUUID);newVol.setSize(vdir.virtualSize);return new CopyCmdAnswer(newVol);} catch (final XenAPIException e) {details = ""Exception due to "" + e.toString();s_logger.warn(details, e);} catch (final Exception e) {details = ""Exception due to "" + e.getMessage();}if (!result) {}return new CopyCmdAnswer(details);}}"	2
4429	"public class A {public List<JsonObject> saveESResult(String indexName, List<JsonObject> rows) {ElasticSearchDBHandler esDbHandler = new ElasticSearchDBHandler();List<JsonObject> recordlist = new ArrayList<>();try {String sourceESCacheUrl =ApplicationConfigProvider.getInstance().getEndpointData().getElasticSearchEndpoint()+ ""/""+ indexName+ ""/_bulk"";StringBuffer bulkESJsons = new StringBuffer();for (JsonElement bulkItem : rows) {JsonObject bulkItemJson = new JsonObject();String uuid = UUID.randomUUID().toString();bulkItem.getAsJsonObject().addProperty(""uuid"", uuid);bulkItemJson.add(""create"", bulkItem.getAsJsonObject());bulkESJsons.append(bulkItemJson);}bulkESJsons = bulkESJsons.append(""\\n"");JsonObject esResponse = esDbHandler.queryES(sourceESCacheUrl, bulkESJsons.toString());if (esResponse.has(STATUS) && esResponse.get(STATUS).getAsInt() == 404) {} else {JsonArray esResponseArray =esResponse.get(""hits"").getAsJsonObject().get(""hits"").getAsJsonArray();for (JsonElement esResponseSource : esResponseArray) {JsonObject SRJSON = new JsonParser().parse(esResponseSource.toString()).getAsJsonObject();JsonObject recordKPI = SRJSON.get(""_source"").getAsJsonObject();recordlist.add(recordKPI);}}} catch (InsightsCustomException e) {}return recordlist;}}"	4
4430	"public class A {@Testpublic void testDbFailure() throws Exception {this.addAndStartEngine();s.stop();this.waitDbStop();this.sleep(2);s.start();this.sleep(5);Assert.assertTrue(this.engines.get(""localhost"").areAllPollersPolling());}}"	2
4431	"public class A {@Overridepublic synchronized WroModel create() {final StopWatch stopWatch = new StopWatch(""Create Wro Model from Groovy"");try {stopWatch.start(""createModel"");final Type type = new TypeToken<WroModel>() {}.getType();final InputStream is = getModelResourceAsStream();if (is == null) {throw new WroRuntimeException(""Invalid model stream provided!"");}final WroModel model =new Gson().fromJson(new InputStreamReader(getModelResourceAsStream()), type);if (model == null) {throw new WroRuntimeException(""Invalid content provided, cannot build model!"");}return model;} catch (final Exception e) {throw new WroRuntimeException(""Invalid model found!"", e);} finally {stopWatch.stop();}}}"	2
4432	"public class A {public DatasetUploadState analyze(DatasetUploadState item) throws Exception {Objects.requireNonNull(item.getId(), ""item has no id"");checkStatus(item, JobStatus.RUNNING);final Path path = Paths.get(item.getAbsolutePath());final String typeName = item.getName();try {DatasetMetadata datasetMetadata = datasetsService.describe(path, typeName);item.setAnalyzeStatus(JobStatus.DONE);item.setEncoding(datasetMetadata.getEncoding());item.setFeatureCount(datasetMetadata.getFeatureCount());item.setNativeBounds(datasetMetadata.getNativeBounds());String geometryWKT =Optional.ofNullable(datasetMetadata.getSampleGeometry()).map(Geometry::toText).orElse(null);List<SampleProperty> sampleProperties =sampleProperties(datasetMetadata.getSampleProperties());item.setSampleGeometryWKT(geometryWKT);item.setSampleProperties(sampleProperties);} catch (Exception e) {item.setAnalyzeStatus(JobStatus.ERROR);item.setError(e.getMessage());}return item;}}"	1
4433	public class A {public static boolean downloadFile(String fileName,String contentType,byte[] file,FileDownloader.ContentDisposition contentDisposition,FacesContext facesContext) {HttpServletResponse response =(HttpServletResponse) facesContext.getExternalContext().getResponse();InputStream is = null;try {is = new ByteArrayInputStream(file);DownloadWrapper downloadWrapper =new DownloadWrapper(is, fileName, contentType, new Date(), file.length);FileDownloader.writeOutput(downloadWrapper, contentDisposition, response);facesContext.responseComplete();} catch (Exception ex) {return false;} finally {IOUtils.closeQuietly(is);}return true;}}	1
4434	"public class A {AuthorizedState authorizeRunAs(final Principal authorizationId, final boolean authorizeRunAs)throws RealmUnavailableException {if (isSamePrincipal(authorizationId)) {return this;}final State state =assignName(authorizedIdentity,getMechanismConfiguration(),getMechanismRealmConfiguration(),authorizationId,null,IdentityCredentials.NONE,IdentityCredentials.NONE,Attributes.EMPTY);if (!state.isNameAssigned()) {ElytronMessages.log.tracef(""RunAs authorization failed - unable to assign identity name"");return null;}final NameAssignedState nameAssignedState = (NameAssignedState) state;final RealmIdentity realmIdentity = nameAssignedState.getRealmIdentity();boolean ok = false;try {String targetName = nameAssignedState.getAuthenticationPrincipal().getName();if (authorizeRunAs && !authorizedIdentity.implies(new RunAsPrincipalPermission(targetName))) {ElytronMessages.log.tracef(""RunAs authorization failed - identity does not have required""+ "" RunAsPrincipalPermission(%s)"",targetName);return null;}final AuthorizedAuthenticationState newState = nameAssignedState.doAuthorization(false);if (newState == null) {return null;}ok = true;return newState;} finally {if (!ok) realmIdentity.dispose();}}}"	3
4435	"public class A {private int getAppliedSessionWaitTimeout() {LOGGER.logEvent(DalLogTypes.DAL_VALIDATION, ""SessionWaitTimeout="" + sessionWaitTimeout, """");if (sessionWaitTimeout == 0) {return 0;}int appliedSessionWaitTimeout = sessionWaitTimeout;if (sessionWaitTimeout < 0) {appliedSessionWaitTimeout = DEFAULT_SESSION_WAIT_TIMEOUT;}if (!isTestOnBorrow()) {if (getMinIdle() > 0) {return 0;}}LOGGER.logEvent(DalLogTypes.DAL_VALIDATION, ""AppliedSessionWaitTimeout="" + appliedSessionWaitTimeout, """");return appliedSessionWaitTimeout;}}"	4
4436	public class A {public void createAtlasInstances(HBaseOperationContext hbaseOperationContext) {OPERATION operation = hbaseOperationContext.getOperation();switch (operation) {case CREATE_NAMESPACE:case ALTER_NAMESPACE:createOrUpdateNamespaceInstance(hbaseOperationContext);break;case DELETE_NAMESPACE:deleteNameSpaceInstance(hbaseOperationContext);break;case CREATE_TABLE:case ALTER_TABLE:createOrUpdateTableInstance(hbaseOperationContext);break;case DELETE_TABLE:deleteTableInstance(hbaseOperationContext);break;case CREATE_COLUMN_FAMILY:case ALTER_COLUMN_FAMILY:createOrUpdateColumnFamilyInstance(hbaseOperationContext);break;case DELETE_COLUMN_FAMILY:deleteColumnFamilyInstance(hbaseOperationContext);break;}}}	1
4437	public class A {@Overridepublic void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {if (LOG.isTraceEnabled()) {}if (exceptionHandled) {return;}exceptionHandled = true;if (LOG.isDebugEnabled()) {}NettyCamelState state = getState(ctx, cause);Exchange exchange = state != null ? state.getExchange() : null;if (exchange != null) {Throwable initialCause = exchange.getException();if (initialCause != null && initialCause.getCause() == null) {initialCause.initCause(cause);} else {exchange.setException(cause);}NettyHelper.close(ctx.channel());state.callbackDoneOnce(false);}}}	2
4438	public class A {synchronized boolean checkpoint(boolean force) throws Exception {if (!backingStore.syncRequired() && !inflightTakes.syncRequired() && !force) {return false;}backingStore.beginCheckpoint();inflightPuts.serializeAndWrite();inflightTakes.serializeAndWrite();backingStore.checkpoint();return true;}}	1
4439	public class A {@Overridepublic boolean rename(final Path src, final Path dst) throws IOException {if (src == null || dst == null) {return false;}if (stocatorPath.isTemporaryPath(src)) {return true;}if (!exists(src)) {return false;}final Path srcPath = storageClient.qualify(src);final Path dstPath = storageClient.qualify(dst);return storageClient.rename(hostNameScheme, srcPath.toString(), dstPath.toString());}}	4
4440	public class A {public static void indexStreamMem(Indexer index, String url) throws IOException {Set<String> downloads = getDownloadsOfUrl(url, DOWNLOAD_SUFFIX);SameAsCollectorStreamMem sink = new SameAsCollectorStreamMem();for (String download : downloads) {URL streamUrl = new URL(download);try (InputStream fi = streamUrl.openStream();InputStream bi = new BufferedInputStream(fi);InputStream bzip2is = new BZip2CompressorInputStream(bi)) {indexStreamMem(index, bzip2is, sink);} catch (Exception e) {e.printStackTrace();}}}}	2
4441	public class A {private void sleep(final Long sleepTime) {if (sleepTime == null || sleepTime == 0) {return;}try {Thread.sleep(sleepTime);} catch (final InterruptedException e) {}}}	2
4442	"public class A {@Unstablepublic synchronized void preWarm(PreWarmVertex preWarmVertex, long timeout, TimeUnit unit)throws TezException, IOException {if (!isSession) {return;}verifySessionStateForSubmission();DAG dag =org.apache.tez.dag.api.DAG.create(TezConstants.TEZ_PREWARM_DAG_NAME_PREFIX + ""_"" + preWarmDAGCounter++);dag.addVertex(preWarmVertex);boolean isReady;try {isReady = waitTillReady(timeout, unit);} catch (InterruptedException e) {throw new IOException(""Interrupted while waiting for AM to become "" + ""available"", e);}if (isReady) {prewarmDagClient = submitDAG(dag);} else {throw new SessionNotReady(""Tez AM not ready, could not submit DAG"");}}}"	1
4443	"public class A {public static void main(String[] args) {LoggingFactory.init(""info"");try {int[] buffer = new int[] {(int) 0xff, (int) 0xd0};int a = (byte) buffer[0] << 8 | buffer[1] & 0xff;} catch (Exception e) {Logging.logError(e);}}}"	1
4444	public class A {@Overridepublic void run() {boolean bQueueActive;try {bQueueActive =PropertyAccessor.getInstance().getPropertyBoolean(GATEWAY_PROPERTY_FILE, DEFERRED_QUEUE_SWITCH_PROPERTY);if (bQueueActive) {forceDeferredQueueProcess();} else {}} catch (PropertyAccessException ex) {}}}	4
4445	public class A {private void executeCallbacks(final List<JDBCJournalRecord> records, final boolean success) {Runnable r =new Runnable() {@Overridepublic void run() {for (JDBCJournalRecord record : records) {if (logger.isTraceEnabled()) {}record.complete(success);}}};completeExecutor.execute(r);}}	1
4446	public class A {@Overridepublic void uncaughtException(Thread t, Throwable e) {Runtime.getRuntime().exit(1);}}	1
4447	public class A {private void writeRejectionOnCommand(final Throwable exception) {final String errorMessage =String.format(PROCESSING_ERROR_MESSAGE, typedEvent, exception.getMessage());if (typedEvent.getRecordType() == RecordType.COMMAND) {logStreamWriter.appendRejection(typedEvent, RejectionType.PROCESSING_ERROR, errorMessage);responseWriter.writeRejectionOnCommand(typedEvent, RejectionType.PROCESSING_ERROR, errorMessage);}}}	1
4448	"public class A {private void deleteAlias(LambdaClient lambdaClient, Exchange exchange)throws InvalidPayloadException {DeleteAliasRequest request = null;DeleteAliasResponse result;if (getConfiguration().isPojoRequest()) {request = exchange.getIn().getMandatoryBody(DeleteAliasRequest.class);} else {DeleteAliasRequest.Builder builder = DeleteAliasRequest.builder();builder.functionName(getEndpoint().getFunction());String aliasName =exchange.getIn().getHeader(Lambda2Constants.FUNCTION_ALIAS_NAME, String.class);if (ObjectHelper.isEmpty(aliasName)) {throw new IllegalArgumentException(""Function alias must be specified to delete an alias"");}builder.name(aliasName);request = builder.build();}try {result = lambdaClient.deleteAlias(request);} catch (AwsServiceException ase) {throw ase;}Message message = getMessageForResponse(exchange);message.setBody(result);}}"	1
4449	"public class A {private static String putJsonValue(String jsonStr, String keys, String value) {String keyStr = """";try {JSONObject jsonObj = new JSONObject(jsonStr);JSONObject jsonObjOut = jsonObj;StringTokenizer keyTokens = new StringTokenizer(keys, ""."");while (keyTokens.hasMoreElements()) {keyStr = keyTokens.nextToken();if (keyTokens.hasMoreElements()) {Object keyValue = jsonObj.get(keyStr);if (keyValue instanceof JSONObject) {jsonObj = (JSONObject) keyValue;} else {return null;}} else {jsonObj.put(keyStr, value);return jsonObjOut.toString(3);}}return null;} catch (Exception e) {if (e.getMessage().contains(""not found"")) {} else {}}return null;}}"	3
4450	"public class A {private void addPngFileToReport(File pngFile, Scenario scenario) {if (scenario != null) {try {BufferedImage bImage = ImageIO.read(pngFile);ByteArrayOutputStream bos = new ByteArrayOutputStream();ImageIO.write(bImage, ""png"", bos);scenario.embed(bos.toByteArray(), ""image/png"");} catch (IOException e) {}}}}"	1
4451	public class A {public synchronized List<PropFindResponse> propFind(String path, int depth, QName... fields)throws IOException, io.milton.httpclient.HttpException, NotAuthorizedException,BadRequestException {List<QName> list = new ArrayList<>(Arrays.asList(fields));String href = baseHref() + rootPath + path;return _doPropFind(href, depth, list);}}	1
4452	public class A {public void showAllRelations(DocumentWrapper<DocumentModel> wrapDoc, MultipartServiceContext ctx)throws Exception {String thisCSID = NuxeoUtils.getCsid(wrapDoc.getWrappedObject());RelationsCommonList subjectListOuter = getRelations(thisCSID, null, null);List<RelationsCommonList.RelationListItem> subjectList = subjectListOuter.getRelationListItem();RelationsCommonList objectListOuter = getRelations(null, thisCSID, null);List<RelationsCommonList.RelationListItem> objectList = objectListOuter.getRelationListItem();if (logger.isTraceEnabled()) {String dump = dumpLists(thisCSID, subjectList, objectList, null);}subjectList.addAll(objectList);long relatedSize = subjectList.size();subjectListOuter.setTotalItems(relatedSize);subjectListOuter.setItemsInPage(relatedSize);PayloadOutputPart relationsPart =new PayloadOutputPart(RelationClient.SERVICE_COMMON_LIST_NAME, subjectListOuter);ctx.addOutputPart(relationsPart);}}	1
4453	public class A {public ActorFuture<Void> pauseExporting() {final CompletableActorFuture<Void> completed = new CompletableActorFuture<>();actor.call(() -> {try {final var pauseStatePersisted = context.pauseExporting();if (context.getExporterDirector() != null && pauseStatePersisted) {context.getExporterDirector().pauseExporting().onComplete(completed);} else {completed.complete(null);}} catch (final IOException e) {completed.completeExceptionally(e);}});return completed;}}	1
4454	"public class A {public List<Object[]> fetchMajorCodeAndBEAmountForReport(final CFinancialYear financialYear, final String fundType, final String budgetType) {final String excludeDept ="" and bd2.executing_department!=(Select id_dept from eg_department where dept_code='Z') "";final String budgetingType = fundType.toUpperCase() + ""_"" + budgetType.toUpperCase();StringBuffer query = new StringBuffer();query =query.append(""SELECT cao.majorcode, SUM(round(bd2.approvedamount/1000,0)) FROM egf_budgetdetail bd1,""+ "" egf_budgetdetail bd2, egf_budgetgroup bg, egf_budget b1, egf_budget b2,""+ "" chartofaccounts cao, financialyear f, egw_status wf WHERE bd1.budget =b1.id AND""+ "" bd2.budget =b2.id AND b1.isbere='RE' AND b2.isbere='BE' AND f.id =""+ financialYear.getId()+ "" AND b1.financialyearid=""+ financialYear.getId()+ "" AND b2.financialyearid=""+ financialYear.getId()+ "" AND bd2.budgetgroup =bg.id AND bg.ACCOUNTTYPE ='""+ budgetingType+ ""'""+ excludeDept+ "" AND ((cao.id BETWEEN bg.mincode AND bg.maxcode) OR cao.majorcode  ""+ "" =bg.majorcode) AND bd1.uniqueno = bd2.uniqueno AND wf.code='Approved' AND""+ "" bd1.status = wf.id GROUP BY cao.majorcode"");query = query.append("" UNION "");query =query.append(""SELECT cao.majorcode, SUM(round(bd2.approvedamount/1000,0)) FROM egf_budgetdetail bd1,""+ "" egf_budgetdetail bd2, egf_budgetgroup bg, egf_budget b1, egf_budget b2,""+ "" chartofaccounts cao, financialyear f, egw_status wf WHERE bd1.budget =b1.id AND""+ "" bd2.budget =b2.id AND b1.isbere='RE' AND b2.isbere='BE' AND f.id =""+ financialYear.getId()+ "" AND b1.financialyearid=""+ financialYear.getId()+ "" AND b2.financialyearid=""+ financialYear.getId()+ ""  AND bd2.budgetgroup =bg.id AND bg.ACCOUNTTYPE ='""+ budgetingType+ ""'""+ excludeDept+ "" AND cao.id =bg.mincode AND cao.id =bg.maxcode AND bg.majorcode IS NULL AND""+ "" bd1.uniqueno = bd2.uniqueno AND wf.value='Approved' AND bd1.status = wf.id""+ "" GROUP BY cao.majorcode"");final List<Object[]> result = getSession().createSQLQuery(query.toString()).list();if (LOGGER.isInfoEnabled())LOGGER.info(""------------------------------------------------------------------------------------------------------"");if (LOGGER.isInfoEnabled())if (LOGGER.isInfoEnabled())return result;}}"	3
4455	"public class A {@Overrideprotected void doSessionOpened(HttpAcceptSession session) throws Exception {HttpMethod method = session.getMethod();String service = session.getParameter(""service"");if (method != HttpMethod.GET) {session.setStatus(HttpStatus.CLIENT_METHOD_NOT_ALLOWED);session.close(false);throw new IllegalArgumentException(""HTTP method not allowed: "" + method);} else if (!""turn"".equals(service)) {session.setStatus(HttpStatus.CLIENT_BAD_REQUEST);session.close(false);throw new IllegalArgumentException(""Unsupported/invalid service: "" + service);}session.setVersion(HttpVersion.HTTP_1_1);session.setWriteHeader(HttpHeaders.HEADER_CONTENT_TYPE, ""application/json"");String username = null;char[] password = null;if (credentialGenerator != null) {Subject subject = session.getSubject();if (subject == null) {throw new TurnException(""Subject is null"");}credentialGenerator.setCredentialsTTL(ttl);TurnRestCredentials credentials = credentialGenerator.generate(subject);username = credentials.getUsername();password = credentials.getPassword();}String response = TurnRestJSONResponse.createResponse(username, password, ttl, this.urls);if (password != null) {Arrays.fill(password, '0');}IoBufferAllocatorEx<?> allocator = session.getBufferAllocator();IoBufferEx out =allocator.wrap(allocator.allocate(response.length())).setAutoExpander(allocator);out.put(response.getBytes());out.flip();session.setWriteHeader(HttpHeaders.HEADER_CONTENT_LENGTH, Integer.toString(out.remaining()));session.setWriteHeader(HttpHeaders.HEADER_MAX_AGE, ttl);session.write(out);session.close(false);}}"	1
4456	"public class A {protected ResourceBundle getResourceBundle(Locale locale) {try {return ResourceBundleUtil.getBundle(""content.Language"", locale, getClass());} catch (MissingResourceException missingResourceException) {if (_log.isDebugEnabled()) {}return ResourceBundleUtil.getBundle(""content.Language"", locale, PortalClassLoaderUtil.getClassLoader());}}}"	1
4457	"public class A {private boolean logSecurityGroupAction(final SecurityGroupRulesCmd cmd, final Ternary<String, Long, Long> rule) {String action = "", do nothing"";String reason = "", reason="";final Long currSeqnum = rule == null ? null : rule.third();final String currSig = rule == null ? null : rule.first();boolean updateSeqnoAndSig = false;if (currSeqnum != null) {if (cmd.getSeqNum() > currSeqnum) {updateSeqnoAndSig = true;if (!cmd.getSignature().equals(currSig)) {action = "", updated iptables"";reason = reason + ""seqno_increased_sig_changed"";} else {reason = reason + ""seqno_increased_sig_same"";}} else if (cmd.getSeqNum() < currSeqnum) {reason = reason + ""seqno_decreased"";} else {if (!cmd.getSignature().equals(currSig)) {action = "", updated iptables"";reason = reason + ""seqno_same_sig_changed"";updateSeqnoAndSig = true;} else {reason = reason + ""seqno_same_sig_same"";}}} else {updateSeqnoAndSig = true;action = "", updated iptables"";reason = "", seqno_new"";}return updateSeqnoAndSig;}}"	8
4458	public class A {@Deprecatedpublic String get(Map flags, String key) {return getFirst(flags, key);}}	2
4459	"public class A {@GET@Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@Path(""/{id}/acl"")@CheckPermission(roles = {Role.SYSTEM_MONITOR, Role.TENANT_ADMIN},acls = {ACL.ANY})public NfsACLs getFileShareACLs(@PathParam(""id"") URI id,@QueryParam(""allDirs"") boolean allDirs,@QueryParam(""subDir"") String subDir) {ArgValidator.checkFieldUriType(id, FileShare.class, ""id"");FileShare fs = queryResource(id);VirtualPool vpool = _dbClient.queryObject(VirtualPool.class, fs.getVirtualPool());if (!vpool.getProtocols().contains(StorageProtocol.File.NFSv4.name())) {throw APIException.methodNotAllowed.vPoolDoesntSupportProtocol(""Vpool does not support "" + StorageProtocol.File.NFSv4.name() + "" protocol"");}NfsACLUtility util = new NfsACLUtility(_dbClient, fs, null, subDir);NfsACLs acls = util.getNfsAclFromDB(allDirs);if (acls.getNfsACLs() != null && !acls.getNfsACLs().isEmpty()) {} else {}return acls;}}"	3
4460	"public class A {public LeaseItem closeOriginalAndOpenNewLeaseItem(final LocalDate startDateNewItem,final LeaseItem originalItem,final InvoicingFrequency invoicingFrequency) {final Lease lease = originalItem.getLease();originalItem.verifyUntil(startDateNewItem.plusYears(1).plusDays(1));LeaseTerm currentTerm = originalItem.currentTerm(startDateNewItem);if (currentTerm == null) {return null;}final LeaseItem newItem =lease.newItem(originalItem.getType(),originalItem.getInvoicedBy(),originalItem.getCharge(),invoicingFrequency,originalItem.getPaymentMethod(),startDateNewItem);newItem.setEndDate(originalItem.getEndDate());if (originalItem.getTax() != null) newItem.setTax(originalItem.getTax());originalItem.changeDates(originalItem.getStartDate(), startDateNewItem.minusDays(1));if (lease.getStatus() != LeaseStatus.PREVIEW) {final String message =String.format(""Item of type %s, charge %s and invoicing frequency %s for lease %s closed on date""+ "" %s"",originalItem.getType(),originalItem.getCharge().getReference(),originalItem.getInvoicingFrequency(),lease.getReference(),originalItem.getEndDate());final String message1 =String.format(""Item of type %s, charge %s and invoicing frequency %s for lease %s created with""+ "" interval %s"",newItem.getType(),newItem.getCharge(),newItem.getInvoicingFrequency(),lease.getReference(),newItem.getInterval().toString());}LeaseTerm newTerm = newItem.newTerm(startDateNewItem, null);currentTerm.copyValuesTo(newTerm);if (currentTerm.getClass().isAssignableFrom(LeaseTermForIndexable.class)) {while (currentTerm.getNext() != null) {currentTerm = currentTerm.getNext();newTerm = newTerm.createNext(currentTerm.getStartDate(), null);currentTerm.copyValuesTo(newTerm);}}final List<LeaseItemSource> sourceItems =leaseItemSourceRepository.findBySourceItem(originalItem);sourceItems.stream().map(lis -> lis.getItem()).forEach(li -> li.newSourceItem(newItem));newItem.verifyUntil(startDateNewItem.plusMonths(2));return newItem;}}"	3
4461	public class A {private void updatePedigreeDates(BaseObject pedigreeXObject, XWikiContext context, String documentName) {String dataText = pedigreeXObject.getStringValue(PEDIGREECLASS_JSONDATA_KEY);if (StringUtils.isEmpty(dataText)) {return;}try {JSONObject pedigree = new JSONObject(dataText);JSONArray pedigreeNodes = pedigree.optJSONArray(PEDIGREE_GRAPH_KEY);JSONArray convertedNodes = new JSONArray();if (pedigreeNodes != null) {for (Object node : pedigreeNodes) {JSONObject nodeJSON = (JSONObject) node;this.convertJSONField(nodeJSON, PEDIGREE_DATE_FIELDS);convertedNodes.put(nodeJSON);}pedigree.put(PEDIGREE_GRAPH_KEY, convertedNodes);String pedigreeData = pedigree.toString();pedigreeXObject.set(PEDIGREECLASS_JSONDATA_KEY, pedigreeData, context);}} catch (Exception e) {}}}	1
4462	public class A {@Overridepublic Node saveSnapshot(String configUniqueId,List<SnapshotItem> snapshotItems,String snapshotName,String userName,String comment) {for (SnapshotItem snapshotItem : snapshotItems) {}return nodeDAO.saveSnapshot(configUniqueId, snapshotItems, snapshotName, comment, userName);}}	3
4463	"public class A {@SuppressWarnings(""unchecked"")public Bed[] getBedsByRoom(Integer roomId, Boolean active) {String query = getBedsQuery(null, roomId, active);Object[] values = getBedsValues(null, roomId, active);List<Bed> beds = getBeds(query, values);return beds.toArray(new Bed[beds.size()]);}}"	1
4464	"public class A {private Set<String> getItemsInLocalAuthority(ServiceContext ctx, Specifier authoritySpecifier)throws Exception {Set<String> itemShortIds = new HashSet<String>();ResourceMap resourceMap = ctx.getResourceMap();String resourceName = ctx.getClient().getServiceName();AuthorityResource authorityResource = (AuthorityResource) resourceMap.get(resourceName);long pageNum = 0;long pageSize = SAS_SYNC_PAGE_SIZE;List<ListItem> listItems;do {if (logger.isDebugEnabled()) {}UriInfo uriInfo =new UriInfoImpl(new URI(""""),new URI(""""),"""",""pgSz="" + pageSize + ""&pgNum="" + pageNum,Collections.<PathSegment>emptyList());AbstractCommonList acl =authorityResource.getAuthorityItemList(ctx, authoritySpecifier.getURNValue(), uriInfo);listItems = acl.getListItem();if (logger.isDebugEnabled()) {}for (ListItem listItem : listItems) {Boolean proposed = getBooleanValue(listItem, AuthorityItemJAXBSchema.PROPOSED);if (proposed == false) {itemShortIds.add(AbstractCommonListUtils.ListItemGetElementValue(listItem, AuthorityItemJAXBSchema.SHORT_IDENTIFIER));}}pageNum = pageNum + 1;} while (listItems.size() > 0 && listItems.size() == SAS_SYNC_PAGE_SIZE);return itemShortIds;}}"	2
4465	public class A {@Overridepublic String getImageSrc() {try {return _assetRenderer.getThumbnailPath(_renderRequest);} catch (Exception exception) {if (_log.isDebugEnabled()) {}}return null;}}	1
4466	public class A {private void resolveRecord(ModelDeclaration model, AstModelDefinition<AstRecord> node) {assert model != null;assert node != null;PropertyDeclarationProcessor refs =PropertyDeclarationProcessor.resolve(context, model, node.expression);model.putTrait(ReferencesTrait.class, new ReferencesTrait(node.expression, refs.references));model.putTrait(ProjectionsTrait.class, new ProjectionsTrait(node.expression, refs.projections));if (context.hasError()) {return;}PropertyReferenceDeclarationProcessor.resolve(context, model, node.expression);if (node.kind == ModelDefinitionKind.RECORD) {if (context.hasError()) {return;}for (PropertyReferenceDeclaration ref : model.getDeclaredPropertyReferences()) {if (ref.getReference().isStub()) {AstNode orig = ref.getOriginalAst();if (orig == null) {orig = node.name;}}}}}}	4
4467	"public class A {public static void clearInvalidSessions(final Principal user) {final PropertyKey<String[]> sessionIdKey = StructrApp.key(Principal.class, ""sessionIds"");final String[] sessionIds = user.getProperty(sessionIdKey);if (sessionIds != null && sessionIds.length > 0) {final SessionCache sessionCache =Services.getInstance().getService(HttpService.class, ""default"").getSessionCache();for (final String sessionId : sessionIds) {HttpSession session = null;try {session = sessionCache.get(sessionId);} catch (Exception ex) {}if (session == null || SessionHelper.isSessionTimedOut(session)) {SessionHelper.clearSession(sessionId);}}}}}"	2
4468	public class A {private void loadMethodParameters(List<AdviceParameter> parameters,int startIndex,@Nullable Integer travelerLocal,Type adviceType,Class<? extends Annotation> annotationType,boolean useSavedArgs,Object... stack) {int argIndex = 0;for (int i = startIndex; i < parameters.size(); i++) {AdviceParameter parameter = parameters.get(i);switch (parameter.kind()) {case RECEIVER:loadTarget();break;case METHOD_ARG:loadMethodParameter(adviceType, annotationType, argIndex++, parameter, useSavedArgs);break;case METHOD_ARG_ARRAY:loadArgArray(useSavedArgs);break;case METHOD_NAME:loadMethodName();break;case TRAVELER:loadTraveler(travelerLocal, adviceType, annotationType, parameter);break;case CLASS_META:checkNotNull(metaHolderInternalName);loadClassMeta(parameter);break;case METHOD_META:checkNotNull(metaHolderInternalName);checkNotNull(methodMetaGroupUniqueNum);loadMethodMeta(parameter);break;case THREAD_CONTEXT:checkNotNull(threadContextLocal);loadLocal(threadContextLocal);break;case OPTIONAL_THREAD_CONTEXT:checkNotNull(threadContextHolderLocal);checkNotNull(threadContextLocal);loadOptionalThreadContext(stack);break;default:pushDefault(parameter.type());break;}}}}	1
4469	public class A {public void attachClean(StgFilterRow instance) {try {sessionFactory.getCurrentSession().lock(instance, LockMode.NONE);} catch (RuntimeException re) {throw re;}}}	3
4470	public class A {private void processCommandTags(final Element equipmentUnit, final EquipmentConfiguration equipmentConfiguration) {Element commandTagsBlock =(Element) equipmentUnit.getElementsByTagName(COMMAND_TAGS_ELEMENT).item(0);NodeList commandTags = commandTagsBlock.getElementsByTagName(COMMAND_TAG_ELEMENT);SourceCommandTag sourceCommandTag = null;for (int i = 0; i < commandTags.getLength(); i++) {sourceCommandTag = SourceCommandTag.fromConfigXML((Element) commandTags.item(i));equipmentConfiguration.getCommandTags().put(sourceCommandTag.getId(), sourceCommandTag);}}}	1
4471	"public class A {private Void completeExecution(DefaultBuildExecutionSession buildExecutionSession, Throwable e) {Long buildExecutionId = buildExecutionSession.getId();try {ProcessStageUtils.logProcessStageBegin(""FINALIZING_BUILD"", ""Finalizing build ..."");if (e != null) {} else {}buildExecutionSession.setStatus(BuildExecutionStatus.FINALIZING_EXECUTION);if (buildExecutionSession.getStartTime() == null) {buildExecutionSession.setException(new ExecutorException(""Missing start time.""));}if (e != null) {stopRunningEnvironment(e);} else {try {destroyEnvironment(buildExecutionSession);} catch (BuildProcessException destroyException) {e = destroyException;}}if (e != null) {buildExecutionSession.setException(new ExecutorException(e));}if (buildExecutionSession.getEndTime() != null) {buildExecutionSession.setException(new ExecutorException(""End time already set.""));} else {buildExecutionSession.setEndTime(new Date());}if (buildExecutionSession.isCanceled()) {buildExecutionSession.setStatus(BuildExecutionStatus.CANCELLED);} else if (buildExecutionSession.hasFailed()) {buildExecutionSession.setStatus(BuildExecutionStatus.DONE_WITH_ERRORS);} else {buildExecutionSession.setStatus(BuildExecutionStatus.DONE);}runningExecutions.remove(buildExecutionId);} catch (Throwable t) {String executorException = ""Unable to recover, see system log for the details."";if (t.getMessage() != null) {executorException += "" "" + t.getMessage();}buildExecutionSession.setException(new ExecutorException(executorException));buildExecutionSession.setEndTime(new Date());buildExecutionSession.setStatus(BuildExecutionStatus.SYSTEM_ERROR);runningExecutions.remove(buildExecutionId);} finally {RunningEnvironment runningEnvironment = buildExecutionSession.getRunningEnvironment();if (runningEnvironment == null) {} else {RepositorySession repositorySession = runningEnvironment.getRepositorySession();if (repositorySession == null) {} else {repositorySession.close();}}}return null;}}"	11
4472	public class A {@Overridepublic boolean accepts(SourceRecord ourSourceRecord) {if (!thisReaderNearEnd.get()) {Long sourceRecordTimestamp =(Long) ourSourceRecord.sourceOffset().get(SourceInfo.TIMESTAMP_KEY);if (sourceRecordTimestamp != null) {Instant recordTimestamp = Instant.ofEpochSecond(sourceRecordTimestamp);Instant now = Instant.now();Duration durationToEnd = Duration.between(recordTimestamp, now);if (durationToEnd.compareTo(minHaltingDuration) <= 0) {thisReaderNearEnd.set(true);}}}return !(thisReaderNearEnd.get() && otherReaderNearEnd.get());}}	1
4473	public class A {@Overridepublic void onUnDeploy(DeploymentEvent event) {runningDeployments.labels(event.getDeploymentId()).dec();}}	1
4474	"public class A {@Overridepublic void removeJob(JobID jobId) {Preconditions.checkState(DefaultJobLeaderService.State.STARTED == state, ""The service is currently not running."");Tuple2<LeaderRetrievalService, DefaultJobLeaderService.JobManagerLeaderListener> entry =jobLeaderServices.remove(jobId);if (entry != null) {LeaderRetrievalService leaderRetrievalService = entry.f0;DefaultJobLeaderService.JobManagerLeaderListener jobManagerLeaderListener = entry.f1;jobManagerLeaderListener.stop();try {leaderRetrievalService.stop();} catch (Exception e) {}}}}"	2
4475	"public class A {public synchronized byte[] publishServoEvent(Integer deviceId, Integer eventType, Integer currentPos, Integer targetPos) {if (debug) {}ByteArrayOutputStream baos = new ByteArrayOutputStream();try {appendMessage(baos, MAGIC_NUMBER);appendMessage(baos, 1 + 1 + 1 + 2 + 2);appendMessage(baos, PUBLISH_SERVO_EVENT);appendMessage(baos, deviceId);appendMessage(baos, eventType);appendMessageb16(baos, currentPos);appendMessageb16(baos, targetPos);byte[] message = sendMessage(baos);if (ackEnabled) {waitForAck();}if (record != null) {txBuffer.append(""> publishServoEvent"");txBuffer.append(""/"");txBuffer.append(deviceId);txBuffer.append(""/"");txBuffer.append(eventType);txBuffer.append(""/"");txBuffer.append(currentPos);txBuffer.append(""/"");txBuffer.append(targetPos);txBuffer.append(""\n"");record.write(txBuffer.toString().getBytes());txBuffer.setLength(0);}return message;} catch (Exception e) {return null;}}}"	2
4476	"public class A {@Overridepublic void warn(String msg, final Throwable t) {if (!isWarnEnabled()) {return;}msg = ""{} "" + msg;final Object[] os = {component, t.toString(), t};logRepository.addLogMessage(LogLevel.WARN, msg, os, t);}}"	1
4477	"public class A {private void createAndSendStatusMail(ImportRun importRun) {try {SimpleMailMessage mailMessage = new SimpleMailMessage();String username = importRun.getUsername();User user = userService.getUser(username);if (user == null) {throw new UnknownUserException(username);}mailMessage.setTo(user.getEmail());mailMessage.setSubject(createMailTitle(importRun));mailMessage.setText(createEnglishMailText(importRun, ZoneId.systemDefault()));mailSender.send(mailMessage);} catch (MailException mce) {throw new MolgenisDataException(""An error occurred. Please contact the administrator."");}}}"	1
4478	public class A {@Overridepublic Object get(ChannelHandlerContext ctx, URIDecoder uriDecoder) {List<InterfaceHttpData> bodyHttpDatas = uriDecoder.getBodyHttpDatas();if (bodyHttpDatas == null || bodyHttpDatas.size() == 0) {return null;}for (InterfaceHttpData data : bodyHttpDatas) {if (name.equals(data.getName())) {if (data.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {Attribute attribute = (Attribute) data;try {return ReflectionUtil.castTo(type, attribute.getValue());} catch (IOException e) {}}}}return null;}}	1
4479	public class A {private void checkEndPointsForExports(Collection<String> endpoints) {for (String endpoint : endpoints) {if (StorageProtocol.isFCEndpoint(endpoint)|| iSCSIUtility.isValidIQNPortName(endpoint)|| iSCSIUtility.isValidEUIPortName(endpoint)) {NetworkUtil.checkNotUsedByActiveExportGroup(endpoint, _dbClient);} else {NetworkUtil.checkNotUsedByActiveFileExport(endpoint, _dbClient);}}}}	2
4480	"public class A {@Testpublic void testAggregateProcessInstancesSourceEmpty() throws Exception {String xml1 = read(this.getClass().getResourceAsStream(""/jaxb/process-instance-empty.xml""));String xml2 = read(this.getClass().getResourceAsStream(""/jaxb/process-instance-2.xml""));JaxbXMLResponseAggregator aggregate = new JaxbXMLResponseAggregator();List<String> data = new ArrayList<>();data.add(xml1);data.add(xml2);String result = aggregate.aggregate(data);Document xml = toXml(result);assertNotNull(xml);NodeList processes = xml.getElementsByTagName(""process-instance-list"");assertNotNull(processes);assertEquals(1, processes.getLength());NodeList processInstances = xml.getElementsByTagName(""process-instance"");assertNotNull(processInstances);assertEquals(3, processInstances.getLength());}}"	1
4481	public class A {@Overridepublic void onClick(final AjaxRequestTarget target, final GroupTO ignore) {try {SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));target.add(container);} catch (SyncopeClientException e) {SyncopeConsoleSession.get().onException(e);}((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);}}	1
4482	public class A {private void updateRegistryNode(org.gbif.api.model.registry.Node registryNode,Participant participant,@Nullable Node directoryNode) {registryNode = fillRegistryNode(registryNode, participant, directoryNode);registryNode.setModifiedBy(DIRECTORY_UPDATE_USER);nodeMapper.update(registryNode);}}	1
4483	public class A {private void removeUserFromOtherOrganizations(User user) throws SystemException, PortalException {long[] usersOrganizations = user.getOrganizationIds();for (long usersOrganization : usersOrganizations) {UserLocalServiceUtil.deleteOrganizationUser(usersOrganization, user);}}}	1
4484	"public class A {private Object constructAndInject(String clazz, ClassLoader loader) {try {Class<?> cl = loader.loadClass(clazz);try {Object built = cl.getDeclaredConstructor().newInstance();for (Field field : cl.getDeclaredFields()) {if (field.isAnnotationPresent(InjectPlugin.class)) {String plugin = field.getAnnotation(InjectPlugin.class).value();if (plugin.equals(""detect"")) {Class<?> type = field.getType();for (Plugin foundPlugin : this.loadedPlugins.values()) {if (foundPlugin.getClass().equals(type)) {field.setAccessible(true);field.set(built, foundPlugin);break;}}} else {field.setAccessible(true);field.set(built, plugin(plugin));}}}return built;} catch (NoSuchMethodException e) {} catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {e.printStackTrace();}} catch (ClassNotFoundException e) {e.printStackTrace();}return null;}}"	1
4485	"public class A {protected synchronized SoftwareManager loadSoftwareManager(AppManagerAdd appManagerAdd) {String appMgrType = appManagerAdd.getType();String name = appManagerAdd.getName();if (!appMgrType.equals(Constants.IRONFAN)) {checkServerConnection(name, appManagerAdd.getUrl());}if (cache.containsKey(appManagerAdd.getName())) {return cache.get(appManagerAdd.getName());}String factoryClassName =Configuration.getString(configurationPrefix + appManagerAdd.getType());if (CommonUtil.isBlank(factoryClassName)) {String errMsg =String.format(Messages.getString(""SW_MGR_COLLECTOR.APP_MGR_FACTORY_UNDEFINED""),appManagerAdd.getType());throw new SWMgrCollectorInternalException(null, errMsg);}SoftwareManagerFactory softwareManagerFactory = null;try {Class<? extends SoftwareManagerFactory> clazz =ReflectionUtils.getClass(factoryClassName, SoftwareManagerFactory.class);softwareManagerFactory = ReflectionUtils.newInstance(clazz);} catch (Exception e) {String errMsg =String.format(Messages.getString(""SW_MGR_COLLECTOR.CANNT_INSTANTIATE_APP_MGR_FACTORY""),factoryClassName);throw new SWMgrCollectorInternalException(e, errMsg);}SoftwareManager softwareManager = null;try {softwareManager =softwareManagerFactory.getSoftwareManager(appManagerAdd.getUrl(),appManagerAdd.getUsername(),appManagerAdd.getPassword().toCharArray(),getPrivateKey());} catch (Exception ex) {throw SoftwareManagerCollectorException.CONNECT_FAILURE(appManagerAdd.getName(), ExceptionUtils.getRootCauseMessage(ex));}validateSoftwareManager(appManagerAdd.getName(), softwareManager);cache.put(appManagerAdd.getName(), softwareManager);return softwareManager;}}"	7
4486	public class A {private void insertTimeseries(Connection conn) {executeQuery(conn, CALL_INSERT_INTO_TS_KV_CURSOR);executeQuery(conn, CALL_CREATE_NEW_TS_KV_LATEST_TABLE);executeQuery(conn, CALL_INSERT_INTO_TS_KV_LATEST_CURSOR);}}	1
4487	"public class A {public JobDetail executeJob(final Job job, final Context context) throws OperationException {if (null == context) {throw new IllegalArgumentException(""A context is required"");}if (null == job) {throw new IllegalArgumentException(""A job is required"");}OperationChain wrappedOriginal = OperationChain.wrap(job.getOperation());context.setOriginalOpChain(wrappedOriginal);final Context clonedContext = context.shallowClone();final OperationChain clonedOpChain = wrappedOriginal.shallowClone();JobDetail result = null;try {updateOperationChainView(clonedOpChain);for (final GraphHook graphHook : config.getHooks()) {graphHook.preExecute(clonedOpChain, clonedContext);}updateOperationChainView(clonedOpChain);job.setOperation(clonedOpChain);result = store.executeJob(job, context);for (final GraphHook graphHook : config.getHooks()) {graphHook.postExecute(result, clonedOpChain, clonedContext);}} catch (final Exception e) {for (final GraphHook graphHook : config.getHooks()) {try {result = graphHook.onFailure(result, clonedOpChain, clonedContext, e);} catch (final Exception graphHookE) {}}CloseableUtil.close(clonedOpChain);CloseableUtil.close(result);throw e;}return result;}}"	1
4488	"public class A {private void stopNow(String reason) {stateLock.lock();try {DaemonState state = getState();switch (state) {case Idle:case Busy:case Canceled:case Broken:case StopRequested:updateState(Stopped);break;case Stopped:break;default:throw new IllegalStateException(""Daemon is in unexpected state: "" + state);}} finally {stateLock.unlock();}}}"	1
4489	"public class A {public void handleDeviceMessageStatus(final DeviceMessageStatus status)throws TechnicalException {switch (status) {case FAILURE:throw new TechnicalException(ComponentType.PROTOCOL_IEC61850, ""Device reports failure."");case REJECTED:throw new TechnicalException(ComponentType.PROTOCOL_IEC61850, ""Device reports rejected."");case OK:break;default:break;}}}"	4
4490	"public class A {@Testpublic void queryEnglish() {this.verbJPARepository.save(invite);Verb invite2 = this.verbJPARepository.findByEnglish(""invite"");assertThat(invite2, not(nullValue()));assertThat(invite2, equalTo(invite));this.verbJPARepository.deleteAll();Verb invite3 = this.verbJPARepository.findByEnglish(""invite"");assertThat(invite3, nullValue());}}"	1
4491	"public class A {public static Player load(String playerName) throws IOException, ClassNotFoundException {String filename = playerName + "".player"";Player player = null;FileInputStream fileIn = new FileInputStream(filename);ObjectInputStream in = new ObjectInputStream(fileIn);player = (Player) in.readObject();in.close();fileIn.close();return player;}}"	1
4492	public class A {@Overridepublic boolean validate(PasswordValidationCallback.Request request)throws PasswordValidationCallback.PasswordValidationException {if (super.validate(request)) {UsernamePasswordAuthenticationToken authRequest =new UsernamePasswordAuthenticationToken(user, user.getPassword());if (logger.isDebugEnabled()) {}SecurityContextHolder.getContext().setAuthentication(authRequest);return true;} else {return false;}}}	1
4493	"public class A {private void doTestscheduledTriggering(String workflowJson) throws Exception {var workflowJsonFile = temporaryFolder.newFile().toPath();Files.writeString(workflowJsonFile, workflowJson);var workflowCreateResult =cliJson(String.class, ""workflow"", ""create"", ""-f"", workflowJsonFile.toString(), component1);assertThat(workflowCreateResult,is(""Workflow "" + workflowId1 + "" in component "" + component1 + "" created.""));var enableResult = cliJson(String.class, ""workflow"", ""enable"", component1, workflowId1);assertThat(enableResult, is(""Workflow "" + workflowId1 + "" in component "" + component1 + "" enabled.""));var workflowWithState =cliJson(WorkflowWithState.class, ""workflow"", ""show"", component1, workflowId1);var nextNaturalTrigger = workflowWithState.state().nextNaturalTrigger().orElseThrow();var instance = nextNaturalTrigger.truncatedTo(ChronoUnit.SECONDS).toString();await().atMost(5, MINUTES).until(() -> {var events =cliJson(new TypeReference<List<EventInfo>>() {},""e"",component1,workflowId1,instance);return events.stream().anyMatch(event -> event.name().equals(""success""));});}}"	3
4494	public class A {public org.talend.mdm.webservice.WSVersion getComponentVersion(org.talend.mdm.webservice.WSGetComponentVersion arg0) {System.out.println(arg0);try {org.talend.mdm.webservice.WSVersion _return = null;return _return;} catch (java.lang.Exception ex) {ex.printStackTrace();throw new RuntimeException(ex);}}}	1
4495	public class A {void shutdown() {try {sslEngine.closeInbound();} catch (SSLException e) {if (log.isDebugEnabled())}}}	1
4496	public class A {@Overridepublic void createLogin(String userPid,String userName,String password,String givenName,String surname,String email,String organization)throws LoginCreationException {try {Login login = create(userPid, userName, password, givenName, surname, email, organization);loginAccess.addLogin(login);} catch (NoSuchAlgorithmException e) {throw new LoginCreationException(e.getMessage());}}}	1
4497	"public class A {public void testKafkaInputOperator(int sleepTime,final int totalCount,KafkaConsumer consumer,boolean isValid,boolean idempotent)throws Exception {latch = new CountDownLatch(1);KafkaTestProducer p = new KafkaTestProducer(TEST_TOPIC);p.setSendCount(totalCount);new Thread(p).start();LocalMode lma = LocalMode.newInstance();DAG dag = lma.getDAG();KafkaSinglePortStringInputOperator node =dag.addOperator(""Kafka message consumer"", KafkaSinglePortStringInputOperator.class);if (isSuicide) {dag.setAttribute(Context.DAGContext.CHECKPOINT_WINDOW_COUNT, 1);dag.setAttribute(Context.OperatorContext.STORAGE_AGENT,new FSStorageAgent(""target/ck"", new Configuration()));node.setMaxTuplesPerWindow(500);}if (idempotent) {node.setWindowDataManager(new FSWindowDataManager());}consumer.setTopic(TEST_TOPIC);node.setConsumer(consumer);consumer.setCacheSize(5000);if (isValid) {node.setZookeeper(""localhost:"" + KafkaOperatorTestBase.TEST_ZOOKEEPER_PORT[0]);}CollectorModule<String> collector =dag.addOperator(""TestMessageCollector"", new CollectorModule<String>());dag.addStream(""Kafka message"", node.outputPort, collector.inputPort).setLocality(Locality.CONTAINER_LOCAL);final LocalMode.Controller lc = lma.getController();lc.setHeartbeatMonitoringEnabled(false);lc.runAsync();Assert.assertTrue(""TIMEOUT: 30s "", latch.await(300000, TimeUnit.MILLISECONDS));Assert.assertTrue(""Expected count >= "" + totalCount + ""; Actual count "" + tupleCount.intValue(),totalCount <= tupleCount.intValue());p.close();lc.shutdown();}}"	1
4498	public class A {@Overridepublic String apply(String s) {try {return function.call();} catch (Exception e) {return e.getMessage();}}}	1
4499	public class A {@Overridepublic AttributeList setAttributes(final AttributeList arg0) {final AttributeList result = new AttributeList();for (final Iterator<Object> i = arg0.iterator(); i.hasNext(); ) {final Attribute attr = (Attribute) i.next();try {setAttribute(attr);result.add(attr);} catch (final AttributeNotFoundException| InvalidAttributeValueException| MBeanException| ReflectionException e) {}}return result;}}	1
4500	public class A {private void handleRowPacket(byte[] data) {ResponseHandler respHand = responseHandler;if (respHand != null) {respHand.rowResponse(data, source);} else {closeNoHandler();}}}	1
4501	public class A {@Overridepublic void reject(@Nullable T item, @Nullable String message) {blockedCounter.inc();rejectedCounter.inc();if (item != null && blockedItemsLogger != null) {blockedItemsLogger.warning(serializer.apply(item));}if (message != null && blockedItemsLimiter != null && blockedItemsLimiter.tryAcquire()) {}}}	1
4502	"public class A {@Overridepublic FormModel deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)throws JsonParseException {JsonObject jsonField = json.getAsJsonObject();JsonElement jsonClassName = jsonField.get(""formModelType"");if (jsonClassName != null && !StringUtils.isEmpty(jsonClassName.getAsString())) {try {return context.deserialize(json, Class.forName(jsonClassName.getAsString()));} catch (Exception ex) {}}return null;}}"	1
4503	"public class A {@Overridepublic AgencyAndId registerAlarmForArrivalAndDepartureAtStop(ArrivalAndDepartureQuery query, RegisterAlarmQueryBean alarmBean) {ArrivalAndDepartureInstance instance =_arrivalAndDepartureService.getArrivalAndDepartureForStop(query);if (instance == null) throw new ServiceException(""no arrival-departure found"");BlockInstance blockInstance = instance.getBlockInstance();AlarmsForBlockInstance alarms = getAlarmsForBlockInstance(blockInstance);int effectiveScheduleTime = computeEffectiveScheduleTimeForAlarm(alarmBean, instance);AlarmAction action = new AlarmAction();action.setUrl(alarmBean.getUrl());AlarmForBlockInstance alarm = alarms.registerAlarm(action, effectiveScheduleTime, instance);_alarmsById.put(alarm.getId(), alarm);return alarm.getId();}}"	1
4504	public class A {protected void runCopier(String outputDir) throws Exception {for (int i = 0; i < DEFAULT_TABLES_COUNT; i++) {sleep(SLEEP_IN_MS);Copier copier =new Copier(IntegrationTestBigLinkedListWithVisibility.getTableName(i), i, false);copier.setConf(getConf());copier.runCopier(outputDir);}}}	1
4505	public class A {private <T> T convert(byte[] paymentData, Class<T> tClass) {try {return objectMapper.readValue(paymentData, tClass);} catch (IOException e) {return null;}}}	1
4506	"public class A {public void appendRecommendations(StringBuilder builder) {prettyAppendHeading(builder, ""Recommedations"");SiteReportRater rater;try {rater = SiteReportRater.getSiteReportRater(""en"");ScoreReport scoreReport = rater.getScoreReport(report.getResultMap());LinkedHashMap<AnalyzedProperty, PropertyResultRatingInfluencer> influencers =scoreReport.getInfluencers();influencers.entrySet().stream().sorted((o1, o2) -> {return o1.getValue().compareTo(o2.getValue());}).forEach((entry) -> {PropertyResultRatingInfluencer influencer = entry.getValue();if (influencer.isBadInfluence() || influencer.getReferencedProperty() != null) {Recommendation recommendation =rater.getRecommendations().getRecommendation(entry.getKey());PropertyResultRecommendation resultRecommendation =recommendation.getPropertyResultRecommendation(influencer.getResult());if (detail.isGreaterEqualTo(ScannerDetail.DETAILED)) {printFullRecommendation(builder, rater, recommendation, influencer, resultRecommendation);} else {printShortRecommendation(builder, influencer, resultRecommendation);}}});} catch (Exception ex) {prettyAppend(builder, ""Could not append recommendations - unreleated error"", AnsiColor.RED);}}}"	1
4507	"public class A {@Test(groups = {""Live"", ""Live-sanity""})public void testUbuntu() throws Exception {obtainMachine(ImmutableMap.of(JcloudsLocation.OS_FAMILY, ""ubuntu""));Image image = template.getImage();assertUbuntu(image, ""14.04"");}}"	1
4508	"public class A {@SuppressWarnings(""deprecation"")public static void add(Job job, String resourcePath, String resourceName) throws IOException {if (job == null) {throw new IllegalArgumentException(""job must not be null"");}if (resourcePath == null) {throw new IllegalArgumentException(""resourcePath must not be null"");}if (resourceName == null) {throw new IllegalArgumentException(""resourceName must not be null"");}Configuration conf = job.getConfiguration();List<FileStatus> list = TemporaryStorage.listStatus(conf, new Path(resourcePath));if (list.isEmpty()) {throw new IOException(MessageFormat.format(""Resource not found: {0}"", resourcePath));}List<String> localNames = restoreStrings(conf, getLocalCacheNameKey(resourceName));List<String> remotePaths = restoreStrings(conf, getRemotePathKey(resourceName));long size = conf.getLong(KEY_SIZE, 0L);int index = localNames.size();for (FileStatus status : list) {String name = String.format(""%s-%04d"", resourceName, index++);StringBuilder buf = new StringBuilder();buf.append(status.getPath().toString());buf.append('#');buf.append(name);String cachePath = buf.toString();remotePaths.add(status.getPath().toString());localNames.add(name);try {URI uri = new URI(cachePath);job.addCacheFile(uri);} catch (URISyntaxException e) {throw new IllegalStateException(e);}size += status.getLen();}conf.setStrings(getLocalCacheNameKey(resourceName), localNames.toArray(new String[localNames.size()]));conf.setStrings(getRemotePathKey(resourceName), remotePaths.toArray(new String[remotePaths.size()]));conf.setLong(KEY_SIZE, size);if (StageUtil.isLocalMode(job)) {if (LOG.isDebugEnabled()) {}} else {job.createSymlink();}}}"	1
4509	public class A {@Overridepublic void accept(Throwable throwable) {context.setResponse(DEFAULT_RESPONSE);context.resume();}}	1
4510	public class A {protected void stepTwo(final int i) throws OracleException {if (i == 1) {this.stepTwoA();} else {if (i > 1 && m.length >= 2) {stepTwoB();} else if (m.length == 1) {stepTwoC();}}}}	1
4511	"public class A {@Overridepublic KVMPhysicalDisk getPhysicalDisk(String volumeUuid, KVMStoragePool pool) {Connect conn;StoragePool virtPool = null;try {conn = LibvirtConnection.getConnection();virtPool = conn.storagePoolLookupByName(""/"" + volumeUuid);} catch (LibvirtException e1) {throw new CloudRuntimeException(e1.toString());}LibvirtStorageVolumeDef.VolumeFormat libvirtformat = null;long volCapacity = 0;StorageVol vol = getVolume(virtPool, volumeUuid);try {if (vol == null) {libvirtformat = LibvirtStorageVolumeDef.VolumeFormat.QCOW2;StoragePoolInfo poolinfo = virtPool.getInfo();volCapacity = poolinfo.available;LibvirtStorageVolumeDef volDef =new LibvirtStorageVolumeDef(volumeUuid, volCapacity, libvirtformat, null, null);vol = virtPool.storageVolCreateXML(volDef.toString(), 0);}KVMPhysicalDisk disk = new KVMPhysicalDisk(vol.getPath(), volumeUuid, pool);disk.setFormat(PhysicalDiskFormat.QCOW2);disk.setSize(vol.getInfo().allocation);disk.setVirtualSize(vol.getInfo().capacity);return disk;} catch (LibvirtException e) {throw new CloudRuntimeException(e.toString());}}}"	1
4512	"public class A {@Overridepublic UserTagCloudView getTagCloudForCollections() throws JargonException {List<TagCloudEntry> collectionTagCloudEntries = buildTagCloudEntryListForCollections("""");UserTagCloudView userTagCloudView =UserTagCloudView.instance(irodsAccount.getUserName(), new ArrayList<TagCloudEntry>(), collectionTagCloudEntries);return userTagCloudView;}}"	1
4513	"public class A {@Overrideprotected Collection<SolrInputDocument> load(URL url) {try {Collection<SolrInputDocument> solrDocuments = new HashSet<>();Reader in =new InputStreamReader(url.openConnection().getInputStream(), Charset.forName(""UTF-8""));for (CSVRecord row : CSVFormat.TDF.withHeader().parse(in)) {SolrInputDocument crtTerm = new SolrInputDocument();for (Map.Entry<String, String> item : row.toMap().entrySet()) {if (""hgnc_id"".equals(item.getKey())) {crtTerm.addField(ID_FIELD_NAME, item.getValue());} else if (StringUtils.isNotBlank(item.getValue())) {crtTerm.addField(item.getKey(), StringUtils.split(item.getValue(), ""|""));}}solrDocuments.add(crtTerm);}addMetaInfo(solrDocuments);return solrDocuments;} catch (IOException ex) {}return null;}}"	1
4514	public class A {@Overridepublic void process(final DistributionManager dm, final ReplyProcessor21 processor) {final long startTime = getTimestamp();if (logger.isTraceEnabled(LogMarker.DM_VERBOSE)) {}if (processor == null) {if (logger.isTraceEnabled(LogMarker.DM_VERBOSE)) {}return;}processor.process(this);if (logger.isTraceEnabled(LogMarker.DM_VERBOSE)) {}dm.getStats().incReplyMessageTime(DistributionStats.getStatTime() - startTime);}}	3
4515	"public class A {@Overridepublic int receiveMessagesTls(long timeoutMs) {String clientName = ""receiver-ssl-"" + new Random().nextInt(Integer.MAX_VALUE);CompletableFuture<Integer> resultPromise = new CompletableFuture<>();IntPredicate msgCntPredicate = x -> x == messageCount;this.caCertName =this.caCertName == null? KafkaUtils.getKafkaExternalListenerCaCertName(namespaceName, clusterName, listenerName): this.caCertName;ConsumerProperties properties = this.consumerProperties;if (properties == null || properties.getProperties().isEmpty()) {properties =new ConsumerProperties.ConsumerPropertiesBuilder().withNamespaceName(namespaceName).withClusterName(clusterName).withCaSecretName(caCertName).withBootstrapServerConfig(getBootstrapServerFromStatus()).withKeyDeserializerConfig(StringDeserializer.class).withValueDeserializerConfig(StringDeserializer.class).withKafkaUsername(kafkaUsername).withSecurityProtocol(SecurityProtocol.SASL_SSL).withGroupIdConfig(consumerGroup).withAutoOffsetResetConfig(OffsetResetStrategy.EARLIEST).withClientIdConfig(kafkaUsername + ""-consumer"").withSaslMechanism(OAuthBearerLoginModule.OAUTHBEARER_MECHANISM).withSaslLoginCallbackHandlerClass().withSharedProperties().withSaslJassConfigAndTls(this.clientId, this.clientSecretName, this.oauthTokenEndpointUri).build();}try (Consumer tlsConsumer =new Consumer(properties, resultPromise, msgCntPredicate, topicName, clientName)) {tlsConsumer.getVertx().deployVerticle(tlsConsumer);return tlsConsumer.getResultPromise().get(timeoutMs, TimeUnit.MILLISECONDS);} catch (InterruptedException | ExecutionException | TimeoutException e) {e.printStackTrace();throw new WaitException(e);}}}"	1
4516	public class A {@Overridepublic void stop() {StartableMethods.stop(this);}}	1
4517	"public class A {protected void addDefaultConstructor(ClassWriter cw) {if (DataNucleusEnhancer.LOGGER.isDebugEnabled()) {}MethodVisitor mv = cw.visitMethod(Opcodes.ACC_PUBLIC, ""<init>"", ""()V"", null, null);mv.visitCode();Label startLabel = new Label();mv.visitLabel(startLabel);mv.visitVarInsn(Opcodes.ALOAD, 0);mv.visitMethodInsn(Opcodes.INVOKESPECIAL, ""java/lang/Object"", ""<init>"", ""()V"", false);mv.visitInsn(Opcodes.RETURN);Label endLabel = new Label();mv.visitLabel(endLabel);mv.visitLocalVariable(""this"", className_DescName, null, startLabel, endLabel, 0);mv.visitMaxs(1, 1);mv.visitEnd();}}"	1
4518	public class A {@Overridepublic ByteBuffer encode(ByteBuffer buffer) throws EncoderException {if (buffer == null) {throw new EncoderException(I18n.err(I18n.ERR_148));}try {buffer.put((byte) KerberosConstants.ENC_KRB_CRED_PART_TAG);buffer.put(TLV.getBytes(encKrbCredPartLen));buffer.put(UniversalTag.SEQUENCE.getValue());buffer.put(TLV.getBytes(encKrbCredPartSeqLen));buffer.put((byte) KerberosConstants.ENC_KRB_CRED_TICKET_INFO_TAG);buffer.put(TLV.getBytes(ticketInfoLen));buffer.put(UniversalTag.SEQUENCE.getValue());buffer.put(TLV.getBytes(ticketInfoSeqLen));for (KrbCredInfo ki : ticketInfo) {ki.encode(buffer);}if (nonce != null) {buffer.put((byte) KerberosConstants.ENC_KRB_CRED_PART_NONCE_TAG);buffer.put(TLV.getBytes(nonceLen));BerValue.encode(buffer, nonce);}if (timestamp != null) {buffer.put((byte) KerberosConstants.ENC_KRB_CRED_PART_TIMESTAMP_TAG);buffer.put(TLV.getBytes(timestampLen));buffer.put(UniversalTag.GENERALIZED_TIME.getValue());buffer.put((byte) 0x0F);buffer.put(timestampBytes);}if (usec != null) {buffer.put((byte) KerberosConstants.ENC_KRB_CRED_PART_USEC_TAG);buffer.put(TLV.getBytes(usecLen));BerValue.encode(buffer, usec);}if (senderAddress != null) {buffer.put((byte) KerberosConstants.ENC_KRB_CRED_PART_SENDER_ADDRESS_TAG);buffer.put(TLV.getBytes(senderAddressLen));senderAddress.encode(buffer);}if (recipientAddress != null) {buffer.put((byte) KerberosConstants.ENC_KRB_CRED_PART_RECIPIENT_ADDRESS_TAG);buffer.put(TLV.getBytes(recipientAddressLen));recipientAddress.encode(buffer);}} catch (BufferOverflowException boe) {throw new EncoderException(I18n.err(I18n.ERR_138), boe);}if (IS_DEBUG) {}return buffer;}}	3
4519	"public class A {@Test(dependsOnMethods = {""createJob"", ""getJob""})public void canListJobIdsByName() throws IOException {final String name = String.format(""by_name_%s"", UUID.randomUUID());final MantaJob job1 = buildJob(name, ""cat"");final UUID job1id = createJobAndSkipIfUnsupported(job1);MantaJob job2 = buildJob(name, ""cat"");final UUID job2id = createJobAndSkipIfUnsupported(job2);try (Stream<UUID> jobs = mantaClient.getJobIdsByName(name)) {List<UUID> found = jobs.collect(Collectors.toList());Assert.assertEquals(found.size(), 2, ""We should have found both jobs"");Assert.assertTrue(found.contains(job1id));Assert.assertTrue(found.contains(job2id));} catch (AssertionError e) {String msg = ""Couldn't find job in job list, retry test a few times to verify"";throw new SkipException(msg, e);} finally {mantaClient.cancelJob(job1id);mantaClient.cancelJob(job2id);}}}"	1
4520	"public class A {public HttpGet constructHttpGet(String type, String field, String predicate, String value, int start, int limit)throws URISyntaxException {if (null == type) {type = ""publication"";}field = SHERPAUtils.sanitiseQuery(field);predicate = SHERPAUtils.sanitiseQuery(predicate);value = SHERPAUtils.sanitiseQuery(value);type = SHERPAUtils.sanitiseQuery(type);URIBuilder uriBuilder = new URIBuilder(endpoint);uriBuilder.addParameter(""item-type"", type);uriBuilder.addParameter(""filter"", ""[[\"""" + field + ""\"",\"""" + predicate + ""\"",\"""" + value + ""\""]]"");uriBuilder.addParameter(""format"", ""Json"");if (start >= 0) {uriBuilder.addParameter(""offset"", String.valueOf(start));}if (limit > 0) {uriBuilder.addParameter(""limit"", String.valueOf(limit));}if (StringUtils.isNotBlank(apiKey)) {uriBuilder.addParameter(""api-key"", apiKey);}HttpGet method = new HttpGet(uriBuilder.build());int timeout = 5000;method.setConfig(RequestConfig.custom().setConnectionRequestTimeout(timeout).setConnectTimeout(timeout).setSocketTimeout(timeout).build());return method;}}"	1
4521	public class A {@Overridepublic void setOnline(boolean didGII, boolean wasAtomicCreation, PersistentMemberID newId)throws ReplyException {if (atomicCreation) {if (logger.isDebugEnabled(LogMarker.PERSIST_ADVISOR_VERBOSE)) {}} else {super.setOnline(didGII, wasAtomicCreation, newId);}}}	1
4522	"public class A {void setMomentum(int now) {try {if (now == Sensor.ACTIVE) {programmer.writeCV(""3"", 30, null);} else {programmer.writeCV(""3"", 0, null);}} catch (JmriException e) {}}}"	1
4523	public class A {public void checkForCriticalError(String migrationInstanceId) throws DatabaseMigrationFailure {String error = ssm.getSSMCommand(getCommandId(), migrationInstanceId).standardErrorContent();if (isCritical(error)) {throw new DatabaseMigrationFailure(error);}}}	1
4524	public class A {public static boolean loadFeaturesFromCohortFile(final String filename, final Map<String, List<SampleFeatureData>> sampleDrivers) {if (filename == null) return true;try {final List<String> fileData = Files.readAllLines(new File(filename).toPath());fileData.remove(0);for (final String line : fileData) {final SampleFeatureData driverData = SampleFeatureData.from(line);if (driverData != null) {List<SampleFeatureData> drivers = sampleDrivers.get(driverData.SampleId);if (drivers == null) {sampleDrivers.put(driverData.SampleId, Lists.newArrayList(driverData));} else {drivers.add(driverData);}}}} catch (IOException e) {return false;}return true;}}	1
4525	public class A {public int getParamValue(String param, int defaultVal) {if (params.containsKey(param)) {try {return Integer.parseInt(params.get(param));} catch (NumberFormatException nfe) {}}return defaultVal;}}	1
4526	"public class A {@LifecycleStartpublic void start() {if (!lifecycleLock.canStart()) {throw new ISE(""can't start."");}try {listenerExecutor = Execs.singleThreaded(""CuratorDruidNodeDiscoveryProvider-ListenerExecutor"");lifecycleLock.started();} finally {lifecycleLock.exitStart();}}}"	1
4527	public class A {@Overridepublic void log(LogEvent logEvent) {Member member = logEvent.getMember();LogRecord record = logEvent.getLogRecord();Level level = record.getLevel();if (level.equals(Level.SEVERE)) {} else if (level.equals(Level.WARNING)) {} else if (level.equals(Level.INFO)) {} else if (level.equals(Level.FINE)) {if (logger.isDebugEnabled()) {}} else if (level.equals(Level.FINER) || level.equals(Level.FINEST)) {if (logger.isTraceEnabled()) {}}}}	5
4528	public class A {private void loadKeys(char[] masterKey)throws NoSuchAlgorithmException, CertificateException, IOException {if (logger.isDebugEnabled()) {}dbStore.engineLoad(null, masterKey);}}	1
4529	"public class A {public void deleteUserProfileType(Properties properties) throws ApiException, Throwable {try {String typeCode = properties.getProperty(""typeCode"");IApsEntity masterProfileType = this.getUserProfileManager().getEntityPrototype(typeCode);if (null == masterProfileType) {throw new ApiException(IApiErrorCodes.API_VALIDATION_ERROR,""User Profile type with code '"" + typeCode + ""' doesn't exist"");}EntitySearchFilter filter =new EntitySearchFilter(IEntityManager.ENTITY_TYPE_CODE_FILTER_KEY, false, typeCode, false);List<String> profileIds =this.getUserProfileManager().searchId(new EntitySearchFilter[] {filter});if (null != profileIds && !profileIds.isEmpty()) {throw new ApiException(IApiErrorCodes.API_VALIDATION_ERROR,""User profile type '""+ typeCode+ ""' are used into ""+ profileIds.size()+ "" profiles"");}((IEntityTypesConfigurer) this.getUserProfileManager()).removeEntityPrototype(typeCode);} catch (ApiException ae) {throw ae;} catch (Throwable t) {throw new ApsSystemException(""Error deleting user Profile type"", t);}}}"	1
4530	public class A {private void prepareSignature(SrpServerKeyExchangeMessage msg) {msg.setSignature(signature);}}	1
4531	public class A {private static <T> Stream<T> mapToService(ServiceLoader.Provider<T> provider) {try {return Stream.of(provider.get());} catch (ServiceConfigurationError error) {return Stream.empty();}}}	1
4532	public class A {@Overridevoid doPrepare(Map conf, TopologyContext topologyContext, OutputCollector collector)throws IOException {cache =CacheBuilder.newBuilder().maximumSize(_MAX_CACHE_SIZE_OBJECTS_NUM).expireAfterWrite(_MAX_TIME_RETAIN_MINUTES, TimeUnit.MINUTES).build();try {_reporter = new MetricReporter();_reporter.initialize(metricProperties, TelemetryAlertsBolt.class);} catch (Exception e) {}}}	3
4533	"public class A {private void initTable(List<DoubleTimeSeries> doubleTimeSeries, List<StringTimeSeries> stringTimeSeries) {initLock.lock();try {if (timeSeriesMetadata != null) {return;}timeSeriesMetadata = new ArrayList<>(doubleTimeSeries.size() + stringTimeSeries.size());for (DoubleTimeSeries timeSeries :doubleTimeSeries.stream().sorted(Comparator.comparing(ts -> ts.getMetadata().getName())).collect(Collectors.toList())) {timeSeriesMetadata.add(timeSeries.getMetadata());int i = doubleTimeSeriesNames.add(timeSeries.getMetadata().getName());timeSeriesIndexDoubleOrString.add(i);}for (StringTimeSeries timeSeries :stringTimeSeries.stream().sorted(Comparator.comparing(ts -> ts.getMetadata().getName())).collect(Collectors.toList())) {timeSeriesMetadata.add(timeSeries.getMetadata());int i = stringTimeSeriesNames.add(timeSeries.getMetadata().getName());timeSeriesIndexDoubleOrString.add(i);}if (tableIndex == null) {throw new TimeSeriesException(""None of the time series have a finite index"");}int versionCount = toVersion - fromVersion + 1;long doubleBufferSize =(long) versionCount * doubleTimeSeriesNames.size() * tableIndex.getPointCount();doubleBuffer = createDoubleBuffer(byteBufferAllocator, doubleBufferSize, Double.NaN);long stringBufferSize =(long) versionCount * stringTimeSeriesNames.size() * tableIndex.getPointCount();stringBuffer = new BigStringBuffer(byteBufferAllocator, stringBufferSize);if (LOGGER.isInfoEnabled()) {}means = new double[doubleTimeSeriesNames.size() * versionCount];Arrays.fill(means, Double.NaN);stdDevs = new double[doubleTimeSeriesNames.size() * versionCount];Arrays.fill(stdDevs, Double.NaN);} catch (Exception e) {timeSeriesMetadata = null;doubleTimeSeriesNames.clear();stringTimeSeriesNames.clear();timeSeriesIndexDoubleOrString.clear();doubleBuffer = null;stringBuffer = null;means = null;stdDevs = null;throw e;} finally {initLock.unlock();}}}"	2
4534	public class A {void receivedPublishQos0(Topic topic,String username,String clientID,ByteBuf payload,boolean retain,MqttPublishMessage msg) {if (!authorizator.canWrite(topic, username, clientID)) {return;}publish2Subscribers(payload, topic, AT_MOST_ONCE);if (retain) {retainedRepository.cleanRetained(topic);}interceptor.notifyTopicPublished(msg, clientID, username);}}	1
4535	public class A {protected Result analyzeProxy(final HTTPAccessLogEntry entry) {if (!entry.hasCommonProperties()) {return Result.builder().build();}final AccessLogCommon properties = entry.getCommonProperties();final Address downstreamLocalAddress = properties.getDownstreamLocalAddress();final Address downstreamRemoteAddress =properties.hasDownstreamDirectRemoteAddress()? properties.getDownstreamDirectRemoteAddress(): properties.getDownstreamRemoteAddress();final Address upstreamRemoteAddress = properties.getUpstreamRemoteAddress();if (!isValid(downstreamLocalAddress)|| !isValid(downstreamRemoteAddress)|| !isValid(upstreamRemoteAddress)) {return Result.builder().build();}final List<ServiceMeshMetric.Builder> result = new ArrayList<>(2);final SocketAddress downstreamRemoteAddressSocketAddress =downstreamRemoteAddress.getSocketAddress();final ServiceMetaInfo outside = find(downstreamRemoteAddressSocketAddress.getAddress());final SocketAddress downstreamLocalAddressSocketAddress =downstreamLocalAddress.getSocketAddress();final ServiceMetaInfo ingress = find(downstreamLocalAddressSocketAddress.getAddress());final ServiceMeshMetric.Builder metric =newAdapter(entry, outside, ingress).adaptToDownstreamMetrics();result.add(metric);final SocketAddress upstreamRemoteAddressSocketAddress =upstreamRemoteAddress.getSocketAddress();final ServiceMetaInfo targetService = find(upstreamRemoteAddressSocketAddress.getAddress());final ServiceMeshMetric.Builder outboundMetric =newAdapter(entry, ingress, targetService).adaptToUpstreamMetrics().setTlsMode(NON_TLS);result.add(outboundMetric);return Result.builder().metrics(result).service(ingress).build();}}	2
4536	public class A {public void submit(final String selectorName, final DivideUpstream divideUpstream) {if (!Constants.DEFAULT_REGISTER_TYPE.equalsIgnoreCase(registerType)) {return;}if (UPSTREAM_MAP.containsKey(selectorName)) {List<DivideUpstream> upstreams =UPSTREAM_MAP.getOrDefault(selectorName, Collections.emptyList());Optional<DivideUpstream> exists =upstreams.stream().filter(item ->StringUtils.isNotBlank(item.getUpstreamUrl())&& item.getUpstreamUrl().equals(divideUpstream.getUpstreamUrl())).findFirst();if (!exists.isPresent()) {upstreams.add(divideUpstream);} else {}} else {UPSTREAM_MAP.put(selectorName, Lists.newArrayList(divideUpstream));}}}	1
4537	public class A {Future<ReconciliationState> zkScalingDown() {int desired = zkCluster.getReplicas();if (zkCurrentReplicas != null && zkCurrentReplicas > desired) {return zkScaler(desired).compose(zkScaler -> {Promise<ReconciliationState> scalingPromise = Promise.promise();zkScalingDownByOne(zkScaler, zkCurrentReplicas, desired).onComplete(res -> {zkScaler.close();if (res.succeeded()) {scalingPromise.complete(res.result());} else {scalingPromise.fail(res.cause());}});return scalingPromise.future();});} else {return Future.succeededFuture(this);}}}	2
4538	public class A {public Landsat8BandConverterSpi getConverter(final String converterName) {final Landsat8BandConverterSpi converter = getRegisteredConverters().get(converterName);if (converter == null) {}return converter;}}	1
4539	public class A {@Overridepublic void run() throws Exception {ObjectInputStream inStream =new ObjectInputStream(super.getAdaptorManager().getReadStreamAdaptor(0).getInputStream());String fileName = (String) inStream.readObject();inStream.close();File file = new File(fileName);OutputStream out = super.getAdaptorManager().getWriteStreamAdaptor(0).getOutputStream();FileUtil.writeToStream(file, out);out.flush();out.close();exit(0);}}	4
4540	"public class A {@Testpublic void testBadVMTransportOptionsBrokerPrefix() throws Exception {final String vmUri = vmUri(""?broker.XXX=foo&broker.persistent=XXX&broker.useJmx=false"");ActiveMQComponent amq = ActiveMQComponent.activeMQComponent(vmUri);camelContext = new DefaultCamelContext();camelContext.addComponent(""activemq"", amq);final String queueEndpointName = ""activemq:queuetest.Queue"";camelContext.addRoutes(new RouteBuilder() {@Overridepublic void configure() {from(queueEndpointName).bean(Consumer.class, ""consume"");}});camelContext.start();final ProducerTemplate producerTemplate = camelContext.createProducerTemplate();assertThrows(CamelExecutionException.class,() -> producerTemplate.sendBody(queueEndpointName, ""message""),""Should have received an exception from the bad URI."");}}"	1
4541	"public class A {private static void executeSQLScript(Connection con, InputStream resource, Boolean autoreplace)throws IOException, SQLException {try (BufferedReader in = new BufferedReader(new InputStreamReader(resource))) {boolean done = false;while (!done) {StringBuilder command = new StringBuilder();while (true) {String line = in.readLine();if (line == null) {done = true;break;}if (isSQLCommandPart(line)) {command.append(' ').append(line);}if (line.trim().endsWith("";"")) {break;}}if (!done && !command.toString().equals("""")) {if (DbConnectionManager.getDatabaseType() == DbConnectionManager.DatabaseType.oracle|| DbConnectionManager.getDatabaseType() == DbConnectionManager.DatabaseType.db2) {command.deleteCharAt(command.length() - 1);}Statement stmt = null;try {String cmdString = command.toString();if (autoreplace) {cmdString = cmdString.replaceAll(""jiveVersion"", ""ofVersion"");}stmt = con.createStatement();stmt.execute(cmdString);} catch (SQLException e) {throw e;} finally {DbConnectionManager.closeStatement(stmt);}}}}}}"	1
4542	public class A {public static void logAsYaml(HasMetadata resource) {if (LOGGER.isDebugEnabled()) {try {} catch (JsonProcessingException e) {}}}}	2
4543	"public class A {void configureTimeDecoder(YConfiguration config) {if (config != null) {useLocalGenerationTime = config.getBoolean(""useLocalGenerationTime"", false);}if (!useLocalGenerationTime && config != null && config.containsKey(CONFIG_KEY_TIME_ENCODING)) {YConfiguration c = config.getConfig(CONFIG_KEY_TIME_ENCODING);String type = c.getString(""type"", ""CUC"");if (""CUC"".equals(type)) {int implicitPField = c.getInt(""implicitPField"", -1);int implicitPFieldCont = c.getInt(""implicitPFieldCont"", -1);timeDecoder = new CucTimeDecoder(implicitPField, implicitPFieldCont);} else {throw new ConfigurationException(""Time encoding of type '""+ type+ "" not supported. Supported: CUC=CCSDS unsegmented time"");}timeEpoch = c.getEnum(""epoch"", TimeEpochs.class, TimeEpochs.GPS);if (timeEpoch == TimeEpochs.CUSTOM) {customEpochIncludeLeapSecond = c.getBoolean(""timeIncludesLeapSeconds"", true);String epochs = c.getString(""epochUTC"");customEpoch = TimeEncoding.parse(epochs);if (!customEpochIncludeLeapSecond) {customEpoch = TimeEncoding.toUnixMillisec(customEpoch);}}} else {timeEpoch = TimeEpochs.GPS;timeDecoder = new CucTimeDecoder(-1);}}}"	1
4544	"public class A {private void commitOffset(StateRepository<String, String> offsetRepository,TopicPartition partition,long partitionLastOffset,boolean stopping,boolean forceCommit) {if (partitionLastOffset != -1) {if (!endpoint.getConfiguration().isAllowManualCommit() && offsetRepository != null) {offsetRepository.setState(serializeOffsetKey(partition), serializeOffsetValue(partitionLastOffset));} else if (stopping) {if (""async"".equals(endpoint.getConfiguration().getAutoCommitOnStop())) {consumer.commitAsync(Collections.singletonMap(partition, new OffsetAndMetadata(partitionLastOffset + 1)),null);} else if (""sync"".equals(endpoint.getConfiguration().getAutoCommitOnStop())) {consumer.commitSync(Collections.singletonMap(partition, new OffsetAndMetadata(partitionLastOffset + 1)));} else if (""none"".equals(endpoint.getConfiguration().getAutoCommitOnStop())) {}} else if (forceCommit) {consumer.commitSync(Collections.singletonMap(partition, new OffsetAndMetadata(partitionLastOffset + 1)));}}}}"	5
4545	public class A {@Overridepublic void run() {startCoreServices();try {ProgramController controller = programRunner.run(program, programOptions);controller.addListener(new AbstractListener() {@Overridepublic void alive() {controllerFuture.complete(controller);}@Overridepublic void completed() {controllerFuture.complete(controller);programCompletion.complete(ProgramController.State.COMPLETED);}@Overridepublic void killed() {controllerFuture.complete(controller);programCompletion.complete(ProgramController.State.KILLED);}@Overridepublic void error(Throwable cause) {controllerFuture.complete(controller);programCompletion.completeExceptionally(cause);}},Threads.SAME_THREAD_EXECUTOR);programCompletion.get();} catch (InterruptedException e) {} catch (ExecutionException e) {throw Throwables.propagate(Throwables.getRootCause(e));} finally {Closeables.closeQuietly(program);if (programRunner instanceof Closeable) {Closeables.closeQuietly((Closeable) programRunner);}stopCoreServices();}}}	4
4546	public class A {protected WorkflowDefinition getLatestWorkflowDefinition(long companyId, String name) {try {return unproxiedWorkflowDefinitionManager.getLatestWorkflowDefinition(companyId, name);} catch (WorkflowException workflowException) {if (_log.isDebugEnabled()) {}return null;}}}	1
4547	"public class A {public void writeLine(String line) throws IOException {synchronized (charBuffer) {PrintStream out = outstream;if (out == null) {throw new IOException(""Session is closed"");}out.print(line + ""\r\n"");if (out.checkError()) {throw new IOException(""Could not write to stream"");}}}}"	3
4548	"public class A {public Paymentheader updatePayment(final Map<String, String[]> parameters,final List<PaymentBean> billList,final Paymentheader payheader)throws ApplicationRuntimeException, ValidationException {Paymentheader paymentheader = null;try {miscBillList = new ArrayList<Miscbilldetail>();user =(User)persistenceService.find("" from User where id = ?"", ApplicationThreadLocals.getUserId());final Bankaccount ba =(Bankaccount)persistenceService.find(""from Bankaccount where id=?"", payheader.getBankaccount().getId());paymentheader =(Paymentheader)persistenceService.find("" from Paymentheader where id=? "", payheader.getId());deleteMiscBill(paymentheader.getVoucherheader().getId());final CVoucherHeader voucher = updateVoucher(parameters, billList, ba, payheader);paymentheader.setPaymentAmount(new BigDecimal(parameters.get(""grandTotal"")[0]));paymentheader.setType(payheader.getType());paymentheader.setBankaccount(ba);paymentheader.setVoucherheader(voucher);update(paymentheader);for (final Miscbilldetail miscbilldetail : miscBillList) {miscbilldetail.setPayVoucherHeader(paymentheader.getVoucherheader());miscbilldetailService.create(miscbilldetail);}} catch (final ValidationException e) {throw e;} catch (final Exception e) {final List<ValidationError> errors = new ArrayList<ValidationError>();errors.add(new ValidationError(""createPayment"", e.getMessage()));throw new ValidationException(errors);}return paymentheader;}}"	3
4549	"public class A {public <E extends Exception> Templates templates(DBBroker broker, XSLTErrorsListener<E> errorListener)throws E, TransformerConfigurationException, IOException, PermissionDeniedException,SAXException {if (uri.startsWith(XmldbURI.EMBEDDED_SERVER_URI_PREFIX)) {final String docPath = uri.substring(XmldbURI.EMBEDDED_SERVER_URI_PREFIX.length());try (final LockedDocument lockedDocument =broker.getXMLResource(XmldbURI.create(docPath), LockMode.READ_LOCK)) {if (lockedDocument == null) {throw new IOException(""XSL stylesheet not found: "" + docPath);}final DocumentImpl doc = lockedDocument.getDocument();if (templates == null || doc.getLastModified() > lastModified) {if (LOG.isDebugEnabled()) {}templates = compileTemplates(broker, doc, errorListener);lastModified = doc.getLastModified();}}} else {final URL url = new URL(uri);final URLConnection connection = url.openConnection();long modified = connection.getLastModified();if (templates == null || modified > lastModified || modified == 0) {if (LOG.isDebugEnabled()) {}try (final InputStream is = connection.getInputStream()) {templates =factory(broker.getBrokerPool(), errorListener).newTemplates(new StreamSource(is));}}lastModified = modified;}return templates;}}"	2
4550	"public class A {public boolean loadVcf() {int numLines = Gpr.countLines(vcfFileName);VcfFileIterator vcf = new VcfFileIterator(vcfFileName);int entryNum = 0;for (VcfEntry ve : vcf) {if (genotypeVectors == null) {long mem = ((long) ve.getVcfGenotypes().size()) * numLines / 4L;double memG = mem / (1024.0 * 1024 * 1024);genotypeVectors = new GenotypeVector[ve.getVcfGenotypes().size()];for (int i = 0; i < genotypeVectors.length; i++)genotypeVectors[i] = new GenotypeVector(numLines);}int sampleNum = 0;for (VcfGenotype vg : ve) set(entryNum, sampleNum++, vg);entryNum++;Gpr.showMark(entryNum, MARK);}System.err.println("""");return true;}}"	7
4551	public class A {public static boolean waitForDeploymentAndPodsReady(String namespaceName, String deploymentName, int expectPods) {waitForDeploymentReady(namespaceName, deploymentName);PodUtils.waitForPodsReady(namespaceName,kubeClient(namespaceName).getDeploymentSelectors(namespaceName, deploymentName),expectPods,true,() ->DeploymentUtils.logCurrentDeploymentStatus(kubeClient(namespaceName).getDeployment(namespaceName, deploymentName),namespaceName));return true;}}	2
4552	public class A {@Overridepublic void init(FtpletContext ftpletContext) {if (log.isDebugEnabled()) {}}}	1
4553	public class A {@Testpublic void getAllBeansTest() {ConfigurableListableBeanFactory beanFactory = abstractApplicationContext.getBeanFactory();for (String name : abstractApplicationContext.getBeanDefinitionNames()) {Object bean = beanFactory.getBean(name);}}}	1
4554	public class A {public void coupleMbusDeviceByChannel(final DeviceMessageMetadata deviceMessageMetadata,final CoupleMbusDeviceByChannelRequestData requestData)throws FunctionalException {final String deviceIdentification = deviceMessageMetadata.getDeviceIdentification();final CoupleMbusDeviceByChannelRequestDataDto requestDataDto =new CoupleMbusDeviceByChannelRequestDataDto(requestData.getChannel());final SmartMeter gatewayDevice = this.domainHelperService.findSmartMeter(deviceIdentification);final RequestMessage requestMessage =new RequestMessage(deviceMessageMetadata.getCorrelationUid(),deviceMessageMetadata.getOrganisationIdentification(),deviceMessageMetadata.getDeviceIdentification(),gatewayDevice.getIpAddress(),requestDataDto);this.osgpCoreRequestMessageSender.send(requestMessage,deviceMessageMetadata.getMessageType(),deviceMessageMetadata.getMessagePriority(),deviceMessageMetadata.getScheduleTime(),deviceMessageMetadata.bypassRetry());}}	1
4555	public class A {public static GroupInstance handleGroupInstanceCreatedEvent(String appId,String groupId,String parentId,String networkPartitionId,String partitionId) {ApplicationHolder.acquireWriteLock();try {if (log.isDebugEnabled()) {}Applications applications = ApplicationHolder.getApplications();Application application = applications.getApplication(appId);if (application == null) {return null;}Group group = application.getGroupRecursively(groupId);if (group == null) {return null;}GroupStatus status = GroupStatus.Created;String instanceId = parentId;if (group.isGroupScalingEnabled()) {instanceId = group.getNextInstanceId(groupId);}if (!group.containsInstanceContext(instanceId)) {GroupInstance groupInstance;groupInstance = new GroupInstance(groupId, instanceId);groupInstance.setParentId(parentId);groupInstance.setPartitionId(partitionId);groupInstance.setNetworkPartitionId(networkPartitionId);groupInstance.setStatus(status);group.addInstance(instanceId, groupInstance);ApplicationHolder.persistApplication(application);ApplicationsEventPublisher.sendGroupInstanceCreatedEvent(appId, groupId, groupInstance);return groupInstance;} else {}} finally {ApplicationHolder.releaseWriteLock();}return null;}}	4
4556	"public class A {@Overridepublic MetricQueryResult getMetrics(List<String> expressions, long relativeTo) {requireNotDisposed();SystemAssert.requireArgument(MetricReader.isValid(expressions), ""Illegal metric expression found: "" + expressions);final long start = System.currentTimeMillis();MetricReader<Metric> reader = _metricReaderProviderForMetrics.get();MetricQueryResult queryResult = new MetricQueryResult();try {for (String expression : expressions) {QueryContextHolder currCtxHolder = new QueryContextHolder();reader.parse(expression, relativeTo, Metric.class, currCtxHolder, true);_queryProcessor.mergeQueryResults(queryResult,_queryProcessor.evaluateQuery(currCtxHolder.getCurrentQueryContext(), relativeTo));}} catch (ParseException ex) {throw new SystemException(""Failed to parse the given expression"", ex);}List<Metric> metrics = queryResult.getMetricsList();if (metrics != null) {Iterator<Metric> metricIterator = metrics.iterator();while (metricIterator.hasNext()) {Metric metric = metricIterator.next();if (metric.getDatapoints() == null || metric.getDatapoints().size() == 0) {metricIterator.remove();} else if (metric.getDatapoints().values().contains(Double.MIN_VALUE)) {metric.setDatapoints(setMinValuesToZero(metric.getDatapoints()));}}queryResult.setMetricsList(metrics);}_monitorService.modifyCounter(Counter.DATAPOINT_READS, _getDatapointsAcrossMetrics(queryResult.getMetricsList()), null);queryResult.setExpandedTimeSeriesRange(QueryTimeSeriesExpansion.getExpandedTimeSeriesRange(queryResult.getNumTSDBResults()));queryResult.setQueryStartTimeWindow(QueryStartTimeWindow.getWindow(relativeTo - queryResult.getQueryStartTimeMillis()));queryResult.setQueryTimeWindow(QueryTimeWindow.getWindow(queryResult.getQueryTimeRangeInMillis()));final long time = System.currentTimeMillis() - start;_monitorService.modifyCounter(Counter.METRICS_GETMETRICS_LATENCY, time, null);_monitorService.modifyCounter(Counter.METRICS_GETMETRICS_COUNT, expressions.size(), null);return queryResult;}}"	1
4557	"public class A {public void executeStatements(ProcessContext context,ProcessSession session,FlowFile flowFile,String[] hiveStatements,ThriftService thriftService) {final ComponentLog logger = getLog();String EXCEPTION_STATUS_KEY = ""HQLStmt Status "";final StopWatch stopWatch = new StopWatch(true);try (final Connection con = thriftService.getConnection();final Statement st = con.createStatement()) {boolean result = false;EXCEPTION_STATUS_KEY = context.getName() + EXCEPTION_STATUS_KEY;for (String statement : hiveStatements) {statement = statement.trim();result = st.execute(statement);}session.getProvenanceReporter().modifyContent(flowFile, ""Execution result "" + result, stopWatch.getElapsed(TimeUnit.MILLISECONDS));session.transfer(flowFile, IngestProperties.REL_SUCCESS);} catch (final Exception e) {flowFile =session.putAttribute(flowFile,EXCEPTION_STATUS_KEY,""Failed With Exception: ""+ (e.getMessage().length() > 300? e.getMessage().substring(0, 300): e.getMessage()));session.transfer(flowFile, IngestProperties.REL_FAILURE);}}}"	3
4558	"public class A {Group delete(Group group, String key, String value) throws FinderException, RemoveException {LdapConnection ld = null;String nodeDn = getDn(group.getName(), group.getContextId());try {List<Modification> mods = new ArrayList<Modification>();mods.add(new DefaultModification(ModificationOperation.REMOVE_ATTRIBUTE, GROUP_PROPERTY_ATTR_IMPL, key + ""="" + value));ld = getAdminConnection();modify(ld, nodeDn, mods, group);} catch (LdapException e) {String error = ""delete group property node dn ["" + nodeDn + ""] caught LDAPException="" + e;throw new RemoveException(GlobalErrIds.GROUP_DELETE_PROPERTY_FAILED, error, e);} finally {closeAdminConnection(ld);}return get(group);}}"	1
4559	"public class A {public static void addURL(URL url) throws IOException {URLClassLoader sysLoader = (URLClassLoader) ClassLoader.getSystemClassLoader();URL urls[] = sysLoader.getURLs();for (int i = 0; i < urls.length; i++) {if (StringUtils.equalsIgnoreCase(urls[i].toString(), url.toString())) {return;}}try {Method method = URLClassLoader.class.getDeclaredMethod(""addURL"", PARAMETERS);method.setAccessible(true);method.invoke(sysLoader, new Object[] {url});} catch (Throwable t) {throw new IOException(""Error, could not add URL to system classloader"", t);}}}"	1
4560	public class A {@Overridepublic void run() {int backoffInterval = 250;boolean readingEvents = false;try {while (!Thread.interrupted()) {readingEvents = true;List<Event> events = reader.readEvents(batchSize);readingEvents = false;if (events.isEmpty()) {break;}sourceCounter.addToEventReceivedCount(events.size());sourceCounter.incrementAppendBatchReceivedCount();try {getChannelProcessor().processEventBatch(events);reader.commit();} catch (ChannelFullException ex) {sourceCounter.incrementChannelWriteFail();hitChannelFullException = true;backoffInterval = waitAndGetNewBackoffInterval(backoffInterval);continue;} catch (ChannelException ex) {sourceCounter.incrementChannelWriteFail();hitChannelException = true;backoffInterval = waitAndGetNewBackoffInterval(backoffInterval);continue;}backoffInterval = 250;sourceCounter.addToEventAcceptedCount(events.size());sourceCounter.incrementAppendBatchAcceptedCount();}} catch (Throwable t) {if (readingEvents) {sourceCounter.incrementEventReadFail();} else {sourceCounter.incrementGenericProcessingFail();}hasFatalError = true;Throwables.propagate(t);}}}	3
4561	"public class A {@Overridepublic TaskResult onRun(TaskHelper helper, TaskContext taskContext) {String cancelled =getContextVariable(RemoteJobCancellationTask.JOB_ALREADY_CANCELLED_OR_NOT_AVAILABLE);if (""true"".equals(cancelled)) {saveAndPublishProcessStatus(ProcessState.CANCELED);} else {saveAndPublishProcessStatus(ProcessState.CANCELED);}try {} catch (Exception e) {}return onSuccess(""Process "" + getProcessId() + "" successfully cancelled"");}}"	6
4562	"public class A {protected boolean retryCausedOnServerlessDB(Exception e) {if (e instanceof SQLException&& ((SQLException) e).getSQLState() != null&& (((SQLException) e).getSQLState().equalsIgnoreCase(""57014"")|| ((SQLException) e).getSQLState().equalsIgnoreCase(""57P01"")|| ((SQLException) e).getSQLState().equalsIgnoreCase(""08003"")|| ((SQLException) e).getSQLState().equalsIgnoreCase(""08006""))) {int remainingSeconds = context.getRemainingTimeInMillis() / 1000;if (!isRemainingTimeSufficient(remainingSeconds)) {return false;}if (!retryAttempted) {return true;}}return false;}}"	1
4563	public class A {@Overridepublic void update(ScriptResult scriptResult) {getMetadataRepository().executeUpdate(String.format(UPDATE_QUERY,SQLTools.getStringForSQL(scriptResult.getParentProcessId()),SQLTools.getStringForSQL(scriptResult.getScriptId()),SQLTools.getStringForSQL(scriptResult.getScriptName()),SQLTools.getStringForSQL(scriptResult.getScriptVersion()),SQLTools.getStringForSQL(scriptResult.getSecurityGroupName()),SQLTools.getStringForSQL(scriptResult.getEnvironment()),SQLTools.getStringForSQL(scriptResult.getStatus().value()),SQLTools.getStringForSQL(scriptResult.getStartTimestamp()),SQLTools.getStringForSQL(scriptResult.getEndTimestamp()),SQLTools.getStringForSQL(scriptResult.getMetadataKey().getRunId()),SQLTools.getStringForSQL(scriptResult.getMetadataKey().getProcessId())));}}	1
4564	public class A {private static void handleAssertionError(final Logger logger, final AssertionError error) {}}	2
4565	public class A {@Overridepublic void onCommandFailure(final Throwable e) {users.set(null);}}	1
4566	"public class A {@Overridepublic Iterable<String> findRelatedEdgeIds(Iterable<String> vertexIds, Long endTime, Authorizations authorizations) {Set<String> vertexIdsSet = IterableUtils.toSet(vertexIds);Span trace = Trace.start(""findRelatedEdges"");try {if (LOGGER.isTraceEnabled()) {}if (vertexIdsSet.size() == 0) {return new HashSet<>();}List<org.apache.accumulo.core.data.Range> ranges = new ArrayList<>();for (String vertexId : vertexIdsSet) {ranges.add(RangeUtils.createRangeFromString(vertexId));}Long startTime = null;int maxVersions = 1;FetchHints fetchHints = FetchHints.builder().setIncludeOutEdgeRefs(true).build();ScannerBase scanner =createElementScanner(fetchHints,ElementType.VERTEX,maxVersions,startTime,endTime,ranges,false,authorizations);IteratorSetting edgeRefFilterSettings =new IteratorSetting(1000, EdgeRefFilter.class.getSimpleName(), EdgeRefFilter.class);EdgeRefFilter.setVertexIds(edgeRefFilterSettings, vertexIdsSet);scanner.addScanIterator(edgeRefFilterSettings);IteratorSetting vertexEdgeIdIteratorSettings =new IteratorSetting(1001, VertexEdgeIdIterator.class.getSimpleName(), VertexEdgeIdIterator.class);scanner.addScanIterator(vertexEdgeIdIteratorSettings);final long timerStartTime = System.currentTimeMillis();try {Iterator<Map.Entry<Key, Value>> it = scanner.iterator();List<String> edgeIds = new ArrayList<>();while (it.hasNext()) {Map.Entry<Key, Value> c = it.next();for (ByteArrayWrapper edgeId : VertexEdgeIdIterator.decodeValue(c.getValue())) {edgeIds.add(new Text(edgeId.getData()).toString());}}return edgeIds;} finally {scanner.close();GRAPH_LOGGER.logEndIterator(System.currentTimeMillis() - timerStartTime);}} finally {trace.stop();}}}"	1
4567	public class A {@Overridepublic void doFilterWriteListeners(final WriteRequest writeRequest) {final Object message = writeRequest.getMessage();WriteRequest originalRequest = writeRequest.getOriginalRequest();final Object originalMessage = originalRequest != null ? originalRequest.getMessage() : null;runManagementTask(new Runnable() {@Overridepublic void run() {try {List<SessionManagementListener> sessionListeners = getManagementListeners();for (final SessionManagementListener listener : sessionListeners) {listener.doFilterWrite(SessionManagementBeanImpl.this, message, originalMessage);}markChanged();} catch (Exception ex) {}}});}}	1
4568	public class A {@Overridepublic void disconnect() {if (reconnectedCoreSession != null) {reconnectedCoreSession.close();}reconnectedCoreSession = null;reconnectedEvents = null;if (loginCtx != null) {try {loginCtx.logout();} catch (LoginException e) {} finally {loginCtx = null;}}}}	1
4569	"public class A {public boolean shouldUse() {return new File(serverHome + ""/hqdb"").exists();}}"	1
4570	"public class A {public static com.liferay.knowledge.base.model.KBArticleSearchDisplay getKBArticleSearchDisplay(HttpPrincipal httpPrincipal,long groupId,String title,String content,int status,java.util.Date startDate,java.util.Date endDate,boolean andOperator,int[] curStartValues,int cur,int delta,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.knowledge.base.model.KBArticle>orderByComparator)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(KBArticleServiceUtil.class,""getKBArticleSearchDisplay"",_getKBArticleSearchDisplayParameterTypes23);MethodHandler methodHandler =new MethodHandler(methodKey,groupId,title,content,status,startDate,endDate,andOperator,curStartValues,cur,delta,orderByComparator);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.knowledge.base.model.KBArticleSearchDisplay) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4571	public class A {private void routeSuggestionReplyReceived(TacticalRouteSuggestionReply message, Timestamp timestamp) {if (routeSuggestions.containsKey(message.getId())) {RouteSuggestionData routeData = routeSuggestions.get(message.getId());Date date = new Date(timestamp.getTime());routeData.setReply(message, date);routeData.setReplyRecieveDate(new Date());routeData.setAcknowleged(false);notifyRouteSuggestionListeners();}}}	1
4572	"public class A {void savePerformed(AjaxRequestTarget target) {OperationResult result = new OperationResult(PageTaskEdit.OPERATION_SAVE_TASK);TaskDto dto = parentPage.getTaskDto();Task operationTask = parentPage.createSimpleTask(PageTaskEdit.OPERATION_SAVE_TASK);try {List<ItemDelta<?, ?>> itemDeltas = getDeltasToExecute(dto);ObjectDelta<TaskType> delta =ObjectDelta.createModifyDelta(dto.getOid(), itemDeltas, TaskType.class, parentPage.getPrismContext());final Collection<ObjectDelta<? extends ObjectType>> deltas =Collections.<ObjectDelta<? extends ObjectType>>singletonList(delta);if (LOGGER.isDebugEnabled()) {}parentPage.getModelService().executeChanges(deltas, null, operationTask, result);result.recomputeStatus();} catch (Exception ex) {result.recomputeStatus();result.recordFatalError(""Couldn't save task."", ex);LoggingUtils.logUnexpectedException(LOGGER, ""Couldn't save task modifications"", ex);}afterSave(target, result);}}"	2
4573	public class A {protected void onEntityAdded(Entity item) {synchronized (memberChangeMutex) {if (acceptsEntity(item)) {addMember(item);}}}}	1
4574	"public class A {@Overridepublic AnswerList<TestCaseExecutionQueueDep> readByExeId(long exeId) {AnswerList<TestCaseExecutionQueueDep> ans = new AnswerList<>();MessageEvent msg = null;try (Connection connection = databaseSpring.connect();PreparedStatement preStat =connection.prepareStatement(""SELECT * FROM `testcaseexecutionqueuedep` WHERE `ExeID` = ?"")) {preStat.setLong(1, exeId);ResultSet rs = preStat.executeQuery();try {List<TestCaseExecutionQueueDep> al = new ArrayList<>();while (rs.next()) {al.add(loadFromResultSet(rs));}ans.setDataList(al);msg =new MessageEvent(MessageEventEnum.DATA_OPERATION_OK).resolveDescription(""ITEM"", OBJECT_NAME).resolveDescription(""OPERATION"", ""READ_BY_APP"");} catch (Exception e) {msg =new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED).resolveDescription(""DESCRIPTION"", e.toString());} finally {if (rs != null) {rs.close();}}} catch (Exception e) {msg =new MessageEvent(MessageEventEnum.DATA_OPERATION_ERROR_UNEXPECTED).resolveDescription(""DESCRIPTION"", e.toString());} finally {ans.setResultMessage(msg);}return ans;}}"	2
4575	public class A {private void appendAuthzDecisionStatementEvidenceAssertionIssueInstant(RequestType policyRequest, AssertionType assertion) {ResourceType parent = getResource(policyRequest);String attributeId = XacmlAttributeId.AuthzDecisionStatementEvidenceAssertionIssueInstant;String dataType = Constants.DataTypeString;String attributeValue = extractAuthzDecisionStatementEvidenceAssertionIssueInstant(assertion);AttributeHelper attrHelper = new AttributeHelper();attrHelper.appendAttributeToParent(parent, attributeId, dataType, attributeValue, appendAttributesIfNull);}}	2
4576	"public class A {public ActionForward patientCPPSave(ActionMapping mapping,ActionForm form,HttpServletRequest request,HttpServletResponse response)throws Exception {LoggedInInfo loggedInInfo = LoggedInInfo.getLoggedInInfoFromSession(request);String providerNo = loggedInInfo.getLoggedInProviderNo();CaseManagementViewFormBean caseForm = (CaseManagementViewFormBean) form;CaseManagementCPP cpp = caseForm.getCpp();cpp.setUpdate_date(new Date());cpp.setDemographic_no(caseForm.getDemographicNo());caseManagementMgr.saveCPP(cpp, providerNo);addMessage(request, ""cpp.saved"");return view(mapping, form, request, response);}}"	1
4577	"public class A {void onStarted(final DisruptorConsumer consumer) throws Exception {synchronized (this) {if (!consumers.isEmpty() && !isMultipleConsumersSupported()) {throw new IllegalStateException(""Multiple consumers for the same endpoint is not allowed: "" + this);}if (consumers.add(consumer)) {getDisruptor().reconfigure();} else {}}}}"	2
4578	public class A {@Overridepublic void offer(SagaEvent sagaEvent) {boolean success = false;do {try {persistentStore.offer(sagaEvent);success = true;} catch (Exception e) {sleep(retryDelay);}} while (!success && !isInterrupted());}}	2
4579	public class A {@Overridepublic void start() {doStart();}}	1
4580	public class A {private void activateSources() {for (KMLDataSource dataSource : myConfig.getKMLSourceList()) {if (dataSource.isActive()) {dataSource.getDataGroupInfo().activationProperty().setActive(true);try {activateSource(dataSource);} catch (DataGroupActivationException e) {}}}}}	1
4581	"public class A {@Path(""/transactions/prune/regions"")@GETpublic void getTimeRegions(HttpRequest request,HttpResponder responder,@QueryParam(""time"") @DefaultValue(""now"") String time) {try {if (!initializePruningDebug(responder)) {return;}RegionsAtTime timeRegionInfo = pruningDebug.getRegionsOnOrBeforeTime(time);responder.sendJson(HttpResponseStatus.OK, GSON.toJson(timeRegionInfo));} catch (Exception e) {responder.sendString(HttpResponseStatus.BAD_REQUEST, e.getMessage());}}}"	1
4582	"public class A {@Test(timeout = 20000)public void testCloseSessionTimesOut() throws Exception {try (TestAmqpPeer testPeer = new TestAmqpPeer(); ) {JmsConnection connection = (JmsConnection) testFixture.establishConnecton(testPeer);connection.setCloseTimeout(500);testPeer.expectBegin();testPeer.expectEnd(false);testPeer.expectClose();Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);assertNotNull(""Session should not be null"", session);try {session.close();fail(""Should have thrown an timed out exception"");} catch (JmsOperationTimedOutException jmsEx) {}connection.close();testPeer.waitForAllHandlersToComplete(1000);}}}"	1
4583	"public class A {public static WebDriver create(String testName, DesiredCapabilities capabilities, String seleniumHost) {AbstractFactory factory;String driverType = Configuration.getDriverType(capabilities);switch (driverType) {case SpecialKeywords.DESKTOP:factory = new DesktopFactory();break;case SpecialKeywords.MOBILE:factory = new MobileFactory();break;case SpecialKeywords.WINDOWS:factory = new WindowsFactory();break;default:throw new RuntimeException(""Unsupported driver_type: "" + driverType);}WebDriver driver = factory.create(testName, capabilities, seleniumHost);driver = factory.registerListeners(driver, getEventListeners());return driver;}}"	2
4584	public class A {public void addImplementsHostInterface(TypeSpec host, ClassName hostInterfaceName, Map<TypeSpec, TypeSpec> changes) {TypeSpec currentHost = changes.get(host);if (currentHost == null) {currentHost = host;}TypeSpec.Builder modifyingBuilder = currentHost.toBuilder();modifyingBuilder.addSuperinterface(hostInterfaceName);changes.put(host, modifyingBuilder.build());}}	1
4585	public class A {public boolean processMessageStatus(final String messageId, final String newStatus) {boolean result = false;try {final AsyncMsgRecordDao instance = createAsyncMsgRecordDao();final String direction = getInitialDirectionFromStatus(newStatus);final List<AsyncMsgRecord> records =instance.queryByMessageIdAndDirection(messageId, direction);if (records != null && !records.isEmpty()) {records.get(0).setStatus(newStatus);instance.save(records.get(0));}result = true;} catch (final Exception e) {}return result;}}	3
4586	"public class A {@Overridepublic void process(final Resource resource, final Reader reader, final Writer writer)throws IOException {final String content = IOUtils.toString(reader);final String resourceUri = resource == null ? ""unknown.js"" : resource.getUri();try {writer.write(process(resourceUri, content));} catch (final Exception e) {onException(e, content);} finally {reader.close();writer.close();}}}"	2
4587	"public class A {@Test(groups = ""Integration"")public void test_localhost() throws Exception {PostgreSqlNode pgsql =tapp.createAndManageChild(EntitySpec.create(PostgreSqlNode.class).configure(DatastoreCommon.CREATION_SCRIPT_CONTENTS, CREATION_SCRIPT).configure(PostgreSqlNode.MAX_CONNECTIONS, 10).configure(PostgreSqlNode.SHARED_MEMORY, ""512kB""));tapp.start(ImmutableList.of(new LocalhostMachineProvisioningLocation()));String url = pgsql.getAttribute(DatastoreCommon.DATASTORE_URL);new VogellaExampleAccess(""org.postgresql.Driver"", url).readModifyAndRevertDataBase();}}"	2
4588	public class A {protected Opt<DublinCoreCatalog> loadDublinCoreCatalog(String seriesId) {try {Opt<byte[]> seriesElementData =getSeriesService().getSeriesElementData(requireNonNull(seriesId), flavor.getType());if (seriesElementData.isSome()) {final DublinCoreCatalog dc = DublinCoreByteFormat.read(seriesElementData.get());dc.setFlavor(flavor);dc.addBindings(config.getXmlNamespaceContext());return Opt.some(dc);} else {final DublinCoreCatalog dc = DublinCores.mkStandard();dc.addBindings(config.getXmlNamespaceContext());dc.setRootTag(new EName(config.getCatalogXmlRootNamespace(), config.getCatalogXmlRootElementName()));dc.setFlavor(flavor);return Opt.some(dc);}} catch (SeriesException e) {return Opt.none();}}}	1
4589	public class A {@Overridepublic void visitCommander(Commander commander) {}}	1
4590	public class A {@Override@Transactional(readOnly = true)public MetadataVersion getCurrentVersion() {try {return versionStore.getCurrentVersion();} catch (Exception ex) {throw new MetadataVersionServiceException(ex.getMessage(), ex);}}}	1
4591	public class A {private void getSfcChain() {ParameterValue pv = getChainNameParameter(actionInstance.getParameterValue());if (pv == null) {return;}SfcName chainName = new SfcName(pv.getStringValue());ServiceFunctionChain chain = SfcProviderServiceChainAPI.readServiceFunctionChain(chainName);ServiceFunctionPaths paths = SfcProviderServicePathAPI.readAllServiceFunctionPaths();for (ServiceFunctionPath path : paths.getServiceFunctionPath()) {if (path.getServiceChainName().equals(chainName)) {}}}}	2
4592	"public class A {public static void updateFileEntryType(HttpPrincipal httpPrincipal,long fileEntryTypeId,String name,String description,long[] ddmStructureIds,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DLFileEntryTypeServiceUtil.class,""updateFileEntryType"",_updateFileEntryTypeParameterTypes17);MethodHandler methodHandler =new MethodHandler(methodKey, fileEntryTypeId, name, description, ddmStructureIds, serviceContext);try {TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4593	"public class A {private void createSearchLogCondition(final SearchLogPager pager, final SearchLogCB cb) {if (StringUtil.isNotBlank(pager.queryId)) {cb.query().setQueryId_Term(pager.queryId);}if (StringUtil.isNotBlank(pager.userSessionId)) {cb.query().setUserSessionId_Term(pager.userSessionId);}if (StringUtil.isNotBlank(pager.accessType)) {cb.query().setAccessType_Term(pager.accessType);}if (StringUtil.isNotBlank(pager.requestedTimeRange)) {final String[] values = pager.requestedTimeRange.split("" - "");final DateTimeFormatter formatter = DateTimeFormatter.ofPattern(YYYY_MM_DD_HH_MM);try {if (values.length > 0) {cb.query().setRequestedAt_GreaterEqual(parseDateTime(values[0], formatter));}if (values.length > 1) {cb.query().setRequestedAt_LessEqual(LocalDateTime.parse(values[1], formatter));}} catch (final Exception e) {if (logger.isDebugEnabled()) {}}}}}"	1
4594	"public class A {@POSTpublic Result setup(Stack stack) {return new BaseResult(ENDPOINT_URL, true, ""Setup called"", State.READY);}}"	1
4595	public class A {public synchronized void stop() throws Exception {if (server == null) return;String root = getRootUrl();if (shutdownHook != null) Threads.removeShutdownHook(shutdownHook);if (log.isDebugEnabled())server.stop();try {server.join();} catch (Exception e) {}server = null;LocalhostMachineProvisioningLocation.releasePort(getAddress(), actualPort);actualPort = -1;}}	2
4596	"public class A {private void processWmsState(OGCServiceStateEvent event) {myWmsWaiting = false;if (event.getState() == State.COMPLETED) {myWmsSuccess = true;myWmsLayers = event.getLayerTree();if (isComplete()) {sendResponseAndCleanup(null);}} else {StringBuilder sb = new StringBuilder(""Error initializing WMS server: "");sb.append(mySource.getName());if (StringUtils.isNotEmpty(event.getError())) {sb.append(""\n\n"").append(event.getError());}sendResponseAndCleanup(sb.toString());}}}"	1
4597	"public class A {public static com.liferay.commerce.bom.model.CommerceBOMFolder updateCommerceBOMFolder(HttpPrincipal httpPrincipal,long commerceBOMFolderId,String name,boolean logo,byte[] logoBytes)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommerceBOMFolderServiceUtil.class,""updateCommerceBOMFolder"",_updateCommerceBOMFolderParameterTypes7);MethodHandler methodHandler =new MethodHandler(methodKey, commerceBOMFolderId, name, logo, logoBytes);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.bom.model.CommerceBOMFolder) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4598	public class A {public static void deleteAssetCategoryCPDefinition(long cpDefinitionId,long categoryId,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {CPDefinitionServiceUtil.deleteAssetCategoryCPDefinition(cpDefinitionId, categoryId, serviceContext);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4599	public class A {public static Map<MedicalDataType, List<Measurement>> getMeasurementsFromMyOscar(MyOscarLoggedInInfo myOscarLoggedInInfo, Integer demoId, MedicalDataType... types) {if (logger.isInfoEnabled()) {}Long myOscarDemoId =MyOscarUtils.getMyOscarUserIdFromOscarDemographicId(myOscarLoggedInInfo, demoId);Map<MedicalDataType, List<Measurement>> result =new HashMap<MedicalDataType, List<Measurement>>();for (MedicalDataType type : types) {String typeName = type.name();List<MedicalDataTransfer4> medData = null;try {medData = getMeasurementsFromMyOscar(myOscarLoggedInInfo, myOscarDemoId, typeName);} catch (Exception e) {result.put(type, null);continue;}List<Measurement> oscarMeasurements = new ArrayList<Measurement>();for (MedicalDataTransfer4 mdt : medData) {oscarMeasurements.add(toMeasurement(mdt));}result.put(type, oscarMeasurements);}if (logger.isInfoEnabled()) {}return result;}}	3
4600	"public class A {protected void deleteLayoutTypeSettingsColumnKeyWithoutValue() throws Exception {IndexableActionableDynamicQuery indexableActionableDynamicQuery =LayoutLocalServiceUtil.getIndexableActionableDynamicQuery();indexableActionableDynamicQuery.setAddCriteriaMethod(dynamicQuery -> {Disjunction disjunction = RestrictionsFactoryUtil.disjunction();Property typeSettingsProperty = PropertyFactoryUtil.forName(""typeSettings"");disjunction.add(typeSettingsProperty.like(""%"" + LayoutTypePortletConstants.COLUMN_PREFIX + ""%=,%""));disjunction.add(typeSettingsProperty.like(""%"" + LayoutTypePortletConstants.NESTED_COLUMN_IDS + ""%=,%""));dynamicQuery.add(disjunction);});indexableActionableDynamicQuery.setParallel(true);indexableActionableDynamicQuery.setPerformActionMethod((Layout layout) -> {try {UnicodeProperties oldtypeSettingsUnicodeProperties = layout.getTypeSettingsProperties();UnicodeProperties newTypeSettingsUnicodeProperties =getNewTypeSettingsUnicodeProperties(layout.getTypeSettingsProperties());if (!oldtypeSettingsUnicodeProperties.equals(newTypeSettingsUnicodeProperties)) {updateLayout(layout.getPlid(), newTypeSettingsUnicodeProperties.toString());}} catch (Exception exception) {if (_log.isWarnEnabled()) {}}});indexableActionableDynamicQuery.performActions();}}"	1
4601	"public class A {private void actionBrowse() {try {Desktop.getDesktop().browse(URI.create(""http://localhost:"" + port));} catch (IOException e) {}}}"	1
4602	"public class A {private void addBasicParameters(TestExecutionBuilder testExecutionBuilder, Report report) {testExecutionBuilder.parameter(""exec.config"", report.getConfiguration().name);testExecutionBuilder.parameter(""exec.jenkins_build_url"", jenkinsBuildUrl);testExecutionBuilder.parameter(""exec.jenkins_build_number"", jenkinsBuild);if (buildParams != null) {for (Map.Entry<String, String> buildParam : buildParams.entrySet()) {testExecutionBuilder.parameter(buildParam.getKey(), buildParam.getValue());}}if (buildParamsFile != null) {Properties paramsFromFile = new Properties();try (FileInputStream fileInputStream = new FileInputStream(buildParamsFile)) {paramsFromFile.load(fileInputStream);} catch (IOException e) {}for (Map.Entry<Object, Object> entry : paramsFromFile.entrySet()) {testExecutionBuilder.parameter((String) entry.getKey(), (String) entry.getValue());}}}}"	1
4603	"public class A {private static SolrClient instantiateSolr(Path solrHome, boolean writeIsAllowed)throws GenericException {SolrType solrType =SolrType.valueOf(getConfigurationString(RodaConstants.CORE_SOLR_TYPE, RodaConstants.DEFAULT_SOLR_TYPE.toString()));if (INSTANTIATE_SOLR_TYPE != null) {solrType = INSTANTIATE_SOLR_TYPE;}Field.initialize();if (solrType == RodaConstants.SolrType.HTTP) {String solrBaseUrl =getConfigurationString(RodaConstants.CORE_SOLR_HTTP_URL, ""http://localhost:8983/solr/"");return new HttpSolrClient.Builder(solrBaseUrl).build();} else if (solrType == RodaConstants.SolrType.CLOUD) {String solrCloudZooKeeperUrls =getConfigurationString(RodaConstants.CORE_SOLR_CLOUD_URLS, ""localhost:2181,localhost:2182,localhost:2183"");try {ZkController.checkChrootPath(solrCloudZooKeeperUrls, true);} catch (KeeperException | InterruptedException e) {}List<String> zkHosts;Optional<String> zkChroot;int indexOfSlash = solrCloudZooKeeperUrls.indexOf('/');if (indexOfSlash > 0) {zkHosts = Arrays.asList(solrCloudZooKeeperUrls.substring(0, indexOfSlash).split("",""));zkChroot = Optional.of(solrCloudZooKeeperUrls.substring(indexOfSlash));} else {zkHosts = Arrays.asList(solrCloudZooKeeperUrls.split("",""));zkChroot = Optional.empty();}CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(zkHosts, zkChroot).build();waitForSolrCluster(cloudSolrClient);if (writeIsAllowed) {bootstrap(cloudSolrClient, solrHome);}return cloudSolrClient;} else {System.setProperty(""solr.data.dir"", indexDataPath.toString());try {Path commonConf = Files.createTempDirectory(""solr-base-config"");copyFilesFromClasspath(RodaConstants.CORE_CONFIG_FOLDER+ ""/""+ RodaConstants.CORE_INDEX_FOLDER+ ""/""+ SolrUtils.COMMON+ ""/""+ SolrUtils.CONF+ ""/"",commonConf,true);for (String collection : SolrCollectionRegistry.registryIndexNames()) {Path collectionPath = solrHome.resolve(collection);FSUtils.copy(commonConf, collectionPath.resolve(SolrUtils.CONF), true);Files.write(collectionPath.resolve(""core.properties""),(""name="" + collection).getBytes(StandardCharsets.UTF_8));}FSUtils.deletePathQuietly(commonConf);Files.write(solrHome.resolve(""solr.xml""), ""<solr></solr>"".getBytes(StandardCharsets.UTF_8));} catch (IOException | AlreadyExistsException e) {}return new EmbeddedSolrServer(solrHome, ""test"");}}}"	5
4604	"public class A {public void start() {this.pinotClusterManager.getPropertyStore().subscribe(""/"", this);}}"	1
4605	public class A {@Overridepublic boolean setLastModified(final long time) {try {Files.setLastModifiedTime(m_path, FileTime.fromMillis(time));return true;} catch (final IOException ex) {return false;}}}	1
4606	public class A {@Testpublic void testRandomAssignment() throws Exception {for (int i = 1; i != 5; ++i) {testRandomAssignment(i);}}}	1
4607	public class A {protected void submitTasks() {List<ScannerChunk> newChunks;newChunks = Lists.newArrayList(currentBatch);currentBatch.clear();Collections.shuffle(newChunks);for (ScannerChunk chunk : newChunks) {AtomicInteger numChunks = serverMap.get(chunk.getLastKnownLocation());if (numChunks == null) {numChunks = new AtomicInteger(1);serverMap.put(chunk.getLastKnownLocation(), numChunks);} else numChunks.incrementAndGet();Scan scan = null;if (speculativeScanning) {if (log.isTraceEnabled()) {}scan =new SpeculativeScan(localTableName,localAuths,chunk,delegatorReference,delegatedResourceInitializer,resultQueue,listenerService);((SpeculativeScan) scan).addScan(new Scan(localTableName,localAuths,new ScannerChunk(chunk),delegatorReference,BatchResource.class,((SpeculativeScan) scan).getQueue(),listenerService));((SpeculativeScan) scan).addScan(new Scan(localTableName,localAuths,new ScannerChunk(chunk),delegatorReference,delegatedResourceInitializer,((SpeculativeScan) scan).getQueue(),listenerService));} else {scan =new Scan(localTableName,localAuths,chunk,delegatorReference,delegatedResourceInitializer,resultQueue,listenerService);}if (backoffEnabled) {scan.setSessionArbiter(this);}scan.setVisitors(visitorFunctions);scan.setTimeout(scanLimitTimeout);if (log.isTraceEnabled()) {}submitScan(scan, true);}}}	2
4608	"public class A {private static void root(String password) {DbConn cnx = null;try {cnx = Helpers.getNewDbSession();Helpers.createRoleIfMissing(cnx, ""administrator"", ""all permissions without exception"", ""*:*"");Helpers.createUserIfMissing(cnx, ""root"", password, ""all powerful user"", ""administrator"");MetaService.changeUserPassword(cnx, ""root"", password);cnx.commit();} catch (Exception ex) {} finally {Helpers.closeQuietly(cnx);}}}"	1
4609	public class A {public static void reset() {allAwake = false;sleeping.clear();}}	1
4610	"public class A {@Overridepublic ValueResult getValues(ParameterizedElementDeclaration component, String providerName) {try {return withInternalDeclarationSession(""getValues()"", session -> session.getValues(component, providerName));} catch (Throwable t) {throw t;}}}"	1
4611	"public class A {@Overridepublic InputStream getStream() throws DataStoreException {File cached = null;try {cached = store.cache.get(getIdentifier().toString());} catch (final Exception e) {}try {if (cached == null || !cached.exists()) {InputStream in = null;try {TransientFileFactory fileFactory = TransientFileFactory.getInstance();File tmpFile = fileFactory.createTransientFile(""temp0cache"", null, temp);in = backend.getRecord(getIdentifier()).getStream();copyInputStreamToFile(in, tmpFile);return new LazyFileInputStream(tmpFile);} finally {Closeables.close(in, false);}} else {return new FileInputStream(cached);}} catch (final Exception e) {throw new DataStoreException(""Error opening input stream for identifier "" + getIdentifier(), e);}}}"	1
4612	public class A {@Overridepublic void run() {try {reporter.report();} catch (Throwable t) {}}}	1
4613	public class A {private static boolean waitTillNoNotifications(Environment env, TableRange range)throws TableNotFoundException {boolean sawNotifications = false;long retryTime = MIN_SLEEP_MS;long start = System.currentTimeMillis();while (hasNotifications(env, range)) {sawNotifications = true;long sleepTime = Math.max(System.currentTimeMillis() - start, retryTime);UtilWaitThread.sleep(sleepTime);retryTime = Math.min(MAX_SLEEP_MS, (long) (retryTime * 1.5));start = System.currentTimeMillis();}return sawNotifications;}}	2
4614	public class A {private NhinTargetSystemType getLocalHCIDNhinTarget() {String hcid = null;try {hcid =PropertyAccessor.getInstance().getProperty(NhincConstants.GATEWAY_PROPERTY_FILE, NhincConstants.HOME_COMMUNITY_ID_PROPERTY);} catch (PropertyAccessException ex) {}return convertToNhinTarget(hcid);}}	1
4615	public class A {public double getLastTime() {if (startTime == -1 || stopTime == -1) {return -1;}if (stopTime - startTime == 0) {}return (stopTime - startTime) / 1_000_000d;}}	1
4616	public class A {public boolean checkFlows(Network network, ValidationConfig config, ValidationWriter flowsWriter) {Objects.requireNonNull(network);Objects.requireNonNull(config);Objects.requireNonNull(flowsWriter);boolean linesValidated =network.getLineStream().sorted(Comparator.comparing(Line::getId)).map(l -> checkFlows(l, config, flowsWriter)).reduce(Boolean::logicalAnd).orElse(true);boolean transformersValidated =network.getTwoWindingsTransformerStream().sorted(Comparator.comparing(TwoWindingsTransformer::getId)).map(t -> checkFlows(t, config, flowsWriter)).reduce(Boolean::logicalAnd).orElse(true);return linesValidated && transformersValidated;}}	1
4617	public class A {public static CalendarView get(String viewName) {try {return CalendarView.valueOf(viewName);} catch (IllegalArgumentException e) {if (LOG.isDebugEnabled()) {}}return null;}}	1
4618	public class A {private void processToRemoveSegments(CubeUpdate update, Segments<CubeSegment> newSegs, List<String> toRemoveResources) {Iterator<CubeSegment> iterator = newSegs.iterator();while (iterator.hasNext()) {CubeSegment currentSeg = iterator.next();for (CubeSegment toRemoveSeg : update.getToRemoveSegs()) {if (currentSeg.getUuid().equals(toRemoveSeg.getUuid())) {toRemoveResources.add(currentSeg.getStatisticsResourcePath());iterator.remove();break;}}}}}	1
4619	public class A {@Overridepublic <K, V> void removeCacheListener(final ICacheListener<K, V> obj) throws IOException {cacheMap.values().forEach(set -> {set.remove(obj);});cacheWatch.removeCacheListener(obj);}}	2
4620	"public class A {@Overridepublic void process() throws MessagingException {MailAddress intendedRecipient = getIntendedRecipient();setRecipientNotFound(null == intendedRecipient);if (isRecipientNotFound()) {if (isDeferRecipientNotFound()) {String messageID = getMessageIn().getMessageID();if (!getDeferredRecipientNotFoundMessageIDs().contains(messageID)) {getDeferredRecipientNotFoundMessageIDs().add(messageID);return;} else {getDeferredRecipientNotFoundMessageIDs().remove(messageID);}}if (isRejectRecipientNotFound()) {rejectRecipientNotFound();return;}intendedRecipient = getRecipient();StringBuilder messageBuffer =new StringBuilder(""Intended recipient not found. Using configured recipient as new envelope recipient -""+ "" "");messageBuffer.append(intendedRecipient);messageBuffer.append('.');logStatusInfo(messageBuffer.toString());}setBlacklistedRecipient(isBlacklistedRecipient(intendedRecipient));setRemoteRecipient(!isLocalServer(intendedRecipient));try {setUserUndefined(!isLocalRecipient(intendedRecipient));} catch (UsersRepositoryException e) {throw new MessagingException(""Unable to access USersRepository"", e);}if (isRejectBlacklisted() && isBlacklistedRecipient()) {rejectBlacklistedRecipient(intendedRecipient);return;}if (isRejectRemoteRecipient() && isRemoteRecipient()) {rejectRemoteRecipient(intendedRecipient);return;}if (isRejectUserUndefined() && isUserUndefined()) {rejectUserUndefined(intendedRecipient);return;}if (isRejectMaxMessageSizeExceeded() && isMaxMessageSizeExceeded()) {rejectMaxMessageSizeExceeded(getMessageIn().getSize());return;}if (isRejectRemoteReceivedHeaderInvalid() && isRemoteReceivedHeaderInvalid()) {rejectRemoteReceivedHeaderInvalid();return;}Mail mail;try {mail = createMail(createMessage(), intendedRecipient);} catch (ParseException ex) {handleParseException(ex);return;} catch (UnknownHostException ex) {handleUnknownHostException(ex);return;}addMailAttributes(mail);addErrorMessages(mail);if (isBouncing()) {handleBouncing(mail);return;}sendMail(mail);}}"	3
4621	"public class A {protected void apply(String sql) {Connection con = null;Statement stmt = null;try {con = basicDataSource.getConnection();stmt = con.createStatement();try {if (sql != null) {stmt.executeUpdate(sql);}stmt.executeUpdate(""UPDATE version SET next_update = next_update + 1"");con.commit();} catch (Exception e) {DbUtils.rollback(con);throw e;}} catch (SQLException e) {throw new RuntimeException(""Database error executing: "" + sql, e);} finally {DbUtils.close(stmt, con);}}}"	3
4622	public class A {public void addPointToCanopies(Vector point, Collection<Canopy> canopies) {boolean pointStronglyBound = false;for (Canopy canopy : canopies) {double dist =measure.distance(canopy.getCenter().getLengthSquared(), canopy.getCenter(), point);if (dist < t1) {if (log.isDebugEnabled()) {}canopy.observe(point);}pointStronglyBound = pointStronglyBound || dist < t2;}if (!pointStronglyBound) {if (log.isDebugEnabled()) {}canopies.add(new Canopy(point, nextCanopyId++, measure));}}}	2
4623	public class A {@Overridepublic void onNotification(FlowConstructNotification notification) {if (Integer.parseInt(notification.getAction().getIdentifier()) == FLOW_CONSTRUCT_STOPPED) {invalidateDisposedFlowFromCaches(notification.getResourceIdentifier());}}}	1
4624	public class A {public static byte[][] splitMessage8Bit(byte[] aMessage) {int segmentNum = aMessage.length / MAX_MESSAGE_SEGMENT_8BIT;int messageLength = aMessage.length;if (segmentNum > 255) {segmentNum = 255;messageLength = segmentNum * MAX_MESSAGE_SEGMENT_8BIT;}if ((messageLength % MAX_MESSAGE_SEGMENT_8BIT) > 0) segmentNum++;byte[][] segments = new byte[segmentNum][];int lengthOfData;byte[] referenceNumber = copyShort2Bytes(getReferenceNumber());for (int i = 0; i < segmentNum; i++) {if (segmentNum - i == 1) lengthOfData = messageLength - i * MAX_MESSAGE_SEGMENT_8BIT;else lengthOfData = MAX_MESSAGE_SEGMENT_8BIT;segments[i] = new byte[7 + lengthOfData];segments[i][0] = 6;segments[i][1] = UDHIE_IDENTIFIER_SAR;segments[i][2] = UDHIE_SAR_LENGTH;System.arraycopy(referenceNumber, 0, segments[i], 3, 2);segments[i][5] = (byte) segmentNum;segments[i][6] = (byte) (i + 1);System.arraycopy(aMessage, i * MAX_MESSAGE_SEGMENT_8BIT, segments[i], 7, lengthOfData);}return segments;}}	3
4625	"public class A {private void stop(final String host, final String name) throws IOException {this.script.exec(host, new ArrayMap<String, String>().with(""container"", name));}}"	1
4626	public class A {@Overridepublic EsOccurrenceHeatmapResponse.GeoCentroidResponse searchHeatMapGeoCentroid(@Nullable OccurrenceHeatmapRequest request) {Objects.requireNonNull(request);request.setMode(OccurrenceHeatmapRequest.Mode.GEO_CENTROID);SearchRequest searchRequest = EsHeatmapRequestBuilder.buildRequest(request, esIndex);try {return parseGeoCentroidResponse(esClient.search(searchRequest, HEADERS.get()));} catch (IOException e) {throw new SearchException(e);}}}	2
4627	public class A {public void markAsDeleted() {if (log.isDebugEnabled() == true) {}synchronized (editPage.getData()) {if (editPage.isAlreadySubmitted() == true) {} else {editPage.setAlreadySubmitted(true);final WebPage page = editPage.onDelete();if (page != null) {editPage.setResponsePageAndHighlightedRow(page);return;}baseDao.markAsDeleted(editPage.getData());editPage.afterDelete();editPage.setResponsePage();}}}}	2
4628	public class A {public void attachDirty(StgMYesnoTxt instance) {try {sessionFactory.getCurrentSession().saveOrUpdate(instance);} catch (RuntimeException re) {throw re;}}}	3
4629	public class A {protected SequenceFile.Writer createNewFile(Path filepath,Class<? extends WritableComparable> keyClass,Class<? extends Writable> valueClass)throws IOException {SequenceFile.Writer writer =new SequenceFile.Writer(getFileSystem(), getJobConf(), filepath, keyClass, valueClass);return writer;}}	1
4630	"public class A {public static com.liferay.commerce.product.model.CPMeasurementUnit updateCPMeasurementUnit(HttpPrincipal httpPrincipal,long cpMeasurementUnitId,java.util.Map<java.util.Locale, String> nameMap,String key,double rate,boolean primary,double priority,int type,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CPMeasurementUnitServiceUtil.class,""updateCPMeasurementUnit"",_updateCPMeasurementUnitParameterTypes9);MethodHandler methodHandler =new MethodHandler(methodKey,cpMeasurementUnitId,nameMap,key,rate,primary,priority,type,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.product.model.CPMeasurementUnit) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4631	public class A {protected void processSimpleTypeDefinition(XSDSimpleTypeDefinition type, Node node)throws RepositoryException {boolean isAnonymous = type.getName() == null;String nodeName = isAnonymous ? XsdLexicon.SIMPLE_TYPE : type.getName();Node typeNode = node.addNode(nodeName, XsdLexicon.SIMPLE_TYPE_DEFINITION);typeNode.setProperty(XsdLexicon.NAMESPACE, type.getTargetNamespace());if (!isAnonymous) {typeNode.setProperty(XsdLexicon.NC_NAME, type.getName());registerForSymbolSpace(TYPE_DEFINITIONS, type.getTargetNamespace(), type.getName(), typeNode.getIdentifier());}processTypeFacets(type, typeNode, type.getBaseType());processNonSchemaAttributes(type, typeNode, IGNORED_ATTRIBUTES_SIMPLE_TYPE_DEF);}}	1
4632	public class A {public static void main(String[] args) throws Exception {RdfFreemarkerCli cli = new RdfFreemarkerCli(args);try {cli.call();} catch (Exception e) {System.exit(1);}System.exit(0);}}	1
4633	"public class A {@Overridepublic X509Certificate prompt(final String hostname, final List<X509Certificate> certificates)throws ConnectionCanceledException {final AtomicReference<SFChooseIdentityPanel> ref = new AtomicReference<>();controller.invoke(new DefaultMainAction() {@Overridepublic void run() {ref.set(SFChooseIdentityPanel.sharedChooseIdentityPanel());}},true);final SFChooseIdentityPanel panel = ref.get();panel.setDomain(hostname);final SecPolicyRef policyRef = SecurityFunctions.library.SecPolicyCreateSSL(true, hostname);panel.setPolicies(policyRef);FoundationKitFunctions.library.CFRelease(policyRef);panel.setShowsHelp(false);panel.setAlternateButtonTitle(LocaleFactory.localizedString(""Disconnect""));panel.setInformativeText(MessageFormat.format(LocaleFactory.localizedString(""The server requires a certificate to validate your identity. Select the""+ "" certificate to authenticate yourself to {0}.""),hostname));final NSArray identities = KeychainCertificateStore.toDEREncodedCertificates(certificates);final int option = this.prompt(panel, identities);switch (option) {case SheetCallback.DEFAULT_OPTION:final SecIdentityRef identityRef = panel.identity();if (null == identityRef) {throw new ConnectionCanceledException();}return KeychainCertificateStore.toX509Certificate(identityRef);default:throw new ConnectionCanceledException();}}}"	1
4634	public class A {public RemotingCommand cleanExpiredConsumeQueue() {final RemotingCommand response = RemotingCommand.createResponseCommand(null);brokerController.getMessageStore().cleanExpiredConsumerQueue();response.setCode(ResponseCode.SUCCESS);response.setRemark(null);return response;}}	2
4635	public class A {@Overridepublic List<ProxyHostConfig> getProxyServer(URL destination) throws IOException {List<ProxyHostConfig> results = New.list(1);try {for (Proxy prox : ProxySelector.getDefault().select(destination.toURI())) {ProxyType proxyType;switch (prox.type()) {case DIRECT:proxyType = ProxyType.DIRECT;break;case HTTP:proxyType = ProxyType.PROXY;break;case SOCKS:proxyType = ProxyType.SOCKS;break;default:throw new UnexpectedEnumException(prox.type());}SocketAddress addr = prox.address();if (addr instanceof InetSocketAddress) {results.add(new ProxyHostConfig(proxyType,((InetSocketAddress) addr).getHostString(),((InetSocketAddress) addr).getPort()));}}} catch (URISyntaxException e) {}return results;}}	1
4636	"public class A {@SuppressWarnings(""unchecked"")@Overrideprotected Transformation<RowData> translateToPlanInternal(PlannerBase planner) {TableConfig tableConfig = planner.getTableConfig();if (grouping.length > 0 && tableConfig.getMinIdleStateRetentionTime() < 0) {}final ExecEdge inputEdge = getInputEdges().get(0);final Transformation<RowData> inputTransform =(Transformation<RowData>) inputEdge.translateToPlan(planner);final RowType inputRowType = (RowType) inputEdge.getOutputType();final AggregateInfoList aggInfoList =AggregateUtil.transformToStreamAggregateInfoList(inputRowType,JavaScalaConversionUtil.toScala(Arrays.asList(aggCalls)),aggCallNeedRetractions,needRetraction,true,true);final int inputCountIndex = aggInfoList.getIndexOfCountStar();final boolean countStarInserted = aggInfoList.countStarInserted();Tuple2<PythonAggregateFunctionInfo[], DataViewUtils.DataViewSpec[][]> aggInfosAndDataViewSpecs =CommonPythonUtil.extractPythonAggregateFunctionInfos(aggInfoList, aggCalls);PythonAggregateFunctionInfo[] pythonFunctionInfos = aggInfosAndDataViewSpecs.f0;DataViewUtils.DataViewSpec[][] dataViewSpecs = aggInfosAndDataViewSpecs.f1;Configuration config = CommonPythonUtil.getMergedConfig(planner.getExecEnv(), tableConfig);final OneInputStreamOperator<RowData, RowData> operator =getPythonAggregateFunctionOperator(config,inputRowType,InternalTypeInfo.of(getOutputType()).toRowType(),pythonFunctionInfos,dataViewSpecs,tableConfig.getMinIdleStateRetentionTime(),tableConfig.getMaxIdleStateRetentionTime(),inputCountIndex,countStarInserted);OneInputTransformation<RowData, RowData> transform =new OneInputTransformation<>(inputTransform,getDescription(),operator,InternalTypeInfo.of(getOutputType()),inputTransform.getParallelism());if (CommonPythonUtil.isPythonWorkerUsingManagedMemory(config)) {transform.declareManagedMemoryUseCaseAtSlotScope(ManagedMemoryUseCase.PYTHON);}final RowDataKeySelector selector =KeySelectorUtil.getRowDataSelector(grouping, InternalTypeInfo.of(inputRowType));transform.setStateKeySelector(selector);transform.setStateKeyType(selector.getProducedType());return transform;}}"	1
4637	public class A {protected void closeQueryResults() {for (QueryResultContext ctx : queryResults) {if (!ctx.queryResult.mustBeClosed()) {continue;}try {ctx.queryResult.close();} catch (RuntimeException e) {} finally {}}queryResults.clear();}}	2
4638	public class A {public Object get(final Serializable id) {try {return idToVariableCache.get(id);} catch (ExecutionException e) {throw new IllegalStateException(e);}}}	1
4639	"public class A {@Testpublic void test_08() {Chromosome chr = genome.getChromosome(""1"");Marker m1 = new Marker(chr, 0, 100, false, """");ArrayList<Marker> list = new ArrayList<>();list.add(m1);int last = m1.getEnd() + 10;for (int i = m1.getStart(); i <= last; i++) {Marker m = new Marker(chr, i, i, false, """");int dist = m.distanceBases(list, false);Assert.assertEquals(i, dist);}}}"	1
4640	public class A {private void executeWaitAndTerminate(Runnable runnable, long frequency, long waitInBetween, TimeUnit unit)throws InterruptedException {ScheduledExecutorService scheduledExecutorService =Executors.newSingleThreadScheduledExecutor();scheduledExecutorService.scheduleWithFixedDelay(runnable, 0L, frequency, unit);Thread.currentThread().sleep(unit.toMillis(waitInBetween));scheduledExecutorService.shutdown();try {if (!scheduledExecutorService.awaitTermination(10L, TimeUnit.SECONDS)) {List<Runnable> droppedTasks = scheduledExecutorService.shutdownNow();}} catch (InterruptedException e) {Thread.currentThread().interrupt();}}}	2
4641	"public class A {public static void main(String... args) {Exception error = null;try {InitLog.initLogger(args, getParser());new SparqlFetch(args).execute();} catch (IllegalArgumentException e) {log.error(e.getMessage());log.debug(""Stacktrace:"", e);System.out.println(getParser().getUsage());error = e;} catch (UsageException e) {System.out.println(getParser().getUsage());error = e;} catch (Exception e) {error = e;} finally {if (error != null) {System.exit(1);} else {System.exit(0);}}}}"	6
4642	"public class A {@Overridepublic Object bridgeableLoadObject(MultiplexTransaction muxTx,Object parent,String relationName,Serializable lookupId,Optional<FilterExpression> filterExpression,RequestScope scope) {if (parent.getClass().equals(HibernateUser.class)) {EntityDictionary dictionary = scope.getDictionary();Type<?> entityClass = dictionary.getParameterizedType(parent, relationName);HibernateUser user = (HibernateUser) parent;if (""specialAction"".equals(relationName)) {return muxTx.loadObject(EntityProjection.builder().type(entityClass).build(),String.valueOf(user.getSpecialActionId()),scope);}if (""redisActions"".equals(relationName)) {FilterExpression updatedExpression =new InPredicate(new Path.PathElement(entityClass, ClassType.STRING_TYPE, ""user_id""),String.valueOf(((HibernateUser) parent).getId()));return muxTx.loadObject(EntityProjection.builder().type(entityClass).filterExpression(updatedExpression).build(),String.valueOf(lookupId),scope);}}throw new RuntimeException(""Unsupported bridging attempted!"");}}"	1
4643	"public class A {@SuppressWarnings({""unchecked"", ""rawtypes""})private static void notifyProgressiveListener0(ProgressiveFuture future, GenericProgressiveFutureListener l, long progress, long total) {try {l.operationProgressed(future, progress, total);} catch (Throwable t) {if (logger.isWarnEnabled()) {}}}}"	1
4644	"public class A {private DatasetVersion getDatasetVersionFromRequest(AuthService authService, CreateDatasetVersion request, UserInfo userInfo)throws ModelDBException {DatasetVersion.Builder datasetVersionBuilder =DatasetVersion.newBuilder().setVersion(request.getVersion()).setDatasetId(request.getDatasetId()).setDescription(request.getDescription()).addAllTags(request.getTagsList()).addAllAttributes(request.getAttributesList());if (request.getTimeCreated() != 0L) {datasetVersionBuilder.setTimeLogged(request.getTimeCreated());datasetVersionBuilder.setTimeUpdated(request.getTimeCreated());} else {datasetVersionBuilder.setTimeLogged(Calendar.getInstance().getTimeInMillis());datasetVersionBuilder.setTimeUpdated(Calendar.getInstance().getTimeInMillis());}if (!request.getParentId().isEmpty()) {datasetVersionBuilder.setParentId(request.getParentId());}if (userInfo != null) {datasetVersionBuilder.setOwner(authService.getVertaIdFromUserInfo(userInfo));}if (!request.hasPathDatasetVersionInfo() && !request.hasDatasetBlob()) {throw new ModelDBException(""Not supported"", io.grpc.Status.Code.UNIMPLEMENTED);}datasetVersionBuilder.setPathDatasetVersionInfo(request.getPathDatasetVersionInfo());if (request.hasDatasetBlob()) {datasetVersionBuilder.setDatasetBlob(request.getDatasetBlob());}return datasetVersionBuilder.build();}}"	1
4645	"public class A {public static String getRequestIpAddress(HttpServletRequest httpServletRequest) {String ret = """";try {InetAddress inetAddr = InetAddress.getByName(httpServletRequest.getRemoteAddr());ret = inetAddr.getHostAddress();} catch (UnknownHostException ex) {}return ret;}}"	1
4646	public class A {public synchronized void flush() throws IOException, InterruptedException {checkAndThrowInterruptedException();if (!isBatchComplete()) {doFlush();if (idleTimeout > 0) {if (idleFuture == null || idleFuture.cancel(false)) {Callable<Void> idleAction =new Callable<Void>() {public Void call() throws Exception {if (isOpen) {close(true);}return null;}};idleFuture = timedRollerPool.schedule(idleAction, idleTimeout, TimeUnit.SECONDS);}}}}}	1
4647	"public class A {@Testpublic void a_getHydratedExperimentRunByIdTest() {AddComment addCommentRequest =AddComment.newBuilder().setEntityId(experimentRun1.getId()).setMessage(""Hello, this project is interesting."" + Calendar.getInstance().getTimeInMillis()).build();AddComment.Response addCommentResponse =commentServiceBlockingStub.addExperimentRunComment(addCommentRequest);Comment comment1 = addCommentResponse.getComment();addCommentRequest =AddComment.newBuilder().setEntityId(experimentRun3.getId()).setMessage(""Hello, this project is interesting."" + Calendar.getInstance().getTimeInMillis()).build();commentServiceBlockingStub.addExperimentRunComment(addCommentRequest);if (config.hasAuth()) {AddCollaboratorRequest addCollaboratorRequest =addCollaboratorRequestProjectInterceptor(project1, CollaboratorTypeEnum.CollaboratorType.READ_WRITE, authClientInterceptor);collaboratorServiceStubClient1.addOrUpdateProjectCollaborator(addCollaboratorRequest);}GetHydratedExperimentRunById.Response getHydratedExperimentRunsResponse =hydratedServiceBlockingStub.getHydratedExperimentRunById(GetHydratedExperimentRunById.newBuilder().setId(experimentRun1.getId()).build());assertEquals(""ExperimentRun not match with expected ExperimentRun"",experimentRun1,getHydratedExperimentRunsResponse.getHydratedExperimentRun().getExperimentRun());assertEquals(""Experiment name not match with expected Experiment name"",experiment1.getName(),getHydratedExperimentRunsResponse.getHydratedExperimentRun().getExperiment().getName());if (config.hasAuth()) {assertEquals(""Hydrated comments not match with expected ExperimentRun comments"",Collections.singletonList(comment1),getHydratedExperimentRunsResponse.getHydratedExperimentRun().getCommentsList());}}}"	5
4648	"public class A {void requestMetadata() {boolean noSrvsInCluster;synchronized (this) {while (!aliveSrvNodes.isEmpty()) {ClusterNode srvNode = aliveSrvNodes.poll();try {if (log.isDebugEnabled())ioMgr.sendToGridTopic(srvNode,GridTopic.TOPIC_METADATA_REQ,new MetadataRequestMessage(typeId),GridIoPolicy.SYSTEM_POOL);if (discoMgr.node(srvNode.id()) == null) continue;pendingNode = srvNode;break;} catch (IgniteCheckedException ignored) {}}noSrvsInCluster = pendingNode == null;}if (noSrvsInCluster)onDone(MetadataUpdateResult.createFailureResult(new BinaryObjectException(""All server nodes have left grid, cannot request metadata [typeId: ""+ typeId+ ""]"")));}}"	2
4649	public class A {public void addTypeDef(String typeName, String typeClass, Properties paramMap) {TypeDef def = new TypeDef(typeClass, paramMap);typeDefs.put(typeName, def);}}	1
4650	public class A {private List<T> bootstrap() {List<T> rerunEvents = new ArrayList<T>();File[] files = serializeFilePath.listFiles();if (files != null) {for (File rerunFile : files) {BufferedReader reader = null;try {reader =new BufferedReader(new InputStreamReader(new FileInputStream(rerunFile), CharEncoding.UTF_8));String line;while ((line = reader.readLine()) != null) {T event = new RerunEventFactory<T>().getRerunEvent(rerunFile.getName(), line);rerunEvents.add(event);}} catch (Exception e) {} finally {IOUtils.closeQuietly(reader);}}}return rerunEvents;}}	1
4651	public class A {public void getAdministrativeStatus(final DeviceMessageMetadata deviceMessageMetadata,final AdministrativeStatusType administrativeStatusType)throws FunctionalException {final SmartMeter smartMeteringDevice =this.domainHelperService.findSmartMeter(deviceMessageMetadata.getDeviceIdentification());final RequestMessage requestMessage =new RequestMessage(deviceMessageMetadata.getCorrelationUid(),deviceMessageMetadata.getOrganisationIdentification(),deviceMessageMetadata.getDeviceIdentification(),smartMeteringDevice.getIpAddress(),this.configurationMapper.map(administrativeStatusType, AdministrativeStatusTypeDto.class));this.osgpCoreRequestMessageSender.send(requestMessage,deviceMessageMetadata.getMessageType(),deviceMessageMetadata.getMessagePriority(),deviceMessageMetadata.getScheduleTime(),deviceMessageMetadata.bypassRetry());}}	1
4652	public class A {private static void handleShutdownException(Message msg, ServerConnection serverConnection, Exception e) {CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();boolean potentialModification = serverConnection.getPotentialModification();if (!crHelper.isShutdown()) {if (potentialModification) {int transId = msg != null ? msg.getTransactionId() : Integer.MIN_VALUE;} else {}}serverConnection.setFlagProcessMessagesAsFalse();serverConnection.setClientDisconnectedException(e);}}	2
4653	"public class A {private boolean newGroupId() {try {String cId = null;if (client.getGroupId() != null) {cId =Scripting.replaceVariables(new ActionContext(SecurityContext.getSuperUserInstance()),null,client.getGroupId(),false,""groupId"");} else {cId = client.getGroupId();}return !currentGroupId.equals(cId);} catch (FrameworkException ex) {return false;}}}"	1
4654	public class A {public void removeByHandle(String handle) {storageLock.lock();try {if (allHandles.remove(handle)) {storage.remove(ACCESS_TOKEN_RESPONSE.getKey(handle));storage.remove(LAST_USED.getKey(handle));storage.remove(SERVICE_CONFIGURATION.getKey(handle));storage.put(STORE_KEY_INDEX_OF_HANDLES, gson.toJson(allHandles));}} finally {storageLock.unlock();}}}	1
4655	"public class A {@Overridevoid reportInternal(ReportPoint point) {if (DeltaCounter.isDelta(point.getMetric())) {try {validatePoint(point, validationConfig);} catch (DeltaCounterValueException e) {discardedCounterSupplier.get().inc();return;}getReceivedCounter().inc();double deltaValue = (double) point.getValue();receivedPointLag.update(Clock.now() - point.getTimestamp());HostMetricTagsPair hostMetricTagsPair =new HostMetricTagsPair(point.getHost(), point.getMetric(), point.getAnnotations());Objects.requireNonNull(aggregatedDeltas.get(hostMetricTagsPair, key -> new AtomicDouble(0))).getAndAdd(deltaValue);if (validItemsLogger != null && validItemsLogger.isLoggable(Level.FINEST)) {}} else {reject(point, ""Port is not configured to accept non-delta counter data!"");}}}"	1
4656	public class A {public SpringCamelContext getCamelContext() {synchronized (this) {if (camelContext == null) {camelContext =ApplicationContextProvider.getBeanFactory().getBean(SpringCamelContext.class);camelContext.addRoutePolicyFactory(new MetricsRoutePolicyFactory());}if (camelContext.getRoutes().isEmpty()) {List<CamelRoute> routes = routeDAO.findAll();loadRouteDefinitions(routes.stream().map(CamelRoute::getContent).collect(Collectors.toList()));}}return camelContext;}}	1
4657	public class A {public synchronized void release() {if (semaphore.availablePermits() >= getTotalSize()) {return;}semaphore.release();}}	2
4658	public class A {@Overridepublic DSLQueryEntry findByPrimaryKey(Serializable primaryKey)throws NoSuchDSLQueryEntryException {DSLQueryEntry dslQueryEntry = fetchByPrimaryKey(primaryKey);if (dslQueryEntry == null) {if (_log.isDebugEnabled()) {}throw new NoSuchDSLQueryEntryException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return dslQueryEntry;}}	1
4659	"public class A {private synchronized Component getBrokerComponent(URI brokerURI, MessagingType type) {ActiveMQConnectionFactory activeMQConnectionFactory =new ActiveMQConnectionFactory(brokerURI + ""?jms.prefetchPolicy.all=1&jms.useAsyncSend=true"");return getBrokerComponent(type, activeMQConnectionFactory);}}"	1
4660	public class A {@Overridepublic synchronized void purgeHeartbeats() {heartbeatMessages.clear();}}	1
4661	"public class A {@Overridepublic void execute() {try {if (dynamicPropertyType == null) {throw new MissingArgumentException(""Property type not set."");}values = getDaoFactory().getDAO(Property.class).findByCriteria(getCriteria());} catch (Exception ex) {throw new RuntimeException(ex);}}}"	1
4662	"public class A {CountDownLatch pause() {final CountDownLatch latch = new CountDownLatch(1);appendControlEvent(""pause"",() -> {try {latch.await();} catch (InterruptedException e) {}});return latch;}}"	1
4663	public class A {private boolean loadSampleAltSJsToArray(final String sampleId) {final String filename = AltSpliceJunctionFile.generateFilename(mConfig.SampleDataDir, sampleId);mSampleFragCounts.initialise(0);final double[][] sampleFragCounts = mSampleFragCounts.getData();if (!Files.exists(Paths.get(filename))) return false;try {final List<String> lines = Files.readAllLines(Paths.get(filename));final Map<String, Integer> fieldsIndexMap = createFieldsIndexMap(lines.get(0), DATA_DELIM);lines.remove(0);int chrIndex = fieldsIndexMap.get(FLD_CHROMOSOME);int posStartIndex = fieldsIndexMap.get(FLD_ALT_SJ_POS_START);int posEndIndex = fieldsIndexMap.get(FLD_ALT_SJ_POS_END);int fragCountIndex = fieldsIndexMap.get(FLD_ALT_SJ_FRAG_COUNT);int matchedRefAltSJs = 0;for (String data : lines) {final String items[] = data.split(DATA_DELIM, -1);String chromosome = items[chrIndex];int posStart = Integer.parseInt(items[posStartIndex]);int posEnd = Integer.parseInt(items[posEndIndex]);final String asjKey = formKey(chromosome, posStart, posEnd);Integer matrixIndex = mRefAsjIndexMap.get(asjKey);if (matrixIndex == null) continue;int fragCount = Integer.parseInt(items[fragCountIndex]);++matchedRefAltSJs;sampleFragCounts[0][matrixIndex] = convertFragCount(fragCount);}return matchedRefAltSJs > 0;} catch (IOException e) {return false;}}}	2
4664	public class A {protected Queue<Exchange> createExchanges(Message[] messages) {Queue<Exchange> answer = new LinkedList<>();for (Message message : messages) {Exchange exchange = createExchange(message);answer.add(exchange);}return answer;}}	1
4665	public class A {@Overridepublic DelegationTokenIssuer[] getAdditionalTokenIssuers() throws IOException {KeyProvider keyProvider;try {keyProvider = getKeyProvider();} catch (IOException ioe) {return null;}if (keyProvider instanceof DelegationTokenIssuer) {return new DelegationTokenIssuer[] {(DelegationTokenIssuer) keyProvider};}return null;}}	1
4666	public class A {private void processActivities(String orcid,List<? extends Activity> activities,Map<String, S3ObjectSummary> existingElements,ActivityType type) {try {for (Activity x : activities) {String putCodeString = String.valueOf(x.getPutCode());Activity activity = null;if (existingElements.containsKey(putCodeString)) {S3ObjectSummary existingObject = existingElements.get(putCodeString);Date elementLastModified = DateUtils.convertToDate(x.getLastModifiedDate().getValue());Date s3LastModified = existingObject.getLastModified();if (elementLastModified.after(s3LastModified)) {activity = fetchActivity(orcid, x.getPutCode(), type);}existingElements.remove(putCodeString);} else {activity = fetchActivity(orcid, x.getPutCode(), type);}if (activity != null) {s3Manager.uploadActivity(orcid, putCodeString, activity);existingElements.remove(putCodeString);}}for (String putCode : existingElements.keySet()) {s3Manager.removeActivity(orcid, putCode, type);}activitiesStatusManager.markAsSent(orcid, type);} catch (Exception e) {activitiesStatusManager.markAsFailed(orcid, type);throw new RuntimeException(e);}}}	1
4667	"public class A {@Overridepublic void sendNotification(Check check, Subscription subscription, List<Alert> alerts)throws NotificationFailedException {String pushoverAppApiToken = StringUtils.trimToNull(seyrenConfig.getPushoverAppApiToken());String pushoverUserKey = StringUtils.trimToNull(subscription.getTarget());String pushoverMsgTitle = formatMsgTitle(check);String pushoverMsgBody =""Check details : "" + seyrenConfig.getBaseUrl() + ""/#/checks/"" + check.getId();String pushoverMsgPriority = getMsgPriority(check);if (pushoverAppApiToken == null) {return;}if (pushoverUserKey == null || pushoverUserKey.length() != 30) {return;}HttpClient client = HttpClientBuilder.create().useSystemProperties().build();HttpPost post = new HttpPost(""https://api.pushover.net/1/messages.json"");try {List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(1);nameValuePairs.add(new BasicNameValuePair(""token"", pushoverAppApiToken));nameValuePairs.add(new BasicNameValuePair(""user"", pushoverUserKey));nameValuePairs.add(new BasicNameValuePair(""title"", pushoverMsgTitle));nameValuePairs.add(new BasicNameValuePair(""message"", pushoverMsgBody));nameValuePairs.add(new BasicNameValuePair(""priority"", pushoverMsgPriority));post.setEntity(new UrlEncodedFormEntity(nameValuePairs));client.execute(post);} catch (IOException e) {throw new NotificationFailedException(""Sending notification to Pushover failed."", e);} finally {HttpClientUtils.closeQuietly(client);}}}"	2
4668	"public class A {@Testpublic void restartPaxLoggingApi()throws BundleException, InterruptedException, NoSuchMethodException,InvocationTargetException, IllegalAccessException, ClassNotFoundException {Logger log = LoggerFactory.getLogger(this.getClass());ServiceReference<?> ref = context.getServiceReference(LogService.class);assertNotNull(ref);LogService osgiLog = (LogService) context.getService(ref);osgiLog.log(LogService.LOG_INFO, ""Before refreshing pax-logging-api"");refreshPaxLoggingApi();Logger log1 = LoggerFactory.getLogger(this.getClass());osgiLog.log(LogService.LOG_INFO, ""After refreshing pax-logging-api"");try {context.getServiceReference(LogService.class);fail(""Should fail, because our context was also refreshed!"");} catch (IllegalStateException ignored) {}Bundle ourBundle = FrameworkUtil.getBundle(this.getClass());BundleContext newContext = ourBundle.getBundleContext();ref = newContext.getServiceReference(LogService.class.getName());assertNotNull(ref);Object service = newContext.getService(ref);Class<?> logServiceClass = ourBundle.loadClass(""org.osgi.service.log.LogService"");Method m = logServiceClass.getDeclaredMethod(""log"", Integer.TYPE, String.class);m.invoke(service, LogService.LOG_INFO, ""After refreshing pax-logging-log4j2 (log service new ref)"");Logger log2 = LoggerFactory.getLogger(this.getClass());Class<?> loggerFactoryClass = ourBundle.loadClass(""org.slf4j.LoggerFactory"");Class<?> loggerClass = ourBundle.loadClass(""org.slf4j.Logger"");Method getLoggerMethod = loggerFactoryClass.getDeclaredMethod(""getLogger"", Class.class);Method infoMethod = loggerClass.getDeclaredMethod(""info"", String.class);Object log3 = getLoggerMethod.invoke(null, this.getClass());infoMethod.invoke(log3, ""After refreshing pax-logging-api (log3)"");List<String> lines = readLines();List<String> lines2 = readLines(13);assertTrue(""line from DEFAULT_PATTERN"",lines2.contains(""[main] INFO  org.ops4j.pax.logging.it.Log4J2RefreshPaxLoggingApiIntegrationTest -""+ "" Before refreshing pax-logging-api""));assertTrue(""line from DEFAULT_PATTERN"",lines2.contains(""[main] INFO  PaxExam-Probe - Before refreshing pax-logging-api""));assertTrue(""Cascade refresh"",lines.stream().anyMatch(l ->l.contains(""org.ops4j.pax.logging.pax-logging-log4j2 [log4j2] INFO : Log4J2""+ "" configured using default configuration."")|| l.contains(""org.ops4j.pax.logging.pax-logging-api [log4j2] INFO : Log4J2""+ "" configured using default configuration."")));assertTrue(""default layout because old class"",lines.contains(""PaxExam-Probe [org.ops4j.pax.logging.it.Log4J2RefreshPaxLoggingApiIntegrationTest]""+ "" INFO : After refreshing pax-logging-api""));assertTrue(""default layout because old class"",lines.contains(""PaxExam-Probe [org.ops4j.pax.logging.it.Log4J2RefreshPaxLoggingApiIntegrationTest]""+ "" INFO : After refreshing pax-logging-api (log1)""));assertTrue(""new reference"",lines2.contains(""[main] INFO  PaxExam-Probe - After refreshing pax-logging-log4j2 (log service new""+ "" ref)""));assertTrue(""default layout because old class"",lines.contains(""PaxExam-Probe [org.ops4j.pax.logging.it.Log4J2RefreshPaxLoggingApiIntegrationTest]""+ "" INFO : After refreshing pax-logging-api (log2)""));assertTrue(""DEFAULT_PATTERN because new class"",lines2.contains(""[main] INFO  org.ops4j.pax.logging.it.Log4J2RefreshPaxLoggingApiIntegrationTest -""+ "" After refreshing pax-logging-api (log3)""));}}"	4
4669	public class A {@Overridepublic void run() {try {running = true;device.start();while (running && !Thread.interrupted()) {semaphore.acquire();semaphore.drainPermits();if (running) {device.restart();}}} catch (RuntimeException e) {portEventListener.handleErrorEvent(DSMRConnectorErrorEvent.READ_ERROR);} catch (InterruptedException e) {Thread.currentThread().interrupt();} finally {device.stop();}}}	3
4670	"public class A {private GeoEvent parseInfoResponseType(Element element, String identifier, String infoID) {GeoEvent msg;try {msg =geoEventCreator.create(((AdapterDefinition) definition).getGeoEventDefinition(""CAPInfoResponseType"").getGuid());try {msg.setField(0, identifier);} catch (Exception ex) {}try {msg.setField(1, infoID);} catch (Exception ex) {}NodeList nodeList;Element line;String strValue = """";String tagName = """";try {tagName = ""responseType"";strValue = getCharacterDataFromElement(element);msg.setField(2, strValue);} catch (Exception ex) {}} catch (MessagingException e) {return null;}return msg;}}"	3
4671	"public class A {private void performLogging(LogLevel logLevel, boolean isExceptionLogging, String format, Object... args) {String throwableMessage = """";if (doesArgsHaveThrowable(args)) {if (!isExceptionLogging) {Object throwable = args[args.length - 1];if (throwable instanceof Throwable) {throwableMessage = ((Throwable) throwable).getMessage();}}if (!logger.isDebugEnabled()) {args = removeThrowable(args);}}sanitizeLogMessageInput(format);switch (logLevel) {case VERBOSE:break;case INFORMATIONAL:break;case WARNING:if (!CoreUtils.isNullOrEmpty(throwableMessage)) {format += System.lineSeparator() + throwableMessage;}break;case ERROR:if (!CoreUtils.isNullOrEmpty(throwableMessage)) {format += System.lineSeparator() + throwableMessage;}break;default:break;}}}"	4
4672	"public class A {@Overridepublic PasswordPolicy findByC_N(long companyId, String name)throws NoSuchPasswordPolicyException {PasswordPolicy passwordPolicy = fetchByC_N(companyId, name);if (passwordPolicy == null) {StringBundler sb = new StringBundler(6);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""companyId="");sb.append(companyId);sb.append("", name="");sb.append(name);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchPasswordPolicyException(sb.toString());}return passwordPolicy;}}"	1
4673	"public class A {public static <T> T deserialize(String json, TypeReference<T> typeReference) {try {return getMapper().readValue(json, typeReference);} catch (IOException e) {throw new RuntimeException(""error de-serializing object"", e);}}}"	1
4674	"public class A {@SuppressWarnings({""unchecked"", ""rawtypes""})@Testpublic void testWithAppEnricher() throws Exception {Entity app =createAndStartApplication(loadYaml(""test-app-with-enrichers-slightly-simpler.yaml""));waitForApplicationTasks(app);Entities.dumpInfo(app);Entity cluster = Iterables.getOnlyElement(app.getChildren());Collection<Entity> leafs = ((DynamicCluster) cluster).getMembers();Iterator<Entity> li = leafs.iterator();Entity e1 = li.next();((EntityInternal) e1).sensors().set(Sensors.newStringSensor(""ip""), ""127.0.0.1"");EntityAsserts.assertAttributeEqualsEventually(e1, Sensors.newStringSensor(""url""), ""http://127.0.0.1/"");EntityAsserts.assertAttributeEqualsEventually(e1, Attributes.MAIN_URI, URI.create(""http://127.0.0.1/""));int i = 2;while (li.hasNext()) {Entity ei = li.next();((EntityInternal) ei).sensors().set(Sensors.newStringSensor(""ip""), ""127.0.0."" + i);i++;}EntityAsserts.assertAttributeEventually(cluster,Sensors.newSensor(Iterable.class, ""urls.list""),(Predicate) CollectionFunctionals.sizeEquals(3));EntityAsserts.assertAttributeEventually(cluster,Sensors.newSensor(String.class, ""urls.list.comma_separated.max_2""),StringPredicates.matchesRegex(""\""http:\\/\\/127[^\""]*\\/\"",\""http:\\/\\/127[^\""]*\\/\""""));EntityAsserts.assertAttributeEventually(cluster, Attributes.MAIN_URI, Predicates.notNull());URI main = cluster.getAttribute(Attributes.MAIN_URI);Assert.assertTrue(main.toString().matches(""http:\\/\\/127.0.0..\\/""), ""Wrong URI: "" + main);EntityAsserts.assertAttributeEventually(app, Attributes.MAIN_URI, Predicates.notNull());main = app.getAttribute(Attributes.MAIN_URI);Assert.assertTrue(main.toString().matches(""http:\\/\\/127.0.0..\\/""), ""Wrong URI: "" + main);}}"	1
4675	"public class A {public static void updateLatestStatus(String index, String type, String discoveryDate) {String indexName = ""/"" + index;String updateJson =""{\""script\"":{\""inline\"": \""ctx._source.latest=false\""},\""query\"": {\""bool\"": {\""must\"": [{""+ "" \""match\"": {\""latest\"":true}}], \""must_not\"": [{\""match\"":""+ "" {\""discoverydate.keyword\"":\""""+ discoveryDate+ ""\""}}]}}}"";try {invokeAPI(""POST"", indexName + ""/"" + type + ""/"" + ""_update_by_query"", updateJson);} catch (IOException e) {}}}"	1
4676	public class A {@Overridepublic boolean hasNext() {if (currentColumnIterator == null || (!currentColumnIterator.hasNext() && moreToReturn)) {advance();}if (currentColumnIterator != null&& !currentColumnIterator.hasNext()&& !moreToReturn&& currentShardIterator.hasNext()) {if (logger.isTraceEnabled()) {}currentShard = currentShardIterator.next();while (currentShard.isDeleted() && currentShardIterator.hasNext()) {if (logger.isTraceEnabled()) {}currentShard = currentShardIterator.next();}if (currentShard.isDeleted() && !currentShardIterator.hasNext()) {if (logger.isTraceEnabled()) {}return false;}if (logger.isTraceEnabled()) {}advance();}return currentColumnIterator.hasNext();}}	5
4677	"public class A {public static java.util.List<com.liferay.portal.kernel.model.Group> getUserSitesGroups(HttpPrincipal httpPrincipal, long userId, int start, int end)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(GroupServiceUtil.class, ""getUserSitesGroups"", _getUserSitesGroupsParameterTypes24);MethodHandler methodHandler = new MethodHandler(methodKey, userId, start, end);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<com.liferay.portal.kernel.model.Group>) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4678	public class A {private void syncPublish(Event event) {try {DataEndpoint endpoint = getDataEndpoint(true);if (endpoint != null) {endpoint.syncSend(event);} else {if (log.isDebugEnabled()) {}}} catch (Throwable t) {}}}	3
4679	public class A {protected void removeNodes() {if (nodesToRemove == null) return;IndexWriter writer = null;try {writer = index.getWriter();for (NodeId nodeId : nodesToRemove) {int nodeIdLen = nodeId.size();byte[] data = new byte[nodeIdLen + 4];ByteConversion.intToByteH(currentDoc.getDocId(), data, 0);nodeId.serialize(data, 4);Term it = new Term(FIELD_ID, new BytesRef(data));TermQuery iq = new TermQuery(it);writer.deleteDocuments(iq);}} catch (IOException e) {} finally {nodesToRemove = null;index.releaseWriter(writer);}}}	1
4680	"public class A {@Overridepublic List<String> readMessage(int expectedNumMessages, String groupId, String topic)throws IOException {final List<String> messages =Collections.synchronizedList(new ArrayList<>(expectedNumMessages));try (final AutoClosableProcess kafka =AutoClosableProcess.create(kafkaDir.resolve(Paths.get(""bin"", ""kafka-console-consumer.sh"")).toString(),""--bootstrap-server"",KAFKA_ADDRESS,""--from-beginning"",""--max-messages"",String.valueOf(expectedNumMessages),""--topic"",topic,""--consumer-property"",""group.id="" + groupId).setStdoutProcessor(messages::add).runNonBlocking()) {final Deadline deadline = Deadline.fromNow(Duration.ofSeconds(120));while (deadline.hasTimeLeft() && messages.size() < expectedNumMessages) {try {Thread.sleep(500);} catch (InterruptedException e) {Thread.currentThread().interrupt();break;}}if (messages.size() != expectedNumMessages) {throw new IOException(""Could not read expected number of messages."");}return messages;}}}"	1
4681	public class A {@Overridepublic void started() {}}	1
4682	"public class A {@Overridepublic Pair<SaslClientAuthenticationProvider, Token<? extends TokenIdentifier>> selectProvider(String clusterId, User user) {requireNonNull(clusterId, ""Null clusterId was given"");requireNonNull(user, ""Null user was given"");if (!User.isHBaseSecurityEnabled(conf)) {return new Pair<>(simpleAuth, null);}final Text clusterIdAsText = new Text(clusterId);for (Token<? extends TokenIdentifier> token : user.getTokens()) {if (clusterIdAsText.equals(token.getService())&& digestAuthTokenKind.equals(token.getKind())) {return new Pair<>(digestAuth, token);}}final UserGroupInformation currentUser = user.getUGI();final UserGroupInformation realUser = currentUser.getRealUser();if (currentUser.hasKerberosCredentials()|| (realUser != null && realUser.hasKerberosCredentials())) {return new Pair<>(krbAuth, null);}return null;}}"	1
4683	"public class A {@Overridepublic void updateTenantNameAtomic(String kp, String tenantId, String tenantName, String tenantDesc) {try {jt.update(""UPDATE tenant_info SET tenant_name = ?, tenant_desc = ?, gmt_modified= ? WHERE kp=? AND""+ "" tenant_id=?"",tenantName,tenantDesc,System.currentTimeMillis(),kp,tenantId);} catch (DataAccessException e) {throw e;}}}"	1
4684	public class A {public void dbOperationStore(XXRangerKeyStore rangerKeyStore) {if (logger.isDebugEnabled()) {}try {if (daoManager != null) {RangerKMSDao rangerKMSDao = new RangerKMSDao(daoManager);XXRangerKeyStore xxRangerKeyStore = rangerKMSDao.findByAlias(rangerKeyStore.getAlias());boolean keyStoreExists = true;if (xxRangerKeyStore == null) {xxRangerKeyStore = new XXRangerKeyStore();keyStoreExists = false;}xxRangerKeyStore = mapToEntityBean(rangerKeyStore, xxRangerKeyStore);if (keyStoreExists) {xxRangerKeyStore = rangerKMSDao.update(xxRangerKeyStore);} else {xxRangerKeyStore = rangerKMSDao.create(xxRangerKeyStore);}}} catch (Exception e) {}}}	2
4685	public class A {public boolean archiveIfRequired(HoodieEngineContext context) throws IOException {try {List<HoodieInstant> instantsToArchive = getInstantsToArchive().collect(Collectors.toList());boolean success = true;if (!instantsToArchive.isEmpty()) {this.writer = openWriter();archive(context, instantsToArchive);success = deleteArchivedInstants(instantsToArchive);} else {}return success;} finally {close();}}}	3
4686	public class A {@Overridepublic void remove(String key) {if (silentlyRemoveEntityIfExists(createDn(hashKey(key)))) {}}}	1
4687	public class A {private U completionIndex(Map.Entry<T, U> lookFor) {U ack = null;if (lookFor == null) {return ack;}if (hasTimeoutDurationReached(System.currentTimeMillis())) {return acknowledged(lookFor);}if (!processedSet.contains(lookFor.getKey())) {return ack;}return acknowledged(lookFor);}}	1
4688	"public class A {public static boolean addSessionId(final Principal principal, final String sessionId) {try {final PropertyKey<String[]> key = StructrApp.key(Principal.class, ""sessionIds"");final String[] ids = principal.getProperty(key);if (ids != null) {if (!ArrayUtils.contains(ids, sessionId)) {if (Settings.MaxSessionsPerUser.getValue() > 0&& ids.length >= Settings.MaxSessionsPerUser.getValue()) {final Logger logger = LoggerFactory.getLogger(Principal.class);final String errorMessage =""Not adding session id, limit ""+ Settings.MaxSessionsPerUser.getKey()+ "" exceeded."";return false;}principal.setProperty(key, (String[]) ArrayUtils.add(principal.getProperty(key), sessionId));}} else {principal.setProperty(key, new String[] {sessionId});}return true;} catch (FrameworkException ex) {final Logger logger = LoggerFactory.getLogger(Principal.class);return false;}}}"	2
4689	public class A {@BeforeMethod(alwaysRun = true)public void setUp() throws Exception {app = TestApplication.Factory.newManagedInstanceForTests();cluster =app.createAndManageChild(EntitySpec.create(TestCluster.class).configure(TestCluster.INITIAL_SIZE, 1));resizable = new LocallyResizableEntity(cluster, cluster);Entities.manage(resizable);PolicySpec<AutoScalerPolicy> policySpec =PolicySpec.create(AutoScalerPolicy.class).configure(AutoScalerPolicy.RESIZE_OPERATOR,new ResizeOperator() {@Overridepublic Integer resize(Entity entity, Integer desiredSize) {policyResizes.add(desiredSize);return ((Resizable) entity).resize(desiredSize);}});policy = resizable.policies().add(policySpec);policyResizes.clear();}}	2
4690	"public class A {private Future<Message> processGetByCaRequest(final Message request, final String subjectDn, final Span span) {try {final X500Principal dn = new X500Principal(subjectDn);return getService().get(dn, span).map(tr -> {String tenantId = null;if (tr.isOk() && tr.getPayload() != null) {tenantId =getTypesafeValueForField(String.class, tr.getPayload(), TenantConstants.FIELD_PAYLOAD_TENANT_ID);TracingHelper.TAG_TENANT_ID.set(span, tenantId);}return TenantConstants.getAmqpReply(TenantConstants.TENANT_ENDPOINT, tenantId, request, tr);});} catch (final IllegalArgumentException e) {TracingHelper.logError(span, ""illegal subject DN provided by client: "" + subjectDn);return Future.failedFuture(new ClientErrorException(HttpURLConnection.HTTP_BAD_REQUEST));}}}"	2
4691	"public class A {@Transactional(rollbackFor = {Exception.class})@Overridepublic void createNamespace(NamespaceDomainInfo namespaceDomainInfo)throws SaturnJobConsoleException {String namespace = namespaceDomainInfo.getNamespace();String zkClusterKey = namespaceDomainInfo.getZkCluster();ZkCluster currentCluster = getZkCluster(zkClusterKey);if (currentCluster == null) {throw new SaturnJobConsoleHttpException(HttpStatus.BAD_REQUEST.value(),String.format(ERR_MSG_TEMPLATE_FAIL_TO_CREATE, namespace, ""not found zkcluster"" + zkClusterKey));}if (checkNamespaceExists(namespace)) {throw new SaturnJobConsoleHttpException(HttpStatus.BAD_REQUEST.value(), String.format(ERR_MSG_NS_ALREADY_EXIST, namespace));}try {NamespaceInfo namespaceInfo = constructNamespaceInfo(namespaceDomainInfo);namespaceInfoService.create(namespaceInfo);namespaceZkClusterMapping4SqlService.insert(namespace, """", zkClusterKey, NAMESPACE_CREATOR_NAME);notifyRefreshRegCenter();} catch (Exception e) {throw new SaturnJobConsoleHttpException(HttpStatus.INTERNAL_SERVER_ERROR.value(),String.format(ERR_MSG_TEMPLATE_FAIL_TO_CREATE, namespace, e.getMessage()));}}}"	1
4692	"public class A {public static String getCityInfo(String ip) {if (StringUtils.isEmpty(dbPath)) {return null;}if (config == null || searcher == null) {return null;}int algorithm = DbSearcher.BTREE_ALGORITHM;try {DbConfig config = new DbConfig();DbSearcher searcher = new DbSearcher(config, dbPath);Method method = null;switch (algorithm) {case DbSearcher.BTREE_ALGORITHM:method = searcher.getClass().getMethod(""btreeSearch"", String.class);break;case DbSearcher.BINARY_ALGORITHM:method = searcher.getClass().getMethod(""binarySearch"", String.class);break;case DbSearcher.MEMORY_ALGORITYM:method = searcher.getClass().getMethod(""memorySearch"", String.class);break;default:}DataBlock dataBlock = null;if (Util.isIpAddress(ip) == false) {System.out.println(""Error: Invalid ip address"");}dataBlock = (DataBlock) method.invoke(searcher, ip);String ipInfo = dataBlock.getRegion();if (!StringUtils.isEmpty(ipInfo)) {ipInfo = ipInfo.replace(""|0"", """");ipInfo = ipInfo.replace(""0|"", """");}return ipInfo;} catch (Exception e) {e.printStackTrace();}return null;}}"	2
4693	"public class A {@Overridepublic String enforcePasswordChange(Integer userId, String email) {logger.entry(""begin enforcePasswordChange()"");Session session = null;String message = FdahpStudyDesignerConstants.FAILURE;try {List<String> SAEmailIdList = getSuperAdminList();session = hibernateTemplate.getSessionFactory().openSession();transaction = session.beginTransaction();if ((userId != null) && StringUtils.isNotEmpty(email)) {int count =session.createSQLQuery(""Update users set force_logout='Y', credentialsNonExpired=false WHERE user_id""+ "" =:userId"").setParameter(""userId"", userId).executeUpdate();if (count > 0) {session.createSQLQuery(""update user_attempts set attempts = 0 WHERE email_id =:email"").setParameter(""email"", email).executeUpdate();message = FdahpStudyDesignerConstants.SUCCESS;}} else {int count =session.createSQLQuery(""Update users set force_logout='Y' WHERE status=true AND email NOT""+ "" IN(:emailIds)"").setParameterList(""emailIds"", SAEmailIdList).executeUpdate();if (count > 0) {int result =session.createSQLQuery(""Update users set credentialsNonExpired=false WHERE email NOT IN(:emailIds)"").setParameterList(""emailIds"", SAEmailIdList).executeUpdate();if (result > 0) {session.createSQLQuery(""update user_attempts set attempts = 0 WHERE email_id NOT IN(:emailIds)"").setParameterList(""emailIds"", SAEmailIdList).executeUpdate();message = FdahpStudyDesignerConstants.SUCCESS;}}}transaction.commit();} catch (Exception e) {if (transaction != null) {transaction.rollback();}} finally {if ((session != null) && session.isOpen()) {session.close();}}logger.exit(""enforcePasswordChange() - Ends"");return message;}}"	1
4694	public class A {@Afterpublic void removeEntities() {for (String projectId : projectMap.keySet()) {DeleteProject deleteProject = DeleteProject.newBuilder().setId(projectId).build();DeleteProject.Response deleteProjectResponse =projectServiceStub.deleteProject(deleteProject);assertTrue(deleteProjectResponse.getStatus());}projectMap = new HashMap<>();experimentMap = new HashMap<>();experimentRunMap = new HashMap<>();}}	2
4695	"public class A {protected void run() {SpringBusFactory bf = new SpringBusFactory();Bus bus = bf.createBus(""org/apache/cxf/systest/ws/policy/http-addr-server.xml"");setBus(bus);GreeterImpl implementor = new GreeterImpl();implementor.setThrowAlways(true);Endpoint.publish(""http://localhost:"" + PORT + ""/SoapContext/GreeterPort"", implementor);LoggingInInterceptor in = new LoggingInInterceptor();LoggingOutInterceptor out = new LoggingOutInterceptor();bus.getInInterceptors().add(in);bus.getOutInterceptors().add(out);bus.getOutFaultInterceptors().add(out);}}"	1
4696	"public class A {public static void processConfigFiles(String configType, String coreID) {try {String coreURL =MCRSolrClientFactory.get(coreID).orElseThrow(() -> MCRSolrUtils.getCoreConfigMissingException(coreID)).getV1CoreURL();List<String> observedTypes = getObserverConfigTypes();JsonObject currentSolrConfig = retrieveCurrentSolrConfig(coreURL);List<byte[]> configFileContents =MCRConfigurationInputStream.getConfigFileContents(""solr/"" + configType + ""/"" + SOLR_CONFIG_UPDATE_FILE_NAME);for (byte[] configFileData : configFileContents) {String content = new String(configFileData, StandardCharsets.UTF_8);JsonElement json = JsonParser.parseString(content);if (!json.isJsonArray()) {JsonElement e = json;json = new JsonArray();json.getAsJsonArray().add(e);}for (JsonElement command : json.getAsJsonArray()) {processConfigCommand(coreURL, command, currentSolrConfig, observedTypes);}}} catch (IOException e) {}}}"	3
4697	public class A {public JMeterArgumentsArray setLogRootOverride(String requestedLogLevel) {if (isNotSet(requestedLogLevel)) {return this;}for (LogLevel logLevel : LogLevel.values()) {if (logLevel.toString().equalsIgnoreCase(requestedLogLevel)) {overrideRootLogLevel = logLevel;argumentList.add(LOGLEVEL);return this;}}return this;}}	1
4698	"public class A {@Overridepublic synchronized byte[] sendCommand(byte[] command, int timeout)throws KuraException, IOException {checkIfClosed();if (command == null) {throw new NullPointerException(""Serial command must not be null"");}if (this.outputStream == null) {openOutputStream();}if (this.inputStream == null) {openInputStream();}byte[] dataInBuffer = flushSerialBuffer();if (dataInBuffer != null && dataInBuffer.length > 0) {}this.outputStream.write(command, 0, command.length);this.outputStream.flush();ByteBuffer buffer = getResponse(timeout);if (buffer != null) {byte[] response = new byte[buffer.limit()];buffer.get(response, 0, response.length);return response;} else {return null;}}}"	2
4699	"public class A {private void updateResOperStatus(ResourceOperationStatus resourceOperationStatus)throws RouteException {String requestsdbEndPoint = env.getProperty(""mso.adapters.openecomp.db.endpoint"");HttpPost httpPost = new HttpPost(requestsdbEndPoint);httpPost.addHeader(""Authorization"", ""Basic YnBlbDpwYXNzd29yZDEk"");httpPost.addHeader(""Content-type"", ""application/soap+xml"");String postBody = getPostStringBody(resourceOperationStatus);httpPost.setEntity(new StringEntity(postBody, ContentType.APPLICATION_XML));httpPost(requestsdbEndPoint, httpPost);}}"	2
4700	public class A {private void initGraph(Integer orgId) {try {IGraphElementLoader loader1 = new GraphElementLoader();loader1.setTypeIds(typeIds);loader1.setScopeId(orgId);loader1.setElementFilter(new TopElementFilter(orgId));IGraphElementLoader loader2 = new GraphElementLoader();loader2.setTypeIds(new String[] {PersonIso.TYPE_ID});List<IGraphElementLoader> loaders = new ArrayList<>(2);loaders.add(loader1);loaders.add(loader2);graph = getGraphService().create(loaders, relationIds);} catch (Exception e) {}}}	1
4701	public class A {private void updateContent(Set<Metacard> metacards, Map<String, Serializable> properties)throws InterruptedException {List<Metacard> metacardUpdates = new ArrayList<>();List<ContentItem> contentUpdates = new ArrayList<>();for (Metacard mcard : metacards) {if (shouldGenerateContentItems(mcard, properties)) {generateImages(mcard, metacardUpdates, contentUpdates);}}Map<String, Serializable> reprocessProperties = new HashMap<>();reprocessProperties.put(NITF_PROCESSING_KEY, true);if (!contentUpdates.isEmpty()) {UpdateStorageRequest updateStorageRequest =new UpdateStorageRequestImpl(contentUpdates, reprocessProperties);try {catalogFramework.update(updateStorageRequest);} catch (IngestException | SourceUnavailableException e) {}}if (!metacardUpdates.isEmpty()) {UpdateRequest updateRequest =new UpdateRequestImpl(metacardUpdates.stream().map(mcard ->new AbstractMap.SimpleEntry<Serializable, Metacard>(mcard.getId(), mcard)).collect(Collectors.toList()),Core.ID,reprocessProperties);try {catalogFramework.update(updateRequest);} catch (IngestException | SourceUnavailableException e) {}}}}	2
4702	"public class A {public List<Attribute> setupResources(Map<URI, AttributeValue> res, RelationshipResolver relationshipResolver)throws MelcoeXacmlException {if (res == null || res.size() == 0) {return new ArrayList<Attribute>();}List<Attribute> attributes = new ArrayList<Attribute>(res.size());try {String pid = null;AttributeValue pidAttr = res.get(Constants.XACML1_RESOURCE.ID.attributeId);if (pidAttr != null) {pid = pidAttr.encode();pid = relationshipResolver.buildRESTParentHierarchy(pid);String dsid = null;AttributeValue dsidAttr = res.get(Constants.DATASTREAM.ID.attributeId);if (dsidAttr != null) {dsid = dsidAttr.encode();if (!dsid.isEmpty()) {pid += ""/"" + dsid;}}res.put(Constants.XACML1_RESOURCE.ID.attributeId, new AnyURIAttribute(new URI(pid)));}} catch (Exception e) {throw new MelcoeXacmlException(""Error finding parents."", e);}for (URI uri : res.keySet()) {attributes.add(new SingletonAttribute(uri, null, null, res.get(uri)));}return attributes;}}"	1
4703	public class A {public boolean useProgram(GL gl) {if (gl.glIsProgram(oglProgramId)) {gl.glUseProgram(oglProgramId);return true;}return false;}}	1
4704	"public class A {@Overridepublic void fireAfterListener(T prev, K evt, T curr, Object... args) {_listenersTmp.clear();synchronized (_listeners) {_listenersTmp.addAll(_listeners);}for (StateMachineListener<T, K> l : _listenersTmp) {try {l.after(prev, evt, curr, args);} catch (Exception e) {StringBuilder err =new StringBuilder(""Unhandled exception while calling listener: "" + l.getClass().getCanonicalName());err.append("" after state changing."").append(""["").append(""previous state:"" + prev).append("" event: "" + evt);err.append("" current state: "" + curr).append(""]"");}}}}"	1
4705	public class A {@NonNullprotected <JavaTypeT> TypeCodec<JavaTypeT> codecFor(@NonNull DataType cqlType,@NonNull GenericType<JavaTypeT> javaType,boolean isJavaCovariant) {TypeCodec<?> primitiveCodec = primitiveCodecsByCode.get(cqlType.getProtocolCode());if (primitiveCodec != null && matches(primitiveCodec, javaType, isJavaCovariant)) {return uncheckedCast(primitiveCodec);}for (TypeCodec<?> userCodec : userCodecs) {if (userCodec.accepts(cqlType) && matches(userCodec, javaType, isJavaCovariant)) {return uncheckedCast(userCodec);}}return uncheckedCast(getCachedCodec(cqlType, javaType, isJavaCovariant));}}	3
4706	public class A {public void attachDirty(MsUnjTxt instance) {try {sessionFactory.getCurrentSession().saveOrUpdate(instance);} catch (RuntimeException re) {throw re;}}}	3
4707	public class A {public Collection<EzspNetworkFoundHandler> doActiveScan(int channelMask, int scanDuration) {EzspStartScanRequest activeScan = new EzspStartScanRequest();activeScan.setChannelMask(channelMask);activeScan.setDuration(scanDuration);activeScan.setScanType(EzspNetworkScanType.EZSP_ACTIVE_SCAN);Set<Class<?>> relatedResponses =new HashSet<Class<?>>(Arrays.asList(EzspStartScanResponse.class, EzspNetworkFoundHandler.class));EzspTransaction transaction =protocolHandler.sendEzspTransaction(new EzspMultiResponseTransaction(activeScan, EzspScanCompleteHandler.class, relatedResponses));if (transaction.getResponse() instanceof EzspScanCompleteHandler) {EzspScanCompleteHandler activeScanCompleteResponse =(EzspScanCompleteHandler) transaction.getResponse();if (activeScanCompleteResponse.getStatus() != EmberStatus.EMBER_SUCCESS) {lastStatus = activeScanCompleteResponse.getStatus();return null;}} else {return null;}Map<ExtendedPanId, EzspNetworkFoundHandler> networksFound = new HashMap<>();for (EzspFrameResponse response : transaction.getResponses()) {if (response instanceof EzspNetworkFoundHandler) {EzspNetworkFoundHandler network = (EzspNetworkFoundHandler) response;networksFound.put(network.getNetworkFound().getExtendedPanId(), network);}}return networksFound.values();}}	3
4708	public class A {public static <O> FutureCallback<O> createFailureLoggingCallback(final String failMessage) {return new FutureCallback<O>() {@Overridepublic void onSuccess(@Nullable final O result) {}@Overridepublic void onFailure(final Throwable t) {}};}}	1
4709	"public class A {private void processInstitutions(JsonNode institutions,Map<Integer, List<JsonNode>> altNamesMap,Map<Integer, List<JsonNode>> identifiersMap,Map<Integer, JsonNode> dnNameMap) {institutions.forEach(institution -> {Integer ringgoldId = institution.get(""ringgold_id"").asInt();OrgDisambiguatedEntity entity = processInstitution(institution, dnNameMap);generateExternalIdentifiers(entity, identifiersMap.get(ringgoldId));if (altNamesMap.containsKey(ringgoldId)) {generateOrganizations(entity, altNamesMap.get(ringgoldId));}});}}"	1
4710	public class A {public UserDto login(final InternalHttpContext context, final LoginRequestDto loginRequest) {final HttpEntity<LoginRequestDto> request =new HttpEntity<>(loginRequest, buildHeaders(context));final ResponseEntity<UserDto> response =restTemplate.exchange(getUrl() + RestApi.CAS_LOGIN_PATH, HttpMethod.POST, request, UserDto.class);checkResponse(response);return response.getBody();}}	1
4711	public class A {public void run() {try {bean.generateSourceCode(target, resolver);URI uri = bean.getURI();String pkg = resolver.getPackageName(uri);String className = resolver.getSimpleName(uri);if (pkg != null) {className = pkg + '.' + className;}boolean anon = resolver.isAnonymous(uri) && bean.isEmpty(resolver);synchronized (content) {content.add(className);if (!anon) {concepts.add(className);}}} catch (Exception exc) {if (exception == null) {exception = exc;}}}}	2
4712	"public class A {@TaskActionvoid publishStubsToScm() {String projectName =getProject().getGroup().toString()+ "":""+ getProject().getName()+ "":""+ getProject().getVersion().toString();StubRunnerOptions stubRunnerOptions = createStubRunnerOptions();new ContractProjectUpdater(stubRunnerOptions).updateContractProject(projectName, stubsDir.get().getAsFile().toPath());}}"	1
4713	"public class A {List<Interpreter> createInterpreters(String user, String interpreterGroupId, String sessionId) {List<Interpreter> interpreters = new ArrayList<>();List<InterpreterInfo> interpreterInfos = getInterpreterInfos();Properties intpProperties = getJavaProperties();for (InterpreterInfo info : interpreterInfos) {Interpreter interpreter =new RemoteInterpreter(intpProperties, sessionId, info.getClassName(), user);if (info.isDefaultInterpreter()) {interpreters.add(0, interpreter);} else {interpreters.add(interpreter);}}if (group.equals(""livy"")) {interpreters.add(new SessionConfInterpreter(intpProperties, sessionId, interpreterGroupId, this));} else {interpreters.add(new ConfInterpreter(intpProperties, sessionId, interpreterGroupId, this));}return interpreters;}}"	1
4714	public class A {private static void testPerformance() {SecureRandom RNG = new SecureRandom();int NCOUNT = 10000000;long[] a_arr = new long[NCOUNT];long[] b_arr = new long[NCOUNT];Uint128[] a128_arr = new Uint128[NCOUNT];Uint128[] b128_arr = new Uint128[NCOUNT];for (int i = 0; i < NCOUNT; i++) {a_arr[i] = RNG.nextLong();b_arr[i] = RNG.nextLong();a128_arr[i] = new Uint128(a_arr[i], RNG.nextLong());b128_arr[i] = new Uint128(b_arr[i], RNG.nextLong());}long t0 = System.currentTimeMillis();for (int i = 0; i < NCOUNT; i++) {a128_arr[i].add_v1(b128_arr[i]);}long t1 = System.currentTimeMillis();t0 = System.currentTimeMillis();for (int i = 0; i < NCOUNT; i++) {a128_arr[i].add(b128_arr[i]);}t1 = System.currentTimeMillis();t0 = System.currentTimeMillis();for (int i = 0; i < NCOUNT; i++) {mul64_v1(a_arr[i], b_arr[i]);}t1 = System.currentTimeMillis();t0 = System.currentTimeMillis();for (int i = 0; i < NCOUNT; i++) {mul64(a_arr[i], b_arr[i]);}t1 = System.currentTimeMillis();}}	4
4715	"public class A {private Command executeCommandWithRetries(String command)throws TransportException, ConnectionException {int currentRetryCount = 0;Command cmd = null;while (true) {cmd = executeCommand(command);if (cmd == null) {if (currentRetryCount >= SSH_MAX_RETRY_COUNT) {throw new RuntimeException(""Retry limit exceeded when trying to execute ssh command."");}++currentRetryCount;try {Thread.sleep(1000 * SSH_RETRY_COOLDOWN_IN_SEC);} catch (InterruptedException e1) {throw new RuntimeException(e1);}continue;}break;}return cmd;}}"	1
4716	public class A {public Long getCallTimeout() {if (logger.isTraceEnabled()) {}return raProperties.getCallTimeout();}}	1
4717	public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;getAppModuleDeployedResources_result result = new getAppModuleDeployedResources_result();if (e instanceof org.apache.airavata.model.error.InvalidRequestException) {result.ire = (org.apache.airavata.model.error.InvalidRequestException) e;result.setIreIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataClientException) {result.ace = (org.apache.airavata.model.error.AiravataClientException) e;result.setAceIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataSystemException) {result.ase = (org.apache.airavata.model.error.AiravataSystemException) e;result.setAseIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AuthorizationException) {result.ae = (org.apache.airavata.model.error.AuthorizationException) e;result.setAeIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}}	4
4718	"public class A {@RequestMapping(value = ""/skipTask.action"", method = RequestMethod.GET)@ResponseBodypublic Map<String, Object> skipTask(@RequestParam Integer id) throws Exception {try {String userName = getAuthenticatedUserName();String sVar = taggerService.skipTask(id, userName);return getUIWrapper(sVar, true);} catch (AidrException e) {return getUIWrapper(e.getMessage(), false);}}}"	1
4719	public class A {public List<MediaFile> getSharedFiles(int id, List<MusicFolder> musicFolders) {List<MediaFile> result = new ArrayList<>();for (String path : shareDao.getSharedFiles(id, musicFolders)) {try {MediaFile mediaFile = mediaFileService.getMediaFile(path);if (mediaFile != null) {result.add(mediaFile);}} catch (SecurityException e) {if (LOG.isErrorEnabled()) {}}}return result;}}	1
4720	public class A {private void prepareServerNameListLength(ServerNameIndicationExtensionMessage msg) {msg.setServerNameListLength(msg.getServerNameListBytes().getValue().length);}}	1
4721	public class A {@LifecycleStartpublic void start() throws IOException {synchronized (startStopLock) {if (started) {return;}try {if (!config.getLocations().isEmpty()) {loadLocalCache();}if (shouldAnnounce()) {serverAnnouncer.announce();}} catch (Exception e) {Throwables.propagateIfPossible(e, IOException.class);throw new RuntimeException(e);}started = true;}}}	2
4722	public class A {public static com.liferay.commerce.currency.model.CommerceCurrencySoap getCommerceCurrency(long commerceCurrencyId) throws RemoteException {try {com.liferay.commerce.currency.model.CommerceCurrency returnValue =CommerceCurrencyServiceUtil.getCommerceCurrency(commerceCurrencyId);return com.liferay.commerce.currency.model.CommerceCurrencySoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4723	public class A {public Local<C> random(int n) {C r = ring.random(n);C s = ring.random(n);s = s.remainder(ideal);while (s.isZERO()) {s = ring.random(n);s = s.remainder(ideal);}return new Local<C>(this, r, s, false);}}	1
4724	public class A {@Overridepublic void call(StratioStreamingMessage message) throws Exception {try {boolean defaultResponse = false;if (getStartOperationCommand() != null&& getStartOperationCommand().equalsIgnoreCase(message.getOperation())) {if (validOperation(message, startValidators)) {defaultResponse = startAction(message);}} else if (getStopOperationCommand() != null&& getStopOperationCommand().equalsIgnoreCase(message.getOperation())) {if (validOperation(message, stopValidators)) {defaultResponse = stopAction(message);}}if (defaultResponse) {ackStreamingOperation(message, new ActionCallbackDto(ReplyCode.OK.getCode()));}} catch (RequestValidationException e) {ackStreamingOperation(message, new ActionCallbackDto(e.getCode(), e.getMessage()));} catch (Exception e) {ackStreamingOperation(message, new ActionCallbackDto(ReplyCode.KO_GENERAL_ERROR.getCode(), e.getMessage()));}}}	2
4725	"public class A {@Testpublic void callSetAttributeWithExceptionFromSetter() {try {testInterfaceProxy.setAttributeWithExceptionFromSetter(false);fail(name.getMethodName() + "" - FAILED - got no result"");return;} catch (ProviderRuntimeException e) {if (e.getMessage() == null|| !e.getMessage().endsWith(""Exception from setAttributeWithExceptionFromSetter"")) {fail(name.getMethodName() + "" - FAILED - caught invalid exception: "" + e.getMessage());return;}} catch (Exception e) {fail(name.getMethodName() + "" - FAILED - caught unexpected exception: "" + e.getMessage());return;}}}"	2
4726	public class A {@CacheEntryModifiedpublic void onCacheEntryModified(CacheEntryModifiedEvent<TrackingKey, TrackedContent> event) {if (event.isPre()) {return;}try {adminController.saveToSerialized(event.getKey(), event.getValue());} catch (IOException e) {}}}	2
4727	public class A {private Reference createReferenceStub(final ModelNode referenceNode) {try {return AutoBeanCodex.decode(_factory, Reference.class, referenceNode.toJSONString(true)).as();} catch (Exception e) {return null;}}}	1
4728	public class A {public static com.liferay.portal.kernel.repository.model.FileEntrySoap[] getFileEntries(long repositoryId, long folderId, int start, int end) throws RemoteException {try {java.util.List<com.liferay.portal.kernel.repository.model.FileEntry> returnValue =DLAppServiceUtil.getFileEntries(repositoryId, folderId, start, end);return com.liferay.portal.kernel.repository.model.FileEntrySoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4729	public class A {public void release() {setInUse(false);thread = null;simId = null;testSession = null;}}	1
4730	public class A {@Overrideprotected void onSchemaCacheRefreshed() {try {getRestHighLevelClient().indices().refresh(new RefreshRequest(indexName), RequestOptions.DEFAULT);} catch (final IOException e) {}detectSchema();}}	1
4731	public class A {@Overridepublic void run() {try {SolrInputDocument doc = createDocument(instance);synchronized (solrServer) {solrServer.add(doc);}} catch (Exception e) {}}}	1
4732	public class A {public java.util.List<net.java.dev.jaxb.array.StringArrayArray> getSrcRecord(java.lang.String taskID) {System.out.println(taskID);try {java.util.List<net.java.dev.jaxb.array.StringArrayArray> _return = null;return _return;} catch (Exception ex) {ex.printStackTrace();throw new RuntimeException(ex);}}}	1
4733	"public class A {private void endTransaction() {Connection con = localConnection.get();if (con == null) {throw new IllegalStateException(""Not in transaction"");}localConnection.set(null);long now = System.currentTimeMillis();long elapsed = now - ((DbConnectionWrapper) con).getTxStart();if (elapsed >= txThreshold) {logThreshold(String.format(""Database transaction required %.3f seconds"", (double) elapsed / 1000.0));} else {long count, times;boolean logStats = false;synchronized (this) {count = ++txCount;times = txTimes += elapsed;if (now - statsTime >= txInterval) {logStats = true;txCount = 0;txTimes = 0;statsTime = now;}}if (logStats)}DbUtils.close(con);}}"	1
4734	public class A {@Overridepublic void onClose(KubernetesClientException e) {scheduleReconnect();}}	1
4735	"public class A {public void sendUploadMessage(RemoteFile rf, String precomputedChecksum) throws ArgumentNotValid {ArgumentNotValid.checkNotNull(rf, ""RemoteFile rf"");UploadMessage up = new UploadMessage(theChecksumChannel, Channels.getTheRepos(), rf);up.setPrecomputedChecksum(precomputedChecksum);jmsCon.send(up);}}"	1
4736	"public class A {private void doUnregisterErrorPages(ErrorPageModel model) {final String[] errorPages = model.getErrorPages();final Set<String> errorPagesSet = new HashSet<>(Arrays.asList(errorPages));if (model.getRegisteringBundle() == null) {model.setRegisteringBundle(serviceBundle);}Bundle registeringBundle = model.getRegisteringBundle();try {event(WebElementEvent.State.UNDEPLOYING, model);serverModel.run(() -> {List<ErrorPageModel> toUnregister = new LinkedList<>();for (ErrorPageModel existing : serviceModel.getErrorPageModels()) {if (existing == model) {toUnregister.add(existing);break;}}if (toUnregister.isEmpty()) {for (ErrorPageModel existing : serviceModel.getErrorPageModels()) {if (existing == model) {toUnregister.add(existing);break;} else {Set<String> existingPages =new HashSet<>(Arrays.asList(existing.getErrorPages()));if (existingPages.containsAll(errorPagesSet)) {toUnregister.add(existing);}}}}if (toUnregister.isEmpty()) {throw new IllegalArgumentException(""Can't find error pages to unregister using criteria from "" + model);}final Batch batch = new Batch(""Unregistration of error pages: "" + toUnregister);serverModel.removeErrorPageModels(toUnregister, batch);serverController.sendBatch(batch);batch.accept(serviceModel);return null;});event(WebElementEvent.State.UNDEPLOYED, model);} catch (Exception e) {event(WebElementEvent.State.FAILED, model, e);throw new RuntimeException(e.getMessage(), e);}}}"	1
4737	"public class A {private void checkImages(ImageAction action) throws JSONException, IOException {JSONObject json =new JSONObject(IOUtils.toString(getClass().getResourceAsStream(""/pictures/images.json""), StandardCharsets.UTF_8));JSONArray array = json.getJSONArray(""images"");for (int i = 0; i < array.length(); i++) {JSONObject image = array.getJSONObject(i);String imageName = image.getString(""name"");String path = ""/pictures/"" + imageName;InputStream ins = getClass().getResourceAsStream(path);if (ins == null) {throw new RuntimeException(""Could not find image {"" + path + ""}"");}byte[] bytes = IOUtils.toByteArray(ins);Flowable<Buffer> bs = Flowable.just(Buffer.buffer(bytes));int width = image.getInt(""w"");int height = image.getInt(""h"");String color = image.getString(""dominantColor"");String refPath = getReferenceFilename(imageName);InputStream insRef = getClass().getResourceAsStream(refPath);if (insRef == null) {throw new RuntimeException(""Could not find reference image {"" + refPath + ""}"");}BufferedImage refImage = ImageIO.read(insRef);insRef.close();action.call(imageName, width, height, color, refImage, path, bs);}}}"	1
4738	"public class A {@Overridepublic InputStream getResourceStream() {ResourceInstance resourceInstance = instance;String subPath = super.getDiskSubFolder() + resourceInstance.getFileName();try {return this.getStorageManager().getStream(subPath, this.isProtectedResource());} catch (Throwable t) {throw new RuntimeException(""Error on extracting resource Stream"", t);}}}"	1
4739	"public class A {protected void startManager() {try {manager = new Manager(dataSource, output, palavrasChave);cmdLineParams.saveIntoCaseData(manager.getCaseData());manager.process();WorkerProvider.getInstance().firePropertyChange(""mensagem"", """", Messages.getString(""IndexFiles.Finished""));success = true;} catch (Throwable e) {success = false;if (e instanceof OutOfMemoryError || (e.getCause() instanceof OutOfMemoryError))} finally {if (manager != null) manager.setProcessingFinished(true);if (manager == null || !manager.isSearchAppOpen()) logConfiguration.closeConsoleLogFile();}}}"	4
4740	"public class A {private void debugTypes(QueryRunner trinoExecutor,Session session,List<Type> expectedTypes,List<Object> expectedResults,TestTable testTable) {for (int i = 0; i < inputs.size(); i++) {Input<?> input = inputs.get(i);if (input.isUseInWhereClause()) {String debugQuery =format(""SELECT col_%d FROM %s WHERE col_%d IS NOT DISTINCT FROM %s"",i, testTable.getName(), i, input.toTrinoLiteral());MaterializedResult debugRows = trinoExecutor.execute(session, debugQuery);checkResults(expectedTypes.subList(i, i + 1), expectedResults.subList(i, i + 1), debugRows);}}}}"	1
4741	"public class A {@Testpublic void systemParamsTest() throws Exception {String command = ""${system.biz.date}"";Map<String, String> timeParams =BusinessTimeUtils.getBusinessTime(CommandType.START_PROCESS, new Date());command = ParameterUtils.convertParameterPlaceholders(command, timeParams);Calendar calendar = Calendar.getInstance();calendar.setTime(new Date());calendar.add(Calendar.DAY_OF_MONTH, -5);command = ""${system.biz.date}"";timeParams = BusinessTimeUtils.getBusinessTime(CommandType.COMPLEMENT_DATA, calendar.getTime());command = ParameterUtils.convertParameterPlaceholders(command, timeParams);}}"	2
4742	"public class A {private ByteBuffer sendCommand(String command) {if (command != null) {ByteBuffer byteBuffer = ByteBuffer.allocate(command.getBytes().length);try {byteBuffer.put(command.getBytes(""ASCII""));onWritable(byteBuffer);Thread.sleep(((BigDecimal) getConfig().get(RESPONSE_TIME_OUT)).intValue());return onReadable(((BigDecimal) getConfig().get(BUFFER_SIZE)).intValue(), true);} catch (UnsupportedEncodingException | NumberFormatException | InterruptedException e) {Thread.currentThread().interrupt();updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());}}return null;}}"	1
4743	"public class A {private Void acceptOneRaw(Context context) {implementor.prepareToWaitForOneWay();testUtilities.rhinoCall(""testAny1ToServerRaw"", testUtilities.javaToJS(getAddress()));implementor.waitForOneWay();assertEquals(""before chalk"", implementor.getBefore());Object something = implementor.getAny1value();assertNotNull(something);assertTrue(something instanceof Element);Element walrus = (Element) something;assertEquals(""walrus"", walrus.getNodeName());assertEquals(""tusks"", walrus.getTextContent());assertEquals(""after chalk"", implementor.getAfter());return null;}}"	1
4744	"public class A {private void action() {try {action.run();} catch (Exception e) {if (exceptionHandler != null) {exceptionHandler.accept(e);} else {error(""Error: "" + e.getMessage());}}}}"	1
4745	"public class A {protected URL[] getExternalSettingsFileURLs() {try {List<URL> externalSettingsFileURLs = new ArrayList<URL>();String externalSettingsFileNames = getSettingImpl(ADDITIONAL_SETTINGS_FILES);String[] externalSettingFiles = externalSettingsFileNames.split("","");for (String externalSettingFile : externalSettingFiles) {URL externalSettingFileURL = ApplicationSettings.loadFile(externalSettingFile);if (externalSettingFileURL == null) {} else {externalSettingsFileURLs.add(externalSettingFileURL);}}return externalSettingsFileURLs.toArray(new URL[] {});} catch (ApplicationSettingsException e) {return new URL[] {};}}}"	1
4746	public class A {public void doStronglyTypedLogging(Object item) {if (log.isInfoEnabled()) {}}}	1
4747	public class A {public static void close(Closeable c) {try {if (c != null) {c.close();}} catch (IOException e) {}}}	1
4748	public class A {public void actionPerformed(ActionEvent actionEvent) {MoveAxiomsWizard wiz = new MoveAxiomsWizard(getOWLEditorKit());if (wiz.showModalDialog() == Wizard.FINISH_RETURN_CODE) {try {wiz.applyChanges();} catch (OWLOntologyCreationException e) {}}wiz.dispose();}}	1
4749	"public class A {protected void parseExtensionBytes(T message) {byte[] extensionBytes = parseByteArrayField(message.getExtensionsLength().getValue());message.setExtensionBytes(extensionBytes);List<ExtensionMessage> extensionMessages = new LinkedList<>();int pointer = 0;HandshakeMessageType type;if (message instanceof ServerHelloMessage&& ((ServerHelloMessage) message).isTls13HelloRetryRequest()) {type = HandshakeMessageType.HELLO_RETRY_REQUEST;} else {type = message.getHandshakeMessageType();}while (pointer < extensionBytes.length) {ExtensionParser parser =ExtensionParserFactory.getExtensionParser(extensionBytes, pointer, type, this.getConfig());extensionMessages.add(parser.parse());if (pointer == parser.getPointer()) {throw new ParserException(""Ran into infinite Loop while parsing Extensions"");}pointer = parser.getPointer();}message.setExtensions(extensionMessages);}}"	1
4750	public class A {private static void writePartitionInfo(Configuration conf, Path path, List<KeyValue> splitPoints)throws IOException {SequenceFile.Writer writer =SequenceFile.createWriter(path.getFileSystem(conf), conf, path, NullWritable.class, BytesWritable.class);for (KeyValue key : splitPoints) {writer.append(NullWritable.get(), HBaseTypes.keyValueToBytes(key));}writer.close();}}	1
4751	public class A {protected void internalClearProperties(AsyncResponse asyncResponse) {validatePoliciesReadOnlyAccess();final String path = path(POLICIES, namespaceName.toString());AtomicReference<Integer> clearedCount = new AtomicReference<>(0);updatePoliciesAsync(path,(policies) -> {clearedCount.set(policies.properties.size());policies.properties.clear();return policies;}).thenAccept(v -> {asyncResponse.resume(Response.noContent().build());}).exceptionally(ex -> {Throwable cause = ex.getCause();asyncResponse.resume(cause);return null;});}}	2
4752	public class A {public static AuthorizationsCollector parse(File file) throws ParseException {if (file == null) {return AuthorizationsCollector.emptyImmutableCollector();}if (!file.exists()) {return AuthorizationsCollector.emptyImmutableCollector();}try {FileReader reader = new FileReader(file);return parse(reader);} catch (FileNotFoundException fex) {return AuthorizationsCollector.emptyImmutableCollector();}}}	3
4753	"public class A {@Testpublic void testSchemaHash() throws IOException, NoSuchAlgorithmException {File tempFile = newTestFile(true);String target = tempFile.getAbsolutePath();TransientPositionTracker tracker = new TransientPositionTracker(target);Context context = new Context();context.put(AvroEventDeserializer.CONFIG_SCHEMA_TYPE_KEY,AvroEventDeserializer.AvroSchemaType.HASH.toString());ResettableInputStream in = new ResettableFileInputStream(tempFile, tracker);EventDeserializer des = new AvroEventDeserializer.Builder().build(context, in);Event event = des.readEvent();String eventSchemaHash = event.getHeaders().get(AvroEventDeserializer.AVRO_SCHEMA_HEADER_HASH);String expectedSchemaHash =Hex.encodeHexString(SchemaNormalization.parsingFingerprint(""CRC-64-AVRO"", schema));Assert.assertEquals(expectedSchemaHash, eventSchemaHash);}}"	1
4754	public class A {@Overridepublic void onNext(TxleGrpcServerStream serverStream) {TxleGrpcClientStream.Builder clientStream = TxleGrpcClientStream.newBuilder();try {serverStream.getExecuteSqlList().forEach(executeSql -> {executeSql.getSubTxSqlList().forEach(sql -> System.err.println(sql));boolean isExecutedOK = false;try {integrateTxleService.getCustomRepository().executeSubTxSqls(executeSql.getSubTxSqlList());isExecutedOK = true;} catch (Exception e) {}TxleClientSqlResult result =TxleClientSqlResult.newBuilder().setDbNodeId(executeSql.getDbNodeId()).setGlobalTxId(executeSql.getGlobalTxId()).setLocalTxId(executeSql.getLocalTxId()).setMethod(executeSql.getMethod()).setIsExecutedOK(isExecutedOK).build();clientStream.addSqlResult(result);});} catch (Throwable e) {} finally {this.clientStreamObserver.onNext(clientStream.build());}}}	2
4755	public class A {private boolean requireBroadcast(Transaction tx) {if (blockchain.hasTransaction(tx.getId())) {return false;}if (memPool.hasUnconfirmedTransaction(tx.getId())) {memPool.rebroadcast(tx);return false;}try {transactionValidator.validateSignatureWithTxFee(tx);transactionValidator.validateLightly(tx);} catch (AplException.ValidationException e) {return false;}return true;}}	2
4756	public class A {protected DDMForm getDDMForm() {DDMForm ddmForm = null;try {DDMFormInstance ddmFormInstance = getDDMFormInstance();if (ddmFormInstance == null) {return ddmForm;}DDMFormInstanceVersion latestDDMFormInstanceVersion =DDMFormTaglibUtil.getLatestDDMFormInstanceVersion(ddmFormInstance.getFormInstanceId(), WorkflowConstants.STATUS_APPROVED);DDMStructureVersion ddmStructureVersion = latestDDMFormInstanceVersion.getStructureVersion();ddmForm = ddmStructureVersion.getDDMForm();} catch (PortalException portalException) {if (_log.isDebugEnabled()) {}}return ddmForm;}}	1
4757	public class A {public void stateChanged(int state) {if (state == RECONNECTED) {try {recover();} catch (Exception e) {}}}}	1
4758	public class A {@Overridepublic void accept(final KieServerControllerEvent event) {if (event instanceof ServerInstanceConnected) {handler.onServerInstanceConnected((ServerInstanceConnected) event);} else if (event instanceof ServerInstanceDeleted) {handler.onServerInstanceDeleted((ServerInstanceDeleted) event);} else if (event instanceof ServerInstanceDisconnected) {handler.onServerInstanceDisconnected((ServerInstanceDisconnected) event);} else if (event instanceof ServerInstanceUpdated) {handler.onServerInstanceUpdated((ServerInstanceUpdated) event);} else if (event instanceof ServerTemplateDeleted) {handler.onServerTemplateDeleted((ServerTemplateDeleted) event);} else if (event instanceof ServerTemplateUpdated) {handler.onServerTemplateUpdated((ServerTemplateUpdated) event);} else if (event instanceof ContainerSpecUpdated) {handler.onContainerSpecUpdated((ContainerSpecUpdated) event);} else {}}}	2
4759	"public class A {private void createConnection() throws IOException, InterruptedException {if (connection == null) {connection = new IRCConnection(hostname, new int[] {port}, password, nick, user, name);connection.addIRCEventListener(new IRCConnectionListener());connection.setEncoding(""UTF-8"");connection.setPong(true);connection.setDaemon(false);connection.setColors(false);connection.connect();for (String chan : channels) {connection.doJoin(IRC_CHANNEL_PREFIX + chan);}}}}"	1
4760	"public class A {public List findByExample(StgMsUnj instance) {try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.StgMsUnj"").add(Example.create(instance)).list();return results;} catch (RuntimeException re) {throw re;}}}"	3
4761	public class A {private static RestConfig loadRESTConfig() throws IOException {if (log.isDebugEnabled()) {}ObjectMapper objectMapper = new ObjectMapper();return objectMapper.readValue(new File(Constants.Utils.REST_CONFIGURATION_FILE_PATH), RestConfig.class);}}	1
4762	public class A {@Testpublic void testReadOnlyMemory() {double micros = test(new SinglePageMappedReadOnlyPageMemory());}}	2
4763	public class A {protected LogLevel logbackToScoutLevel(Level level) {if (level == null) {return null;}switch (level.toInt()) {case Level.ALL_INT:return LogLevel.ALL;case Level.TRACE_INT:return LogLevel.TRACE;case Level.DEBUG_INT:return LogLevel.DEBUG;case Level.INFO_INT:return LogLevel.INFO;case Level.WARN_INT:return LogLevel.WARN;case Level.ERROR_INT:return LogLevel.ERROR;case Level.OFF_INT:return LogLevel.OFF;default:return LogLevel.WARN;}}}	1
4764	public class A {@Testpublic void testInfo_Object_Object_Object_Object_Object() throws Exception {ILoggingTool logger = getLoggingTool();}}	1
4765	"public class A {private static void emitLogLine(String userId, String action, String queueUrl, List<String> receiptHandles, long rt) {StringBuffer logLine = new StringBuffer("""");logLine.append(""event=req status=ok client=inline Action="").append(action);if (receiptHandles != null) {for (String receiptHandle : receiptHandles) {logLine.append("" ReceiptHandle="").append(receiptHandle);}}logLine.append("" resp_ms="").append(rt);}}"	1
4766	"public class A {@Testpublic void test_01_ENST00000369219() {String trName = ""ENST00000369219"";String ensemblFile = path(trName + ""_ensembl.txt"");CompareToEnsembl compareToEnsembl = new CompareToEnsembl(""testHg3763Chr1"", false);compareToEnsembl.compareEnsembl(ensemblFile, trName);}}"	1
4767	public class A {private void discoveryStop() {timerCancel();for (ZclKeyEstablishmentClient keClient : cbkeClientRegistry.values()) {keClient.stop();}updateClientState(SmartEnergyClientState.IDLE);}}	1
4768	public class A {protected void fetchRelationship(MetadataChild relationship,boolean useForeignKeyAttribute,boolean nullifyDanglingRelationship) {Class<?> relatedType = relationship.getRelatedType();if (!dataObjectService.supports(relatedType)) {return;}if (useForeignKeyAttribute) {fetchRelationshipUsingAttributes(relationship, nullifyDanglingRelationship);} else {fetchRelationshipUsingIdentity(relationship, nullifyDanglingRelationship);}}}	1
4769	"public class A {private void logResponse(RestResponse response, String uuid) {String message =String.format(""Received response with %s and body: %s"", response.getStatus(), response.getBody());AllureLogger.passStep(message, uuid);}}"	1
4770	"public class A {@Overridepublic void actionPerformed(ActionEvent e) {JCheckBox eventBox = (JCheckBox) e.getSource();Quantify.collectEnableDisableMetric(""mist3d.server-panel.status"", eventBox.isSelected());if (eventBox.isSelected()) {controller.activateSource(source);} else {controller.deactivateSource(source);}rebuildTable();}}"	1
4771	public class A {private Map<String, Set<Integer>> parseLicsTodoToLicenseMap(Map<String, InputStream> inputMap) {List<CSVRecord> licenseTodoRecord = readAsCSVRecords(inputMap.get(LICENSE_TODO_FILE));return ConvertRecord.convertRelationalTable(licenseTodoRecord);}}	1
4772	public class A {@Overridepublic boolean filter(Bundle row) {try {if (duration > 0) {Thread.sleep(duration);}} catch (InterruptedException ex) {}return true;}}	1
4773	"public class A {protected String makeChangePasswordURL(final String publicUrl, final String contextPath, final String token) {String url =UriComponentsBuilder.fromHttpUrl(publicUrl).path(contextPath).path(""/account/newPassword"").query(""token={token}"").buildAndExpand(token).toUriString();if (LOG.isDebugEnabled()) {}return url;}}"	1
4774	public class A {private Vertex findOrCreateVreVertex(Graph graph) {Vertex vreVertex;GraphTraversal<Vertex, Vertex> existing =graph.traversal().V().hasLabel(DATABASE_LABEL).has(VRE_NAME_PROPERTY_NAME, vreName);if (existing.hasNext()) {vreVertex = existing.next();} else {vreVertex = graph.addVertex(DATABASE_LABEL);}return vreVertex;}}	2
4775	"public class A {private Resource buildResourceFromResultSetRowClassic(final IRODSQueryResultRow row)throws JargonException {Resource resource = new Resource();resource.setId(row.getColumn(0));resource.setName(row.getColumn(1));String zoneName = row.getColumn(2);if (lastZone != null && zoneName.equals(lastZone.getZoneName())) {} else {try {lastZone = zoneAO.getZoneByName(zoneName);} catch (DataNotFoundException e) {String message = ""no zone found for zone in resource="" + zoneName;throw new JargonException(""zone not found for resource, data integrity error"", e);}}resource.setZone(lastZone);resource.setContextString(row.getColumn(3));resource.setResourceClass(row.getColumn(4));resource.setLocation(row.getColumn(5));resource.setVaultPath(row.getColumn(6));try {resource.setFreeSpace(Long.parseLong(row.getColumn(7)));} catch (NumberFormatException nfe) {resource.setFreeSpace(0);}resource.setFreeSpaceTime(IRODSDataConversionUtil.getDateFromIRODSValue(row.getColumn(8)));resource.setInfo(row.getColumn(9));resource.setComment(row.getColumn(10));resource.setCreateTime(IRODSDataConversionUtil.getDateFromIRODSValue(row.getColumn(11)));resource.setModifyTime(IRODSDataConversionUtil.getDateFromIRODSValue(row.getColumn(12)));resource.setStatus(row.getColumn(13));if (log.isInfoEnabled()) {}return resource;}}"	4
4776	"public class A {public void doTestSendFailIfNoSpaceDoesNotBlockNetwork(ActiveMQDestination slowDestination, ActiveMQDestination fastDestination) throws Exception {final int NUM_MESSAGES = 100;final long TEST_MESSAGE_SIZE = 1024;final long SLOW_CONSUMER_DELAY_MILLIS = 100;createBroker(new URI(""broker:(tcp://localhost:0"" + "")?brokerName=broker0&persistent=false&useJmx=true""));BrokerService remoteBroker =createBroker(new URI(""broker:(tcp://localhost:0"" + "")?brokerName=broker1&persistent=false&useJmx=true""));remoteBroker.getSystemUsage().setSendFailIfNoSpace(true);PolicyEntry policyEntry = new PolicyEntry();policyEntry.setMemoryLimit(5 * TEST_MESSAGE_SIZE);PolicyMap policyMap = new PolicyMap();policyMap.put(slowDestination, policyEntry);remoteBroker.setDestinationPolicy(policyMap);NetworkConnector nc = bridgeBrokers(""broker0"", ""broker1"");nc.setAlwaysSyncSend(true);nc.setPrefetchSize(1);startAllBrokers();waitForBridgeFormation();final CountDownLatch fastConsumerLatch = new CountDownLatch(NUM_MESSAGES);final CountDownLatch slowConsumerLatch = new CountDownLatch(NUM_MESSAGES);final long startTimeMillis = System.currentTimeMillis();final AtomicLong fastConsumerTime = new AtomicLong();final AtomicLong slowConsumerTime = new AtomicLong();Thread fastWaitThread =new Thread() {@Overridepublic void run() {try {fastConsumerLatch.await();fastConsumerTime.set(System.currentTimeMillis() - startTimeMillis);} catch (InterruptedException ex) {exceptions.add(ex);Assert.fail(ex.getMessage());}}};Thread slowWaitThread =new Thread() {@Overridepublic void run() {try {slowConsumerLatch.await();slowConsumerTime.set(System.currentTimeMillis() - startTimeMillis);} catch (InterruptedException ex) {exceptions.add(ex);Assert.fail(ex.getMessage());}}};fastWaitThread.start();slowWaitThread.start();createConsumer(""broker1"", fastDestination, fastConsumerLatch);MessageConsumer slowConsumer = createConsumer(""broker1"", slowDestination, slowConsumerLatch);MessageIdList messageIdList = brokers.get(""broker1"").consumers.get(slowConsumer);messageIdList.setProcessingDelay(SLOW_CONSUMER_DELAY_MILLIS);persistentDelivery = false;sendMessages(""broker0"", fastDestination, NUM_MESSAGES);sendMessages(""broker0"", slowDestination, NUM_MESSAGES);fastWaitThread.join(TimeUnit.SECONDS.toMillis(60));slowWaitThread.join(TimeUnit.SECONDS.toMillis(60));assertTrue(""no exceptions on the wait threads:"" + exceptions, exceptions.isEmpty());assertTrue(""fast time set"", fastConsumerTime.get() > 0);assertTrue(""slow time set"", slowConsumerTime.get() > 0);Assert.assertTrue(fastConsumerTime.get() < slowConsumerTime.get() / 10);}}"	2
4777	"public class A {@Overridepublic List<String> updateCAList() throws IOException {lock.lock();try {SCMSecurityProtocol scmSecurityProtocolClient =getScmSecurityClientWithMaxRetry((OzoneConfiguration) securityConfig.getConfiguration());pemEncodedCACerts = scmSecurityProtocolClient.listCACertificate();return pemEncodedCACerts;} catch (Exception e) {throw new CertificateException(""Error during updating CA list"", e, CERTIFICATE_ERROR);} finally {lock.unlock();}}}"	1
4778	"public class A {private void checkCloudRequestDTO(final CloudRequestDTO cloud) {if (cloud == null) {throw new InvalidParameterException(""Cloud"" + NULL_PARAMETER_ERROR_MESSAGE);}if (Utilities.isEmpty(cloud.getOperator())) {throw new InvalidParameterException(""Cloud operator"" + NULL_OR_BLANK_PARAMETER_ERROR_MESSAGE);}if (Utilities.isEmpty(cloud.getName())) {throw new InvalidParameterException(""Cloud name"" + NULL_OR_BLANK_PARAMETER_ERROR_MESSAGE);}}}"	1
4779	public class A {static <T> Stream<T> load(final Iterable<JobService> loader, final Function<JobService, Collection<T>> jobProvider) {return StreamUtil.toStream(loader).flatMap(cp -> jobProvider.apply(cp).stream());}}	2
4780	"public class A {public void addTokenFromUserToJobConf(UserGroupInformation user, JobConf jobConf)throws IOException {checkNotNull(user, ""Provided UGI was null"");checkNotNull(jobConf, ""JobConf was null"");Token<?> accumuloToken = getAccumuloToken(user);if (null == accumuloToken) {throw new IOException(""Could not find Accumulo Token in user's tokens"");}mergeTokenIntoJobConf(jobConf, accumuloToken);}}"	1
4781	public class A {@Overridepublic void timerFired() throws IOException {Map<String, List<ObjectRecord>> batchMap = pollBatches();if (batchMap == null) {return;}for (String type : batchMap.keySet()) {List<ObjectRecord> batch = batchMap.get(type);try {objectRecordDAO.saveBatch(batch, type);} catch (Exception e) {}}}}	1
4782	public class A {public void protocolCommandSent(ProtocolCommandEvent event) {}}	1
4783	"public class A {@Testpublic void testContinuousQueriesWithConcurrentCompute() throws Exception {try (IgniteClient client = startClient(0, 1, 2)) {int threadsCnt = 20;int iterations = 50;Set<UUID> allNodesIds = new HashSet<>(F.nodeIds(grid(0).cluster().nodes()));AtomicInteger threadIdxs = new AtomicInteger();GridTestUtils.runMultiThreaded(() -> {int threadIdx = threadIdxs.incrementAndGet();ClientCache<Integer, Integer> cache =client.getOrCreateCache(""testCQwithCompute"" + threadIdx);try {for (int i = 0; i < iterations; i++) {ContinuousQueryListener<Integer, Integer> lsnr = new ContinuousQueryListener<>();QueryCursor<?> cur =cache.query(new ContinuousQuery<Integer, Integer>().setLocalListener(lsnr));cache.put(i, i);Future<T2<UUID, Set<UUID>>> fut =client.compute().executeAsync2(TestTask.class.getName(), null);assertEquals(allNodesIds, fut.get().get2());lsnr.assertNextCacheEvent(EventType.CREATED, i, i);assertTrue(lsnr.isQueueEmpty());cur.close();}} catch (Exception e) {fail();}},threadsCnt,""run-task-async"");}}}"	1
4784	"public class A {@Testpublic void testRequestNetCDFCompression() throws Exception {boolean isNC4Available = NetCDFUtilities.isNC4CAvailable();if (!isNC4Available && LOGGER.isLoggable(Level.INFO)) {}MockHttpServletResponse response =getAsServletResponse(""ows?request=GetCoverage&service=WCS&version=2.0.1""+ ""&coverageId=wcs__visibilityCompressed&format=application/x-netcdf4"");assertNotNull(response);assertEquals((isNC4Available ? ""application/x-netcdf4"" : ""application/xml""), response.getContentType());if (isNC4Available) {byte[] netcdfOut = getBinary(response);File file = File.createTempFile(""netcdf"", ""outCompressed.nc"", new File(""./target""));FileUtils.writeByteArrayToFile(file, netcdfOut);try (NetcdfDataset dataset = NetcdfDataset.openDataset(file.getAbsolutePath())) {assertNotNull(dataset);Variable var = dataset.findVariable(STANDARD_NAME);assertNotNull(var);final long varByteSize = var.getSize() * var.getDataType().getSize();assertTrue(netcdfOut.length < varByteSize);}}}}"	1
4785	public class A {protected void readOS2() throws IOException {OFDirTabEntry os2Entry = dirTabs.get(OFTableName.OS2);if (os2Entry != null) {seekTab(fontFile, OFTableName.OS2, 0);int version = fontFile.readTTFUShort();if (log.isDebugEnabled()) {}fontFile.skip(2);this.usWeightClass = fontFile.readTTFUShort();fontFile.skip(2);int fsType = fontFile.readTTFUShort();if (fsType == 2) {isEmbeddable = false;} else {isEmbeddable = true;}fontFile.skip(8 * 2);strikeoutThickness = fontFile.readTTFShort();strikeoutPosition = fontFile.readTTFShort();fontFile.skip(2);fontFile.skip(10);fontFile.skip(4 * 4);fontFile.skip(4);fontFile.skip(3 * 2);int v;os2Ascender = fontFile.readTTFShort();os2Descender = fontFile.readTTFShort();if (log.isDebugEnabled()) {}v = fontFile.readTTFShort();if (log.isDebugEnabled()) {}v = fontFile.readTTFUShort();if (log.isDebugEnabled()) {}v = fontFile.readTTFUShort();if (log.isDebugEnabled()) {}if (os2Entry.getLength() >= 78 + (2 * 4) + (2 * 2)) {fontFile.skip(2 * 4);this.os2xHeight = fontFile.readTTFShort();this.os2CapHeight = fontFile.readTTFShort();if (log.isDebugEnabled()) {}}} else {isEmbeddable = true;}}}	8
4786	"public class A {@Override@Deletepublic Representation delete() {StringRepresentation presentation;try {final String tenantName = (String) getRequest().getAttributes().get(TENANT_NAME);final String type = getReference().getQueryAsForm().getValues(""type"");presentation = deleteTenant(tenantName, type);} catch (final Exception e) {presentation = exceptionToStringRepresentation(e);setStatus(Status.SERVER_ERROR_INTERNAL);}return presentation;}}"	1
4787	public class A {protected void initDataSource() throws DatabaseConfigException {initInternalDb(_odeConfig.getDbIntenralJdbcUrl(),_odeConfig.getDbInternalJdbcDriverClass(),_odeConfig.getDbInternalUserName(),_odeConfig.getDbInternalPassword());}}	1
4788	"public class A {@SuppressWarnings(""checkstyle:IllegalCatch"")@Overridepublic void onDataTreeChanged(final Collection<DataTreeModification<T>> changes) {for (DataTreeModification<T> change : changes) {final InstanceIdentifier<T> key = change.getRootPath().getRootIdentifier();final DataObjectModification<T> mod = change.getRootNode();final InstanceIdentifier<FlowCapableNode> nodeIdent =key.firstIdentifierOf(FlowCapableNode.class);try {if (preConfigurationCheck(nodeIdent)) {switch (mod.getModificationType()) {case DELETE:remove(key, mod.getDataBefore(), nodeIdent);break;case SUBTREE_MODIFIED:update(key, mod.getDataBefore(), mod.getDataAfter(), nodeIdent);break;case WRITE:if (mod.getDataBefore() == null) {add(key, mod.getDataAfter(), nodeIdent);} else {update(key, mod.getDataBefore(), mod.getDataAfter(), nodeIdent);}break;default:throw new IllegalArgumentException(""Unhandled modification type "" + mod.getModificationType());}} else {if (provider.isStaleMarkingEnabled()) {switch (mod.getModificationType()) {case DELETE:createStaleMarkEntity(key, mod.getDataBefore(), nodeIdent);break;case SUBTREE_MODIFIED:break;case WRITE:break;default:throw new IllegalArgumentException(""Unhandled modification type "" + mod.getModificationType());}}}} catch (RuntimeException e) {}}}}"	3
4789	"public class A {@GET@Path(""check-compatibility"")@Consumes({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})public Response checkGeoVersionCompatibility(@QueryParam(""expect_version"") String expectVersion) {if (!isValidateVersion(expectVersion)) {throw APIException.badRequests.invalidParameter(""invalid Geo version {} : only support major and minor "", expectVersion);}Boolean versionSupported = this._dbClient.checkGeoCompatible(expectVersion);return Response.ok(versionSupported.toString(), MediaType.APPLICATION_OCTET_STREAM).build();}}"	1
4790	public class A {private void manipulateIoBuffer(IoSession session, IoBuffer buffer) {if ((buffer.remaining() > 0) && (removeByteProbability > rng.nextInt(1000))) {logger.info(buffer.getHexDump());int pos = rng.nextInt(buffer.remaining());int count = rng.nextInt(buffer.remaining() - pos) + 1;if (count == buffer.remaining()) count = buffer.remaining() - 1;IoBuffer newBuff = IoBuffer.allocate(buffer.remaining() - count);for (int i = 0; i < pos; i++) newBuff.put(buffer.get());buffer.skip(count);while (newBuff.remaining() > 0) newBuff.put(buffer.get());newBuff.flip();buffer.rewind();buffer.put(newBuff);buffer.flip();logger.info(buffer.getHexDump());}if ((buffer.remaining() > 0) && (changeByteProbability > rng.nextInt(1000))) {logger.info(buffer.getHexDump());int count = rng.nextInt(buffer.remaining() - 1) + 1;byte[] values = new byte[count];rng.nextBytes(values);for (int i = 0; i < values.length; i++) {int pos = rng.nextInt(buffer.remaining());buffer.put(pos, values[i]);}}}}	3
4791	"public class A {private void recoverRunningParagraphs() {Thread thread =new Thread(() -> {getNoteStream().forEach(note -> {try {boolean hasRecoveredParagraph = false;for (Paragraph paragraph : note.getParagraphs()) {if (paragraph.getStatus() == Job.Status.RUNNING) {paragraph.recover();hasRecoveredParagraph = true;}}if (!hasRecoveredParagraph) {note.unLoad();}} catch (Exception e) {}});});thread.setName(""Recovering-Thread"");thread.start();try {thread.join();} catch (InterruptedException e) {e.printStackTrace();}}}"	2
4792	"public class A {@Scheduled(cron = ""00 30 07 * * *"")public synchronized void execute() {Map<String, Integer> syllableFrequencyMap = new HashMap<>();Language language = Language.valueOf(ConfigHelper.getProperty(""content.language""));List<StoryBook> storyBooks = storyBookDao.readAllOrdered();for (StoryBook storyBook : storyBooks) {List<String> paragraphs = new ArrayList<>();List<StoryBookChapter> storyBookChapters = storyBookChapterDao.readAll(storyBook);for (StoryBookChapter storyBookChapter : storyBookChapters) {List<StoryBookParagraph> storyBookParagraphs =storyBookParagraphDao.readAll(storyBookChapter);for (StoryBookParagraph storyBookParagraph : storyBookParagraphs) {paragraphs.add(storyBookParagraph.getOriginalText());}}Map<String, Integer> syllableFrequencyMapForBook =SyllableFrequencyHelper.getSyllableFrequency(paragraphs, language);for (String key : syllableFrequencyMapForBook.keySet()) {String syllableText = key;int syllableFrequency = syllableFrequencyMapForBook.get(key);if (!syllableFrequencyMap.containsKey(syllableText)) {syllableFrequencyMap.put(syllableText, syllableFrequency);} else {syllableFrequencyMap.put(syllableText, syllableFrequencyMap.get(syllableText) + syllableFrequency);}}}for (String key : syllableFrequencyMap.keySet()) {String syllableText = key;Word word = wordDao.readByText(syllableText);if (word != null) {continue;}if (syllableText.length() != 2) {continue;}Syllable existingSyllable = syllableDao.readByText(syllableText);if (existingSyllable == null) {Syllable syllable = new Syllable();syllable.setTimeLastUpdate(Calendar.getInstance());syllable.setText(syllableText);syllable.setUsageCount(syllableFrequencyMap.get(syllableText));syllableDao.create(syllable);} else {existingSyllable.setUsageCount(syllableFrequencyMap.get(syllableText));syllableDao.update(existingSyllable);}}}}"	6
4793	public class A {public void scanInsertFormValueCommands() {boolean modified = getDocumentController().getModel().isDocumentModified();try {getDocumentController().getModel().setDocumentModifiable(false);InsertFormValueCommandsScanner s = new InsertFormValueCommandsScanner(this);s.execute(getDocumentController().getModel().getDocumentCommands());getDocumentController().getModel().setIDToFormFields(s.getIdToFormFields());getDocumentController().collectNonWollMuxFormFields();} finally {getDocumentController().getModel().setDocumentModified(modified);getDocumentController().getModel().setDocumentModifiable(true);}}}	1
4794	"public class A {@Overridepublic void deleteEntry(AtomRequest areq) throws AtomException {String[] pathInfo = StringUtils.split(areq.getPathInfo(), ""/"");if (pathInfo.length > 2) {if (pathInfo[1].equals(""entry"")) {EntryCollection ecol = new EntryCollection(user, atomURL);ecol.deleteEntry(areq);return;} else if (pathInfo[1].equals(""resource"")) {MediaCollection mcol = new MediaCollection(user, atomURL);mcol.deleteEntry(areq);return;}}throw new AtomNotFoundException(""cannot find specified entry/resource"");}}"	1
4795	"public class A {@Testpublic void testUpdate() throws Exception {File theTestFile = uploadTestFile();final Map<String, Object> headers = new HashMap<>();headers.put(""CamelGoogleDrive.fileId"", theTestFile.getId());headers.put(""CamelGoogleDrive.content"", theTestFile);File result = requestBodyAndHeaders(""direct://UPDATE"", null, headers);assertNotNull(result, ""update result"");}}"	1
4796	public class A {private void handleColor(Command command) throws IOException, CommandUnsuccessfulException {if (command instanceof HSBType) {HSBType color = (HSBType) command;Color c = new Color(color.getRGB());int r = c.getRed();int g = c.getGreen();int b = c.getBlue();ColorCommand colorCommand = new ColorCommand(r, g, b, priority);sendCommand(colorCommand);} else {}}}	1
4797	public class A {@Overridepublic void operationFinished(Object ctx, Void resultOfOperation) {updateMessageBound(topic);cb.operationFinished(ctx, subscriptionState.toSubscriptionData());}}	1
4798	public class A {protected void visit(SourceUnit sourceUnit, ClassCodeExpressionTransformer transformer) {ModuleNode ast = sourceUnit.getAST();BlockStatement blockStatement = ast.getStatementBlock();List<MethodNode> methods = ast.getMethods();for (MethodNode methodNode : methods) {methodNode.getCode().visit(transformer);}blockStatement.visit(transformer);}}	1
4799	"public class A {private ArtifactStore getRequestedStore(final KojiRepairRequest request, final KojiRepairResult ret) {StoreKey remoteKey = request.getSource();ArtifactStore store = null;try {store = storeManager.getArtifactStore(remoteKey);} catch (IndyDataException e) {String error = String.format(""Cannot get store: %s, error: %s"", remoteKey, e);ret.withError(error);return null;}if (store == null) {String error = String.format(""No such store: %s."", remoteKey);ret.withError(error);return null;}return store;}}"	1
4800	public class A {public void clearCatalog() {String output = console.runCommand(REMOVE_ALL, GENERIC_TIMEOUT_MILLISECONDS);}}	1
4801	"public class A {protected void generateAppLocally(@NotNull GeneratorContext generatorContext, @NotNull Path repoPath) throws IOException {try {if (!Files.isDirectory(repoPath)) {throw new IllegalArgumentException(String.format(""The path %s must be a directory!"", repoPath.toString()));}OutputHandler outputHandler =new FileSystemOutputHandler(repoPath.toFile(), ConsoleOutput.NOOP);projectGenerator.generate(generatorContext.getApplicationType(),generatorContext.getProject(),outputHandler,generatorContext);} catch (Exception e) {throw new IOException(e.getMessage(), e);}}}"	1
4802	"public class A {@Testpublic void setAuditLogServiceForCommandTest() {String PROCESS_ID = ""com.sample.ruleflow"";List<ProcessInstanceLog> processInstances =setAuditLogServiceAndExecute(new FindProcessInstancesCommand(PROCESS_ID));int initialProcessInstanceSize = processInstances.size();long processInstanceId = ksession.startProcess(PROCESS_ID).getId();processInstances = setAuditLogServiceAndExecute(new FindProcessInstancesCommand(PROCESS_ID));assertEquals(initialProcessInstanceSize + 1, processInstances.size());ProcessInstanceLog processInstance = processInstances.get(initialProcessInstanceSize);assertNotNull(processInstance.getStart());assertNotNull(""ProcessInstanceLog does not contain end date."", processInstance.getEnd());assertEquals(processInstanceId, processInstance.getProcessInstanceId().longValue());assertEquals(PROCESS_ID, processInstance.getProcessId());List<NodeInstanceLog> nodeInstances =setAuditLogServiceAndExecute(new FindNodeInstancesCommand(processInstanceId));assertEquals(6, nodeInstances.size());setAuditLogServiceAndExecute(new ClearHistoryLogsCommand());nodeInstances = setAuditLogServiceAndExecute(new FindNodeInstancesCommand(processInstanceId));assertEquals(0, nodeInstances.size());processInstances = setAuditLogServiceAndExecute(new FindProcessInstancesCommand(PROCESS_ID));assertEquals(0, processInstances.size());}}"	2
4803	"public class A {public static void main(String[] args) {String queueName = null;Context jndiContext = null;QueueConnectionFactory queueConnectionFactory = null;QueueConnection queueConnection = null;QueueSession queueSession = null;Queue queue = null;QueueSender queueSender = null;TextMessage message = null;final int numMsgs;if ((args.length < 1) || (args.length > 2)) {System.exit(1);}queueName = args[0];if (args.length == 2) {numMsgs = (new Integer(args[1])).intValue();} else {numMsgs = 1;}try {jndiContext = new InitialContext();} catch (NamingException e) {System.exit(1);}try {queueConnectionFactory =(QueueConnectionFactory) jndiContext.lookup(""QueueConnectionFactory"");queue = (Queue) jndiContext.lookup(queueName);} catch (NamingException e) {System.exit(1);}try {queueConnection = queueConnectionFactory.createQueueConnection();queueSession = queueConnection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE);queueSender = queueSession.createSender(queue);message = queueSession.createTextMessage();for (int i = 0; i < numMsgs; i++) {message.setText(""This is message "" + (i + 1));queueSender.send(message);}queueSender.send(queueSession.createMessage());} catch (JMSException e) {} finally {if (queueConnection != null) {try {queueConnection.close();} catch (JMSException e) {}}}}}"	6
4804	public class A {private void closeUnusedFiles() {long t = System.currentTimeMillis() - fileCloseTime;for (ReplFileAccess rfa : replFiles.values()) {synchronized (rfa) {if (rfa.rf != currentFile && rfa.rf != null && rfa.lastAccess < t) {rfa.rf.close();rfa.rf = null;}}}try {for (ReplFileAccess rfa : toDeleteList) {synchronized (rfa) {if (rfa.rf != null && rfa.lastAccess < t) {rfa.rf.close();Files.delete(rfa.path);rfa.rf = null;}}}} catch (IOException e) {}}}	3
4805	"public class A {@Testpublic void testReadReactions1() throws Exception {String filename1 = ""data/mdl/reaction_v3.rxn"";InputStream ins1 = this.getClass().getClassLoader().getResourceAsStream(filename1);MDLRXNV3000Reader reader1 = new MDLRXNV3000Reader(ins1, Mode.STRICT);IReaction reaction1 = new Reaction();reaction1 = (IReaction) reader1.read(reaction1);reader1.close();Assert.assertNotNull(reaction1);Assert.assertEquals(1, reaction1.getReactantCount());Assert.assertEquals(1, reaction1.getProductCount());IAtomContainer reactant = reaction1.getReactants().getAtomContainer(0);Assert.assertNotNull(reactant);Assert.assertEquals(32, reactant.getAtomCount());Assert.assertEquals(29, reactant.getBondCount());IAtomContainer product = reaction1.getProducts().getAtomContainer(0);Assert.assertNotNull(product);Assert.assertEquals(32, product.getAtomCount());Assert.assertEquals(29, product.getBondCount());}}"	1
4806	public class A {private void addColumnFamilyToTable(String tableName, String columnFamilyName)throws IOException {HColumnDescriptor cfDesciptor = new HColumnDescriptor(columnFamilyName);try {if (admin.tableExists(tableName)) {if (!admin.isTableEnabled(tableName)) {admin.enableTable(tableName);}HTableDescriptor descriptor = admin.getTableDescriptor(tableName.getBytes());boolean found = false;for (HColumnDescriptor hColumnDescriptor : descriptor.getColumnFamilies()) {if (hColumnDescriptor.getNameAsString().equalsIgnoreCase(columnFamilyName)) found = true;}if (!found) {if (admin.isTableEnabled(tableName)) {admin.disableTable(tableName);}admin.addColumn(tableName, cfDesciptor);admin.enableTable(tableName);}} else {}} catch (IOException e) {throw e;}}}	2
4807	public class A {public void deleteEntities(Collection<AtlasVertex> instanceVertices) throws AtlasBaseException {final RequestContext requestContext = RequestContext.get();final Set<AtlasVertex> deletionCandidateVertices = new HashSet<>();final boolean isPurgeRequested = requestContext.isPurgeRequested();for (AtlasVertex instanceVertex : instanceVertices) {final String guid = AtlasGraphUtilsV2.getIdFromVertex(instanceVertex);if (skipVertexForDelete(instanceVertex)) {if (LOG.isDebugEnabled()) {if (isPurgeRequested) {} else {}}continue;}for (GraphHelper.VertexInfo vertexInfo : getOwnedVertices(instanceVertex)) {AtlasEntityHeader entityHeader = vertexInfo.getEntity();if (requestContext.isPurgeRequested()) {entityHeader.setClassifications(entityRetriever.getAllClassifications(vertexInfo.getVertex()));}requestContext.recordEntityDelete(entityHeader);deletionCandidateVertices.add(vertexInfo.getVertex());}}for (AtlasVertex deletionCandidateVertex : deletionCandidateVertices) {deleteAllClassifications(deletionCandidateVertex);deleteTypeVertex(deletionCandidateVertex, isInternalType(deletionCandidateVertex));}}}	2
4808	public class A {protected void extractHeatInformation(ToscaResourceStructure toscaResourceStruct, VfResourceStructure vfResourceStructure) {for (VfModuleArtifact vfModuleArtifact : vfResourceStructure.getArtifactsMapByUUID().values()) {switch (vfModuleArtifact.getArtifactInfo().getArtifactType()) {case ASDCConfiguration.HEAT:case ASDCConfiguration.HEAT_NESTED:createHeatTemplateFromArtifact(vfResourceStructure, toscaResourceStruct, vfModuleArtifact);break;case ASDCConfiguration.HEAT_VOL:createHeatTemplateFromArtifact(vfResourceStructure, toscaResourceStruct, vfModuleArtifact);VfModuleArtifact envModuleArtifact =getHeatEnvArtifactFromGeneratedArtifact(vfResourceStructure, vfModuleArtifact);createHeatEnvFromArtifact(vfResourceStructure, envModuleArtifact);break;case ASDCConfiguration.HEAT_ENV:createHeatEnvFromArtifact(vfResourceStructure, vfModuleArtifact);break;case ASDCConfiguration.HEAT_ARTIFACT:createHeatFileFromArtifact(vfResourceStructure, vfModuleArtifact, toscaResourceStruct);break;case ASDCConfiguration.HEAT_NET:case ASDCConfiguration.OTHER:case ASDCConfiguration.CLOUD_TECHNOLOGY_SPECIFIC_ARTIFACT:break;default:break;}}}}	1
4809	public class A {private static void logVoltageLevel(String title, VoltageLevel vl) throws IOException {try (StringWriter w = new StringWriter()) {vl.exportTopology(w);}}}	2
4810	public class A {private List<ControlGroup> getControlGroups(Integer root) {ArrayList<ControlGroup> retList = new ArrayList<ControlGroup>(0);Set<ControlGroup> alreadySeen = new HashSet<ControlGroup>(0);try {LoadReportElements command = new LoadReportElements(ControlGroup.TYPE_ID, root, true);command = getCommandService().executeCommand(command);List<CnATreeElement> groups = command.getElements();if (groups.size() == 1 && groups.get(0).getDbId().equals(root)) {ControlGroup rootGroup = (ControlGroup) groups.get(0);groups.clear();groups.addAll(command.getElements(ControlGroup.TYPE_ID, rootGroup));}for (CnATreeElement e : groups) {if (e instanceof ControlGroup) {ControlGroup c = (ControlGroup) e;if (!alreadySeen.contains(c)) {alreadySeen.add(c);if (e.getParent() instanceof ControlGroup&& c.getEntity().getSimpleValue(OVERVIEW_PROPERTY).equals(String.valueOf(OVERVIEW_PROPERTY_TARGET))&& containsSamtTopicsOnly(c)) {retList.add(c);}}}}} catch (CommandException e) {}retList.trimToSize();Collections.sort(retList,new Comparator<ControlGroup>() {@Overridepublic int compare(ControlGroup o1, ControlGroup o2) {NumericStringComparator comp = new NumericStringComparator();return comp.compare(o1.getTitle(), o2.getTitle());}});return retList;}}	1
4811	public class A {private boolean handlePartialWrite(DatabaseDocument<T> md, HttpResponse response)throws UnsupportedEncodingException {if (md.getID() == null) {HttpResponseWriter.printMissingID(response);return false;}DatabaseDocument<T> inDB = io.getDocumentById(md.getID());if (inDB == null) {HttpResponseWriter.printNoDocument(response);return false;}inDB.putAll(md);if (io.update(inDB)) {HttpResponseWriter.printSaveOk(response, md.getID());return true;} else {HttpResponseWriter.printSaveFailed(response, md.getID());return false;}}}	2
4812	public class A {@Overridepublic void onContainerHostnameChanged(final ContainerHostInfo containerInfo,final String previousHostname,final String currentHostname) {boolean environmentFound = false;ContainerHost containerHost = getContainerHostById(containerInfo.getId());if (containerHost == null) {return;}Set<Environment> environments = getLocalEnvironments();for (Environment environment : environments) {try {EnvironmentContainerImpl environmentContainerHost =(EnvironmentContainerImpl) environment.getContainerHostById(containerInfo.getId());environmentFound = true;updateContainerHostname(environment.getId(), environmentContainerHost.getId(), currentHostname);} catch (ContainerHostNotFoundException e) {} catch (EnvironmentNotFoundException | PeerException e) {break;}}if (!environmentFound && !Common.BAZAAR_ID.equals(containerHost.getInitiatorPeerId())) {try {Peer peer = peerManager.getPeer(containerHost.getInitiatorPeerId());if (peer instanceof RemotePeer) {((RemotePeer) peer).updateContainerHostname(containerHost.getEnvironmentId().getId(), containerHost.getId(), currentHostname);}} catch (PeerException e) {}} else if (!environmentFound) {environmentAdapter.handleHostnameChange(containerInfo, previousHostname, currentHostname);}}}	2
4813	"public class A {private void attemptReconnects() throws IOException {final long now = System.currentTimeMillis();final Map<MemcachedNode, Boolean> seen = new IdentityHashMap<MemcachedNode, Boolean>();final List<MemcachedNode> rereQueue = new ArrayList<MemcachedNode>();SocketChannel ch = null;Iterator<MemcachedNode> i = reconnectQueue.headMap(now).values().iterator();while (i.hasNext()) {final MemcachedNode qa = i.next();i.remove();try {if (qa.getChannel() != null) {continue;}if (!seen.containsKey(qa)) {seen.put(qa, Boolean.TRUE);ch = SocketChannel.open();ch.configureBlocking(false);ch.socket().setTcpNoDelay(!f.useNagleAlgorithm());ch.socket().setReuseAddress(true);int ops = 0;if (ch.connect(qa.getSocketAddress())) {connected(qa);addedQueue.offer(qa);assert ch.isConnected();} else {ops = SelectionKey.OP_CONNECT;}qa.registerChannel(ch, ch.register(selector, ops, qa));assert qa.getChannel() == ch : ""Channel was lost."";} else {}} catch (SocketException e) {rereQueue.add(qa);} catch (Exception e) {} finally {if (ch != null && !ch.isConnected() && !ch.isConnectionPending()) {try {ch.close();} catch (IOException x) {}}}}for (MemcachedNode n : rereQueue) {queueReconnect(n, ReconnDelay.DEFAULT, ""error on reconnect"");}}}"	7
4814	public class A {@Overridepublic INDArray inferSequence(Sequence<T> sequence, long nr, double learningRate, double minLearningRate, int iterations) {AtomicLong nextRandom = new AtomicLong(nr);if (sequence.isEmpty()) return null;Random random =Nd4j.getRandomFactory().getNewRandomInstance(configuration.getSeed() * sequence.hashCode(), lookupTable.layerSize() + 1);INDArray ret =Nd4j.rand(new int[] {1, lookupTable.layerSize()}, random).subi(0.5).divi(lookupTable.layerSize());for (int iter = 0; iter < iterations; iter++) {for (int i = 0; i < sequence.size(); i++) {nextRandom.set(Math.abs(nextRandom.get() * 25214903917L + 11));dm(i,sequence,(int) nextRandom.get() % window,nextRandom,learningRate,null,true,ret,null);}learningRate = ((learningRate - minLearningRate) / (iterations - iter)) + minLearningRate;}finish();return ret;}}	1
4815	"public class A {private void updateFanPower(String[] messageParts) {if (messageParts.length != 4) {if (logger.isDebugEnabled()) {}return;}OnOffType state = ""ON"".equalsIgnoreCase(messageParts[3]) ? OnOffType.ON : OnOffType.OFF;updateChannel(CHANNEL_FAN_POWER, state);fanStateMap.put(CHANNEL_FAN_POWER, state);}}"	2
4816	public class A {void resourceCopyMove(XmldbURI destCollectionUri, String newName, Mode mode)throws EXistException {if (LOG.isDebugEnabled()) {}XmldbURI newNameUri = null;try {newNameUri = XmldbURI.xmldbUriFor(newName);} catch (URISyntaxException ex) {throw new EXistException(ex.getMessage());}XmldbURI srcCollectionUri = xmldbUri;final LockMode srcCollectionLockMode =mode == Mode.MOVE || destCollectionUri.equals(srcCollectionUri)? LockMode.WRITE_LOCK: LockMode.READ_LOCK;final TransactionManager txnManager = brokerPool.getTransactionManager();try (final DBBroker broker = brokerPool.get(Optional.ofNullable(subject));final Txn txn = txnManager.beginTransaction();final Collection srcCollection =broker.openCollection(srcCollectionUri, srcCollectionLockMode)) {if (srcCollection == null) {txnManager.abort(txn);return;}try (final Collection destCollection =broker.openCollection(destCollectionUri, LockMode.WRITE_LOCK)) {if (destCollection == null) {txnManager.abort(txn);return;}if (mode == Mode.COPY) {broker.copyCollection(txn, srcCollection, destCollection, newNameUri);} else {broker.moveCollection(txn, srcCollection, destCollection, newNameUri);}txnManager.commit(txn);if (LOG.isDebugEnabled()) {}}} catch (LockException e) {throw new EXistException(e.getMessage());} catch (EXistException e) {LOG.error(e);throw e;} catch (IOException | PermissionDeniedException | TriggerException e) {throw new EXistException(e.getMessage());} finally {if (LOG.isDebugEnabled()) {}}}}	7
4817	public class A {@Overrideprotected NioSession accept(IoProcessor<NioSession> processor, ServerSocketChannel handle)throws Exception {SelectionKey key = handle.keyFor(selector);if ((key == null) || (!key.isValid()) || (!key.isAcceptable())) {return null;}SocketChannel ch = handle.accept();if (ch == null) {return null;}final NioSocketSession session = new NioSocketSession(this, processor, ch);try {session.initSessionConfig();return session;} catch (RuntimeIoException e) {if (AbstractIoSessionConfig.REPORT_SESSION_CONFIG_FAILURE) {throw e;}if (LOGGER.isDebugEnabled()) {}return null;}}}	1
4818	"public class A {private WonNodeConnection addWonNodeForCrawling(String wonNodeUri, boolean logWonNodeRegisterWarning) {WonNodeConnection con = null;Dataset ds = null;WonNodeInfo nodeInfo = null;try {registrationClient.register(wonNodeUri);ds = linkedDataSource.getDataForPublicResource(URI.create(wonNodeUri));} catch (Exception e) {addFailedWonNode(wonNodeUri, con);if (logWonNodeRegisterWarning) {log.warning(""Error requesting won node information from {}"", wonNodeUri);log.warning(""Exception message: {} \nCause: {} "", e.getMessage(), e.getCause());} else {}return null;}try {sparqlService.updateNamedGraphsOfDataset(ds);nodeInfo = sparqlService.getWonNodeInfoFromDataset(ds);} catch (Exception e) {addFailedWonNode(wonNodeUri, con);log.error(""Exception message: {} \nCause: {} "", e.getMessage(), e.getCause());return null;}try {con = subscribeAtomUpdates(nodeInfo);crawlWonNodes.put(nodeInfo.getWonNodeURI(), con);failedWonNodeUris.remove(nodeInfo.getWonNodeURI());} catch (Exception e) {addFailedWonNode(wonNodeUri, con);}return con;}}"	6
4819	public class A {protected void removeTopicGroupNode(String topic, int group) {ConcurrentMap<Integer, ClusterNode> groupMap = nodeMap.get(topic);if (groupMap == null) {return;}groupMap.remove(group);if (groupMap.isEmpty()) {nodeMap.remove(topic);}}}	1
4820	public class A {@Overridepublic void persist() {String jsonString = this.encode();if (jsonString != null) {String fileName = this.configFilePath;try {FileAndPropertyUtil.string2File(jsonString, fileName);} catch (IOException e) {}}}}	1
4821	"public class A {@Overridepublic void process(Citrus instance) {for (URI gluePath : gluePaths) {String xmlStepConfigLocation =""classpath*:""+ ClasspathSupport.resourceNameOfPackageName(ClasspathSupport.packageName(gluePath))+ ""/**/*Steps.xml"";ApplicationContext ctx;if (instance.getCitrusContext() instanceof CitrusSpringContext) {ctx =new ClassPathXmlApplicationContext(new String[] {xmlStepConfigLocation},true,((CitrusSpringContext) instance.getCitrusContext()).getApplicationContext());} else {ctx = new ClassPathXmlApplicationContext(new String[] {xmlStepConfigLocation}, true);}Map<String, StepTemplate> xmlSteps = ctx.getBeansOfType(StepTemplate.class);for (StepTemplate stepTemplate : xmlSteps.values()) {if (log.isDebugEnabled()) {}glue.addStepDefinition(new XmlStepDefinition(stepTemplate, lookup));}}}}"	2
4822	public class A {private long getMaxMsgIndex(TopicName topic, short partition, int groupId) {try {PartitionGroupStore store = storeService.getStore(topic.getFullName(), groupId);long rightIndex = store.getRightIndex(partition);return rightIndex;} catch (Exception e) {return 0;}}}	1
4823	public class A {public static ILookupTable getExtLookupTable(TableDesc tableDesc, ExtTableSnapshotInfo extTableSnapshot) {IExtLookupTableCache extLookupTableCache =getExtLookupProvider(extTableSnapshot.getStorageType()).getLocalCache();if (extLookupTableCache == null) {return getExtLookupTableWithoutCache(tableDesc, extTableSnapshot);}ILookupTable cachedLookupTable =extLookupTableCache.getCachedLookupTable(tableDesc, extTableSnapshot, true);if (cachedLookupTable != null) {return cachedLookupTable;}return getExtLookupTableWithoutCache(tableDesc, extTableSnapshot);}}	2
4824	public class A {public VersionDocumentsTab submitUpload() {clickElement(startUploadButton);return new VersionDocumentsTab(getDriver());}}	1
4825	"public class A {public static List<ControllerServiceNode> loadControllerServices(final FlowController controller,final InputStream serializedStream,final ProcessGroup parentGroup,final StringEncryptor encryptor,final BulletinRepository bulletinRepo,final boolean autoResumeState)throws IOException {final DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();documentBuilderFactory.setNamespaceAware(true);try (final InputStream in = new BufferedInputStream(serializedStream)) {final DocumentBuilder builder = documentBuilderFactory.newDocumentBuilder();builder.setErrorHandler(new org.xml.sax.ErrorHandler() {@Overridepublic void fatalError(final SAXParseException err) throws SAXException {logger.error(""Config file line ""+ err.getLineNumber()+ "", col ""+ err.getColumnNumber()+ "", uri ""+ err.getSystemId()+ "" :message: ""+ err.getMessage());if (logger.isDebugEnabled()) {logger.error(""Error Stack Dump"", err);}throw err;}@Overridepublic void error(final SAXParseException err) throws SAXParseException {if (logger.isDebugEnabled()) {}throw err;}@Overridepublic void warning(final SAXParseException err) throws SAXParseException {if (logger.isDebugEnabled()) {}throw err;}});final Document document = builder.parse(in);final Element controllerServices = document.getDocumentElement();final List<Element> serviceElements =DomUtils.getChildElementsByTagName(controllerServices, ""controllerService"");final Map<ControllerServiceNode, Element> controllerServiceMap =ControllerServiceLoader.loadControllerServices(serviceElements, controller, parentGroup, encryptor);enableControllerServices(controllerServiceMap, controller, encryptor, autoResumeState);return new ArrayList<>(controllerServiceMap.keySet());} catch (SAXException | ParserConfigurationException sxe) {throw new IOException(sxe);}}}"	4
4826	public class A {public void createAndScheduleJob(final Class<? extends Job> jobClass, final String cronExpression, final TimeZone timeZone)throws SchedulerException {final JobDetail jobDetail = this.createJobDetail(jobClass);final Trigger trigger = this.createJobTrigger(jobDetail, cronExpression, timeZone);this.quartzScheduler.addJob(jobDetail, true);this.quartzScheduler.scheduleJob(jobDetail, new HashSet<>(Arrays.asList(trigger)), true);}}	1
4827	public class A {public void updateOrderTopicConfig(final KVTable orderKVTableFromNs) {if (orderKVTableFromNs != null && orderKVTableFromNs.getTable() != null) {boolean isChange = false;Set<String> orderTopics = orderKVTableFromNs.getTable().keySet();for (String topic : orderTopics) {TopicConfig topicConfig = this.topicConfigTable.get(topic);if (topicConfig != null && !topicConfig.isOrder()) {topicConfig.setOrder(true);isChange = true;}}for (Map.Entry<String, TopicConfig> entry : this.topicConfigTable.entrySet()) {String topic = entry.getKey();if (!orderTopics.contains(topic)) {TopicConfig topicConfig = entry.getValue();if (topicConfig.isOrder()) {topicConfig.setOrder(false);isChange = true;}}}if (isChange) {this.dataVersion.nextVersion();this.persist();}}}}	2
4828	"public class A {@Testpublic void testCreateFileSharedLink() throws Exception {final Map<String, Object> headers = new HashMap<>();headers.put(""CamelBox.fileId"", testFile.getID());headers.put(""CamelBox.access"", BoxSharedLink.Access.DEFAULT);headers.put(""CamelBox.unshareDate"", null);headers.put(""CamelBox.permissions"", null);final com.box.sdk.BoxSharedLink result =requestBodyAndHeaders(""direct://CREATEFILESHAREDLINK"", null, headers);assertNotNull(result, ""createFileSharedLink result"");}}"	1
4829	public class A {@Overridepublic T withHandle(Handle handle) throws Exception {final Connection connection = handle.getConnection();final boolean readOnly = connection.isReadOnly();connection.setReadOnly(true);try {return handle.inTransaction(callback);} finally {try {connection.setReadOnly(readOnly);} catch (SQLException e) {}}}}	1
4830	"public class A {public static void main(String[] args) throws NamingException, MalformedURLException {String wsdlUrl = ""http://localhost:8080/helloworld-classfiletransformers/HelloBean?wsdl"";Hello webServiceClient = createClient(wsdlUrl, Hello.class);String result = webServiceClient.sayHello(""client"");}}"	1
4831	"public class A {@RuleAction(label = ""resume the program"",description =""Removes the currently running event providing the event is not a mandatory demand""+ "" response event"")public @ActionOutput(name = ""success"", type = ""java.lang.Boolean"") Boolean resumeProgram(@ActionInput(name = ""resumeAll"",description =""(opt) Should the thermostat be resumed to next event (false) or to its program""+ "" (true)"")@NullableBoolean resumeAll) {EcobeeThermostatBridgeHandler localHandler = handler;if (localHandler == null) {return false;}ResumeProgramFunction function = new ResumeProgramFunction(resumeAll);return localHandler.actionPerformFunction(function);}}"	2
4832	"public class A {@Overridepublic boolean done() {int sz = pool.getConnectedServerCount();if (sz == expectedLiveServers) {return true;}excuse = ""Expected "" + expectedLiveServers + "" but found "" + sz;return false;}}"	1
4833	"public class A {protected Set<String> getCommitElasticIDs(String projectId) {Set<String> commitIds = new HashSet<>();pgh = new PostgresHelper();pgh.setProject(projectId);List<Map<String, String>> commits = pgh.getAllCommits();for (Map<String, String> commit : commits) {commitIds.add(commit.get(""commitId""));}pgh.close();return commitIds;}}"	1
4834	public class A {public static void deletePortrait(long userId) throws RemoteException {try {UserServiceUtil.deletePortrait(userId);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4835	"public class A {private FileModel getCustomModel(String fileName) {FileModel customModel = null;try {if ((fileName != null) && (fileName.endsWith(""-model.xml""))) {Session session =contentService.getCMISSession(dataUser.getAdminUser().getUsername(), dataUser.getAdminUser().getPassword());CmisObject modelInRepo =session.getObjectByPath(String.format(""/Data Dictionary/Models/%s"", fileName));if (modelInRepo != null) {customModel = new FileModel(modelInRepo.getName());customModel.setNodeRef(modelInRepo.getId());customModel.setNodeRef(customModel.getNodeRefWithoutVersion());customModel.setCmisLocation(String.format(""/Data Dictionary/Models/%s"", fileName));} else {}}} catch (Exception e) {}return customModel;}}"	3
4836	public class A {@Overridepublic void warn(final String message) {if (builder == null) {} else {builder.startElement(WARN_ELEMENT, null);builder.characters(message);builder.endElement();}}}	1
4837	"public class A {@NotNullpublic Status getStatus() {if (isCancelled()) {return failed(this, name + "" cancelled"");} else if (isDone()) {try {R result = get();return succeeded(this, name + "" succeeded"" + (result != null ? "": "" + result : """"));} catch (InterruptedException e) {currentThread().interrupt();return failed(this, name + "" interrupted: "" + e.getMessage());} catch (ExecutionException e) {return failed(this, name + "" failed: "" + e.getCause().getMessage());}} else {return running(this, name + "" running: "" + statusMessage.get());}}}"	1
4838	"public class A {@Testpublic void testRenderTaskFormViaUIClientTest() throws Exception {changeUser(USER_JOHN);Map<String, Object> parameters = new HashMap<>();parameters.put(""name"", ""john"");parameters.put(""age"", 33);parameters.put(""mail"", ""john@doe.org"");long processInstanceId =processClient.startProcess(CONTAINER_ID, HIRING_2_PROCESS_ID, parameters);try {List<TaskSummary> tasks =taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, null, 0, 10);assertThat(tasks).isNotNull().hasSize(1);Long taskId = tasks.get(0).getId();parameters.put(""out_age"", 33);parameters.put(""out_mail"", ""john@doe.org"");taskClient.completeAutoProgress(CONTAINER_ID, taskId, USER_JOHN, parameters);tasks = taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, null, 0, 10);assertThat(tasks).isNotNull().hasSize(1);taskId = tasks.get(0).getId();taskClient.completeAutoProgress(CONTAINER_ID, taskId, USER_JOHN, parameters);tasks = taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, null, 0, 10);assertThat(tasks).isNotNull().hasSize(1);taskId = tasks.get(0).getId();String result = uiServicesClient.renderTaskForm(CONTAINER_ID, taskId);assertThat(result).isNotNull().isNotEmpty();assertThat(result).contains(""/files/patternfly/css/patternfly.min.css\"" rel=\""stylesheet\"">"");assertThat(result).contains(""/files/patternfly/css/patternfly-additions.min.css\"" rel=\""stylesheet\"">"");assertThat(result).contains(""/files/patternfly/js/jquery.min.js\""></script>"");assertThat(result).contains(""/files/patternfly/js/patternfly.min.js\""></script>"");assertThat(result).contains(""/files/js/kieserver-ui.js\""></script>"");assertThat(result).contains(""<h3 class=\""panel-title\"">CreateProposal-taskform.frm</h3>"");assertThat(result).contains(""<input name=\""offering\"" type=\""text\"" class=\""form-control\""""+ "" id=\""field_3367047850452004E12\"" placeholder=\""\"" value=\""\""""+ "" pattern=\""^\\d+$\""  >"");assertThat(result).contains(""<input name=\""tech_score\"" type=\""text\"" class=\""form-control\""""+ "" id=\""field_4298972052332983E11\"" placeholder=\""\"" value=\""\""""+ "" pattern=\""^\\d+$\""  >"");assertThat(result).contains(""<input name=\""hr_score\"" type=\""text\"" class=\""form-control\""""+ "" id=\""field_800259544288992E11\"" placeholder=\""\"" value=\""\""""+ "" pattern=\""^\\d+$\""  >"");assertThat(result).contains(""<button id=\""claimButton\"" type=\""button\"" class=\""btn btn-default\""""+ "" onclick=\""claimTask();\"">Claim</button>"");assertThat(result).contains(""<button id=\""releaseButton\"" type=\""button\"" class=\""btn btn-default\""""+ "" onclick=\""releaseTask();\"">Release</button>"");assertThat(result).contains(""<button id=\""startButton\"" type=\""button\"" class=\""btn btn-default\""""+ "" onclick=\""startTask();\"">Start</button>"");assertThat(result).contains(""<button id=\""stopButton\"" type=\""button\"" class=\""btn btn-default\""""+ "" onclick=\""stopTask();\"">Stop</button>"");assertThat(result).contains(""<button id=\""saveButton\"" type=\""button\"" class=\""btn btn-default\""""+ "" onclick=\""saveTask();\"">Save</button>"");assertThat(result).contains(""<button id=\""completeButton\"" type=\""button\"" class=\""btn btn-primary\""""+ "" onclick=\""completeTask();\"">Complete</button>"");} finally {changeUser(USER_YODA);processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);}}}"	1
4839	"public class A {private static String getKeycloakConfigFromFile(Settings authSettings) {String keycloakConfigFile = authSettings.get(TAG_KEYCLOAK_CONFIG_FILE, """");if (StringHelper.isNullOrEmpty(keycloakConfigFile)) {return """";}try {return FileUtils.readFileToString(FileUtils.getFile(keycloakConfigFile), StringHelper.UTF8);} catch (IOException exc) {return """";}}}"	1
4840	public class A {private boolean isIterationCompleted() {if (lastScannedInfo == null) {return true;}if (lastScannedInfo.getDirectoryPath() == null) {return true;}Map<String, Long> referenceTime = referenceTimes.get(lastScannedInfo.getDirectoryPath());if (referenceTime != null) {return referenceTime.get(lastScannedInfo.getFilePath()) != null;}return false;}}	1
4841	public class A {@Overridepublic boolean callBrokerMessagePluginsCanAccept(ServerConsumer serverConsumer, MessageReference messageReference) throws ActiveMQException {for (ActiveMQServerMessagePlugin plugin : getBrokerMessagePlugins()) {try {if (!plugin.canAccept(serverConsumer, messageReference)) {return false;}} catch (Throwable e) {if (e instanceof ActiveMQException) {throw (ActiveMQException) e;} else {}}}return true;}}	2
4842	public class A {public synchronized void stopAgent() {if (!this.running) {return;}if (logger.isDebugEnabled()) {}try {jmxConnectorServer.stop();UnicastRemoteObject.unexportObject(registry, true);} catch (Exception e) {throw new ManagementException(e);}this.running = false;}}	1
4843	public class A {public void verifyDigest() {try {final DigestVerifierEnumerator dv = new DigestVerifierEnumerator();final List<LibraryId> verified = dv.verify(this);if (verified != null) {this.setDigestVerificationUrl(dv.getVerificationUrl());this.setWellknownDigest(verified.size() > 0);this.setDigestTimestamp(dv.getReleaseTimestamp());if (this.getLibraryId() != null&& verified.size() > 0&& !verified.contains(this.getLibraryId())) {this.setLibraryId(verified.get(0));}}} catch (VerificationException e) {}}}	1
4844	"public class A {protected String getFirmwareUrl(String deviceIp, String deviceType, String mode, String version, boolean local)throws ShellyApiException {switch (version) {case FWPROD:case FWBETA:boolean prod = version.equals(FWPROD);if (!local) {return prod ? ""update=true"" : ""beta=true"";} else {FwRepoEntry fw = getFirmwareRepoEntry(deviceType, mode);String url = getString(prod ? fw.url : fw.betaUrl);return url;}default:FwArchList list = getFirmwareArchiveList(deviceType);ArrayList<FwArchEntry> versions = list.versions;if (versions != null) {for (FwArchEntry e : versions) {String url = FWREPO_ARCFILE_URL + version + ""/"" + getString(e.file);if (getString(e.version).equalsIgnoreCase(version)) {return url;}}}}return """";}}"	1
4845	"public class A {public static java.util.List<com.liferay.depot.model.DepotEntry> getGroupConnectedDepotEntries(HttpPrincipal httpPrincipal, long groupId, boolean ddmStructuresAvailable, int start, int end)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DepotEntryServiceUtil.class,""getGroupConnectedDepotEntries"",_getGroupConnectedDepotEntriesParameterTypes3);MethodHandler methodHandler =new MethodHandler(methodKey, groupId, ddmStructuresAvailable, start, end);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<com.liferay.depot.model.DepotEntry>) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4846	public class A {private static Proxy createManualProxy(String proxyProperty) {String proxyString = getProxyURL(proxyProperty);Proxy proxy = new Proxy();proxy.setProxyType(Proxy.ProxyType.MANUAL).setHttpProxy(proxyString).setFtpProxy(proxyString).setSslProxy(proxyString);return proxy;}}	1
4847	"public class A {protected void checkComponentConfiguration(String namespaceName,String podNamePrefix,String containerName,String configKey,Map<String, Object> config) {List<Pod> pods = kubeClient(namespaceName).listPodsByPrefixInName(podNamePrefix);if (pods.size() != 0) {Map<String, Object> actual =pods.stream().flatMap(p -> p.getSpec().getContainers().stream()).filter(c -> c.getName().equals(containerName)).flatMap(c -> c.getEnv().stream().filter(envVar -> envVar.getName().equals(configKey))).map(envVar -> StUtils.loadProperties(envVar.getValue())).collect(Collectors.toList()).get(0);assertThat(actual.entrySet().containsAll(config.entrySet()), is(true));} else {fail(""Pod with prefix "" + podNamePrefix + "" in name, not found"");}}}"	2
4848	public class A {private void logNotSupportedVersion(String version) {}}	1
4849	public class A {private void hideElements(By locator, boolean leaveBlankSpace) throws ProcessingException {String script = retrieveHidingScript(leaveBlankSpace);SeleniumWaitHelper.waitForElementToBePresent(webDriver, locator, getTimeoutInSeconds());List<WebElement> webElements = webDriver.findElements(locator);for (WebElement element : webElements) {jsExecutor.execute(script, element);}}}	1
4850	"public class A {@Test@Transactionalpublic void testVnaImport() throws Exception {importVna();String hql = ""select element.uuid from CnATreeElement element where element.sourceId = ?"";Object[] params = new Object[] {SOURCE_ID};List<String> importedUuids = elementDao.findByQuery(hql, params);assertEquals(""number of imported elements is not: "" + NUMBER_OF_IMPORTED_ELEMENTS,NUMBER_OF_IMPORTED_ELEMENTS,importedUuids.size());}}"	1
4851	"public class A {public static void createAndLaunchExp() throws TException {List<String> experimentIds = new ArrayList<String>();try {for (int i = 0; i < 1; i++) {final String expId = createMPIExperimentForFSD(airavataClient);experimentIds.add(expId);System.out.println(""Experiment ID : "" + expId);launchExperiment(airavataClient, expId);}Thread.sleep(10000);for (String exId : experimentIds) {ExperimentModel experiment = airavataClient.getExperiment(new AuthzToken(""""), exId);System.out.println(experiment.getExperimentId()+ "" ""+ experiment.getExperimentStatus().get(0).getState().name());}} catch (Exception e) {e.printStackTrace();}}}"	1
4852	public class A {@Overridepublic void onError(NetworkError error) {if (error.status != 200 && legacyMode == Constants.INT_UNDEF) {proxy.get().requestLegacyVehcileStatus(configuration.get(), oldVehicleStatusCallback);}vehicleStatusCache = Optional.of(Converter.getGson().toJson(error));updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, error.reason);removeCallback(this);}}	2
4853	"public class A {public static int getCommerceTaxMethodFixedRateAddressRelsCount(HttpPrincipal httpPrincipal, long groupId, long commerceTaxMethodId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommerceTaxFixedRateAddressRelServiceUtil.class,""getCommerceTaxMethodFixedRateAddressRelsCount"",_getCommerceTaxMethodFixedRateAddressRelsCountParameterTypes5);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, commerceTaxMethodId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Integer) returnObj).intValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4854	public class A {public static com.liferay.portal.kernel.repository.model.FileEntrySoapgetFileEntryByExternalReferenceCode(long groupId, String externalReferenceCode)throws RemoteException {try {com.liferay.portal.kernel.repository.model.FileEntry returnValue =DLAppServiceUtil.getFileEntryByExternalReferenceCode(groupId, externalReferenceCode);return com.liferay.portal.kernel.repository.model.FileEntrySoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4855	public class A {@Overridepublic void addStyles(Collection<JRStyle> stylesList) {for (JRStyle style : stylesList) {if (styles.containsKey(style.getName())) {} else {if (log.isDebugEnabled()) {}styles.put(style.getName(), style);}}}}	2
4856	public class A {@Overridepublic boolean find(final Path file, final ListProgressListener listener)throws BackgroundException {if (Files.isSymbolicLink(session.toPath(file))) {return Files.exists(session.toPath(file), LinkOption.NOFOLLOW_LINKS);}final boolean exists = session.toPath(file).toFile().exists();if (exists) {if (!file.isRoot()) {try {if (!StringUtils.equals(session.toPath(file).toFile().getCanonicalFile().getName(), file.getName())) {return false;}} catch (IOException e) {}}}return exists;}}	1
4857	"public class A {public final Statement stopBouncing(final Statement next) {return new Statement() {@Overridepublic void evaluate() throws Throwable {try {next.evaluate();} finally {testRunning.set(false);try {bouncingMembersTask.get();} catch (Exception e) {LOGGER.warning(""Member bouncing thread failed to stop."", e);}}}};}}"	2
4858	"public class A {public void testGroupByVirtual() throws Exception {SenseiRequest req = new SenseiRequest();req.setCount(1);req.setGroupBy(new String[] {""virtual_groupid""});SenseiResult res = broker.browse(req);SenseiHit hit = res.getSenseiHits()[0];assertTrue(hit.getGroupHitsCount() > 0);}}"	2
4859	"public class A {protected static SoakParams getParams(final String fileName) throws Exception {Properties props = null;try (InputStream is = new FileInputStream(fileName)) {props = new Properties();props.load(is);}int durationInMinutes = Integer.valueOf(props.getProperty(""duration-in-minutes""));int noOfWarmupMessages = Integer.valueOf(props.getProperty(""num-warmup-messages""));int messageSize = Integer.valueOf(props.getProperty(""message-size""));boolean durable = Boolean.valueOf(props.getProperty(""durable""));boolean transacted = Boolean.valueOf(props.getProperty(""transacted""));int batchSize = Integer.valueOf(props.getProperty(""batch-size""));boolean drainQueue = Boolean.valueOf(props.getProperty(""drain-queue""));String destinationLookup = props.getProperty(""destination-lookup"");String connectionFactoryLookup = props.getProperty(""connection-factory-lookup"");int throttleRate = Integer.valueOf(props.getProperty(""throttle-rate""));boolean dupsOK = Boolean.valueOf(props.getProperty(""dups-ok-acknowledge""));boolean disableMessageID = Boolean.valueOf(props.getProperty(""disable-message-id""));boolean disableTimestamp = Boolean.valueOf(props.getProperty(""disable-message-timestamp""));SoakParams soakParams = new SoakParams();soakParams.setDurationInMinutes(durationInMinutes);soakParams.setNoOfWarmupMessages(noOfWarmupMessages);soakParams.setMessageSize(messageSize);soakParams.setDurable(durable);soakParams.setSessionTransacted(transacted);soakParams.setBatchSize(batchSize);soakParams.setDrainQueue(drainQueue);soakParams.setConnectionFactoryLookup(connectionFactoryLookup);soakParams.setDestinationLookup(destinationLookup);soakParams.setThrottleRate(throttleRate);soakParams.setDisableMessageID(disableMessageID);soakParams.setDisableTimestamp(disableTimestamp);soakParams.setDupsOK(dupsOK);return soakParams;}}"	13
4860	public class A {@Overridepublic void registerMulticastSubscription(String fromParticipantId,Set<DiscoveryEntryWithMetaInfo> toDiscoveryEntries,final MulticastSubscribeInvocation multicastSubscribeInvocation) {List<MulticastInformation> multicastInformationList = new ArrayList<>();for (DiscoveryEntryWithMetaInfo toDiscoveryEntry : toDiscoveryEntries) {final String multicastId =MulticastIdUtil.createMulticastId(toDiscoveryEntry.getParticipantId(),multicastSubscribeInvocation.getSubscriptionName(),multicastSubscribeInvocation.getPartitions());multicastInformationList.add(new MulticastInformation(multicastId, fromParticipantId, toDiscoveryEntry.getParticipantId()));registerSubscription(fromParticipantId,toDiscoveryEntries,multicastSubscribeInvocation,new RegisterDataAndCreateSubscriptionRequest() {@Overridepublic SubscriptionRequest execute() {String subscriptionId = multicastSubscribeInvocation.getSubscriptionId();Pattern multicastIdPattern =multicastWildcardRegexFactory.createIdPattern(multicastId);if (!multicastSubscribersDirectory.containsKey(multicastIdPattern)) {multicastSubscribersDirectory.putIfAbsent(multicastIdPattern, new HashSet<String>());}multicastSubscribersDirectory.get(multicastIdPattern).add(subscriptionId);multicastBroadcastTypes.putIfAbsent(multicastIdPattern, multicastSubscribeInvocation.getOutParameterTypes());broadcastSubscriptionListenerDirectory.put(subscriptionId, multicastSubscribeInvocation.getListener());multicastReceiverRegistrar.addMulticastReceiver(multicastId, fromParticipantId, toDiscoveryEntry.getParticipantId());return new MulticastSubscriptionRequest(multicastId,multicastSubscribeInvocation.getSubscriptionId(),multicastSubscribeInvocation.getSubscriptionName(),multicastSubscribeInvocation.getQos());}});}subscriptionIdToMulticastInformationMap.put(multicastSubscribeInvocation.getSubscriptionId(), multicastInformationList);}}	2
4861	public class A {@Overridepublic void log(Marker marker,String fqcn,int level,String message,Object[] arguments,Throwable throwable) {FormattingTuple formattingTuple = MessageFormatter.arrayFormat(message, arguments);if (level == LocationAwareLogger.DEBUG_INT) {} else if (level == LocationAwareLogger.ERROR_INT) {} else if (level == LocationAwareLogger.TRACE_INT) {} else if (level == LocationAwareLogger.WARN_INT) {} else {}}}	5
4862	public class A {private void logFail(String format, Object... arguments) {if (logFailsAsErrors) {} else {}}}	2
4863	"public class A {private void doGenerate(List<Result> results) throws Exception {if (isDebugEnabled() && generate) {StringBuilder sb = new StringBuilder(""\n"");List<String> keys = new ArrayList<>();for (Result res : results) {if (isNumeric(res.getValue())) {String key =getDataSourceName(getConcatedTypeNameValues(res.getTypeName()),res.getAttributeName(),res.getValuePath());if (keys.contains(key)) {throw new Exception(""Duplicate datasource name found: '""+ key+ ""'. Please try to add more typeName keys to the writer to make the name more""+ "" unique. ""+ res.toString());}keys.add(key);sb.append(""<datasource><!-- "").append(res.getTypeName()).append("":"").append(res.getAttributeName()).append("":"").append(res.getValuePath()).append("" --><name>"").append(key).append(""</name><type>GAUGE</type><heartbeat>400</heartbeat><min>U</min><max>U</max></datasource>\n"");}}}}}"	1
4864	"public class A {public String out(String paramName, int escape, int length, int scope) throws ParseException {try {Object str = getValue(paramName, Object.class, """", scope);if (str == null) {return """";} else if (str != null && str instanceof String) {if (escape == ESCAPE_CLEAR) {str = SanitizingLogic.get().sanitize((String) str);} else if (escape == ESCAPE_HTML) {str = HtmlUtils.escapeHTML((String) str);} else if (escape == ESCAPE_URL) {str = HtmlUtils.escapeURL((String) str);}}if (length > 0) {String s = str.toString();if (escape == ESCAPE_CLEAR) {if (s.length() > 4) {StringBuilder builder = new StringBuilder();int count = 0;boolean tagstart = false;boolean endtagstart = false;for (int i = 0; i < s.length(); i++) {String c = s.substring(i, i + 1);if (""<"".equals(c)) {tagstart = true;} else if (endtagstart && "">"".equals(c)) {tagstart = false;endtagstart = false;} else {if (tagstart && ""/"".equals(c)) {endtagstart = true;}}if (!tagstart) {count++;}builder.append(c);if (count + 3 >= length) {break;}}if (count + 3 >= length) {builder.append(""..."");}return builder.toString();}} else {return StringUtils.abbreviate(s, length);}}return str.toString();} catch (Exception e) {throw new SystemException(e);}}}"	1
4865	"public class A {public static String encodeUrl(String toBeEncoded) {String encoded = toBeEncoded;try {encoded = URLEncoder.encode(toBeEncoded, ""UTF-8"");} catch (UnsupportedEncodingException e1) {}return encoded;}}"	1
4866	public class A {@Override@Transactionalpublic Task importTask(String json) throws IOException {ObjectMapper mapper = new ObjectMapper();JsonNode node = mapper.readTree(json);removeIgnoredFields(node);Task task = mapper.readValue(node, Task.class);taskMigrationManager.migrateTask(task);save(task);return task;}}	2
4867	"public class A {@Testpublic void proxyApiAccess() {ProxyConfig.ProxyConfigBuilder proxy = new ProxyConfig.ProxyConfigBuilder();proxy.useSSL(true);proxy.setHost(""localhost"");proxy.setPort(proxyPort);proxy.setUser(PROXY_USER);proxy.setPassword(PROXY_PASS);TDClient client = TDClient.newBuilder().setProxy(proxy.createProxyConfig()).build();try {client.serverStatus();List<TDTable> tableList = client.listTables(""sample_datasets"");assertTrue(tableList.size() >= 2);TDJobList jobList = client.listJobs();assertTrue(jobList.getJobs().size() > 0);} finally {assertEquals(1, proxyAccessCount.get());}}}"	1
4868	public class A {@Overrideprotected void parseDense(final Osmformat.DenseNodes nodes) {long lastId = 0;long lastLat = 0;long lastLon = 0;long lastTimestamp = 0;long lastChangeset = 0;int lastUid = 0;int lastSid = 0;int tagLocation = 0;for (int i = 0; i < nodes.getIdCount(); i++) {final AvroNode n = new AvroNode();final AvroPrimitive p = new AvroPrimitive();lastId += nodes.getId(i);lastLat += nodes.getLat(i);lastLon += nodes.getLon(i);p.setId(lastId);n.setLatitude(parseLat(lastLat));n.setLongitude(parseLon(lastLon));if (nodes.getKeysValsCount() > 0) {final Map<String, String> tags = new HashMap<>(nodes.getKeysValsCount());while (nodes.getKeysVals(tagLocation) > 0) {final String k = getStringById(nodes.getKeysVals(tagLocation));tagLocation++;final String v = getStringById(nodes.getKeysVals(tagLocation));tagLocation++;tags.put(k, v);}p.setTags(tags);}if (nodes.hasDenseinfo()) {final Osmformat.DenseInfo di = nodes.getDenseinfo();lastTimestamp += di.getTimestamp(i);lastChangeset += di.getChangeset(i);lastUid += di.getUid(i);lastSid += di.getUserSid(i);p.setTimestamp(lastTimestamp);p.setChangesetId(lastChangeset);p.setUserId((long) lastUid);p.setUserName(getStringById(lastSid));if (di.getVisibleCount() > 0) {p.setVisible(di.getVisible(i));}}n.setCommon(p);try {nodeWriter.append(n);} catch (final IOException e) {}}}}	1
4869	"public class A {@Overrideprotected void process(DBKey dbKey, HttpServletRequest req, HttpServletResponse resp)throws IOException {String suiteName = req.getParameter(Helper.SUITE_PARAM);resp.setCharacterEncoding(""UTF-8"");List<SuiteVersion> suiteVersions = null;try {if (isValidName(suiteName)) {suiteVersions = metadataDAO.listSuiteVersions(dbKey, suiteName);if (suiteVersions.size() > 0) {String result = PRETTY_PRINT_GSON.toJson(suiteVersions);resp.setContentType(""application/json"");resp.getWriter().write(result);} else {resp.setStatus(HttpURLConnection.HTTP_NOT_FOUND);resp.getWriter().write(responseAsJson(PRETTY_PRINT_GSON,""History not found for suite: %s %s"",suiteName,dbKey.toString()));}} else {resp.setStatus(HttpURLConnection.HTTP_BAD_REQUEST);resp.getWriter().write(responseAsJson(PRETTY_PRINT_GSON, ""Invalid suite param was specified.""));}} catch (StorageException e) {resp.setStatus(HttpURLConnection.HTTP_BAD_REQUEST);resp.getWriter().write(responseAsJson(PRETTY_PRINT_GSON, ""Failed to get history of suite: %s"", e.getMessage()));}}}"	1
4870	"public class A {@Overridepublic void onMessage(final Message m) {try {Destination queue = m.getJMSReplyTo();Message m2 = sess.createTextMessage(""This is the response"");sender.send(queue, m2);} catch (JMSException e) {}}}"	1
4871	"public class A {public static void shutdown(String databaseName) {boolean shutdown = false;try {Properties properties = new Properties();DerbyPropertyAdapter adapter = new DerbyPropertyAdapter(properties);adapter.setDatabase(databaseName);final String dropper = DERBY_TRANSLATOR.getUrl(properties) + "";shutdown=true"";DriverManager.getConnection(dropper);} catch (SQLException e) {shutdown = true;}if (!shutdown) {throw new IllegalStateException(""Derby database not shut down: '"" + databaseName + ""'"");}}}"	2
4872	"public class A {private void balanceTier(DruidCoordinatorRuntimeParams params,String tier,SortedSet<ServerHolder> servers,CoordinatorStats stats) {if (params.getUsedSegments().size() == 0) {return;}currentlyMovingSegments.computeIfAbsent(tier, t -> new ConcurrentHashMap<>());if (!currentlyMovingSegments.get(tier).isEmpty()) {reduceLifetimes(tier);return;}Map<Boolean, List<ServerHolder>> partitions =servers.stream().collect(Collectors.partitioningBy(ServerHolder::isDecommissioning));final List<ServerHolder> decommissioningServers = partitions.get(true);final List<ServerHolder> activeServers = partitions.get(false);if ((decommissioningServers.isEmpty() && activeServers.size() <= 1)|| activeServers.isEmpty()) {return;}int numSegments = 0;for (ServerHolder sourceHolder : servers) {numSegments += sourceHolder.getServer().getNumSegments();}if (numSegments == 0) {return;}final int maxSegmentsToMove =Math.min(params.getCoordinatorDynamicConfig().getMaxSegmentsToMove(), numSegments);int decommissioningMaxPercentOfMaxSegmentsToMove =params.getCoordinatorDynamicConfig().getDecommissioningMaxPercentOfMaxSegmentsToMove();int maxSegmentsToMoveFromDecommissioningNodes =(int) Math.ceil(maxSegmentsToMove * (decommissioningMaxPercentOfMaxSegmentsToMove / 100.0));Pair<Integer, Integer> decommissioningResult =balanceServers(params,decommissioningServers,activeServers,maxSegmentsToMoveFromDecommissioningNodes);int maxGeneralSegmentsToMove = maxSegmentsToMove - decommissioningResult.lhs;Pair<Integer, Integer> generalResult =balanceServers(params, activeServers, activeServers, maxGeneralSegmentsToMove);int moved = generalResult.lhs + decommissioningResult.lhs;int unmoved = generalResult.rhs + decommissioningResult.rhs;if (unmoved == maxSegmentsToMove) {}stats.addToTieredStat(""unmovedCount"", tier, unmoved);stats.addToTieredStat(""movedCount"", tier, moved);if (params.getCoordinatorDynamicConfig().emitBalancingStats()) {final BalancerStrategy strategy = params.getBalancerStrategy();strategy.emitStats(tier, stats, Lists.newArrayList(servers));}}}"	9
4873	public class A {void updateRmiClientsCount() {int noOfClientsConnected = 0;String[] connectionIds = this.rmiConnector.getConnectionIds();if (connectionIds != null) {noOfClientsConnected = connectionIds.length;}AdminDistributedSystemJmxImpl adminDSJmx = (AdminDistributedSystemJmxImpl) this.system;adminDSJmx.setRmiClientCountZero(noOfClientsConnected == 0);}}	1
4874	public class A {public void attachClean(MYesno instance) {try {sessionFactory.getCurrentSession().lock(instance, LockMode.NONE);} catch (RuntimeException re) {throw re;}}}	3
4875	"public class A {@Overridepublic void handleConfigurationUpdate(Map<String, Object> configurationParameters) {SensorConfigUpdate configUpdate = doConfigurationUpdate(configurationParameters);if (configurationParameters.containsKey(CONFIG_ON)) {configUpdate.setOn(Boolean.TRUE.equals(configurationParameters.get(CONFIG_ON)));}if (!configUpdate.isEmpty()) {HueClient hueBridge = getHueClient();if (hueBridge == null) {return;}final FullSensor sensor = lastFullSensor;if (sensor == null) {updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.CONFIGURATION_ERROR,""@text/offline.conf-error-wrong-sensor-id"");return;}hueBridge.updateSensorConfig(sensor, configUpdate);}super.handleConfigurationUpdate(configurationParameters);}}"	2
4876	public class A {@Overridepublic List<Authority> getAuthorities() {return null;}}	1
4877	public class A {@Overridepublic void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e) throws Exception {if (cfg.isSSLEnabled() && !channelClosedExplicitly && !channelManager.isClosed()) {ctx.getPipeline().get(SslHandler.class).handshake(e.getChannel());}}}	1
4878	public class A {@NotNullprivate static Preferences loadDefault() {return new Preferences();}}	1
4879	"public class A {@Testpublic void testAddNovoAlignWorkflow() {String name = ""novoalign"";String version = ""0.13.6.2"";String description = ""Novoalign"";String baseCommand =""java -jar /u/seqware/provisioned-bundles/sqwprod/""+ ""Workflow_Bundle_GATKRecalibrationAndVariantCalling_1.2.29_""+ ""SeqWare_0.10.0/GATKRecalibrationAndVariantCalling/1.x.x/lib/""+ ""seqware-pipeline-0.10.0.jar --plugin net.sourceforge.seqware.""+ ""pipeline.plugins.WorkflowLauncher -- --bundle /u/seqware/""+ ""provisioned-bundles/sqwprod/Workflow_Bundle_GATKRecalibration""+ ""AndVariantCalling_1.2.29_SeqWare_0.10.0 --workflow GATK""+ ""RecalibrationAndVariantCalling --version 1.3.16"";java.io.File configFile = null, templateFile = null;try {configFile = new java.io.File(MetadataWSTest.class.getResource(""novoalign.ini"").toURI());templateFile =new java.io.File(MetadataWSTest.class.getResource(""GATKRecalibrationAndVariantCalling_1.3.16.ftl"").toURI());} catch (URISyntaxException e) {e.printStackTrace();}java.io.File provisionDir =new java.io.File(""/u/seqware/provisioned-bundles""+ ""/sqwprod/Workflow_Bundle_GATKRecalibrationAndVariantCalling_""+ ""1.2.29_SeqWare_0.10.0/"");int expResult = ReturnValue.SUCCESS;ReturnValue result =instance.addWorkflow(name,version,description,baseCommand,configFile.getAbsolutePath(),templateFile.getAbsolutePath(),provisionDir.getAbsolutePath(),true,"""",false,null,null,null,null);Assert.assertEquals(expResult, result.getExitStatus());String workflow_id = result.getAttribute(""sw_accession"");Workflow workflow = instance.getWorkflow(Integer.valueOf(workflow_id));Assert.assertTrue(""workflow retrieved is invalid"", workflow.getWorkflowId() == result.getReturnValue());SortedSet<WorkflowParam> workflowParams = instance.getWorkflowParams(workflow_id);Assert.assertTrue(""invalid number of workflow params retrieved, found "" + workflowParams.size(),workflowParams.size() == 34);for (WorkflowParam param : workflowParams) {switch (param.getKey()) {case ""colorspace"":Assert.assertTrue(""colorspace invalid"", param.getDefaultValue().equals(""0""));break;case ""novoalign_r1_adapter_trim"":Assert.assertTrue(""novoalign_r1_adapter_trim invalid"",param.getDefaultValue().equals(""-a AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCG""));break;}}}}"	1
4880	"public class A {@Execute@Secured({ROLE})public HtmlResponse install(final InstallForm form) {validate(form, messages -> {}, () -> asHtml(path_AdminPlugin_AdminPluginInstallpluginJsp));verifyToken(() -> asHtml(path_AdminPlugin_AdminPluginInstallpluginJsp));try {if (UPLOAD.equals(form.id)) {if (form.jarFile == null) {throwValidationError(messages -> messages.addErrorsPluginFileIsNotFound(GLOBAL, form.id),this::asListHtml);}if (!form.jarFile.getFileName().endsWith("".jar"")) {throwValidationError(messages -> messages.addErrorsFileIsNotSupported(GLOBAL, form.jarFile.getFileName()),this::asListHtml);}final String filename = form.jarFile.getFileName();final File tempFile =ComponentUtil.getSystemHelper().createTempFile(""tmp-adminplugin-"", "".jar"");try (final InputStream is = form.jarFile.getInputStream();final OutputStream os = new FileOutputStream(tempFile)) {CopyUtil.copy(is, os);} catch (final Exception e) {if (tempFile.exists() && !tempFile.delete()) {}throwValidationError(messages -> messages.addErrorsFailedToInstallPlugin(GLOBAL, filename),this::asListHtml);}new Thread(() -> {try {final PluginHelper pluginHelper = ComponentUtil.getPluginHelper();final Artifact artifact =pluginHelper.getArtifactFromFileName(ArtifactType.UNKNOWN, filename, tempFile.getAbsolutePath());pluginHelper.installArtifact(artifact);} catch (final Exception e) {} finally {if (tempFile.exists() && !tempFile.delete()) {}}}).start();saveInfo(messages -> messages.addSuccessInstallPlugin(GLOBAL, form.jarFile.getFileName()));} else {final Artifact artifact = getArtifactFromInstallForm(form);if (artifact == null) {throwValidationError(messages -> messages.addErrorsCrudCouldNotFindCrudTable(GLOBAL, form.id),this::asListHtml);}installArtifact(artifact);saveInfo(messages -> messages.addSuccessInstallPlugin(GLOBAL, artifact.getFileName()));}} catch (final ValidationErrorException e) {throw e;} catch (final Exception e) {throwValidationError(messages -> messages.addErrorsFailedToInstallPlugin(GLOBAL, form.id), this::asListHtml);}return redirect(getClass());}}"	4
4881	public class A {public void addFilter(IUserFilterState filter) {m_filterMap.put(filter.createKey(), filter);fireFilterAdded(filter);}}	1
4882	"public class A {public static com.liferay.segments.model.SegmentsEntry addSegmentsEntry(HttpPrincipal httpPrincipal,String segmentsEntryKey,java.util.Map<java.util.Locale, String> nameMap,java.util.Map<java.util.Locale, String> descriptionMap,boolean active,String criteria,String source,String type,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(SegmentsEntryServiceUtil.class, ""addSegmentsEntry"", _addSegmentsEntryParameterTypes1);MethodHandler methodHandler =new MethodHandler(methodKey,segmentsEntryKey,nameMap,descriptionMap,active,criteria,source,type,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.segments.model.SegmentsEntry) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4883	public class A {@Override@GraphTransactionpublic void init() throws AtlasBaseException {super.init();}}	2
4884	"public class A {@Testpublic void testExecutionPlanInstallation()throws IOException, PackageException, RepositoryException {PackageId idA = registry.register(getStream(TEST_PACKAGE_A_10), false);DependencyReport report = registry.analyzeDependencies(idA, false);assertEquals(""resolved dependencies"", """", PackageId.toString(report.getResolvedDependencies()));assertEquals(""unresolved dependencies"",""my_packages:test_b,my_packages:test_c:[1.0,2.0)"",Dependency.toString(report.getUnresolvedDependencies()));PackageId idB = registry.register(getStream(TEST_PACKAGE_B_10), false);report = registry.analyzeDependencies(idB, false);assertEquals(""resolved dependencies"", """", PackageId.toString(report.getResolvedDependencies()));assertEquals(""unresolved dependencies"",""my_packages:test_c"",Dependency.toString(report.getUnresolvedDependencies()));ExecutionPlanBuilder builder = registry.createExecutionPlan();builder.with(new ProgressTrackerListener() {public void onMessage(Mode mode, String action, String path) {}public void onError(Mode mode, String path, Exception e) {}});builder.addTask().with(idA).with(PackageTask.Type.EXTRACT);builder.addTask().with(idB).with(PackageTask.Type.EXTRACT);try {builder.with(admin).execute();fail(""registering the package with missing dependencies should fail"");} catch (DependencyException ex) {}PackageId idC = registry.register(getStream(TEST_PACKAGE_C_10), false);report = registry.analyzeDependencies(idB, false);assertEquals(""resolved dependencies"",""my_packages:test_c:1.0"",PackageId.toString(report.getResolvedDependencies()));assertEquals(""unresolved dependencies"", """", Dependency.toString(report.getUnresolvedDependencies()));builder.addTask().with(idC).with(PackageTask.Type.EXTRACT);ExecutionPlan plan = builder.with(admin).execute();assertFalse(plan.hasErrors());assertTrue(registry.open(idA).isInstalled());assertTrue(registry.open(idB).isInstalled());assertTrue(registry.open(idC).isInstalled());}}"	2
4885	public class A {@Overridepublic String getPassword() {return null;}}	1
4886	public class A {private int processFacets(int doc) throws IOException {if (doc == NO_MORE_DOCS) {return doc;}if (doc < 0) {return doc;}_hit.fastSet(doc);return doc;}}	1
4887	public class A {@Overridepublic void store(Item item, @Nullable String alias) {if (item.getState() instanceof UnDefType) {return;}String localAlias = alias == null ? item.getName() : alias;State state = item.getState();MapDbItem mItem = new MapDbItem();mItem.setName(localAlias);mItem.setState(state);mItem.setTimestamp(new Date());String json = serialize(mItem);map.put(localAlias, json);commit();if (logger.isDebugEnabled()) {}}}	2
4888	public class A {public boolean handleRequestInFlow(MessageContext messageContext) {if (isEnabled()) {try {apiTo = LogUtils.getTo(messageContext);} catch (Exception e) {return false;}}return true;}}	1
4889	public class A {@Overridepublic void run(final String... args) throws Exception {}}	5
4890	"public class A {@Testpublic void testPublishFailsBecauseDOICannotBeResolved() throws Exception {DOI assignedDoi = DOIUtils.mintDOI(type, Constants.TEST_DOI_PREFIX);r.setDoi(assignedDoi);r.setDoiOrganisationKey(ORGANISATION_KEY);r.setIdentifierStatus(IdentifierStatus.PUBLIC_PENDING_PUBLICATION);assertTrue(r.getDoi() != null && r.isPubliclyAvailable());List<String> collection = Lists.newArrayList();action.setActionErrors(collection);action.setPublish(""true"");assertEquals(""input"", action.publish());assertEquals(1, action.getActionErrors().size());}}"	2
4891	"public class A {public RuleDto create(VitamContext vitamContext, RuleDto ruleDto) {try {RequestResponse<?> requestResponse =ruleService.createRule(vitamContext, converter.convertDtoToVitam(ruleDto));final FileRulesModel ruleVitamDto =objectMapper.treeToValue(requestResponse.toJsonNode(), FileRulesModel.class);return converter.convertVitamToDto(ruleVitamDto);} catch (InvalidParseOperationException| AccessExternalClientException| IOException| VitamClientException| JAXBException e) {throw new InternalServerException(""Unable to create rule"", e);}}}"	1
4892	"public class A {@Overridepublic void copyAsync(DataObject srcdata,DataObject destData,AsyncCompletionCallback<CopyCommandResult> callback) {if (!canCopy(srcdata, destData)) {return;}if ((srcdata.getType() == DataObjectType.TEMPLATE&& destData.getType() == DataObjectType.TEMPLATE)|| (srcdata.getType() == DataObjectType.SNAPSHOT&& destData.getType() == DataObjectType.SNAPSHOT)|| (srcdata.getType() == DataObjectType.VOLUME&& destData.getType() == DataObjectType.VOLUME)) {int nMaxExecutionMinutes =NumbersUtil.parseInt(configDao.getValue(Config.SecStorageCmdExecutionTimeMax.key()), 30);CopyCommand cmd =new CopyCommand(srcdata.getTO(),destData.getTO(),nMaxExecutionMinutes * 60 * 1000,VirtualMachineManager.ExecuteInSequence.value());Answer answer = null;List<EndPoint> eps = _epSelector.findAllEndpointsForScope(srcdata.getDataStore());if (eps == null || eps.isEmpty()) {String errMsg = ""No remote endpoint to send command, check if host or ssvm is down?"";answer = new Answer(cmd, false, errMsg);} else {answer = sendToLeastBusyEndpoint(eps, cmd);}CopyCommandResult result = new CopyCommandResult("""", answer);callback.complete(result);}}}"	1
4893	public class A {@Overridepublic void doFilter(final ServletRequest servletRequest,final ServletResponse servletResponse,final FilterChain filterChain)throws IOException, ServletException {final SimplePrincipal principal = retrievePrincipalFromSessionOrRequest(servletRequest);if (principal == null) {filterChain.doFilter(servletRequest, servletResponse);} else {filterChain.doFilter(new OAuthHttpServletRequestWrapper((HttpServletRequest) servletRequest, principal),servletResponse);}}}	1
4894	public class A {private boolean setupConnection(SocketChannel channel) throws IOException {channel.socket().setSoTimeout(2000);channel.configureBlocking(true);channel.connect(new InetSocketAddress(config.ipAddress, currentComPort));ByteBuffer outPacket = PS4PacketHandler.makeHelloPacket();sendPacketToPS4(outPacket, channel, false, false);final ByteBuffer readBuffer = ByteBuffer.allocate(512).order(ByteOrder.LITTLE_ENDIAN);int responseLength = channel.read(readBuffer);if (responseLength > 0) {ps4Crypto.parseHelloResponsePacket(readBuffer);} else {return false;}outPacket = ps4Crypto.makeHandshakePacket();sendPacketToPS4(outPacket, channel, false, false);return true;}}	1
4895	"public class A {@Beforepublic void querySetUp() throws IOException {super.querySetUp();FacetedQueryLogic facetLogic = new FacetedQueryLogic();facetLogic.setFacetedSearchType(FacetedSearchType.FIELD_VALUE_FACETS);facetLogic.setFacetTableName(QueryTestTableHelper.FACET_TABLE_NAME);facetLogic.setFacetMetadataTableName(QueryTestTableHelper.FACET_METADATA_TABLE_NAME);facetLogic.setFacetHashTableName(QueryTestTableHelper.FACET_HASH_TABLE_NAME);facetLogic.setMaximumFacetGrouping(200);facetLogic.setMinimumFacet(1);this.logic = facetLogic;QueryTestTableHelper.configureLogicToScanTables(this.logic);this.logic.setFullTableScanEnabled(false);this.logic.setIncludeDataTypeAsField(true);this.logic.setIncludeGroupingContext(true);this.logic.setDateIndexHelperFactory(new DateIndexHelperFactory());this.logic.setMarkingFunctions(new MarkingFunctions.Default());this.logic.setMetadataHelperFactory(new MetadataHelperFactory());this.logic.setResponseObjectFactory(new DefaultResponseObjectFactory());testInit();SubjectIssuerDNPair dn = SubjectIssuerDNPair.of(""userDn"", ""issuerDn"");DatawaveUser user =new DatawaveUser(dn,DatawaveUser.UserType.USER,Sets.newHashSet(this.auths.toString().split("","")),null,null,-1L);this.principal = new DatawavePrincipal(Collections.singleton(user));this.testHarness = new QueryLogicTestHarness(this);}}"	1
4896	"public class A {public void messageReceived(final FtpIoSession session, final FtpRequest request)throws Exception {try {session.updateLastAccessTime();String commandName = request.getCommand();CommandFactory commandFactory = context.getCommandFactory();Command command = commandFactory.getCommand(commandName);if (!session.isLoggedIn() && !isCommandOkWithoutAuthentication(commandName)) {session.write(LocalizedFtpReply.translate(session, request, context, FtpReply.REPLY_530_NOT_LOGGED_IN, ""permission"", null));return;}FtpletContainer ftplets = context.getFtpletContainer();FtpletResult ftpletRet;try {ftpletRet = ftplets.beforeCommand(session.getFtpletSession(), request);} catch (Exception e) {ftpletRet = FtpletResult.DISCONNECT;}if (ftpletRet == FtpletResult.DISCONNECT) {session.close(false).awaitUninterruptibly(10000);return;} else if (ftpletRet != FtpletResult.SKIP) {if (command != null) {synchronized (session) {command.execute(session, context, request);}} else {session.write(LocalizedFtpReply.translate(session,request,context,FtpReply.REPLY_502_COMMAND_NOT_IMPLEMENTED,""not.implemented"",null));}try {ftpletRet =ftplets.afterCommand(session.getFtpletSession(), request, session.getLastReply());} catch (Exception e) {ftpletRet = FtpletResult.DISCONNECT;}if (ftpletRet == FtpletResult.DISCONNECT) {session.close(false).awaitUninterruptibly(10000);return;}}} catch (Exception ex) {try {session.write(LocalizedFtpReply.translate(session,request,context,FtpReply.REPLY_550_REQUESTED_ACTION_NOT_TAKEN,null,null));} catch (Exception ex1) {}if (ex instanceof java.io.IOException) {throw (IOException) ex;} else {}}}}"	5
4897	public class A {public boolean submit(Idp idp, RequestContext context) {int maxParameterSize = idp.getMaxParameterSize();if (!context.getRequestParameters().isEmpty()) {Map<String, Object> parameters = context.getRequestParameters().asMap();for (Map.Entry<String, Object> param : parameters.entrySet()) {if (!skipCheck(param.getKey())&& param.getValue() != null&& param.getValue().toString().length() > maxParameterSize) {return false;}}}return true;}}	1
4898	"public class A {@Override@Transactionalpublic OAuthAuthorizationCode findByCodeAndState(String code, String state) {requireNotDisposed();requireArgument(StringUtils.isNotBlank(code), ""authorization_code name cannot be null or empty"");requireArgument(StringUtils.isNotBlank(state), ""state name cannot be null or empty"");OAuthAuthorizationCode result =OAuthAuthorizationCode.findByCodeAndState(emf.get(), code, state);return result;}}"	2
4899	public class A {@Overridepublic boolean delete(DatasetXslt datasetXslt) {retryableExternalRequestForNetworkExceptions(() ->morphiaDatastoreProvider.getDatastore().find(DatasetXslt.class).filter(Filters.eq(ID.getFieldName(), datasetXslt.getId())).delete());return true;}}	1
4900	"public class A {public static int getLayoutsCount(HttpPrincipal httpPrincipal, long groupId, boolean privateLayout) {try {MethodKey methodKey =new MethodKey(LayoutServiceUtil.class, ""getLayoutsCount"", _getLayoutsCountParameterTypes26);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, privateLayout);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Integer) returnObj).intValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4901	"public class A {protected void run() {System.setProperty(""temp.location"", tmpDir);SpringBusFactory bf = new SpringBusFactory();Bus bus = bf.createBus(""org/apache/cxf/systest/ws/policy/rm.xml"");BusFactory.setDefaultBus(bus);setBus(bus);LoggingInInterceptor in = new LoggingInInterceptor();bus.getInInterceptors().add(in);LoggingOutInterceptor out = new LoggingOutInterceptor();bus.getOutInterceptors().add(out);bus.getOutFaultInterceptors().add(out);GreeterImpl implementor = new GreeterImpl();String address = ""http://localhost:"" + PORT + ""/SoapContext/GreeterPort"";ep = Endpoint.publish(address, implementor);}}"	1
4902	"public class A {private void load(final Source source, final String localCacheKey, final Map<String, Object> attributes) {final SAXTransformerFactory transformerFactory;if (attributes == null || attributes.isEmpty()) {transformerFactory = TRAX_FACTORY;} else {transformerFactory = createNewSAXTransformerFactory();attributes.forEach(transformerFactory::setAttribute);}try {this.templates = transformerFactory.newTemplates(source);} catch (TransformerConfigurationException e) {throw new SetupException(""Impossible to read XSLT from '"" + source + ""', see nested exception"", e);}}}"	1
4903	"public class A {public void complete() {terminateOnServiceStop = true;executionService.stop();try {RetryStrategy retryStrategy =RetryStrategies.timeLimit(5,TimeUnit.SECONDS,RetryStrategies.exponentialDelay(500, 2000, TimeUnit.MILLISECONDS));long startTime = System.currentTimeMillis();while (Retries.callWithRetries(remoteProcessController::isRunning, retryStrategy, Exception.class::isInstance)) {if (System.currentTimeMillis() - startTime >= 5000) {throw new IllegalStateException(""Remote process for "" + programRunId + "" is still running"");}TimeUnit.SECONDS.sleep(1);}} catch (Exception e) {try {remoteProcessController.kill();} catch (Exception ex) {}}}}"	2
4904	public class A {private void updateLogicalInterconnectFirmwareActive() {LogicalInterconnect logicalInterconnect =resourceDtoUtils.getLogicalInterconnectByName(RESOURCE_NAME);LiFirmware liFirmware =logicalInterconnectClient.getFirmware(logicalInterconnect.getResourceId());liFirmware = buildLiFirmwareActive(liFirmware);TaskResource task =logicalInterconnectClient.updateFirmware(logicalInterconnect.getResourceId(), liFirmware);}}	1
4905	"public class A {public synchronized NodeReferences loadReferencesTo(NodeId targetId)throws NoSuchItemStateException, ItemStateException {if (!initialized) {throw new IllegalStateException(""not initialized"");}InputStream in = null;try {String path = buildNodeReferencesFilePath(null, targetId).toString();if (!itemFs.exists(path)) {throw new NoSuchItemStateException(targetId.toString());}in = itemFs.getInputStream(path);NodeReferences refs = new NodeReferences(targetId);Serializer.deserialize(refs, in);return refs;} catch (NoSuchItemStateException e) {throw e;} catch (Exception e) {String msg = ""failed to read references: "" + targetId;throw new ItemStateException(msg, e);} finally {IOUtils.closeQuietly(in);}}}"	1
4906	"public class A {@Overridepublic void setParameterExampleValue(CodegenParameter p) {String example;if (p.defaultValue == null) {example = p.example;} else {example = p.defaultValue;}String type = p.baseType;if (type == null) {type = p.dataType;}if (""String"".equalsIgnoreCase(type) || p.isString) {if (example == null) {example = ""'"" + p.paramName + ""_example'"";}example = escapeText(example);} else if (""Integer"".equals(type) || ""int"".equals(type)) {if (example == null) {example = ""56"";}} else if (""Float"".equalsIgnoreCase(type) || ""Double"".equalsIgnoreCase(type)) {if (example == null) {example = ""3.4"";}} else if (""BOOLEAN"".equalsIgnoreCase(type) || ""bool"".equalsIgnoreCase(type)) {if (example == null) {example = ""True"";}} else if (""\\SplFileObject"".equalsIgnoreCase(type) || p.isFile) {if (example == null) {example = ""/path/to/file.txt"";}example = ""\"""" + escapeText(example) + ""\"""";} else if (""\\Date"".equalsIgnoreCase(type)) {if (example == null) {example = ""2013-10-20"";}example = ""new \\DateTime(\"""" + escapeText(example) + ""\"")"";} else if (""\\DateTime"".equalsIgnoreCase(type)) {if (example == null) {example = ""2013-10-20T19:20:30+01:00"";}example = ""new \\DateTime(\"""" + escapeText(example) + ""\"")"";} else if (""object"".equals(type)) {example = ""new \\stdClass"";} else if (!languageSpecificPrimitives.contains(type)) {example = ""new "" + getTypeDeclaration(type) + ""()"";} else {}if (example == null) {example = ""NULL"";} else if (Boolean.TRUE.equals(p.isArray)) {example = ""array("" + example + "")"";} else if (Boolean.TRUE.equals(p.isMap)) {example = ""array('key' => "" + example + "")"";}p.example = example;}}"	1
4907	"public class A {public static void main(String[] args) throws Exception {if (args.length != 2) {System.err.println(""Necessary arguments: <kddDataFileDirectory> <resultFile>"");return;}File dataFileDirectory = new File(args[0]);if (!dataFileDirectory.exists() || !dataFileDirectory.isDirectory()) {throw new IllegalArgumentException(""Bad data file directory: "" + dataFileDirectory);}File resultFile = new File(args[1]);int numFeatures = 20;int numIterations = 5;double learningRate = 0.0001;double preventOverfitting = 0.002;double randomNoise = 0.0001;KDDCupFactorizablePreferences factorizablePreferences =new KDDCupFactorizablePreferences(KDDCupDataModel.getTrainingFile(dataFileDirectory));Factorizer sgdFactorizer =new ParallelArraysSGDFactorizer(factorizablePreferences,numFeatures,numIterations,learningRate,preventOverfitting,randomNoise);Factorization factorization = sgdFactorizer.factorize();int prefsProcessed = 0;RunningAverage average = new FullRunningAverage();for (Pair<PreferenceArray, long[]> validationPair :new DataFileIterable(KDDCupDataModel.getValidationFile(dataFileDirectory))) {for (Preference validationPref : validationPair.getFirst()) {double estimate =estimatePreference(factorization,validationPref.getUserID(),validationPref.getItemID(),factorizablePreferences.getMinPreference(),factorizablePreferences.getMaxPreference());double error = validationPref.getValue() - estimate;average.addDatum(error * error);prefsProcessed++;if (prefsProcessed % 100000 == 0) {}}}double rmse = Math.sqrt(average.getAverage());OutputStream out = null;try {out = new BufferedOutputStream(new FileOutputStream(resultFile));for (Pair<PreferenceArray, long[]> testPair :new DataFileIterable(KDDCupDataModel.getTestFile(dataFileDirectory))) {for (Preference testPref : testPair.getFirst()) {double estimate =estimatePreference(factorization,testPref.getUserID(),testPref.getItemID(),factorizablePreferences.getMinPreference(),factorizablePreferences.getMaxPreference());byte result =EstimateConverter.convert(estimate, testPref.getUserID(), testPref.getItemID());out.write(result);}}} finally {Closeables.close(out, false);}}}"	6
4908	"public class A {@PreAuthorize(""hasPermission('""+ AclClassName.Values.LAYOUT+ ""', '""+ PermissionName.Values.LAYOUT_ADD+ ""')"")public LayoutForm createLayout(final LayoutForm layoutForm) {final Layout layout =Layout.builder().title(layoutForm.getTitle()).content(layoutForm.getContent()).iconFileName(layoutForm.getIconFileName()).build();final Layout createdLayout = layoutService.create(layout);return new LayoutForm(createdLayout);}}"	1
4909	public class A {public static boolean handleQuit() {try {return InstanceManager.getDefault(jmri.ShutDownManager.class).shutdown();} catch (Exception e) {}return false;}}	2
4910	"public class A {private void updateOxAuthConfiguration() {try {AppConfiguration appConfiguration = jsonConfigurationService.getOxauthAppConfiguration();appConfiguration.setExternalLoggerConfiguration(oxAuthLogConfigLocation);jsonConfigurationService.saveOxAuthAppConfiguration(appConfiguration);} catch (IOException e) {facesMessages.add(FacesMessage.SEVERITY_ERROR, ""Failed to update oxAuth configuration in LDAP"");}}}"	1
4911	public class A {public void notifySuspend(WorkflowExecutionContext context) throws FalconException {if (!updateContextFromWFConf(context)) {return;}for (WorkflowExecutionListener listener : listeners) {try {listener.onSuspend(context);} catch (Throwable t) {}}instrumentAlert(context);contextMap.remove(context.getWorkflowId());}}	2
4912	public class A {@Overridepublic synchronized void disconnect(long quiesceTimeout) {if (isConnected()) {this.dataTransportListeners.onDisconnecting();try {this.mqttClient.disconnect(quiesceTimeout).waitForCompletion(getTimeToWaitMillis());} catch (MqttException e) {}this.dataTransportListeners.onDisconnected();} else {}}}	4
4913	public class A {@Overridepublic void delete(Object key) throws CacheWriterException {try {dataStore.delete((K) key);} catch (GoraException e) {throw new CacheWriterException(e);}}}	1
4914	"public class A {protected void applySecurity(String serviceName, int policyId, String[] userGroups)throws SecurityAdminServiceSecurityConfigExceptionException, RemoteException,InterruptedException {SecurityAdminServiceClient securityAdminServiceClient =new SecurityAdminServiceClient(contextUrls.getBackEndUrl(), sessionCookie);securityAdminServiceClient.applySecurity(serviceName, policyId + """", userGroups, new String[] {""wso2carbon.jks""}, ""wso2carbon.jks"");Thread.sleep(1000);}}"	1
4915	"public class A {public static synchronized void doUnlock(String derivateIdString) throws MCRException {MCRObjectID derivateId = MCRObjectID.getInstance(derivateIdString);if (isLocked(derivateIdString)) {String sessionId =MCRMetsLock.metsAccessSessionTable.get(MCRObjectID.getInstance(derivateIdString));if (MCRSessionMgr.getCurrentSessionID().equals(sessionId)) {MCRMetsLock.metsAccessSessionTable.remove(derivateId);} else {String message =String.format(Locale.ENGLISH,""Could not unlock %s, because the session wich locked it was : ''%s'' ""+ ""and current sesssion is ''%s''"",derivateIdString,sessionId,MCRSessionMgr.getCurrentSessionID());throw new MCRException(message);}}}}"	2
4916	public class A {@Overridepublic void handleCommand(ChannelUID channelUID, Command command) {try {if (command instanceof RefreshType) {updateMeter(channelUID, cache.getValue());} else {}} catch (IOException e) {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());}}}	1
4917	public class A {public String init() {try {loadProviders();this.providerSelections =this.providers.stream().map(PassportProvider::new).collect(Collectors.toList());return OxTrustConstants.RESULT_SUCCESS;} catch (Exception e) {return OxTrustConstants.RESULT_FAILURE;}}}	3
4918	public class A {@Overridepublic @Nullable StateDescription getStateDescription(Channel channel,@Nullable StateDescription originalStateDescription,@Nullable Locale locale) {StateDescription description = descriptions.get(channel.getUID());return description;}}	1
4919	"public class A {@Testpublic void readFileTest() {try {byte[] bytes = hadoopUtils.catFile(""/dolphinscheduler/hdfs/resources/35435.sh"");} catch (Exception e) {}}}"	2
4920	"public class A {@Overrideprotected void setUp() throws Exception {connections = new Connection[NUMBER_IN_CLUSTER];producers = new MessageProducer[NUMBER_IN_CLUSTER];messageIdList = new MessageIdList[NUMBER_IN_CLUSTER];ActiveMQDestination destination = createDestination();for (int i = 0; i < NUMBER_IN_CLUSTER; i++) {connections[i] = createConnection(i);connections[i].setClientID(""ClusterTest"" + i);connections[i].start();Session session = connections[i].createSession(false, Session.AUTO_ACKNOWLEDGE);producers[i] = session.createProducer(destination);producers[i].setDeliveryMode(deliveryMode);MessageConsumer consumer = createMessageConsumer(session, destination);messageIdList[i] = new MessageIdList();consumer.setMessageListener(messageIdList[i]);}ActiveMQDestination advisoryDest = AdvisorySupport.getConsumerAdvisoryTopic(destination);for (int i = 0; i < NUMBER_IN_CLUSTER; i++) {Session session = connections[i].createSession(false, Session.AUTO_ACKNOWLEDGE);MessageConsumer consumer = createMessageConsumer(session, advisoryDest);int j = 0;while (j < NUMBER_IN_CLUSTER) {ActiveMQMessage message = (ActiveMQMessage) consumer.receive(1000);if (message == null) {fail(""Connection "" + i + "" saw "" + j + "" consumers, expected: "" + NUMBER_IN_CLUSTER);}if (message.getDataStructure() != null&& message.getDataStructure().getDataStructureType()== ConsumerInfo.DATA_STRUCTURE_TYPE) {j++;}}session.close();}}}"	2
4921	"public class A {@Test(groups = {""Phase 2 Agency""},description = ""missing agency_id value"",priority = 301)public void verifyTest_2_2_1() throws Exception {Context context = new Context();CheckPointReport result =verifyValidation(log, context, ""agency_2_1"", GTFS_1_GTFS_Common_14, SEVERITY.WARNING, RESULT.NOK, true);Assert.assertEquals(result.getCheckPointErrorCount(), 1, ""detail count"");for (CheckPointErrorReport detail : getDetails(context, result)) {Assert.assertNotNull(detail.getSource(), ""detail must refer a source"");Assert.assertNotNull(detail.getSource().getFile(), ""detail must refer a file source"");Assert.assertEquals(detail.getSource().getFile().getFilename(), ""agency.txt"", ""detail must refer bad file"");Assert.assertEquals(detail.getSource().getFile().getLineNumber(),Integer.valueOf(2),""detail must refer bad line"");}}}"	1
4922	public class A {@Overridepublic ListenableFuture<RpcResult<AddGroupsBatchOutput>> addGroupsBatch(final AddGroupsBatchInput input) {final ArrayList<ListenableFuture<RpcResult<AddGroupOutput>>> resultsLot = new ArrayList<>();for (BatchAddGroups addGroup : input.nonnullBatchAddGroups().values()) {final AddGroupInput addGroupInput =new AddGroupInputBuilder(addGroup).setGroupRef(createGroupRef(input.getNode(), addGroup)).setNode(input.getNode()).build();resultsLot.add(salGroupService.addGroup(addGroupInput));}final ListenableFuture<RpcResult<List<BatchFailedGroupsOutput>>> commonResult =Futures.transform(Futures.allAsList(resultsLot),GroupUtil.createCumulatingFunction(input.nonnullBatchAddGroups().values()),MoreExecutors.directExecutor());ListenableFuture<RpcResult<AddGroupsBatchOutput>> addGroupsBulkFuture =Futures.transform(commonResult, GroupUtil.GROUP_ADD_TRANSFORM, MoreExecutors.directExecutor());if (input.getBarrierAfter()) {addGroupsBulkFuture =BarrierUtil.chainBarrier(addGroupsBulkFuture,input.getNode(),transactionService,GroupUtil.GROUP_ADD_COMPOSING_TRANSFORM);}return addGroupsBulkFuture;}}	1
4923	public class A {public void shutdownJobExecutor() {AsyncExecutor asyncExecutor = processEngine.getProcessEngineConfiguration().getAsyncExecutor();asyncExecutor.shutdown();}}	1
4924	"public class A {private static SenseiQuery buildSenseiQuery(DataConfiguration params) {SenseiQuery sq;String query = params.getString(PARAM_QUERY, null);JSONObject qjson = new FastJSONObject(30);if (query != null && query.length() > 0) {try {qjson.put(""query"", query);} catch (Exception e) {}}try {String[] qparams = params.getStringArray(PARAM_QUERY_PARAM);for (String qparam : qparams) {qparam = qparam.trim();if (qparam.length() == 0) continue;String[] parts = qparam.split("":"", 2);if (parts.length == 2) {qjson.put(parts[0], parts[1]);}}} catch (JSONException jse) {}sq = new SenseiJSONQuery(qjson);return sq;}}"	2
4925	"public class A {@Testpublic void testRecovery_3() throws Exception {Note note1 = null;try {note1 =TestUtils.getInstance(Notebook.class).createNote(""note3"", AuthenticationInfo.ANONYMOUS);Paragraph p1 = note1.addNewParagraph(AuthenticationInfo.ANONYMOUS);p1.setText(""%python user='abc'"");CloseableHttpResponse post =httpPost(""/notebook/job/"" + note1.getId() + ""?blocking=true"", """");assertThat(post, isAllowed());Map<String, Object> resp =gson.fromJson(EntityUtils.toString(post.getEntity(), StandardCharsets.UTF_8),new TypeToken<Map<String, Object>>() {}.getType());assertEquals(""OK"", resp.get(""status""));post.close();assertEquals(Job.Status.FINISHED, p1.getStatus());TestUtils.getInstance(Notebook.class).saveNote(note1, AuthenticationInfo.ANONYMOUS);shutDown();StopInterpreter.main(new String[] {});startUp(RecoveryTest.class.getSimpleName(), false);Thread.sleep(5 * 1000);note1 = TestUtils.getInstance(Notebook.class).getNote(note1.getId());p1 = note1.getParagraph(p1.getId());p1.setText(""%python print(user)"");post = httpPost(""/notebook/job/"" + note1.getId() + ""?blocking=true"", """");assertEquals(""OK"", resp.get(""status""));post.close();assertEquals(Job.Status.ERROR, p1.getStatus());} catch (Exception e) {throw e;} finally {if (null != note1) {TestUtils.getInstance(Notebook.class).removeNote(note1, anonymous);}}}}"	2
4926	"public class A {private boolean dropBaustein(final CnATreeElement target, Viewer viewer, final Baustein[] bausteine) {if (!CnAElementHome.getInstance().isNewChildAllowed(target)) {return false;}Check:for (Baustein baustein : bausteine) {int targetSchicht = 0;if (target instanceof IBSIStrukturElement) {targetSchicht = ((IBSIStrukturElement) target).getSchicht();}if (baustein.getSchicht() != targetSchicht) {if (!SanityCheckDialog.checkLayer(viewer.getControl().getShell(), baustein.getSchicht(), targetSchicht)) {return false;} else {break Check;}}}try {Job dropJob =new Job(Messages.getString(""BSIModelViewDropListener.3"")) {@Overrideprotected IStatus run(IProgressMonitor monitor) {Activator.inheritVeriniceContextState();try {createBausteinUmsetzung(bausteine, target);} catch (Exception e) {return Status.CANCEL_STATUS;}return Status.OK_STATUS;}};dropJob.setUser(true);dropJob.setSystem(false);dropJob.schedule();} catch (Exception e) {return false;}return true;}}"	2
4927	public class A {private void registerNewJobinstance(MessageExchangeBuffer buffer) {TalendESBJob job = factory.newTalendESBJob();job.setEndpointRegistry(registry);RuntimeESBProviderCallback callback = new RuntimeESBProviderCallback(buffer, job, name, args);job.setProviderCallback(callback);execService.execute(callback);instances++;}}	1
4928	public class A {@Overridepublic void warn(String msg, Object arg0, Object arg1) {}}	1
4929	"public class A {private Response checkForMultipleRecords(Patient patient, String eid) {try {Query q =this.qm.createQuery(""where doc.object(PhenoTips.PatientClass).external_id = :eid"", Query.XWQL);q.bindValue(""eid"", eid);List<String> results = q.execute();if (results.size() > 1) {Alternatives response = this.factory.createAlternatives(results, this.uriInfo);return Response.status(300).entity(response).build();}} catch (QueryException ex) {}if (patient == null) {return Response.status(Status.NOT_FOUND).build();}return null;}}"	3
4930	public class A {private Set<AcceptApplication> filterAlias(Set<AcceptApplication> acceptApplicationList) {if (acceptApplicationList.size() < 2) {return acceptApplicationList;}final Set<AcceptApplication> resultSet = new HashSet<>();for (AcceptApplication acceptApplication : acceptApplicationList) {if (!acceptApplication.getApplication().getServiceType().isAlias()) {resultSet.add(acceptApplication);} else {}}if (resultSet.isEmpty()) {return acceptApplicationList;} else {return resultSet;}}}	1
4931	public class A {@Overridepublic void run() {try {((Observer) observer).update(arg, AbstractObservable.this);} catch (Exception e) {}}}	1
4932	public class A {private static boolean isIP(String host) {if (host == null || host.isEmpty()) {return false;}Boolean cacheHostVerify = hosts.get(host);if (cacheHostVerify != null) {return cacheHostVerify;}boolean isIp = InternetAddressUtil.isIP(host);hosts.putIfAbsent(host, isIp);return isIp;}}	1
4933	"public class A {public static <C extends GcdRingElem<C>> boolean subRingMember(List<GenPolynomial<C>> A, GenPolynomial<C> g) {if (A == null || A.isEmpty()) {return true;}GenPolynomialRing<C> pfac = A.get(0).ring;GenPolynomial<C> m = g;if (pfac.nvar != g.ring.nvar) {m = m.extendLower(pfac, 0, 0L);} else {throw new IllegalArgumentException(""g must be extended: ""+ pfac.nvar+ "" == ""+ g.ring.nvar+ "" did you mean method subRingAndMember()?"");}GroebnerBaseAbstract<C> bb = GBFactory.<C>getImplementation(pfac.coFac);GenPolynomial<C> r = bb.red.normalform(A, m);GenPolynomialRing<C> cfac = pfac.contract(g.ring.nvar);Map<ExpVector, GenPolynomial<C>> map = r.contract(cfac);return map.size() == 1 && map.keySet().contains(g.ring.evzero);}}"	1
4934	public class A {@Overridepublic void invoke(List<TwitterListener> listeners) throws TwitterException {IDs ids = twitter.getFriendsIDs(screenName, cursor);for (TwitterListener listener : listeners) {try {listener.gotFriendsIDs(ids);} catch (Exception e) {}}}}	1
4935	"public class A {@Overridepublic void setUserGroupQuotaTotal(final String userGroupName, final long quotaValue)throws JargonException {if (userGroupName == null || userGroupName.isEmpty()) {throw new IllegalArgumentException(""null or empty userGroupName"");}if (quotaValue <= 0) {throw new IllegalArgumentException(""quotaValue is null or empty"");}GeneralAdminInp adminPI =GeneralAdminInp.instanceForSetUserGroupQuotaTotal(userGroupName, quotaValue);getIRODSProtocol().irodsFunction(adminPI);}}"	5
4936	public class A {private BinarySpatialOperand useGeometryOrEnvelope(SpatialOperatorNameType spatialOperatorName, String wkt) {BinarySpatialOperand binarySpatialOperand = null;boolean isEnvelopeSupported = false;boolean isGeometrySupported = false;String wktGeometryOperand = getGeometryOperandFromWkt(wkt);for (QName geometryOperand : getGeometryOperands(spatialOperatorName)) {String localPart = geometryOperand.getLocalPart();if (wktGeometryOperand.equalsIgnoreCase(localPart)) {isGeometrySupported = true;} else if (BinarySpatialOperand.ENVELOPE.toString().equalsIgnoreCase(localPart)) {isEnvelopeSupported = true;}}if (globalGeometryOperands != null) {for (QName geometryOperand : globalGeometryOperands) {String localPart = geometryOperand.getLocalPart();if (wktGeometryOperand.equalsIgnoreCase(localPart)) {isGeometrySupported = true;} else if (BinarySpatialOperand.ENVELOPE.toString().equalsIgnoreCase(localPart)) {isEnvelopeSupported = true;}}}if (isGeometrySupported && spatialOperatorName != SpatialOperatorNameType.BBOX) {binarySpatialOperand = BinarySpatialOperand.GEOMETRY;} else if (isEnvelopeSupported&& spatialOperatorName != SpatialOperatorNameType.BEYOND&& spatialOperatorName != SpatialOperatorNameType.D_WITHIN) {binarySpatialOperand = BinarySpatialOperand.ENVELOPE;} else {binarySpatialOperand = BinarySpatialOperand.NONE;}return binarySpatialOperand;}}	6
4937	public class A {private void rollback(Connection connection) {try {connection.rollback();} catch (Exception rollbackException) {}}}	1
4938	"public class A {@Overridepublic OcppCallback<String> defaultCallback() {return new DefaultOcppCallback<String>() {@Overridepublic void success(String chargeBoxId, String statusValue) {addNewResponse(chargeBoxId, statusValue);if (""Accepted"".equalsIgnoreCase(statusValue)) {switch (params.getFilterType()) {case ChargingProfileId:chargingProfileRepository.clearProfile(params.getChargingProfilePk(), chargeBoxId);break;case OtherParameters:chargingProfileRepository.clearProfile(chargeBoxId,params.getConnectorId(),params.getChargingProfilePurpose(),params.getStackLevel());break;default:}}}};}}"	1
4939	"public class A {@Test@Order(order = 1)public void testUserInsert() throws Exception {addUser(USER_01);StubHttpServletRequest request = new StubHttpServletRequest();StubHttpServletResponse response = new StubHttpServletResponse(request);DefaultAuthenticationLogicImpl auth =org.support.project.di.Container.getComp(DefaultAuthenticationLogicImpl.class);auth.setSession(USER_01, request, response);request.setServletPath(""protect.token/index"");request.setMethod(""get"");ForwardBoundary boundary = invoke(request, response, ForwardBoundary.class);Assert.assertEquals(""/WEB-INF/views/protect/token/index.jsp"",PropertyUtil.getPrivateFeildOnReflection(String.class, boundary, ""path""));request.setServletPath(""protect.token/save"");request.setMethod(""post"");boundary = invoke(request, response, ForwardBoundary.class);Assert.assertEquals(""/WEB-INF/views/protect/token/index.jsp"",PropertyUtil.getPrivateFeildOnReflection(String.class, boundary, ""path""));String token = (String) request.getAttribute(""token"");Assert.assertNotNull(token);}}"	1
4940	public class A {protected Map<String, InstanceTask> loadInstanceTasks() {Map<String, InstanceTask> instanceTasks = new HashMap<String, InstanceTask>();Map<String, DatabaseTask> databaseTasks = loadDatabaseTasks();for (Map.Entry<String, DatabaseTask> entry : databaseTasks.entrySet()) {String database = entry.getKey();DatabaseTask databaseTask = entry.getValue();String instance = findInstance(database);if (instance == null) {continue;}String slaveTaskName = genSlaveTaskName(instance, database);if (instanceStorageManager.getBinlogInfo(slaveTaskName) != null) {InstanceTask instanceTask = new InstanceTask(false, instance, databaseTask);instanceTasks.put(slaveTaskName, instanceTask);continue;}String masterTaskName = genMasterTaskName(instance, database);if (instanceStorageManager.getBinlogInfo(masterTaskName) != null) {InstanceTask instanceTask = instanceTasks.get(masterTaskName);if (instanceTask == null) {instanceTask = new InstanceTask(true, instance, databaseTask);} else {instanceTask.create(databaseTask);}instanceTasks.put(masterTaskName, instanceTask);}}return instanceTasks;}}	1
4941	public class A {@Overridepublic DruidScanSpec visitBooleanOperator(BooleanOperator op, Void value) {List<LogicalExpression> args = op.args();DruidScanSpec nodeScanSpec = null;String functionName = op.getName();for (LogicalExpression arg : args) {switch (functionName) {case FunctionNames.AND:case FunctionNames.OR:if (nodeScanSpec == null) {nodeScanSpec = arg.accept(this, null);} else {DruidScanSpec scanSpec = arg.accept(this, null);if (scanSpec != null) {nodeScanSpec = mergeScanSpecs(functionName, nodeScanSpec, scanSpec);} else {allExpressionsConverted = false;}}break;}}return nodeScanSpec;}}	1
4942	public class A {private void undeploy(ClassLoader ldr) {Collection<GridDeployment> doomed = new HashSet<>();synchronized (mux) {for (Iterator<Deque<GridDeployment>> i1 = cache.values().iterator(); i1.hasNext(); ) {Deque<GridDeployment> deps = i1.next();for (Iterator<GridDeployment> i2 = deps.iterator(); i2.hasNext(); ) {GridDeployment dep = i2.next();if (dep.classLoader() == ldr) {dep.undeploy();i2.remove();doomed.add(dep);}}if (deps.isEmpty()) i1.remove();}}for (GridDeployment dep : doomed) {if (dep.obsolete()) {ctx.resource().onUndeployed(dep);if (ctx.config().getMarshaller() instanceof AbstractMarshaller)((AbstractMarshaller) ctx.config().getMarshaller()).onUndeploy(ldr);clearSerializationCaches();GridAnnotationsCache.onUndeployed(ldr);GridClassLoaderCache.onUndeployed(ldr);}recordUndeploy(dep);}}}	1
4943	public class A {@Overridepublic Completable initialize() {return Completable.defer(() -> {try {environment().vertx().fileSystem().readFileBlocking(FILENAME);return Completable.complete();} catch (Exception e) {environment().vertx().fileSystem().createFileBlocking(FILENAME);}});}}	3
4944	"public class A {@RequestMapping(value = ""/migration/events/{eventId}/clusters/{clusterId}/forceProcess"",method = RequestMethod.POST)public void forceProcessMigrationCluster(@PathVariable Long eventId, @PathVariable Long clusterId) {migrationService.forceProcessMigrationCluster(eventId, clusterId);}}"	1
4945	"public class A {@Overridepublic void markLedgerReplicated(long ledgerId) throws ReplicationException.UnavailableException {if (LOG.isDebugEnabled()) {}try {Lock l = heldLocks.get(ledgerId);if (l != null) {zkc.delete(getUrLedgerZnode(ledgerId), l.getLedgerZNodeVersion());try {String[] parts = getUrLedgerZnode(ledgerId).split(""/"");for (int i = 1; i <= 4; i++) {String[] p = Arrays.copyOf(parts, parts.length - i);String path = Joiner.on(""/"").join(p);Stat s = zkc.exists(path, null);if (s != null) {zkc.delete(path, s.getVersion());}}} catch (KeeperException.NotEmptyException nee) {}}} catch (KeeperException.NoNodeException nne) {} catch (KeeperException.BadVersionException bve) {} catch (KeeperException ke) {throw new ReplicationException.UnavailableException(""Error contacting zookeeper"", ke);} catch (InterruptedException ie) {Thread.currentThread().interrupt();throw new ReplicationException.UnavailableException(""Interrupted while contacting zookeeper"", ie);} finally {releaseUnderreplicatedLedger(ledgerId);}}}"	2
4946	public class A {private <T extends RangerPolicyItemEvaluator> T getMatchingPolicyItem(RangerAccessRequest request, List<T> evaluators, List<T> exceptionEvaluators) {if (LOG.isDebugEnabled()) {}T ret = null;if (CollectionUtils.isNotEmpty(evaluators)) {for (T evaluator : evaluators) {if (evaluator.isMatch(request)) {ret = evaluator;break;}}}if (ret != null && CollectionUtils.isNotEmpty(exceptionEvaluators)) {for (T exceptionEvaluator : exceptionEvaluators) {if (exceptionEvaluator.isMatch(request)) {if (LOG.isDebugEnabled()) {}ret = null;break;}}}if (LOG.isDebugEnabled()) {}return ret;}}	3
4947	"public class A {@Test@Order(order = 6)public void testCheckUserNotification() throws Exception {NotificationsEntity notification = NotificationsDao.get().selectOnKey(new Long(1));Assert.assertNotNull(notification);Assert.assertEquals(MailLogic.NOTIFY_INSERT_KNOWLEDGE, notification.getTitle());UsersEntity user = UsersDao.get().selectOnUserKey(""integration-test-user-01"");UserNotificationsEntity userNotification =UserNotificationsDao.get().selectOnKey(notification.getNo(), user.getUserId());Assert.assertNotNull(userNotification);user = UsersDao.get().selectOnUserKey(""integration-test-user-02"");userNotification =UserNotificationsDao.get().selectOnKey(notification.getNo(), user.getUserId());Assert.assertNotNull(userNotification);int count = MailsDao.get().selectCountAll();Assert.assertEquals(2, count);}}"	1
4948	"public class A {@Overrideprotected void execute() throws Exception {final String MATCH_RESULT = ""The current EC policy is replication already."";final String DIR_RESULT =""The replication EC policy is set successfully for the given directory."";final String CONVERT_RESULT = ""The file is converted successfully with replication EC policy."";this.setDfsClient(HadoopUtil.getDFSClient(HadoopUtil.getNameNodeUri(conf), conf));HdfsFileStatus fileStatus = dfsClient.getFileInfo(srcPath);if (fileStatus == null) {throw new ActionException(""File doesn't exist!"");}ErasureCodingPolicy srcEcPolicy = fileStatus.getErasureCodingPolicy();if (srcEcPolicy == null) {this.progress = 1.0F;appendLog(MATCH_RESULT);return;}if (fileStatus.isDir()) {dfsClient.setErasureCodingPolicy(srcPath, ecPolicyName);progress = 1.0F;appendLog(DIR_RESULT);return;}try {convert(fileStatus);setAttributes(srcPath, fileStatus, ecTmpPath);dfsClient.rename(ecTmpPath, srcPath, Options.Rename.OVERWRITE);appendLog(CONVERT_RESULT);appendLog(String.format(""The previous EC policy is %s."", srcEcPolicy.getName()));appendLog(String.format(""The current EC policy is %s."", REPLICATION_POLICY_NAME));} catch (ActionException ex) {try {if (dfsClient.getFileInfo(ecTmpPath) != null) {dfsClient.delete(ecTmpPath, false);}} catch (IOException e) {}throw new ActionException(ex);}}}"	1
4949	public class A {@Overridepublic void read(String testName) throws Exception {setupRead();DimensionClient client = new DimensionClient();Response res = client.getWorkflow(knownResourceId);try {assertStatusCode(res, testName);PoxPayloadIn input = new PoxPayloadIn(res.readEntity(String.class));WorkflowCommon workflowsCommon =(WorkflowCommon)extractPart(input, WorkflowClient.SERVICE_COMMONPART_NAME, WorkflowCommon.class);if (logger.isDebugEnabled() == true) {}Assert.assertNotNull(workflowsCommon);} finally {if (res != null) {res.close();}}}}	1
4950	public class A {private void syncRecording(Node<?> node, int operatorId, String portName) {OperatorIdPortNamePair operatorIdPortNamePair =new OperatorIdPortNamePair(operatorId, portName);if (containsKey(operatorIdPortNamePair)) {TupleRecorder tupleRecorder = get(operatorIdPortNamePair);if (tupleRecorder != null) {tupleRecorder.getStorage().requestSync();}} else if (portName == null) {Iterator<Map.Entry<OperatorIdPortNamePair, TupleRecorder>> iterator = entrySet().iterator();while (iterator.hasNext()) {Map.Entry<OperatorIdPortNamePair, TupleRecorder> entry = iterator.next();if (operatorId == entry.getKey().operatorId) {TupleRecorder tupleRecorder = entry.getValue();if (tupleRecorder != null) {tupleRecorder.getStorage().requestSync();}}}} else {}}}	4
4951	public class A {@Override@Nullablepublic List<String> getFileLocations(String path) throws IOException {return null;}}	1
4952	public class A {@Overridepublic void run() {try {flagAlignSemaphore.countDown();flagStartRace.await();for (int i = 0; i < numberOfOpens; i++) {if (i > 0 && i % 100 == 0)Connection conn = cf1.createConnection();Session sess = conn.createSession(true, Session.AUTO_ACKNOWLEDGE);sess.close();conn.close();}} catch (Exception e) {e.printStackTrace();errors++;}}}	1
4953	public class A {@Overridepublic void execute(Tuple input) {if (!batch && TupleUtils.isTick(input)) {return;}String topic = selector.getTopic(input);if (topic == null) {collector.ack(input);return;}if (batch) {try {if (batchHelper.shouldHandle(input)) {batchHelper.addBatch(input);messages.add(prepareMessage(input));}if (batchHelper.shouldFlush()) {producer.send(messages);batchHelper.ack();messages.clear();}} catch (Exception e) {batchHelper.fail(e);messages.clear();}} else {if (async) {try {producer.send(prepareMessage(input),new SendCallback() {@Overridepublic void onSuccess(SendResult sendResult) {collector.ack(input);}@Overridepublic void onException(Throwable throwable) {if (throwable != null) {collector.reportError(throwable);collector.fail(input);}}});} catch (Exception e) {collector.reportError(e);collector.fail(input);}} else {try {producer.send(prepareMessage(input));collector.ack(input);} catch (Exception e) {collector.reportError(e);collector.fail(input);}}}}}	5
4954	"public class A {private <T> UnmarshalledObject<T> getConfig(NewPortalConfig config, String owner, String fileName, Class<T> type) throws Exception {String ownerType = config.getOwnerType();String path = ""/"" + ownerType + ""/"" + owner + ""/"" + fileName + "".xml"";String xml = getDefaultConfig(config.getTemplateLocation(), path);if (xml == null) {String templateName = config.getTemplateName() != null ? config.getTemplateName() : fileName;path = ""/"" + ownerType + ""/template/"" + templateName + ""/"" + fileName + "".xml"";xml = getDefaultConfig(config.getTemplateLocation(), path);if (xml != null) {xml = OWNER_PATTERN.matcher(xml).replaceAll(StringEscapeUtils.escapeXml(owner));}}if (xml != null) {boolean ok = false;try {final UnmarshalledObject<T> o = fromXML(config.getOwnerType(), owner, xml, type);ok = true;return o;} catch (JiBXException e) {throw e;} finally {if (!ok) {}}}return null;}}"	3
4955	public class A {@Overridepublic Properties toProperties(FileInputStream fileInputStream) {Properties properties = new Properties();try {properties.load(fileInputStream);} catch (IOException ioException) {if (_log.isDebugEnabled()) {}}return properties;}}	1
4956	public class A {@Overridepublic OpenCGAResult<AuditRecord> get(Query query, QueryOptions queryOptions)throws CatalogDBException {Bson bson = parseQuery(query);return new OpenCGAResult<>(auditCollection.find(bson, auditConverter, queryOptions));}}	1
4957	public class A {public CompletableFuture<@Nullable Void> writeCharacteristic(UUID serviceUUID, UUID characteristicUUID, byte[] data, boolean enableNotification) {var future =executeWithConnection(serviceUUID,characteristicUUID,characteristic -> {if (enableNotification) {return device.enableNotifications(characteristic).thenCompose((v) -> device.writeCharacteristic(characteristic, data));} else {return device.writeCharacteristic(characteristic, data);}});if (logger.isDebugEnabled()) {future =future.whenComplete((v, t) -> {if (t == null) {}});}return future;}}	1
4958	"public class A {public static Object[] evaluateExpressions(ExprEvaluator[] parameters, ExprEvaluatorContext exprEvaluatorContext) {Object[] results = new Object[parameters.length];int count = 0;for (ExprEvaluator expr : parameters) {try {results[count] = expr.evaluate(null, true, exprEvaluatorContext);count++;} catch (RuntimeException ex) {String message =""Failed expression evaluation in crontab timer-at for parameter ""+ count+ "": ""+ ex.getMessage();throw new IllegalArgumentException(message);}}return results;}}"	1
4959	"public class A {@Overrideprotected void doBody(ITransaction transaction, HttpServletResponse resp, String path) {try {StoredObject so = store.getStoredObject(transaction, path);if (so == null) {resp.sendError(HttpServletResponse.SC_NOT_FOUND);return;}if (so.isNullResource()) {String methodsAllowed = DeterminableMethod.determineMethodsAllowed(so);resp.addHeader(""Allow"", methodsAllowed);resp.sendError(WebdavStatus.SC_METHOD_NOT_ALLOWED);return;}OutputStream out = resp.getOutputStream();InputStream in = store.getResourceContent(transaction, path);try {int read = -1;byte[] copyBuffer = new byte[BUF_SIZE];while ((read = in.read(copyBuffer, 0, copyBuffer.length)) != -1) {out.write(copyBuffer, 0, read);}} finally {try {in.close();} catch (Exception e) {}try {out.flush();out.close();} catch (Exception e) {}}} catch (Exception e) {}}}"	3
4960	public class A {private void updateActivePower(BaseOpenMessage msg) {Integer activePower;try {activePower = Integer.parseInt(msg.getDimValues()[0]);updateState(CHANNEL_POWER, new QuantityType<Power>(activePower, Units.WATT));} catch (FrameException e) {updateState(CHANNEL_POWER, UnDefType.UNDEF);}}}	1
4961	"public class A {private static DatagramPacket[] encode(MulticastRequest request, int maxPacketSize, InvocationConstraints constraints)throws IOException {final int MIN_DATA_LEN = 16;final int NUM_GROUPS_LEN = 4;final int NUM_SERVICE_IDS_LEN = 4;checkConstraints(constraints);LinkedList groups = new LinkedList();byte[] host = Plaintext.toUtf(request.getHost());String[] g = request.getGroups();for (int i = 0; i < g.length; i++) {byte[] b = Plaintext.toUtf(g[i]);if (b.length + host.length + MIN_DATA_LEN > maxPacketSize) {throw new DiscoveryProtocolException(""group too long: "" + g[i]);}groups.add(b);}List packets = new ArrayList();do {ByteBuffer buf = ByteBuffer.allocate(maxPacketSize);buf.putInt(PROTOCOL_VERSION_1);buf.put(REQUEST_TYPE);buf.putInt(request.getPort());ServiceID[] ids = request.getServiceIDs();int nids =Math.min(ids.length,(buf.remaining()- (groups.isEmpty() ? 0 : ((byte[]) groups.getFirst()).length)- NUM_SERVICE_IDS_LEN- NUM_GROUPS_LEN)/ SERVICE_ID_LEN);buf.putInt(nids);for (int i = 0; i < nids; i++) {buf.putLong(ids[i].getMostSignificantBits());buf.putLong(ids[i].getLeastSignificantBits());}int ngroupsPos = buf.position();int ngroups = 0;buf.putInt(ngroups);while (!groups.isEmpty()) {if (((byte[]) groups.getFirst()).length > buf.remaining()) {break;}buf.put((byte[]) groups.removeFirst());ngroups++;}if (ngroups > 0) {buf.putInt(ngroupsPos, ngroups);}buf.put(host);packets.add(new DatagramPacket(buf.array(),buf.position(),Constants.getRequestAddress(),Constants.getDiscoveryPort()));} while (!groups.isEmpty());if (logger.isTraceEnabled()) {}return (DatagramPacket[]) packets.toArray(new DatagramPacket[packets.size()]);}}"	1
4962	"public class A {private void populateAgentHistoryTable() throws Exception {CentralStorageConfig storageConfig = getCentralStorageConfig(session);dropTableIfExists(""agent"");session.createTableWithTWCS(""create table if not exists agent (one int, capture_time""+ "" timestamp, agent_id varchar, primary key (one, capture_time, agent_id))"",storageConfig.getMaxRollupHours());PreparedStatement insertPS =session.prepare(""insert into agent (one, capture_time,"" + "" agent_id) values (1, ?, ?) using ttl ?"");Map<String, V09AgentRollup> v09AgentRollups = getV09AgentRollupsFromAgentRollupTable();Multimap<Long, String> agentIdsPerCaptureTime = HashMultimap.create();ResultSet results =session.read(""select agent_rollup, capture_time from aggregate_tt_throughput_rollup_3"");for (Row row : results) {String v09AgentId = checkNotNull(row.getString(0));V09AgentRollup v09AgentRollup = v09AgentRollups.get(v09AgentId);if (v09AgentRollup == null || !v09AgentRollup.agent()) {continue;}String agentId = v09AgentRollup.agentRollupId();long captureTime = checkNotNull(row.getTimestamp(1)).getTime();long millisPerDay = DAYS.toMillis(1);long rollupCaptureTime = CaptureTimes.getRollup(captureTime, millisPerDay);agentIdsPerCaptureTime.put(rollupCaptureTime, agentId);}results =session.read(""select agent_rollup, capture_time from aggregate_tt_throughput_rollup_0"");for (Row row : results) {String v09AgentId = checkNotNull(row.getString(0));V09AgentRollup v09AgentRollup = v09AgentRollups.get(v09AgentId);if (v09AgentRollup == null || !v09AgentRollup.agent()) {continue;}String agentId = v09AgentRollup.agentRollupId();long captureTime = checkNotNull(row.getTimestamp(1)).getTime();long millisPerDay = DAYS.toMillis(1);long rollupCaptureTime = CaptureTimes.getRollup(captureTime, millisPerDay);agentIdsPerCaptureTime.put(rollupCaptureTime, agentId);}int maxRollupTTL = storageConfig.getMaxRollupTTL();List<Long> sortedCaptureTimes = Ordering.natural().sortedCopy(agentIdsPerCaptureTime.keySet());Queue<ListenableFuture<?>> futures = new ArrayDeque<>();for (long captureTime : sortedCaptureTimes) {int adjustedTTL = Common.getAdjustedTTL(maxRollupTTL, captureTime, clock);for (String agentId : agentIdsPerCaptureTime.get(captureTime)) {BoundStatement boundStatement = insertPS.bind();int i = 0;boundStatement.setTimestamp(i++, new Date(captureTime));boundStatement.setString(i++, agentId);boundStatement.setInt(i++, adjustedTTL);futures.add(session.writeAsync(boundStatement));waitForSome(futures);}}MoreFutures.waitForAll(futures);}}"	2
4963	public class A {public void truncate(ExporterDescription description) throws IOException {TestModerator moderator = new TestModerator(getTestTools(), this);moderator.truncate(description);}}	1
4964	public class A {@Overridepublic CompletableFuture<Boolean> releaseSegment(int segmentId) {try {if (!(processor instanceof StreamingEventProcessor)) {return CompletableFuture.completedFuture(false);} else {((StreamingEventProcessor) processor).releaseSegment(segmentId);}} catch (Exception e) {return exceptionallyCompletedFuture(e);}return CompletableFuture.completedFuture(true);}}	1
4965	public class A {private void configureWfsFeatures() {WFSCapabilitiesType capabilities = getCapabilities();if (capabilities != null) {wfsVersion = capabilities.getVersion();List<FeatureTypeType> featureTypes = getFeatureTypes(capabilities);List<String> supportedGeo = getSupportedGeo(capabilities);buildFeatureFilters(featureTypes, supportedGeo);} else {}}}	1
4966	"public class A {@Overridepublic void register(Registry registry) {if (_log.isInfoEnabled()) {}registry.register(""1.0.0"", ""1.1.0"", new DummyUpgradeProcess());registry.register(""1.1.0"", ""2.0.0"", new CommerceNotificationTemplateAccountGroupRelUpgradeProcess());registry.register(""2.0.0"", ""2.1.0"", new CommerceNotificationQueueEntryUpgradeProcess());registry.register(""2.1.0"", ""2.2.0"", new CommerceNotificationTemplateUpgradeProcess());registry.register(""2.2.0"",""2.2.1"",new CommerceNotificationTemplateGroupIdUpgradeProcess(_classNameLocalService, _groupLocalService));if (_log.isInfoEnabled()) {}}}"	2
4967	public class A {public Environment convert(String source) {if (!StringUtils.hasText(source)) {return null;}return new EnhancedEnvironmentImpl(source.trim(), source.trim());}}	1
4968	public class A {@ExceptionHandler(MzkRuntimeException.class)@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)public KommunicatorDto handleMzkRuntimeException(MzkRuntimeException e) {return kommunicatorService.buildKommunicatorFromException(e);}}	1
4969	"public class A {@Test(groups = {""Phase 1 Calendar""},description = ""invalid column sunday"",priority = 159)public void verifyTest_2_11() throws Exception {Context context = new Context();CheckPointReport result =verifyValidation(log, context, ""calendar_11"", GTFS_1_GTFS_Common_16, SEVERITY.ERROR, RESULT.NOK, true);Assert.assertEquals(result.getCheckPointErrorCount(), 1, ""detail count"");for (CheckPointErrorReport detail : getDetails(context, result)) {Assert.assertNotNull(detail.getSource(), ""detail must refer a source"");Assert.assertNotNull(detail.getSource().getFile(), ""detail must refer a file source"");Assert.assertEquals(detail.getSource().getFile().getFilename(), ""calendar.txt"", ""detail must refer bad file"");Assert.assertEquals(detail.getSource().getFile().getLineNumber(),Integer.valueOf(3),""detail must refer bad line"");}}}"	1
4970	public class A {@Overridepublic boolean accept(Path path) {if (AbstractFSWALProvider.isMetaFile(path)) {if (LOG.isDebugEnabled()) {}return false;}long timestamp;try {timestamp = BackupUtils.getCreationTime(path);return timestamp > lastBackupTS;} catch (Exception e) {return false;}}}	2
4971	public class A {@Beforepublic void ingestSampleData() throws IOException {final DataStore store = dataStore.createDataStore();store.addType(dataAdapter, TestUtils.DEFAULT_SPATIAL_INDEX);try (Writer writer = store.createWriter(dataAdapter.getTypeName())) {for (final SimpleFeature sf : buildCityDataSet()) {writer.write(sf);}}}}	2
4972	public class A {private void shutdown() throws InterruptedException {waitForQueueToBeEmpty();threadPool.shutdown();generate(() -> queue.offer(new ShutdownMessage())).limit(parallelism).collect(toList());boolean threadPoolExited = false;while (!(threadPoolExited = threadPool.awaitTermination(shutdownTimeoutMillis, MILLISECONDS))) {if (cleanShutdown) {} else {threadPool.shutdownNow();if (!threadPool.awaitTermination(shutdownTimeoutMillis, MILLISECONDS)) {} else {}break;}}}}	4
4973	"public class A {@Overridepublic boolean startMonitor(HoldingType holdingType,long holdingId,String property,long amount,long threshold,int interval,byte[] keySeed) {this.init();long accountId = AccountService.getId(Crypto.getPublicKey(keySeed));FundingMonitorInstance monitor =new FundingMonitorInstance(holdingType, holdingId, property, amount, threshold, interval, accountId, keySeed);globalSync.readLock();try {List<MonitoredAccount> accountList = new ArrayList<>();List<AccountProperty> properties =accountPropertyService.getProperties(0, accountId, property, 0, Integer.MAX_VALUE);properties.forEach(accountProperty -> {MonitoredAccount account =createMonitoredAccount(accountProperty.getRecipientId(), monitor, accountProperty.getValue());accountList.add(account);});synchronized (monitors) {if (monitors.size() > MAX_MONITORS) {throw new RuntimeException(""Maximum of "" + MAX_MONITORS + "" monitors already started"");}if (monitors.contains(monitor)) {return false;}accountList.forEach(account -> {List<MonitoredAccount> activeList = accounts.get(account.getAccountId());if (activeList == null) {activeList = new ArrayList<>();accounts.put(account.getAccountId(), activeList);}activeList.add(account);pendingEvents.add(account);});monitors.add(monitor);}} finally {globalSync.readUnlock();}return true;}}"	5
4974	"public class A {public void serveAttachmentBundle(Collection<String> ids,ResourceRequest request,ResourceResponse response,Optional<String> downloadFileName) {List<AttachmentContent> attachments = new ArrayList<>();try {for (String id : ids) {attachments.add(client.getAttachmentContent(id));}serveAttachmentBundle(attachments, request, response, downloadFileName);} catch (TException e) {response.setProperty(ResourceResponse.HTTP_STATUS_CODE, ""404"");}}}"	1
4975	public class A {@Overridepublic Record beforeAppend(Record record) {if (record.getData().length <= getThresholdSize()) {return record;}if (log.isDebugEnabled()) {}EnumSet<Record.Flag> flags = EnumSet.copyOf(record.getFlags());flags.add(Record.Flag.EXTERNAL_VALUE);storeValue(getUniqRecordKey(record), record.getData());return new Record(record.getKey(), null, record.getWatermark(), flags);}}	1
4976	public class A {public void setFile(File file) {this.file = file;try {getConfiguration().setDirectory(file.getCanonicalPath());} catch (IOException e) {}}}	1
4977	"public class A {private String getAccessToken(String corpId, String secret) throws IOException {String urlForAccessToken =""https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid="" + corpId + ""&corpsecret="" + secret;JSONObject responseObj;try {String response = HttpClientUtil.get(urlForAccessToken, httpHost);responseObj = JSONObject.parseObject(response);} catch (Exception e) {return null;}if (checkAccessToken(responseObj)) {return responseObj.getString(ACCESS_TOKEN);} else {String errorMsg = responseObj.getString(ERRMSG);return null;}}}"	2
4978	"public class A {private void processSyncPoint(AlluxioURI ufsUri, SyncInfo syncInfo) {AlluxioURI alluxioUri = mMountTable.reverseResolve(ufsUri).getUri();if (alluxioUri == null) {return;}try {if (syncInfo.isForceSync()) {RetryUtils.retry(""Full Sync"",() -> {mFileSystemMaster.activeSyncMetadata(alluxioUri, null, mSyncManager.getExecutor());},RetryUtils.defaultActiveSyncClientRetry(ServerConfiguration.getMs(PropertyKey.MASTER_UFS_ACTIVE_SYNC_RETRY_TIMEOUT)));} else {RetryUtils.retry(""Incremental Sync"",() -> {mFileSystemMaster.activeSyncMetadata(alluxioUri,syncInfo.getChangedFiles(ufsUri).stream().map((uri) -> Objects.requireNonNull(mMountTable.reverseResolve(uri)).getUri()).collect(Collectors.toSet()),mSyncManager.getExecutor());},RetryUtils.defaultActiveSyncClientRetry(ServerConfiguration.getMs(PropertyKey.MASTER_UFS_ACTIVE_SYNC_RETRY_TIMEOUT)));}} catch (IOException e) {}}}"	4
4979	public class A {private void setEventSeqNum() {if (partitionedRegion.isShadowPR() && partitionedRegion.getColocatedWith() != null) {PartitionedRegion parentPR = ColocationHelper.getLeaderRegion(partitionedRegion);BucketRegion parentBucket = parentPR.getDataStore().getLocalBucketById(getId());if (parentBucket.eventSeqNum == null) {parentBucket.eventSeqNum = new AtomicLong5(getId());}}if (partitionedRegion.getColocatedWith() == null) {eventSeqNum = new AtomicLong5(getId());} else {PartitionedRegion parentPR = ColocationHelper.getLeaderRegion(partitionedRegion);BucketRegion parentBucket = parentPR.getDataStore().getLocalBucketById(getId());if (parentBucket == null && logger.isDebugEnabled()) {}Assert.assertTrue(parentBucket != null);eventSeqNum = parentBucket.eventSeqNum;}}}	1
4980	"public class A {private void getEntriesAndRespond(CentralRequest request, StreamObserver<AgentResponse> responseObserver) {Entries entries;try {entries = liveTraceRepository.getEntries("""", request.getEntriesRequest().getTraceId());} catch (Exception e) {sendExceptionResponse(request, responseObserver);return;}EntriesResponse.Builder response = EntriesResponse.newBuilder();if (entries != null) {response.addAllEntry(entries.entries());response.addAllSharedQueryText(sharedQueryTextLimiter.reduceTracePayloadWherePossible(entries.sharedQueryTexts()));}responseObserver.onNext(AgentResponse.newBuilder().setRequestId(request.getRequestId()).setEntriesResponse(response).build());}}"	1
4981	public class A {@Overrideprotected void getExistingAxioms() {SortedSet<OWLDataProperty> existingSuperProperties =reasoner.getSuperProperties(entityToDescribe);if (existingSuperProperties != null && !existingSuperProperties.isEmpty()) {for (OWLDataProperty supProp : existingSuperProperties) {existingAxioms.add(df.getOWLSubDataPropertyOfAxiom(entityToDescribe, supProp));}}}}	1
4982	public class A {public void produceMessage(ProduceRequest request,QosLevel qosLevel,Producer producer,ProducePartitionGroupRequest partitionGroupRequest,EventListener<ProduceResponse.PartitionResponse> listener) {try {produce.putMessageAsync(producer,partitionGroupRequest.getMessages(),qosLevel,(writeResult) -> {if (!writeResult.getCode().equals(JoyQueueCode.SUCCESS)) {}short code = KafkaErrorCode.joyQueueCodeFor(writeResult.getCode().getCode());listener.onEvent(new ProduceResponse.PartitionResponse(ProduceResponse.PartitionResponse.NONE_OFFSET, code));});} catch (Exception e) {short code = KafkaErrorCode.exceptionFor(e);listener.onEvent(new ProduceResponse.PartitionResponse(ProduceResponse.PartitionResponse.NONE_OFFSET, code));}}}	2
4983	public class A {@Overridepublic void save(NotebookAuthorizationInfoSaving authorizationInfoSaving) throws IOException {FileUtils.atomicWriteToFile(authorizationInfoSaving.toJson(), authorizationPath);}}	1
4984	"public class A {@Testpublic void testSerializeData_container() throws SerializationException {final DataSchemaNode schemaNode =DataSchemaContextTree.from(this.effectiveModelContext).findChild(YangInstanceIdentifier.of(TopLevelContainer.QNAME)).orElseThrow().getDataSchemaNode();NormalizedNode<?, ?> deserializeData =bindingSerializer.deserialize(schemaNode, new StringReader(loadResourceAsString(""top-level-container.xml"")));Assert.assertNotNull(deserializeData);}}"	1
4985	public class A {@Overridepublic boolean isTargetInterceptor(HttpServletRequest req) throws WebTrustAssociationException {boolean isTargetInterceptor = false;FedizContext fedCtx = getFederationContext(req);if (fedCtx != null) {if (fedCtx.isDetectExpiredTokens()) {return true;}MetadataDocumentHandler mddHandler = new MetadataDocumentHandler(fedCtx);if (mddHandler.canHandleRequest(req)) {return true;}LogoutHandler logoutHandler = new LogoutHandler(fedCtx, req.getContextPath());if (logoutHandler.canHandleRequest(req)) {return true;}SigninHandler<TAIResult> signinHandler = new SigninHandler<>(fedCtx);if (signinHandler.canHandleRequest(req)) {return true;}HttpSession session = req.getSession(false);if (session != null) {Cookie[] cookies = req.getCookies();if (cookies != null) {for (Cookie c : cookies) {if (cookieName.equals(c.getName())) {isTargetInterceptor = false;break;}}}Object token = session.getAttribute(Constants.SECURITY_TOKEN_SESSION_ATTRIBUTE_KEY);if (token != null) {isTargetInterceptor = true;}return isTargetInterceptor;}isTargetInterceptor = true;} else {}return isTargetInterceptor;}}	8
4986	public class A {private void invokeCqConnectedListeners(String cqName, ClientCQImpl cQuery, boolean connected) {if (!cQuery.isRunning() || cQuery.getCqAttributes() == null) {return;}cQuery.setConnected(connected);CqListener[] cqListeners = cQuery.getCqAttributes().getCqListeners();if (logger.isDebugEnabled()) {}for (CqListener cqListener : cqListeners) {try {if (cqListener != null) {if (cqListener instanceof CqStatusListener) {CqStatusListener listener = (CqStatusListener) cqListener;if (connected) {listener.onCqConnected();} else {listener.onCqDisconnected();}}}} catch (Exception ex) {if (!cache.getCancelCriterion().isCancelInProgress()) {if (logger.isDebugEnabled()) {}}} catch (VirtualMachineError err) {SystemFailure.initiateFailure(err);throw err;} catch (Throwable t) {SystemFailure.checkFailure();if (logger.isDebugEnabled()) {}}}}}	5
4987	public class A {private void setPropertyFromConfigIfNotNull(PropertyWithDBKey<String> property) {HApplicationConfiguration valueHolder =applicationConfigurationDAO.findByKey(property.getKey());if (valueHolder != null) {try {property.set(valueHolder.getValue());} catch (InvocationTargetException | IllegalAccessException e) {}}}}	1
4988	"public class A {@Overridepublic void initialize(@NotNull NodeBuilder builder) {if (!builder.hasChildNode(JcrConstants.JCR_SYSTEM)) {throw new IllegalStateException(""Missing "" + JcrConstants.JCR_SYSTEM + "" node, NodeStore not initialized."");}NodeBuilder system = builder.getChildNode(JcrConstants.JCR_SYSTEM);if (!system.hasChildNode(REP_PRIVILEGES)) {NodeBuilder privileges = system.child(REP_PRIVILEGES);privileges.setProperty(JcrConstants.JCR_PRIMARYTYPE, NT_REP_PRIVILEGES, Type.NAME);NodeState base = squeeze(builder.getNodeState());NodeStore store = new MemoryNodeStore(base);try {Root systemRoot = rootProvider.createSystemRoot(store, null);new PrivilegeDefinitionWriter(systemRoot).writeBuiltInDefinitions();} catch (RepositoryException e) {throw new RuntimeException(e);}NodeState target = store.getRoot();target.compareAgainstBaseState(base, new ApplyDiff(builder));}}}"	1
4989	"public class A {@Testpublic void test() {Config config = new Config();config.setProperty(ClusterProperty.OPERATION_CALL_TIMEOUT_MILLIS.getName(), ""2000"");config.setClusterName(randomName());JetInstance inst1 = Hazelcast.newHazelcastInstance(config).getJetInstance();JetInstance inst2 = Hazelcast.newHazelcastInstance(config).getJetInstance();new Thread(() -> {while (!terminated.get()) {Connection connection = null;while (connection == null) {connection =ImdgUtil.getMemberConnection(getNodeEngineImpl(inst1), getNodeEngineImpl(inst2).getThisAddress());}connection.close(""test"", new Exception(""test failure""));sleepMillis(300);}}).start();DAG dag = new DAG();Vertex v1 = dag.newVertex(""v1"", () -> new MockP()).localParallelism(2);Vertex v2 = dag.newVertex(""v2"", () -> new MockP()).localParallelism(2);dag.edge(between(v1, v2).distributed());AtomicInteger jobCount = new AtomicInteger();new Thread(() -> {while (!terminated.get()) {try {inst1.newJob(dag).getFuture().join();jobCount.incrementAndGet();} catch (Exception e) {}}}).start();long lastIncrement = System.nanoTime();long lastJobCount = 0;long testEndTime = System.nanoTime() + MINUTES.toNanos(3);for (long now; (now = System.nanoTime()) < testEndTime; ) {if (jobCount.get() > lastJobCount) {lastIncrement = now;lastJobCount++;}if (NANOSECONDS.toSeconds(now - lastIncrement) > 30) {fail(""jobCount didn't increment for 30 seconds"");}sleepMillis(100);}}}"	4
4990	public class A {@Overrideprotected void processRequest(CreateRequest request, ImapSession session, Responder responder) {final MailboxPath mailboxPath =PathConverter.forSession(session).buildFullPath(request.getMailboxName());try {final MailboxManager mailboxManager = getMailboxManager();mailboxManager.createMailbox(mailboxPath, session.getMailboxSession());unsolicitedResponses(session, responder, false);okComplete(request, responder);} catch (MailboxExistsException e) {no(request, responder, HumanReadableText.MAILBOX_EXISTS);} catch (TooLongMailboxNameException e) {taggedBad(request, responder, HumanReadableText.FAILURE_MAILBOX_NAME);} catch (MailboxException e) {no(request, responder, HumanReadableText.GENERIC_FAILURE_DURING_PROCESSING);}}}	3
4991	"public class A {@Override@SuppressWarnings(""unchecked"")public void print(XPrintModel printModel) {List<ContentBasedDirectiveSettings> settings = new ArrayList<>();try {settings =(List<ContentBasedDirectiveSettings>)printModel.getPropertyValue(ContentBasedDirectivePrint.PROP_SLV_SETTINGS);} catch (java.lang.Exception e) {}short countMax = 0;for (ContentBasedDirectiveSettings v : settings) countMax += v.getCopyCount();printModel.setPrintProgressMaxValue(countMax);short count = 0;for (ContentBasedDirectiveSettings v : settings) {if (printModel.isCanceled()) return;if (v.getCopyCount() > 0) {printVerfuegungspunkt(printModel, v.directiveId, v.isDraft, v.isOriginal, v.getCopyCount());}count += v.getCopyCount();printModel.setPrintProgressValue(count);}}}"	1
4992	public class A {public void updateState(List<TridentTuple> tuples, TridentCollector collector) {try {writeTuples(tuples);} catch (Exception e) {abortAndCloseWriters();throw new FailedException(e);}}}	1
4993	public class A {@Overridepublic void start() {jettyServer = new Server();HttpConfiguration httpConfiguration = new HttpConfiguration();ServerConnector connector =new ServerConnector(jettyServer, new HttpConnectionFactory(httpConfiguration));connector.setReuseAddress(true);connector.setPort(port);jettyServer.addConnector(connector);jettyServer.setHandler(new HTTPMetricsHandler());try {jettyServer.start();while (!jettyServer.isStarted()) {Thread.sleep(500);}} catch (Exception ex) {}}}	1
4994	"public class A {public void updateRegistration(Resource resource, BaseAction action) throws PublicationException {if (resource.isRegistered()) {if (action == null) {action = new BaseAction(textProvider, cfg, registrationManager);}try {String iptKey = null;if (registrationManager.getIpt() != null) {iptKey =(registrationManager.getIpt().getKey() == null)? null: registrationManager.getIpt().getKey().toString();}registryManager.updateResource(resource, iptKey);} catch (RegistryException e) {String msg = RegistryException.logRegistryException(e, action);action.addActionError(msg);LOG.error(msg);msg =action.getText(""admin.config.updateMetadata.resource.fail.registry"",new String[] {e.getMessage()});action.addActionError(msg);LOG.error(msg);throw new PublicationException(PublicationException.TYPE.REGISTRY, msg, e);} catch (InvalidConfigException e) {String msg =action.getText(""manage.overview.failed.resource.update"", new String[] {e.getMessage()});action.addActionError(msg);throw new PublicationException(PublicationException.TYPE.REGISTRY, msg, e);}}}}"	2
4995	public class A {@Overridepublic ChangelogRoot getChangelogRoot() {if (changelogRoot == null) {synchronized (MeshRootImpl.class) {ChangelogRoot foundChangelogRoot =out(HAS_CHANGELOG_ROOT).nextOrDefaultExplicit(ChangelogRootImpl.class, null);if (foundChangelogRoot == null) {changelogRoot = getGraph().addFramedVertex(ChangelogRootImpl.class);linkOut(changelogRoot, HAS_CHANGELOG_ROOT);if (log.isInfoEnabled()) {}} else {changelogRoot = foundChangelogRoot;}}}return changelogRoot;}}	1
4996	public class A {public boolean removeCheckpoint(GridTaskSessionInternal ses, String key) {assert ses != null;assert key != null;Set<String> keys = keyMap.get(ses.getId());boolean rmv = false;if (keys != null) {keys.remove(key);rmv = getSpi(ses.getCheckpointSpi()).removeCheckpoint(key);} else if (log.isDebugEnabled())return rmv;}}	1
4997	public class A {protected void addShutdownHook() {shutdownHook = new ShutdownThread(this);Runtime.getRuntime().addShutdownHook(shutdownHook);}}	1
4998	public class A {private String get(final String classInternalName1, final String classInternalName2) {if (classInternalName1 == null|| classInternalName1.equals(OBJECT_CLASS_INTERNAL_NAME)|| classInternalName2 == null|| classInternalName2.equals(OBJECT_CLASS_INTERNAL_NAME)) {return OBJECT_CLASS_INTERNAL_NAME;}if (classInternalName1.equals(classInternalName2)) {return classInternalName1;}final ClassReader classReader1 = getClassReader(classInternalName1);if (classReader1 == null) {return OBJECT_CLASS_INTERNAL_NAME;}final ClassReader classReader2 = getClassReader(classInternalName2);if (classReader2 == null) {return OBJECT_CLASS_INTERNAL_NAME;}if (isInterface(classReader1)) {return getCommonInterface(classReader1, classReader2);}if (isInterface(classReader2)) {return getCommonInterface(classReader2, classReader1);}return getCommonClass(classReader1, classReader2);}}	2
4999	public class A {public IoWriteFuture write(Buffer buffer) {ByteBuffer buf = ByteBuffer.wrap(buffer.array(), buffer.rpos(), buffer.available());final DefaultIoWriteFuture future = new DefaultIoWriteFuture(null, buf);if (isClosing()) {Throwable exc = new ClosedChannelException();future.setException(exc);exceptionCaught(exc);return future;}writes.add(future);startWriting();return future;}}	1
5000	"public class A {@Overridepublic void initialize() throws InitializationException {try {this.random = SecureRandom.getInstance(""SHA1PRNG"");} catch (NoSuchAlgorithmException e) {this.random = new SecureRandom();}byte[] seed = this.random.generateSeed(TOKEN_LENGTH);this.random.setSeed(seed);}}"	2
5001	"public class A {@Scheduled(fixedRateString = ""${environments.cleaning.job.periodicity.milliseconds}"")public void deleteExpiredEnvironmentsTask() {int deleted = testEnvironmentDao.deleteExpired(System.currentTimeMillis());if (deleted > 0) {} else {}}}"	2
5002	public class A {@Overridepublic void releasePodIpAddress(long id) {if (s_logger.isDebugEnabled()) {}DataCenterIpAddressVO vo = this.findById(id);vo.setTakenAt(null);vo.setInstanceId(null);vo.setReservationId(null);persist(vo);}}	1
5003	public class A {@Overridepublic void field(Clazz.FieldDef field) {m_isField = true;m_field = field.getName();m_fieldDef = field;m_descriptor = field.getDescriptor().toString();}}	1
5004	public class A {public void waitForProfileStatus(int status) {ProfileShutdownListener listener = new ProfileShutdownListener();addProfileChangeListener(listener);try {int memberNum;String regionName = getPartitionedRegion().getFullPath();do {Region pr = getPartitionedRegion().getCache().getRegion(regionName);if (pr == null || pr.isDestroyed()) break;Set members = adviseNotAtShutDownAllStatus(status);memberNum = members.size();if (memberNum > 0) {if (logger.isDebugEnabled()) {}listener.waitForChange();}} while (memberNum > 0);} finally {removeProfileChangeListener(listener);}}}	1
5005	public class A {@Overridepublic void close() {handler.close();try {classLoader.close();} catch (IOException e) {}}}	1
5006	public class A {private void awaitThreads(Map<String, IgniteInternalFuture<?>> futs) {for (String cacheName : futs.keySet()) {IgniteInternalFuture<?> fut = futs.get(cacheName);try {fut.get(15, TimeUnit.SECONDS);} catch (Exception e) {try {fut.cancel();} catch (IgniteCheckedException ce) {}}}}}	2
5007	public class A {private boolean needSkip(MessageExt msgExt) {long valueOfCurrentMinusBorn = System.currentTimeMillis() - msgExt.getBornTimestamp();if (valueOfCurrentMinusBorn> transactionalMessageBridge.getBrokerController().getMessageStoreConfig().getFileReservedTime()* 3600L* 1000) {return true;}return false;}}	1
5008	public class A {public void finishTxOnRecovery(final IgniteInternalTx tx, boolean commit) {if (log.isInfoEnabled())assert tx.finalizationStatus() == RECOVERY_FINISH : tx;if (tx instanceof IgniteTxRemoteEx) {IgniteTxRemoteEx rmtTx = (IgniteTxRemoteEx) tx;rmtTx.doneRemote(tx.xidVersion(),Collections.<GridCacheVersion>emptyList(),Collections.<GridCacheVersion>emptyList(),Collections.<GridCacheVersion>emptyList());}if (commit) tx.commitAsync().listen(new CommitListener(tx));else if (!tx.local()) neighborcastPartitionCountersAndRollback(tx);else tx.rollbackAsync();}}	1
5009	public class A {@Overridepublic boolean updateSentinelMaster(SentinelMaster sentinelMaster) {try {return sentinelMastersDao.updateSentinelMaster(sentinelMaster) > 0;} catch (Exception e) {return false;}}}	1
5010	public class A {long add(Transaction transaction) {PendingTransaction newTail = new PendingTransaction(transaction);long captureTime;synchronized (queueLock) {captureTime = clock.currentTimeMillis();if (queueLength >= TRANSACTION_PENDING_LIMIT) {transaction.removeFromActiveTransactions();} else {newTail.captureTime = captureTime;tail.next = newTail;tail = newTail;queueLength++;}}return captureTime;}}	1
5011	public class A {public static void main(String[] args) {try {final ClassLoader bootstrap = createBootstrapClassLoader();NiFiProperties properties = initializeProperties(args, bootstrap);properties.validate();new NiFi(properties);} catch (final Throwable t) {}}}	2
5012	public class A {@Overridepublic void run() {while (done < total) {final short pctg = getPercentage();if (pctg != lastPercentage) {if (pctg > 0)lastPercentage = pctg;}try {Thread.sleep(1000);} catch (InterruptedException e) {}}}}	1
5013	public class A {@Overridepublic Integer getNumberOfConfigs() {return configurations.size();}}	1
5014	public class A {private synchronized void scheduleRetry() {if (retryTimer != null || retryInterval <= 0) {return;}retryTimer =device.schedule(new Runnable() {@Overridepublic void run() {synchronized (AuditLogger.this) {retryTimer = null;}sendQueuedMessages();}},retryInterval,TimeUnit.SECONDS);}}	1
5015	"public class A {@Overridepublic synchronized void cleanupWorkflowInstances(int buffer, WorkflowState state)throws UnauthorizedException, WorkflowDatabaseException {int instancesCleaned = 0;int cleaningFailed = 0;WorkflowQuery query =new WorkflowQuery().withState(state).withDateBefore(DateUtils.addDays(new Date(), -buffer)).withCount(Integer.MAX_VALUE);for (WorkflowInstance workflowInstance : getWorkflowInstances(query).getItems()) {try {remove(workflowInstance.getId());instancesCleaned++;} catch (WorkflowDatabaseException | UnauthorizedException e) {throw e;} catch (NotFoundException e) {} catch (WorkflowParsingException | WorkflowStateException e) {cleaningFailed++;}}if (instancesCleaned == 0 && cleaningFailed == 0) {return;}if (cleaningFailed > 0) {throw new WorkflowDatabaseException(""Unable to clean all workflow instances, see logs!"");}}}"	6
5016	public class A {private void logApiMountEvent(ServiceWrapper service, String serviceApiPath, Router router) {List<Route> serviceRoutes = router.getRoutes();if (serviceRoutes.isEmpty()) {return;}String serviceName = service.getName();int port = server.getActualPort().orElse(0);serviceRoutes.stream().map(Route::getPath).filter(Objects::nonNull).findAny().ifPresent(someRoute ->}}	2
5017	public class A {private void diff(XWikiDocument document, ExtensionId extensionId) {if (getRequest().isVerbose()) {}XWikiDocument previousDocument =document.duplicate(new DocumentVersionReference(document.getDocumentReference(), extensionId));XWikiContext xcontext = this.xcontextProvider.get();try {XWikiDocument nextDocument =xcontext.getWiki().getDocument(document.getDocumentReferenceWithLocale(), xcontext);if (nextDocument.isNew()) {nextDocument = null;}maybeAddDocumentDiff(this.documentDiffBuilder.diff(previousDocument, nextDocument));} catch (XWikiException e) {}}}	2
5018	public class A {@Overridepublic Response onCommand(POP3Session session, Request request) {MDCBuilder.withMdc(MDCBuilder.create().addToContext(MDCBuilder.ACTION, request.getCommand()).addToContext(MDCConstants.withSession(session)).addToContext(MDCConstants.forRequest(request)),return POP3Response.ERR;}}	1
5019	"public class A {@RequestMapping(value = ""/data/{cubeName}/{segmentName}"",method = RequestMethod.DELETE,produces = {""application/json""})@ResponseBodypublic void removeSegment(@PathVariable(value = ""cubeName"") String cubeName,@PathVariable(value = ""segmentName"") String segmentName) {StreamingSegmentManager segmentManager = streamingServer.getStreamingSegmentManager(cubeName);segmentManager.purgeSegment(segmentName);}}"	1
5020	"public class A {private void deployAsLocalEntry(CloseableHttpResponse closeableHttpResponse, LocalEntryServiceProxy localEntryServiceProxy)throws IOException, ArtifactSynchronizerException {if (closeableHttpResponse.getStatusLine().getStatusCode() == 200) {try (InputStream content = closeableHttpResponse.getEntity().getContent()) {MessageContext.setCurrentMessageContext(GatewayUtils.createAxis2MessageContext());PrivilegedCarbonContext.startTenantFlow();PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantDomain(tenantDomain, true);String resourceContent = IOUtils.toString(content);if (localEntryServiceProxy.localEntryExists(APIConstants.GA_CONF_KEY)) {localEntryServiceProxy.deleteEntry(APIConstants.GA_CONF_KEY);}localEntryServiceProxy.addLocalEntry(""<localEntry key=\""""+ APIConstants.GA_CONF_KEY+ ""\"">""+ resourceContent+ ""</localEntry>"");} catch (LocalEntryAdminException e) {} finally {MessageContext.destroyCurrentMessageContext();PrivilegedCarbonContext.endTenantFlow();}} else {throw new ArtifactSynchronizerException(""Error while deploying localEntry status code : ""+ closeableHttpResponse.getStatusLine().getStatusCode());}}}"	1
5021	"public class A {@Testpublic void testCase_11_mita() {String genome = ""testMita"";String gff3File = path(""testMita.gff"");String resultFile = null;buildGff3AndCompare(genome, gff3File, resultFile, false, false);}}"	1
5022	"public class A {@CliCommand(value = {""schema"", ""create schema""},help =""Parses the specified resource file and executes commands for creation/updation of""+ "" schema. If <schema-type-filter> is provided, only schema types matching that will""+ "" be worked upon. If <file-name-filter> is provided, then only those files that""+ "" contain the filter value will be worked upon. \n""+ ""Expected directory structure is ""+ STRUCTURE)public void script(@CliOption(key = {"""", ""db""},help = ""<database-to-create-schema-in>"",mandatory = true)final String database,@CliOption(key = {"""", ""file"", ""path""},help = ""<schema-directory>"",mandatory = true)final File schemaDirectory,@CliOption(key = {"""", ""type""},help = ""<schema-type-filter>"")final String type,@CliOption(key = {"""", ""name""},help = ""<file-name-filter>"")final String name) {if (!schemaDirectory.isDirectory()) {throw new IllegalStateException(""Schema directory should be a directory"");}shell.executeCommand(""create database "" + database);if (shell.executeScriptLine(""use "" + database)) {SchemaTraverser schemaTraverser = new SchemaTraverser(schemaDirectory, processor, type, name);schemaTraverser.run();logger.severe(""All failures: "" + processor.failedFor);} else {throw new IllegalStateException(""Switching to database "" + database + "" failed"");}}}"	1
5023	"public class A {public ImportStorage<BuchungssatzDO> importBuchungsdaten(final InputStream is, final String filename) throws Exception {checkLoggeinUserRight(accessChecker);ExcelWorkbook workbook = new ExcelWorkbook(is, filename, ThreadLocalUserContext.getLocale());final ImportStorage<BuchungssatzDO> storage =new ImportStorage<>(Type.BUCHUNGSSAETZE, workbook, ImportLogger.Level.INFO, ""'"" + filename + ""':"", log);final BuchungssatzExcelImporter imp =new BuchungssatzExcelImporter(storage, kontoDao, kost1Dao, kost2Dao);imp.doImport(workbook);return storage;}}"	1
5024	"public class A {@Testpublic void test18AnonRead() {try {serviceAnon.things().query().list();Assert.fail(ANON_SHOULD_NOT_BE_ABLE_TO_READ);} catch (NotAuthorizedException ex) {} catch (ServiceFailureException ex) {Assert.fail(""Expected NotAuthorizedException, got "" + ex);}}}"	2
5025	public class A {protected void computeConfiguration(TypeConfiguration config) {if (isNotBlank(config.prefetchInfo)) {prefetchInfo = new PrefetchInfo(config.prefetchInfo);}clearComplexPropertyBeforeSet = config.clearComplexPropertyBeforeSet;allowVersionWriteForDublinCore = config.allowVersionWriteForDublinCore;}}	3
5026	"public class A {public ActionForward submitChangeDiagnosis(ActionMapping mapping,ActionForm form,HttpServletRequest request,HttpServletResponse response) {if (request.getSession().getAttribute(""userrole"") == null)return mapping.findForward(""expired"");request.setAttribute(""change_flag"", ""true"");CaseManagementEntryFormBean cform = (CaseManagementEntryFormBean) form;request.setAttribute(""from"", request.getParameter(""from""));String demono = getDemographicNo(request);request.setAttribute(""demoName"", getDemoName(demono));request.setAttribute(""demoAge"", getDemoAge(demono));request.setAttribute(""demoDOB"", getDemoDOB(demono));String strIndex = request.getParameter(""change_diagnosis_id"");int index = Integer.parseInt(strIndex);CheckBoxBean[] oldList = cform.getIssueCheckList();CheckIssueBoxBean[] issueList = cform.getNewIssueCheckList();CheckIssueBoxBean substitution = null;String origIssueDesc = null;String newIssueDesc = null;for (CheckIssueBoxBean curr : issueList) {if (curr.isChecked()) {substitution = curr;break;}}if (substitution != null) {for (int x = 0; x < oldList.length; x++) {if (x == index) {Issue oldIssue = oldList[x].getIssue().getIssue();origIssueDesc = oldIssue.getDescription();Issue newIssue =caseManagementMgr.getIssue(String.valueOf(substitution.getIssue().getId().longValue()));newIssueDesc = newIssue.getDescription();oldList[x].getIssue().setIssue(newIssue);oldList[x].getIssue().setIssue_id(substitution.getIssue().getId().longValue());oldList[x].getIssue().setType(newIssue.getType());oldList[x].getIssueDisplay().setCode(newIssue.getCode());oldList[x].getIssueDisplay().setCodeType(newIssue.getType());oldList[x].getIssueDisplay().setDescription(newIssue.getDescription());caseManagementMgr.saveCaseIssue(oldList[x].getIssue());}}}cform.setIssueCheckList(oldList);if (substitution != null && origIssueDesc != null)this.caseManagementMgr.changeIssueInCPP(demono, origIssueDesc, newIssueDesc);return mapping.findForward(""view"");}}"	1
5027	public class A {private int calculateFitness(AbstractTestSuiteChromosome<? extends ExecutableChromosome> suite) {int coveredGoals = 0;double fitnessValue = 0.0;List<TestFitnessFunction> fitnessFunctions = this.fitnessCollector.getFitnessFunctionList();int totalGoals = fitnessFunctions.size();for (TestFitnessFunction crashGoal : fitnessFunctions) {double minFitnessValue = Double.MAX_VALUE;for (int i = 0; i < suite.size(); i++) {minFitnessValue =Math.min(minFitnessValue, crashGoal.getFitness((TestChromosome) suite.getTestChromosome(i)));}if (minFitnessValue == 0) {coveredGoals++;}fitnessValue += minFitnessValue;}totalFitnessValue = fitnessValue;return (coveredGoals / totalGoals);}}	2
5028	"public class A {@Overridepublic void prepareAnalyzer(Engine engine) throws InitializationException {try {loadHintRules();} catch (HintParseException ex) {throw new InitializationException(""Unable to parse the hint file"", ex);}}}"	1
5029	public class A {private ObjectNode executeQuery(HttpServletRequest request, String query, String members, int limit) {ObjectNode queryResult = mapper.createObjectNode();try {if (StringUtils.isNotBlank(query)) {Cluster cluster = repository.getCluster();String userName = request.getUserPrincipal().getName();String escapedQuery = StringEscapeUtils.escapeHtml4(query);cluster.addQueryInHistory(escapedQuery, userName);queryResult = cluster.executeQuery(query, members, limit);}} catch (Exception e) {}return queryResult;}}	1
5030	"public class A {@Test(dependsOnMethods = ""testCreateProject3"")public void checkNotFoundProject3() {metadata.read(() -> {Optional<Project> u1Proj = this.projProvider.findProjectByName(""Project3"");assertThat(u1Proj.isPresent()).isFalse();},TEST_USER3);}}"	1
5031	"public class A {@Overrideprotected void onChange(final ScriptDO obj, final ScriptDO dbObj) {if (!Arrays.equals(dbObj.getScript(), obj.getScript())) {obj.setScriptBackup(dbObj.getScript());final String filename =ReplaceUtils.encodeFilename(dbObj.getName() + ""_"" + PFDateTime.now().getIsoStringSeconds() + "".groovy"", true);final File backupDir = new File(ConfigXml.getInstance().getBackupDirectory(), ""scripts"");ConfigXml.ensureDir(backupDir);final File file = new File(backupDir, filename);try {FileUtils.writeStringToFile(file, dbObj.getScriptAsString());} catch (IOException ex) {}}}}"	2
5032	public class A {@Overridepublic List<Integer> chooseTasks(int taskId, List<Object> values) {if (targetTask.size() == 1) {return targetTask;}if (values.size() < 2) {return ImmutableList.of();}String url = (String) values.get(0);Metadata metadata = (Metadata) values.get(1);String partitionKey = partitioner.getPartition(url, metadata);if (StringUtils.isBlank(partitionKey)) {return ImmutableList.of();}int partition = Math.abs(partitionKey.hashCode() % targetTask.size());return ImmutableList.of(targetTask.get(partition));}}	2
5033	"public class A {public void createNetworkPolicies(BuildingBlockExecution execution) {try {String fqdns = execution.getVariable(CONTRAIL_NETWORK_POLICY_FQDN_LIST);if (fqdns != null && !fqdns.isEmpty()) {String fqdnList[] = fqdns.split("","");int fqdnCount = fqdnList.length;if (fqdnCount > 0) {for (int i = 0; i < fqdnCount; i++) {String fqdn = fqdnList[i];AAIPluralResourceUri uri =AAIUriFactory.createResourceUri(AAIFluentTypeBuilder.network().networkPolicies());uri.queryParam(NETWORK_POLICY_FQDN_PARAM, fqdn);Optional<org.onap.aai.domain.yang.NetworkPolicy> oNetPolicy =aaiNetworkResources.getNetworkPolicy(uri);if (!oNetPolicy.isPresent()) {String networkPolicyId = UUID.randomUUID().toString();NetworkPolicy networkPolicy = new NetworkPolicy();networkPolicy.setNetworkPolicyId(networkPolicyId);networkPolicy.setNetworkPolicyFqdn(fqdn);networkPolicy.setHeatStackId(execution.getVariable(HEAT_STACK_ID));aaiNetworkResources.createNetworkPolicy(networkPolicy);}}}}} catch (Exception ex) {exceptionUtil.buildAndThrowWorkflowException(execution, 7000, ex);}}}"	2
5034	public class A {void undoLocalChanges() {workspaceProvider.synchronizedOperation(new Callable<Void>() {@Overridepublic Void call() {try {try {git.rebase().setOperation(RebaseCommand.Operation.ABORT).call();} catch (final WrongRepositoryStateException e) {}final String remoteBranch =Constants.R_REMOTES+ Constants.DEFAULT_REMOTE_NAME+ '/'+ git.getRepository().getBranch();git.reset().setMode(ResetType.HARD).setRef(remoteBranch).call();git.clean().setCleanDirectories(true).call();try {final ObjectId head = git.getRepository().resolve(Constants.HEAD);} catch (final Exception e) {}} catch (final Exception e) {}return null;}});}}	4
5035	"public class A {@Overridepublic void filter(ContainerRequestContext containerRequestContext) throws IOException {if (_log.isDebugEnabled()) {StringBundler sb = new StringBundler(7);sb.append(""{headers: "");sb.append(MapUtil.toString(containerRequestContext.getHeaders()));sb.append("", method: "");sb.append(containerRequestContext.getMethod());sb.append("", uri: "");UriInfo uriInfo = containerRequestContext.getUriInfo();sb.append(uriInfo.getRequestUri());sb.append(""}"");}}}"	1
5036	"public class A {@Overridepublic void run() {List<String> types = config.addType;if (types == null || types.isEmpty()) {throw new IllegalArgumentException(""Must specify a single type to add."");}String firstType = types.get(0).toLowerCase().trim();String name = config.name;if (name == null || !validName(name)) {throw new IllegalArgumentException(format(""Invalid name, must match %s"", VALID_NAME_PATTERN));}switch (firstType) {case ""group"":try {keywhizClient.getGroupByName(name);throw new AssertionError(""Group already exists."");} catch (NotFoundException e) {} catch (IOException e) {throw Throwables.propagate(e);}try {keywhizClient.createGroup(name, config.getDescription(), config.getMetadata(mapper));} catch (IOException e) {throw Throwables.propagate(e);}break;case ""secret"":try {keywhizClient.getSanitizedSecretByName(name);throw new AssertionError(""Secret already exists."");} catch (NotFoundException e) {} catch (IOException e) {throw Throwables.propagate(e);}byte[] content = readSecretContent();ImmutableMap<String, String> metadata = config.getMetadata(mapper);createAndAssignSecret(name, config.getDescription(), content, metadata, config.getExpiry());break;case ""client"":try {keywhizClient.getClientByName(name);throw new AssertionError(""Client name already exists."");} catch (NotFoundException e) {} catch (IOException e) {throw Throwables.propagate(e);}try {keywhizClient.createClient(name, config.getDescription(), config.getSpiffeId());} catch (IOException e) {throw Throwables.propagate(e);}break;default:throw new AssertionError(""Invalid add type specified: "" + firstType);}}}"	2
5037	public class A {public void transactionStatusReceived(ZigBeeTransportProgressState progress, int transactionId) {synchronized (command) {if (command.getTransactionId() != transactionId) {return;}switch (progress) {case TX_NAK:failTransaction();break;case TX_ACK:if (responseMatcher == null || command.isAckRequest() == false) {completeTransaction(null);break;}state = TransactionState.TRANSMITTED;startTimer(timeout2);break;case RX_NAK:if (state == TransactionState.RESPONDED) {completeTransaction(completionCommand);} else {failTransaction();}break;case RX_ACK:if (responseMatcher == null|| state == TransactionState.RESPONDED|| (command instanceof ZclCommand&& ((ZclCommand) command).isDisableDefaultResponse())) {completeTransaction(completionCommand);} else {state = TransactionState.ACKED;}break;default:break;}}}}	2
5038	public class A {private void putTopicInRetryMap(HedwigHubClient client, ByteString topic) {if (LOGGER.isDebugEnabled()) {}synchronized (retryMap) {Set<ByteString> topics = retryMap.get(client);if (null == topics) {topics = new HashSet<ByteString>();retryMap.put(client, topics);}topics.add(topic);}}}	1
5039	"public class A {@Overridepublic void run() {short tableId = (short) 1;int initFlowId = 500;for (int i = 1; i <= flowsPerDpn; i++) {String flowId = Integer.toString(initFlowId + i);Match match = BulkOMaticUtils.getMatch(i);InstanceIdentifier<Node> nodeIId = BulkOMaticUtils.getFlowCapableNodeId(dpId);InstanceIdentifier<Table> tableIId = BulkOMaticUtils.getTableId(tableId, dpId);InstanceIdentifier<Flow> flowIId = BulkOMaticUtils.getFlowId(tableIId, flowId);Flow flow = BulkOMaticUtils.buildFlow(tableId, flowId, match);AddFlowInputBuilder builder = new AddFlowInputBuilder(flow);builder.setNode(new NodeRef(nodeIId));builder.setFlowTable(new FlowTableRef(tableIId));builder.setFlowRef(new FlowRef(flowIId));AddFlowInput addFlowInput = builder.build();LoggingFutures.addErrorLogging(flowService.addFlow(addFlowInput), LOG, ""addFlow"");if (i % batchSize == 0) {try {TimeUnit.MILLISECONDS.sleep(PAUSE_BETWEEN_BATCH_MILLIS);} catch (InterruptedException iEx) {}}}}}"	4
5040	public class A {@Overridepublic void onDisconnect(InterceptDisconnectMessage msg) {final String clientId = msg.getClientID();if (clientId.equalsIgnoreCase(frostClientId)) {return;}clientSubscriptions.getOrDefault(clientId, new ArrayList<>()).stream().forEach(subscribedTopic -> fireUnsubscribe(new SubscriptionEvent(subscribedTopic)));clientSubscriptions.remove(clientId);}}	1
5041	public class A {public synchronized Connection getConnection() {if (logger.isTraceEnabled()) {}return getConnection(waitamoment, retry);}}	1
5042	public class A {@Override@Deprecatedpublic <T> T setAttribute(AttributeSensor<T> attribute, T val) {if (LOG.isDebugEnabled())return super.sensors().set(attribute, val);}}	1
5043	public class A {public void setBackToNormalMemoryThreshold2(double backToNormalMemoryThreshold2) {if (Math.abs(this.backToNormalMemoryThreshold[1] - backToNormalMemoryThreshold2) > 0.001&& logger.isInfoEnabled()) {}this.backToNormalMemoryThreshold[1] = backToNormalMemoryThreshold2;}}	1
5044	public class A {public void waitForExit() {synchronized (m_frameworkProcess) {try {System.out.println();m_frameworkProcess.waitFor();shutdown();} catch (Throwable e) {shutdown();}}}}	2
5045	public class A {@Overridepublic void run() {process.destroy();}}	1
5046	"public class A {@SuppressWarnings(""checkstyle:ParameterNumber"")protected byte[] appendSignature(ClientSession session,String service,String keyType,PublicKey key,byte[] keyBytes,String clientHostname,String clientUsername,Signature verifier,Buffer buffer)throws Exception {byte[] id = session.getSessionId();String username = session.getUsername();String name = getName();Buffer bs =new ByteArrayBuffer(id.length+ username.length()+ service.length()+ name.length()+ keyType.length()+ keyBytes.length+ clientHostname.length()+ clientUsername.length()+ ByteArrayBuffer.DEFAULT_SIZE+ Long.SIZE,false);bs.putBytes(id);bs.putByte(SshConstants.SSH_MSG_USERAUTH_REQUEST);bs.putString(username);bs.putString(service);bs.putString(name);bs.putString(keyType);bs.putBytes(keyBytes);bs.putString(clientHostname);bs.putString(clientUsername);verifier.update(session, bs.array(), bs.rpos(), bs.available());byte[] signature = verifier.sign(session);if (log.isTraceEnabled()) {}bs.clear();bs.putString(keyType);bs.putBytes(signature);buffer.putBytes(bs.array(), bs.rpos(), bs.available());return signature;}}"	1
5047	public class A {private byte[] getToken(String spn, Oid oid) throws GSSException, LoginException {LoginContext lc = buildLoginContext();lc.login();Subject subject = lc.getSubject();GSSManager manager = GSSManager.getInstance();GSSName serverName = manager.createName(spn, null);GSSContext context =manager.createContext(serverName.canonicalize(oid), oid, null, GSSContext.DEFAULT_LIFETIME);final byte[] token = new byte[0];try {return Subject.doAs(subject, new CreateServiceTicketAction(context, token));} catch (PrivilegedActionException e) {if (e.getCause() instanceof GSSException) {throw (GSSException) e.getCause();}return null;}}}	1
5048	public class A {@Overridepublic void execute() {try {synchronized (this) {wait(timeoutSeconds * 1000);}if (!interrupted) {process.destroy();}} catch (InterruptedException e) {}}}	1
5049	"public class A {@SuppressWarnings(""unchecked"")protected void verifyCache() {if (!log.isTraceEnabled()) {return;}for (LRUElementDescriptor<K, V> li = list.getFirst();li != null;li = (LRUElementDescriptor<K, V>) li.next) {final K key = li.getKey();if (!map.containsKey(key)) {if (key instanceof GroupAttrName) {final GroupAttrName<?> name = (GroupAttrName<?>) key;}dumpMap();} else if (map.get(li.getKey()) == null) {}}for (LRUElementDescriptor<K, V> li3 = list.getFirst();li3 != null;li3 = (LRUElementDescriptor<K, V>) li3.next) {if (!map.containsValue(li3)) {dumpMap();}}map.keySet().stream().filter(key -> {for (LRUElementDescriptor<K, V> li2 = list.getFirst();li2 != null;li2 = (LRUElementDescriptor<K, V>) li2.next) {if (key.equals(li2.getKey())) {return true;}}dumpCacheEntries();if (map.containsKey(key)) {} else {}return false;}).findFirst();}}"	18
5050	"public class A {protected void search(String searchTerm) {String param = new StringBuilder(""%"").append(searchTerm).append(""%"").toString();String hql =""select element.uuid from CnATreeElement as element ""+ ""inner join element.entity as entity ""+ ""inner join entity.typedPropertyLists as propertyList ""+ ""inner join propertyList.properties as props ""+ ""where props.propertyValue like ?"";Object[] params = new Object[] {param};List<String> uuidList = elementDao.findByQuery(hql, params);checkListForSearchTerm(uuidList, searchTerm);}}"	2
5051	public class A {public synchronized void addSecurityScanResult(SecurityScan securityCheck) {logListModel.addSecurityScanResult(securityCheck);if (follow) {try {testLogList.ensureIndexIsVisible(logListModel.getSize() - 1);} catch (RuntimeException e) {}}}}	1
5052	"public class A {@Overrideprotected void run() throws Exception {StringBuilder sb = initCommandLine();List<Pair<String, String>> inputFilenames =DockerWrapperAnalysisExecutor.getInputFilenames(getInputFile(), FastqcWrapperAnalysis.FILE_PARAM_NAMES, getExecutorParams());Map<String, String> mountMap = appendMounts(inputFilenames, sb);appendCommand("""", sb);appendInputFiles(inputFilenames, mountMap, sb);List<Pair<String, String>> outputFilenames =new ArrayList<>(Arrays.asList(new ImmutablePair<>(""o"", """")));appendOutputFiles(outputFilenames, sb);Set<String> skipParams = new HashSet<>(Arrays.asList(""o"", ""outdir"", ""d"", ""dir"", ""j"", ""java""));appendOtherParams(skipParams, sb);runCommandLine(sb.toString());}}"	1
5053	"public class A {@SuppressWarnings(""unchecked"")public <T extends Entity> T get(EntityType type, String name) throws FalconException {ConcurrentHashMap<String, Entity> entityMap = dictionary.get(type);if (entityMap.containsKey(name)) {if (updatesInProgress.get() != null&& updatesInProgress.get().getEntityType() == type&& updatesInProgress.get().getName().equals(name)) {return (T) updatesInProgress.get();}T entity = (T) entityMap.get(name);if (entity == NULL && shouldPersist) {try {entity = this.restore(type, name);} catch (IOException e) {throw new StoreAccessException(e);}entityMap.put(name, entity);return entity;} else {return entity;}} else {return null;}}}"	1
5054	public class A {@Overridepublic void done(boolean success) throws MailQueueException {mailQueueItem.done(success);if (success && mandatoryJmapMetaDataIsPresent()) {Optional<?> optionalRawMessageId = retrieveMessageId();MessageId messageId = messageIdFactory.fromString((String) optionalRawMessageId.get());Optional<String> username = retrieveUsername();if (!getMail().getAttribute(IS_DELIVERED.getName()).isPresent()) {try {MailboxSession mailboxSession =mailboxManager.createSystemSession(Username.of(username.get()));moveFromOutboxToSentWithSeenFlag(messageId, mailboxSession);getMail().setAttribute(IS_DELIVERED);} catch (MailShouldBeInOutboxException e) {}}}}}	1
5055	public class A {private Response startRun(UriInfo uriInfo, RepairRun repairRun) throws ReaperException {final RepairRun newRun = context.repairManager.startRepairRun(repairRun);return Response.ok().location(buildRepairRunUri(uriInfo, newRun)).build();}}	1
5056	public class A {@Override@PreDestroypublic void close() {lldpNotificationRegistration.close();}}	1
5057	public class A {@Overridepublic void onApplicationEvent(AppConfigurationRefreshEvent event) {try {appConfigurationRefresh.resetCache(event.getEndpoint());} catch (Exception e) {}}}	1
5058	public class A {private Destination resolveDestination(String destinationName) throws JMSException {if (log.isDebugEnabled()) {}return resolveDestinationName(destinationName, session);}}	1
5059	public class A {private void processMatchedGroupMembers(ComparableGroupItem group, Collection<ComparableMemberItem> matchedMembers, boolean dryRun) {for (ComparableMemberItem member : matchedMembers) {if (!dryRun) {edu.internet2.middleware.grouper.Member grouperMember = member.getGrouperMember();try {connector.updateGooMember(group.getGrouperGroup(),grouperMember.getSubject(),connector.determineRole(grouperMember, group.getGrouperGroup()));} catch (IOException e) {}}}}}	1
5060	public class A {public static boolean checkPassword(byte[] passwordHash, byte[] candidatePassword, byte[] salt) {ByteArrayOutputStream outputStream = new ByteArrayOutputStream();byte[] candidateHash;try {outputStream.write(salt);outputStream.write(candidatePassword);candidateHash = calculateHash(outputStream.toByteArray());} catch (NoSuchAlgorithmException | IOException e) {return false;}return Arrays.equals(passwordHash, candidateHash);}}	1
5061	public class A {private void setProject(Project project) {if (project == null) {return;}this.project = project;if (project.getTestPackageBase() == null) {return;}Reflections reflections = new Reflections(project.getTestPackageBase());timeChopClasses = reflections.getTypesAnnotatedWith(TimeChop.class);iterationChopClasses = reflections.getTypesAnnotatedWith(IterationChop.class);if (project.getLoadKey() == null) {state = State.INACTIVE;return;}if (timeChopClasses.isEmpty() && iterationChopClasses.isEmpty()) {state = State.INACTIVE;return;}state = State.READY;}}	6
5062	public class A {@Overridepublic Object call() throws Exception {int start = keyStart.getAndAdd(KEYS_PER_THREAD);for (int i = 0; i < KEYS_PER_THREAD && !putFailed; i++) {int key = start + i;try {cache.put(key, 1);} catch (Exception e) {putFailed = true;q.add(key);}}return null;}}	1
5063	"public class A {protected ContentItemTO createNewFile(String site,ContentItemTO parentItem,String fileName,String contentType,InputStream input,String user,boolean unlock,ResultTO result)throws ServiceLayerException, UserNotFoundException {ContentItemTO fileItem = null;if (parentItem != null) {String folderPath = fileToFolder(site, parentItem.getUri());String itemPath = parentItem.getUri() + FILE_SEPARATOR + fileName;try {contentService.writeContent(site, itemPath, input);String commitId = contentRepository.getRepoLastCommitId(site);result.setCommitId(commitId);itemServiceInternal.persistItemAfterCreate(site, itemPath, user, result.getCommitId(), Optional.of(unlock));itemServiceInternal.updateParentIds(site, ContentUtils.getParentUrl(parentItem.getUri()));} catch (Exception e) {} finally {IOUtils.closeQuietly(input);}if (unlock) {contentRepository.unLockItem(site, itemPath);} else {contentRepository.lockItem(site, itemPath);}fileItem = contentService.getContentItem(site, itemPath, 0);return fileItem;} else {throw new ContentNotFoundException(parentItem.getUri() + "" does not exist in site: "" + site);}}}"	1
5064	"public class A {@RequestMapping(value = ""/vaults/{vaultid}/updatereviewdate"", method = RequestMethod.POST)public VaultInfo updateVaultReviewDate(@RequestHeader(value = ""X-UserID"", required = true) String userID,@PathVariable(""vaultid"") String vaultID,@RequestBody() String reviewDate)throws Exception {User user = usersService.getUser(userID);Vault vault = vaultsService.getUserVault(user, vaultID);SimpleDateFormat formatter = new SimpleDateFormat(""yyyy-MM-dd"");vault.setReviewDate(formatter.parse(reviewDate));vaultsService.updateVault(vault);return vault.convertToResponse();}}"	1
5065	public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;updateAllOutput_result result = new updateAllOutput_result();if (e instanceof org.apache.zeppelin.interpreter.thrift.InterpreterRPCException) {result.ex = (org.apache.zeppelin.interpreter.thrift.InterpreterRPCException) e;result.setExIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}}	4
5066	"public class A {public void connect() throws AndroidDebugBridgeDeviceException, InterruptedException {this.disconnect();AdbConnection adbConnection;Socket sock;AdbCrypto crypto = adbCrypto;if (crypto == null) {throw new AndroidDebugBridgeDeviceException(""Device not connected"");}try {sock = new Socket();socket = sock;sock.connect(new InetSocketAddress(ip, port), (int) TimeUnit.SECONDS.toMillis(15));} catch (IOException e) {if (e.getMessage().equals(""Socket closed"")) {throw new InterruptedException();}throw new AndroidDebugBridgeDeviceException(""Can not open socket "" + ip + "":"" + port);}try {adbConnection = AdbConnection.create(sock, crypto);connection = adbConnection;adbConnection.connect(15, TimeUnit.SECONDS, false);} catch (IOException e) {throw new AndroidDebugBridgeDeviceException(""Can not open adb connection "" + ip + "":"" + port);}}}"	2
5067	"public class A {private void sendMessages(final List<MessageEnvelope> msgEnvelopes) {try {boolean success =BackendOperation.execute(new BackendOperation.Transactional<Boolean>() {@Overridepublic Boolean call(StoreTransaction txh) throws BackendException {ListMultimap<StaticBuffer, Entry> mutations = ArrayListMultimap.create();for (MessageEnvelope env : msgEnvelopes) {mutations.put(env.key, env.entry);long ts = env.entry.getColumn().getLong(0);}Map<StaticBuffer, KCVMutation> muts =new HashMap<StaticBuffer, KCVMutation>(mutations.keySet().size());for (StaticBuffer key : mutations.keySet()) {muts.put(key, new KCVMutation(mutations.get(key), KeyColumnValueStore.NO_DELETIONS));}manager.storeManager.mutateMany(ImmutableMap.of(store.getName(), muts), txh);return Boolean.TRUE;}@Overridepublic String toString() {return ""messageSending"";}},this,times,maxWriteTime);Preconditions.checkState(success);for (MessageEnvelope msgEnvelope : msgEnvelopes) msgEnvelope.message.delivered();} catch (TitanException e) {for (MessageEnvelope msgEnvelope : msgEnvelopes) msgEnvelope.message.failed(e);throw e;}}}"	4
5068	public class A {@Overridepublic void setFlag(int flagType, boolean flagValue) {super.setFlag(flagType, flagValue);}}	1
5069	public class A {protected void reindexCPDefinitionOptionValueRels(long companyId) throws PortalException {final IndexableActionableDynamicQuery indexableActionableDynamicQuery =_cpDefinitionOptionValueRelLocalService.getIndexableActionableDynamicQuery();indexableActionableDynamicQuery.setCompanyId(companyId);indexableActionableDynamicQuery.setPerformActionMethod((CPDefinitionOptionValueRel cpDefinitionOptionValueRel) -> {try {indexableActionableDynamicQuery.addDocuments(getDocument(cpDefinitionOptionValueRel));} catch (PortalException portalException) {if (_log.isWarnEnabled()) {long cpDefinitionOptionValueRelId =cpDefinitionOptionValueRel.getCPDefinitionOptionValueRelId();}}});indexableActionableDynamicQuery.setSearchEngineId(getSearchEngineId());indexableActionableDynamicQuery.performActions();}}	1
5070	"public class A {public String getName() {if (isSetName()) {return name;}PropertyUndefinedError error = new PropertyUndefinedError(""name"", this);if (isStrict()) {throw error;}return """";}}"	1
5071	"public class A {private void downloadDrugData(Path geneFolder) throws IOException, InterruptedException {if (speciesConfiguration.getScientificName().equals(""Homo sapiens"")) {String url = configuration.getDownload().getDgidb().getHost();downloadFile(url, geneFolder.resolve(""dgidb.tsv"").toString());saveVersionData(EtlCommons.GENE_DATA,DGIDB_NAME,null,getTimeStamp(),Collections.singletonList(url),buildFolder.resolve(""dgidbVersion.json""));}}}"	1
5072	"public class A {public boolean isGpsSupported() throws KuraException {if (this.gpsSupported != null) {return this.gpsSupported;}if (getGpsPort() == null) {this.gpsSupported = false;return this.gpsSupported;}synchronized (this.atLock) {if (this.gpsSupported == null) {byte[] reply;CommConnection commAtConnection = openSerialPort(getAtPort());if (!isAtReachable(commAtConnection)) {closeSerialPort(commAtConnection);throw new KuraException(KuraErrorCode.NOT_CONNECTED,MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());}try {reply =commAtConnection.sendCommand(TelitModemAtCommands.isGpsPowered.getCommand().getBytes(), 1000, 100);} catch (IOException e) {closeSerialPort(commAtConnection);throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);}closeSerialPort(commAtConnection);if (reply != null) {String sReply = getResponseString(reply);if (sReply != null && !sReply.isEmpty()) {if (sReply.startsWith(""$GPSP:"")) {this.gpsSupported = true;} else {this.gpsSupported = false;}}}}}return this.gpsSupported;}}"	1
5073	public class A {@Overridepublic void groupEvent(Group group, GroupEvent event) {switch (event) {case CONNECTED:break;case CHANGED:if (singleton.isConnected()) {if (singleton.isMaster()) {if (LOG.isDebugEnabled()) {}onLockOwned();} else {if (LOG.isDebugEnabled()) {}}}break;case DISCONNECTED:try {onDisconnected();} catch (Exception e) {}break;default:}}}	4
5074	public class A {private void stopConsumer() throws Exception {if (this.consumer != null) {this.consumer.stop();this.consumer = null;}if (this.endpoint != null) {this.endpoint.stop();this.endpoint = null;}}}	2
5075	public class A {public static Response fromWebApplicationException(WebApplicationException wae) {if (wae.getResponse().hasEntity()) {return wae.getResponse();}final Response response = getResponse(wae, wae.getResponse().getStatus());response.getHeaders().putAll(wae.getResponse().getHeaders());return response;}}	1
5076	"public class A {public void cryptoUpdateAccountFeeTest() throws Throwable {long payerAccountBalance_before = getAccountBalance(payerID, queryPayerId, nodeID);long durationSeconds = 30 * 24 * 60 * 60;Key payerKey = TestHelperComplex.acc2ComplexKeyMap.get(payerID);Key accKey = TestHelperComplex.acc2ComplexKeyMap.get(account_1);List<Key> keys = new ArrayList<>();keys.add(payerKey);keys.add(accKey);Duration duration = RequestBuilder.getDuration(durationSeconds);String memo = TestHelperComplex.getStringMemo(1);Transaction updateTx =TestHelperComplex.updateAccount(account_1, payerID, nodeID, duration, memo);Transaction signUpdate =TransactionSigner.signTransactionComplexWithSigMap(updateTx, keys, TestHelperComplex.pubKey2privKeyMap);TransactionResponse response = CryptoServiceTest.cstub.updateAccount(signUpdate);Thread.sleep(NAP);Assert.assertNotNull(response);Assert.assertEquals(ResponseCodeEnum.OK, response.getNodeTransactionPrecheckCode());TransactionBody body =com.hedera.services.legacy.proto.utils.CommonUtils.extractTransactionBody(signUpdate);TransactionID transactionID = body.getTransactionID();if (transactionID == null || !transactionID.hasTransactionValidStart()) {return;}cache.addTransactionID(transactionID);Thread.sleep(NAP);long transactionFee = getTransactionFee(signUpdate);long payerAccountBalance_after = getAccountBalance(payerID, queryPayerId, nodeID);String result = ""Crypto Update Account Sig=1, memo=1, Duration=30 :"" + transactionFee;testResults.add(result);long feeVariance = (transactionFee * FEE_VARIANCE_PERCENT) / 100;long maxTransactionFee = CRYPTO_UPDATE_MEMO_1_KEY_1_DUR_30 + feeVariance;long minTransactionFee = CRYPTO_UPDATE_MEMO_1_KEY_1_DUR_30 - feeVariance;if (transactionFee != 0) {Assert.assertTrue(maxTransactionFee > transactionFee);Assert.assertTrue(minTransactionFee < transactionFee);}}}"	8
5077	public class A {private HierarchicalMessageSource buildIridaPluginMessageSources()throws IOException, IridaPluginException {List<MessageSource> iridaPluginMessageSources = Lists.newArrayList();for (IridaPlugin plugin : pipelinePlugins.getPlugins()) {Path pluginWorkflowsPath = plugin.getWorkflowsPath();List<String> pluginMessageBasenames =findWorkflowMessageSources(plugin.getClass().getClassLoader(), pluginWorkflowsPath.toString());ReloadableResourceBundleMessageSource pluginSource =new ReloadableResourceBundleMessageSource();pluginSource.setResourceLoader(new ClassRelativeResourceLoader(plugin.getClass()));pluginSource.setBasenames(pluginMessageBasenames.toArray(new String[pluginMessageBasenames.size()]));iridaPluginMessageSources.add(pluginSource);}if (iridaPluginMessageSources.size() > 0) {return new IridaPluginMessageSource(iridaPluginMessageSources);} else {return null;}}}	1
5078	public class A {private synchronized Object getFieldObject(Field field, Object obj) {try {field.setAccessible(true);return field.get(obj);} catch (IllegalArgumentException | IllegalAccessException e) {return null;} finally {field.setAccessible(false);}}}	1
5079	"public class A {private void startHttpProtocol() throws IgniteCheckedException {try {Class<?> cls = Class.forName(HTTP_PROTO_CLS);Constructor<?> ctor = cls.getConstructor(GridKernalContext.class);GridRestProtocol proto = (GridRestProtocol) ctor.newInstance(ctx);startProtocol(proto);} catch (ClassNotFoundException ignored) {if (log.isDebugEnabled())} catch (NoSuchMethodException| InvocationTargetException| InstantiationException| IllegalAccessException e) {throw new IgniteCheckedException(""Failed to initialize HTTP REST protocol."", e);}}}"	1
5080	public class A {public void setRawBytes(byte[] rawBytes) {reset();try {if (rawBytes != null) {stream.write(rawBytes);}} catch (IOException ex) {}}}	1
5081	public class A {public synchronized void release() throws IOException {int uv = used.decrementAndGet();assert (uv >= 0);if (uv == 0 && closeWhenIdle) {close();} else {}}}	2
5082	public class A {@Override@Transactional(readOnly = true)public Date getDeployTime() {List<ServerInfoEntity> entities = serverInfoDao.findAll();if (entities != null && entities.size() == 1) {ServerInfoEntity entity = entities.get(0);Timestamp timestamp = entity.getDeployTime();if (timestamp != null) {String timestampStr = df.format(timestamp);try {return df.parse(timestampStr);} catch (ParseException e) {}}}return null;}}	2
5083	"public class A {@Transition(from = ""OFFLINE"", to = ""ONLINE"")public void onBecomeOnlineFromOffline(Message message, NotificationContext context) {final TableType tableType =TableNameBuilder.getTableTypeFromTableName(message.getResourceName());try {switch (tableType) {case OFFLINE:onBecomeOnlineFromOfflineForOfflineSegment(message, context);break;case REALTIME:onBecomeOnlineFromOfflineForRealtimeSegment(message, context);break;default:throw new RuntimeException(""Not supported table Type for onBecomeOnlineFromOffline message: "" + message);}} catch (Exception e) {if (LOGGER.isErrorEnabled()) {}Utils.rethrowException(e);}}}"	2
5084	public class A {@Overridepublic void close() {this.cache.removeListener(this);this.shutdown(this.topologyChangeExecutor);try (Batch batch = this.batcher.createBatch()) {this.cache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES, Flag.FAIL_SILENTLY).remove(this.group.getAddress(this.group.getLocalMember()));} catch (CacheException e) {} finally {for (ExecutorService executor : this.listeners.values()) {this.shutdown(executor);}this.listeners.clear();this.closeTask.run();}}}	1
5085	public class A {@Overridepublic String getObject() {try {return icon.getObject();} catch (Exception ex) {return null;}}}	1
5086	"public class A {public static ImageIcon getCountryFlagIcon(String countryCode) {ImageIcon flagIcon = FLAG_ICON_CACHE.get(countryCode);if (flagIcon == null) {Image flagImage =ImageHelper.getImageFromResources(""/flags/"" + countryCode + (countryCode.endsWith("".png"") ? """" : "".png""));if (flagImage != null) {if (GUISizeHelper.flagHeight > 11) {int width =Math.round(GUISizeHelper.flagHeight * flagImage.getWidth(null) / flagImage.getHeight(null));BufferedImage resized =ImageHelper.scale((BufferedImage) flagImage,BufferedImage.TYPE_4BYTE_ABGR,width,GUISizeHelper.flagHeight);flagIcon = new ImageIcon(resized);} else {flagIcon = new ImageIcon(flagImage);}}if (flagIcon == null || flagIcon.getImage() == null) {FLAG_ICON_CACHE.put(countryCode, flagIcon);} else {FLAG_ICON_CACHE.put(countryCode, flagIcon);}}return flagIcon;}}"	1
5087	"public class A {public void handleStreamMessage(int streamId, GeneratedMessageV3 message) throws StreamException {if (logger.isDebugEnabled()) {}GrpcClientStreamChannel streamChannel =(GrpcClientStreamChannel) streamChannelRepository.getStreamChannel(streamId);if (streamChannel == null) {throw new StreamException(}TBase tBase = messageConverter.toMessage(message);if (tBase == null) {throw new StreamException(StreamCode.TYPE_ERROR,+ MessageFormatUtils.debugLog(message).toString()+ "")"");}if (logger.isDebugEnabled()) {}try {byte[] serialize = SerializationUtils.serialize(tBase, commandHeaderTBaseSerializerFactory);streamChannel.handleStreamResponsePacket(new StreamResponsePacket(streamId, serialize));} catch (TException t) {throw new StreamException(} catch (StreamException e) {throw e;}}}"	5
5088	"public class A {public void delete(String userId) throws FtpException {try {ftpUserDAO.delete(new Long(userId));this.deleteFtpUserDir(userId);} catch (DAOException e) {logger.info(""ERROR :"" + e.getMessage());} catch (NumberFormatException e) {} catch (Exception e) {}}}"	2
5089	public class A {public static void removeState(StateCollection stateCollection, Optional<QueryId> queryId, Logger log) {if (stateCollection != null) {switch (stateCollection.getType()) {case MAP:if (queryId.isPresent()) {((StateMap) stateCollection).remove(queryId.get().getId());}break;default:}}}}	1
5090	"public class A {@Test@SuppressWarnings(""checkstyle:IllegalCatch"")public void testLoopUntilNoException() throws Exception {final int retryCountLimit = 5;String output;SimpleTaskRetryLooper looper4 = new SimpleTaskRetryLooper(100, retryCountLimit - 1);try {output = looper4.loopUntilNoException(createStubbornService(retryCountLimit));Assert.fail(""looper should have thrown exception"");} catch (Exception e) {}SimpleTaskRetryLooper looper5 = new SimpleTaskRetryLooper(100, retryCountLimit);output = looper5.loopUntilNoException(createStubbornService(retryCountLimit));Assert.assertNotNull(output);}}"	1
5091	public class A {@Overrideprotected void MOUNTPROC_UMNTALL_1() {}}	1
5092	public class A {@Overridepublic void run() {UserGroupInformation loginUser = null;try {loginUser = UserGroupInformation.getLoginUser();} catch (IOException excp) {}if (loginUser == null) {return;}loginUser.doAs(new PrivilegedAction<Integer>() {@Overridepublic Integer run() {doRun();return 0;}});}}	2
5093	public class A {@Overridepublic void clone(final FlowFile parent, final FlowFile child, final boolean verifyFlowFile) {if (verifyFlowFile) {verifyFlowFileKnown(child);}try {final ProvenanceEventBuilder eventBuilder = build(parent, ProvenanceEventType.CLONE);eventBuilder.addChildFlowFile(child);eventBuilder.addParentFlowFile(parent);events.add(eventBuilder.build());} catch (final Exception e) {if (logger.isDebugEnabled()) {}}}}	2
5094	public class A {public void attachClean(StgMMetastatusTxt instance) {try {sessionFactory.getCurrentSession().lock(instance, LockMode.NONE);} catch (RuntimeException re) {throw re;}}}	3
5095	public class A {@Overridepublic void dispatchRequestMessage(ServerRequest<REQ> serverRequest, ServerResponse<RES> serverResponse) {acceptedTimeService.accept();if (!checkAvailable()) {serverResponse.finish();return;}delegate.dispatchRequestMessage(serverRequest, serverResponse);}}	1
5096	"public class A {@Overridepublic String getEndpointURLByServiceNameSpecVersion(String sHomeCommunityId, String sUniformServiceName, UDDI_SPEC_VERSION version)throws ConnectionManagerException {ConnectionManagerCacheHelper helper = new ConnectionManagerCacheHelper();String sEndpointURL = """";BusinessEntity oEntity = getBusinessEntityByHCID(sHomeCommunityId);if (oEntity == null) {return sEndpointURL;}BusinessService oService = helper.getBusinessServiceByServiceName(oEntity, sUniformServiceName);if (oService == null) {return sEndpointURL;}if (version == null) {return sEndpointURL;}if (LOG.isDebugEnabled()) {}BindingTemplate bindingTemplate =helper.findBindingTemplateByKey(oService, UDDIConstants.UDDI_SPEC_VERSION_KEY, version.toString());if (bindingTemplate == null || bindingTemplate.getAccessPoint() == null) {throw new ConnectionManagerException(""No matching target endpoint for guidance: "" + version);}sEndpointURL = bindingTemplate.getAccessPoint().getValue();if (LOG.isDebugEnabled()) {}return sEndpointURL;}}"	5
5097	"public class A {public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {for (int i = 0; i < callbacks.length; i++) {if (callbacks[i] instanceof WAuthCallback) {WAuthCallback callback = (WAuthCallback) callbacks[i];String authenticationType = (String) callback.getRequest().getAttribute(""wauth"");if (authenticationType == null || authenticationType.length() == 0) {} else {callback.setWauth(authenticationType);}} else {throw new UnsupportedCallbackException(callbacks[i], ""Unrecognized Callback"");}}}}"	2
5098	"public class A {private Object fromMongoUnion(final Schema fieldSchema,final DocumentFieldType storeType,final Field field,final String docf,final BSONDecorator easybson)throws GoraException {Object result;Type type0 = fieldSchema.getTypes().get(0).getType();Type type1 = fieldSchema.getTypes().get(1).getType();if (!type0.equals(type1) && (type0.equals(Type.NULL) || type1.equals(Type.NULL))) {Schema innerSchema = fieldSchema.getTypes().get(1);result = fromDocument(innerSchema, storeType, field, docf, easybson);} else {throw new IllegalStateException(""MongoStore doesn't support 3 types union field yet. Please update your mapping"");}return result;}}"	1
5099	public class A {@Overridepublic void run() {final long now = System.currentTimeMillis();try {store.get().write(index -> {final Hits<Review> affectedReviews =index.searcher().search(Query.select(Review.class).where(Expressions.builder().should(buildQuery(ReviewStatus.FAILED, now - keepOtherMillis)).should(buildQuery(ReviewStatus.STALE, now - keepOtherMillis)).should(buildQuery(ReviewStatus.PENDING, now - keepOtherMillis)).should(buildQuery(ReviewStatus.CURRENT, now - keepCurrentMillis)).build()).limit(Integer.MAX_VALUE).build());if (affectedReviews.getTotal() > 0) {final Set<String> ids = newHashSet();for (Review r : affectedReviews) {ids.add(r.id());}index.removeAll(ImmutableMap.of(Review.class, ids, ConceptChanges.class, ids));index.commit();}return null;});} catch (final Exception e) {return;}}}	1
5100	"public class A {private void initCsvRecordParameters() {if (separator == null) {for (Class<?> cl : models) {CsvRecord record = cl.getAnnotation(CsvRecord.class);Section section = cl.getAnnotation(Section.class);if (record != null) {skipFirstLine = record.skipFirstLine();skipField = record.skipField();generateHeaderColumnNames = record.generateHeaderColumns();org.apache.camel.util.ObjectHelper.notNull(record.separator(), ""No separator has been defined in the @Record annotation"");separator = record.separator();crlf = record.crlf();messageOrdered = record.isOrdered();if (org.apache.camel.util.ObjectHelper.isNotEmpty(record.quote())) {quote = record.quote();}quoting = record.quoting();autospanLine = record.autospanLine();allowEmptyStream = record.allowEmptyStream();quotingEscaped = record.quotingEscaped();endWithLineBreak = record.endWithLineBreak();removeQuotes = record.removeQuotes();}if (section != null) {org.apache.camel.util.ObjectHelper.notNull(section.number(), ""No number has been defined for the section"");sections.put(cl.getName(), section.number());}}}}}"	14
5101	"public class A {private void updateStateTransitionMessageThreadPool(Message message, HelixManager manager) {if (!message.getMsgType().equals(MessageType.STATE_TRANSITION.name())) {return;}String resourceName = message.getResourceName();String factoryName = message.getStateModelFactoryName();String stateModelName = message.getStateModelDef();if (factoryName == null) {factoryName = HelixConstants.DEFAULT_STATE_MODEL_FACTORY;}StateModelFactory<? extends StateModel> stateModelFactory =manager.getStateMachineEngine().getStateModelFactory(stateModelName, factoryName);String perStateTransitionTypeKey =getStateTransitionType(getPerResourceStateTransitionPoolName(resourceName),message.getFromState(),message.getToState());if (perStateTransitionTypeKey != null&& stateModelFactory != null&& !_transitionTypeThreadpoolChecked.contains(perStateTransitionTypeKey)) {ExecutorService perStateTransitionTypeExecutor =stateModelFactory.getExecutorService(resourceName, message.getFromState(), message.getToState());_transitionTypeThreadpoolChecked.add(perStateTransitionTypeKey);if (perStateTransitionTypeExecutor != null) {_executorMap.put(perStateTransitionTypeKey, perStateTransitionTypeExecutor);return;}}if (!_resourcesThreadpoolChecked.contains(resourceName)) {int threadpoolSize = -1;ConfigAccessor configAccessor = manager.getConfigAccessor();if (configAccessor != null) {HelixConfigScope scope =new HelixConfigScopeBuilder(ConfigScopeProperty.RESOURCE).forCluster(manager.getClusterName()).forResource(resourceName).build();String threadpoolSizeStr = configAccessor.get(scope, MAX_THREADS);try {if (threadpoolSizeStr != null) {threadpoolSize = Integer.parseInt(threadpoolSizeStr);}} catch (Exception e) {}}final String key = getPerResourceStateTransitionPoolName(resourceName);if (threadpoolSize > 0) {_executorMap.put(key,Executors.newFixedThreadPool(threadpoolSize,r -> new Thread(r, ""GerenricHelixController-message_handle_"" + key)));} else {if (stateModelFactory != null) {ExecutorService executor = stateModelFactory.getExecutorService(resourceName);if (executor != null) {_executorMap.put(key, executor);}} else {}}_resourcesThreadpoolChecked.add(resourceName);}}}"	5
5102	"public class A {public List<String> getLevels(final InternalHttpContext context, final Optional<String> criteria) {final URIBuilder builder = getUriBuilderFromPath(CommonConstants.PATH_LEVELS);criteria.ifPresent(o -> builder.addParameter(""criteria"", o));final HttpEntity<?> request = new HttpEntity<>(buildHeaders(context));final ResponseEntity<List<String>> response =restTemplate.exchange(buildUriBuilder(builder), HttpMethod.GET, request, getStringListClass());checkResponse(response);return response.getBody();}}"	1
5103	public class A {public static com.liferay.asset.display.page.model.AssetDisplayPageEntrySoapaddAssetDisplayPageEntry(long userId,long groupId,long classNameId,long classPK,long layoutPageTemplateEntryId,int type,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.asset.display.page.model.AssetDisplayPageEntry returnValue =AssetDisplayPageEntryServiceUtil.addAssetDisplayPageEntry(userId,groupId,classNameId,classPK,layoutPageTemplateEntryId,type,serviceContext);return com.liferay.asset.display.page.model.AssetDisplayPageEntrySoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
5104	public class A {private void initiateConnectors() {oldValues.clear();JMeterProperty prop = getMetricSettings();connectors.clear();if (!(prop instanceof CollectionProperty)) {return;}CollectionProperty rows = (CollectionProperty) prop;for (int i = 0; i < rows.size(); i++) {Object val = rows.get(i).getObjectValue();if (val instanceof ArrayList) {ArrayList<JMeterProperty> row = (ArrayList<JMeterProperty>) val;String host = row.get(0).getStringValue();int port = row.get(1).getIntValue();String metric = row.get(2).getStringValue();String params = row.get(3).getStringValue();initiateConnector(host, port, i, metric, params);}}for (Object key : connectors.keySet()) {try {connectors.get(key).connect();} catch (IOException ex) {connectors.put(key, new UnavailableAgentConnector(ex));}}}}	2
5105	public class A {protected void addSchema(String schemaId, Class<?> schemaClass) {Swagger swagger =RegistrationManager.INSTANCE.getSwaggerLoader().registerSwagger(appId, shortName, schemaId, schemaClass);String swaggerContent = SwaggerUtils.swaggerToString(swagger);microservice.addSchema(schemaId, swaggerContent);}}	1
5106	public class A {void addIndexMapping(RegionEntry entry, IndexProtocol index) {try {index.addIndexMapping(entry);} catch (Exception exception) {index.markValid(false);setPRIndexAsInvalid((AbstractIndex) index);}}}	1
5107	"public class A {public static boolean addFileContentToZip(String fileContent, ZipOutputStream zos, String fileName) {if (StringHelper.isEmpty(fileContent) || StringHelper.isEmpty(fileName)) {return false;}boolean result = false;InputStream is = null;try {is = new ByteArrayInputStream(fileContent.getBytes(""UTF-8""));result = addInputStream(zos, fileName, is);} catch (IOException ex) {} finally {IOUtils.closeQuietly(is);}return result;}}"	1
5108	public class A {public final void setActive(boolean active) {cleanup();if (active) {if (!myContainedComponent.isVisible()) {}myRepaintTimer = new RepaintTimer(300);myRepaintTimer.start();}}}	1
5109	"public class A {public static CompletedCheckpoint loadAndValidateCheckpoint(JobID jobId,Map<JobVertexID, ExecutionJobVertex> tasks,CompletedCheckpointStorageLocation location,ClassLoader classLoader,boolean allowNonRestoredState)throws IOException {checkNotNull(jobId, ""jobId"");checkNotNull(tasks, ""tasks"");checkNotNull(location, ""location"");checkNotNull(classLoader, ""classLoader"");final StreamStateHandle metadataHandle = location.getMetadataHandle();final String checkpointPointer = location.getExternalPointer();final CheckpointMetadata checkpointMetadata;try (InputStream in = metadataHandle.openInputStream()) {DataInputStream dis = new DataInputStream(in);checkpointMetadata = loadCheckpointMetadata(dis, classLoader, checkpointPointer);}Map<OperatorID, ExecutionJobVertex> operatorToJobVertexMapping = new HashMap<>();for (ExecutionJobVertex task : tasks.values()) {for (OperatorIDPair operatorIDPair : task.getOperatorIDs()) {operatorToJobVertexMapping.put(operatorIDPair.getGeneratedOperatorID(), task);operatorIDPair.getUserDefinedOperatorID().ifPresent(id -> operatorToJobVertexMapping.put(id, task));}}HashMap<OperatorID, OperatorState> operatorStates =new HashMap<>(checkpointMetadata.getOperatorStates().size());for (OperatorState operatorState : checkpointMetadata.getOperatorStates()) {ExecutionJobVertex executionJobVertex =operatorToJobVertexMapping.get(operatorState.getOperatorID());if (executionJobVertex != null) {if (executionJobVertex.getMaxParallelism() == operatorState.getMaxParallelism()|| executionJobVertex.canRescaleMaxParallelism(operatorState.getMaxParallelism())) {operatorStates.put(operatorState.getOperatorID(), operatorState);} else {String msg =String.format(""Failed to rollback to checkpoint/savepoint %s. Max parallelism mismatch between""+ "" checkpoint/savepoint state and new program. Cannot map operator %s with""+ "" max parallelism %d to new program with max parallelism %d. This indicates""+ "" that the program has been changed in a non-compatible way after the""+ "" checkpoint/savepoint."",checkpointMetadata,operatorState.getOperatorID(),operatorState.getMaxParallelism(),executionJobVertex.getMaxParallelism());throw new IllegalStateException(msg);}} else if (allowNonRestoredState) {} else {if (operatorState.getCoordinatorState() != null) {throwNonRestoredStateException(checkpointPointer, operatorState.getOperatorID());}for (OperatorSubtaskState operatorSubtaskState : operatorState.getStates()) {if (operatorSubtaskState.hasState()) {throwNonRestoredStateException(checkpointPointer, operatorState.getOperatorID());}}}}CheckpointProperties props = CheckpointProperties.forSavepoint(false);return new CompletedCheckpoint(jobId,checkpointMetadata.getCheckpointId(),0L,0L,operatorStates,checkpointMetadata.getMasterStates(),props,location);}}"	2
5110	"public class A {@Overridepublic void close() {if (!closed.compareAndSet(false, true)) {return;}final List<ListenableFuture<?>> futures = new ArrayList<>();for (Map.Entry<SegmentIdWithShardSpec, Sink> entry : sinks.entrySet()) {futures.add(abandonSegment(entry.getKey(), entry.getValue(), false));}try {Futures.allAsList(futures).get();} catch (InterruptedException e) {Thread.currentThread().interrupt();} catch (ExecutionException e) {}try {shutdownExecutors();Preconditions.checkState(persistExecutor == null || persistExecutor.awaitTermination(365, TimeUnit.DAYS),""persistExecutor not terminated"");Preconditions.checkState(pushExecutor == null || pushExecutor.awaitTermination(365, TimeUnit.DAYS),""pushExecutor not terminated"");Preconditions.checkState(intermediateTempExecutor == null|| intermediateTempExecutor.awaitTermination(365, TimeUnit.DAYS),""intermediateTempExecutor not terminated"");persistExecutor = null;pushExecutor = null;intermediateTempExecutor = null;} catch (InterruptedException e) {Thread.currentThread().interrupt();throw new ISE(""Failed to shutdown executors during close()"");}unlockBasePersistDirectory();}}"	4
5111	"public class A {private static int getCount(KieProcessFormQueryResult result,Map<String, KieProcessFormField> fieldMap,int count,List<PamLayoutComponent> components,PamLayoutColumn column1,int columnCount,int columnSize) {for (PamLayoutComponent component : components) {String fieldId = component.getProperties().getFieldId();if (fieldMap.containsKey(fieldId)) {fieldMap.get(fieldId).setPosition(count);fieldMap.get(fieldId).addProperty(""span"", column1.span);if (columnCount == 0) {fieldMap.get(fieldId).addProperty(""openRow"", true);}if (columnCount == columnSize - 1) {fieldMap.get(fieldId).addProperty(""closeRow"", true);}result.getFields().add(fieldMap.get(fieldId));count++;} else {}}return count;}}"	3
5112	public class A {public static void main(String[] args) {ConfigUtil.initProject();long[] testNumbers =new long[] {5640012124823L,7336014366011L,19699548984827L,52199161732031L,73891306919159L,112454098638991L,32427229648727L,87008511088033L,92295512906873L,338719143795073L,346425669865991L,1058244082458461L,1773019201473077L,6150742154616377L,44843649362329L,67954151927287L,134170056884573L,198589283218993L,737091621253457L,1112268234497993L,2986396307326613L,26275638086419L,62246008190941L,209195243701823L,290236682491211L,485069046631849L,1239671094365611L,2815471543494793L,5682546780292609L,135902052523483L,1454149122259871L,5963992216323061L,26071073737844227L,8296707175249091L,35688516583284121L,949443,996433,1340465,1979435,2514615,5226867,10518047,30783267,62230739,84836647,94602505,258555555,436396385,612066705,2017001503,3084734169L,6700794123L,16032993843L,26036808587L,41703657595L,68889614021L,197397887859L,2157195374713L,8370014680591L,22568765132167L,63088136564083L,712869263,386575807,569172749,624800360363L,883246601513L,35184372094495L,893,35,9,100140049,10000600009L,1000006000009L,6250045000081L,10890006600001L,14062507500001L,25000110000121L,100000380000361L,10000001400000049L,1000000014000000049L,17977882519205951L,57410188984551071L,708198179721093877L,4085731848127832849L,873351084013120721L,3608228875180849937L,};Hart_Fast2Mult holf = new Hart_Fast2Mult(false);for (long N : testNumbers) {long factor = holf.findSingleFactor(N);}}}	1
5113	public class A {HiveReadEntry getSelectionBaseOnName(String dbName, String t) {if (dbName == null) {dbName = DEFAULT_WS_NAME;}try {return mClient.getHiveReadEntry(dbName, t, schemaConfig.getIgnoreAuthErrors());} catch (TException e) {return null;}}}	1
5114	public class A {public boolean apply(Attachment attachment) {Volume volume =Iterables.getOnlyElement(client.describeVolumesInRegion(attachment.getRegion(), attachment.getVolumeId()));if (volume.getAttachments().isEmpty()) {return true;}Attachment lastAttachment = getLast(volume.getAttachments());return lastAttachment.getStatus() == Attachment.Status.DETACHED;}}	2
5115	public class A {private void checkAndRepair() throws IOException {if (!isComplete()) {RestorableTsFileIOWriter rWriter =new RestorableTsFileIOWriter(FSFactoryProducer.getFSFactory().getFile(file));TsFileWriter writer = new TsFileWriter(rWriter);writer.close();}}}	1
5116	"public class A {private void store(Mail mail, MailRepositoryUrl url) throws MessagingException {try {Optional<MailRepository> mailRepository = retrieveRepository(url);if (!mailRepository.isPresent()) {}ThrowingConsumer<MailRepository> storingConsumer = repository -> repository.store(mail);mailRepository.ifPresent(Throwing.consumer(storingConsumer).sneakyThrow());} catch (MailRepositoryStore.MailRepositoryStoreException e) {throw new MessagingException(""Error while selecting url "" + url, e);}}}"	1
5117	public class A {@Overridepublic void initialize() {getStrSubstitutor().setConfiguration(this);super.getScheduler().start();doConfigure();setState(State.INITIALIZED);}}	1
5118	"public class A {private String getEntityBody(ContainerRequestContext requestContext) {ByteArrayOutputStream out = new ByteArrayOutputStream();InputStream in = requestContext.getEntityStream();final StringBuilder b = new StringBuilder();try {IOUtils.copy(in, out);byte[] requestEntity = out.toByteArray();if (requestEntity.length == 0) {b.append(""\n"");} else {b.append(new String(requestEntity)).append(""\n"");}requestContext.setEntityStream(new ByteArrayInputStream(requestEntity));} catch (IOException e) {}return b.toString();}}"	1
5119	"public class A {private static void sendHeightWeight(LoggedInInfo loggedInInfo,MyOscarLoggedInInfo myOscarLoggedInInfo,List<Measurement> newMeasurements)throws ClassCastException {HashMap<Date, HeightWeight> hwMap = new HashMap<Date, HeightWeight>();for (Measurement measurement : newMeasurements) {List<MeasurementType> measurementTypes = measurementTypeDao.findByType(measurement.getType());MeasurementType measurementType = null;if (measurementTypes.size() > 0) measurementType = measurementTypes.get(0);if (measurementType == null) {continue;}if (""HT"".equals(measurementType.getType())) {HeightWeight hw = getOrCreateEmpty(hwMap, measurement.getCreateDate());hw.height = measurement;} else if (""WT"".equals(measurementType.getType())) {HeightWeight hw = getOrCreateEmpty(hwMap, measurement.getCreateDate());hw.weight = measurement;}}for (Map.Entry<Date, HeightWeight> entry : hwMap.entrySet()) {try {HeightWeight hw = entry.getValue();MedicalDataTransfer4 medicalDataTransfer =toHeightWeightMedicalDataTransfer(loggedInInfo, myOscarLoggedInInfo, hw);MyOscarMedicalDataManagerUtils.addMedicalData(loggedInInfo.getLoggedInProviderNo(),myOscarLoggedInInfo,medicalDataTransfer,OSCAR_MEASUREMENTS_DATA_TYPE,hw.getCompositeId(),true,true);} catch (Exception e) {}}}}"	3
5120	public class A {public void tryGenerate(IMontageGenerator generator) {ValidationErrors errors = new ValidationErrors();generator.validateSourceMontage(montage, errors);if (errors.hasErrors()) {errorsDialog.showDialog(errors);return;}try {generator.createMontage(montage);} catch (MontageException ex) {Dialogs.showExceptionDialog(this, ex);}}}	1
5121	public class A {public static com.liferay.knowledge.base.model.KBArticleSoap fetchKBArticleByUrlTitle(long groupId, long kbFolderId, String urlTitle) throws RemoteException {try {com.liferay.knowledge.base.model.KBArticle returnValue =KBArticleServiceUtil.fetchKBArticleByUrlTitle(groupId, kbFolderId, urlTitle);return com.liferay.knowledge.base.model.KBArticleSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
5122	public class A {@Overridepublic void run() {TestAmqpPeer.this.sendFrame(FrameType.SASL, 0, challengeFrame2, null, false, 0);}}	1
5123	"public class A {@Overrideprotected void doPost(HttpServletRequest req, HttpServletResponse resp)throws ServletException, IOException {if (!httpAuth.isAllowed(req, resp)) {return;}I18N.bindLocale(req.getLocale());try {addCollectorApplication(req, resp);} catch (final Exception e) {final String userAgent = req.getHeader(""User-Agent"");if (userAgent != null && userAgent.startsWith(""Java"")) {resp.sendError(HttpServletResponse.SC_PRECONDITION_FAILED, e.toString());} else {final CollectorController collectorController = new CollectorController(collectorServer);final String application = collectorController.getApplication(req, resp);collectorController.writeMessage(req, resp, application, e.toString());}} finally {I18N.unbindLocale();}}}"	1
5124	public class A {private long[] _getTypeIds(SearchContext searchContext, String[] typeNames) {long classNameId = GetterUtil.getLong(searchContext.getAttribute(Field.CLASS_NAME_ID));if (classNameId <= 0) {return new long[0];}ClassName className = _classNameLocalService.fetchByClassNameId(classNameId);if (className == null) {return new long[0];}Stream<String> typeNamesStream = Arrays.stream(typeNames);return typeNamesStream.mapToLong(typeName -> {String listTypeType = className.getClassName() + ListTypeConstants.ADDRESS;ListType listType = _listTypeLocalService.getListType(typeName, listTypeType);if (listType == null) {if (_log.isDebugEnabled()) {}return -1;}return listType.getListTypeId();}).toArray();}}	1
5125	public class A {@AfterClasspublic static void stopCluster() {if (null != clusterClient) {clusterClient.shutdown();}if (null != clusterClient) {clusterServer.shutdown();}}}	1
5126	public class A {protected Map<Long, Long> copyDocumentBatch(Long versionId, Long newVersionId, int batchStart, int batchLength) {try {return transactionUtil.call(() -> copyDocument(versionId, newVersionId, batchStart, batchLength));} catch (Exception e) {return Collections.emptyMap();}}}	1
5127	"public class A {public Storage getStorage(String storageName)throws IOException, JAXBException, URISyntaxException, NoSuchAlgorithmException,KeyStoreException, KeyManagementException {final String URI_PATH = HERD_APP_REST_URI_PREFIX + ""/storages/"" + storageName;URIBuilder uriBuilder =new URIBuilder().setScheme(getUriScheme()).setHost(regServerAccessParamsDto.getRegServerHost()).setPort(regServerAccessParamsDto.getRegServerPort()).setPath(URI_PATH);Storage storage;try (CloseableHttpClient client =httpClientHelper.createHttpClient(regServerAccessParamsDto.isTrustSelfSignedCertificate(),regServerAccessParamsDto.isDisableHostnameVerification())) {HttpGet request = new HttpGet(uriBuilder.build());request.addHeader(""Accepts"", DEFAULT_ACCEPT);if (regServerAccessParamsDto.isUseSsl()) {request.addHeader(getAuthorizationHeader());}storage = getStorage(httpClientOperations.execute(client, request));}for (Attribute attribute : storage.getAttributes()) {}return storage;}}"	6
5128	"public class A {@KafkaListener(topics = ""reflectoring-1"")void listener(String message) {}}"	1
5129	public class A {public static Timer recordTimer(Sample sample, String meterName, Iterable<Tag> tags) {if (!enabled) {return null;}Timer timer = Timer.builder(meterName).tags(tags).register(registry);sample.stop(timer);return timer;}}	1
5130	"public class A {@Testpublic void checkMonitorValuesTest() throws URISyntaxException, JAXBException {File f = new File(MonitorFileTest.class.getResource(""/monitor.xml"").toURI());JAXBContext jbc = JAXBContext.newInstance(ObjectFactory.class.getPackage().getName());Unmarshaller um = jbc.createUnmarshaller();JAXBElement<?> element = (JAXBElement<?>) um.unmarshal(f);COMPSsStateType monitor = (COMPSsStateType) element.getValue();assertNotNull(monitor);assertNotNull(monitor.getTasksInfo());assertNotNull(monitor.getTasksInfo().getApplication());assertNotNull(monitor.getCoresInfo());assertNotNull(monitor.getCoresInfo().getCore());assertNotNull(monitor.getResourceInfo());assertNotNull(monitor.getResourceInfo().getResource());jbc = JAXBContext.newInstance(COMPSsStateType.class);Marshaller m = jbc.createMarshaller();m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);ObjectFactory objFact = new ObjectFactory();StringWriter writer = new StringWriter();m.marshal(objFact.createCOMPSsState(monitor), writer);}}"	2
5131	"public class A {@Overridepublic boolean isValid() throws NodeStoreException {if (this.entry == null) {this.errorMessage = MISSING_ENTRY_ELEMENT;return false;}Element id = this.entry.element(XMLConstants.ID_ELEM);if ((id == null) || (id.getText().isEmpty())) {if (null != id) {id.detach();}this.entry.addElement(""id"").setText(""1"");}Element title = this.entry.element(XMLConstants.TITLE_ELEM);if (null == title) {title = this.entry.addElement(XMLConstants.TITLE_ELEM);title.setText(""Post"");}this.params.put(XMLConstants.TITLE_ELEM, title.getText());Element content = this.entry.element(""content"");if (null == content) {this.errorMessage = MISSING_CONTENT_ELEMENT;return false;}String contentType = content.attributeValue(XMLConstants.TYPE_ATTR);if (null == contentType) {contentType = CONTENT_TEXT;}if ((!contentType.equals(CONTENT_TEXT)) && (!contentType.equals(CONTENT_XHTML))) {this.errorMessage = UNSUPPORTED_CONTENT_TYPE;return false;}this.params.put(""content"", content.getText());this.params.put(""content-type"", contentType);Element updated = this.entry.element(XMLConstants.UPDATED_ELEM);if (null == updated) {String updateTime = Conf.formatDate(new Date());this.entry.addElement(XMLConstants.UPDATED_ELEM).setText(updateTime);}this.geoloc = this.entry.element(XMLConstants.GEOLOC_ELEM);if (!validateInReplyToElement(this.entry.element(XMLConstants.IN_REPLY_TO_ELEM))) {return false;}if (!validateTargetElement(this.entry.element(XMLConstants.TARGET_ELEM))) {return false;}if (!validateRatingElement(this.entry.element(XMLConstants.RATING_ELEM))) {return false;}Element meta = this.entry.element(XMLConstants.META_ELEM);if (null != meta) {this.meta = meta;}Element media = this.entry.element(XMLConstants.MEDIA_ELEM);if (null != media) {this.media = media;}return true;}}"	3
5132	public class A {@Nullable@Overridepublic V unswap(boolean ignoreFlags, boolean needVal) throws GridException {boolean swapEnabled = cctx.swap().swapEnabled() && (ignoreFlags || !cctx.hasFlag(SKIP_SWAP));if (!swapEnabled && !cctx.isOffHeapEnabled()) return null;synchronized (this) {if (isStartVersion() && ((flags & IS_UNSWAPPED_MASK) == 0)) {GridCacheSwapEntry<V> e;if (cctx.offheapTiered()) {e = cctx.swap().readOffheapPointer(this);if (e != null) {if (e.offheapPointer() > 0) {valPtr = e.offheapPointer();if (needVal) {V val = unmarshalOffheap(false);e.value(val);}} else {valPtr = 0;if (cctx.portableEnabled() && !e.valueIsByteArray()) e.valueBytes(null);}}} else e = detached() ? cctx.swap().read(this, true) : cctx.swap().readAndRemove(this);if (log.isDebugEnabled())flags |= IS_UNSWAPPED_MASK;if (e != null) {long delta = e.expireTime() == 0 ? 0 : e.expireTime() - U.currentTimeMillis();if (delta >= 0) {V val = e.value();if (cctx.portableEnabled())val = (V) cctx.kernalContext().portable().detachPortable(val);update(val, e.valueBytes(), e.expireTime(), e.ttl(), e.version());if (cctx.offheapTiered() && e.offheapPointer() > 0) valPtr = e.offheapPointer();if (val != null) cctx.queries().onUnswap(key, val, e.valueBytes());return val;} else clearIndex(e.value());}}}return null;}}	1
5133	"public class A {@Overridepublic void onSuccess(List<FieldDesc> result) {helpPanel.clear();final SafeHtmlBuilder html = new SafeHtmlBuilder();html.appendHtmlConstant(""<table class='help-attribute-descriptions'>"");if (result.isEmpty()) {html.appendHtmlConstant(""<tr class='help-field-row'>"");html.appendHtmlConstant(""<td class='help-field-name' colspan=2>"");html.appendEscaped(""Attribute descriptions not available."");html.appendHtmlConstant(""</td>"");html.appendHtmlConstant(""</tr>"");} else {for (FieldDesc field : result) {html.appendHtmlConstant(""<tr class='help-field-row'>"");html.appendHtmlConstant(""<td class='help-field-name'>"");String ref = field.getRef();String title = form.getFormItemTitle(ref);html.appendEscaped(title).appendEscaped("": "");html.appendHtmlConstant(""</td>"");html.appendHtmlConstant(""<td class='help-field-desc'>"");try {html.appendHtmlConstant(field.getDesc());} catch (Throwable e) {html.appendHtmlConstant(""<i>Failed to parse description</i>"");}html.appendHtmlConstant(""</td>"");html.appendHtmlConstant(""</tr>"");}}html.appendHtmlConstant(""</table>"");helpPanel.add(new HTML(html.toSafeHtml()));hasBeenBuild = true;}}"	1
5134	"public class A {private DatagramSocket createSocket0(int receiveBufferSize) {try {DatagramSocket socket = new DatagramSocket(null);socket.setReceiveBufferSize(receiveBufferSize);if (logger.isWarnEnabled()) {final int checkReceiveBufferSize = socket.getReceiveBufferSize();if (receiveBufferSize != checkReceiveBufferSize) {}}socket.setSoTimeout(1000 * 5);return socket;} catch (SocketException ex) {throw new RuntimeException(""Socket create Fail. Caused:"" + ex.getMessage(), ex);}}}"	1
5135	public class A {private boolean isPublishable(MediaPackage mp) {boolean hasTitle = !isBlank(mp.getTitle());if (!hasTitle) {}boolean hasTracks = mp.hasTracks();if (!hasTracks) {}return hasTitle && hasTracks;}}	2
5136	public class A {@Deprecatedpublic void saveRoom(Room room) {if (room == null) return;if (room.getId() == null || room.getId().intValue() == 0) persist(room);else merge(room);}}	1
5137	public class A {@Overridepublic void invoke(Long value, Context context) throws Exception {value = withoutHeader(value);int parallelism = state.lastRecordInPartitions.length;int partition = (int) (value % parallelism);long lastRecord = state.lastRecordInPartitions[partition];if (value < lastRecord) {state.numOutOfOrderness++;if (firstOutOfOrder) {firstOutOfOrder = false;}} else if (value == lastRecord) {state.numDuplicates++;if (firstDuplicate) {firstDuplicate = false;}} else if (lastRecord != -1) {long expectedValue = lastRecord + parallelism * parallelism;if (value != expectedValue) {state.numLostValues++;if (firstLostValue) {firstLostValue = false;}}}state.lastRecordInPartitions[partition] = value;state.numOutput++;induceBackpressure();}}	3
5138	public class A {@Overridepublic void prevent(ClassLoader loader) {if (LOG.isDebugEnabled())Toolkit.getDefaultToolkit();}}	1
5139	public class A {public void stop() {if (!(this.workerState.changeStateDestroying())) {return;}boolean interrupted = false;while (workerThread != null && this.workerThread.isAlive()) {this.workerThread.interrupt();try {this.workerThread.join(100L);} catch (InterruptedException e) {interrupted = true;}}this.workerState.changeStateStopped();}}	3
5140	public class A {public static void setConversionProperties(Configuration conf) {if (conf != null) {useEnumId = conf.getBoolean(USE_ENUM_ID_CONF_KEY, false);}}}	1
5141	public class A {@Overridepublic void run() {try {Message msg = consumer.receive(30000);if (msg != null) {received.add(msg);}receiveDone.countDown();} catch (Exception e) {e.printStackTrace();}}}	2
5142	public class A {@Deactivateprotected void deactivate() {for (JsonStorage<Object> storage : storageList.values()) {storage.flush();}}}	1
5143	"public class A {public boolean confirmToken(Token token, Tenant tenant) {int status;HttpRestProxy proxy = null;String path = null;String username = token.getToken();try {path = CREDENTIALS_PATH.replace("":target"", this.identifier).replace("":username"", username);proxy =proxyFactory.createProxy(accountRegistrar.resolve(this.identifier), username, token.getSecret());status = proxy.post(path, """");} catch (ServiceNotAvailableException e) {logger.error(""Could not confirm token. System may be in a undefined state: "" + e.getMessage(), e);return false;} catch (AccountCannotResolveException e) {return false;} finally {if (proxy != null) {proxy.close();}}if (status == HttpStatus.SC_OK) {return true;} else {return false;}}}"	3
5144	public class A {public Assignment getAssignment() {return eisCommonService.getLatestAssignmentForEmployeeByToDate(ApplicationThreadLocals.getUserId(), new Date());}}	1
5145	public class A {@Overridepublic void sendException(Exception ex) {fetchOngoingDownloadsAfterDelay();}}	1
5146	"public class A {public SiteContext getContext(String siteName, boolean fallback) {SiteContext siteContext = contextRegistry.get(siteName);if (siteContext == null) {if (!fallback && !siteName.equals(defaultSiteName) && !validateSiteCreationEntitlement()) {return null;}Lock lock = siteLockFactory.getLock(siteName);lock.lock();try {siteContext = contextRegistry.get(siteName);if (siteContext == null) {logger.info(""=================================================="");logger.info(""=================================================="");siteContext = createContext(siteName, fallback);logger.info(""=================================================="");}} finally {lock.unlock();}} else if (!siteContext.isValid()) {destroyContext(siteName);siteContext = null;}return siteContext;}}"	4
5147	public class A {@Overridepublic void beforeProcessing(ListenerContext listenerContext) {WorkflowInstance instance = listenerContext.instance;MDC.put(logContext,format(LOG_CONTEXT_FORMAT,instance.type,instance.id,instance.externalId,instance.businessKey));if (LOG.isDebugEnabled() && !instance.stateVariables.isEmpty()) {}}}	1
5148	public class A {private static void storeNewStat(ClusterStats stats) {try {String json = stats.toJsonAndMarkNotUpdated();ClientResponse response =storeService.type(MediaType.TEXT_PLAIN).post(ClientResponse.class, json);if (response.getStatus() >= 300) {} else {String id = response.getEntity(String.class);stats.setId(id);}} catch (Exception e) {}}}	3
5149	"public class A {@Testpublic void testState() throws Exception {String state = ""'teXas'"";String query = SimpleField.STATE + EQ_OP + state;runTest(query, query);}}"	1
5150	public class A {public void activateContext() {try {this.makeCurrent();} catch (LWJGLException e) {}}}	1
5151	public class A {private static void resolveInstance() {ResponseEntityWriter writer = SpiLoader.of(ResponseEntityWriter.class).loadFirstInstance();if (writer == null) {} else {responseEntityWriter = writer;}RequestEntityDecoder decoder = SpiLoader.of(RequestEntityDecoder.class).loadFirstInstance();if (decoder == null) {} else {requestEntityDecoder = decoder;}}}	4
5152	public class A {public void parse(String headerFile) {try {CLexer lexer = new CLexer(CharStreams.fromFileName(headerFile));CommonTokenStream tokens = new CommonTokenStream(lexer);CParser parser = new CParser(tokens);ParseTree tree = parser.compilationUnit();ParseTreeWalker walker = new ParseTreeWalker();CBaseListener listener =new CBaseListener() {@Overridepublic void enterDeclaration(CParser.DeclarationContext ctx) {CParser.DeclarationSpecifiersContext specs = ctx.declarationSpecifiers();CParser.InitDeclaratorListContext init = ctx.initDeclaratorList();if (AntlrUtils.isTypeDef(specs)) {TypeDefine value = TypeDefine.parse(init, specs);typedefMap.put(value.getDataType().getType(), value);} else if (AntlrUtils.isStructOrUnion(specs)) {CParser.DeclarationSpecifierContext spec =(CParser.DeclarationSpecifierContext) specs.getChild(0);CParser.TypeSpecifierContext type = spec.typeSpecifier();CParser.StructOrUnionSpecifierContext struct = type.structOrUnionSpecifier();String name = struct.Identifier().getText();List<TypeDefine> fields = new ArrayList<>();CParser.StructDeclarationListContext list = struct.structDeclarationList();parseStructFields(fields, list);structMap.put(name, fields);} else if (AntlrUtils.isEnum(specs)) {CParser.DeclarationSpecifierContext spec =(CParser.DeclarationSpecifierContext) specs.getChild(0);CParser.TypeSpecifierContext type = spec.typeSpecifier();CParser.EnumSpecifierContext enumSpecifierContext = type.enumSpecifier();String name = enumSpecifierContext.Identifier().getText();List<String> fields = new ArrayList<>();parseEnum(fields, ctx);enumMap.put(name, fields);} else {FuncInfo info = FuncInfo.parse(ctx);if (checkDuplicate(info)) {} else {functions.add(info);}}}};walker.walk(listener, tree);} catch (IOException e) {}}}	2
5153	"public class A {@Testpublic void testL2NormalizeVertex2d() {Nd4j.getRandom().setSeed(12345);int[][] definitions = {null, new int[] {1}};for (int[] definition : definitions) {ComputationGraphConfiguration conf =new NeuralNetConfiguration.Builder().seed(12345).dataType(DataType.DOUBLE).optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).activation(Activation.TANH).updater(new NoOp()).graphBuilder().addInputs(""in1"").addLayer(""d1"", new DenseLayer.Builder().nIn(2).nOut(3).build(), ""in1"").addVertex(""norm"", new L2NormalizeVertex(definition, L2NormalizeVertex.DEFAULT_EPS), ""d1"").addLayer(""out1"",new OutputLayer.Builder().lossFunction(LossFunctions.LossFunction.L2).nIn(3).nOut(2).activation(Activation.IDENTITY).build(),""norm"").setOutputs(""out1"").build();ComputationGraph graph = new ComputationGraph(conf);graph.init();int[] mbSizes = new int[] {1, 3, 10};for (int minibatch : mbSizes) {INDArray in1 = Nd4j.rand(minibatch, 2);INDArray labels1 = Nd4j.rand(minibatch, 2);String testName = ""testL2NormalizeVertex2d() - minibatch = "" + minibatch;if (PRINT_RESULTS) {System.out.println(testName);}boolean gradOK =GradientCheckUtil.checkGradients(new GradientCheckUtil.GraphConfig().net(graph).inputs(new INDArray[] {in1}).labels(new INDArray[] {labels1}));assertTrue(gradOK, testName);TestUtils.testModelSerialization(graph);}}}}"	1
5154	public class A {private void loggingQuery(String query) {if (LOG.isDebugEnabled()) {}}}	1
5155	public class A {private void prepareCookieLength(HelloVerifyRequestMessage msg) {msg.setCookieLength((byte) msg.getCookie().getValue().length);}}	1
5156	"public class A {public synchronized KafkaCluster startup() throws IOException {if (!running) {if (dataDir == null) {try {File temp = File.createTempFile(""kafka"", ""suffix"");dataDir = new File(temp.getParentFile(), ""cluster"");dataDir.mkdirs();temp.delete();} catch (IOException e) {throw new RuntimeException(""Unable to create temporary directory"", e);}} else if (deleteDataPriorToStartup) {IoUtil.delete(dataDir);dataDir.mkdirs();}File zkDir = new File(dataDir, ""zk"");zkServer.setStateDirectory(zkDir);this.dataDir = dataDir;File kafkaDir = new File(dataDir, ""kafka"");kafkaServers.values().forEach(server -> server.setStateDirectory(new File(kafkaDir, ""broker"" + server.brokerId())));zkServer.startup();kafkaServers.values().forEach(KafkaServer::startup);running = true;}return this;}}"	1
5157	public class A {@AfterEachvoid stopEmailing() {try {EMAIL.purgeEmailFromAllMailboxes();EMAIL.stop();} catch (final Exception ex) {}}}	2
5158	public class A {private void addS3GVolumeToDB() throws IOException {String s3VolumeName = HddsClientUtils.getS3VolumeName(configuration);String dbVolumeKey = metadataManager.getVolumeKey(s3VolumeName);if (!s3VolumeName.equals(OzoneConfigKeys.OZONE_S3_VOLUME_NAME_DEFAULT)) {}if (!metadataManager.getVolumeTable().isExist(dbVolumeKey)) {long transactionID = MAX_TRXN_ID + 1;long objectID = OmUtils.addEpochToTxId(metadataManager.getOmEpoch(), transactionID);String userName = UserGroupInformation.getCurrentUser().getShortUserName();OmVolumeArgs omVolumeArgs = createS3VolumeInfo(s3VolumeName, objectID);String dbUserKey = metadataManager.getUserKey(userName);PersistedUserVolumeInfo userVolumeInfo =PersistedUserVolumeInfo.newBuilder().setObjectID(objectID).setUpdateID(transactionID).addVolumeNames(s3VolumeName).build();try (BatchOperation batchOperation = metadataManager.getStore().initBatchOperation()) {metadataManager.getVolumeTable().putWithBatch(batchOperation, dbVolumeKey, omVolumeArgs);metadataManager.getUserTable().putWithBatch(batchOperation, dbUserKey, userVolumeInfo);metadataManager.getStore().commitBatchOperation(batchOperation);}metadataManager.getVolumeTable().addCacheEntry(new CacheKey<>(dbVolumeKey),new CacheValue<>(Optional.of(omVolumeArgs), transactionID));metadataManager.getUserTable().addCacheEntry(new CacheKey<>(dbUserKey),new CacheValue<>(Optional.of(userVolumeInfo), transactionID));}}}	2
5159	"public class A {private void addAuthenticationFlow(ObjectNode contents) {contents.putArray(""authenticationFlow"");}}"	1
5160	public class A {@Overridepublic void setProcessGroup(final ProcessGroup group) {this.processGroup = group;resetValidationState();}}	1
5161	"public class A {@Overridepublic Optional<Connection> get(ConnectionKey connectionKey) {try {String query =""select CONN_NM, CONN_TYP_NM, CONN_DSC from ""+ getMetadataRepository().getTableNameByLabel(""Connections"")+ "" WHERE ""+ "" CONN_NM  = ""+ SQLTools.getStringForSQL(connectionKey.getName())+ "";"";CachedRowSet cachedRowSet = getMetadataRepository().executeQuery(query, ""reader"");if (cachedRowSet.size() == 0) {return Optional.empty();} else if (cachedRowSet.size() > 1) {}cachedRowSet.next();List<ConnectionParameter> connectionParameters =ConnectionParameterConfiguration.getInstance().getByConnection(connectionKey);if (connectionParameters.isEmpty()) {return Optional.empty();} else {return Optional.of(new Connection(connectionKey,cachedRowSet.getString(""CONN_TYP_NM""),cachedRowSet.getString(""CONN_DSC""),connectionParameters));}} catch (SQLException e) {throw new RuntimeException(e);}}}"	1
5162	"public class A {public static void checkDuplicate(String path, boolean failOnError) {try {Set<String> files = getResources(path);if (files.size() > 1) {String error = ""Duplicate class "" + path + "" in "" + files.size() + "" jar "" + files;if (failOnError) {throw new IllegalStateException(error);} else {}}} catch (Throwable e) {}}}"	2
5163	public class A {private void deleteAsyncContext(final Trace trace, AsyncContext asyncContext) {if (isDebug) {}trace.close();asyncContext.close();}}	1
5164	public class A {public List<ArtifactDefinition> handleArtifactsForInnerVfcComponent(List<ArtifactDefinition> artifactsToHandle,Resource component,User user,List<ArtifactDefinition> vfcsNewCreatedArtifacts,ArtifactOperationInfo operation,boolean shouldLock,boolean inTransaction) {ComponentTypeEnum componentType = component.getComponentType();List<ArtifactDefinition> uploadedArtifacts = new ArrayList<>();Either<ArtifactDefinition, Operation> result;try {for (ArtifactDefinition artifactDefinition : artifactsToHandle) {result =handleLoadedArtifact(component,user,operation,shouldLock,inTransaction,componentType,artifactDefinition);uploadedArtifacts.add(result.left().value());}} catch (ComponentException e) {if (operation.isCreateOrLink()) {vfcsNewCreatedArtifacts.addAll(uploadedArtifacts);}throw e;}return uploadedArtifacts;}}	1
5165	"public class A {public static com.liferay.blogs.model.BlogsEntry[] getEntriesPrevAndNext(HttpPrincipal httpPrincipal, long entryId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(BlogsEntryServiceUtil.class,""getEntriesPrevAndNext"",_getEntriesPrevAndNextParameterTypes6);MethodHandler methodHandler = new MethodHandler(methodKey, entryId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.blogs.model.BlogsEntry[]) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
5166	"public class A {@Overridepublic void uncaughtException(Thread t, Throwable e) {int result =JOptionPane.showConfirmDialog(null,""An error has occured! If the problem persists please contact an administrator.\n""+ ""Restart application?"",""Error occured"",JOptionPane.YES_NO_OPTION,JOptionPane.ERROR_MESSAGE);boolean restart = result == JOptionPane.YES_OPTION;EPD.getInstance().setRestart(restart);System.exit(restart ? 2 : 0);}}"	1
5167	"public class A {public static java.util.List<Long> getSubfolderIds(HttpPrincipal httpPrincipal, long repositoryId, long folderId, boolean recurse)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DLAppServiceUtil.class, ""getSubfolderIds"", _getSubfolderIdsParameterTypes79);MethodHandler methodHandler = new MethodHandler(methodKey, repositoryId, folderId, recurse);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<Long>) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
5168	"public class A {public void configure(Config conf) {if (!conf.hasPath(""warc.index.extract.content.arcname.rules"")) {return;}for (Config ruleConf : conf.getConfigList(""warc.index.extract.content.arcname.rules"")) {Pattern pattern = Pattern.compile(ruleConf.getString(""pattern""));List<FieldTemplate> fieldTemplates = new ArrayList<FieldTemplate>();for (Map.Entry<String, ConfigValue> entry : ruleConf.getConfig(""templates"").entrySet()) {fieldTemplates.add(new FieldTemplate(entry.getKey(), entry.getValue().unwrapped().toString()));}rules.add(new Rule(pattern, fieldTemplates));}}}"	2
5169	public class A {private VariableTable getPathParser(Configuration configuration) {assert configuration != null;VariableTable variables = new VariableTable(RedefineStrategy.IGNORE);variables.defineVariable(VAR_USER, getUser());variables.defineVariable(VAR_DEFINITION_ID, getDefinitionId());variables.defineVariable(VAR_STAGE_ID, getStageId());variables.defineVariable(VAR_BATCH_ID, getBatchId());variables.defineVariable(VAR_FLOW_ID, getFlowId());variables.defineVariable(VAR_EXECUTION_ID, getExecutionId());String arguments = configuration.get(PROP_ASAKUSA_BATCH_ARGS);if (arguments == null) {} else {variables.defineVariables(arguments);}return variables;}}	1
5170	"public class A {@Testpublic void testWrite() throws Exception {final int numberOfTestMessages = 200;MQTT client = new MQTT();client.setHost(""tcp://localhost:"" + port);final BlockingConnection connection = client.blockingConnection();connection.connect();connection.subscribe(new Topic[] {new Topic(Buffer.utf8(""WRITE_TOPIC""), QoS.EXACTLY_ONCE)});final Set<String> messages = new ConcurrentSkipListSet<>();Thread subscriber =new Thread(() -> {try {for (int i = 0; i < numberOfTestMessages; i++) {Message message = connection.receive();messages.add(new String(message.getPayload(), StandardCharsets.UTF_8));message.ack();}} catch (Exception e) {}});subscriber.start();ArrayList<byte[]> data = new ArrayList<>();for (int i = 0; i < numberOfTestMessages; i++) {data.add((""Test "" + i).getBytes(StandardCharsets.UTF_8));}pipeline.apply(Create.of(data)).apply(MqttIO.write().withConnectionConfiguration(MqttIO.ConnectionConfiguration.create(""tcp://localhost:"" + port, ""WRITE_TOPIC"")));pipeline.run();subscriber.join();connection.disconnect();assertEquals(numberOfTestMessages, messages.size());for (int i = 0; i < numberOfTestMessages; i++) {assertTrue(messages.contains(""Test "" + i));}}}"	1
5171	"public class A {@Testpublic void testBridgeWorks() throws Exception {sendJMSMessageToKickOffRoute();consumeMessages();assertEquals(5 + errorLimit, connectionCount.get(), ""x connections"");}}"	1
5172	public class A {protected void doInvokeUndeploy(HotDeployEvent hotDeployEvent) throws Exception {ServletContext servletContext = hotDeployEvent.getServletContext();String servletContextName = servletContext.getServletContextName();if (_log.isDebugEnabled()) {}List<LayoutTemplate> layoutTemplates = _layoutTemplates.remove(servletContextName);if (layoutTemplates == null) {return;}if (_log.isDebugEnabled()) {}for (LayoutTemplate layoutTemplate : layoutTemplates) {try {LayoutTemplateLocalServiceUtil.uninstallLayoutTemplate(layoutTemplate.getLayoutTemplateId(), layoutTemplate.isStandard());} catch (Exception exception) {}}if (_log.isInfoEnabled()) {if (layoutTemplates.size() == 1) {} else {}}}}	5
5173	public class A {protected List<BigInteger> getEnabledJobs() {List<BigInteger> result = new ArrayList<>();if (!isDisposed()) {if (LockType.ALERT_SCHEDULING.equals(lockType)) {synchronized (_alertService) {result.addAll(_alertService.findAlertIdsByStatus(true));}}}return result;}}	2
5174	public class A {public void sendCloseIncidentEmail(long incidentId) {String closeIncidentEmailContent = getCloseIncidentEmailContent(incidentId);sendEmail(incidentId, closeIncidentEmailContent);}}	1
5175	public class A {@Overridepublic Maybe<Consumer<BinaryGraphField>> process(BinaryDataProcessorContext ctx) {FileUpload upload = ctx.getUpload();return imageManipulator.readImageInfo(upload.uploadedFileName()).map(info -> {Consumer<BinaryGraphField> consumer =field -> {field.setImageDominantColor(info.getDominantColor());HibBinary binary = field.getBinary();binary.setImageHeight(info.getHeight());binary.setImageWidth(info.getWidth());};return consumer;}).doOnError(e -> {if (log.isDebugEnabled()) {}}).toMaybe().onErrorComplete();}}	2
5176	"public class A {protected Date getBeginDate(String beginDate, Date end) {Date begin = null;if (beginDate == null) {Calendar cal = new GregorianCalendar();cal.setTime(end);cal.add(Calendar.DAY_OF_MONTH, -7);cal.set(Calendar.HOUR_OF_DAY, 0);cal.set(Calendar.MINUTE, 0);cal.set(Calendar.SECOND, 0);begin = cal.getTime();} else {try {begin = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"").parse(beginDate);} catch (ParseException e) {throw new BusinessException(BusinessErrorCode.BAD_REQUEST, ""Can not convert begin date."");}}return begin;}}"	1
5177	public class A {private static void populateSubject(final Assertion saml2Assertion, final AssertionType target) {Subject subject = saml2Assertion.getSubject();if (subject == null) {return;}NameID name = subject.getNameID();if (name != null) {if (X509_FORMAT.equals(name.getFormat())) {}target.getUserInfo().setUserName(name.getValue());}populateSubjectConfirmation(saml2Assertion, target);}}	3
5178	public class A {@Overridepublic void run() {long now = System.currentTimeMillis();ConcurrentMap<TimerKey, BaseAction[]> tickedExecutors =timerExecutors.get((int) ((now / 1000) % 86400));if (tickedExecutors == null) {return;}try {this.activeTimers = 0;this.actuallySendTimers = 0;send(tickedExecutors, now);} catch (Exception e) {}if (activeTimers > 0) {}}}	3
5179	public class A {public final Charset detectCharset(byte[] buffer) {try {Charset charset = detectCharsetImpl(buffer);if (isDebugEnabled) {if (charset == null) {} else {}}return charset;} catch (Throwable e) {return null;}}}	3
5180	public class A {@Overridepublic final void onFailureResponse(final URI failedMessageUri, final WonMessage wonMessage, Optional<Connection> con) {logMessage(wonMessage);if (getLifecyclePhase().isActive()) {eventBus.publish(new FailureResponseEvent(failedMessageUri, wonMessage, con));} else {}}}	1
5181	"public class A {public static void uploadData(String index, String type, List<Map<String, String>> docs, String[] parentKey) {String actionTemplate =""{ \""index\"" : { \""_index\"" : \""%s\"", \""_type\"" : \""%s\"", \""_parent\"" : \""%s\"" } }%n"";if (null != docs && !docs.isEmpty()) {StringBuilder bulkRequest = new StringBuilder();int i = 0;for (Map<String, String> doc : docs) {StringBuilder _doc = new StringBuilder(new Gson().toJson(doc));String parent = Util.concatenate(doc, parentKey, ""_"");bulkRequest.append(String.format(actionTemplate, index, type, parent));bulkRequest.append(_doc + ""\n"");i++;if (i % 1000 == 0 || bulkRequest.toString().getBytes().length / (1024 * 1024) > 5) {bulkUpload(bulkRequest);bulkRequest = new StringBuilder();}}if (bulkRequest.length() > 0) {bulkUpload(bulkRequest);}}}}"	1
5182	"public class A {protected TaskInfo getTaskInfo(VMwareClient vmw, VMPropertyHandler paramHandler)throws Exception {String instanceId = paramHandler.getInstanceName();String taskKey = paramHandler.getServiceSetting(VMPropertyHandler.TASK_KEY);if (taskKey == null || """".equals(taskKey)) {return null;}VimPortType service = vmw.getConnection().getService();ManagedObjectReference taskManager = vmw.getConnection().getServiceContent().getTaskManager();ManagedObjectReference taskHistoryCollector =service.createCollectorForTasks(taskManager, new TaskFilterSpec());try {service.resetCollector(taskHistoryCollector);service.readNextTasks(taskHistoryCollector, 100);List<TaskInfo> taskList =vmw.getConnection().getService().readPreviousTasks(taskHistoryCollector, 100);if (taskList != null) {for (TaskInfo taskInfo : taskList) {if (taskInfo != null && taskKey.equals(taskInfo.getKey())) {logTaskInfo(taskInfo);return taskInfo;}}}return null;} finally {service.destroyCollector(taskHistoryCollector);}}}"	2
5183	"public class A {private void assertDeduction(Safeguard safeguard, BpRequirement requirement)throws CommandException {if (LOG.isDebugEnabled()) {}updateSafeguard(safeguard, ImplementationStatus.NO);assertEquals(""Must be option 'no'."", ImplementationStatus.NO, requirement.getImplementationStatus());if (LOG.isDebugEnabled()) {}safeguard = updateSafeguard(safeguard, ImplementationStatus.YES);assertEquals(""Must be option 'yes'."", ImplementationStatus.YES, requirement.getImplementationStatus());if (LOG.isDebugEnabled()) {}safeguard = updateSafeguard(safeguard, ImplementationStatus.NOT_APPLICABLE);assertEquals(""Must be option 'not applicable'."",ImplementationStatus.NOT_APPLICABLE,requirement.getImplementationStatus());}}"	3
5184	public class A {@Overridepublic List<FTPFile> listFiles() throws GenericFileOperationFailedException {clientActivityListener.onScanningForFiles(endpoint.remoteServerInformation(), null);try {final List<FTPFile> list = new ArrayList<>();FTPFile[] files = client.listFiles();if (files != null) {list.addAll(Arrays.asList(files));}return list;} catch (IOException e) {clientActivityListener.onGeneralError(endpoint.getConfiguration().remoteServerInformation(), e.getMessage());throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), e.getMessage(), e);}}}	1
5185	public class A {public static com.liferay.asset.kernel.model.AssetCategorySoap fetchCategory(long categoryId)throws RemoteException {try {com.liferay.asset.kernel.model.AssetCategory returnValue =AssetCategoryServiceUtil.fetchCategory(categoryId);return com.liferay.asset.kernel.model.AssetCategorySoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
5186	public class A {public void removeResourceFile() {try {fsFactory.deleteIfExists(fsFactory.getFile(file.getPath() + RESOURCE_SUFFIX));} catch (IOException e) {}}}	1
5187	public class A {@Overridepublic boolean apply(Event evt) {try {evictLatch.await();} catch (InterruptedException e) {}return true;}}	1
5188	"public class A {public void startRecipe(String recipeKey) {NeeoUtil.requireNotEmpty(recipeKey, ""recipeKey cannot be empty"");final NeeoBrainApi api = callback.getApi();if (api == null) {} else {final NeeoRecipe recipe = neeoRoom.getRecipes().getRecipe(recipeKey);final String scenarioKey = recipe == null ? null : recipe.getScenarioKey();if (recipe != null) {if (recipe.isEnabled()) {final boolean isLaunch = NeeoRecipe.LAUNCH.equalsIgnoreCase(recipe.getType());try {if (isLaunch || scenarioKey == null || scenarioKey.isEmpty()) {handleExecuteResult(scenarioKey, recipeKey, true, api.executeRecipe(roomKey, recipeKey));} else {handleExecuteResult(scenarioKey, recipeKey, false, api.stopScenario(roomKey, scenarioKey));}} catch (IOException e) {}} else {}} else {}}}}"	4
5189	public class A {@Overridepublic Class<?> findClass(String className) throws ClassNotFoundException {Class<?> cls = classesMap.get(className);if (cls == null) {try {cls = super.findClass(className);} catch (ClassNotFoundException cnfe) {cls = getClass().getClassLoader().loadClass(className);}classesMap.put(className, cls);}return cls;}}	1
5190	"public class A {@Overridepublic CompletableFuture<Void> closeAsync() {synchronized (lock) {if (isRunning) {isRunning = false;resultFuture.completeExceptionally(new JobNotFinishedException(jobId));jobMasterGatewayFuture.completeExceptionally(new FlinkException(""Process has been closed.""));jobMasterServiceFuture.whenComplete((jobMasterService, throwable) -> {if (throwable != null) {terminationFuture.complete(null);} else {FutureUtils.forward(jobMasterService.closeAsync(), terminationFuture);}});terminationFuture.whenComplete((unused, throwable) ->}}return terminationFuture;}}"	2
5191	"public class A {protected void handleUiComponentMove(JsonEvent event) {JSONObject data = event.getData();Date newDate = toJavaDate(data, ""newDate"");String componentId = data.optString(""component"", null);JsonCalendarComponent<CalendarComponent> component = resolveCalendarComponent(componentId);if (component != null) {getModel().getUIFacade().fireComponentMoveFromUI(component.getModel(), newDate);} else if (componentId != null) {}}}"	1
5192	public class A {private <T extends ToscaTypeDataDefinition> T setNonToscaMetaDataOnType(Map<String, ToscaTypeMetadata> toscaTypeMetadata, T toscaTypeDefinition) {String toscaType = toscaTypeDefinition.getType();ToscaTypeMetadata typeMetaData = toscaTypeMetadata.get(toscaType);if (typeMetaData == null) {throw new ByActionStatusComponentException(ActionStatus.GENERAL_ERROR);}toscaTypeDefinition.setIcon(typeMetaData.getIcon());toscaTypeDefinition.setName(typeMetaData.getDisplayName());return toscaTypeDefinition;}}	1
5193	"public class A {public static Integer getJsonIntValueForKey(JSONObject jsonObj, String key) {Integer keyValue = null;try {if (jsonObj.has(key)) {Integer value = (Integer) jsonObj.get(key);return value;} else {Iterator<String> itr = jsonObj.keys();while (itr.hasNext()) {String nextKey = itr.next();Object obj = jsonObj.get(nextKey);if (obj instanceof JSONObject) {keyValue = getJsonIntValueForKey((JSONObject) obj, key);if (keyValue != null) {break;}} else {}}}} catch (Exception e) {if (e.getMessage().contains(""not found"")) {} else {}keyValue = null;}return keyValue;}}"	4
5194	"public class A {@Overridepublic int saveAutoMLConfig(MultipartFile file,String usecase,String configuration,Integer trainingPerc,String predictionColumn,String numOfModels,String taskDetails,String predictionType)throws InsightsCustomException {int id = -1;byte[] fileBytes;boolean isExists = autoMLConfigDAL.isUsecaseExisting(usecase);if (isExists) {throw new InsightsCustomException(""usecase already exists "" + usecase);} else {String folderPath =ConfigOptions.ML_DATA_STORAGE_RESOLVED_PATH+ ConfigOptions.FILE_SEPERATOR+ usecase+ ConfigOptions.FILE_SEPERATOR;File destfolder = new File(folderPath);if (destfolder.mkdirs()) {}String filePath = folderPath + file.getOriginalFilename();destfolder = new File(filePath);try {file.transferTo(destfolder);fileBytes = FileUtils.readFileToByteArray(destfolder);} catch (Exception e) {throw new InsightsCustomException(""Unable to create folder"");}JsonParser parser = new JsonParser();JsonArray taskList = parser.parse(taskDetails).getAsJsonArray();boolean runImmediate = true;boolean reoccurence = false;String schedule = WorkflowTaskEnum.WorkflowSchedule.ONETIME.name();boolean isActive = true;String workflowStatus = WorkflowTaskEnum.WorkflowStatus.NOT_STARTED.name();String workflowType = ""AUTOML"";String workflowId =WorkflowTaskEnum.WorkflowType.AUTOML.getValue()+ ""_""+ InsightsUtils.getCurrentTimeInSeconds();InsightsWorkflowConfiguration workflowConfig =workflowService.saveWorkflowConfig(workflowId,isActive,reoccurence,schedule,workflowStatus,workflowType,taskList,0,null,runImmediate);AutoMLConfig mlConfig = new AutoMLConfig();mlConfig.setUseCaseName(usecase);mlConfig.setConfigJson(configuration);mlConfig.setIsActive(true);mlConfig.setPredictionColumn(predictionColumn);mlConfig.setNumOfModels(numOfModels);mlConfig.setTrainingPerc(trainingPerc);mlConfig.setMojoDeployed("""");mlConfig.setCreatedDate(InsightsUtils.getCurrentTimeInEpochMilliSeconds());mlConfig.setUseCaseFile(file.getOriginalFilename());mlConfig.setWorkflowConfig(workflowConfig);mlConfig.setStatus(workflowStatus);mlConfig.setPredictionType(predictionType);mlConfig.setFile(fileBytes);id = autoMLConfigDAL.saveMLConfig(mlConfig);}return id;}}"	4
5195	public class A {@Overridepublic Collection<Entity> addExistingMachinesFromSpec(String spec) {Location location =getManagementContext().getLocationRegistry().resolve(spec, true, null).orNull();List<Entity> additions = Lists.newLinkedList();if (location == null) {} else {Iterable<MachineLocation> machines =FluentIterable.from(location.getChildren()).filter(MachineLocation.class);for (MachineLocation machine : machines) {additions.add(addExistingMachine(machine));}}return additions;}}	3
5196	public class A {private File createZKLockNode(File path) throws KeeperException {boolean parentCreated = false;while (true) {try {return mZKClient.create(path, EMPTY, Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL);} catch (NoNodeException nne) {Preconditions.checkState(!parentCreated);mZKClient.createNodeRecursively(path.getParentFile());parentCreated = true;}}}}	1
5197	"public class A {private Iterable<String> getAffectedPackages(BundleWiring bw) {List<String> result = new ArrayList<String>();if (bw == null) {return result;}List<BundleCapability> l = bw.getCapabilities(""osgi.wiring.package"");for (BundleCapability bundleCapability : l) {String pkg = (String) bundleCapability.getAttributes().get(""osgi.wiring.package"");result.add(pkg);}return result;}}"	1
5198	public class A {@Override@Measurepublic void indexTransferIn(Transfer transfer, StoreKey... topKeys) {if (!config.isEnabled()) {return;}if (transfer != null && transfer.exists()) {StoreKey key = LocationUtils.getKey(transfer);String path = getStrategyPath(key, transfer.getPath());indexPathInStores(path, key, topKeys);}}}	1
5199	public class A {@Overridepublic boolean delete(DeletionSelector sel) throws AssetStoreException {File dir = getDeletionSelectorDir(sel);try {FileUtils.deleteDirectory(dir);FileSupport.deleteHierarchyIfEmpty(file(path(getRootDirectory(), sel.getOrganizationId())), dir.getParentFile());return true;} catch (IOException e) {throw new AssetStoreException(e);}}}	1
5200	"public class A {public static PropertyDescriptor[] getPropertyDescriptors(Class<?> clazz) {if (propertyDescriptors.containsKey(clazz)) {Collection<PropertyDescriptor> pds = propertyDescriptors.get(clazz).values();return pds.toArray(new PropertyDescriptor[pds.size()]);}class BridgedPropertyDescriptor extends PropertyDescriptor {private Method readMethod, writeMethod;private Class<?> propertyType;public BridgedPropertyDescriptor(PropertyDescriptor pd) throws IntrospectionException {super(pd.getName(), pd.getReadMethod(), pd.getWriteMethod());readMethod = resolveBridgedReadMethod(pd);writeMethod = resolveBridgedWriteMethod(pd);propertyType = resolvePropertyType(this);}@Overridepublic synchronized Class<?> getPropertyType() {return propertyType;}@Overridepublic synchronized Method getReadMethod() {return readMethod;}@Overridepublic synchronized Method getWriteMethod() {return writeMethod;}@Overridepublic synchronized void setReadMethod(Method readMethod) {this.readMethod = readMethod;}@Overridepublic synchronized void setWriteMethod(Method writeMethod) {this.writeMethod = writeMethod;}}try {PropertyDescriptor[] pds = Introspector.getBeanInfo(clazz).getPropertyDescriptors();pds = Arrays.asList(pds).toArray(new PropertyDescriptor[pds.length]);Map<String, PropertyDescriptor> map = new LinkedHashMap<String, PropertyDescriptor>();for (int i = 0; i < pds.length; i++) {PropertyDescriptor pd = pds[i];if ((pd.getReadMethod() != null && pd.getReadMethod().isBridge())|| (pd.getWriteMethod() != null && pd.getWriteMethod().isBridge())) {if (pd.getWriteMethod() == null&& pd.getReadMethod() != null&& pd.getReadMethod().isBridge()) {try {pd = new PropertyDescriptor(pd.getName(), clazz);} catch (IntrospectionException e) {}}pd = new BridgedPropertyDescriptor(pd);pds[i] = pd;}map.put(pd.getName(), pd);}propertyDescriptors.put(clazz, map);return pds;} catch (IntrospectionException ie) {throw new StripesRuntimeException(""Could not examine class '""+ clazz.getName()+ ""' using Introspector.getBeanInfo() to determine property information."",ie);}}}"	2
5201	"public class A {@Overridepublic Object getMember(String name) {switch (name) {case ""get"":return getGetFunctionWrapper();case ""this"":return wrap(actionContext, entity);case ""me"":return wrap(actionContext, actionContext.getSecurityContext().getUser(false));case ""predicate"":return new PredicateBinding(actionContext, entity);case ""batch"":case ""doInNewTransaction"":return new DoInNewTransactionFunction(actionContext, entity);case ""includeJs"":return new IncludeJSFunction(actionContext);case ""doPrivileged"":return new DoPrivilegedFunction(actionContext);case ""request"":return new HttpServletRequestWrapper(actionContext, actionContext.getSecurityContext().getRequest());case ""session"":return new HttpSessionWrapper(actionContext, actionContext.getSecurityContext().getSession());case ""cache"":return new CacheFunction(actionContext, entity);case ""vars"":case ""requestStore"":return new PolyglotProxyMap(actionContext, actionContext.getRequestStore());case ""applicationStore"":return new PolyglotProxyMap(actionContext, Services.getInstance().getApplicationStore());case ""methodParameters"":return new PolyglotProxyMap(actionContext, actionContext.getContextStore().getTemporaryParameters());default:Function<Object, Object> func = Functions.get(CaseHelper.toUnderscore(name, false));if (func != null) {return new FunctionWrapper(actionContext, entity, func);}if (actionContext.getConstant(name) != null) {return wrap(actionContext, actionContext.getConstant(name));}if (actionContext.getRequestStore().containsKey(name)) {return wrap(actionContext, actionContext.getRequestStore().get(name));}final EvaluationHints hints = new EvaluationHints();Object structrScriptResult = null;try {structrScriptResult =PolyglotWrapper.wrap(actionContext, actionContext.evaluate(entity, name, null, null, 0, hints, 1, 1));} catch (FrameworkException ex) {}if (structrScriptResult != null) {if (structrScriptResult instanceof Class) {final Class clazz = (Class) structrScriptResult;if (clazz != null) {return new StaticTypeWrapper(actionContext, clazz);}}return structrScriptResult;}return null;}}}"	2
5202	public class A {@Overridepublic void stopSystem(final DBBroker broker) {for (final Plug plugin : jacks.values()) {try {plugin.stop(broker);} catch (final Throwable e) {}}}}	1
5203	"public class A {@Overridepublic boolean open(final Application application, final String args) {try {runtime.exec(String.format(""%s %s"", application.getIdentifier(), args));return true;} catch (IOException e) {return false;}}}"	1
5204	public class A {@Overridepublic void clearOfferingsForFeaturesOfInterest() {this.offeringsForFeaturesOfInterest.clear();}}	1
5205	"public class A {@Overrideprotected Class<?> findClass(String name) throws ClassNotFoundException {Class result = classes.get(name);if (result != null) {return result;}if (isIncluded(name) && (isExcluded(name) == false)) {result = createClass(name);} else if (isNotFound(name)) {throw new ClassNotFoundException(name + "" is discarded"");} else {result = super.findClass(name);}classes.put(name, result);return result;}}"	1
5206	"public class A {@Overridepublic void onCreate(Bundle savedInstanceState) {super.onCreate(savedInstanceState);addPreferencesFromResource(R.xml.preferences);if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {PreferenceCategory prefCat =(PreferenceCategory) getPreferenceManager().findPreference(""ftpPrefCatSystem"");Preference announcePref =getPreferenceManager().findPreference(LoadPrefsUtil.PREF_KEY_ANNOUNCE);prefCat.removePreference(announcePref);Preference announceNamePref =getPreferenceManager().findPreference(LoadPrefsUtil.PREF_KEY_ANNOUNCE_NAME);prefCat.removePreference(announceNamePref);prefCat = (PreferenceCategory) getPreferenceManager().findPreference(""ftpPrefCatUi"");Preference showConnInfoPref =getPreferenceManager().findPreference(LoadPrefsUtil.PREF_KEY_SHOW_CONN_INFO);prefCat.removePreference(showConnInfoPref);}final Context context = getActivity().getApplicationContext();Resources res = getResources();String text =String.format(res.getString(R.string.prefSummaryPubKeyAuth), Defaults.pubKeyAuthKeyPath(context));Preference pubKeyAuthPref = findPreference(LoadPrefsUtil.PREF_KEY_PUB_KEY_AUTH);pubKeyAuthPref.setSummary(text);String textLogsPath =Defaults.homeDirScoped(context) + ""/"" + CsvLoggerFactory.LOGFILE_BASENAME + ""*"";if (textLogsPath.contains(""//"")) {textLogsPath = textLogsPath.replaceAll(""//"", ""/"");}String loggingText = String.format(res.getString(R.string.prefSummaryLoggingV2), textLogsPath);Preference loggingPref = findPreference(LoadPrefsUtil.PREF_KEY_LOGGING);loggingPref.setSummary(loggingText);Preference startStopNotificationPref =findPreference(LoadPrefsUtil.PREF_KEY_SHOW_START_STOP_NOTIFICATION);startStopNotificationPref.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {@Overridepublic boolean onPreferenceChange(Preference preference, Object newValue) {if (Boolean.TRUE.equals(newValue)) {NotificationUtil.createStartStopNotification(getActivity());} else {NotificationUtil.removeStartStopNotification(getActivity());}return true;}});startDirPref = (EditTextPreference) findPreference(LoadPrefsUtil.PREF_KEY_START_DIR);startDirPref.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {@Overridepublic boolean onPreferenceClick(Preference preference) {startDirPref.getDialog().dismiss();File startDirVal = LoadPrefsUtil.startDir(startDirPref.getSharedPreferences());Intent dirPickerIntent = Defaults.createDefaultDirPicker(context, startDirVal);startActivityForResult(dirPickerIntent, 0);return false;}});}}"	3
5207	"public class A {@Overridepublic void init(FilterConfig filterConfig) throws ServletException {super.init(filterConfig);String headerConfig = filterConfig.getInitParameter(""headerConfig"");if (headerConfig != null) {String[] configs = StringUtil.csvSplit(headerConfig);for (String config : configs) {_configuredHeaders.add(parseHeaderConfiguration(config));}}}}"	1
5208	"public class A {@Overridepublic void processLine(String line) {String[] tokens = line.split(""\\t"");String id = tokens[0];String active = tokens[2];String conceptId = tokens[4];String typeId = tokens[6];String term = tokens[7];Vertex v = vertexMap.get(conceptId);if (""1"".equals(active) && v != null) {if (preferred.contains(id) && !FULLY_SPECIFIED_NAME.equals(typeId)) {g.V(v).property(""display"", term).next();}Vertex w =g.addV(""Designation"").property(""language"", ""en"").property(""use"", typeId).property(""value"", term).next();g.V(v).addE(""designation"").to(w).next();}if ((counter.get() % 10000) == 0) {g.tx().commit();}counter.getAndIncrement();}}"	1
5209	public class A {@Overridepublic void run() {try {Thread.sleep(100);sessionContextID = MCRSessionMgr.getCurrentSession().getID();executed = true;} catch (InterruptedException e) {}}}	2
5210	"public class A {public static void debug(String msg, Throwable throwable) {addDebuggingLog(""DEBUG"", msg);}}"	1
5211	public class A {@Beanpublic StatsdMeterRegistry statsdMeterRegistry(StatsdConfig config,Clock clock,PrefixHierarchicalNameMapperStatsdConfigurationProperties phnmscp) {PrefixHierarchicalNameMapper prefixHierarchicalNameMapper =new PrefixHierarchicalNameMapper(phnmscp.getNamePrefix(),phnmscp.getTagKeyPrefix(),phnmscp.getStripCharacters(),phnmscp.getNamingConventionOverride());return new StatsdMeterRegistry(config, prefixHierarchicalNameMapper, clock);}}	1
5212	"public class A {public static List<GenPolynomial<BigInteger>> cyclotomicDecompose(GenPolynomialRing<BigInteger> ring, long n) {GenPolynomialRing<BigInteger> pfac = ring;if (pfac == null) {throw new IllegalArgumentException(""ring must be non null"");}GenPolynomial<BigInteger> q = pfac.univariate(0).subtract(pfac.getONE());List<GenPolynomial<BigInteger>> H = new ArrayList<GenPolynomial<BigInteger>>();H.add(q);SortedMap<Long, Integer> fac = PrimeInteger.factors(n);for (Map.Entry<Long, Integer> m : fac.entrySet()) {long p = m.getKey();int k = m.getValue();List<GenPolynomial<BigInteger>> Q = new ArrayList<GenPolynomial<BigInteger>>();for (GenPolynomial<BigInteger> h : H) {GenPolynomial<BigInteger> g = h.inflate(p).divide(h);Q.add(g);}H.addAll(Q);for (int i = 1; i < k; i++) {List<GenPolynomial<BigInteger>> P = new ArrayList<GenPolynomial<BigInteger>>();for (GenPolynomial<BigInteger> h : Q) {GenPolynomial<BigInteger> g = h.inflate(p);P.add(g);}Q = P;H.addAll(P);}}return H;}}"	1
5213	"public class A {public static Connection getPRIDE2Connection() throws SQLException {String url = ""jdbc:mysql://mysql-pride-cluster.ebi.ac.uk:4232"";String user = ""pride_ro"";String password = ""one_oh_one"";String driver = ""com.mysql.jdbc.Driver"";try {Class.forName(driver);} catch (ClassNotFoundException e) {}return DriverManager.getConnection(url, user, password);}}"	2
5214	"public class A {@POST@Produces(MediaType.TEXT_XML)@Path(""addDCCatalog"")@RestQuery(name = ""addDCCatalog"",description = ""Add a dublincore episode catalog to a given media package using an url"",restParameters = {@RestParameter(description = ""The media package as XML"",isRequired = true,name = ""mediaPackage"",type = RestParameter.Type.TEXT),@RestParameter(description = ""DublinCore catalog as XML"",isRequired = true,name = ""dublinCore"",type = RestParameter.Type.TEXT),@RestParameter(defaultValue = ""dublincore/episode"",description = ""DublinCore Flavor"",isRequired = false,name = ""flavor"",type = RestParameter.Type.STRING)},responses = {@RestResponse(description = ""Returns augmented media package"",responseCode = HttpServletResponse.SC_OK),@RestResponse(description = ""Media package not valid"",responseCode = HttpServletResponse.SC_BAD_REQUEST),@RestResponse(description = """", responseCode = HttpServletResponse.SC_INTERNAL_SERVER_ERROR)},returnDescription = """")public Response addDCCatalog(@FormParam(""mediaPackage"") String mp,@FormParam(""dublinCore"") String dc,@FormParam(""flavor"") String flavor) {MediaPackageElementFlavor dcFlavor = MediaPackageElements.EPISODE;if (flavor != null) {try {dcFlavor = MediaPackageElementFlavor.parseFlavor(flavor);} catch (IllegalArgumentException e) {return Response.status(Status.BAD_REQUEST).entity(e.getMessage()).build();}}MediaPackage mediaPackage;try {mediaPackage =MediaPackageBuilderFactory.newInstance().newMediaPackageBuilder().loadFromXml(mp);} catch (MediaPackageException e) {return Response.serverError().status(Status.BAD_REQUEST).build();}if (MediaPackageSupport.sanityCheck(mediaPackage).isSome()) {return Response.status(Status.BAD_REQUEST).build();}try {DublinCoreXmlFormat.read(dc);} catch (Exception e) {return Response.status(Status.BAD_REQUEST).entity(e.getMessage()).build();}try (InputStream in = IOUtils.toInputStream(dc, ""UTF-8"")) {mediaPackage = ingestService.addCatalog(in, ""dublincore.xml"", dcFlavor, mediaPackage);} catch (MediaPackageException e) {return Response.serverError().status(Status.BAD_REQUEST).entity(e.getMessage()).build();} catch (IOException e) {return Response.serverError().build();} catch (Exception e) {return Response.serverError().build();}return Response.ok(mediaPackage).build();}}"	3
5215	"public class A {@RuleAction(label = ""@text/playURLActionLabel"", description = ""@text/playURLActionDescription"")public @ActionOutput(name = ""success"", type = ""java.lang.Boolean"") Boolean playURL(@ActionInput(name = ""url"") @Nullable String url) {if (url == null) {return false;}final ChromecastHandler handler = this.handler;if (handler == null) {return false;} else {return handler.playURL(url, null);}}}"	2
5216	"public class A {@Testpublic void test_01() {String genome = ""testHg19Pdb"";String pdbDir = path(""pdb"");String idmap = path(""pdb"") + ""/idMap_pdbId_ensemblId_refseqId.txt.gz"";String args[] = {""-pdbDir"", pdbDir, ""-idmap"", idmap, genome};SnpEffCmdPdb cmd = new SnpEffCmdPdb();cmd.setVerbose(verbose);cmd.setDebug(debug);cmd.parseArgs(args);cmd.run(true);List<DistanceResult> distanceResults = cmd.getDistanceResults();boolean ok = false;for (DistanceResult dr : distanceResults) {ok |= dr.pdbId.equals(""1A12"") && dr.aaPos1 == 24 && dr.aaPos2 == 135;}Assert.assertTrue(""Interaction not found!"", ok);}}"	2
5217	"public class A {private byte transitionToNextToken(boolean lastChunk) {int endNextToken = findNextChar(responseContent, ':');if (endNextToken < 0 && !lastChunk) {return queryParsingState;}if (endNextToken < 0 && lastChunk && queryParsingState >= QUERY_STATE_STATUS) {return QUERY_STATE_NO_INFO;}byte newState;ByteBuf peekSlice = responseContent.readSlice(endNextToken + 1);String peek = peekSlice.toString(CHARSET);if (peek.contains(""\""signature\"":"")) {newState = QUERY_STATE_SIGNATURE;} else if (peek.endsWith(""\""results\"":"")) {newState = QUERY_STATE_ROWS_DECIDE;} else if (peek.endsWith(""\""status\"":"")) {newState = QUERY_STATE_STATUS;} else if (peek.endsWith(""\""errors\"":"")) {newState = QUERY_STATE_ERROR;} else if (peek.endsWith(""\""warnings\"":"")) {newState = QUERY_STATE_WARNING;} else if (peek.endsWith(""\""metrics\"":"")) {newState = QUERY_STATE_INFO;} else {if (lastChunk) {IllegalStateException e =new IllegalStateException(""Error parsing query response (in TRANSITION) at \""""+ peek+ ""\"", enable trace to see response content"");if (LOGGER.isTraceEnabled()) {}throw e;} else {return queryParsingState;}}sectionDone = false;return newState;}}"	1
5218	"public class A {@RequestMapping(value = ""lists/person-optional-parameters/edit.html"", method = RequestMethod.GET)protected String showEditForm(@RequestParam(""id"") String idString,@RequestParam(""groupid"") String idString2,ModelMap model,HttpServletRequest request) {AddPersonOptParamDefCommand data = new AddPersonOptParamDefCommand();if (auth.userIsExperimenter() || auth.isAdmin()) {model.addAttribute(""userIsExperimenter"", true);if (idString2 != null) {int id = Integer.parseInt(idString2);data.setResearchGroupId(id);if (id != DEFAULT_ID) {String title = researchGroupDao.getResearchGroupTitle(id);data.setResearchGroupTitle(title);} else {String defaultPersonOptParamDef =messageSource.getMessage(""label.defaultPersonOptParamDef"", null, RequestContextUtils.getLocale(request));data.setResearchGroupTitle(defaultPersonOptParamDef);}}if (idString != null) {int id = Integer.parseInt(idString);PersonOptParamDef personOptParamDef = personOptParamDefDao.read(id);data.setId(id);data.setParamName(personOptParamDef.getParamName());data.setParamDataType(personOptParamDef.getParamDataType());}model.addAttribute(""addPersonOptParamDef"", data);return ""lists/personAdditionalParams/addItemForm"";} else {return ""lists/userNotExperimenter"";}}}"	1
5219	public class A {@Overridepublic void visit(ContainerInitializerModelChange change) {if (change.getKind() == OpCode.ADD) {ContainerInitializerModel model = change.getContainerInitializerModel();List<OsgiContextModel> contextModels = change.getContextModels();contextModels.forEach((context) -> {String path = context.getContextPath();DeploymentManager manager = getDeploymentManager(path);if (manager != null) {} else {ServletContainerInitializer initializer = model.getContainerInitializer();OsgiServletContext osgiServletContext = osgiServletContexts.get(context);DynamicRegistrations registrations = this.dynamicRegistrations.get(path);OsgiDynamicServletContext dynamicContext =new OsgiDynamicServletContext(osgiServletContexts.get(context), registrations);OsgiServletContainerInitializerInfo info =new OsgiServletContainerInitializerInfo(model, dynamicContext);initializers.get(path).put(System.identityHashCode(initializer), info);}});}if (change.getKind() == OpCode.DELETE) {List<ContainerInitializerModel> models = change.getContainerInitializerModels();for (ContainerInitializerModel model : models) {List<OsgiContextModel> contextModels = model.getContextModels();contextModels.forEach((context) -> {String path = context.getContextPath();ServletContainerInitializer initializer = model.getContainerInitializer();LinkedHashMap<Integer, OsgiServletContainerInitializerInfo> initializers =this.initializers.get(path);if (initializers != null) {initializers.remove(System.identityHashCode(initializer));}});}}}}	1
5220	public class A {@Overridepublic void removeStream(StreamDefinition streamDefinition, int tenantID) {}}	1
5221	public class A {public void setRoutes(final RouteBuilder routeBuilder) throws Exception {if (routeBuilder == null) {clearRoutes();return;}setRoutes(new BuilderRoutesProvider(routeBuilder));}}	1
5222	public class A {private void createIndexes(List<AnalyticsTable> tables) {ConcurrentLinkedQueue<AnalyticsIndex> indexes = getIndexes(tables);List<Future<?>> futures = new ArrayList<>();for (int i = 0; i < getProcessNo(); i++) {futures.add(tableManager.createIndexesAsync(indexes));}ConcurrentUtils.waitForCompletion(futures);}}	1
5223	"public class A {protected String[] createCmdArray(String[] shell, String cOption, String commandLine) {boolean startsWithShell = false;for (String sh : shell) {if (commandLine.startsWith(sh + "" "")) {startsWithShell = true;break;}}if (!startsWithShell) {return new String[] {shell[0], cOption, commandLine};} else {try {return commandLine.split("" "");} catch (PatternSyntaxException e) {updateState(RUN, OnOffType.OFF);updateState(OUTPUT, new StringType(e.getMessage()));return new String[] {};}}}}"	2
5224	"public class A {@Overridepublic Message createCxfMessageFromCamelExchange(Exchange camelExchange, HeaderFilterStrategy headerFilterStrategy) {org.apache.cxf.message.Message answer =CxfMessageHelper.getCxfInMessage(headerFilterStrategy, camelExchange, false);org.apache.camel.Message camelMessage = camelExchange.getIn();String requestContentType = getRequestContentType(camelMessage);String acceptContentTypes = camelMessage.getHeader(""Accept"", String.class);if (acceptContentTypes == null) {acceptContentTypes = ""*/*"";}String enc = getCharacterEncoding(camelMessage);String requestURI = getRequestURI(camelMessage);String path = getPath(camelMessage);String basePath = getBasePath(camelExchange);String verb = getVerb(camelMessage);String queryString = getQueryString(camelMessage);answer.put(org.apache.cxf.message.Message.REQUEST_URI, requestURI);answer.put(org.apache.cxf.message.Message.BASE_PATH, basePath);answer.put(org.apache.cxf.message.Message.HTTP_REQUEST_METHOD, verb);answer.put(org.apache.cxf.message.Message.PATH_INFO, path);answer.put(org.apache.cxf.message.Message.CONTENT_TYPE, requestContentType);answer.put(org.apache.cxf.message.Message.ACCEPT_CONTENT_TYPE, acceptContentTypes);answer.put(org.apache.cxf.message.Message.ENCODING, enc);answer.put(org.apache.cxf.message.Message.QUERY_STRING, queryString);HttpServletRequest request =(HttpServletRequest) camelMessage.getHeader(Exchange.HTTP_SERVLET_REQUEST);answer.put(CXF_HTTP_REQUEST, request);if (request != null) {setSecurityContext(answer, request);}Object response = camelMessage.getHeader(Exchange.HTTP_SERVLET_RESPONSE);answer.put(CXF_HTTP_RESPONSE, response);return answer;}}"	1
5225	"public class A {@SuppressWarnings(""resource"")private void init() {ApplicationContext context = new ClassPathXmlApplicationContext(""orcid-core-context.xml"");addressDao = (AddressDao) context.getBean(""addressDao"");emailDao = (EmailDao) context.getBean(""emailDao"");notificationDao = (NotificationDao) context.getBean(""notificationDao"");orgAffiliationRelationDao =(OrgAffiliationRelationDao) context.getBean(""orgAffiliationRelationDao"");orgDao = (OrgDao) context.getBean(""orgDao"");otherNameDao = (OtherNameDao) context.getBean(""otherNameDao"");profileFundingDao = (ProfileFundingDao) context.getBean(""profileFundingDao"");profileKeywordDao = (ProfileKeywordDao) context.getBean(""profileKeywordDao"");researcherUrlDao = (ResearcherUrlDao) context.getBean(""researcherUrlDao"");workDao = (WorkDao) context.getBean(""workDao"");clientDetailsDao = (ClientDetailsDao) context.getBean(""clientDetailsDao"");profileDao = (ProfileDao) context.getBean(""profileDao"");}}"	1
5226	public class A {public void waitForKey() {try {System.in.read();} catch (Throwable ignored) {}}}	1
5227	public class A {private CompletableFuture<IndexedRaftLogEntry> append(final RaftLogEntry entry) {CompletableFuture<IndexedRaftLogEntry> resultingFuture = null;int retries = 0;do {try {resultingFuture = tryToAppend(entry);} catch (final JournalException storageException) {retries++;if (retries > MAX_APPEND_ATTEMPTS) {raft.transition(Role.FOLLOWER);resultingFuture = Futures.exceptionalFuture(storageException);}} catch (final Exception e) {resultingFuture = Futures.exceptionalFuture(e);}} while (resultingFuture == null);return resultingFuture;}}	3
5228	"public class A {public void testAsyncCallbackIsFaster() throws JMSException, InterruptedException {connection.start();Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);Queue queue = session.createQueue(getName());MessageConsumer consumer = session.createConsumer(queue);consumer.setMessageListener(new MessageListener() {@Overridepublic void onMessage(Message message) {}});for (int i = 0; i < 10; i++) {benchmarkNonCallbackRate();benchmarkCallbackRate();}double callbackRate = benchmarkCallbackRate();double nonCallbackRate = benchmarkNonCallbackRate();assertTrue(""async rate["" + callbackRate + ""] should beat non-async rate["" + nonCallbackRate + ""]"",callbackRate / nonCallbackRate > 1.5);}}"	2
5229	"public class A {@Testpublic void testFailoverListenerCall() throws Exception {createSessionFactory(2);CountDownLatch failureLatch = new CountDownLatch(1);CountDownLatch failureDoneLatch = new CountDownLatch(1);SessionFactoryFailoverListener listener =new SessionFactoryFailoverListener(failureLatch, failureDoneLatch);sf.addFailoverListener(listener);ClientSession session = sendAndConsume(sf, true);liveServer.crash();assertTrue(failureLatch.await(5, TimeUnit.SECONDS));assertEquals(FailoverEventType.FAILURE_DETECTED, listener.getFailoverEventType().get(0));assertTrue(failureDoneLatch.await(5, TimeUnit.SECONDS));assertEquals(FailoverEventType.FAILOVER_COMPLETED, listener.getFailoverEventType().get(1));ClientProducer producer = session.createProducer(ADDRESS);ClientMessage message = session.createMessage(true);setBody(0, message);producer.send(message);verifyMessageOnServer(1, 1);liveServer.start();Thread.sleep(1000);assertEquals(FailoverEventType.FAILURE_DETECTED, listener.getFailoverEventType().get(2));assertEquals(FailoverEventType.FAILOVER_COMPLETED, listener.getFailoverEventType().get(3));message = session.createMessage(true);setBody(1, message);producer.send(message);session.close();verifyMessageOnServer(0, 1);wrapUpSessionFactory();assertEquals(""Expected 4 FailoverEvents to be triggered"", 4, listener.getFailoverEventType().size());}}"	4
5230	"public class A {@Test(timeout = 10000)public void testContextRegistered() {JoynrJeeMessageContext.getInstance().activate();Context result = beanManager.getContext(JoynrJeeMessageScoped.class);assertNotNull(result);assertTrue(result instanceof JoynrJeeMessageContext);JoynrJeeMessageContext.getInstance().deactivate();try {result = beanManager.getContext(JoynrJeeMessageScoped.class);fail(""Shouldn't get it after deactivation."");} catch (ContextNotActiveException e) {}}}"	1
5231	public class A {@Overridepublic void run() {while (running) {try {handleIO();} catch (IOException e) {logRunException(e);} catch (CancelledKeyException e) {logRunException(e);} catch (ClosedSelectorException e) {logRunException(e);} catch (IllegalStateException e) {logRunException(e);} catch (ConcurrentModificationException e) {logRunException(e);}}}}	1
5232	public class A {@Overridepublic Map<AttributeSensor<?>, Object> getAll() {Map<AttributeSensor<?>, Object> result = Maps.newLinkedHashMap();Map<String, Object> attribs = attributesInternal.asMap();for (Map.Entry<String, Object> entry : attribs.entrySet()) {AttributeSensor<?> attribKey = (AttributeSensor<?>) entityType.getSensor(entry.getKey());if (attribKey == null) {attribKey = Sensors.newSensor(Object.class, entry.getKey());}result.put(attribKey, entry.getValue());}return result;}}	1
5233	public class A {public long querySingleSeriesByTimestamp(SingleSeriesQueryRequest request)throws CheckConsistencyException, QueryProcessException, StorageEngineException {dataGroupMember.syncLeaderWithConsistencyCheck(false);PartialPath path = null;try {path = new PartialPath(request.getPath());} catch (IllegalPathException e) {}TSDataType dataType = TSDataType.values()[request.dataTypeOrdinal];Set<String> deviceMeasurements = request.getDeviceMeasurements();RemoteQueryContext queryContext =queryManager.getQueryContext(request.getRequester(),request.getQueryId(),request.getFetchSize(),request.getDeduplicatedPathNum());IReaderByTimestamp readerByTimestamp =readerFactory.getReaderByTimestamp(path, deviceMeasurements, dataType, queryContext, dataGroupMember, request.ascending);if (readerByTimestamp != null) {long readerId = queryManager.registerReaderByTime(readerByTimestamp);queryContext.registerLocalReader(readerId);return readerId;} else {return -1;}}}	4
5234	"public class A {protected static void fileChecksumVote(long fileId, Connection con) {final String sql = ""SELECT replicafileinfo_guid FROM replicafileinfo WHERE file_id = ?"";List<Long> rfiGuids = DBUtils.selectLongList(con, sql, fileId);List<ReplicaFileInfo> rfis = retrieveReplicaFileInfosWithChecksum(rfiGuids, con);if (rfis.size() == 0) {return;}Set<String> hs = new HashSet<String>(rfis.size());for (ReplicaFileInfo rfi : rfis) {if (rfi.getFileListState() == FileListStatus.OK) {hs.add(rfi.getChecksum());}}if (hs.size() == 0) {String errorMsg =""The file '"" + retrieveFilenameForFileId(fileId, con) + ""' is missing in all replicas"";NotificationsFactory.getInstance().notify(errorMsg, NotificationType.WARNING);return;}if (hs.size() == 1) {for (ReplicaFileInfo rfi : rfis) {if (rfi.getFileListState() == FileListStatus.OK) {updateReplicaFileInfoChecksumOk(rfi.getGuid(), con);}}return;}List<String> checksums = new ArrayList<String>();for (ReplicaFileInfo rfi : rfis) {if (rfi.getFileListState() == FileListStatus.OK) {checksums.add(rfi.getChecksum());}}String uniqueChecksum = vote(checksums);if (uniqueChecksum != null) {for (ReplicaFileInfo rfi : rfis) {if (!rfi.getChecksum().equals(uniqueChecksum)) {updateReplicaFileInfoChecksumCorrupt(rfi.getGuid(), con);} else {updateReplicaFileInfoChecksumOk(rfi.getGuid(), con);}}} else {String errMsg =""There is no winner of the votes between the replicas for the checksum of file '""+ retrieveFilenameForFileId(fileId, con)+ ""'."";NotificationsFactory.getInstance().notify(errMsg, NotificationType.WARNING);for (ReplicaFileInfo rfi : rfis) {updateReplicaFileInfoChecksumUnknown(rfi.getGuid(), con);}}}}"	4
5235	public class A {private void printTestRunsSummary(List<TestRunResult> results) {ConsoleTable table = new ConsoleTable();table.addHeader(HEADER);results.forEach(result -> table.addRow(result.toRow()));table.addSeparator();}}	1
5236	public class A {public void openTask() {long start = 0;if (LOG.isDebugEnabled()) {start = System.currentTimeMillis();}doOpenTask();if (LOG.isDebugEnabled()) {long duration = System.currentTimeMillis() - start;}}}	2
5237	"public class A {protected void restoreByLabel(NodeStateEx state, Name versionLabel, boolean removeExisting)throws RepositoryException {checkVersionable(state);InternalVersion v = getVersionHistory(state).getVersionByLabel(versionLabel);if (v == null) {String msg = ""No version for label "" + versionLabel + "" found."";throw new VersionException(msg);}WriteOperation ops = startWriteOperation();try {internalRestore(state, v, new LabelVersionSelector(versionLabel), removeExisting);ops.save();} catch (ItemStateException e) {throw new RepositoryException(e);} finally {ops.close();}}}"	1
5238	"public class A {@Overridepublic void handleMessage(int group, byte cmd1, Msg msg, DeviceFeature f) {try {byte cmd2 = msg.getByte(""command2"");switch (cmd1) {case 0x11:switch (cmd2) {case 0x02:feature.publish(OpenClosedType.CLOSED, StateChangeType.CHANGED);break;case 0x01:case 0x04:feature.publish(OpenClosedType.OPEN, StateChangeType.CHANGED);break;default:break;}break;case 0x13:switch (cmd2) {case 0x04:feature.publish(OpenClosedType.CLOSED, StateChangeType.CHANGED);break;default:break;}break;}} catch (FieldException e) {return;}}}"	1
5239	"public class A {private void verifyCredentials(ResultBuilder builder, Map<String, Object> parameters) {ConnectionParamsConfiguration mongoConf = new ConnectionParamsConfiguration(cast(parameters));MongoClientSettings.Builder optionsBuilder = MongoClientSettings.builder();optionsBuilder.applyToSocketSettings(socketBuilder -> socketBuilder.connectTimeout(CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS));optionsBuilder.applyToConnectionPoolSettings(connectionPoolBuilder ->connectionPoolBuilder.maxWaitTime(CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS));optionsBuilder.applyToClusterSettings(clusterBuilder ->clusterBuilder.serverSelectionTimeout(CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS));ConnectionString connectionString = new ConnectionString(mongoConf.getMongoClientURI());optionsBuilder.applyConnectionString(connectionString);try (MongoClient mongoClient = MongoClients.create(connectionString)) {MongoDatabase database = mongoClient.getDatabase(mongoConf.getAdminDB());database.runCommand(Document.parse(""{ ping: 1 }""));} catch (MongoSecurityException e) {ResultErrorBuilder errorBuilder =ResultErrorBuilder.withCodeAndDescription(VerificationError.StandardCode.AUTHENTICATION,String.format(""Unable to authenticate %s against %s authentication database!"",mongoConf.getUser(), mongoConf.getAdminDB()));builder.error(errorBuilder.build());} catch (MongoTimeoutException e) {String description;VerificationError.StandardCode code = VerificationError.StandardCode.GENERIC;if (e.getMessage().contains(""com.mongodb.MongoSecurityException"")) {code = VerificationError.StandardCode.AUTHENTICATION;description =String.format(""Unable to authenticate %s against %s authentication database!"",mongoConf.getUser(), mongoConf.getAdminDB());} else if (e.getMessage().contains(""com.mongodb.MongoSocket"")&& e.getMessage().contains(""Exception"")) {description = String.format(""Unable to connect to %s!"", mongoConf.getHost());} else {description =String.format(""Generic exception while connecting to %s!"", mongoConf.getHost());}ResultErrorBuilder errorBuilder =ResultErrorBuilder.withCodeAndDescription(code, String.format(description));}}}"	3
5240	public class A {protected void log(String s, Object... objs) {}}	1
5241	public class A {@Overridepublic void childHandlerInitialized(ThingHandler childHandler, Thing childThing) {if (childHandler instanceof DWDPollenflugRegionHandler) {final DWDPollenflugRegionHandler regionListener = (DWDPollenflugRegionHandler) childHandler;if (regionListeners.add(regionListener)) {final DWDPollenflug localPollenflug = pollenflug;if (localPollenflug != null) {regionListener.notifyOnUpdate(localPollenflug);}} else {}}}}	2
5242	"public class A {public Sequence eval(Sequence[] args, Sequence contextSequence) throws XPathException {if (!context.getSubject().hasDbaRole()) {final XPathException xPathException =new XPathException(this,""Permission denied, calling user '""+ context.getSubject().getName()+ ""' must be a DBA to get the list of running xqueries"");throw xPathException;}return (getRunningXQueries());}}"	1
5243	public class A {@Overridepublic List<Object> deserialize(EventData eventData) {final List<Object> fieldContents = new ArrayList<Object>();byte[] messageData = null;if (eventData.getBytes() != null) {messageData = eventData.getBytes();} else if (eventData.getObject() != null) {try {messageData = SerializeDeserializeUtil.serialize(eventData.getObject());} catch (IOException e) {throw new RuntimeException(e);}}Map<String, Object> metaDataMap = eventData.getProperties();Map<String, Object> systemMetaDataMap = eventData.getSystemProperties();fieldContents.add(messageData);fieldContents.add(metaDataMap);fieldContents.add(systemMetaDataMap);return fieldContents;}}	2
5244	public class A {@Testpublic void test_03() {double pvals[] = {0.01, 0.9, 0.2, 0.9, 0.3, 0.9, 0.01, 0.9, 0.2, 0.9, 0.3, 0.9, 0.01, 0.9, 0.2, 0.9, 0.3, 0.9,0.17, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9};ScoreList gpl = new ScoreList();for (double pval : pvals) gpl.add(pval);double pvalue = gpl.score(ScoreSummary.AVG_MIN_10);Assert.assertEquals(0.17, pvalue, EPSILON);}}	1
5245	"public class A {@Overridepublic void handle(Invocation invocation, AsyncResponse asyncResp) throws Exception {invocation.next(response -> {if (invocation.getOperationMeta().getSchemaQualifiedName().equals(""server.splitParam"")) {User user = response.getResult();user.setName(user.getName() + SPLITPARAM_RESPONSE_USER_SUFFIX);asyncResp.handle(response);} else {asyncResp.handle(response);}});}}"	1
5246	public class A {@Overridepublic int getConfidentialPort(HttpServerExchange exchange) {int port = exchange.getConnection().getLocalAddress(InetSocketAddress.class).getPort();if (port < 0) {}return UndertowServerWrapper.this.securePortMapping.get(port);}}	1
5247	public class A {@Overridepublic void info(String arg0) {}}	1
5248	public class A {@Overridepublic void write(char[] chars, int offset, int length) {if (_writer == null) {_hasError = true;} else {try {_writer.write(chars, offset, length);} catch (InterruptedIOException interruptedIOException) {if (_log.isDebugEnabled()) {}Thread currentThread = Thread.currentThread();currentThread.interrupt();} catch (IOException ioException) {if (_log.isDebugEnabled()) {}_hasError = true;}}}}	2
5249	public class A {public void notifyTaskFailure(TaskAttempt ta, List<Exception> exceptions) {try {TaskAttemptId taId = ta.getTaskAttemptId();TaskCluster tc = ta.getTask().getTaskCluster();TaskClusterAttempt lastAttempt = findLastTaskClusterAttempt(tc);if (lastAttempt != null && taId.getAttempt() == lastAttempt.getAttempt()) {ta.setStatus(TaskAttempt.TaskStatus.FAILED, exceptions);abortTaskCluster(lastAttempt, TaskClusterAttempt.TaskClusterStatus.FAILED);abortDoomedTaskClusters();int maxReattempts = jobRun.getActivityClusterGraph().getMaxReattempts();if (lastAttempt.getAttempt() >= maxReattempts || isCancelled()) {abortJob(exceptions, NoOpCallback.INSTANCE);return;}startRunnableActivityClusters();} else {}} catch (Exception e) {abortJob(Collections.singletonList(e), NoOpCallback.INSTANCE);}}}	6
5250	"public class A {public static void deleteCommercePriceListChannelRelsByCommercePriceListId(HttpPrincipal httpPrincipal, long commercePriceListId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommercePriceListChannelRelServiceUtil.class,""deleteCommercePriceListChannelRelsByCommercePriceListId"",_deleteCommercePriceListChannelRelsByCommercePriceListIdParameterTypes2);MethodHandler methodHandler = new MethodHandler(methodKey, commercePriceListId);try {TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
5251	"public class A {@RequestMapping(value = ApiUrl.CITIZEN_UPDATE_PROFILE,method = RequestMethod.PUT,consumes = {""application/json""})public ResponseEntity<String> updateProfile(@RequestBody final JSONObject citizen) {final ApiResponse res = ApiResponse.newInstance();try {final Citizen citizenUpdate =citizenService.getCitizenByUserName(citizen.get(""userName"").toString());citizenUpdate.setName(citizen.get(""name"").toString());citizenUpdate.setGender(Gender.valueOf(citizen.get(""gender"").toString()));if (citizen.get(EMAIL_ID_FIELD) != null&& isNotBlank(citizen.get(EMAIL_ID_FIELD).toString())&& citizen.get(EMAIL_ID_FIELD).toString().matches(EMAIL))citizenUpdate.setEmailId(citizen.get(EMAIL_ID_FIELD).toString());if (citizen.get(ALT_CONTACT_NUMBER_FIELD) != null&& isNotBlank(citizen.get(ALT_CONTACT_NUMBER_FIELD).toString()))citizenUpdate.setAltContactNumber(citizen.get(ALT_CONTACT_NUMBER_FIELD).toString());final DateTimeFormatter ft = DateTimeFormat.forPattern(""yyyy-MM-dd"");final Date dt = ft.parseDateTime(citizen.get(""dob"").toString()).toDate();citizenUpdate.setDob(dt);if (citizen.get(""pan"") != null) citizenUpdate.setPan(citizen.get(""pan"").toString());if (citizen.get(""aadhaarNumber"") != null)citizenUpdate.setAadhaarNumber(citizen.get(""aadhaarNumber"").toString());citizenService.update(citizenUpdate);return res.setDataAdapter(new UserAdapter()).success(citizen, getMessage(""msg.citizen.update.success""));} catch (final Exception e) {}}}"	2
5252	public class A {public void sendQueuedMessagesWhileOffline() {drainQueueToConnection();}}	1
5253	"public class A {public void start() throws IOException {try {try {openListeners();webServer.start();} catch (IOException ex) {throw ex;} catch (MultiException ex) {throw ex;}Handler[] handlers = webServer.getHandlers();for (int i = 0; i < handlers.length; i++) {if (handlers[i].isFailed()) {throw new IOException(""Problem in starting http server. Server handlers failed"");}}Throwable unavailableException = webAppContext.getUnavailableException();if (unavailableException != null) {webServer.stop();throw new IOException(""Unable to initialize WebAppContext"", unavailableException);}} catch (IOException e) {throw e;} catch (InterruptedException e) {throw (IOException)new InterruptedIOException(""Interrupted while starting HTTP server"").initCause(e);} catch (Exception e) {throw new IOException(""Problem starting http server"", e);}}}"	2
5254	"public class A {public void parseJobStatuses(String userName, Map<String, JobStatus> statusMap, String rawOutput) {String[] info = rawOutput.split(""\n"");for (String jobID : statusMap.keySet()) {String jobName = jobID.split("","")[1];boolean found = false;for (int i = 0; i < info.length; i++) {if (info[i].contains(jobName.substring(0, 8))) {String correctLine = info[i];String[] columns = correctLine.split("" "");List<String> columnList = new ArrayList<String>();for (String s : columns) {if (!"""".equals(s)) {columnList.add(s);}}try {statusMap.put(jobID, new JobStatus(JobUtil.getJobState(columnList.get(9))));} catch (IndexOutOfBoundsException e) {statusMap.put(jobID, new JobStatus(JobUtil.getJobState(""U"")));}found = true;break;}}if (!found)}}}"	3
5255	"public class A {List<UserRole> sessionRoles(Session session) throws SecurityException {LdapConnection ld = null;List<UserRole> userRoleList = null;try {ld = getAdminConnection();RbacSessionRolesRequest sessionRolesRequest = new RbacSessionRolesRequestImpl();sessionRolesRequest.setSessionId(session.getSessionId());sessionRolesRequest.setUserIdentity(session.getUserId());RbacSessionRolesResponse sessionRolesResponse =(RbacSessionRolesResponse) ld.extended(sessionRolesRequest);if (CollectionUtils.isNotEmpty(sessionRolesResponse.getRoles())) {userRoleList = new ArrayList<UserRole>();for (String roleNm : sessionRolesResponse.getRoles()) {userRoleList.add(new UserRole(session.getUserId(), roleNm));}}} catch (LdapException e) {String error = ""sessionRoles caught LDAPException="" + "" msg="" + e.getMessage();throw new SecurityException(GlobalErrIds.ACEL_SESSION_ROLES_ERR, error, e);} finally {closeAdminConnection(ld);}return userRoleList;}}"	1
5256	"public class A {private String writeLog() {File folder = new File(BINDING_USERDATA_PATH);if (!folder.exists()) {folder.mkdirs();}File dataFile =new File(folder, ""test-"" + model + ""-"" + LocalDateTime.now().format(DATEFORMATTER) + "".txt"");try (FileWriter writer = new FileWriter(dataFile)) {writer.write(sb.toString());return dataFile.getAbsolutePath().toString();} catch (IOException e) {}return ""Failed creating testlog file"";}}"	2
5257	public class A {private boolean handleAnonymousAddress(MessageContext messageContext, EndpointReference replyEpr) {if (version.hasAnonymousAddress(replyEpr)) {if (logger.isDebugEnabled()) {}return true;}return false;}}	1
5258	"public class A {@SuppressWarnings(""resource"")@Overridepublic void serialEvent(@Nullable SerialPortEvent event) {if (event != null && event.getEventType() == SerialPortEvent.DATA_AVAILABLE) {SerialPort serialPort = context.getSerialPort();if (serialPort == null) {return;}try {InputStream inputStream = serialPort.getInputStream();if (inputStream == null) {return;}while (inputStream.available() > 0) {int currentByte = inputStream.read();if (currentByte < 128) {readBuffer.put((byte) currentByte);if (previousByte == CR && currentByte == LF) {readBuffer.flip();parseAndQueue(readBuffer);readBuffer.clear();previousByte = -1;} else {previousByte = currentByte;}}}} catch (IOException e) {}}}}"	3
5259	"public class A {public static void main(String[] args) throws CommandLine.ConfigurationException {for (String arg : args) {}if (args.length == 0) {args = new String[] {""scenarios/berlin-v5.5-1pct/input/drt/berlin-drt-v5.5-1pct.config.xml""};}Config config = prepareConfig(args);Scenario scenario = prepareScenario(config);Controler controler = prepareControler(scenario);controler.run();}}"	1
5260	"public class A {protected String compatibilityToCamelCase(String name) {String[] parts = name.split(""-"", 0);if (parts.length > 1) {String camelCaseName = """";for (int i = 0; i < parts.length; i++) {if (i > 0) {camelCaseName += StringUtils.capitalize(parts[i]);} else {camelCaseName += parts[i];}}return camelCaseName;}return name;}}"	1
5261	"public class A {void commit() {for (String shardId : toEmitPerShard.keySet()) {if (ackedPerShard.containsKey(shardId)) {BigInteger commitSequenceNumberBound = null;if (failedPerShard.containsKey(shardId) && !failedPerShard.get(shardId).isEmpty()) {commitSequenceNumberBound = failedPerShard.get(shardId).first();}if (emittedPerShard.containsKey(shardId) && !emittedPerShard.get(shardId).isEmpty()) {BigInteger smallestEmittedSequenceNumber = emittedPerShard.get(shardId).first();if (commitSequenceNumberBound == null|| (commitSequenceNumberBound.compareTo(smallestEmittedSequenceNumber) == 1)) {commitSequenceNumberBound = smallestEmittedSequenceNumber;}}Iterator<BigInteger> ackedSequenceNumbers = ackedPerShard.get(shardId).iterator();BigInteger ackedSequenceNumberToCommit = null;while (ackedSequenceNumbers.hasNext()) {BigInteger ackedSequenceNumber = ackedSequenceNumbers.next();if (commitSequenceNumberBound == null|| (commitSequenceNumberBound.compareTo(ackedSequenceNumber) == 1)) {ackedSequenceNumberToCommit = ackedSequenceNumber;ackedSequenceNumbers.remove();} else {break;}}if (ackedSequenceNumberToCommit != null) {Map<Object, Object> state = new HashMap<>();state.put(""committedSequenceNumber"", ackedSequenceNumberToCommit.toString());zkConnection.commitState(kinesisConfig.getStreamName(), shardId, state);}}}lastCommitTime = System.currentTimeMillis();}}"	1
5262	"public class A {public int createIfMissingAuthority(Storage storage, StringBuffer tty, Record record, Instance instance)throws ExistException, UnimplementedException, UIException, JSONException,UnderlyingStorageException {int result = HttpStatus.SC_OK;String url = record.getID() + ""/"" + instance.getTitleRef();try {storage.getPathsJSON(url, new JSONObject()).toString();if (tty != null) {tty.append(""--- Instance "" + instance.getID() + "" exists.\n"");}} catch (UnderlyingStorageException e) {if (e.getStatus() == HttpStatus.SC_NOT_FOUND) {failedPosts++;if (tty != null) {tty.append(""Need to create instance "" + fInstance.getID() + '\n');}JSONObject fields =new JSONObject(""{'displayName':'""+ instance.getTitle()+ ""', 'shortIdentifier':'""+ instance.getWebURL()+ ""'}"");String base = record.getID();storage.autocreateJSON(base, fields, null);failedPosts--;if (tty != null) {tty.append(""Instance "" + instance.getID() + "" created.\n"");}} else if (e.getStatus() == HttpStatus.SC_FORBIDDEN) {result = -1;} else {throw e;}}return result;}}"	3
5263	public class A {public static ParsedField<LatLng> reproject(double lat, double lon, String datum) {Preconditions.checkArgument(lat >= -90d && lat <= 90d);Preconditions.checkArgument(lon >= -180d && lon <= 180d);Set<String> issues = new TreeSet<>();if (Strings.isNullOrEmpty(datum)) {issues.add(GEODETIC_DATUM_ASSUMED_WGS84.name());return ParsedField.success(new LatLng(lat, lon), issues);}try {CoordinateReferenceSystem crs = SpatialReferenceSystemParser.parseCRS(datum);if (crs == null) {issues.add(GEODETIC_DATUM_INVALID.name());issues.add(GEODETIC_DATUM_ASSUMED_WGS84.name());} else {MathTransform transform = CRS.findMathTransform(crs, DefaultGeographicCRS.WGS84, true);double[] srcPt;double[] dstPt = new double[3];if (CRS.getAxisOrder(crs) == CRS.AxisOrder.NORTH_EAST) {srcPt = new double[] {lat, lon, 0};} else {srcPt = new double[] {lon, lat, 0};}transform.transform(srcPt, 0, dstPt, 0, 1);double lat2 = dstPt[1];double lon2 = dstPt[0];if (Math.abs(lat - lat2) > SUSPICIOUS_SHIFT || Math.abs(lon - lon2) > SUSPICIOUS_SHIFT) {issues.add(COORDINATE_REPROJECTION_SUSPICIOUS.name());return ParsedField.fail(new LatLng(lat, lon), issues);}if (lat != lat2 || lon != lon2) {issues.add(COORDINATE_REPROJECTED.name());}return ParsedField.success(new LatLng(lat2, lon2), issues);}} catch (Exception ex) {issues.add(COORDINATE_REPROJECTION_FAILED.name());}return ParsedField.fail(new LatLng(lat, lon), issues);}}	1
5264	public class A {public Object getSubResource(FileObject resourceLocation, String segment, ResourceResolver resourceResolver)throws Exception {Class<?> subResourceClass = resourceResolver.resolve(resourceLocation, Class.class);if (subResourceClass == null) {return null;} else {return createSubResource(subResourceClass, resourceLocation, segment);}}}	1
5265	public class A {@Overridepublic void initializeForAParameter(SolutionArrays solutionArrays, int filteredBaseSize) {this.solutionArrays = solutionArrays;int[] pArray = solutionArrays.pArray;this.primeBaseSize = filteredBaseSize;this.p1Index = binarySearch.getInsertPosition(pArray, primeBaseSize, sieveArraySize);this.p2Index = binarySearch.getInsertPosition(pArray, p1Index, (sieveArraySize + 1) / 2);this.p3Index = binarySearch.getInsertPosition(pArray, p2Index, (sieveArraySize + 2) / 3);if (DEBUG)this.minSolutionCounts_m3 = new int[p3Index];for (int i = p3Index - 1; i >= pMinIndex; i--) {try {minSolutionCounts_m3[i] = sieveArraySize / pArray[i] - 3;} catch (Exception e) {throw e;}}}}	2
5266	"public class A {private void doPublish() {String topic = (String) this.properties.get(PUBLISH_TOPIC_PROP_NAME);Integer qos = (Integer) this.properties.get(PUBLISH_QOS_PROP_NAME);Boolean retain = (Boolean) this.properties.get(PUBLISH_RETAIN_PROP_NAME);String mode = (String) this.properties.get(MODE_PROP_NAME);float setPoint = 0;float tempIncr = (Float) this.properties.get(TEMP_INCREMENT_PROP_NAME);if (MODE_PROP_PROGRAM.equals(mode)) {setPoint = (Float) this.properties.get(PROGRAM_SETPOINT_NAME);} else if (MODE_PROP_MANUAL.equals(mode)) {setPoint = (Float) this.properties.get(MANUAL_SETPOINT_NAME);} else if (MODE_PROP_VACATION.equals(mode)) {setPoint = 6.0F;}if (this.temperature + tempIncr < setPoint) {this.temperature += tempIncr;} else {this.temperature -= 4 * tempIncr;}KuraPayload payload = new KuraPayload();payload.setTimestamp(new Date());payload.addMetric(""temperatureInternal"", this.temperature);payload.addMetric(""temperatureExternal"", 5.0F);payload.addMetric(""temperatureExhaust"", 30.0F);int code = this.random.nextInt();if (this.random.nextInt() % 5 == 0) {payload.addMetric(""errorCode"", code);} else {payload.addMetric(""errorCode"", 0);}try {this.cloudClient.publish(topic, payload, qos, retain);} catch (Exception e) {}}}"	2
5267	"public class A {@Overridepublic void newRevision(Object revisionEntity) {UserRevEntity rev = (UserRevEntity) revisionEntity;try {UserDetails principal =(UserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();User userByUsername = urepo.loadUserByUsername(principal.getUsername());if (userByUsername != null) {rev.setUserId(userByUsername.getId());} else {throw new IllegalStateException(""User could not be read by username so revision could not be created"");}setClientId(rev);} catch (NullPointerException ex) {throw new IllegalStateException(""The database cannot be modified if a user is not logged in."");}}}"	2
5268	public class A {public Response send() {requestBuilder.url(url);if (formParams != null) {requestBuilder.method(method, formParams.build());}try {Call call = asyncHttpClient.newCall(requestBuilder.build());okhttp3.Response response = call.execute();return new SuccessResponse(response);} catch (IOException e) {return new ExceptionResponse(e);}}}	1
5269	public class A {@Overridepublic void initialize() {thingConfig = getConfigAs(JablotronDeviceConfig.class);future =scheduler.scheduleWithFixedDelay(this::updateAlarmStatus, 1, thingConfig.getRefresh(), TimeUnit.SECONDS);updateStatus(ThingStatus.ONLINE);}}	1
5270	public class A {private void stopOnSchedule(long timeout, final AsyncResult request) {final ScheduledFuture<?> future =getSession().getScheduler().schedule(new Runnable() {@Overridepublic void run() {if (getEndpoint().getRemoteCredit() != 0) {stop(request);session.pumpToProtonTransport(request);}}},timeout,TimeUnit.MILLISECONDS);stopRequest = new ScheduledRequest(future, request);}}	2
5271	"public class A {long find(int chrPos, long start, String lineStart, long end, String lineEnd, boolean lessEq) {int posStart = pos(lineStart);int posEnd = pos(lineEnd);if (debug)if (chrPos == posStart) return found(start, lineStart, lessEq);if (posEnd == chrPos) return found(end, lineEnd, lessEq);if (chrPos < posStart) return start;if (posEnd < chrPos) return end + lineEnd.length() + 1;if (start + 1 >= end) {if (chrPos <= posStart) return found(start, lineStart, lessEq);if (chrPos < posEnd) return found(end, lineEnd, true);return found(end, lineEnd, false);}if (posStart >= posEnd)throw new RuntimeException(""This should never happen! Is the file sorted by position?"");long mid = (start + end) / 2;LineAndPos lpmid = getLine(mid);String lineMid = lpmid.line;long posMid = pos(lineMid);if (chrPos <= posMid) return find(chrPos, start, lineStart, mid, lineMid, lessEq);else return find(chrPos, mid, lineMid, end, lineEnd, lessEq);}}"	1
5272	public class A {public void complete() {if (!hasCompleted) {_activityInfo.parent.completed(null, CompensationHandler.emptySet());hasCompleted = true;} else {if (__log.isWarnEnabled()) {}}}}	1
5273	public class A {public void checkForStalledTaskLaunches() {long now = System.currentTimeMillis();taskManager.getLaunchingTasks().stream().filter(t -> {if (t.getStartedAt() < now - configuration.getReconcileLaunchAfterMillis()) {Long maybeLastReconcileTime = requestedReconciles.get(t);return maybeLastReconcileTime == null || now - maybeLastReconcileTime > 15000;} else {return false;}}).forEach(taskId -> {Optional<SingularityTask> maybeTask = taskManager.getTask(taskId);if (maybeTask.isPresent()) {mesosSchedulerClient.reconcile(Collections.singletonList(Task.newBuilder().setTaskId(TaskID.newBuilder().setValue(taskId.toString()).build()).setAgentId(AgentID.newBuilder().setValue(maybeTask.get().getAgentId().getValue()).build()).build()));} else {}});Set<SingularityTaskId> toRemove =requestedReconciles.keySet().stream().filter(t -> t.getStartedAt() < now - TimeUnit.MINUTES.toMillis(15)).collect(Collectors.toSet());toRemove.forEach(requestedReconciles::remove);}}	2
5274	public class A {private void prepareProject(RenderRequest request, User user, Project actual_project) {try {ProjectService.Iface client = thriftClients.makeProjectClient();List<ProjectLink> mappedProjectLinks = createLinkedProjects(actual_project, user);request.setAttribute(PROJECT_LIST, mappedProjectLinks);putDirectlyLinkedReleasesInRequest(request, actual_project);Set<Project> usingProjects = client.searchLinkingProjects(actual_project.getId(), user);request.setAttribute(USING_PROJECTS, usingProjects);int allUsingProjectsCount = client.getCountByProjectId(actual_project.getId());request.setAttribute(ALL_USING_PROJECTS_COUNT, allUsingProjectsCount);putReleasesAndProjectIntoRequest(request, actual_project.getId(), user);request.setAttribute(DOCUMENT_TYPE, SW360Constants.TYPE_PROJECT);setAttachmentsInRequest(request, actual_project.getAttachments());} catch (TException e) {}}}	1
5275	"public class A {@POST@Path(""/validateDataFileHashValue/{fileId}"")public Response validateDataFileHashValue(@PathParam(""fileId"") String fileId) {try {User u = findAuthenticatedUserOrDie();if (!u.isSuperuser()) {return error(Status.UNAUTHORIZED, ""must be superuser"");}} catch (WrappedResponse e1) {return error(Status.UNAUTHORIZED, ""api key required"");}DataFile fileToValidate = null;try {fileToValidate = findDataFileOrDie(fileId);} catch (WrappedResponse r) {return error(Status.BAD_REQUEST, ""Could not find file with the id: "" + fileId);}if (fileToValidate.isHarvested()) {return error(Status.BAD_REQUEST, ""File with the id: "" + fileId + "" is harvested."");}DataFile.ChecksumType cType = null;try {String checkSumTypeFromDataFile = fileToValidate.getChecksumType().toString();cType = DataFile.ChecksumType.fromString(checkSumTypeFromDataFile);} catch (IllegalArgumentException iae) {return error(Status.BAD_REQUEST, ""Unknown algorithm"");}String currentChecksum = fileToValidate.getChecksumValue();String calculatedChecksum = """";InputStream in = null;try {StorageIO<DataFile> storage = fileToValidate.getStorageIO();storage.open(DataAccessOption.READ_ACCESS);if (!fileToValidate.isTabularData()) {in = storage.getInputStream();} else {in = storage.getAuxFileAsInputStream(FileUtil.SAVED_ORIGINAL_FILENAME_EXTENSION);}if (in == null) {return error(Status.NOT_FOUND, ""Could not retrieve file with the id: "" + fileId);}calculatedChecksum = FileUtil.calculateChecksum(in, cType);} catch (Exception e) {logger.warning(""Unexpected Exception: "" + e.getMessage());return error(Status.BAD_REQUEST, ""Checksum Validation Unexpected Exception: "" + e.getMessage());} finally {IOUtils.closeQuietly(in);}if (currentChecksum.equals(calculatedChecksum)) {return ok(""Datafile validation complete for ""+ fileId+ "". The hash value is: ""+ calculatedChecksum);} else {return error(Status.EXPECTATION_FAILED,""Datafile validation failed for ""+ fileId+ "". The saved hash value is: ""+ currentChecksum+ "" while the recalculated hash value for the stored file is: ""+ calculatedChecksum);}}}"	1
5276	"public class A {public Hardening readSettings() {try {String transactionId = UUID.randomUUID().toString();Configurazione configurazione =new it.govpay.core.business.Configurazione().getConfigurazione(new BDConfigWrapper(transactionId, true));Hardening setting = configurazione.getHardening();return setting;} catch (Exception e) {throw new RuntimeException(""Errore interno, impossibile autenticare l'utenza"", e);} finally {}}}"	2
5277	public class A {@Overrideprotected void prepareGenerator() {try {GeneratorContext context = new GeneratorContext();this.constructGenerator(this.generator, context);} catch (WorldCreateException e) {}}}	1
5278	public class A {public static String getProperty(String key) {Properties props = KuranetConfig.getProperties();String value = props.getProperty(key);return value;}}	1
5279	public class A {public synchronized void restoreConfig(InputStream inStream) throws IOException {ZipInputStream zipStream = new ZipInputStream(inStream);try {synchronized (this.poolLock) {ZipEntry zipEntry = null;while ((zipEntry = zipStream.getNextEntry()) != null) {String serviceID = zipEntry.getName();serviceID = FilenameUtils.getBaseName(serviceID);AddressBucket bucket = this.addressPool.get(serviceID);if (bucket == null) {continue;}bucket.readFromZip(zipStream);zipStream.closeEntry();}}} catch (Exception e) {}}}	1
5280	public class A {@Overridepublic void setProgress(Progress progress) {this.progress = progress;if (log.isTraceEnabled()) {}}}	1
5281	public class A {private static void saveFeaturesRDD(JavaPairRDD<Integer, float[]> features,Path path,Broadcast<? extends Map<Integer, String>> bIndexToID) {features.map(keyAndVector -> {String id = bIndexToID.value().get(keyAndVector._1());float[] vector = keyAndVector._2();return TextUtils.joinJSON(Arrays.asList(id, vector));}).saveAsTextFile(path.toString(), GzipCodec.class);}}	1
5282	"public class A {private boolean addToContextHandler() {try {Object context =getClass().getClassLoader().loadClass(""org.eclipse.jetty.server.handler.ContextHandler"").getMethod(""getCurrentContext"").invoke(null);Object contextHandler = context.getClass().getMethod(""getContextHandler"").invoke(context);contextHandler.getClass().getMethod(""addManaged"", LifeCycle.class).invoke(contextHandler, this);return true;} catch (Throwable throwable) {if (LOG.isDebugEnabled())return false;}}}"	1
5283	"public class A {@Test(dataProvider = ""expressions"")public void baseObject(String expressionText, Object[] expectedChunks) {assert expectedChunks != null;assert expectedChunks.length % 2 == 0;JRDesignExpression expression = new JRDesignExpression(expressionText);assert expressionText.equals(expression.getText());JRExpressionChunk[] chunks = expression.getChunks();if (log.isDebugEnabled()) {}assert chunks != null;assert 2 * chunks.length == expectedChunks.length;for (int i = 0; i < chunks.length; i++) {if (log.isDebugEnabled()) {}assert chunks[i].getType() == (Byte) expectedChunks[2 * i];assert chunks[i].getText().equals(expectedChunks[2 * i + 1]);}}}"	2
5284	"public class A {public String getText(String key) {String message;try {message = getBundle().getString(key);} catch (java.util.MissingResourceException mre) {return ""???"" + key + ""???"";}return message;}}"	1
5285	public class A {@Overridepublic void run() {while (running) {Packet packet;Packet.Type cmd;try {packet = cipherPair.receiveEncoded(conn.in);cmd = Packet.Type.parse(packet.cmd);if (cmd == null) {continue;}} catch (IOException | GeneralSecurityException ex) {if (running && !closing) {reconnect();}break;}if (!running) break;switch (cmd) {case Ping:if (scheduledReconnect != null) scheduledReconnect.cancel(true);scheduledReconnect =scheduler.schedule(() -> {reconnect();},2 * 60 + configuration().connectionTimeout,TimeUnit.SECONDS);TimeProvider.updateWithPing(packet.payload);try {send(Packet.Type.Pong, packet.payload);} catch (IOException ex) {}break;case PongAck:break;case CountryCode:countryCode = new String(packet.payload);break;case LicenseVersion:ByteBuffer licenseVersion = ByteBuffer.wrap(packet.payload);short id = licenseVersion.getShort();if (id != 0) {byte[] buffer = new byte[licenseVersion.get()];licenseVersion.get(buffer);} else {}break;case Unknown_0x10:break;case MercurySub:case MercuryUnsub:case MercuryEvent:case MercuryReq:mercury().dispatch(packet);break;case AesKey:case AesKeyError:audioKey().dispatch(packet);break;case ChannelError:case StreamChunkRes:channel().dispatch(packet);break;case ProductInfo:try {parseProductInfo(new ByteArrayInputStream(packet.payload));} catch (IOException | ParserConfigurationException | SAXException ex) {}break;default:break;}}}}	12
5286	"public class A {private OpSequence<ReadyGraphStatementTemplate> initSequencer() {SequencerType sequencerType =SequencerType.valueOf(getParams().getOptionalString(""seq"").orElse(""bucket""));SequencePlanner<ReadyGraphStatementTemplate> planner = new SequencePlanner<>(sequencerType);String yaml_loc =activityDef.getParams().getOptionalString(""yaml"", ""workload"").orElse(""default"");StrInterpolator interp = new StrInterpolator(activityDef);StmtsDocList unfiltered = StatementsLoader.loadPath(logger, yaml_loc, interp, ""activities"");String tagfilter = activityDef.getParams().getOptionalString(""tags"").orElse("""");TagFilter tagFilter = new TagFilter(tagfilter);unfiltered.getStmts().stream().map(tagFilter::matchesTaggedResult)stmts = unfiltered.getStmts(tagfilter);if (stmts.size() == 0) {throw new RuntimeException(""There were no unfiltered statements found for this activity."");}for (OpTemplate stmtDef : stmts) {ParsedStmt parsed = stmtDef.getParsed().orError();ReadyGraphStatementTemplate readyGraphStatement;long ratio = Long.valueOf(stmtDef.getParams().getOrDefault(""ratio"", ""1"").toString());Optional<Integer> repeat =Optional.ofNullable(stmtDef.getParams().get(""repeat"")).map(String::valueOf).map(Integer::valueOf);if (repeat.isPresent()) {readyGraphStatement =new ReadyGraphStatementTemplate(stmtDef.getName(),GraphStmtParser.getCookedRepeatedStatement(stmtDef.getStmt(), repeat.get()),stmtDef.getParsed().getBindPoints(),GraphStmtParser.getFields(stmtDef.getStmt(), stmtDef.getBindings()).toArray(new String[0]),repeat.get());} else {readyGraphStatement =new ReadyGraphStatementTemplate(stmtDef.getName(),GraphStmtParser.getCookedStatement(stmtDef.getStmt()),stmtDef.getParsed().getBindPoints(),GraphStmtParser.getFields(stmtDef.getStmt(), stmtDef.getBindings()).toArray(new String[0]));}planner.addOp(readyGraphStatement, ratio);}if (getActivityDef().getCycleCount() == 0) {getActivityDef().setCycles(String.valueOf(stmts.size()));}OpSequence<ReadyGraphStatementTemplate> sequencer = planner.resolve();return sequencer;}}"	1
5287	"public class A {@Overridepublic void run() {EchoProxy echoProxy;try {echoProxy = createEchoProxy();} catch (Exception e) {exitCode = 1;return;}if (invocationParameters.getCommunicationMode() == COMMUNICATIONMODE.SYNC) {switch (invocationParameters.getTestCase()) {case SEND_STRING:performSyncSendStringTest(echoProxy);break;case SEND_STRUCT:performSyncSendStructTest(echoProxy);break;case SEND_BYTEARRAY:performSyncSendByteArrayTest(echoProxy);break;default:logger.error(""Unknown test type used"");exitCode = 1;break;}} else if (invocationParameters.getCommunicationMode() == COMMUNICATIONMODE.ASYNC) {switch (invocationParameters.getTestCase()) {case SEND_STRING:performAsyncSendStringTest(echoProxy);break;case SEND_STRUCT:performAsyncSendStructTest(echoProxy);break;case SEND_BYTEARRAY:performAsyncSendByteArrayTest(echoProxy);break;default:exitCode = 1;break;}} else {exitCode = 1;}}}"	3
5288	"public class A {public static ConstraintChecker create(Configuration conf) {Multimap<Text, VisibilityConstraint> constraints = null;String[] initializerClasses = conf.getStrings(INITIALIZERS);if (initializerClasses != null) {for (String initializerClass : initializerClasses) {if (constraints == null) {constraints = HashMultimap.create();}try {ConstraintInitializer initializer =Class.forName(initializerClass).asSubclass(ConstraintInitializer.class).newInstance();initializer.addConstraints(conf, constraints);} catch (Exception e) {throw new RuntimeException(""Could invoke ConstraintInitializer: "" + initializerClass, e);}}}return new ConstraintChecker(constraints);}}"	1
5289	public class A {public static com.liferay.social.kernel.model.SocialActivitySoap[] getActivities(long mirrorActivityId, String className, long classPK, int start, int end)throws RemoteException {try {java.util.List<com.liferay.social.kernel.model.SocialActivity> returnValue =SocialActivityServiceUtil.getActivities(mirrorActivityId, className, classPK, start, end);return com.liferay.social.kernel.model.SocialActivitySoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
5290	"public class A {public void runAndVerifyCount(int windowSize, int slideSize, TestableTopology testable, TopoWrap topo)throws IOException, TException, MalformedURLException {topo.submitSuccessfully();final int minBoltEmits = 5;final int minSpoutEmits = Math.max(windowSize, minBoltEmits * slideSize);String boltName = testable.getBoltName();String spoutName = testable.getSpoutName();topo.assertProgress(minSpoutEmits, testable.getSpoutExecutors(), spoutName, 180);topo.assertProgress(minBoltEmits, testable.getBoltExecutors(), boltName, 180);final List<DecoratedLogLine> allDecoratedBoltLogs = topo.getDecoratedLogLines(boltName);final List<DecoratedLogLine> allDecoratedSpoutLogs = topo.getDecoratedLogLines(spoutName);Assert.assertTrue(allDecoratedBoltLogs.size() >= minBoltEmits,""Expecting min ""+ minBoltEmits+ "" bolt emits, found: ""+ allDecoratedBoltLogs.size()+ "" \n\t""+ allDecoratedBoltLogs);final int numberOfWindows = allDecoratedBoltLogs.size();for (int i = 0; i < numberOfWindows; ++i) {final int toIndex = (i + 1) * slideSize;final int fromIndex = toIndex - windowSize;final int positiveFromIndex = fromIndex > 0 ? fromIndex : 0;final List<DecoratedLogLine> expectedWindowContents =allDecoratedSpoutLogs.subList(positiveFromIndex, toIndex);final String actualString = allDecoratedBoltLogs.get(i).toString();for (DecoratedLogLine windowData : expectedWindowContents) {final String logStr = windowData.getData();Assertions.assertTrue(actualString.contains(logStr),() ->String.format(""Missing: '%s' \nActual: '%s' \nCalculated window: '%s'"",logStr, actualString, expectedWindowContents));}}}}"	1
5291	public class A {@Overridepublic void run() {try {runInternal();} catch (TerminateSubsequentExecutionsException e) {throw e;} catch (Throwable t) {}}}	2
5292	public class A {private Document downloadMetadata(String metadataUrl) {Client client = Client.create();WebResource resource = client.resource(metadataUrl);ClientResponse response = resource.accept(MediaType.APPLICATION_XML).get(ClientResponse.class);Document document = response.getEntity(Document.class);return document;}}	1
5293	public class A {@Overrideprotected Map<Integer, Long> getPartitionRecordLag() {Map<Integer, Long> highestCurrentOffsets = getHighestCurrentOffsets();if (latestSequenceFromStream == null) {return null;}if (!latestSequenceFromStream.keySet().equals(highestCurrentOffsets.keySet())) {}return getRecordLagPerPartition(highestCurrentOffsets);}}	1
5294	"public class A {private Object compensateSubStateMachine(ProcessContext context,ServiceTaskState state,Object input,StateInstance stateInstance,StateMachineEngine engine) {String subStateMachineParentId =(String)context.getVariable(state.getName() + DomainConstants.VAR_NAME_SUB_MACHINE_PARENT_ID);if (StringUtils.isEmpty(subStateMachineParentId)) {throw new EngineExecutionException(""sub statemachine parentId is required"", FrameworkErrorCode.ObjectNotExists);}StateMachineConfig stateMachineConfig =(StateMachineConfig) context.getVariable(DomainConstants.VAR_NAME_STATEMACHINE_CONFIG);List<StateMachineInstance> subInst =stateMachineConfig.getStateLogStore().queryStateMachineInstanceByParentId(subStateMachineParentId);if (CollectionUtils.isEmpty(subInst)) {throw new EngineExecutionException(""cannot find sub statemachine instance by parentId:"" + subStateMachineParentId,FrameworkErrorCode.ObjectNotExists);}String subStateMachineInstId = subInst.get(0).getId();if (LOGGER.isDebugEnabled()) {}Map<String, Object> startParams = new HashMap<>(0);if (input instanceof List) {List<Object> listInputParams = (List<Object>) input;if (listInputParams.size() > 0) {startParams = (Map<String, Object>) listInputParams.get(0);}} else if (input instanceof Map) {startParams = (Map<String, Object>) input;}StateMachineInstance compensateInst = engine.compensate(subStateMachineInstId, startParams);stateInstance.setStatus(compensateInst.getCompensationStatus());if (LOGGER.isDebugEnabled()) {}return compensateInst.getEndParams();}}"	2
5295	public class A {public synchronized void changeState(StartupState newState) {if (_currentSpaceState == newState) return;if (_logger.isDebugEnabled()) {}try {saveState(newState);} catch (IOException e) {if (_logger.isWarnEnabled()) {}}_currentSpaceState = newState;}}	2
5296	"public class A {@Overrideprotected void literal(String value) {if (markedBnfRule) {output.append(value);return;}if (value.startsWith(""!! "")) {output.append(value);return;}if (value.equals(""//"")) {output.append(""\\u002F\\u002F"");return;}if (bnfSymbolFromRuleName != null) {if (value.equals(bnfSymbolFromRuleName)) {output.append(value);return;} else {}}String sep = """";if (BnfSymbols.anyBnfSymbols(value)) {Interleaver interleaver = BnfSymbols.getInterleave(value);while (interleaver.hasNext()) {String text = interleaver.nextText();if (text.length() > 0) {output.append(sep).append(text);sep = "" "";}BnfSymbols symbol = interleaver.nextSymbol();bnfSymbolsNeedingRules.add(symbol);output.append(sep).append(""<"").append(symbol.getBnfName()).append("">"");sep = "" "";}String text = interleaver.nextText();if (text.length() > 0) {output.append(sep).append(text);}} else {char[] chars = value.toCharArray();for (char cp : chars) {if (' ' < cp && cp <= '~') {output.appendCodePoint(cp);} else output.format("" \\u%04X "", (int) cp);}}}}"	2
5297	public class A {public void register(CommandHandler commandHandler) {if (commandHandler instanceof Types) {Types types = (Types) commandHandler;for (int type : types.types()) {register(type, commandHandler);}} else if (commandHandler instanceof Type) {register(((Type) commandHandler).type(), commandHandler);} else {}}}	1
5298	"public class A {private ByteBuf writePackets(Packet[] packets) {PacketBuffer buffer = new PacketBuffer(packets.length * 5 + (packets.length * 32));int currentPosition;for (Packet packet : packets) {try {int lengthPosition = buffer.getWritePosition();buffer.writeBytes(STATIC_VARINT);currentPosition = buffer.getWritePosition();packet.serializeHeader(buffer);packet.serialize(buffer, this.connection.protocolID());int writtenBytes = buffer.getWritePosition() - currentPosition;writeVarInt(lengthPosition, writtenBytes, buffer.getBuffer());} catch (Exception e) {ReportUploader.create().tag(""network.serialize"").exception(e).upload();}}return buffer.getBuffer();}}"	1
5299	public class A {private void migrateIndexSet(IndexSetConfig indexSetConfig, String templateName) {final String analyzer = elasticsearchConfiguration.getAnalyzer();final IndexSetConfig updatedConfig =indexSetConfig.toBuilder().indexAnalyzer(analyzer).indexTemplateName(templateName).indexOptimizationMaxNumSegments(elasticsearchConfiguration.getIndexOptimizationMaxNumSegments()).indexOptimizationDisabled(elasticsearchConfiguration.isDisableIndexOptimization()).build();final IndexSetConfig savedConfig = indexSetService.save(updatedConfig);}}	1
5300	"public class A {public byte[] decrypt(byte[] ciphertext, String algorithm, String javaSecurityAPIProvider)throws CryptoException {try {Cipher cipher;if (StringUtils.isBlank(javaSecurityAPIProvider)) {cipher = Cipher.getInstance(algorithm);} else {cipher = Cipher.getInstance(algorithm, javaSecurityAPIProvider);}cipher.init(Cipher.DECRYPT_MODE, getSecretKey(algorithm));return cipher.doFinal(ciphertext);} catch (InvalidKeyException| NoSuchPaddingException| BadPaddingException| NoSuchProviderException| IllegalBlockSizeException| NoSuchAlgorithmException e) {String errorMessage =String.format(""An error occurred while decrypting using the algorithm : '%s'"", algorithm);if (log.isDebugEnabled()) {}throw new CryptoException(errorMessage, e);}}}"	1
5301	"public class A {@Testpublic void testEventAssignmentWithParentDimension() {try {SBMLDocument doc = new SBMLDocument(3, 1);Model model = doc.createModel();Parameter n = new Parameter(""n"");model.addParameter(n);n.setValue(3);Parameter X = new Parameter(""X"");X.setValue(1);model.addParameter(X);ArraysSBasePlugin arraysSBasePluginX = new ArraysSBasePlugin(X);X.addExtension(ArraysConstants.shortLabel, arraysSBasePluginX);Dimension dimX = arraysSBasePluginX.createDimension(""i"");dimX.setSize(n.getId());dimX.setArrayDimension(0);Event e = model.createEvent();e.setId(""event"");Delay delay = e.createDelay();delay.setMath(ASTNode.parseFormula(""{1,2,3}[i]""));e.setDelay(delay);Trigger trigger = e.createTrigger();trigger.setMath(ASTNode.parseFormula(""{true, true, true}[i]""));ArraysSBasePlugin eventPlugin = new ArraysSBasePlugin(e);e.addExtension(ArraysConstants.shortLabel, eventPlugin);Dimension dim = eventPlugin.createDimension(""i"");dim.setSize(n.getId());dim.setArrayDimension(0);EventAssignment assign = e.createEventAssignment();assign.setMath(ASTNode.parseFormula(""{1, 10, 100}[i]""));assign.setVariable(""X"");ArraysSBasePlugin eventAssignPlugin = new ArraysSBasePlugin(assign);assign.addExtension(ArraysConstants.shortLabel, eventAssignPlugin);Index ind = eventAssignPlugin.createIndex();ind.setReferencedAttribute(""variable"");ind.setArrayDimension(0);ind.setMath(ASTNode.parseFormula(""i""));String docStr = new SBMLWriter().writeSBMLToString(doc);if (logger.isDebugEnabled()) {System.out.println(""\n-------------------------------------------"");}SBMLDocument flattened = ArraysFlattening.convert(doc);docStr = new SBMLWriter().writeSBMLToString(flattened);if (logger.isDebugEnabled()) {System.out.println(""\n-------------------------------------------"");}assertTrue(flattened.getModel().getEventCount() == 3);assertTrue(flattened.getModel().getEvent(0).getEventAssignmentCount() == 1);} catch (SBMLException e) {e.printStackTrace();} catch (XMLStreamException e) {e.printStackTrace();} catch (ParseException e) {e.printStackTrace();}}}"	2
5302	public class A {private void setProfileSecurity(ZigBeeNode node) {if (!cbkeProvider.isAuthorised(node.getIeeeAddress())) {return;}for (ZigBeeEndpoint endpoint : node.getEndpoints()) {if (endpoint.getProfileId() != ZigBeeProfileType.ZIGBEE_SMART_ENERGY.getKey()) {continue;}for (ZclClusterType clusterType : secureClusters) {ZclCluster cluster = endpoint.getInputCluster(clusterType.getId());if (cluster == null) {continue;}cluster.setApsSecurityRequired(true);}for (ZclClusterType clusterType : secureClusters) {ZclCluster cluster = endpoint.getOutputCluster(clusterType.getId());if (cluster == null) {continue;}cluster.setApsSecurityRequired(true);}}}}	6
5303	"public class A {protected static void ensureRowDeletingIteratorIsAttached(Connector connector, String tableName) {try {synchronized (addIteratorLock) {IteratorSetting is =new IteratorSetting(ROW_DELETING_ITERATOR_PRIORITY,ROW_DELETING_ITERATOR_NAME,RowDeletingIterator.class);if (!connector.tableOperations().listIterators(tableName).containsKey(ROW_DELETING_ITERATOR_NAME)) {try {connector.tableOperations().attachIterator(tableName, is);} catch (Exception ex) {final int SLEEP_TIME = 5000;Thread.sleep(SLEEP_TIME);if (!connector.tableOperations().listIterators(tableName).containsKey(ROW_DELETING_ITERATOR_NAME)) {connector.tableOperations().attachIterator(tableName, is);}}}}} catch (Exception e) {throw new VertexiumException(""Could not attach RowDeletingIterator"", e);}}}"	1
5304	"public class A {private void addMultifactorArgumentExtractorConfiguration() {final List<ArgumentExtractor> list =this.flowBuilderServices.getApplicationContext().getBean(""argumentExtractors"", List.class);list.add(0, mfaRequestsCollectingArgumentExtractor);}}"	1
5305	public class A {private void installRequestHandlers() {if (!membershipLocator.isHandled(SharedConfigurationStatusRequest.class)) {membershipLocator.addHandler(SharedConfigurationStatusRequest.class, new SharedConfigurationStatusRequestHandler());}if (!membershipLocator.isHandled(ClusterManagementServiceInfoRequest.class)) {membershipLocator.addHandler(ClusterManagementServiceInfoRequest.class,new ClusterManagementServiceInfoRequestHandler());}}}	2
5306	"public class A {@RetryableTestvoid events() throws Exception {final List<Event> events =graphql.events(new EventsQuery().start(startTime).end(now()).uuid(""abcde""));load(""expected/event/events.yml"").as(EventsMatcher.class).verifyLoosely(events);}}"	1
5307	"public class A {public void setCancelURL(String cancelURL) {if (this.cancelURL != null) {return;}String cURL = replaceParameters(cancelURL);if (!cURL.contains(""{"")) {this.cancelURL = cURL;}}}"	1
5308	public class A {public void close() {PriorityQueue<SortedResource> queue = new PriorityQueue<SortedResource>(resources.values());SortedResource resource = queue.poll();while (resource != null) {try {resource.close();} catch (RuntimeException exception) {}resource = queue.poll();}resources.clear();}}	2
5309	"public class A {@Override@PUT@Path(""/state"")@RestQuery(name = ""setstate"",description =""Set the termination state. The only permissable values are 'none', 'wait' or 'ready'"",returnDescription = ""Whether the termination state was set successfully"",restParameters = {@RestParameter(name = ""state"",type = Type.STRING,defaultValue = ""wait"",description = ""The termination state, the only valid value is 'wait'"",isRequired = true)},responses = {@RestResponse(responseCode = SC_NO_CONTENT,description = ""The node is preparing to terminate""),@RestResponse(responseCode = SC_BAD_REQUEST, description = ""The state was not valid""),@RestResponse(responseCode = SC_SERVICE_UNAVAILABLE,description = ""The Termination State Service is disabled or unavailable""),})public Response setState(@FormParam(""state"") String state) {if (service != null) {TerminationStateService.TerminationState tState;switch (state) {case ""none"":tState = TerminationStateService.TerminationState.NONE;break;case ""wait"":tState = TerminationStateService.TerminationState.WAIT;break;case ""ready"":tState = TerminationStateService.TerminationState.READY;break;default:return Response.status(Response.Status.BAD_REQUEST).build();}service.setState(tState);return Response.noContent().build();}return Response.status(Response.Status.SERVICE_UNAVAILABLE).build();}}"	2
5310	"public class A {@Overrideprotected void doGet(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException {String redirectURI;String accountsetupbutton = request.getParameter(ACCOUNT_SETUP_BUTTON);if (accountsetupbutton.equals(SETUP_SKIP_BUTTON)|| accountSetupService.mustSkipAccountSetup()) {if (LOG.isWarnEnabled()) {}accountSetupService.setSkipSetup(true);redirectURI = ""/"" + PortalContainer.getCurrentPortalContainerName();} else {String userNameAccount = request.getParameter(USER_NAME_ACCOUNT);String firstNameAccount = request.getParameter(FIRST_NAME_ACCOUNT);String lastNameAccount = request.getParameter(LAST_NAME_ACCOUNT);String emailAccount = request.getParameter(EMAIL_ACCOUNT);String userPasswordAccount = request.getParameter(USER_PASSWORD_ACCOUNT);String adminPassword = request.getParameter(ADMIN_PASSWORD);accountSetupService.createAccount(userNameAccount,firstNameAccount,lastNameAccount,emailAccount,userPasswordAccount,adminPassword);redirectURI =""/""+ PortalContainer.getCurrentPortalContainerName()+ ""/login?""+ ""username=""+ URLEncoder.encode(userNameAccount, ""UTF-8"")+ ""&password=""+ userPasswordAccount+ ""&initialURI=""+ INTRANET_HOME;}response.setCharacterEncoding(""UTF-8"");response.sendRedirect(redirectURI);}}"	1
5311	public class A {public TransformerFactory createTransformerFactory() {TransformerFactory factory;TransformerFactoryConfigurationError cause;try {factory = TransformerFactory.newInstance();} catch (TransformerFactoryConfigurationError e) {cause = e;try {factory = TransformerFactory.newInstance(JDK_FALLBACK_TRANSFORMER_FACTORY, null);} catch (Exception t) {throw cause;}}try {factory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);} catch (TransformerConfigurationException e) {}factory.setErrorListener(new XmlErrorListener());configureSaxonTransformerFactory(factory);return factory;}}	3
5312	"public class A {@PreAuthorize(""hasPermission(#id, '""+ AclClassName.Values.LAYOUT+ ""', '""+ PermissionName.Values.LAYOUT_VIEW+ ""')"")public LayoutDto findLayout(final Long id) {final Layout layout = layoutService.find(id);return layoutToLayoutDtoConverter.convert(layout);}}"	1
5313	"public class A {public void applyOperationOnRecordsAsync(String keySpace,String table,Map<String, Object> filters,List<String> fields,FutureCallback<ResultSet> callback,RequestContext context) {long startTime = System.currentTimeMillis();Session session = connectionManager.getSession(keySpace);Select select = null;try {if (CollectionUtils.isNotEmpty(fields)) {select = QueryBuilder.select((String[]) fields.toArray()).from(keySpace, table);} else {}if (MapUtils.isNotEmpty(filters)) {Select.Where where = select.where();for (Map.Entry<String, Object> filter : filters.entrySet()) {Object value = filter.getValue();if (value instanceof List) {where = where.and(QueryBuilder.in(filter.getKey(), ((List) filter.getValue())));} else {where = where.and(QueryBuilder.eq(filter.getKey(), filter.getValue()));}}}ResultSetFuture future = session.executeAsync(select);Futures.addCallback(future, callback, Executors.newFixedThreadPool(1));} catch (Exception e) {throw new ProjectCommonException(ResponseCode.SERVER_ERROR.getErrorCode(),ResponseCode.SERVER_ERROR.getErrorMessage(),ResponseCode.SERVER_ERROR.getResponseCode());} finally {if (null != select) {logQueryElapseTime(""applyOperationOnRecordsAsync"", startTime, select.getQueryString(), context);}}}}"	2
5314	"public class A {@Overridepublic JournalArticle findByG_C_DDMSK(long groupId, long classNameId, String DDMStructureKey)throws NoSuchArticleException {JournalArticle journalArticle = fetchByG_C_DDMSK(groupId, classNameId, DDMStructureKey);if (journalArticle == null) {StringBundler sb = new StringBundler(8);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""groupId="");sb.append(groupId);sb.append("", classNameId="");sb.append(classNameId);sb.append("", DDMStructureKey="");sb.append(DDMStructureKey);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchArticleException(sb.toString());}return journalArticle;}}"	1
5315	"public class A {private ClusterAndWaitTime waitOnMetadata(String topic, Integer partition, long nowMs, long maxWaitMs) throws InterruptedException {Cluster cluster = metadata.fetch();if (cluster.invalidTopics().contains(topic)) throw new InvalidTopicException(topic);metadata.add(topic, nowMs);Integer partitionsCount = cluster.partitionCountForTopic(topic);if (partitionsCount != null && (partition == null || partition < partitionsCount))return new ClusterAndWaitTime(cluster, 0);long remainingWaitMs = maxWaitMs;long elapsed = 0;do {if (partition != null) {} else {}metadata.add(topic, nowMs + elapsed);int version = metadata.requestUpdateForTopic(topic);sender.wakeup();try {metadata.awaitUpdate(version, remainingWaitMs);} catch (TimeoutException ex) {throw new TimeoutException(String.format(""Topic %s not present in metadata after %d ms."", topic, maxWaitMs));}cluster = metadata.fetch();elapsed = time.milliseconds() - nowMs;if (elapsed >= maxWaitMs) {throw new TimeoutException(partitionsCount == null? String.format(""Topic %s not present in metadata after %d ms."", topic, maxWaitMs): String.format(""Partition %d of topic %s with partition count %d is not present in metadata""+ "" after %d ms."",partition, topic, partitionsCount, maxWaitMs));}metadata.maybeThrowExceptionForTopic(topic);remainingWaitMs = maxWaitMs - elapsed;partitionsCount = cluster.partitionCountForTopic(topic);} while (partitionsCount == null || (partition != null && partition >= partitionsCount));return new ClusterAndWaitTime(cluster, elapsed);}}"	2
5316	public class A {private void backoff(final Throwable ex) throws InterruptedException {long backoffMillis =backoff.calculateFullJitterBackoff(configuration.getSubscribeToShardBaseBackoffMillis(),configuration.getSubscribeToShardMaxBackoffMillis(),configuration.getSubscribeToShardExpConstant(),attempt);backoff.sleep(backoffMillis);}}	1
5317	"public class A {@Overridepublic void onMessage(byte[] buffer, int offset, int size) {if (ignore) {return;}Tuple request = Tuple.getTuple(buffer, offset, size);switch (request.getType()) {case PUBLISHER_REQUEST:unregistered(key);PublishRequestTuple publisherRequest = (PublishRequestTuple) request;DataList dl = handlePublisherRequest(publisherRequest, this);dl.setAutoFlushExecutor(serverHelperExecutor);Publisher publisher;if (publisherRequest.getVersion().equals(Tuple.FAST_VERSION)) {publisher =new Publisher(dl, (long) request.getBaseSeconds() << 32 | request.getWindowId()) {@Overridepublic int readSize() {if (writeOffset - readOffset < 2) {return -1;}short s = buffer[readOffset++];return s | (buffer[readOffset++] << 8);}};} else {publisher =new Publisher(dl, (long) request.getBaseSeconds() << 32 | request.getWindowId());}key.attach(publisher);key.interestOps(SelectionKey.OP_READ);publisher.registered(key);int len = writeOffset - readOffset - size;if (len > 0) {publisher.transferBuffer(this.buffer, readOffset + size, len);}ignore = true;break;case SUBSCRIBER_REQUEST:unregistered(key.interestOps(0));ignore = true;handleSubscriberRequest((SubscribeRequestTuple) request, key);break;case PURGE_REQUEST:try {handlePurgeRequest((PurgeRequestTuple) request, this);} catch (IOException io) {throw new RuntimeException(io);}break;case RESET_REQUEST:try {handleResetRequest((ResetRequestTuple) request, this);} catch (IOException io) {throw new RuntimeException(io);}break;default:throw new RuntimeException(""unexpected message: "" + request.toString());}}}"	4
5318	"public class A {@Overridepublic void safeTransitionInto(RunState state, EventRouter eventRouter) {switch (state.state()) {case SUBMITTING:final var runSpec = createRunSpec(state);final String runnerId;try {runnerId = dockerRunner.start(state, runSpec);} catch (Throwable e) {try {final var msg = ""Failed the docker starting procedure for "" + state.workflowInstance();if (isUserError(e)) {} else {}eventRouter.receive(Event.runError(state.workflowInstance(), e.getMessage()), state.counter());} catch (IsClosedException isClosedException) {}return;}final var submitted =Event.submitted(state.workflowInstance(), runSpec.executionId(), runnerId);try {eventRouter.receive(submitted, state.counter());} catch (IsClosedException isClosedException) {}break;case SUBMITTED:case RUNNING:dockerRunner.poll(state);break;default:}}}"	5
5319	"public class A {@Overridepublic Optional<ScriptVersion> get(ScriptVersionKey scriptVersionKey) {String queryScriptVersion =""select SCRIPT_ID, SCRIPT_VRS_NB, SCRIPT_VRS_DSC from ""+ getMetadataRepository().getTableNameByLabel(""ScriptVersions"")+ "" where SCRIPT_ID = ""+ SQLTools.getStringForSQL(scriptVersionKey.getScriptKey().getScriptId())+ "" and SCRIPT_VRS_NB = ""+ SQLTools.getStringForSQL(scriptVersionKey.getScriptKey().getScriptVersion());CachedRowSet crsScriptVersion =getMetadataRepository().executeQuery(queryScriptVersion, ""reader"");try {if (crsScriptVersion.size() == 0) {return Optional.empty();} else if (crsScriptVersion.size() > 1) {}crsScriptVersion.next();ScriptVersion scriptVersion =new ScriptVersion(scriptVersionKey, crsScriptVersion.getString(""SCRIPT_VRS_DSC""));crsScriptVersion.close();return Optional.of(scriptVersion);} catch (Exception e) {StringWriter StackTrace = new StringWriter();e.printStackTrace(new PrintWriter(StackTrace));return Optional.empty();}}}"	1
5320	public class A {private String getZkRealm(String path) {if (_routingDataUpdateOnCacheMissEnabled) {try {return updateRoutingDataOnCacheMiss(path);} catch (InvalidRoutingDataException e) {throw new MultiZkException(e);}}return _metadataStoreRoutingData.getMetadataStoreRealm(path);}}	1
5321	public class A {@Overridepublic void cleanupCheckpoint() throws IOException {FileUtils.deleteDirectory(checkpointLocation.toFile());}}	1
5322	public class A {@Overridepublic void onConnectionRecovered(Provider provider) throws Exception {setMessageFactory(provider.getMessageFactory());connectionInfo.setConnectedURI(provider.getRemoteURI());for (JmsConnectionConsumer connectionConsumer : connectionConsumers.values()) {JmsConsumerInfo consumerInfo = connectionConsumer.getConsumerInfo();if (!consumerInfo.isClosed()) {ProviderFuture request = provider.newProviderFuture();provider.start(consumerInfo, request);request.sync();}}for (JmsSession session : sessions.values()) {session.onConnectionRecovered(provider);}}}	1
5323	"public class A {void loginFailedCounterCheck() {if (loginFailedCounter > 10) {dumpCookies("".xiaomi.com"", true);dumpCookies("".mi.com"", true);serviceToken = """";loginFailedCounter = 0;}}}"	1
5324	public class A {private void recreateVersionDirectory(String instanceHome, String versionHome) {FolderTools.createFolder(instanceHome);FolderTools.createFolder(versionHome);}}	1
5325	public class A {private static void printHandledStreamsOverview(final List<String> streams, final List<WebSocketClientHandler> clientHandlers) {final Set<String> successfullyHandledStreams =clientHandlers.stream().map(WebSocketClientHandler::getUri).collect(Collectors.toSet());final Set<String> unsuccessfullyHandledStreams =Sets.difference(new HashSet<>(streams), successfullyHandledStreams);if (!successfullyHandledStreams.isEmpty()) {}if (!unsuccessfullyHandledStreams.isEmpty()) {}}}	2
5326	public class A {private void sendCommand(CommandMessage message) throws IOException {byte[] commandData = message.getBytes();if (logger.isDebugEnabled()) {}try {write(commandData);} catch (IOException ioex) {throw ioex;}try {Thread.sleep(500);} catch (InterruptedException e) {Thread.currentThread().interrupt();}}}	3
5327	public class A {@Overridepublic void readList(String testName) throws Exception {setupReadList();AbstractCommonList list = null;TransportClient client = new TransportClient();Response res = client.readList();assertStatusCode(res, testName);try {int statusCode = res.getStatus();if (logger.isDebugEnabled()) {}Assert.assertTrue(testRequestType.isValidStatusCode(statusCode),invalidStatusCodeMessage(testRequestType, statusCode));Assert.assertEquals(statusCode, testExpectedStatusCode);list = res.readEntity(getCommonListType());} finally {if (res != null) {res.close();}}boolean iterateThroughList = true;if (iterateThroughList && logger.isDebugEnabled()) {AbstractCommonListUtils.ListItemsInAbstractCommonList(list, logger, testName);}}}	1
5328	public class A {public static <IW extends ItemWrapper, PV extends PrismValue, VW extends PrismValueWrapper>VW createNewValueWrapper(IW itemWrapper, PV newValue, ValueStatus status, ModelServiceLocator modelServiceLocator)throws SchemaException {Task task = modelServiceLocator.createSimpleTask(OPERATION_CREATE_NEW_VALUE);OperationResult result = new OperationResult(OPERATION_CREATE_NEW_VALUE);WrapperContext context = new WrapperContext(task, result);context.setObjectStatus(itemWrapper.findObjectStatus());context.setShowEmpty(true);context.setCreateIfEmpty(true);VW newValueWrapper =modelServiceLocator.createValueWrapper(itemWrapper, newValue, status, context);result.recordSuccess();return newValueWrapper;}}	1
5329	"public class A {public SecretKey computeDerivedKey(SecretKey keyDerivationKey, int keySize, String purpose)throws NoSuchAlgorithmException, InvalidKeyException, EncryptionException {if (keyDerivationKey == null) {throw new IllegalArgumentException(""Key derivation key cannot be null."");}if (keySize < 56) {throw new IllegalArgumentException(""Key has size of "" + keySize + "", which is less than minimum of 56-bits."");}if ((keySize % 8) != 0) {throw new IllegalArgumentException(""Key size ("" + keySize + "") must be a even multiple of 8-bits."");}if (purpose == null || """".equals(purpose)) {throw new IllegalArgumentException(""Purpose may not be null or empty."");}int providedKeyLen = 8 * keyDerivationKey.getEncoded().length;if (providedKeyLen < keySize) {throw new EncryptionException(""KeyDerivationFunction.computeDerivedKey() not intended for key stretching: ""+ ""provided key too short (""+ providedKeyLen+ "" bits) to provide ""+ keySize+ "" bits."",""Key stretching not supported: Provided key, keyDerivationKey, has insufficient entropy (""+ providedKeyLen+ "" bits) to generate key of requested size of ""+ keySize+ "" bits."");}keySize = calcKeySize(keySize);byte[] derivedKey = new byte[keySize];byte[] label;byte[] context;try {label = purpose.getBytes(""UTF-8"");context = context_.getBytes(""UTF-8"");} catch (UnsupportedEncodingException e) {throw new EncryptionException(""Encryption failure (internal encoding error: UTF-8)"",""UTF-8 encoding is NOT supported as a standard byte encoding: "" + e.getMessage(),e);}SecretKey sk = new SecretKeySpec(keyDerivationKey.getEncoded(), prfAlg_);Mac mac = null;try {mac = Mac.getInstance(prfAlg_);mac.init(sk);} catch (InvalidKeyException ex) {throw ex;}int ctr = 1;int totalCopied = 0;int destPos = 0;int len = 0;byte[] tmpKey = null;do {mac.update(ByteConversionUtil.fromInt(ctr++));mac.update(label);mac.update((byte) '\0');mac.update(context);tmpKey = mac.doFinal(ByteConversionUtil.fromInt(keySize));if (tmpKey.length >= keySize) {len = keySize;} else {len = Math.min(tmpKey.length, keySize - totalCopied);}System.arraycopy(tmpKey, 0, derivedKey, destPos, len);label = tmpKey;totalCopied += tmpKey.length;destPos += len;} while (totalCopied < keySize);for (int i = 0; i < tmpKey.length; i++) {tmpKey[i] = '\0';}tmpKey = null;return new SecretKeySpec(derivedKey, keyDerivationKey.getAlgorithm());}}"	1
5330	"public class A {@Override@Transactional(value = ""cacheTransactionManager"")public void addAlarmToTag(final Long tagId, final Long alarmId) {tagCache.acquireWriteLockOnKey(tagId);try {T tag = tagCache.get(tagId);tag.getAlarmIds().add(alarmId);tagCache.putQuiet(tag);} finally {tagCache.releaseWriteLockOnKey(tagId);}}}"	1
5331	"public class A {private List<String> loadBucketAssignments(long distributionId) {Set<String> nodeIds = getNodeIdentifiers();List<BucketNode> bucketNodes = getBuckets(distributionId);BucketReassigner reassigner = new BucketReassigner(nodeIds, bucketNodes);List<String> assignments = new ArrayList<>(nCopies(bucketNodes.size(), null));PrestoException limiterException = null;Set<String> offlineNodes = new HashSet<>();for (BucketNode bucketNode : bucketNodes) {int bucket = bucketNode.getBucketNumber();String nodeId = bucketNode.getNodeIdentifier();if (!nodeIds.contains(nodeId)) {if (nanosSince(startTime).compareTo(startupGracePeriod) < 0) {throw new PrestoException(SERVER_STARTING_UP, ""Cannot reassign buckets while server is starting"");}try {if (offlineNodes.add(nodeId)) {assignmentLimiter.checkAssignFrom(nodeId);}} catch (PrestoException e) {if (limiterException == null) {limiterException = e;}continue;}String oldNodeId = nodeId;nodeId = reassigner.getNextReassignmentDestination();dao.updateBucketNode(distributionId, bucket, getOrCreateNodeId(nodeId));}verify(assignments.set(bucket, nodeId) == null, ""Duplicate bucket"");}if (limiterException != null) {throw limiterException;}return ImmutableList.copyOf(assignments);}}"	1
5332	"public class A {@Testpublic void testMainWithBadNumAssignThreads() throws IOException, InterruptedException {try {List<String> cmdList =ProcessUtils.buildApplicationCommandLine(BulkIngestMapFileLoader.class.getName(), systemProperties, false);for (int counter = 0; counter < 6; counter++) {cmdList.add(String.format(""%d"", counter));}cmdList.add(""-numAssignThreads"");cmdList.add(""hello, world"");String[] cmdArray = ProcessUtils.convertCommandLine(cmdList);Map<String, String> newEnvironment = new HashMap<>();List<String> dropFromEnvironment = new ArrayList<>();File workingDirectory = new File(System.getProperty(""user.dir""));Process proc =ProcessUtils.runInstance(cmdArray, newEnvironment, dropFromEnvironment, workingDirectory);int procResults = proc.waitFor();Assert.assertEquals(""BulkIngestMapLoader#main failed to return the expected value."",ProcessUtils.SYSTEM_EXIT_MINUS_TWO,procResults);List<String> stdOut = ProcessUtils.getStandardOutDumps(proc);Assert.assertTrue(""BulkIngestMapLoader#main failed to generate the expected error message"",processOutputContains(stdOut,""-numAssignThreads must be followed by the number of bulk import assignment""+ "" threads""));} finally {}}}"	2
5333	public class A {@ExceptionHandler@ResponseStatus(HttpStatus.CONFLICT)public RestApiError handle(final ConflictException ex) {if (ex.getCause() != null) {}return RestApiError.of(ex.toApiError()).build(HttpStatus.CONFLICT.value());}}	1
5334	public class A {@Overridepublic void onTrigger(ProcessContext context, ProcessSession session) throws ProcessException {final ConsumerPool pool = getConsumerPool(context);if (pool == null) {context.yield();return;}try (final ConsumerLease lease = pool.obtainConsumer(session)) {if (lease == null) {context.yield();return;}activeLeases.add(lease);try {while (this.isScheduled() && lease.continuePolling()) {lease.poll();}if (this.isScheduled() && !lease.commit()) {context.yield();}} catch (final WakeupException we) {getLogger()} catch (final KafkaException kex) {getLogger()} catch (final Throwable t) {getLogger()} finally {activeLeases.remove(lease);}}}}	3
5335	"public class A {@RequestMapping(value = ""/{mvnGroup:.+}/{artifact:.+}/{version:.+}"",method = RequestMethod.GET,produces = {""application/json;charset=UTF-8""})public ResponseEntity<Artifact> getArtifactVersion(@PathVariable String mvnGroup,@PathVariable String artifact,@PathVariable String version,@RequestParam(value = ""classifier"", required = false, defaultValue = """")String classifierFilter,@RequestParam(value = ""packaging"", required = false, defaultValue = """")String packagingFilter,@RequestParam(value = ""skipResponseBody"", required = false, defaultValue = ""false"")Boolean skipResponseBody,@RequestParam(value = ""lang"", required = false, defaultValue = """") ProgrammingLanguage lang) {try {RepositoryDispatcher r = new RepositoryDispatcher();Artifact response =r.getArtifactVersion(mvnGroup, artifact, version, classifierFilter, packagingFilter, lang);if (response == null) return new ResponseEntity<Artifact>(HttpStatus.NOT_FOUND);if (skipResponseBody) return new ResponseEntity<Artifact>(HttpStatus.OK);else return new ResponseEntity<Artifact>(response, HttpStatus.OK);} catch (Exception e) {return new ResponseEntity<Artifact>(HttpStatus.INTERNAL_SERVER_ERROR);}}}"	1
5336	public class A {@Overridepublic void destroy() {if (httpServer == null) {return;}httpServer.stop();httpServer = null;}}	1
5337	public class A {@Overridepublic void handleCommand(final ChannelUID channelUID, final Command cmd) {final PIMHandler pimHandler = getPIMHandler();if (pimHandler == null) {return;}if (cmd == RefreshType.REFRESH) {return;} else if (!(cmd instanceof DecimalType)) {return;}final MessageBuilder message;if (channelUID.getId().equals(Constants.LINK_ACTIVATE_CHANNEL_ID)) {message = MessageBuilder.forCommand(ACTIVATE);} else if (channelUID.getId().equals(Constants.LINK_DEACTIVATE_CHANNEL_ID)) {message = MessageBuilder.forCommand(DEACTIVATE);} else {return;}final byte dst = ((DecimalType) cmd).byteValue();message.network(networkId).destination(dst).link(true);pimHandler.sendPacket(message);}}	3
5338	"public class A {@Overridepublic BundleValidationCheckResult checkResults(BundleValidateQuery query) {ObjectMapper mapper = new ObjectMapper();BundleValidationCheckResult checkResult = new BundleValidationCheckResult();String result = query.getQueryResult();mapper.configure(SerializationConfig.Feature.AUTO_DETECT_FIELDS, true);Map<String, Object> parsedResult = new HashMap<String, Object>();boolean parseFailed = false;try {parsedResult = mapper.readValue(result, HashMap.class);} catch (JsonParseException e) {checkResult.setTestResult(""JsonParseException trying to parse query results."");parseFailed = true;} catch (JsonMappingException e) {checkResult.setTestResult(""JsonMappingException trying to parse query results."");parseFailed = true;} catch (IOException e) {checkResult.setTestResult(""IOException trying to parse query results."");parseFailed = true;}if (parseFailed) {checkResult.setTestStatus(FAIL);return checkResult;}int httpCode = (Integer) parsedResult.get(""code"");Map<String, Object> data = (Map<String, Object>) parsedResult.get(""data"");Map<String, Object> entry = (Map<String, Object>) data.get(""entry"");ArrayList<Object> routeIds = (ArrayList<Object>) entry.get(""routeIds"");if (httpCode != 200 || routeIds == null || routeIds.size() == 0) {checkResult.setTestStatus(FAIL);checkResult.setTestResult(query.getErrorMessage() + ""Did not find any routes for stop #"" + query.getStopId());} else {if (routeIds.contains(query.getRouteId())) {checkResult.setTestResult(query.getErrorMessage()+ ""Found stop #""+ query.getStopId()+ "" on Route #""+ query.getRouteId());if (query.getSpecificTest().toLowerCase().equals(""stop for route"")) {checkResult.setTestStatus(PASS);} else {checkResult.setTestStatus(FAIL);}} else {checkResult.setTestResult(query.getErrorMessage()+ ""Did not find stop #""+ query.getStopId()+ "" on Route #""+ query.getRouteId());if (query.getSpecificTest().toLowerCase().equals(""stop date at time"")) {checkResult.setTestStatus(FAIL);} else {checkResult.setTestStatus(PASS);}}}return checkResult;}}"	3
5339	public class A {@Overridepublic void onEvent(RequestEvent event) {RequestEvent.Type type = event.getType();switch (type) {case ON_EXCEPTION:Throwable error = event.getException();if (error != null) {Class<?> errorClass = error.getClass();MetricsService metrics = LensServices.get().getService(MetricsService.NAME);if (metrics != null) {metrics.incrCounter(LensRequestListener.class, HTTP_ERROR);metrics.incrCounter(errorClass, EXCEPTION_COUNT);if (error instanceof ServerErrorException) {metrics.incrCounter(LensRequestListener.class, HTTP_SERVER_ERROR);} else if (error instanceof ClientErrorException) {metrics.incrCounter(LensRequestListener.class, HTTP_CLIENT_ERROR);} else {metrics.incrCounter(LensRequestListener.class, HTTP_UNKOWN_ERROR);}}}if (context != null) {hadError = true;}break;case FINISHED:MetricsService metrics = LensServices.get().getService(MetricsService.NAME);if (metrics != null) {metrics.incrCounter(LensRequestListener.class, HTTP_REQUESTS_FINISHED);}if (context != null) {if (hadError) {context.markError();} else {context.markSuccess();}}break;case RESOURCE_METHOD_START:context = getContext(event);break;case RESOURCE_METHOD_FINISHED:hadError = false;break;}}}	1
5340	"public class A {@RequestMapping(value = ""/updateConfig"",method = {RequestMethod.PUT})@ResponseBodypublic StreamingRequest updateStreamingConfig(@RequestBody StreamingRequest streamingRequest)throws JsonProcessingException {StreamingSourceConfig streamingSourceConfig =deserializeStreamingConfig(streamingRequest.getStreamingConfig());if (streamingSourceConfig == null) {return streamingRequest;}final String user = SecurityContextHolder.getContext().getAuthentication().getName();try {streamingService.updateStreamingConfig(streamingSourceConfig);} catch (AccessDeniedException accessDeniedException) {throw new ForbiddenException(""You don't have right to update this StreamingSourceConfig."");} catch (Exception e) {throw new InternalErrorException(""Failed to deal with the request: "" + e.getLocalizedMessage());}streamingRequest.setSuccessful(true);return streamingRequest;}}"	2
5341	"public class A {public static com.liferay.dynamic.data.mapping.model.DDMDataProviderInstancegetDataProviderInstance(HttpPrincipal httpPrincipal, long dataProviderInstanceId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DDMDataProviderInstanceServiceUtil.class,""getDataProviderInstance"",_getDataProviderInstanceParameterTypes4);MethodHandler methodHandler = new MethodHandler(methodKey, dataProviderInstanceId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.dynamic.data.mapping.model.DDMDataProviderInstance) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
5342	"public class A {public void dispose() {super.dispose();OntologySourcesManager sourcesMngr = get(OntologySourcesManager.ID);removeIOListener(sourcesMngr);try {owlEntityRenderingCache.dispose();owlObjectRenderingCache.dispose();if (entityRenderer != null) {entityRenderer.dispose();}owlReasonerManager.dispose();} catch (Exception e) {}modelManagerListenerManager.dumpWarningForAllListeners(logger, ""(Listeners should be removed in the plugin dispose method!)"");changeListenerManager.dumpWarningForAllListeners(logger, ""(Listeners should be removed in the plugin dispose method!)"");}}"	1
5343	public class A {public static com.liferay.knowledge.base.model.KBArticleSoap[] getPreviousAndNextKBArticles(long kbArticleId) throws RemoteException {try {com.liferay.knowledge.base.model.KBArticle[] returnValue =KBArticleServiceUtil.getPreviousAndNextKBArticles(kbArticleId);return com.liferay.knowledge.base.model.KBArticleSoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
5344	"public class A {public static SAXParserFactory getSAXParserFactory(final String className) {Class<?> clazz = null;try {clazz = Class.forName(className);} catch (final ClassNotFoundException ex) {if (LOG.isDebugEnabled()) {}return null;}Method method = null;try {method = clazz.getMethod(""newInstance"", (Class[]) null);} catch (final SecurityException | NoSuchMethodException ex) {if (LOG.isDebugEnabled()) {}return null;}Object result = null;try {result = method.invoke(null, (Object[]) null);} catch (final IllegalAccessException | InvocationTargetException ex) {if (LOG.isDebugEnabled()) {}return null;}if (!(result instanceof SAXParserFactory)) {if (LOG.isDebugEnabled()) {}return null;}return (SAXParserFactory) result;}}"	4
5345	public class A {public SysExportZot merge(SysExportZot detachedInstance) {try {SysExportZot result =(SysExportZot) sessionFactory.getCurrentSession().merge(detachedInstance);return result;} catch (RuntimeException re) {throw re;}}}	3
5346	"public class A {@ApiOperation(value = ""Adds a dynamic subprocess to a specified case instance."",response = Void.class,code = 201)@ApiResponses(value = {@ApiResponse(code = 500, message = ""Unexpected error""),@ApiResponse(code = 404, message = ""Case instance not found"")})@POST@Path(CASE_DYNAMIC_PROCESS_POST_URI)@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})public Response addDynamicProcessToCase(@javax.ws.rs.core.Context HttpHeaders headers,@ApiParam(value = ""container id that case instance belongs to"",required = true,example = ""evaluation_1.0.0-SNAPSHOT"")@PathParam(CONTAINER_ID)String containerId,@ApiParam(value = ""identifier of the case instance"",required = true,example = ""CASE-00000000001"")@PathParam(CASE_ID)String caseId,@ApiParam(value = ""process id of the subprocess to be added"",required = true,example = ""placeOrder"")@PathParam(PROCESS_ID)String processId,@ApiParam(value = ""data for dynamic subprocess"",required = true,examples =@Example(value = {@ExampleProperty(mediaType = JSON, value = VAR_MAP_JSON),@ExampleProperty(mediaType = XML, value = VAR_MAP_XML)}))String payload) {return invokeCaseOperation(headers,containerId,caseId,processId,(Variant v, String type, Header... customHeaders) -> {this.caseManagementServiceBase.addDynamicSubprocess(containerId, caseId, null, processId, payload, type);return createResponse("""", v, Response.Status.CREATED, customHeaders);});}}"	2
5347	public class A {public static Filter addBBoxConstraint(final Envelope bbox,final Filter filter,final ValueReference propName,final boolean allowFalsePositives) {if (bbox == null) {return filter;}if (filter instanceof IdFilter) {return filter;}Filter bboxFilter = null;BBOX bboxOperator = new BBOX(propName, bbox, allowFalsePositives);if (filter == null) {bboxFilter = new OperatorFilter(bboxOperator);} else {And andOperator = new And(bboxOperator, ((OperatorFilter) filter).getOperator());bboxFilter = new OperatorFilter(andOperator);}return bboxFilter;}}	1
5348	"public class A {private static void migrateLocks(Map<String, String> projectPathMap) {Path projectLocks =Paths.get(Props.text(AdministrationSettings.USER_WORKSPACE_HOME), "".locks/rules"");if (Files.exists(projectLocks)) {try {Files.walkFileTree(projectLocks,new SimpleFileVisitor<Path>() {@Overridepublic FileVisitResult visitFile(Path file, BasicFileAttributes attrs)throws IOException {Path lockPath = projectLocks.relativize(file);String branchName = """";if (lockPath.startsWith(""branches/"")) {Path branchPath = lockPath.subpath(2, lockPath.getNameCount() - 1);if (branchPath != null) {branchName = ""[branches]/"" + branchPath;}}String projectName = lockPath.getFileName().toString();String projectPath =projectPathMap.getOrDefault(projectName, ""/DESIGN/rules/"" + projectName);Path newLock =Paths.get(Props.text(AdministrationSettings.USER_WORKSPACE_HOME),"".locks/projects/design"",projectPath,branchName,""ready.lock"");newLock.getParent().toFile().mkdirs();Files.copy(file, newLock);return FileVisitResult.CONTINUE;}});} catch (IOException e) {}}}}"	1
5349	"public class A {public void feed(Document doc) {if (batchSize <= 1) {feedCount++;invoke(""publishDocument"", doc);} else {batch.add(doc);if (batch.size() >= batchSize) {feedCount += batch.size();synchronized (batch) {invoke(""publishDocuments"", batch);batch = Collections.synchronizedList(new ArrayList<Document>());}}}long now = System.currentTimeMillis();long lastReport = now - lastUpdate;if (lastReport > 10000) {double speed = feedCount / (double) (now - start) * 1000;lastUpdate = now;}if (feedCount > maxFeedCount && maxFeedCount >= 0) {setState(ConnectorState.INTERRUPTED);}}}"	1
5350	"public class A {protected void waitForSshable(final SshMachineLocation machine, Duration timeout) {Callable<Boolean> checker =() -> {int exitstatus =machine.execScript(ImmutableMap.of(SshTool.PROP_CONNECT_TIMEOUT.getName(),Duration.TEN_SECONDS.toMilliseconds(),SshTool.PROP_SESSION_TIMEOUT.getName(),Duration.TEN_SECONDS.toMilliseconds(),SshTool.PROP_SSH_TRIES_TIMEOUT.getName(),Duration.TEN_SECONDS.toMilliseconds(),SshTool.PROP_SSH_TRIES.getName(),1),""check-sshable"",ImmutableList.of(""true""));return (exitstatus == 0);};Stopwatch stopwatch = Stopwatch.createStarted();ReferenceWithError<Boolean> reachable =Repeater.create(""reachable"").threaded().backoff(Duration.FIVE_SECONDS, 2, Duration.TEN_SECONDS).until(checker).limitTimeTo(timeout).runKeepingError();if (!reachable.getWithoutError()) {throw new IllegalStateException(""Connection failed for ""+ machine.getSshHostAndPort()+ "" after waiting ""+ stopwatch.elapsed(TimeUnit.SECONDS),reachable.getError());} else {}}}"	1
5351	"public class A {public List<DataTypeAdapter<?>> getAllDataAdapters(final String inputPath, final File configFile)throws IOException {final Map<String, LocalFileIngestPlugin<?>> ingestPlugins =pluginFormats.createLocalIngestPlugins();final Map<String, LocalFileIngestPlugin<?>> localFileIngestPlugins = new HashMap<>();final Map<String, DataTypeAdapter<?>> adapters = Maps.newHashMap();for (final Entry<String, LocalFileIngestPlugin<?>> pluginEntry : ingestPlugins.entrySet()) {if (!isSupported(pluginEntry.getKey(), pluginEntry.getValue())) {continue;}localFileIngestPlugins.put(pluginEntry.getKey(), pluginEntry.getValue());Arrays.stream(pluginEntry.getValue().getDataAdapters(ingestOptions.getVisibility())).forEach(adapter -> {adapters.put(adapter.getTypeName(), adapter);});}Properties configProperties = null;if ((configFile != null) && configFile.exists()) {configProperties = ConfigOptions.loadProperties(configFile);}Path path = IngestUtils.handleIngestUrl(inputPath, configProperties);if (path == null) {final File f = new File(inputPath);if (!f.exists()) {throw new IllegalArgumentException(inputPath + "" does not exist"");}path = Paths.get(inputPath);}for (final LocalPluginBase localPlugin : localFileIngestPlugins.values()) {localPlugin.init(path.toUri().toURL());}final DataAdapterFileVisitor fileURLs =new DataAdapterFileVisitor(localFileIngestPlugins,localInputOptions.getExtensions(),adapters,ingestOptions.getVisibility());Files.walkFileTree(path, fileURLs);return Lists.newArrayList(adapters.values());}}"	1
5352	public class A {@Overrideprotected ApplicationMessage parseMessageContent() {ApplicationMessage msg = new ApplicationMessage();parseData(msg);return msg;}}	1
5353	public class A {@Overridepublic String call() throws Exception {try {return RefreshScopePureScaleTests.this.service.getMessage();} finally {latch.countDown();}}}	2
5354	"public class A {public Map<String, Object> formatQuestionTextDetails(QuestionReponseTypeDto reponseType)throws DAOException {LOGGER.entry(""begin formatQuestionTextDetails()"");Map<String, Object> questionFormat = new LinkedHashMap<>();try {questionFormat.put(""maxLength"",((reponseType == null) || (reponseType.getMaxLength() == null))? 0: reponseType.getMaxLength());questionFormat.put(""validationRegex"",((reponseType == null) || StringUtils.isEmpty(reponseType.getValidationRegex()))? """": reponseType.getValidationRegex());questionFormat.put(""invalidMessage"",((reponseType == null) || StringUtils.isEmpty(reponseType.getInvalidMessage()))? ""Invalid Input. Please try again."": reponseType.getInvalidMessage());questionFormat.put(""multipleLines"",((reponseType == null)|| (reponseType.getMultipleLines() == null)|| !reponseType.getMultipleLines())? false: true);questionFormat.put(""placeholder"",((reponseType == null) || StringUtils.isEmpty(reponseType.getPlaceholder()))? """": reponseType.getPlaceholder());} catch (Exception e) {}LOGGER.exit(""formatQuestionTextDetails() :: Ends"");return questionFormat;}}"	1
5355	public class A {protected T cacheHandler(Class<?> targetType, T handler) {if (handler == null) {negativeCache.add(targetType);} else {indirectCache.put(targetType, handler);}return handler;}}	2
5356	"public class A {public static Map<String, Object> formErrorCode() {Map<String, Object> errorCode = new HashMap<>();errorCode.put(""jobName"", System.getProperty(""jobName""));SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");errorCode.put(""executionEndDate"", sdf.format(new Date()));List<Map<String, Object>> errors = new ArrayList<>();for (Entry<String, List<ErrorVH>> errorDetail : errorMap.entrySet()) {Map<String, Object> error = new HashMap<>();List<Map<String, String>> details = new ArrayList<>();error.put(""error"", ""Error while fetching Inventory for account "" + errorDetail.getKey());for (ErrorVH errorVH : errorDetail.getValue()) {Map<String, String> detail = new HashMap<>();detail.put(""type"", errorVH.getType());detail.put(""region"", errorVH.getRegion());detail.put(""exception"", errorVH.getException());detail.put(""account"", errorDetail.getKey());details.add(detail);}error.put(""details"", details);errors.add(error);}errorCode.put(""errors"", errors);if (errors.isEmpty()) {errorCode.put(""status"", ""Success"");} else {errorCode.put(""status"", ""Partial Success"");}return errorCode;}}"	1
5357	"public class A {public void enterSearchText(String searchText) {WebElement element =wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("".search-pipelines-input input"")));element.sendKeys(searchText);}}"	1
5358	"public class A {@Test(groups = {""wso2.cep""},description = ""Testing activemq jms publisher with Text formatted event with custom mapping"",dependsOnMethods = {""jmsJSONTestWithDefaultMappingScenario""})public void jmsJSONTestWithCustomMappingScenario() throws Exception {final int messageCount = 1;String samplePath = ""outputflows"" + File.separator + ""sample0059"";int startESCount = eventStreamManagerAdminServiceClient.getEventStreamCount();int startEPCount = eventPublisherAdminServiceClient.getActiveEventPublisherCount();EventDto eventDto = new EventDto();eventDto.setEventStreamId(""org.wso2.event.sensor.stream:1.0.0"");eventDto.setAttributeValues(new String[] {""199008131245"", ""false"", ""100"", ""temperature"", ""23.45656"", ""7.12324"", ""100.34"", ""23.4545""});String streamDefinitionAsString =getJSONArtifactConfiguration(samplePath, ""org.wso2.event.sensor.stream_1.0.0.json"");eventStreamManagerAdminServiceClient.addEventStreamAsString(streamDefinitionAsString);Assert.assertEquals(eventStreamManagerAdminServiceClient.getEventStreamCount(), startESCount + 1);String eventPublisherConfig =getXMLArtifactConfiguration(samplePath, ""jmsPublisherCustomJSON.xml"");eventPublisherAdminServiceClient.addEventPublisherConfiguration(eventPublisherConfig);Assert.assertEquals(eventPublisherAdminServiceClient.getActiveEventPublisherCount(), startEPCount + 1);Thread.sleep(10000);JMSConsumerClient.startConsumer(""topicJSON"");Thread.sleep(3000);eventSimulatorAdminServiceClient.sendEvent(eventDto);Thread.sleep(2000);List<Object> preservedEventList = JMSConsumerClient.getPreservedEventList();String sentEvent =""{\""Sensor Data\"":""+ ""{\""equipment related data\"":{\""timestamp\"":199008131245,""+ ""\""isPowerSaverEnabled\"":false,\""sensorId\"":100,\""sensorName\"":\""temperature\""},""+ ""\""location data\"":""+ ""{\""longitude\"":23.45656,\""latitude\"":7.12324},""+ ""\""sensor data\"":""+ ""{\""humidity\"":100.34,\""sensorValue\"":23.4545}}}"";String preservedEvent = (String) preservedEventList.get(0);Thread.sleep(5000);eventStreamManagerAdminServiceClient.removeEventStream(""org.wso2.event.sensor.stream"", ""1.0.0"");eventPublisherAdminServiceClient.removeInactiveEventPublisherConfiguration(""jmsPublisherCustomJSON.xml"");try {JsonParser jsonParser = new JsonParser();Assert.assertEquals(JMSConsumerClient.getMessageCount(),messageCount,""Incorrect number of messages consumed!"");JsonElement preservedEventJson = jsonParser.parse(preservedEvent);JsonElement sentEventJson = jsonParser.parse(sentEvent);Assert.assertEquals(preservedEventJson, sentEventJson, ""Incorrect mapping has occurred!"");} catch (Throwable e) {Assert.fail(""Exception: "" + e.getMessage());} finally {JMSConsumerClient.shutdown();}}}"	1
5359	public class A {public void createUebTopicsForEnvironment(OperationalEnvironmentEntry opEnvEntry) {String envId = opEnvEntry.getEnvironmentId();AtomicBoolean status = new AtomicBoolean(false);envNamePerStatus.put(envId, status);connectUebTopicTenantIsolation(opEnvEntry, status, envNamePerInitTask, envNamePerPollingTask);}}	1
5360	public class A {@Overridepublic FilterType crosses(String propertyName, String wkt) {if (!isValidInputParameters(propertyName, wkt)) {throw new IllegalArgumentException(MISSING_PARAMETERS_MSG);}if (supportedGeo.contains(SPATIAL_OPERATORS.CROSSES.getValue())) {return buildGeospatialFilterType(SPATIAL_OPERATORS.CROSSES.toString(), propertyName, wkt, null);} else {return null;}}}	1
5361	"public class A {@Overridepublic int waitForExit(long timeout) throws InterruptedException, IOException {long until = System.currentTimeMillis() + timeout;while (until > System.currentTimeMillis()) {if (channel.isClosed()) {break;}Thread.sleep(100);}if (channel.isClosed() == false) {throw new IOException(MessageFormat.format(""Failed to wait for exit remote command: {0}@{1}:{2} - {3}"",profile.getUser(), profile.getHost(), String.valueOf(profile.getPort()), command));}return channel.getExitStatus();}}"	2
5362	public class A {private void forceClose() {assert adminExecutor.inEventLoop();if (closeWasCalled) {return;}closeWasCalled = true;reconnection.stop();if (channel == null) {closeFuture.complete(null);} else {channel.forceClose().addListener(f -> {if (f.isSuccess()) {closeFuture.complete(null);} else {closeFuture.completeExceptionally(f.cause());}});}}}	3
5363	"public class A {@Testpublic void badPatch() throws IOException {logStart();String updateAAIVfModuleRequest =FileUtil.readResourceFile(""__files/VfModularity/UpdateAAIVfModuleRequest.xml"");MockGetGenericVnfById_404(wireMockServer, ""/skask/vf-modules/vf-module/supercool"");MockGetGenericVnfById(wireMockServer,""/skask/vf-modules/vf-module/supercool"",""VfModularity/VfModule-supercool.xml"",200);MockAAIVfModuleBadPatch(wireMockServer,""/aai/v[0-9]+/network/generic-vnfs/generic-vnf/skask/vf-modules/vf-module/supercool"",404);String businessKey = UUID.randomUUID().toString();Map<String, Object> variables = new HashMap<>();variables.put(""mso-request-id"", UUID.randomUUID().toString());variables.put(""isDebugLogEnabled"", ""true"");variables.put(""UpdateAAIVfModuleRequest"", updateAAIVfModuleRequest);invokeSubProcess(""UpdateAAIVfModule"", businessKey, variables);Assert.assertTrue(isProcessEnded(businessKey));String response =(String) getVariableFromHistory(businessKey, ""UAAIVfMod_updateVfModuleResponse"");Integer responseCode =(Integer) getVariableFromHistory(businessKey, ""UAAIVfMod_updateVfModuleResponseCode"");Assert.assertEquals(404, responseCode.intValue());logEnd();}}"	2
5364	"public class A {@Overridepublic void classWillLoad(PlasticClassEvent event) {if (logger.isDebugEnabled()) {Marker marker = MarkerFactory.getMarker(event.getPrimaryClassName());String extendedClassName =event.getType() == ClassType.PRIMARY? event.getPrimaryClassName(): String.format(""%s (%s for %s)"",event.getClassName(), event.getType(), event.getPrimaryClassName());}}}"	1
5365	"public class A {public String getCGN(final String id) throws TaskFailedException {String cgn = """";pstmt = null;List<Object[]> rsCgn = null;if (!id.equals(""""))try {final String queryCgn = ""select CGN from VOUCHERHEADER where id=?"";pstmt = persistenceService.getSession().createSQLQuery(queryCgn);pstmt.setString(0, id);rsCgn = pstmt.list();for (final Object[] element : rsCgn) cgn = element[0].toString();} catch (final Exception sqlex) {throw taskExc;}return cgn;}}"	1
5366	public class A {@Overrideprotected List<Class<?>> createInstance() {List<Class<?>> ret = new ArrayList<>();if (setOfClassNames != null) {for (String clsName : setOfClassNames) {try {Class<?> cls = Thread.currentThread().getContextClassLoader().loadClass(clsName);ret.add(cls);} catch (ClassNotFoundException e) {}}}return ret;}}	1
5367	public class A {public static XBeeResponse getXBeeFrame(int[] data) {Class<?> xbeeClass = null;if (data[2] == 0x88) {xbeeClass = atCommands.get((data[4] << 8) + data[5]);}if (xbeeClass == null) {xbeeClass = events.get(data[2]);}if (xbeeClass == null) {return null;}Constructor<?> ctor;try {ctor = xbeeClass.getConstructor();XBeeResponse xbeeFrame = (XBeeResponse) ctor.newInstance();xbeeFrame.deserialize(data);return xbeeFrame;} catch (Exception e) {}return null;}}	1
5368	"public class A {protected ContextMetadata getAvailableVariables(Context ctx) {ContextMetadata metadata = new ContextMetadata(getSupportedType().toString());if (ctx == null) {return metadata;}Set<String> variableNames = ctx.getVariableNames();for (String name : variableNames) {Object obj = ctx.getVariable(name);Variable variable = null;if (obj == null) {variable = new Variable(name, ""Undefined"");} else {variable = getVariable(name, obj);}metadata.addVariable(variable);}return metadata;}}"	1
5369	public class A {public static FunctionalSet<ValueTuple> betweenLoadDates(Object fieldValue, String start, String end, String rangePattern) {FunctionalSet<ValueTuple> matches = FunctionalSet.emptySet();if (fieldValue != null) {try {DateFormat rangeFormat = newSimpleDateFormat(rangePattern);int granularity = getGranularity(rangePattern);if (betweenInclusive(Long.parseLong(ValueTuple.getStringValue(fieldValue)),getTime(start, rangeFormat),getNextTime(end, rangeFormat, granularity) - 1)) {matches = FunctionalSet.singleton(getHitTerm(fieldValue));}} catch (ParseException pe) {} catch (NumberFormatException nfe) {}}return matches;}}	2
5370	public class A {private void tryOverriding(String name, String value, boolean warnOnMisplacedProp) {if (STANDARDIZED_NAMES.containsKey(name)) {var standardName = STANDARDIZED_NAMES.get(name);if (STANDARDIZED_FORMATS.containsKey(name)) {try {value = STANDARDIZED_FORMATS.get(name).apply(value);} catch (Exception reason) {}}name = standardName;}if (!NODE_PROPS.contains(name)) {if (warnOnMisplacedProp) {}return;}try {fromFile.put(name, transformFor(name).apply(value));} catch (Exception reason) {}}}	4
5371	"public class A {public static Path findExportFile(ClientContext context, Set<String> importDirs)throws AccumuloException {LinkedHashSet<Path> exportFiles = new LinkedHashSet<>();for (String importDir : importDirs) {Path exportFilePath = null;try {FileSystem fs = new Path(importDir).getFileSystem(context.getHadoopConf());exportFilePath = new Path(importDir, Constants.EXPORT_FILE);if (fs.exists(exportFilePath)) {exportFiles.add(exportFilePath);}} catch (IOException ioe) {}}if (exportFiles.size() > 1) {String fileList = Arrays.toString(exportFiles.toArray());throw new AccumuloException(""Found multiple export metadata files: "" + fileList);} else if (exportFiles.isEmpty()) {throw new AccumuloException(""Unable to locate export metadata"");}return exportFiles.iterator().next();}}"	5
5372	"public class A {public static void bulkUpload(List<String> errors, String bulkRequest) {try {System.out.println(""********"" + bulkRequest);Response resp = invokeAPI(""POST"", ""/_bulk?refresh=true"", bulkRequest);String responseStr = EntityUtils.toString(resp.getEntity());if (responseStr.contains(""\""errors\"":true"")) {errors.add(responseStr);}} catch (Exception e) {e.printStackTrace();errors.add(e.getMessage());}}}"	2
5373	"public class A {public MYesno findById(java.lang.Short id) {try {MYesno instance = (MYesno) getSession().get(""sernet.gs.reveng.MYesno"", id);return instance;} catch (RuntimeException re) {throw re;}}}"	2
5374	"public class A {@Testpublic void testPropagatingEnricher() throws Exception {Entity app = createAndStartApplication(loadYaml(""test-propagating-enricher.yaml""));waitForApplicationTasks(app);Assert.assertEquals(app.getDisplayName(), ""test-propagating-enricher"");Entities.dumpInfo(app);TestEntity entity = (TestEntity) app.getChildren().iterator().next();entity.sensors().set(TestEntity.NAME, ""New Name"");Asserts.eventually(Entities.attributeSupplier(app, TestEntity.NAME), Predicates.<String>equalTo(""New Name""));}}"	1
5375	"public class A {public ActionForward deletePayment(ActionMapping actionMapping,ActionForm actionForm,HttpServletRequest request,HttpServletResponse response) {Date curDate = new Date();try {Integer paymentId = Integer.parseInt(request.getParameter(""id""));BillingONPayment payment = billingONPaymentDao.find(paymentId);BillingONCHeader1 ch1 = payment.getBillingONCheader1();Integer billingNo = payment.getBillingONCheader1().getId();billingONPaymentDao.remove(paymentId);BigDecimal paid = billingONPaymentDao.getPaymentsSumByBillingNo(billingNo);BigDecimal refund = billingONPaymentDao.getPaymentsRefundByBillingNo(billingNo).negate();NumberFormat currency = NumberFormat.getCurrencyInstance();ch1.setPaid(paid.subtract(refund));billingClaimDAO.merge(ch1);billingONExtDao.setExtItem(billingNo,ch1.getDemographicNo(),BillingONExtDao.KEY_PAYMENT,currency.format(paid).replace(""$"", """"),curDate,'1');billingONExtDao.setExtItem(billingNo,ch1.getDemographicNo(),BillingONExtDao.KEY_REFUND,currency.format(refund).replace(""$"", """"),curDate,'1');} catch (Exception ex) {return actionMapping.findForward(""failure"");}return listPayments(actionMapping, actionForm, request, response);}}"	1
5376	public class A {@Overridepublic void run() {try {Thread.sleep(1000);} catch (Throwable t) {}Services.getInstance().shutdownService(serviceName);try {Services.getInstance().startService(serviceName);} catch (FrameworkException fex) {}}}	2
5377	public class A {@Overridepublic List<MessageTrack> messageTrackDetail(MessageExt msg) {try {return mqAdminExt.messageTrackDetail(msg);} catch (Exception e) {return Collections.emptyList();}}}	1
5378	public class A {private void executeBufferedEvents(String customResourceUid) {boolean newEventForResourceId = eventBuffer.containsEvents(customResourceUid);boolean controllerUnderExecution = isControllerUnderExecution(customResourceUid);Optional<CustomResource> latestCustomResource =eventSourceManager.getLatestResource(customResourceUid);if (!controllerUnderExecution && newEventForResourceId && latestCustomResource.isPresent()) {setUnderExecutionProcessing(customResourceUid);ExecutionScope executionScope =new ExecutionScope(eventBuffer.getAndRemoveEventsForExecution(customResourceUid),latestCustomResource.get(),retryInfo(customResourceUid));executor.execute(new ExecutionConsumer(executionScope, eventDispatcher, this));} else {}}}	2
5379	"public class A {public void run() {OAssign oassign = getOAssign();FaultData faultData = null;for (OAssign.OAssignOperation operation : oassign.getOperations()) {try {if (operation instanceof OAssign.Copy) {copy((OAssign.Copy) operation);} else if (operation instanceof OAssign.ExtensionAssignOperation) {invokeExtensionAssignOperation((OAssign.ExtensionAssignOperation) operation);}} catch (FaultException fault) {if (operation instanceof OAssign.Copy) {if (((OAssign.Copy) operation).isIgnoreMissingFromData()) {if (fault.getQName().equals(getOAssign().getOwner().getConstants().getQnSelectionFailure())&& (fault.getCause() != null&& ""ignoreMissingFromData"".equals(fault.getCause().getMessage()))) {continue;}}if (((OAssign.Copy) operation).isIgnoreUninitializedFromVariable()) {if (fault.getQName().equals(getOAssign().getOwner().getConstants().getQnUninitializedVariable())&& (fault.getCause() == null|| !""throwUninitializedToVariable"".equals(fault.getCause().getMessage()))) {continue;}}}faultData = createFault(fault.getQName(), operation, fault.getMessage());break;} catch (ExternalVariableModuleException e) {_self.parent.failure(e.toString(), null);return;}}if (faultData != null) {_self.parent.completed(faultData, CompensationHandler.emptySet());} else {_self.parent.completed(null, CompensationHandler.emptySet());}}}"	2
5380	"public class A {@SuppressWarnings(""unchecked"")@Overridepublic void attach(String name, Object partOrList) {if (partOrList == null) {return;}if (uploads == null) {uploads = ArrayListMultimap.create();}if (partOrList.getClass().isArray()) {for (Object part : (Object[]) partOrList) {uploads.put(name, PartUtils.getSinglePart(name, part));}return;}if (partOrList instanceof Collection) {for (Object part : ((Collection<Object>) partOrList)) {uploads.put(name, PartUtils.getSinglePart(name, part));}return;}uploads.put(name, PartUtils.getSinglePart(name, partOrList));}}"	1
5381	public class A {void updateDeleteTransaction(final DatanodeDetails datanodeDetails,final List<ContainerReplicaProto> replicas,final EventPublisher publisher) {final PendingDeleteStatusList pendingDeleteStatusList =new PendingDeleteStatusList(datanodeDetails);for (ContainerReplicaProto replica : replicas) {try {final ContainerInfo containerInfo =containerManager.getContainer(ContainerID.valueOf(replica.getContainerID()));if (containerInfo.getDeleteTransactionId() > replica.getDeleteTransactionId()) {pendingDeleteStatusList.addPendingDeleteStatus(replica.getDeleteTransactionId(),containerInfo.getDeleteTransactionId(),containerInfo.getContainerID());}} catch (ContainerNotFoundException cnfe) {}}if (pendingDeleteStatusList.getNumPendingDeletes() > 0) {publisher.fireEvent(SCMEvents.PENDING_DELETE_STATUS, pendingDeleteStatusList);}}}	1
5382	public class A {protected void fillHadoopConfiguration(Map topologyConf, String configKey, Configuration configuration) {Map<String, Object> config = (Map<String, Object>) topologyConf.get(configKey);if (config != null) {List<String> resourcesToLoad = new ArrayList<>();for (Map.Entry<String, Object> entry : config.entrySet()) {if (entry.getKey().equals(CONFIG_KEY_RESOURCES)) {resourcesToLoad.addAll((List<String>) entry.getValue());} else {configuration.set(entry.getKey(), String.valueOf(entry.getValue()));}}for (String pathStr : resourcesToLoad) {configuration.addResource(new Path(Paths.get(pathStr).toUri()));}}UserGroupInformation.setConfiguration(configuration);}}	3
5383	"public class A {private void forwardDeleteSchemaVersionRequestToLeader(Map<String, String> headerProperties,String subject,Integer version,boolean permanentDelete)throws SchemaRegistryRequestForwardingException {UrlList baseUrl = leaderRestService.getBaseUrls();try {leaderRestService.deleteSchemaVersion(headerProperties, subject, String.valueOf(version), permanentDelete);} catch (IOException e) {throw new SchemaRegistryRequestForwardingException(String.format(""Unexpected error while forwarding deleteSchemaVersion schema version ""+ ""request %s-%s to %s"",subject, version, baseUrl),e);} catch (RestClientException e) {throw new RestException(e.getMessage(), e.getStatus(), e.getErrorCode(), e);}}}"	1
5384	"public class A {public void createIfNotExist(final String ou, final String description, final String... organizationalUnits) {new LdapTemplate(ldapConnector) {@Overrideprotected Object call() throws NameNotFoundException, Exception {final String path = LdapUtils.getOu(ou, organizationalUnits);if (doesExist(ctx, ou, organizationalUnits)) {return null;}final Attributes attrs = new BasicAttributes();final BasicAttribute ocattr = new BasicAttribute(""objectclass"");ocattr.add(""top"");ocattr.add(OBJECT_CLASS);attrs.put(ocattr);LdapUtils.putAttribute(attrs, ""ou"", ou);LdapUtils.putAttribute(attrs, ""description"", description);ctx.bind(path, null, attrs);return null;}}.excecute();}}"	2
5385	public class A {private void onToEdgeSessionMsg(EdgeEventUpdateMsg msg) {systemContext.getEdgeRpcService().onEdgeEvent(msg.getEdgeId());}}	1
5386	public class A {public static ValidationResult createInvalid(String errorDescription) {return new ValidationResultImpl(errorDescription);}}	1
5387	"public class A {@Subscribe@SuppressWarnings(""unused"")public void handleExtractorCreate(final ExtractorCreated event) {scheduler.submit(() -> loadExtractors(event.inputId()));}}"	1
5388	public class A {@Overridepublic void operationFailed(Object ctx, PubSubException exception) {if (logger.isDebugEnabled()) {}channel.write(PubSubResponseUtils.getResponseForException(exception, request.getTxnId()));ServerStatsProvider.getStatsLoggerInstance().getOpStatsLogger(request.getType()).registerFailedEvent(MathUtils.elapsedMicroSec(requestTimeNanos));}}	1
5389	public class A {private void removeProperty(String propertyFilePath) {Properties properties =PROPERTIES_LOADER.loadPropertiesWithoutSystemPropertySubstitution(propertyFilePath, null);properties.remove(CRL_PROPERTY_KEY);try (OutputStream outputStream = new FileOutputStream(propertyFilePath)) {properties.store(outputStream, null);} catch (IOException e) {}}}	1
5390	public class A {@Overrideprotected Optional<ExtendedAccessControlReaderLockStatus> retrieveStatus() {try {final OmnilinkBridgeHandler bridgeHandler = getOmnilinkBridgeHandler();if (bridgeHandler != null) {ObjectStatus objStatus =bridgeHandler.requestObjectStatus(Message.OBJ_TYPE_CONTROL_LOCK, thingID, thingID, true);return Optional.of((ExtendedAccessControlReaderLockStatus) objStatus.getStatuses()[0]);} else {return Optional.empty();}} catch (OmniInvalidResponseException| OmniUnknownMessageTypeException| BridgeOfflineException e) {return Optional.empty();}}}	2
5391	"public class A {@Test(groups = {""wso2.cep""},description = ""Test xml message with http transport"")public void testHTTPXMLMessage() throws Exception {int startESCount = eventStreamManagerAdminServiceClient.getEventStreamCount();int startERCount = eventReceiverAdminServiceClient.getActiveEventReceiverCount();int startEPCount = eventPublisherAdminServiceClient.getActiveEventPublisherCount();String streamDefinition =getJSONArtifactConfiguration(""HTTPXMLMessageTestCase"", ""org.wso2.sample.pizza.order_1.0.0.json"");eventStreamManagerAdminServiceClient.addEventStreamAsString(streamDefinition);Assert.assertEquals(eventStreamManagerAdminServiceClient.getEventStreamCount(), startESCount + 1);String eventReceiverConfig =getXMLArtifactConfiguration(""HTTPXMLMessageTestCase"", ""PizzaOrder.xml"");eventReceiverAdminServiceClient.addEventReceiverConfiguration(eventReceiverConfig);Assert.assertEquals(eventReceiverAdminServiceClient.getActiveEventReceiverCount(), startERCount + 1);String eventPublisherConfig =getXMLArtifactConfiguration(""HTTPXMLMessageTestCase"", ""PizzaDeliveryNotification.xml"");eventPublisherAdminServiceClient.addEventPublisherConfiguration(eventPublisherConfig);Assert.assertEquals(eventPublisherAdminServiceClient.getActiveEventPublisherCount(), startEPCount + 1);Thread.sleep(2000);try {PizzaOrderClient.sendPizzaOrder(""http://localhost:""+ CEPIntegrationTestConstants.HTTP_PORT+ ""/endpoints/httpInputEventAdaptor/PizzaOrder"");Thread.sleep(2000);} catch (Throwable e) {Assert.fail(""Exception: "" + e.getMessage());}eventPublisherAdminServiceClient.removeActiveEventPublisherConfiguration(""PizzaDeliveryNotification"");eventReceiverAdminServiceClient.removeActiveEventReceiverConfiguration(""PizzaOrder"");eventStreamManagerAdminServiceClient.removeEventStream(""org.wso2.sample.pizza.order"", ""1.0.0"");}}"	1
5392	public class A {private String createKvpDescribeSensorOrReturnIdentifier(String identifier, String format)throws CodedException {if (getProcedureCreationContext().getBindingRepository().isBindingSupported(MediaTypes.APPLICATION_KVP)) {final String version =getProcedureCreationContext().getServiceOperatorRepository().isVersionSupported(SosConstants.SOS, Sos2Constants.SERVICEVERSION)? Sos2Constants.SERVICEVERSION: Sos1Constants.SERVICEVERSION;try {return SosHelper.getDescribeSensorUrl(version, getProcedureCreationContext().getServiceURL(), identifier, format).toString();} catch (MalformedURLException murle) {}}return identifier;}}	1
5393	public class A {public void deactivateNetwork(BuildingBlockExecution execution) {try {GeneralBuildingBlock gBBInput = execution.getGeneralBuildingBlock();L3Network l3Network = extractPojosForBB.extractByKey(execution, ResourceKey.NETWORK_ID);ServiceInstance serviceInstance =extractPojosForBB.extractByKey(execution, ResourceKey.SERVICE_INSTANCE_ID);Customer customer = gBBInput.getCustomer();RequestContext requestContext = gBBInput.getRequestContext();CloudRegion cloudRegion = gBBInput.getCloudRegion();GenericResourceApiNetworkOperationInformation req =sdncNetworkResources.deactivateNetwork(l3Network, serviceInstance, customer, requestContext, cloudRegion);SDNCRequest sdncRequest = new SDNCRequest();sdncRequest.setSDNCPayload(req);sdncRequest.setTopology(SDNCTopology.NETWORK);execution.setVariable(SDNC_REQUEST, sdncRequest);} catch (Exception ex) {exceptionUtil.buildAndThrowWorkflowException(execution, 7000, ex);}}}	1
5394	public class A {protected void onFlowAddedPost(final String networkId, final Flow flow, final HashMap<String, Response> respList) {}}	1
5395	public class A {public static ProcessingConfiguration loadDefault() {InputStream in = null;try {in = Misc.getResource(PROCESSING_CONFIG_FILE_RES);if (in == null) {return new ProcessingConfiguration();}return read(in);} catch (IOException ioe) {} finally {closeGraceful(in);}return new ProcessingConfiguration();}}	2
5396	public class A {public void run() {test.runTests();}}	1
5397	public class A {public void rollback(TransactionStatus status) {for (PlatformTransactionManager dataSourceManager : _transactionManagers) {try {dataSourceManager.rollback((((MultiTransactionStatus) status).getTransactionStatus(dataSourceManager)));} catch (Exception ex) {}}if (((MultiTransactionStatus) status).isNewSynchonization()) {TransactionSynchronizationManager.clear();}}}	1
5398	public class A {public void onBecomeOfflineFromOnline(Message message, NotificationContext context) {}}	1
5399	"public class A {BlobKey moveTempFileToStore(File incomingFile, @Nullable JobID jobId, byte[] digest, BlobKey.BlobType blobType)throws IOException {int retries = 10;int attempt = 0;while (true) {BlobKey blobKey = BlobKey.createKey(blobType, digest);File storageFile = BlobUtils.getStorageLocation(storageDir, jobId, blobKey);readWriteLock.writeLock().lock();try {if (!storageFile.exists()) {BlobUtils.moveTempFileToStore(incomingFile,jobId,blobKey,storageFile,LOG,blobKey instanceof PermanentBlobKey ? blobStore : null);if (blobKey instanceof TransientBlobKey) {blobExpiryTimes.put(Tuple2.of(jobId, (TransientBlobKey) blobKey),System.currentTimeMillis() + cleanupInterval);}return blobKey;}} finally {readWriteLock.writeLock().unlock();}++attempt;if (attempt >= retries) {String message =""Failed to find a unique key for BLOB of job ""+ jobId+ "" (last tried ""+ storageFile.getAbsolutePath()+ ""."";throw new IOException(message);} else {if (LOG.isDebugEnabled()) {}}}}}"	2
5400	public class A {@Overridepublic void evaluate(RangerAccessRequest request, RangerAccessResult result) {if (LOG.isDebugEnabled()) {}if (request != null && result != null) {if (!result.getIsAuditedDetermined()) {if (matchResource(request)) {evaluatePolicyItems(request, result);}}}if (LOG.isDebugEnabled()) {}}}	2
5401	"public class A {@Overridepublic CatalogItem<T, SpecT> apply(@Nullable CatalogItemDo<T, SpecT> item) {if (item == null) return null;CatalogItemDtoAbstract<T, SpecT> dto = (CatalogItemDtoAbstract<T, SpecT>) item.getDto();String version = getFirstAs(catalogMetadata, String.class, ""version"").orNull();if (Strings.isNonBlank(version)) dto.setVersion(version);Collection<CatalogBundle> libraryBundles = MutableSet.of();if (!isNoBundleOrSimpleWrappingBundle(mgmt, containingBundle)) {libraryBundles.add(new CatalogBundleDto(containingBundle.getSymbolicName(),containingBundle.getSuppliedVersionString(),null));}libraryBundles.addAll(dto.getLibraries());Object librariesInherited;librariesInherited = catalogMetadata.get(""brooklyn.libraries"");if (librariesInherited instanceof Collection) {libraryBundles.addAll(resolveWherePossible(mgmt, CatalogItemDtoAbstract.parseLibraries((Collection<?>) librariesInherited)));}librariesInherited = catalogMetadata.get(""libraries"");if (librariesInherited instanceof Collection) {libraryBundles.addAll(resolveWherePossible(mgmt, CatalogItemDtoAbstract.parseLibraries((Collection<?>) librariesInherited)));}dto.setLibraries(libraryBundles);if (containingBundle != null && dto.getContainingBundle() == null) {dto.setContainingBundle(containingBundle.getVersionedName());}dto.setSymbolicName(dto.getJavaType());switch (dto.getCatalogItemType()) {case TEMPLATE:case APPLICATION:case ENTITY:dto.setPlanYaml(""services: [{ type: "" + dto.getJavaType() + "" }]"");break;case POLICY:dto.setPlanYaml(POLICIES_KEY + "": [{ type: "" + dto.getJavaType() + "" }]"");break;case ENRICHER:dto.setPlanYaml(ENRICHERS_KEY + "": [{ type: "" + dto.getJavaType() + "" }]"");break;case LOCATION:dto.setPlanYaml(LOCATIONS_KEY + "": [{ type: "" + dto.getJavaType() + "" }]"");break;default:throw new IllegalStateException(""Not supported to create a catalog item ""+ dto.getCatalogItemId()+ "" from: ""+ dto.getCatalogItemType());}dto.setJavaType(null);return dto;}}"	1
5402	public class A {private void activateSpatialFilter(String typeKey, CustomFilterType filter, Collection<Object> filtersForState) {SpatialOpsType spatialType = filter.getSpatialOps().getValue();if (spatialType instanceof BinarySpatialOpType) {BinarySpatialOpType binarySpatial = (BinarySpatialOpType) spatialType;AbstractGeometryType geometry = binarySpatial.getGeometry().getValue();Geometry jtsGeom = JTSGMLUtilities.convertGeometry(geometry);myFilterRegistry.addSpatialLoadFilter(typeKey, jtsGeom);filtersForState.add(typeKey);} else if (spatialType != null) {}}}	1
5403	"public class A {private void deleteChunk(Container container, BlockID blockID, ChunkInfo info, boolean verifyLength)throws StorageContainerException {checkLayoutVersion(container);Preconditions.checkNotNull(blockID, ""Block ID cannot be null."");File file = getChunkFile(container, blockID, info);if (!file.exists()) {return;}if (verifyLength) {Preconditions.checkNotNull(info, ""Chunk info cannot be null for single "" + ""chunk delete"");checkFullDelete(info, file);}FileUtil.fullyDelete(file);}}"	2
5404	public class A {private String deprecated(Method method, Supplier<String> supplier, String warning) {String deprecatedBy = supplier.get();String deprecated = null;if (method.isAnnotationPresent(Deprecated.class)) {deprecated = deprecatedBy;} else if (!deprecatedBy.isEmpty()) {deprecated = deprecatedBy;}return deprecated;}}	1
5405	public class A {@Overridepublic boolean handleActivating(DataGroupInfo dgi, io.opensphere.core.util.lang.PhasedTaskCanceller canceller)throws io.opensphere.mantle.data.DataGroupActivationException, InterruptedException {if (dgi.hasMembers(false)) {for (DataTypeInfo dti : dgi.getMembers(false)) {if (dti instanceof CSVDataTypeInfo) {CSVDataSource fileSource = ((CSVDataTypeInfo) dti).getFileSource();if (fileSource.isParticipating()) {if (!myCSVFileHandler.updateDataSource(fileSource)) {return false;}} else {if (!myCSVFileHandler.addDataSource(fileSource)) {return false;}}}}}return true;}}	1
5406	"public class A {private List<FileItem> importFiles(File base) throws Exception {List<FileItem> result = new ArrayList<>();final Map<Long, Long> folders = new HashMap<>();saveTree(base,""fileExplorerItems.xml"",FILE_LIST_NODE,FILE_NODE,FileItem.class,folders,file -> {Long fId = file.getId();file.setId(null);checkHash(file, fileItemDao, null);file = fileItemDao.update(file);if (BaseFileItem.Type.FOLDER == file.getType()) {folders.put(fId, file.getId());}result.add(file);fileItemMap.put(fId, file.getId());});return result;}}"	1
5407	public class A {@Overridepublic void onMessage(Message message) {if (countMessages++ >= maximumReceiveMessages && maximumReceiveMessages != 0) {try {consumer.setMessageListener(null);} catch (JMSException ex) {}return;}}}	2
5408	public class A {@Transactional@Overridepublic ImportReport importGml(InputStream inputStream, MetadataImportParams importParams) {ImportReport importReport = new ImportReport();if (!importParams.getImportStrategy().isUpdate()) {importParams.setImportStrategy(ImportStrategy.UPDATE);}PreProcessingResult preProcessed = preProcessGml(inputStream);if (preProcessed.isSuccess && preProcessed.metaData != null) {importParams.addMetadata(schemaService.getMetadataSchemas(), preProcessed.metaData);importReport = importService.importMetadata(importParams);} else {Throwable throwable = preProcessed.throwable;notifier.notify(importParams.getId(),NotificationLevel.ERROR,createNotifierErrorMessage(throwable),false);importReport.setStatus(Status.ERROR);ObjectReport objectReport = new ObjectReport(getClass(), 0);objectReport.addErrorReport(new ErrorReport(getClass(),new ErrorMessage(ErrorCode.E7010, createNotifierErrorMessage(throwable))));TypeReport typeReport = new TypeReport(getClass());typeReport.addObjectReport(objectReport);importReport.addTypeReport(typeReport);}return importReport;}}	2
5409	public class A {@Overridepublic JPAObject getJPAObject(String oid) throws EDBException {synchronized (entityManager) {return getJPAObject(oid, System.currentTimeMillis());}}}	1
5410	public class A {public static <T> T invokeMethodWithProperties(T object, Collection<KeyValueProperty> properties) {Class<?> clazz = object.getClass();if (properties != null) {for (KeyValueProperty property : properties) {try {Method method = clazz.getDeclaredMethod(property.getKey(), String.class);method.invoke(object, property.getValue());} catch (Exception e) {return null;}}}return object;}}	1
5411	"public class A {@Overridepublic IRODSFile instanceIRODSFile(final String parent, final String child)throws JargonException {if (parent == null) {throw new JargonException(""parent is null"");}if (child == null) {throw new JargonException(""child is null"");}if (child.isEmpty() && parent.isEmpty()) {throw new JargonException(""both child and parent names are blank"");}if (child.isEmpty()) {return instanceIRODSFile(parent);}IRODSFileSystemAO irodsFileSystem =new IRODSFileSystemAOImpl(getIRODSSession(), getIRODSAccount());if (parent.isEmpty() && child.equals(""/"")) {return new IRODSFileImpl(child, irodsFileSystem);} else {return new IRODSFileImpl(parent, child, irodsFileSystem);}}}"	3
5412	public class A {public void start(LensEventService service) {if (service == null) {}}}	1
5413	public class A {@Overridepublic List<Broker> findLeaderBroker(String topic, String namespace) {List<PartitionGroup> partitionGroups = findPartitionGroupLeaderBroker(topic, namespace);if (null == partitionGroups) {return null;}if (NullUtil.isEmpty(partitionGroups)) {return Collections.EMPTY_LIST;}Set<Integer> brokerIds =partitionGroups.stream().map(partitionGroup -> partitionGroup.getLeader()).collect(Collectors.toSet());List<Broker> brokers = null;try {brokers = brokerNameServerService.getByIdsBroker(new ArrayList<>(brokerIds));} catch (Exception e) {}if (NullUtil.isEmpty(brokers)) {if (brokers == null) brokers = new ArrayList<>();}return brokers;}}	1
5414	"public class A {private String retrieveFeedbackPanelId() {Page page = null;BootstrapFeedbackPanel feedbackPanel = null;String feedbackPanelId = """";try {page = getPage();} catch (WicketRuntimeException e) {}if (page != null) {feedbackPanel =getPage().visitChildren(BootstrapFeedbackPanel.class,new IVisitor<BootstrapFeedbackPanel, BootstrapFeedbackPanel>() {@Overridepublic void component(BootstrapFeedbackPanel aFeedbackPanel,IVisit<BootstrapFeedbackPanel> aVisit) {aVisit.stop(aFeedbackPanel);}});if (feedbackPanel != null) {feedbackPanelId = feedbackPanel.getMarkupId();}}return feedbackPanelId;}}"	1
5415	public class A {private void buildUserIndex(PartitionTxn partitionTxn, List<Index<?, String>> indices)throws LdapException {try {Cursor<Tuple<String, Entry>> cursor = master.cursor();cursor.beforeFirst();while (cursor.next()) {for (Index index : indices) {AttributeType atType = index.getAttribute();String attributeOid = index.getAttribute().getOid();if (systemIndices.get(attributeOid) != null) {continue;}Tuple<String, Entry> tuple = cursor.get();String id = tuple.getKey();Entry entry = tuple.getValue();Attribute entryAttr = entry.get(atType);if (entryAttr != null) {for (Value value : entryAttr) {index.add(partitionTxn, value.getString(), id);}presenceIdx.add(partitionTxn, attributeOid, id);}}}cursor.close();} catch (CursorException | IOException e) {throw new LdapOtherException(e.getMessage(), e);}}}	1
5416	"public class A {private void moveExistingContentInOutputPathToOldPath(Path oldPath) throws IOException {if (!fs.rename(outputPath, oldPath)) {fs.delete(tmpPath, true);throw new RuntimeException(""Error: cannot rename "" + outputPath + "" to "" + oldPath);}}}"	1
5417	"public class A {private void removeBadAttribute(Document doc) {Element documentElement = doc.getDocumentElement();if (documentElement.hasAttribute(""xmlns"")) {documentElement.removeAttribute(""xmlns"");}}}"	1
5418	"public class A {@Overridepublic void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {for (Callback cb : callbacks) {if (log.isDebugEnabled()) {}if (cb instanceof NameCallback) {NameCallback nc = (NameCallback) cb;String userDomain = this.getSpecifiedUserDomain();if (this.getUsername() != null && userDomain != null) {nc.setName(this.getUsername() + ""@"" + userDomain);}} else if (cb instanceof PasswordCallback) {PasswordCallback pc = (PasswordCallback) cb;if (this.getPassword() != null) {pc.setPassword(this.getPassword().toCharArray());}}}}}"	1
5419	public class A {void publishRetained(ClientSession targetSession, Collection<IMessagesStore.StoredMessage> messages) {for (IMessagesStore.StoredMessage storedMsg : messages) {MqttPublishMessage publishMsg = retainedPublish(storedMsg);if (storedMsg.getQos() != MqttQoS.AT_MOST_ONCE) {int packetID = targetSession.inFlightAckWaiting(storedMsg);publishMsg = retainedPublish(storedMsg, packetID);}this.messageSender.sendPublish(targetSession, publishMsg);}}}	1
5420	public class A {@Overrideprotected void doError() throws FailedActionException {TaskMonitor monitor = this.task.getTaskMonitor();monitor.onErrorExecution();if (this.task.getOnFailure() == OnFailure.RETRY) {if (this.getExecutingResources().size() >= SCHEDULING_CHANCES) {throw new FailedActionException();} else {}} else {throw new FailedActionException();}}}	6
5421	public class A {@Overridepublic void resume(List<QueueMetaData> queueMetaDatas) {if (null != queueMetaDatas && queueMetaDatas.size() > 0) {for (QueueMetaData queueMetaData : queueMetaDatas) {String shardingKey = queueMetaData.getShardingKey();String queueName = queueMetaData.getQueueName();if (StringUtils.isNotEmpty(shardingKey) && StringUtils.isNotEmpty(queueName)) {String[] s = shardingKey.split(COMMA);if (s.length == 2 && StringUtils.isNotEmpty(s[0]) && StringUtils.isNotEmpty(s[1])) {String brokerName = s[0];Integer queueId = Integer.valueOf(s[1]);MessageQueue messageQueue = new MessageQueue(queueName, brokerName, queueId);messageQueuesStateMap.remove(messageQueue);continue;}}}}}}	1
5422	public class A {@Overridepublic LSInput resolveResource(String type, String namespaceURI, String publicId, String systemId, String baseURI) {LSInputImpl input = new LSInputImpl();InputStream stream = null;try {stream = new FileInputStream(path + systemId);} catch (FileNotFoundException e) {}input.setPublicId(publicId);input.setSystemId(systemId);input.setBaseURI(baseURI);input.setCharacterStream(new InputStreamReader(stream));return input;}}	1
5423	"public class A {@Overridepublic void handleError(ClientHttpResponse response) throws IOException {val status = response.getStatusCode();switch (status) {case FORBIDDEN:throw notRetryableException(""Amazon S3 error: FORBIDDEN: If you are trying to connect to the AWS S3 Repository, you""+ "" need to be running ths ICGC client on an EC2 VM instance"",response);case REQUEST_TIMEOUT:throw notRetryableException(""Cloud error: Access refused by object store. Confirm request host is on permitted""+ "" list"",response);default:throw notRetryableException(""Unable to verify connectivity to repository: "", response);}}}"	3
5424	public class A {@Overridepublic void add(Enricher enricher) {Enricher old = findApparentlyEqualAndWarnIfNotSameUniqueTag(enrichersInternal, enricher);if (old != null) {remove(old);}CatalogUtils.setCatalogItemIdOnAddition(AbstractEntity.this, enricher);enrichersInternal.add((AbstractEnricher) enricher);((AbstractEnricher) enricher).setEntity(AbstractEntity.this);ConfigConstraints.assertValid(enricher);getManagementSupport().getEntityChangeListener().onEnricherAdded(enricher);}}	1
5425	public class A {private TimeEpoch readEpoch() throws XMLStreamException {String s = readStringBetweenTags(XTCE_EPOCH);try {return new TimeEpoch(TimeEpoch.CommonEpochs.valueOf(s));} catch (IllegalArgumentException e) {try {return new TimeEpoch(s);} catch (DateTimeParseException e1) {e1.printStackTrace();throw new XMLStreamException(e.getMessage(), xmlEvent.getLocation());}}}}	1
5426	public class A {private ArrayList<User> saveModified() {var users = new ArrayList<User>();for (User user : userDao.getUsers().values()) {if (user.isUpdated(lastStart)) {try {fileManager.overrideUserFile(user);users.add(user);} catch (Exception e) {}}}return users;}}	1
5427	public class A {private void beforeProcess(Record record) {if (isMeasuringMetrics()) {numProcessCallsMeter.mark();}if (LOG.isTraceEnabled()) {} else {}}}	2
5428	"public class A {@Overridepublic CuratorTransactionOp create(String node, Object value) throws Exception {if (value == null) {return this;}byte[] data = value.toString().getBytes(Charset.forName(""UTF-8""));curatorTransactionFinal =curatorTransactionFinal.create().withMode(CreateMode.PERSISTENT).forPath(node, data).and();return this;}}"	1
5429	public class A {@Overrideprotected void doStop() throws Exception {super.doStop();if (network != null) {network.stop();}if (executor != null) {executor.shutdown();try {boolean terminated = false;do {terminated = executor.awaitTermination(60, TimeUnit.SECONDS);} while (!terminated);} catch (InterruptedException e) {executor.shutdownNow();}}}}	2
5430	public class A {@Overridepublic void run() {Watcher watcher =new Watcher() {@Overridepublic void process(WatchedEvent event) {synchronized (_lock) {_lock.notify();}}};startDoubleCheckThread();while (_running.get()) {synchronized (_lock) {try {Stat stat = _zooKeeper.exists(_path, watcher);try {onChange.action(stat);_stat = stat;} catch (Throwable t) {}_lock.wait();} catch (KeeperException e) {if (!_running.get()) {return;}throw new RuntimeException(e);} catch (InterruptedException e) {return;}}}}}	3
5431	public class A {@Overridepublic void close() throws SQLException {if (currentResult != null) {currentResult.close();}if (currentRowBinaryResult != null) {try {currentRowBinaryResult.close();} catch (IOException e) {}}}}	1
5432	public class A {public static Indexer create(String indexDirPath) {Directory indexDirectory = null;try {indexDirectory = FSDirectory.open(new File(indexDirPath).toPath());IndexWriterConfig config = new IndexWriterConfig();config.setOpenMode(OpenMode.CREATE);IndexWriter indexWriter = new IndexWriter(indexDirectory, config);return new Indexer(indexDirectory, indexWriter);} catch (IOException e) {IOUtils.closeQuietly(indexDirectory);return null;}}}	1
5433	"public class A {public URI parseBase64DataAsUri(DataHandler dh) throws URISyntaxException {String uriString = """";try (InputStream is = dh.getInputStream();ByteArrayOutputStream baos = new ByteArrayOutputStream()) {int numRead = 1024;byte[] buf = new byte[numRead];if ((numRead = is.read(buf)) >= 0) {baos.write(buf, 0, numRead);}uriString = StringUtil.convertToStringUTF8(baos.toByteArray());} catch (IOException e) {}return new URI(uriString);}}"	1
5434	"public class A {@GET@Produces(MediaType.APPLICATION_JSON)@Path(""{eventId}/comment/{commentId}"")@RestQuery(name = ""geteventcomment"",description = ""Returns the comment with the given identifier"",returnDescription = ""Returns the comment as JSON"",pathParameters = {@RestParameter(name = ""eventId"",description = ""The event id"",isRequired = true,type = RestParameter.Type.STRING),@RestParameter(name = ""commentId"",isRequired = true,description = ""The comment identifier"",type = STRING)},responses = {@RestResponse(responseCode = SC_OK, description = ""The comment as JSON.""),@RestResponse(responseCode = SC_NOT_FOUND,description = ""No event or comment with this identifier was found."")})public Response getEventComment(@PathParam(""eventId"") String eventId, @PathParam(""commentId"") long commentId)throws NotFoundException, Exception {Opt<Event> optEvent = getIndexService().getEvent(eventId, getIndex());if (optEvent.isNone()) return notFound(""Cannot find an event with id '%s'."", eventId);try {EventComment comment = getEventCommentService().getComment(commentId);return Response.ok(comment.toJson().toJson()).build();} catch (NotFoundException e) {throw e;} catch (Exception e) {throw new WebApplicationException(e);}}}"	1
5435	public class A {@Overridepublic boolean isVisible(User user, CommerceAccount commerceAccount) {PermissionChecker permissionChecker = PermissionThreadLocal.getPermissionChecker();try {if (_modelResourcePermission.contains(permissionChecker, commerceAccount, CommerceAccountActionKeys.VIEW_MEMBERS)|| _modelResourcePermission.contains(permissionChecker, commerceAccount, CommerceAccountActionKeys.MANAGE_MEMBERS)) {return true;}} catch (PortalException portalException) {}return false;}}	1
5436	"public class A {@PayloadRoot(localPart = ""SetLightMeasurementDeviceRequest"", namespace = NAMESPACE)@ResponsePayloadpublic SetLightMeasurementDeviceResponse setLightMeasurementDevice(@OrganisationIdentification final String organisationIdentification,@RequestPayload final SetLightMeasurementDeviceRequest request,@MessagePriority final String messagePriority)throws OsgpException {final SetLightMeasurementDeviceResponse response = new SetLightMeasurementDeviceResponse();try {this.adHocManagementService.coupleLightMeasurementDeviceForSsld(organisationIdentification,request.getDeviceIdentification(),request.getLightMeasurementDeviceIdentification(),MessagePriorityEnum.getMessagePriority(messagePriority));response.setResult(OsgpResultType.OK);} catch (final Exception e) {this.handleException(e);}return response;}}"	1
5437	public class A {@Overridepublic void addSubEquipmentToEquipment(Long id, Long parentId) {equipmentCache.acquireWriteLockOnKey(parentId);try {Equipment equipment = equipmentCache.get(parentId);if (equipment.getSubEquipmentIds().contains(id)) {} else {equipment.getSubEquipmentIds().add(id);equipmentCache.putQuiet(equipment);}} finally {equipmentCache.releaseWriteLockOnKey(parentId);}}}	1
5438	public class A {private static Flux<Val> doApplyFilterStatement(int index,Val parentValue,EvaluationContext ctx,Val relativeNode,int stepId,FilterStatement statement) {if (parentValue.isObject()) {return applyFilterStatementToObject(index, parentValue.getObjectNode(), ctx, relativeNode, stepId, statement);}if (!parentValue.isArray()) {return Flux.just(parentValue);}var array = parentValue.getArrayNode();var idx = normalizeIndex(index, array.size());var elementFluxes = new ArrayList<Flux<Val>>(array.size());for (var i = 0; i < array.size(); i++) {var element = array.get(i);if (i == idx) {if (stepId == statement.getTarget().getSteps().size() - 1) {elementFluxes.add(FilterComponentImplCustom.applyFilterFunction(Val.of(element),statement.getArguments(),FunctionUtil.resolveAbsoluteFunctionName(statement.getFsteps(), ctx),ctx,parentValue,statement.isEach()));} else {elementFluxes.add(statement.getTarget().getSteps().get(stepId + 1).applyFilterStatement(Val.of(element), ctx, relativeNode, stepId + 1, statement));}} else {elementFluxes.add(doApplyFilterStatement(index, Val.of(element), ctx, relativeNode, stepId, statement));}}return Flux.combineLatest(elementFluxes, RepackageUtil::recombineArray);}}	6
5439	"public class A {@Overrideprotected void process(IItem item) throws Exception {if (caseData.isIpedReport() || !item.isToAddToCase()) return;String hash = item.getHash();if (hash == null || hash.isEmpty() || item.getLength() == null) return;ProxySever.get().disable();try (InputStream is = item.getBufferedStream()) {String fullPath =insertItem(hash, is, item.getLength(), item.getMediaType().toString(), false);if (fullPath != null) {updateDataSource(item, fullPath);}} catch (Exception e) {}if (item.getViewFile() != null) {try (InputStream is = new FileInputStream(item.getViewFile())) {String fullPath =insertItem(hash,is,item.getViewFile().length(),getMimeType(item.getViewFile().getName()),true);if (fullPath != null) {item.getMetadata().add(ElasticSearchIndexTask.PREVIEW_IN_DATASOURCE,""idInDataSource"" + ElasticSearchIndexTask.KEY_VAL_SEPARATOR + fullPath);item.getMetadata().add(ElasticSearchIndexTask.PREVIEW_IN_DATASOURCE,""type""+ ElasticSearchIndexTask.KEY_VAL_SEPARATOR+ getMimeType(item.getViewFile().getName()));}} catch (Exception e) {}}}}"	2
5440	"public class A {private void updateInternalConfig(AjaxRequestTarget target) {getModelObject().saveInternalsConfig();success(getString(""PageInternals.message.internalsConfigUpdate"",InternalsConfig.consistencyChecks,InternalsConfig.encryptionChecks,InternalsConfig.readEncryptionChecks,QNameUtil.isTolerateUndeclaredPrefixes()));target.add(getPageBase().getFeedbackPanel(), getForm());}}"	1
5441	public class A {@Overrideprotected void doSubscribe(List<String> topicNames) {if (!topicNames.isEmpty()) {topicNames.forEach(admin::createTopicIfNotExists);consumer.subscribe(topicNames);} else {consumer.unsubscribe();}}}	2
5442	public class A {public void addLicense() {License license = new License();license.setKey(LICENSE_KEY);license.setType(ResourceCategory.RC_LICENSE);license.setType(ResourceCategory.RC_LICENSE_V200);license.setType(ResourceCategory.RC_LICENSE_V500);License addedLicense = this.client.add(license);}}	1
5443	public class A {private boolean matches(String message, String pattern) {try {return Pattern.compile(pattern).matcher(message).matches();} catch (PatternSyntaxException e) {return false;}}}	1
5444	public class A {protected String resolveSystemProperty(String key) {try {String value = GeoWebCacheExtensions.getProperty(key);if (value == null) {value = System.getenv(key);}return value;} catch (Throwable ex) {if (LOGGER.isDebugEnabled()) {}return null;}}}	1
5445	"public class A {public Response deleteExchange(String exchangeName, boolean ifUnused, Subject subject) {try {boolean deleted = brokerFactory.getBroker(subject).deleteExchange(exchangeName, ifUnused);if (!deleted) {throw new NotFoundException(""Exchange "" + exchangeName + "" not found."");}return Response.ok().build();} catch (BrokerAuthException e) {throw new NotAuthorizedException(e.getMessage(), e);} catch (BrokerException e) {String message = ""Error occurred while deleting exchange "" + exchangeName + ""."";throw new InternalServerErrorException(message, e);} catch (ValidationException e) {throw new BadRequestException(e.getMessage(), e);} catch (ResourceNotFoundException e) {throw new NotFoundException(""Exchange "" + exchangeName + "" doesn't exist."", e);}}}"	1
5446	"public class A {private boolean initPlugin(PluginLoaderData plugindata) {final String initMsg = ""Loading Plugin: "" + plugindata.getId();myToolbox.getSystemToolbox().getSplashScreenManager().setInitMessage(initMsg);if (SplashScreen.getSplashScreen() != null) {}final Plugin pluginInstance = createPluginInstance(plugindata);if (pluginInstance == null) {return false;}final Class<? extends Plugin> c = pluginInstance.getClass();try {if (LOGGER.isDebugEnabled()) {final Package pkg = c.getPackage();}final long t0 = System.nanoTime();pluginInstance.initialize(plugindata, myToolbox);final long initTime = System.nanoTime() - t0;final String initTimeMessage =StringUtilities.formatTimingMessage(""Time to initialize plugin "" + plugindata.getId() + "": "", initTime);LOGGER.log(initTime > 2_000_000_000 ? Level.INFO : Level.DEBUG, initTimeMessage);final Collection<? extends Envoy> envoys = pluginInstance.getEnvoys();if (envoys != null) {final Set<Envoy> envoySet = new HashSet<>(envoys);envoySet.remove(null);myToolbox.getEnvoyRegistry().addObjectsForSource(pluginInstance, envoySet);}final Collection<? extends Transformer> transformers = pluginInstance.getTransformers();if (transformers != null) {final Set<Transformer> transformerSet = new HashSet<>(transformers);transformerSet.remove(null);myToolbox.getTransformerRegistry().addObjectsForSource(pluginInstance, transformerSet);}} catch (final Throwable t) {myToolbox.removeObjectsForSource(pluginInstance);return false;}MetaAndInstance instance = new MetaAndInstance(plugindata, pluginInstance);synchronized (myPluginInstances) {myPluginInstances.computeIfAbsent(c, k -> new ArrayList<>(1)).add(instance);}return true;}}"	3
5447	"public class A {public static boolean checkFileForHTML(String fileContent) {String strRegEx = ""<[^>]*>"";String replacedContent = """";if (fileContent != null) {replacedContent =fileContent.replaceAll(strRegEx, """").replace(""&nbsp;"", "" "").replace(""&amp;"", ""&"");}if (!replacedContent.equalsIgnoreCase(fileContent)) {return false;}return true;}}"	1
5448	"public class A {private void waitForConfirmation() throws IOException {try {channel.waitForConfirmsOrDie(endpoint.getPublisherAcknowledgementsTimeout());if (basicReturnReceived) {throw new RuntimeCamelException(""Failed to deliver message; basic.return received"");}} catch (InterruptedException | TimeoutException e) {throw new RuntimeCamelException(e);}}}"	2
5449	public class A {@Overridepublic String interpolate(String message, Context context) {String interpolatedMessage = message;try {interpolatedMessage =interpolateMessage(message, context, localeResolver.resolve(localeResolverContext));} catch (MessageDescriptorFormatException e) {}return interpolatedMessage;}}	1
5450	"public class A {public List<DocumentPermutation> getDocumentPermutations() {if (documentPermutations == null) {List<DocumentPermutation> list = new ArrayList<>();TypeMetadata metadata = getTypeMetadata();for (String classname : getDocumentPermutationClasses()) {try {Class<DocumentPermutation> clazz = (Class<DocumentPermutation>) Class.forName(classname);try {Constructor<DocumentPermutation> constructor = clazz.getConstructor(TypeMetadata.class);list.add(constructor.newInstance(metadata));} catch (IllegalAccessException | InstantiationException | InvocationTargetException e) {throw new IllegalArgumentException(""Unable to construct "" + classname + "" as a DocumentPermutation"", e);} catch (NoSuchMethodException e) {try {list.add(clazz.newInstance());} catch (InstantiationException | IllegalAccessException e2) {throw new IllegalArgumentException(""Unable to construct "" + classname + "" as a DocumentPermutation"", e2);}}} catch (ClassNotFoundException e) {throw new IllegalArgumentException(""Unable to construct "" + classname + "" as a DocumentPermutation"", e);}}this.documentPermutations = list;}return this.documentPermutations;}}"	3
5451	"public class A {@Overridepublic void deleteCategory(String code) throws ApsSystemException {Category cat = this.getCategory(code);if (cat == null || cat.getChildrenCodes().length > 0) {throw new ApsSystemException(""Error detected while removing a category"");}try {this.getCategoryDAO().deleteCategory(code);this.getCacheWrapper().deleteCategory(code);} catch (Throwable t) {throw new ApsSystemException(""Error detected while removing a category"", t);}}}"	1
5452	"public class A {private HttpResponse initiateTransactionForSend(final HttpPost post) throws IOException {if (shouldCheckProxyAuth()) {final CloseableHttpAsyncClient asyncClient = getHttpAsyncClient();final HttpGet get = createGetControllerRequest();final Future<HttpResponse> getResult = asyncClient.execute(get, null);try {final HttpResponse getResponse = getResult.get(readTimeoutMillis, TimeUnit.MILLISECONDS);} catch (final ExecutionException e) {throw toIOException(e);} catch (TimeoutException | InterruptedException e) {throw new IOException(e);}}final HttpAsyncRequestProducer asyncRequestProducer =new HttpAsyncRequestProducer() {private boolean requestHasBeenReset = false;@Overridepublic HttpHost getTarget() {return URIUtils.extractHost(post.getURI());}@Overridepublic HttpRequest generateRequest() throws IOException, HttpException {final BasicHttpEntity entity = new BasicHttpEntity();post.setEntity(entity);return post;}@Overridepublic void produceContent(ContentEncoder encoder, IOControl ioctrl) throws IOException {encoder.complete();if (shouldCheckProxyAuth() && requestHasBeenReset) {proxyAuthRequiresResend.set(true);}}@Overridepublic void requestCompleted(HttpContext context) {debugProxyAuthState(context);}@Overridepublic void failed(Exception ex) {final String msg = String.format(""Failed to create transaction for %s"", post.getURI());eventReporter.reportEvent(Severity.WARNING, EVENT_CATEGORY, msg);}@Overridepublic boolean isRepeatable() {return true;}@Overridepublic void resetRequest() throws IOException {requestHasBeenReset = true;}@Overridepublic void close() throws IOException {}};final Future<HttpResponse> responseFuture =getHttpAsyncClient().execute(asyncRequestProducer, new BasicAsyncResponseConsumer(), null);final HttpResponse response;try {response = responseFuture.get(readTimeoutMillis, TimeUnit.MILLISECONDS);} catch (final ExecutionException e) {throw toIOException(e);} catch (TimeoutException | InterruptedException e) {throw new IOException(e);}return response;}}"	5
5453	public class A {@Overridepublic void removeOfferingForObservableProperty(String observableProperty, String offering) {CacheValidation.notNullOrEmpty(OBSERVABLE_PROPERTY, observableProperty);CacheValidation.notNullOrEmpty(OFFERING, offering);this.offeringsForObservableProperties.getOrDefault(observableProperty, Collections.emptySet()).remove(offering);}}	1
5454	"public class A {@Overridepublic Path getPath(final URI uri)throws IllegalArgumentException, FileSystemNotFoundException, SecurityException {checkNotNull(""uri"", uri);checkCondition(""uri scheme not supported"",uri.getScheme().equals(getScheme()) || uri.getScheme().equals(""default""));checkURI(""uri"", uri);if (LOG.isDebugEnabled()) {}Path path;JGitFileSystem fileSystem = deepLookupFSFrom(uri);String branch = extractBranchFrom(uri);String host = buildHostFrom(fileSystem, branch);String pathStr = buildPathFrom(uri, host);path = JGitPathImpl.create(fileSystem, pathStr, host, false);return path;}}"	1
5455	public class A {@Overridepublic Scenario assembleScenario(Config matsimConfig, int year, TravelTimes travelTimes) {double populationScalingFactor = properties.transportModel.matsimScaleFactor;SiloMatsimUtils.checkSiloPropertiesAndMatsimConfigConsistency(matsimConfig, properties);Scenario scenario = ScenarioUtils.loadScenario(matsimConfig);Population matsimPopulation = scenario.getPopulation();JobDataManager jobDataManager = dataContainer.getJobDataManager();RealEstateDataManager realEstateDataManager = dataContainer.getRealEstateDataManager();for (Household household : dataContainer.getHouseholdDataManager().getHouseholds()) {if (SiloUtil.getRandomNumberAsDouble() > populationScalingFactor) {continue;}for (Person person : household.getPersons().values()) {if (person.getOccupation() != Occupation.EMPLOYED || person.getJobId() == -2) {continue;}PopulationFactory populationFactory = matsimPopulation.getFactory();org.matsim.api.core.v01.population.Person matsimAlterEgo =SiloMatsimUtils.createMatsimAlterEgo(populationFactory, person, household.getAutos());matsimPopulation.addPerson(matsimAlterEgo);Dwelling dwelling = realEstateDataManager.getDwelling(household.getDwellingId());CommuteModeChoiceMapping commuteModeChoiceMapping =commuteModeChoice.assignCommuteModeChoice(dwelling, travelTimes, household);String mode = commuteModeChoiceMapping.getMode(person).mode;if (mode.equals(TransportMode.car)) {Coord dwellingCoord = getOrRandomlyChooseDwellingCoord(dwelling);Job job = jobDataManager.getJobFromId(person.getJobId());Coord jobCoord = getOrRandomlyChooseJobCoordinate(job);createHWHPlanAndAddToAlterEgo(populationFactory, matsimAlterEgo, dwellingCoord, job, jobCoord, TransportMode.car);} else {Coord dwellingCoord = getOrRandomlyChooseDwellingCoord(dwelling);Job job = jobDataManager.getJobFromId(person.getJobId());Coord jobCoord = getOrRandomlyChooseJobCoordinate(job);createHWHPlanAndAddToAlterEgo(populationFactory, matsimAlterEgo, dwellingCoord, job, jobCoord, mode);}}}return scenario;}}	2
5456	"public class A {@Override@SuppressWarnings({""checkstyle:IllegalCatch""})public void initializeDevice() {try {final List<PortStatusMessage> portStatusMessages =primaryConnectionContext.retrieveAndClearPortStatusMessages();portStatusMessages.forEach(this::writePortStatusMessage);submitTransaction();} catch (final Exception ex) {throw new RuntimeException(String.format(""Error processing port status messages from device %s: %s"",deviceInfo.toString(), ex.toString()),ex);}final Optional<AbstractDeviceInitializer> initializer =deviceInitializerProvider.lookup(deviceInfo.getVersion());if (initializer.isPresent()) {final Future<Void> initialize =initializer.get().initialize(this,switchFeaturesMandatory,skipTableFeatures,writerProvider,convertorExecutor);try {initialize.get(DEVICE_INIT_TIMEOUT, TimeUnit.MILLISECONDS);} catch (TimeoutException ex) {initialize.cancel(true);throw new RuntimeException(String.format(""Failed to initialize device %s in %ss: %s"",deviceInfo.toString(), String.valueOf(DEVICE_INIT_TIMEOUT / 1000), ex.toString()),ex);} catch (ExecutionException | InterruptedException ex) {throw new RuntimeException(String.format(""Device %s cannot be initialized: %s"", deviceInfo.toString(), ex.toString()),ex);}} else {throw new RuntimeException(String.format(""Unsupported version %s for device %s"",deviceInfo.getVersion(), deviceInfo.toString()));}final ListenableFuture<List<Optional<FlowCapableNode>>> deviceFlowRegistryFill =getDeviceFlowRegistry().fill();Futures.addCallback(deviceFlowRegistryFill,new DeviceFlowRegistryCallback(deviceFlowRegistryFill, contextChainMastershipWatcher),MoreExecutors.directExecutor());}}"	1
5457	public class A {public StreamingContainerAgent assignContainer(ContainerResource resource, InetSocketAddress bufferServerAddr) {PTContainer container = null;for (PTContainer c : pendingAllocation) {if (c.getState() == PTContainer.State.NEW || c.getState() == PTContainer.State.KILLED) {if (c.getResourceRequestPriority() == resource.priority) {container = c;break;}}}if (container == null) {return null;}groupingManager.addNewContainerToGroupingRequest(container.getExternalId(), resource.containerId);pendingAllocation.remove(container);container.setState(PTContainer.State.ALLOCATED);if (container.getExternalId() != null) {this.containers.remove(container.getExternalId());}container.setExternalId(resource.containerId);container.host = resource.host;container.bufferServerAddress = bufferServerAddr;if (UserGroupInformation.isSecurityEnabled()) {byte[] token = AuthManager.generateToken();container.setBufferServerToken(token);}container.nodeHttpAddress = resource.nodeHttpAddress;container.setAllocatedMemoryMB(resource.memoryMB);container.setAllocatedVCores(resource.vCores);container.setStartedTime(-1);container.setFinishedTime(-1);writeJournal(container.getSetContainerState());StreamingContainerAgent sca =new StreamingContainerAgent(container, newStreamingContainerContext(container), this);containers.put(resource.containerId, sca);return sca;}}	4
5458	"public class A {@POST@Path(""/restore-db"")@Consumes(MediaType.APPLICATION_JSON)public void restoreDB(ModelData<?>... data) {final String user = context.getRemoteUser().replaceAll(WHITESPACE, ""_"");resetDBToDefault();for (ModelData<?> modelData : data) {dataMgr.store(modelData);}}}"	2
5459	public class A {@Overridepublic void remove(String key) {try (final Jedis resource = pool.getResource()) {Long entriesRemoved = resource.del(key.getBytes());}}}	1
5460	public class A {protected void initEventSink() {int groupSize = getGroupSize();if (groupSize <= 1) {eventSink = new EntryEventSink();} else {eventSink = new GroupEventSink(groupSize);}if (eventSink instanceof EntryEventSink) {((EntryEventSink) eventSink).setFilterTransactionEntry(false);((EntryEventSink) eventSink).setEventStore(getEventStore());}}}	2
5461	public class A {public byte[] downloadServiceArtifactByNames(String serviceName, String serviceVersion, String artifactName) {if (serviceName == null || serviceVersion == null || artifactName == null) {throw new ByActionStatusComponentException(ActionStatus.INVALID_CONTENT);}final String normalizedArtifactName = ValidationUtils.normalizeFileName(artifactName);Service service = validateServiceNameAndVersion(serviceName, serviceVersion);String serviceId = service.getUniqueId();if (MapUtils.isEmpty(service.getDeploymentArtifacts())&& MapUtils.isEmpty(service.getToscaArtifacts())) {throw new ByActionStatusComponentException(ActionStatus.ARTIFACT_NOT_FOUND, normalizedArtifactName);}Optional<ArtifactDefinition> foundArtifactOptl = Optional.empty();if (!MapUtils.isEmpty(service.getDeploymentArtifacts())) {foundArtifactOptl =service.getDeploymentArtifacts().values().stream().filter(a -> a.getArtifactName().equals(normalizedArtifactName)).findAny();}if ((!foundArtifactOptl.isPresent()) && !MapUtils.isEmpty(service.getToscaArtifacts())) {foundArtifactOptl =service.getToscaArtifacts().values().stream().filter(a -> a.getArtifactName().equals(normalizedArtifactName)).findAny();}if (!foundArtifactOptl.isPresent()) {throw new ByActionStatusComponentException(ActionStatus.ARTIFACT_NOT_FOUND, normalizedArtifactName);}ImmutablePair<String, byte[]> downloadArtifactEither =downloadArtifact(foundArtifactOptl.get());return downloadArtifactEither.getRight();}}	6
5462	public class A {@Overridepublic void handle(MessageTree tree) {if (m_consumer == null) {m_consumer = lookup(MessageConsumer.class);}try {m_consumer.consume(tree);} catch (Throwable e) {}}}	1
5463	public class A {@Overridepublic void process(Exchange exchange) throws Exception {if (exchange.removeProperty(DATA_MAPPER_AUTO_CONVERSION) != null) {final Message message = exchange.hasOut() ? exchange.getOut() : exchange.getIn();if (message != null && message.getBody(String.class) != null) {try {JsonNode json = JsonUtils.reader().readTree(message.getBody(String.class));if (json.isArray()) {message.setBody(JsonUtils.arrayToJsonBeans(json));}} catch (JsonParseException e) {}}}}}	1
5464	"public class A {@AfterClasspublic static void teardown() throws Exception {File sampleFile = new File(""src/test/resources/muscleSample/muscleSample.h5"");if (sampleFile.exists()) {sampleFile.delete();}}}"	1
5465	"public class A {protected boolean exists() {Connection conn = DataSourceUtil.getConnection(dataSource);try {PreparedStatement ps = conn.prepareStatement(selectSql);try {ResultSet rs = ps.executeQuery();try {return true;} finally {ResultSetUtil.close(rs);}} finally {StatementUtil.close(ps);}} catch (Exception e) {if (dialect.isTableNotFound(e)) {logger.log(""IS2JDBCGen0004"", new Object[] {fullTableName});return false;}throw new SRuntimeException(""ES2JDBCGen0027"", new Object[] {e}, e);} finally {ConnectionUtil.close(conn);}}}"	1
5466	public class A {@Overridepublic void connectionClosed() {updateStatus(ThingStatus.OFFLINE);connectionInitialized.set(false);if (initJob != null) {initJob.cancel(true);}if (monitorJob != null) {monitorJob.cancel(true);}}}	1
5467	public class A {private void notifyTransactionProgress(final int transactionId, ZigBeeTransportProgressState state) {synchronized (outstandingTransactions) {for (final ZigBeeTransaction transaction : outstandingTransactions) {networkManager.getNotificationService().execute(new Runnable() {@Overridepublic void run() {transaction.transactionStatusReceived(state, transactionId);}});}}}}	1
5468	public class A {public Class<? extends BinaryPreviewer> getPreviewerClass(final String mimeType) {Class<? extends BinaryPreviewer> previewer = null;for (Class<? extends BinaryPreviewer> candidate : previewers) {if (candidate.isAnnotationPresent(BinaryPreview.class)&& ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {previewer = candidate;}}return previewer;}}	3
5469	"public class A {public static int getFormInstanceRecordVersionsCount(HttpPrincipal httpPrincipal, long ddmFormInstanceRecordId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DDMFormInstanceRecordVersionServiceUtil.class,""getFormInstanceRecordVersionsCount"",_getFormInstanceRecordVersionsCountParameterTypes5);MethodHandler methodHandler = new MethodHandler(methodKey, ddmFormInstanceRecordId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Integer) returnObj).intValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
5470	public class A {@Overridepublic BufferedDataTable predict(final BufferedDataTable input, final PMMLPortObject model, final PredictorContext ctx)throws Exception {ExecutionContext exec = ctx.getExecutionContext();RegressionPredictorSettings settings = createSettings(m_options);List<Node> models = model.getPMMLValue().getModels(PMMLModelType.GeneralRegressionModel);if (models.isEmpty()) {List<Node> regmodels = model.getPMMLValue().getModels(PMMLModelType.RegressionModel);if (regmodels.isEmpty()) {throw new RuntimeException(NO_REG_MODEL_FOUND_MSG);}PMMLRegressionTranslator trans = new PMMLRegressionTranslator();model.initializeModelTranslator(trans);DataTableSpec spec = input.getDataTableSpec();ColumnRearranger c = createRearranger1(spec, model.getSpec(), trans);BufferedDataTable out = exec.createColumnRearrangeTable(input, c, exec);return adjustSpecOfRegressionPredictorTable(out, input, model, ctx, settings);}PMMLGeneralRegressionTranslator trans = new PMMLGeneralRegressionTranslator();model.initializeModelTranslator(trans);DataTableSpec spec = input.getDataTableSpec();ColumnRearranger c = createRearranger(trans.getContent(), model.getSpec(), spec, settings);return exec.createColumnRearrangeTable(input, c, exec);}}	2
5471	"public class A {@TestTarget(targetPlatforms = {TestTarget.PLATFORM_ALL})@Testpublic void testExecUninstallDeploymentPackage() throws Exception {assertTrue(s_cloudCallService.isConnected());assertNull(s_deploymentAdmin.getDeploymentPackage(LOCAL_BUNDLE_NAME));InputStream is = getTestDpUrl().openStream();s_deploymentAdmin.installDeploymentPackage(is);StringBuilder sb =new StringBuilder(CloudletTopic.Method.EXEC.toString()).append(""/"").append(CloudDeploymentHandlerV2.RESOURCE_UNINSTALL);KuraPayload payload = new KuraPayload();payload.addMetric(DeploymentPackageOptions.METRIC_DP_NAME, LOCAL_BUNDLE_NAME);payload.addMetric(DeploymentPackageOptions.METRIC_JOB_ID, Long.parseLong(""1111""));KuraResponsePayload resp =s_cloudCallService.call(CloudDeploymentHandlerV2.APP_ID, sb.toString(), payload, 5000);assertEquals(KuraResponsePayload.RESPONSE_CODE_OK, resp.getResponseCode());int countdown = 10000;while (countdown > 0) {Thread.sleep(1000);countdown -= 1000;}assertNull(s_deploymentAdmin.getDeploymentPackage(REMOTE_BUNDLE_NAME));}}"	1
5472	public class A {@Overridepublic void setSoLinger(int soLinger) {try {socket.setSoLinger(soLinger > 0, soLinger);} catch (SocketException e) {throw new ConfigurationException(e);}}}	1
5473	"public class A {private static String escape(String raw) {String dbEscaped = raw.replace(""!"", ""!!"").replace(""_"", ""!_"").replace(""%"", ""!%"");Matcher matcher = WILDCARD_PATTERN.matcher(dbEscaped);StringBuffer searchBuf = new StringBuffer();while (matcher.find()) {searchBuf.append(matcher.group(1));if (matcher.group(2).equals(""*"")) {searchBuf.append(""%"");} else if (matcher.group(2).equals(""?"")) {searchBuf.append(""_"");}}String searchString = (searchBuf.length() > 0 ? searchBuf.toString() : dbEscaped);return searchString;}}"	3
5474	"public class A {@Overridepublic HttpUriRequest getRedirect(HttpRequest request, HttpResponse response, HttpContext context)throws ProtocolException {URI uri = getLocationURI(request, response, context);String method = request.getRequestLine().getMethod();if (""post"".equalsIgnoreCase(method)) {try {HttpRequestWrapper httpRequestWrapper = (HttpRequestWrapper) request;httpRequestWrapper.setURI(uri);httpRequestWrapper.removeHeaders(""Content-Length"");return httpRequestWrapper;} catch (Exception e) {}return new HttpPost(uri);} else {return new HttpGet(uri);}}}"	1
5475	"public class A {@Testpublic void addField() throws Exception {final String targetClassName = ""com.navercorp.pinpoint.profiler.instrument.mock.BaseClass"";final String accessorClassName = ""com.navercorp.pinpoint.profiler.instrument.mock.BaseAccessor"";final ASMClassNodeLoader.TestClassLoader classLoader = ASMClassNodeLoader.getClassLoader();classLoader.setTargetClassName(targetClassName);classLoader.setCallbackHandler(new ASMClassNodeLoader.CallbackHandler() {@Overridepublic void handle(ClassNode classNode) {ASMClassNodeAdapter classNodeAdapter =new ASMClassNodeAdapter(pluginClassInputStreamProvider,null,getClass().getProtectionDomain(),classNode);classNodeAdapter.addField(""_$PINPOINT$_"" + JavaAssistUtils.javaClassNameToVariableName(accessorClassName),Type.getDescriptor(int.class));classNodeAdapter.addInterface(accessorClassName);ASMFieldNodeAdapter fieldNode =classNodeAdapter.getField(""_$PINPOINT$_"" + JavaAssistUtils.javaClassNameToVariableName(accessorClassName),null);classNodeAdapter.addGetterMethod(""_$PINPOINT$_getTraceInt"", fieldNode);classNodeAdapter.addSetterMethod(""_$PINPOINT$_setTraceInt"", fieldNode);}});Class<?> clazz = classLoader.loadClass(targetClassName);Object instance = clazz.newInstance();Method setMethod = clazz.getDeclaredMethod(""_$PINPOINT$_setTraceInt"", int.class);setMethod.invoke(instance, 10);Method getMethod = clazz.getDeclaredMethod(""_$PINPOINT$_getTraceInt"");int result = (Integer) getMethod.invoke(instance);}}"	1
5476	"public class A {@Testpublic void test() throws Exception {try (AccumuloClient c = Accumulo.newClient().from(getClientProperties()).build()) {c.tableOperations().create(""test"");Collection<ProcessReference> tservers =getCluster().getProcesses().get(ServerType.TABLET_SERVER);ArrayList<Integer> tserverPids = new ArrayList<>(tservers.size());for (ProcessReference tserver : tservers) {Process p = tserver.getProcess();if (!p.getClass().getName().equals(""java.lang.UNIXProcess"")) {return;}Field f = p.getClass().getDeclaredField(""pid"");f.setAccessible(true);tserverPids.add(f.getInt(p));}for (int pid : tserverPids) {assertEquals(0,Runtime.getRuntime().exec(new String[] {""kill"", ""-SIGSTOP"", Integer.toString(pid)}).waitFor());}UtilWaitThread.sleep(20 * 1000);for (int pid : tserverPids) {assertEquals(0,Runtime.getRuntime().exec(new String[] {""kill"", ""-SIGCONT"", Integer.toString(pid)}).waitFor());}SortedSet<Text> splits = new TreeSet<>();for (String split : ""a b c d e f g h i j k l m n o p q r s t u v w x y z"".split("" "")) {splits.add(new Text(split));}c.tableOperations().addSplits(""test"", splits);assertEquals(0, Iterables.size(c.createScanner(""test"", Authorizations.EMPTY)));UtilWaitThread.sleep(30 * 1000);checkBalance(c);}}}"	1
5477	"public class A {public StgG20SbdfMapping findById(sernet.gs.reveng.StgG20SbdfMappingId id) {try {StgG20SbdfMapping instance =(StgG20SbdfMapping)sessionFactory.getCurrentSession().get(""sernet.gs.reveng.StgG20SbdfMapping"", id);if (instance == null) {} else {}return instance;} catch (RuntimeException re) {throw re;}}}"	4
5478	"public class A {@SuppressWarnings(""unchecked"")protected void initTLDMappings(ServletContext servletContext, Map<String, URL> tagFileJarUrls) {Map<String, String[]> tldMappings =(Map<String, String[]>) servletContext.getAttribute(Constants.JSP_TLD_URI_TO_LOCATION_MAP);if (tldMappings != null) {return;}tldMappings = new HashMap<>();try {for (Bundle bundle : _allParticipatingBundles) {collectTLDMappings(tldMappings, tagFileJarUrls, bundle);}} catch (Exception exception) {}Map<String, String> map =(Map<String, String>) servletContext.getAttribute(""jsp.taglib.mappings"");if (map != null) {for (Map.Entry<String, String> entry : map.entrySet()) {tldMappings.put(entry.getKey(), new String[] {entry.getValue(), null});}}servletContext.setAttribute(Constants.JSP_TLD_URI_TO_LOCATION_MAP, tldMappings);}}"	1
5479	"public class A {private void dumpFalconStore(ITestResult result) throws IOException {if (Config.getBoolean(""merlin.dump.staging"", false)) {final String[] serverNames = Config.getStringArray(""servers"");for (final String serverName : serverNames) {final ColoHelper coloHelper = new ColoHelper(serverName.trim());final FileSystem clusterFs = coloHelper.getClusterHelper().getHadoopFS();final String fileNameTemp =StringUtils.join(new String[] {serverName,result.getName(),Arrays.toString(result.getParameters()),TimeUtil.dateToOozieDate(new Date()),},""-"");final String localFileName = fileNameTemp.replaceAll("":"", ""-"");clusterFs.copyToLocalFile(false, new Path(MerlinConstants.STAGING_LOCATION), new Path(localFileName));}}}}"	1
5480	public class A {protected void write(EndPoint endPoint,ByteBuffer buffer,Callback callback,ConcurrentMap<String, Object> context) {endPoint.write(callback, buffer);}}	1
5481	"public class A {@Overridepublic GroupDto updateGroup(String groupCode, String descr) {Group group = this.getGroupManager().getGroup(groupCode);if (null == group) {throw new ResourceNotFoundException(GroupValidator.ERRCODE_GROUP_NOT_FOUND, ""group"", groupCode);}group.setDescription(descr);try {this.getGroupManager().updateGroup(group);return this.getDtoBuilder().convert(group);} catch (ApsSystemException e) {throw new RestServerError(""error in update group"", e);}}}"	1
5482	"public class A {@Testpublic void testRenderProcessFormViaUIClientBoostrapRendererTest() throws Exception {String result =uiServicesClient.renderProcessForm(CONTAINER_ID, HIRING_PROCESS_ID, UIServicesClient.BOOTSTRAP_FORM_RENDERER);assertThat(result).isNotNull().isNotEmpty();assertThat(result).contains(""files/bootstrap/css/bootstrap.min.css\"" rel=\""stylesheet\"">"");assertThat(result).contains(""/files/bootstrap/js/jquery.min.js\""></script>"");assertThat(result).contains(""/files/bootstrap/js/bootstrap.min.js\""></script>"");assertThat(result).contains(""/files/js/kieserver-ui.js\""></script>"");assertThat(result).contains(""<h3 class=\""panel-title\"">hiring-taskform.frm</h3>"");assertThat(result).contains(""<input name=\""name\"" type=\""text\"" class=\""form-control\""""+ "" id=\""field_2225717094101704E12\"" placeholder=\""\"" value=\""\"" pattern=\""\""  >"");assertThat(result).contains(""<button type=\""button\"" class=\""btn btn-success\""""+ "" onclick=\""startProcess(this);\"">Submit</button>"");}}"	1
5483	"public class A {Partition toHivePartition() throws HCatException {Partition hivePtn = new Partition();hivePtn.setDbName(dbName);hivePtn.setTableName(tableName);hivePtn.setValues(values);hivePtn.setParameters(parameters);if (sd.getLocation() == null) {try {String partName =Warehouse.makePartName(HCatSchemaUtils.getFieldSchemas(hcatTable.getPartCols()), values);sd.setLocation(new Path(hcatTable.getSd().getLocation(), partName).toString());} catch (MetaException exception) {throw new HCatException(""Could not construct default partition-path for ""+ hcatTable.getDbName()+ "".""+ hcatTable.getTableName()+ ""[""+ values+ ""]"");}}hivePtn.setSd(sd);hivePtn.setCreateTime((int) (System.currentTimeMillis() / 1000));hivePtn.setLastAccessTimeIsSet(false);return hivePtn;}}"	1
5484	"public class A {private JSONObject getEntity(EntityType entityType, Object id) {if (id == null) {return null;}String urlString =ServiceUrlHelper.buildURLString(serverSettings.getServiceUrl(version), entityType, id, null, null);HttpResponse response = null;try {response = HTTPMethods.doGet(urlString);return new JSONObject(response.response);} catch (JSONException e) {Assert.fail(""An Exception occurred during testing: "" + e.getMessage());return null;}}}"	2
5485	"public class A {@Testpublic void testPasteAtFrontOf() {search1 = null;TreeMap<OdfStyleProperty, String> searchProps = new TreeMap<OdfStyleProperty, String>();searchProps.put(StyleTextPropertiesElement.FontName, ""Times New Roman1"");searchProps.put(StyleTextPropertiesElement.FontSize, ""16pt"");search1 = new TextStyleNavigation(searchProps, doc);search2 = new TextNavigation(""delete"", doc);search3 = new TextNavigation(""Roman16 Romanl16delete"", doc);TextSelection itemstyle = null;if (search1.hasNext()) {itemstyle = (TextSelection) search1.getCurrentItem();}int i = 0;if (itemstyle != null) {while (search2.hasNext()) {i++;TextSelection itemtext = (TextSelection) search2.getCurrentItem();try {itemstyle.pasteAtFrontOf(itemtext);} catch (InvalidNavigationException e) {LOG.log(Level.SEVERE, e.getMessage(), e);Assert.fail(e.getMessage());}}}int j = 0;while (search3.hasNext()) {j++;}Assert.assertTrue(i == j);try {doc.save(ResourceUtilities.getTestOutputFile(SAVE_FILE_PAST_FRONT));} catch (Exception e) {LOG.log(Level.SEVERE, e.getMessage(), e);Assert.fail(""Failed with "" + e.getClass().getName() + "": '"" + e.getMessage() + ""'"");}}}"	2
5486	"public class A {private void trustIssuer(ProviderType spConfiguration, SAML2HandlerRequest request, String issuer)throws ProcessingException {if (spConfiguration == null) throw logger.nullArgumentError(""SP Configuration"");Map<String, Object> requestOptions = request.getOptions();PicketLinkAuditHelper auditHelper =(PicketLinkAuditHelper) requestOptions.get(GeneralConstants.AUDIT_HELPER);String contextPath = (String) requestOptions.get(GeneralConstants.CONTEXT_PATH);try {String issuerDomain = getDomain(issuer);TrustType spTrust = spConfiguration.getTrust();if (spTrust != null) {String domainsTrusted = spTrust.getDomains();if (domainsTrusted.indexOf(issuerDomain) < 0) {StringTokenizer st = new StringTokenizer(domainsTrusted, "","");while (st != null && st.hasMoreTokens()) {String uriBit = st.nextToken();if (issuerDomain.indexOf(uriBit) > 0) {return;}}if (auditHelper != null) {PicketLinkAuditEvent auditEvent = new PicketLinkAuditEvent(AuditLevel.INFO);auditEvent.setWhoIsAuditing(contextPath);auditEvent.setType(PicketLinkAuditEventType.ERROR_TRUSTED_DOMAIN);auditHelper.audit(auditEvent);}throw logger.samlIssuerNotTrustedError(issuer);}} else throw logger.samlHandlerTrustElementMissingError();} catch (Exception e) {throw new ProcessingException(logger.samlIssuerNotTrustedException(e));}}}"	3
5487	public class A {protected void renameTable(String oldTableName,String newTableName,Object[][] tableColumns,String tableSqlCreate,String tableSqlDrop)throws Exception {try (LoggingTimer loggingTimer = new LoggingTimer(newTableName)) {boolean hasNewTable = hasTable(newTableName);if (hasNewTable && hasRows(newTableName)) {if (_log.isWarnEnabled()) {}return;}boolean hasOldTable = hasTable(oldTableName);if (!hasNewTable && !hasOldTable) {runSQL(tableSqlCreate);return;}if (hasNewTable) {runSQL(tableSqlDrop);}UpgradeTable upgradeTable =UpgradeTableFactoryUtil.getUpgradeTable(oldTableName, tableColumns);upgradeTable.setCreateSQL(tableSqlCreate);upgradeTable.updateTable();}}}	1
5488	public class A {@Overrideprotected Command doRun(Task task, Map<String, String> prefs) throws PackageException {if (!file.exists()) {return null;}ReloadService srv = Framework.getService(ReloadService.class);boolean useCompatReload = Framework.isBooleanPropertyTrue(ReloadService.USE_COMPAT_HOT_RELOAD);if (useCompatReload) {return doCompatRun(srv);}if (file.isDirectory()) {return _deployDirectory(file, srv);} else {return _deployFile(file, srv);}}}	1
5489	"public class A {public User updateUser(final User user) {verifyUserGroupProviderIsConfigurable();final org.apache.nifi.registry.security.authorization.User updatedUser =configurableUserGroupProvider().updateUser(userFromDTO(user));if (updatedUser == null) {throw new ResourceNotFoundException(""The specified user ID does not exist in this registry."");}return userToDTO(updatedUser);}}"	1
5490	public class A {@Overrideprotected boolean setSplits(final Connector connector, final Index index, final String namespace, final long number) {try {AccumuloUtils.setSplitsByQuantile((AccumuloDataStore) inputStoreOptions.createDataStore(),connector,namespace,index,(int) number);} catch (AccumuloException| AccumuloSecurityException| IOException| TableNotFoundException e) {return false;}return true;}}	1

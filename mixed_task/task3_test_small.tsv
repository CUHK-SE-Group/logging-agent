	code	label
3562	public class A {@Overridepublic void bindServiceInstance(String applicationName, String serviceInstanceName) {delegate.bindServiceInstance(applicationName, serviceInstanceName);}}	1
3563	public class A {protected static Semaphore registerAnnotator(Annotator decoratedAnnotator) {try {registryMutex.acquire();} catch (InterruptedException e) {return null;}Semaphore semaphore = null;try {Annotator annotator = decoratedAnnotator;while (annotator instanceof AnnotatorDecorator) {annotator = ((AnnotatorDecorator) annotator).getDecoratedAnnotator();}RegistryValue value;if (annotatorRegistry.containsKey(annotator)) {value = annotatorRegistry.get(annotator);} else {value = new RegistryValue();annotatorRegistry.put(annotator, value);}++value.usageCounter;semaphore = value.semaphore;} finally {registryMutex.release();}return semaphore;}}	1
3564	"public class A {@Overridepublic void onEvents(Collection<ConfigEvent> events) {if (!events.isEmpty()) {StringBuilder sb = new StringBuilder();sb.append(""["");events.stream().sorted(Comparator.comparing(ConfigEvent::getName)).forEach(event -> {sb.append(""\n"");sb.append(event.getName()).append(""=["");sb.append(propValueAsString(event));sb.append(""], "");sb.append(""source="");sb.append(sourceAsString(event));sb.append("", "");sb.append(""origin="");sb.append(originAsString(event));});sb.append(""\n"").append(""]"");}}}"	1
3565	public class A {@PreDestroypublic void stop() throws IOException {super.stop();if (_ftpClient != null) _ftpClient.disconnect();}}	1
3566	"public class A {protected ActionMapping processMapping(HttpServletRequest request, HttpServletResponse response, String path) throws IOException {ActionMapping mapping = (ActionMapping) moduleConfig.findActionConfig(path);if (mapping != null) {request.setAttribute(Globals.MAPPING_KEY, mapping);return (mapping);}ActionConfig[] configs = moduleConfig.findActionConfigs();for (int i = 0; i < configs.length; i++) {if (configs[i].getUnknown()) {mapping = (ActionMapping) configs[i];request.setAttribute(Globals.MAPPING_KEY, mapping);return (mapping);}}String msg = getInternal().getMessage(""processInvalid"");response.sendError(HttpServletResponse.SC_NOT_FOUND, msg);return null;}}"	1
3567	"public class A {private void bindOriginalFilenamesToRenames(File sandbox) throws IOException {long timeBindOriginalFilesStart = 0L;if (IS_TIMER_COMPSS_ENABLED) {timeBindOriginalFilesStart = System.nanoTime();}for (InvocationParam param : invocation.getParams()) {if (!param.isKeepRename()) {bindOriginalFilenameToRenames(param, sandbox);} else {String renamedFilePath = (String) param.getValue();LOGGER.debug(""Parameter keeps rename: "" + renamedFilePath);param.setRenamedName(renamedFilePath);param.setOriginalName(renamedFilePath);}}if (invocation.getTarget() != null) {InvocationParam param = invocation.getTarget();if (!param.isKeepRename()) {bindOriginalFilenameToRenames(param, sandbox);} else {String renamedFilePath = (String) param.getValue();LOGGER.debug(""Parameter keeps rename: "" + renamedFilePath);param.setRenamedName(renamedFilePath);param.setOriginalName(renamedFilePath);}}for (InvocationParam param : invocation.getResults()) {if (!param.isKeepRename()) {bindOriginalFilenameToRenames(param, sandbox);} else {String renamedFilePath = (String) param.getValue();param.setRenamedName(renamedFilePath);param.setOriginalName(renamedFilePath);}}if (IS_TIMER_COMPSS_ENABLED) {final long timeBindOriginalFilesEnd = System.nanoTime();final float timeBindOriginalFilesElapsed =(timeBindOriginalFilesEnd - timeBindOriginalFilesStart) / (float) NANO_TO_MS;}}}"	3
3568	"public class A {private void assertSendReceiveLargeMessage(JmsProvider jmsProvider,MessageProducer sender,MessageConsumer receiver,double sizeInMB,int mode,int count,List<javax.jms.Message> messages) {List<javax.jms.Message> recvd;jmsProvider.sendMessages(sender,messages,mode,javax.jms.Message.DEFAULT_PRIORITY,javax.jms.Message.DEFAULT_TIME_TO_LIVE);recvd = jmsProvider.receiveMessages(receiver, count, 2000);assertThat(""Wrong count of received messages"", recvd.size(), Matchers.is(count));}}"	2
3569	public class A {@Overridepublic List<String> getExperimentRunTags(String experimentRunId)throws InvalidProtocolBufferException {try (Session session = modelDBHibernateUtil.getSessionFactory().openSession()) {ExperimentRunEntity experimentRunObj =session.get(ExperimentRunEntity.class, experimentRunId);return experimentRunObj.getProtoObject().getTagsList();} catch (Exception ex) {if (ModelDBUtils.needToRetry(ex)) {return getExperimentRunTags(experimentRunId);} else {throw ex;}}}}	1
3570	"public class A {@Overridepublic void execute(JobExecutionContext context) throws JobExecutionException {String noteId = context.getJobDetail().getJobDataMap().getString(""noteId"");Note note = notebook.getNote(noteId);note.runAll();while (!note.isTerminated()) {try {Thread.sleep(1000);} catch (InterruptedException e) {}}boolean releaseResource = false;try {Map<String, Object> config = note.getConfig();if (config != null && config.containsKey(""releaseresource"")) {releaseResource = (boolean) note.getConfig().get(""releaseresource"");}} catch (ClassCastException e) {}if (releaseResource) {for (InterpreterSetting setting :notebook.getInterpreterSettingManager().getInterpreterSettings(note.getId())) {notebook.getInterpreterSettingManager().restart(setting.getId());}}}}"	2
3571	"public class A {public DocumentWrapper<DocumentModelList> findDocs(ServiceContext<PoxPayloadIn, PoxPayloadOut> ctx,CoreSessionInterface repoSession,List<String> docTypes,String whereClause,String orderByClause,int pageNum,int pageSize,boolean useDefaultOrderByClause,boolean computeTotal)throws DocumentNotFoundException, DocumentException {DocumentWrapper<DocumentModelList> wrapDoc = null;try {if (docTypes == null || docTypes.size() < 1) {throw new DocumentNotFoundException(""The findDocs() method must specify at least one DocumentType."");}DocumentModelList docList = null;QueryContext queryContext = new QueryContext(ctx, whereClause, orderByClause);String query = NuxeoUtils.buildNXQLQuery(docTypes, queryContext, useDefaultOrderByClause);if (logger.isDebugEnabled()) {}docList = repoSession.query(query, null, pageSize, pageSize * pageNum, computeTotal);wrapDoc = new DocumentWrapperImpl<DocumentModelList>(docList);} catch (IllegalArgumentException iae) {throw iae;} catch (Exception e) {if (logger.isDebugEnabled()) {}throw new NuxeoDocumentException(e);}return wrapDoc;}}"	2
3572	public class A {@Overridepublic void close() throws Exception {suspend();slotManagerMetricGroup.close();}}	1
3573	"public class A {private String getValidToken(String id,String sourceId,String clientId,String clientSecret,String discoveryUrl,String grantType,Map<String, String> queryParameters) {TokenEntry tokenEntry = tokenStorage.read(id, sourceId);if (tokenEntry != null&& discoveryUrl.equalsIgnoreCase(tokenEntry.getDiscoveryUrl())&& !isExpired(tokenEntry.getAccessToken())) {return tokenEntry.getAccessToken();}OIDCProviderMetadata metadata;try {metadata =OIDCProviderMetadata.parse(resourceRetriever.retrieveResource(new URL(discoveryUrl)).getContent());} catch (IOException | ParseException e) {return null;}if (tokenEntry != null&& discoveryUrl.equalsIgnoreCase(tokenEntry.getDiscoveryUrl())&& isExpired(tokenEntry.getAccessToken())&& !isExpired(tokenEntry.getRefreshToken())) {return refreshToken(id,sourceId,clientId,clientSecret,discoveryUrl,tokenEntry.getRefreshToken(),metadata);}String encodedClientIdSecret =Base64.getEncoder().encodeToString((clientId + "":"" + clientSecret).getBytes(UTF_8));return getNewAccessToken(id, sourceId, encodedClientIdSecret, discoveryUrl, grantType, queryParameters, metadata);}}"	1
3574	"public class A {protected FilterHolder getCorsFilter() {CrossOriginFilter filter = new CrossOriginFilter();FilterHolder filterHolder = new FilterHolder(filter);List<String> allowedOrigins =genericEndpointProperties.getListOfValues(RESTEndpointProperties.ENABLED_CORS_ORIGINS);StringJoiner originsJoiner = new StringJoiner("","");allowedOrigins.forEach(origin -> originsJoiner.add(origin));List<String> allowedHeaders =genericEndpointProperties.getListOfValues(RESTEndpointProperties.ENABLED_CORS_HEADERS);StringJoiner headersJoiner = new StringJoiner("","");allowedHeaders.forEach(origin -> headersJoiner.add(origin));String allowedHeadersSpec = allowedHeaders.isEmpty() ? ""*"" : headersJoiner.toString();filterHolder.setInitParameter(CrossOriginFilter.ALLOWED_HEADERS_PARAM, allowedHeadersSpec);filterHolder.setInitParameter(CrossOriginFilter.ALLOWED_ORIGINS_PARAM, originsJoiner.toString());filterHolder.setInitParameter(CrossOriginFilter.ALLOWED_METHODS_PARAM, ""GET,POST,HEAD,DELETE,PUT,OPTIONS"");return filterHolder;}}"	1
3575	public class A {@Overrideprotected void doClose(int id, String handle) throws IOException {Handle h = handles.remove(handle);ServerSession session = getServerSession();if (log.isDebugEnabled()) {}Handle nodeHandle = validateHandle(handle, h, Handle.class);SftpEventListener listener = getSftpEventListenerProxy();try {listener.closing(session, handle, nodeHandle);nodeHandle.close();listener.closed(session, handle, nodeHandle, null);} catch (IOException | RuntimeException | Error e) {listener.closed(session, handle, nodeHandle, e);throw e;} finally {nodeHandle.clearAttributes();}}}	1
3576	"public class A {@Testpublic void ff_addProjectNegativeTags() {List<String> tagsList = new ArrayList<>();tagsList.add(""Add Test Tag "" + Calendar.getInstance().getTimeInMillis());tagsList.add(""Add Test Tag 2 "" + Calendar.getInstance().getTimeInMillis());AddProjectTags addProjectTagsRequest = AddProjectTags.newBuilder().addAllTags(tagsList).build();try {projectServiceStub.addProjectTags(addProjectTagsRequest);fail();} catch (StatusRuntimeException ex) {Status status = Status.fromThrowable(ex);assertEquals(Status.INVALID_ARGUMENT.getCode(), status.getCode());}addProjectTagsRequest =AddProjectTags.newBuilder().setId(""sdasd"").addAllTags(project.getTagsList()).build();try {projectServiceStub.addProjectTags(addProjectTagsRequest);fail();} catch (StatusRuntimeException e) {checkEqualsAssert(e);}}}"	3
3577	"public class A {private void checkReferral(Response resp, String path, RequestWithPath req)throws SmbException, DfsReferral {DfsReferralData dr = null;if (!getContext().getConfig().isDfsDisabled()) {try {dr = getDfsReferrals(getContext(), path, req.getServer(), req.getDomain(), 1);} catch (CIFSException e) {throw new SmbException(""Failed to get DFS referral"", e);}}if (dr == null) {if (log.isDebugEnabled()) {}throw new SmbException(resp.getErrorCode(), null);}if (req.getDomain() != null&& getContext().getConfig().isDfsConvertToFQDN()&& dr instanceof DfsReferralDataImpl) {((DfsReferralDataImpl) dr).fixupDomain(req.getDomain());}if (log.isDebugEnabled()) {}getContext().getDfs().cache(getContext(), path, dr);throw new DfsReferral(dr);}}"	2
3578	public class A {@Overridepublic boolean isServing() {RetryPolicy retry = mRetryPolicySupplier.get();while (retry.attempt()) {try {NetworkAddressUtils.pingService(mNodeAddress, mServiceType, mConf, mUserState);return true;} catch (UnavailableException e) {} catch (AlluxioStatusException e) {throw new RuntimeException(e);}}return false;}}	3
3579	public class A {public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb,final int seqid) {final org.apache.thrift.AsyncProcessFunction fcall = this;return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() {public void onComplete(java.lang.Boolean o) {authenticateUser_result result = new authenticateUser_result();result.success = o;result.setSuccessIsSet(true);try {fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);} catch (org.apache.thrift.transport.TTransportException e) {fb.close();} catch (java.lang.Exception e) {onError(e);}}public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;authenticateUser_result result = new authenticateUser_result();if (e instanceof ThriftSecurityException) {result.sec = (ThriftSecurityException) e;result.setSecIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}};}}	6
3580	public class A {private KuraPayload createKuraPayloadFromProtoBuf(String topic, byte[] payload) {KuraPayload kuraPayload;try {kuraPayload = new CloudPayloadProtoBufDecoderImpl(payload).buildFromByteArray();} catch (Exception e) {kuraPayload = new KuraPayload();kuraPayload.setBody(payload);}return kuraPayload;}}	1
3581	"public class A {@Testpublic void scenario18Test2() throws IOException {final String testObj = ingestObj(""/rest/read_append_resource"");final String id = ""/rest/read_append_resource/"" + getRandomUniqueId();ingestObj(id);final HttpGet requestGet = getObjMethod(id);setAuth(requestGet, ""user18"");assertEquals(HttpStatus.SC_OK, getStatus(requestGet));final HttpPatch requestPatch = patchObjMethod(id);setAuth(requestPatch, ""user18"");requestPatch.setHeader(""Content-type"", ""application/sparql-update"");requestPatch.setEntity(new StringEntity(""INSERT { <> <"" + title.getURI() + ""> \""some title\"" . } WHERE {}""));assertEquals(HttpStatus.SC_FORBIDDEN, getStatus(requestPatch));ingestAcl(""fedoraAdmin"", ""/acls/18/read-append-acl.ttl"", testObj + ""/fcr:acl"");final HttpDelete requestDelete = deleteObjMethod(id);setAuth(requestDelete, ""user18"");assertEquals(HttpStatus.SC_FORBIDDEN, getStatus(requestDelete));assertEquals(HttpStatus.SC_OK, getStatus(requestGet));assertEquals(HttpStatus.SC_NO_CONTENT, getStatus(requestPatch));assertEquals(HttpStatus.SC_FORBIDDEN, getStatus(requestDelete));}}"	6
3582	"public class A {private void copytoBackUp(AmazonS3 s3client, String s3Bucket, String from, String to) {String[] keys = listKeys(s3client, s3Bucket, from);String fileName = """";for (String key : keys) {try {fileName = key.substring(key.lastIndexOf('/') + 1);s3client.copyObject(s3Bucket, key, s3Bucket, to + ""/"" + fileName);} catch (Exception e) {ErrorManageUtil.uploadError(""all"", ""all"", ""all"", e.getMessage());}}}}"	2
3583	"public class A {private StringBuilder buildExportTableArg(StringBuilder builder, CatalogTable catalog)throws FalconException {builder.append(""--skip-dist-cache"").append(ImportExportCommon.ARG_SEPARATOR);Iterator<String> itr = Splitter.on(""#"").split(catalog.getUri()).iterator();String dbTable = itr.next();String partitions = itr.next();Iterator<String> itrDbTable = Splitter.on("":"").split(dbTable).iterator();itrDbTable.next();String db = itrDbTable.next();String table = itrDbTable.next();builder.append(""--hcatalog-database"").append(ImportExportCommon.ARG_SEPARATOR).append(String.format(""${coord:databaseIn('%s')}"", FeedExportCoordinatorBuilder.EXPORT_DATAIN_NAME)).append(ImportExportCommon.ARG_SEPARATOR);builder.append(""--hcatalog-table"").append(ImportExportCommon.ARG_SEPARATOR).append(String.format(""${coord:tableIn('%s')}"", FeedExportCoordinatorBuilder.EXPORT_DATAIN_NAME)).append(ImportExportCommon.ARG_SEPARATOR);Map<String, String> partitionsMap = ImportExportCommon.getPartitionKeyValues(partitions);if (partitionsMap.size() > 0) {StringBuilder partitionKeys = new StringBuilder();StringBuilder partitionValues = new StringBuilder();for (Map.Entry<String, String> e : partitionsMap.entrySet()) {partitionKeys.append(e.getKey());partitionKeys.append(',');partitionValues.append(String.format(""${coord:dataInPartitionMin('%s','%s')}"",FeedExportCoordinatorBuilder.EXPORT_DATAIN_NAME, e.getKey()));partitionValues.append(',');}if (partitionsMap.size() > 0) {partitionKeys.setLength(partitionKeys.length() - 1);partitionValues.setLength(partitionValues.length() - 1);}builder.append(""--hcatalog-partition-keys"").append(ImportExportCommon.ARG_SEPARATOR).append(partitionKeys.toString()).append(ImportExportCommon.ARG_SEPARATOR);builder.append(""--hcatalog-partition-values"").append(ImportExportCommon.ARG_SEPARATOR).append(partitionValues.toString()).append(ImportExportCommon.ARG_SEPARATOR);}return builder;}}"	3
3584	public class A {public synchronized int decrementAndGet(K key) {if (counterMap.containsKey(key)) {int tally = counterMap.get(key).decrementAndGet();return tally;} else {counterMap.put(key, new AtomicInteger(-1));return -1;}}}	2
3585	public class A {public void removeMemoryReleaseable(final MemoryReleasable obj) {if (obj != null) {synchronized (m_trackedObjectHash) {String name = obj.getClass().getName();if (m_trackedObjectHash.remove(obj) == null) {} else {}}}}}	2
3586	"public class A {@Testpublic void callSetAndGetGetAttributeArrayTypeDef() {String[] stringArray = {""Hello"", ""World""};ArrayTypeDefStruct arrayTypeDefArg = new ArrayTypeDefStruct(stringArray);genericGetterSetterTestMethod(arrayTypeDefArg, ""AttributeArrayTypeDef"");}}"	2
3587	"public class A {@SuppressWarnings(""unchecked"")public final void exceptionOnAction(AllocatableAction action, COMPSsException e) {removeFromReady(action);ResourceScheduler<WorkerResourceDescription> resource;resource = (ResourceScheduler<WorkerResourceDescription>) action.getAssignedResource();List<AllocatableAction> resourceFree;try {resourceFree = resource.unscheduleAction(action);} catch (ActionNotFoundException ex) {resourceFree = new LinkedList<>();}List<AllocatableAction> dataFreeActions = action.exception(e);for (AllocatableAction dataFreeAction : dataFreeActions) {addToReady(dataFreeAction);}workerLoadUpdate(resource);List<AllocatableAction> blockedCandidates = new LinkedList<>();handleDependencyFreeActions(dataFreeActions, resourceFree, blockedCandidates, resource);for (AllocatableAction aa : blockedCandidates) {if (!aa.hasDataPredecessors() && !aa.hasStreamProducers()) {removeFromReady(aa);}addToBlocked(aa);}}}"	1
3588	"public class A {private void validateProgressingInstances(List<String> names, EntityType entityType, String clusterName)throws AuthenticationException, IOException, URISyntaxException, InterruptedException {InstancesResult r;AbstractEntityHelper helper;if (entityType == EntityType.FEED) {helper = prism.getFeedHelper();} else {helper = prism.getProcessHelper();}for (String entityName : names) {r = helper.getProcessInstanceStatus(entityName, null);InstancesResult.Instance[] instancesFromStatus = r.getInstances();EntitySummaryResult.EntitySummary[] summaries =helper.getEntitySummary(clusterName, null).getEntitySummaryResult().getEntitySummaries();EntitySummaryResult.EntitySummary summaryItem = null;for (EntitySummaryResult.EntitySummary item : summaries) {if (item.getName().equals(entityName)) {summaryItem = item;break;}}Assert.assertNotNull(summaryItem, ""Appropriate summary not found for : "" + entityName);EntitySummaryResult.Instance[] instancesFromSummary = summaryItem.getInstances();softAssert.assertEquals(instancesFromSummary.length, 7, ""7 instances should be present in "" + ""summary."");for (EntitySummaryResult.Instance instanceFromSummary : instancesFromSummary) {softAssert.assertTrue(containsSummaryInstance(instancesFromStatus, instanceFromSummary),String.format(""Instance {%s;%s;%s} is absent in list (or differs by its properties)\n%s"",instanceFromSummary.getInstance(),instanceFromSummary.getStatus(),instanceFromSummary.getCluster(),Arrays.toString(instancesFromStatus)));}}}}"	3
3589	public class A {public void notifyAllObservers(Configuration conf) {synchronized (configurationObservers) {for (ConfigurationObserver observer : configurationObservers) {try {if (observer != null) {observer.onConfigurationChange(conf);}} catch (Throwable t) {}}}}}	2
3590	"public class A {public static void main(String[] args) {LoggingFactory.init(Level.WARN);try {Runtime.main(new String[] {""--id"", ""w1"", ""--from-launcher"", ""--log-level"", ""WARN""});WebGui webgui = (WebGui) Runtime.create(""webgui"", ""WebGui"");webgui.autoStartBrowser(false);webgui.setPort(8888);webgui.startService();Runtime.start(""python"", ""Python"");boolean done = true;if (done) {return;}MqttBroker broker = (MqttBroker) Runtime.start(""broker"", ""MqttBroker"");broker.listen();Mqtt mqtt01 = (Mqtt) Runtime.start(""mqtt01"", ""Mqtt"");mqtt01.connect(""mqtt://localhost:1883"");Runtime.start(""neo"", ""NeoPixel"");Arduino arduino = (Arduino) Runtime.start(""arduino"", ""Arduino"");arduino.connect(""/dev/ttyACM0"");for (int i = 0; i < 1000; ++i) {webgui.display(""https://i.kinja-img.com/gawker-media/image/upload/c_scale,f_auto,fl_progressive,q_80,w_800/pytutcxcrfjvuhz2jipa.jpg"");}Platform.setVirtual(true);Servo pan = (Servo) Runtime.start(""pan"", ""Servo"");Servo tilt = (Servo) Runtime.start(""tilt"", ""Servo"");pan.setPin(3);pan.setMinMax(30.0, 70.0);tilt.setPin(""D4"");arduino.attach(pan);arduino.attach(tilt);} catch (Exception e) {}}}"	2
3591	public class A {@Overridepublic void run() {try {openFolder();while (isRunning()) {try {Message[] messages = monitoringStrategy.monitor(folder);for (Message message : messages) {MessageHandler handler = new MessageHandler(message);execute(handler);}} catch (FolderClosedException ex) {if (isRunning()) {openFolder();}} catch (MessagingException ex) {}}} catch (InterruptedException ex) {Thread.currentThread().interrupt();} catch (MessagingException ex) {}}}	3
3592	public class A {public void onBecomeOfflineFromSlave(Message message, NotificationContext context) {DummyProcess.sleep(_transDelay);}}	1
3593	public class A {@Overridepublic synchronized void mark(final int readlimit) {byteBuffer.mark();}}	1
3594	public class A {private void stepThree(final int i) {BigInteger n = publicKey.getModulus();BigInteger r;BigInteger upperBound;BigInteger lowerBound;BigInteger max;BigInteger min;BigInteger[] tmp;ArrayList<Interval> ms = new ArrayList<>();for (Interval interval : m) {upperBound = step3ComputeUpperBound(si, n, interval.upper);lowerBound = step3ComputeLowerBound(si, n, interval.lower);r = lowerBound;while (r.compareTo(upperBound) < 1) {max = (BigInteger.valueOf(2).multiply(bigB)).add(r.multiply(n));tmp = max.divideAndRemainder(si);if (BigInteger.ZERO.compareTo(tmp[1]) != 0) {max = tmp[0].add(BigInteger.ONE);} else {max = tmp[0];}min = BigInteger.valueOf(3).multiply(bigB);min = min.subtract(BigInteger.ONE);min = min.add(r.multiply(n));min = min.divide(si);if (interval.lower.compareTo(max) > 0) {max = interval.lower;}if (interval.upper.compareTo(min) < 0) {min = interval.upper;}if (max.compareTo(min) <= 0) {ms.add(new Interval(max, min));}r = r.add(BigInteger.ONE);}}m = ms.toArray(new Interval[ms.size()]);}}	1
3595	"public class A {public static KeyProvider validateAndBuildRepositoryKeyProvider(RepositoryEncryptionConfiguration repositoryEncryptionConfiguration) throws IOException {try {SecretKey rootKey =KeyProviderFactory.requiresRootKey(repositoryEncryptionConfiguration.getKeyProviderImplementation())? CryptoUtils.getRootKey(): null;return buildKeyProviderFromConfig(rootKey, repositoryEncryptionConfiguration);} catch (KeyManagementException e) {String msg = ""Encountered an error building the key provider"";throw new IOException(msg, e);}}}"	1
3596	public class A {public static Long addMedicalData(String providerNo,MyOscarLoggedInInfo myOscarLoggedInInfo,MedicalDataTransfer4 medicalDataTransfer,String oscarDataType,Object localOscarObjectId,boolean completed,boolean active)throws NotAuthorisedException_Exception, UnsupportedEncodingException_Exception,InvalidRequestException_Exception {Long resultId =MedicalDataManager.addMedicalData(myOscarLoggedInInfo, medicalDataTransfer, completed, active);addSendRemoteDataLog(providerNo, oscarDataType, localOscarObjectId, medicalDataTransfer.getData());return (resultId);}}	1
3597	public class A {@Overridepublic boolean isSatisified() throws Exception {return failoverTransport.getCurrentBackups() == 1;}}	1
3598	"public class A {public void filter(RoutingContext ctx) {String phase = ctx.request().headers().get(XOkapiHeaders.FILTER);if (phase == null || phase.startsWith(""auth"")) {check(ctx);return;}ctx.response().putHeader(""X-Auth-Filter-Phase"", phase);phase = phase.split("" "")[0];String phaseHeader = ctx.request().headers().get(""X-Filter-"" + phase);if (phaseHeader != null) {ctx.response().setStatusCode(Integer.parseInt(phaseHeader));}if (ctx.request().headers().contains(""X-filter-"" + phase + ""-error"")) {ctx.response().setStatusCode(500);}if (ctx.request().headers().contains(""X-request-"" + phase + ""-error"")&& ctx.request().headers().contains(XOkapiHeaders.REQUEST_IP)&& ctx.request().headers().contains(XOkapiHeaders.REQUEST_TIMESTAMP)&& ctx.request().headers().contains(XOkapiHeaders.REQUEST_METHOD)) {ctx.response().setStatusCode(500);}echo(ctx);}}"	2
3599	public class A {public static ActivityFilter older() {return new ActivityFilter() {@Overrideprotected void start() {try {super.start();super.destroy();this.with(LAST_UPDATED_ORDERBY.clone()).direction(DIRECTION.DESC).with(POSTED_TIME_ORDERBY.clone()).direction(DIRECTION.DESC);} catch (Exception ex) {}}};}}	1
3600	"public class A {@Overridepublic void run() {WeldRequestScopeAdapter.getInstance().activateContext();WeldSessionScopeAdapter.getInstance().activateContext(httpSession);WeldConversationScopeAdapter.getInstance().activateContext(conversationState);Assert.assertFalse(conversation.isTransient());Assert.assertTrue(conversationState.isLongRunning());final ConversationScopeBean conversationScopeBean = getInstance(ConversationScopeBean.class);Assert.assertEquals(""wrong state"", conversationState.getConversationId(), conversationScopeBean.getId());WeldConversationScopeAdapter.getInstance().deactivateContext();WeldSessionScopeAdapter.getInstance().deactivateContext();WeldRequestScopeAdapter.getInstance().deactivateContext();final int runner = doneRunnerCount.incrementAndGet();}}"	1
3601	public class A {public void start() {if (mongodExecutable == null) {try {mongoPort = NetworkUtil.getAvailableLocalPort();RuntimeConfig runtimeConfig =Defaults.runtimeConfigFor(Command.MongoD, LOGGER).processOutput(ProcessOutput.getDefaultInstanceSilent()).build();MongodConfig mongodConfig =MongodConfig.builder().version(Version.V4_0_12).net(new Net(DEFAULT_MONGO_HOST, mongoPort, Network.localhostIsIPv6())).build();MongodStarter runtime = MongodStarter.getInstance(runtimeConfig);mongodExecutable = runtime.prepare(mongodConfig);mongodExecutable.start();} catch (IOException e) {}}}}	1
3602	"public class A {public int execute(final ExecutionMonitor exec) throws Exception {int exitVal;try {exec.setProgress(""Starting command"");Runtime rt = Runtime.getRuntime();exec.setProgress(""External command is running..."");final Process proc;if (m_cmds != null) {assert m_cmd == null;proc = rt.exec(m_cmds, m_envps, m_dir);} else {assert m_cmds == null;proc = rt.exec(m_cmd, m_envps, m_dir);}final MutableBoolean procDone = new MutableBoolean(false);ThreadUtils.threadWithContext(new CheckCanceledRunnable(proc, procDone, exec)).start();Thread stdErrThread =ThreadUtils.threadWithContext(new StdErrCatchRunnable(proc, exec, m_extErrout));stdErrThread.setName(""ExtTool StdErr collector"");stdErrThread.start();Thread stdOutThread =ThreadUtils.threadWithContext(new StdOutCatchRunnable(proc, exec, m_extOutput));stdOutThread.setName(""ExtTool StdOut collector"");stdOutThread.start();exitVal = proc.waitFor();synchronized (procDone) {procDone.setValue(true);}exec.checkCanceled();exec.setProgress(""External command done."");String message = ""External commands terminated with exit code: "" + exitVal;if (exitVal == 0) {} else {}} catch (InterruptedException ie) {throw ie;} catch (Exception e) {throw e;} catch (Throwable t) {throw new Exception(t);}return exitVal;}}"	5
3603	public class A {void doUpdateDevice(final RoutingContext ctx) {final Span span =TracingHelper.buildServerChildSpan(tracer,TracingHandler.serverSpanContext(ctx),SPAN_NAME_UPDATE_DEVICE,getClass().getSimpleName()).start();final Future<String> tenantId =getRequestParameter(ctx, PARAM_TENANT_ID, getPredicate(config.getTenantIdPattern(), false));final Future<String> deviceId =getRequestParameter(ctx, PARAM_DEVICE_ID, getPredicate(config.getDeviceIdPattern(), false));final Future<Device> device = fromPayload(ctx);.compose(ok -> {final Optional<String> resourceVersion =Optional.ofNullable(ctx.get(KEY_RESOURCE_VERSION));return getService().updateDevice(tenantId.result(), deviceId.result(), device.result(), resourceVersion, span);}).onSuccess(operationResult -> writeResponse(ctx, operationResult, span)).onFailure(t -> failRequest(ctx, t, span)).onComplete(s -> span.finish());}}	2
3604	"public class A {@BeforeClasspublic static void init() throws Exception {httpService = NettyHttpService.builder(""test"").setHttpHandlers(new TestHandler()).build();httpService.start();discoveryService = new InMemoryDiscoveryService();discoveryService.register(ResolvingDiscoverable.of((new Discoverable(""test-service"", httpService.getBindAddress()))));proxyServer =new ServiceSocksProxy(discoveryService, (user, pass) -> USER.equals(user) && PASS.equals(pass));proxyServer.startAndWait();defaultProxySelector = ProxySelector.getDefault();Proxy proxy = new Proxy(Proxy.Type.SOCKS, proxyServer.getBindAddress());ProxySelector.setDefault(new ProxySelector() {@Overridepublic List<Proxy> select(URI uri) {return Collections.singletonList(proxy);}@Overridepublic void connectFailed(URI uri, SocketAddress sa, IOException ioe) {}});authenticator =new Authenticator() {@Overrideprotected PasswordAuthentication getPasswordAuthentication() {return new PasswordAuthentication(authUser, authPass.toCharArray());}};Authenticator.setDefault(authenticator);}}"	2
3605	public class A {protected static void setInvalid() {if (JBoss6VFS.valid == Boolean.TRUE) {JBoss6VFS.valid = Boolean.FALSE;}}}	1
3606	public class A {@Overridepublic void onError(int errno, String message) {if (logger.isDebugEnabled()) {}this.error = true;this.errorCode = errno;this.errorMessage = message;}}	1
3607	"public class A {public void exception(final LdapException e) {if (e == null) {throw new IllegalArgumentException(""Exception cannot be null for handle "" + this);}if (onException != null) {try {onException.accept(e);} catch (Exception ex) {}}exception = e;complete();}}"	1
3608	public class A {private void throwValidationError(ErrorMessage error) {throw new IllegalQueryException(error);}}	1
3609	public class A {@Overridepublic IManageablePage convertToPage(Object page) {if (page instanceof IManageablePage) {return (IManageablePage) page;}return null;}}	1
3610	public class A {@Overridepublic int authenticate(HttpServerExchange httpExchange, List<String> allowedRoles)throws Exception {ServletRequestContext servletRequestContext =httpExchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY);ServletRequest request = servletRequestContext.getServletRequest();ServletResponse response = servletRequestContext.getServletResponse();FilterChain fc =(servletRequest, servletResponse) -> {Authentication a = SecurityContextHolder.getContext().getAuthentication();if (a instanceof JwtAuthenticationToken) {boolean allowed = false;Collection<GrantedAuthority> grantedAuthorities =((JwtAuthenticationToken) a).getAuthorities();for (GrantedAuthority grantedAuthority : grantedAuthorities) {if (allowedRoles.contains(grantedAuthority.getAuthority())) {allowed = true;break;}}if (allowed) {httpExchange.putAttachment(PRINCIPAL_NAME_KEY, ((JwtAuthenticationToken) a).getName());httpExchange.setStatusCode(StatusCodes.OK);return;} else {}} else {}httpExchange.setStatusCode(StatusCodes.FORBIDDEN);};securityFilter.doFilter(request, response, fc);return httpExchange.getStatusCode();}}	4
3611	"public class A {public void close() {if (tokenPath != null) {new File(tokenPath.toUri()).delete();String checksumStr =tokenPath.getParent() + File.separator + ""."" + tokenPath.getName() + "".crc"";File checksumFile = null;try {checksumFile = new File(new URI(checksumStr));if (checksumFile.exists()) {checksumFile.delete();}} catch (URISyntaxException e) {}tokenPath = null;}}}"	1
3612	public class A {private void startPeriodicCommitTimer() {periodicCommitTimerId =vertx.setPeriodic(commitIntervalMillis,tid -> {if (!periodicCommitInvocationInProgress.compareAndSet(false, true)) {return;}runOnKafkaWorkerThread(v -> {final var offsets = getOffsetsToCommit();if (!offsets.isEmpty()) {if (log.isTraceEnabled()) {}final Consumer<String, Buffer> wrappedConsumer =getKafkaConsumer().asStream().unwrap();wrappedConsumer.commitAsync(offsets,(committedOffsets, error) -> {if (error != null) {} else {setCommittedOffsets(committedOffsets);}});} else {}periodicCommitInvocationInProgress.set(false);});});}}	5
3613	public class A {protected Level setupLogger() {final Level logLevel;if (isDebug()) {logLevel = Level.DEBUG;InternalLoggerFactory.setDefaultFactory(Slf4JLoggerFactory.INSTANCE);} else if (onlyLogErrors()) {logLevel = Level.ERROR;} else {logLevel = Level.INFO;}initializeLogging(logLevel);return logLevel;}}	1
3614	"public class A {@Overrideprotected void onInitialize() {super.onInitialize();final Form<?> form = new Form<Void>(""form"");this.add(form);AjaxButton button =new AjaxButton(""button"") {private static final long serialVersionUID = 1L;@Overrideprotected void onConfigure() {super.onConfigure();this.add(new JQueryBehavior(JQueryWidget.getSelector(this)) {private static final long serialVersionUID = 1L;@Overridepublic void onConfigure(Component component) {component.setEnabled(false);super.onConfigure(component);}});}@Overridepublic void onConfigure(JQueryBehavior behavior) {super.onConfigure(behavior);behavior.setOption(""active"", this.isEnabledInHierarchy());}@Overrideprotected void onBeforeRender() {super.onBeforeRender();}@Overridepublic void onBeforeRender(JQueryBehavior behavior) {super.onBeforeRender(behavior);}};form.add(button);}}"	4
3615	public class A {@Inject@Providespublic ConnectorAccessControl getConnectorAccessControl(FileBasedAccessControlConfig config) {if (config.getRefreshPeriod() != null) {return ForwardingConnectorAccessControl.of(memoizeWithExpiration(() -> {return new FileBasedAccessControl(config);},config.getRefreshPeriod().toMillis(),MILLISECONDS));}return new FileBasedAccessControl(config);}}	1
3616	public class A {@Overridepublic Node processExternalRequest(Request request, Boolean isIpV6) {String headerKey = extractHeaderKey(request);Node node = null;if (balancerContext.regexMap != null && balancerContext.regexMap.size() != 0) {if (logger.isDebugEnabled())for (Entry<String, KeySip> entry : balancerContext.regexMap.entrySet()) {Pattern r = Pattern.compile(entry.getKey());Matcher m = r.matcher(headerKey);if (m.find()) {node = invocationContext.sipNodeMap(isIpV6).get(entry.getValue());if (node != null) {if (logger.isDebugEnabled())return node;} else {if (logger.isDebugEnabled())}}}} else {node = userToMap.get(headerKey);headerToTimestamps.put(headerKey, System.currentTimeMillis());}if (node == null|| invocationContext.sipNodeMap(isIpV6).get(new KeySip(node, isIpV6)).isGracefulShutdown()) {if (lbConfig.getSipConfiguration().getTrafficRampupCyclePeriod() != null&& lbConfig.getSipConfiguration().getMaxWeightIndex() != null)node = getNextRampUpNode(isIpV6);else node = nextAvailableNode(isIpV6);if (node == null) return null;userToMap.put(headerKey, node);if (logger.isDebugEnabled()) {}} else {if (!invocationContext.sipNodeMap(isIpV6).containsValue(node)) {node = selectNewNode(node, headerKey, isIpV6);} else {if (logger.isDebugEnabled()) {}}}return node;}}	5
3617	"public class A {@Overridepublic void run() {if (AppConfig.get().isMaintenanceMode()) {return;}JavaJob job = new JavaJob();job.setCurrentDirectory(logDir);job.addjarDir(new File(sce.getServletContext().getRealPath(""/WEB-INF/lib"")));job.addClassPathDir(new File(sce.getServletContext().getRealPath(""/WEB-INF/classes"")));job.setMainClass(NotifyMailBat.class.getName());if (StringUtils.isNotEmpty(envValue)) {job.addEnvironment(AppConfig.getEnvKey(), envValue);}try {JobResult result = job.execute();if (LOG.isDebugEnabled()) {}if (LOG.isTraceEnabled()) {}} catch (Exception e) {}}}"	5
3618	public class A {@Overridepublic void reset(Long roomId, Long userId) {if (roomId == null) {return;}try {if (contains(roomId) && map().tryLock(roomId, 1, TimeUnit.SECONDS)) {try {onlineWbs.remove(roomId);map().delete(roomId);} finally {map().unlock(roomId);}}new Thread(() -> {ensureApplication();User u = new User();u.setId(userId);WebSocketHelper.sendRoom(new RoomMessage(roomId, u, RoomMessage.Type.WB_RELOAD));}).start();} catch (InterruptedException e) {Thread.currentThread().interrupt();}}}	1
3619	"public class A {@Overridepublic T handleRequest(HttpServletRequest request, HttpServletResponse response) {if (""POST"".equals(request.getMethod())) {String responseToken = getResponseToken(request);if (responseToken != null) {try {FedizResponse federationResponse = processSigninRequest(responseToken, request, response);if (!validateAudienceRestrictions(federationResponse.getAudience(), request.getRequestURL().toString())) {return null;}return createPrincipal(request, response, federationResponse);} catch (ProcessingException e) {}}} else {throw new RuntimeException(""Incorrect method GET for Sign-In-Response"");}return null;}}"	4
3620	"public class A {@Bean(name = ""wsDistributionAutomationInboundDomainResponsesMessageListenerContainer"")public DefaultMessageListenerContainer messageListenerContainer(@Qualifier(""wsDistributionAutomationInboundDomainResponsesMessageListener"")final MessageListener messageListener) {return this.jmsConfigurationFactory.initMessageListenerContainer(messageListener);}}"	1
3621	"public class A {@Overridepublic Object visit(PropertyIsEqualTo filter, Object data) {ExpressionValueVisitor expressionVisitor = new ExpressionValueVisitor();String propertyName = (String) filter.getExpression1().accept(expressionVisitor, data);Object literalValue = filter.getExpression2().accept(expressionVisitor, data);String mappedPropertyName = getMappedPropertyName(propertyName);return new SolrQuery(mappedPropertyName+ "":""+ QUOTE+ escapeSpecialCharacters(literalValue.toString())+ QUOTE);}}"	1
3622	"public class A {protected void deleteWorkGuiConfig(String typeCode, String stepCode, Connection conn)throws ApsSystemException {PreparedStatement stat = null;try {stat = conn.prepareStatement(DELETE_WORK_GUI);stat.setString(1, typeCode);stat.setString(2, stepCode);stat.executeUpdate();} catch (Throwable t) {throw new RuntimeException(""Error deleting work gui - typeCode "" + typeCode + "" - stepCode "" + stepCode, t);} finally {closeDaoResources(null, stat);}}}"	1
3623	"public class A {@GetMapping(CommonConstants.PATH_ID)public LogbookOperationDto getAllPaginated(@PathVariable(""id"") String id) {ParameterChecker.checkParameter(""The Identifier is a mandatory parameter: "", id);final VitamContext vitamContext =securityService.buildVitamContext(securityService.getTenantIdentifier());return ingestInternalService.getOne(vitamContext, id);}}"	1
3624	"public class A {@Overridepublic URL mapSignInRequest(RequestContext context, Idp idp, TrustedIdp trustedIdp) {String clientId = getProperty(trustedIdp, CLIENT_ID);if (clientId == null || clientId.isEmpty()) {throw new IllegalStateException(""No CLIENT_ID specified"");}String scope = getScope(trustedIdp);try {final String url =trustedIdp.getUrl()+ ""?response_type=code""+ ""&client_id=""+ clientId+ ""&redirect_uri=""+ URLEncoder.encode(idp.getIdpUrl().toString(), ""UTF-8"")+ ""&scope=""+ URLEncoder.encode(scope, ""UTF-8"")+ ""&state=""+ context.getFlowScope().getString(IdpConstants.TRUSTED_IDP_CONTEXT);return new URL(url);} catch (MalformedURLException ex) {LOG.error(""Invalid Redirect URL for Trusted Idp"", ex);throw new IllegalStateException(""Invalid Redirect URL for Trusted Idp"");} catch (UnsupportedEncodingException ex) {throw new IllegalStateException(""Invalid Redirect URL for Trusted Idp"");}}}"	3
3625	"public class A {public Object retrieve(DiskCacheReference dcr, DiskCacheFetchType ft) {if (myIsClosed) {return null;}Object result = null;myRetrieveLock.lock();try {RandomAccessFile raf = myInsertToRAFMap.get(Integer.valueOf(dcr.getInsertNum()));if (raf == null) {File cacheFile =DiskCacheAssistant.getCacheFile(myDiskCacheAssistant.getDiskCacheLocation(), myTypeId, dcr.getInsertNum());raf = new RandomAccessFile(cacheFile, ""r"");myInsertToRAFMap.put(Integer.valueOf(dcr.getInsertNum()), raf);}if (ft == DiskCacheFetchType.META_DATA) {result = decodeMetaData(raf, dcr);} else if (ft == DiskCacheFetchType.MAP_GEOMETRY_SUPPORT) {result = decodeMGS(raf, dcr);} else if (ft == DiskCacheFetchType.ORIGIN_ID) {result = decodeOriginId(raf, dcr);}} catch (IOException| BadPaddingException| IllegalBlockSizeException| ShortBufferException e) {} finally {myRetrieveLock.unlock();}return result;}}"	1
3626	public class A {public static int checkIfFeedCoordExist(AbstractEntityHelper helper, String feedName, String coordType) throws OozieClientException {int numberOfCoord = 0;final OozieClient oozieClient = helper.getOozieClient();if (OozieUtil.getBundles(oozieClient, feedName, EntityType.FEED).size() == 0) {return 0;}List<String> bundleIds = OozieUtil.getBundles(oozieClient, feedName, EntityType.FEED);for (String bundleId : bundleIds) {OozieUtil.waitForCoordinatorJobCreation(oozieClient, bundleId);List<CoordinatorJob> coords = OozieUtil.getBundleCoordinators(oozieClient, bundleId);for (CoordinatorJob coord : coords) {if (coord.getAppName().contains(coordType)) {numberOfCoord++;}}}return numberOfCoord;}}	4
3627	public class A {public void run() {CuratorFramework zk = null;List<String> nodes = null;isRunning = true;while (!stop) {try {try {zk = ZooKeeperStorage.zkOpen(appConf);nodes = getChildList(zk);for (String node : nodes) {boolean deleted = checkAndDelete(node, zk);if (!deleted) {break;}}zk.close();} catch (Exception e) {} finally {if (zk != null) zk.close();}long sleepMillis = (long) (Math.random() * interval);Thread.sleep(sleepMillis);} catch (Exception e) {isRunning = false;}}isRunning = false;}}	3
3628	public class A {@Overridepublic void onSubscribe(Subscription s) {subscription = s;subscriber.onSubscribe(this);}}	1
3629	public class A {@Overridepublic void info(String msg) {if (logger.isInfoEnabled()) {}}}	1
3630	public class A {@Overridepublic void nodeFinished(CnATreeElement node, int depth) {}}	1
3631	public class A {@Overridepublic void exists() {status = Status.EXIST;signalChildren();}}	1
3632	public class A {@Overridepublic COREEnvelopeRealTimeResponse realTimeTransaction(COREEnvelopeRealTimeRequest msg, AssertionType assertion) {return new COREEnvelopeRealTimeResponse();}}	1
3633	public class A {private ProgressTracker createProgressTracker() {ReadOperation readOperation;RemoteGrpcPortWriteOperation grpcWriteOperation;RegisterAndProcessBundleOperation bundleProcessOperation;try {readOperation = getReadOperation();} catch (Exception exn) {readOperation = null;return new NullProgressTracker();}try {grpcWriteOperation =Iterables.getOnlyElement(Iterables.filter(operations, RemoteGrpcPortWriteOperation.class));bundleProcessOperation =Iterables.getOnlyElement(Iterables.filter(operations, RegisterAndProcessBundleOperation.class));} catch (IllegalArgumentException | NoSuchElementException exn) {grpcWriteOperation = null;bundleProcessOperation = null;}if (grpcWriteOperation != null && bundleProcessOperation != null) {return new SingularProcessBundleProgressTracker(readOperation, grpcWriteOperation, bundleProcessOperation);} else {return new ReadOperationProgressTracker(readOperation);}}}	2
3634	"public class A {@Overridepublic synchronized ServerCQ executeCq(String cqName,String queryString,int cqState,ClientProxyMembershipID clientProxyId,CacheClientNotifier ccn,boolean isDurable,boolean manageEmptyRegions,int regionDataPolicy,Map emptyRegionsMap)throws CqException, RegionNotFoundException, CqClosedException {if (!isServer()) {throw new IllegalStateException(String.format(""Server side executeCq method is called on client. CqName : %s"", cqName));}String serverCqName = constructServerCqName(cqName, clientProxyId);ServerCQImpl cQuery;if (!isCqExists(serverCqName)) {cQuery =new ServerCQImpl(this, cqName, queryString, isDurable, constructServerCqName(cqName, clientProxyId));try {cQuery.registerCq(clientProxyId, ccn, cqState);if (manageEmptyRegions) {if (emptyRegionsMap != null && emptyRegionsMap.containsKey(cQuery.getBaseRegionName())) {regionDataPolicy = 0;}CacheClientProxy proxy = getCacheClientProxy(clientProxyId, ccn);ccn.updateMapOfEmptyRegions(proxy.getRegionsWithEmptyDataPolicy(), cQuery.getBaseRegionName(), regionDataPolicy);}} catch (CqException cqe) {throw cqe;}} else {cQuery = (ServerCQImpl) getCq(serverCqName);resumeCQ(cqState, cQuery);}if (logger.isDebugEnabled()) {}return cQuery;}}"	2
3635	"public class A {@SuppressFBWarnings(justification = ""try with resource will clenaup the resources"",value = {""OBL_UNSATISFIED_OBLIGATION""})public List<SuppressionRule> parseSuppressionRules(File file) throws SuppressionParseException {try (FileInputStream fis = new FileInputStream(file)) {return parseSuppressionRules(fis);} catch (SAXException | IOException ex) {throw new SuppressionParseException(ex);}}}"	1
3636	"public class A {protected void updateImportScopeIds(PortletDataContext portletDataContext,PortletPreferences portletPreferences,String key,long companyGroupId,long plid)throws Exception {String[] oldValues = portletPreferences.getValues(key, null);if (oldValues == null) {return;}StagedModelDataHandler<StagedGroup> stagedModelDataHandler =(StagedModelDataHandler<StagedGroup>)StagedModelDataHandlerRegistryUtil.getStagedModelDataHandler(StagedGroup.class.getName());Element rootElement = portletDataContext.getImportDataRootElement();Element groupIdMappingsElement = rootElement.element(""group-id-mappings"");for (Element groupIdMappingElement : groupIdMappingsElement.elements(""group-id-mapping"")) {stagedModelDataHandler.importMissingReference(portletDataContext, groupIdMappingElement);}Map<Long, Long> groupIds =(Map<Long, Long>) portletDataContext.getNewPrimaryKeysMap(Group.class);Layout layout = layoutLocalService.getLayout(plid);List<String> newValues = new ArrayList<>(oldValues.length);for (String oldValue : oldValues) {String newValue = oldValue;if (Objects.equals(oldValue, ""[$COMPANY_GROUP_SCOPE_ID$]"")) {oldValue = String.valueOf(companyGroupId);}if (Validator.isNumber(oldValue)) {long groupId = Long.valueOf(oldValue);if (groupIds.containsKey(groupId)) {groupId = groupIds.get(groupId);}Group group = groupLocalService.fetchGroup(groupId);if (group == null) {if (_log.isInfoEnabled()) {}continue;}newValue = assetPublisherHelper.getScopeId(group, portletDataContext.getScopeGroupId());}try {if (!assetPublisherWebHelper.isScopeIdSelectable(PermissionThreadLocal.getPermissionChecker(),newValue,companyGroupId,layout,false)) {continue;}newValues.add(newValue);} catch (NoSuchGroupException noSuchGroupException) {if (_log.isInfoEnabled()) {}} catch (NoSuchLayoutException noSuchLayoutException) {if (_log.isInfoEnabled()) {}} catch (PrincipalException principalException) {if (_log.isInfoEnabled()) {}}}portletPreferences.setValues(key, newValues.toArray(new String[0]));}}"	4
3637	"public class A {@Overrideprotected void doJmxRegistration(MBeanServerConnection connection) {ObjectName objName = null;try {objName =new ObjectName(service.jmxDomain+ "":type=RemoteQuery,name=""+ ObjectName.quote(service.clusterName)+ "",component=""+ ProtobufMetadataManager.OBJECT_NAME);} catch (MalformedObjectNameException e) {throw new IllegalStateException(""Failed to register protofiles"", e);}for (String protofile : service.protofiles) {byte[] descriptor;try (InputStream inputStream = getClass().getResourceAsStream(protofile)) {descriptor = Utils.readAsBytes(inputStream);} catch (IOException e) {throw new IllegalStateException(""Failed to read protofile "" + protofile, e);}try {connection.invoke(objName,""registerProtofile"",new Object[] {protofile, new String(descriptor)},new String[] {String.class.getName(), String.class.getName()});} catch (Exception e) {throw new IllegalStateException(""Failed to register protofile "" + protofile, e);}}}}"	1
3638	"public class A {@Overridepublic ComponentInstance getComponentProvidingService(Class<?> serviceClass) {RegistrationInfoImpl ri = services.get(serviceClass.getName());if (ri != null && ri.isActivated()) {return ri.getComponent();}synchronized (this) {if (ri != null && !ri.isActivated()) {if (ri.isResolved()) {try {ri.activate();return ri.getComponent();} catch (Exception e) {}} else {if (!serviceClass.getSimpleName().equals(""TypeProvider"")) {}}}}return null;}}"	2
3639	public class A {@Overridepublic void printColumns(Collection<String> col) {if (col == null) {return;}if (log.isInfoEnabled()) {}String columns = null;if (!SILENT) {if (console != null) {columns = console.formatColumns(col);}}if (columns == null) {for (String s : col) {print(s, true, true);}} else {print(columns, false, true);}}}	1
3640	"public class A {void sendCommand(String cmd) {try {if (isConnected()) {getRemote().sendString(cmd);logger.trace(""{}: sendCommand: {}"", this.getClass().getSimpleName(), cmd);} else {remoteControllerWebSocket.openConnection();getRemote().sendString(cmd);}} catch (IOException | RemoteControllerException e) {}}}"	3
3641	"public class A {@Overridepublic StreamObserver<PingRequest> pingAsyncAsync(StreamObserver<PongResponse> responseObserver) {StreamObserver<PingRequest> requestObserver =new StreamObserver<PingRequest>() {private List<PingRequest> streamRequests = new LinkedList<>();@Overridepublic void onNext(PingRequest request) {streamRequests.add(request);if (""error"".equals(request.getPingName())) {PingPongImpl.this.streamRequests.add(streamRequests);responseObserver.onError(new RuntimeException(""Requested error""));} else {PongResponse response =PongResponse.newBuilder().setPongName(""Hello "" + request.getPingName()).build();responseObserver.onNext(response);}}@Overridepublic void onError(Throwable t) {PingPongImpl.this.streamRequests.add(streamRequests);}@Overridepublic void onCompleted() {PingPongImpl.this.streamRequests.add(streamRequests);responseObserver.onCompleted();}};return requestObserver;}}"	1
3642	"public class A {public void testExampleFunctionsYamlMatch() throws IOException {Reader input =Streams.reader(new ResourceUtils(this).getResourceFromUrl(""example-with-function.yaml""));DeploymentPlan plan = platform.pdp().parseDeploymentPlan(input);Map<?, ?> cfg1 =(Map<?, ?>)plan.getServices().get(0).getCustomAttributes().get(BrooklynCampReservedKeys.BROOKLYN_CONFIG);Map<?, ?> cfg = MutableMap.copyOf(cfg1);Assert.assertEquals(cfg.remove(""literalValue1""), ""$brooklyn: is a fun place"");Assert.assertEquals(cfg.remove(""literalValue2""), ""$brooklyn: is a fun place"");Assert.assertEquals(cfg.remove(""literalValue3""), ""$brooklyn: is a fun place"");Assert.assertEquals(cfg.remove(""literalValue4""), ""$brooklyn: is a fun place"");Assert.assertEquals(cfg.remove(""$brooklyn:1""), ""key to the city"");Assert.assertTrue(cfg.isEmpty(), """" + cfg);Assert.assertEquals(plan.getName(), ""example-with-function"");Assert.assertEquals(plan.getCustomAttributes().get(""location""), ""localhost"");AssemblyTemplate at = platform.pdp().registerDeploymentPlan(plan);Assert.assertEquals(at.getName(), ""example-with-function"");Assert.assertEquals(at.getCustomAttributes().get(""location""), ""localhost"");PlatformComponentTemplate pct =at.getPlatformComponentTemplates().links().iterator().next().resolve();Object cfg2 = pct.getCustomAttributes().get(BrooklynCampReservedKeys.BROOKLYN_CONFIG);Assert.assertEquals(cfg2, cfg1);}}"	1
3643	"public class A {private void formatJSONResponse(JSONObject json) {try {JSONObject form = json.getJSONObject(""form"");putPropertyArrayToObject(form);Object fields = form.get(""field"");if (fields instanceof JSONArray) {for (int i = 0; i < ((JSONArray) fields).length(); ++i) {JSONObject field = ((JSONArray) fields).getJSONObject(i);putPropertyArrayToObject(field);}} else {putPropertyArrayToObject((JSONObject) fields);}} catch (JSONException e) {}}}"	1
3644	public class A {private TransferControlBlock checkTransferControlBlockForOptionsAndSetDefaultsIfNotSpecified(final TransferControlBlock transferControlBlock) throws JargonException {TransferControlBlock effectiveTransferControlBlock = transferControlBlock;if (effectiveTransferControlBlock == null) {effectiveTransferControlBlock = DefaultTransferControlBlock.instance();}if (effectiveTransferControlBlock.getTransferOptions() == null) {effectiveTransferControlBlock.setTransferOptions(getIRODSSession().buildTransferOptionsBasedOnJargonProperties());}return effectiveTransferControlBlock;}}	2
3645	public class A {public void handleInfoEvent(String mac, String name, String location) {try {ProcessorFactory.getProcessor(thing).processInfoUpdate(this, station, name, location);} catch (ProcessorNotFoundException e) {}}}	2
3646	"public class A {@RequestMapping(value = ""lists/experiment-optional-parameters/edit.html"",method = RequestMethod.GET)protected String showEditForm(@RequestParam(""id"") String idString,@RequestParam(""groupid"") String idString2,ModelMap model,HttpServletRequest request) {AddExperimentOptParamDefCommand data = new AddExperimentOptParamDefCommand();if (auth.userIsExperimenter() || auth.isAdmin()) {model.addAttribute(""userIsExperimenter"", true);if (idString2 != null) {int id = Integer.parseInt(idString2);data.setResearchGroupId(id);if (id != DEFAULT_ID) {String title = researchGroupDao.getResearchGroupTitle(id);data.setResearchGroupTitle(title);} else {String defaultExperimentOptParamDef =messageSource.getMessage(""label.defaultExperimentOptParamDef"",null,RequestContextUtils.getLocale(request));data.setResearchGroupTitle(defaultExperimentOptParamDef);}}if (idString != null) {int id = Integer.parseInt(idString);ExperimentOptParamDef experimentOptParamDef = experimentOptParamDefDao.read(id);data.setId(id);data.setParamName(experimentOptParamDef.getParamName());data.setParamDataType(experimentOptParamDef.getParamDataType());}model.addAttribute(""addExperimentOptParamDef"", data);return ""lists/measurationAdditionalParams/addItemForm"";} else {return ""lists/userNotExperimenter"";}}}"	1
3647	"public class A {@Overrideprotected void doReceive(Message message) throws Exception {long backgroundTaskId = (Long) message.get(BackgroundTaskConstants.BACKGROUND_TASK_ID);BackgroundTask backgroundTask = _backgroundTaskManager.fetchBackgroundTask(backgroundTaskId);if (backgroundTask == null) {return;}Map<String, Serializable> taskContextMap = backgroundTask.getTaskContextMap();boolean deleteOnCompetion =GetterUtil.getBoolean(taskContextMap.get(BackgroundTaskContextMapConstants.DELETE_ON_SUCCESS));if (!deleteOnCompetion) {return;}int status = GetterUtil.getInteger(message.get(""status""), -1);if (status == -1) {return;}if (status == BackgroundTaskConstants.STATUS_SUCCESSFUL) {if (_log.isInfoEnabled()) {}_backgroundTaskManager.deleteBackgroundTask(backgroundTaskId);}}}"	1
3648	"public class A {@Overridepublic RollbackVfModuleResponse rollbackVfModule(String aaiVnfId, String aaiVfModuleId, RollbackVfModuleRequest req)throws VnfAdapterClientException {try {return new AdapterRestClient(this.props,this.getUri(""/"" + aaiVnfId + VF_MODULES + aaiVfModuleId + ""/rollback"").build()).delete(req, RollbackVfModuleResponse.class);} catch (InternalServerErrorException e) {throw new VnfAdapterClientException(e.getMessage());}}}"	1
3649	"public class A {@ActionEvent(eventType = EventTypes.EVENT_SNAPSHOT_OFF_PRIMARY,eventDescription = ""deleting snapshot"",async = true)private boolean cleanupSnapshotOnPrimaryStore(long snapshotId) {SnapshotObject snapshotObj =(SnapshotObject) snapshotDataFactory.getSnapshot(snapshotId, DataStoreRole.Primary);if (snapshotObj == null) {snapshotDao.remove(snapshotId);return true;}if (ObjectInDataStoreStateMachine.State.Copying.equals(snapshotObj.getStatus())) {throw new InvalidParameterValueException(""Unable to delete snapshot '"" + snapshotId + ""' because it is in the copying state"");}try {snapshotObj.processEvent(Snapshot.Event.DestroyRequested);List<VolumeDetailVO> volumesFromSnapshot =volumeDetailsDaoImpl.findDetails(""SNAPSHOT_ID"", String.valueOf(snapshotId), null);if (volumesFromSnapshot.size() > 0) {try {snapshotObj.processEvent(Snapshot.Event.OperationFailed);} catch (NoTransitionException e1) {}throw new InvalidParameterValueException(""Unable to perform delete operation, Snapshot with id: "" + snapshotId + "" is in use  "");}} catch (NoTransitionException e) {return false;}try {snapshotSvr.deleteSnapshot(snapshotObj);snapshotObj.processEvent(Snapshot.Event.OperationSucceeded);UsageEventUtils.publishUsageEvent(EventTypes.EVENT_SNAPSHOT_OFF_PRIMARY,snapshotObj.getAccountId(),snapshotObj.getDataCenterId(),snapshotId,snapshotObj.getName(),null,null,0L,snapshotObj.getClass().getName(),snapshotObj.getUuid());} catch (Exception e) {try {snapshotObj.processEvent(Snapshot.Event.OperationFailed);} catch (NoTransitionException e1) {}return false;}return true;}}"	5
3650	"public class A {public void setValueAsString(String s) throws ParseException {if (getConcept() != null && !StringUtils.isBlank(s)) {String abbrev = getConcept().getDatatype().getHl7Abbreviation();if (""BIT"".equals(abbrev)) {setValueBoolean(Boolean.valueOf(s));} else if (""CWE"".equals(abbrev)) {throw new RuntimeException(""Not Yet Implemented"");} else if (""NM"".equals(abbrev) || ""SN"".equals(abbrev)) {setValueNumeric(Double.valueOf(s));} else if (""DT"".equals(abbrev)) {DateFormat dateFormat = new SimpleDateFormat(DATE_PATTERN);setValueDatetime(dateFormat.parse(s));} else if (""TM"".equals(abbrev)) {DateFormat timeFormat = new SimpleDateFormat(TIME_PATTERN);setValueDatetime(timeFormat.parse(s));} else if (""TS"".equals(abbrev)) {DateFormat datetimeFormat = new SimpleDateFormat(DATE_TIME_PATTERN);setValueDatetime(datetimeFormat.parse(s));} else if (""ST"".equals(abbrev)) {setValueText(s);} else {throw new RuntimeException(""Don't know how to handle "" + abbrev);}} else {throw new RuntimeException(""concept is null for "" + this);}}}"	1
3651	public class A {@Overridepublic boolean init(JVSTMConfig jvstmConfig) {try {initConcreteDataGrid((JvstmDataGridConfig) jvstmConfig);} catch (Exception e) {throw new RuntimeException(e);}return bootstrapIfNeeded();}}	1
3652	public class A {private void initFile(File writeOnlyFile) throws IOException {if (writeOnlyFile.exists()) {writeOnlyFile.delete();}if (!writeOnlyFile.getParentFile().exists()) {writeOnlyFile.getParentFile().mkdir();}writeOnlyFile.createNewFile();writeOnlyFile.deleteOnExit();addShutDownHook();}}	1
3653	public class A {public synchronized void removePendingHpcJob(final HpcJobInfo hpcJobInfo) {HpcAccount hpcAccount = hpcJobInfo.getHpcAccount();Set<HpcJobInfo> hpcJobInfos = pendingHpcJobInfoMap.get(hpcAccount);if (hpcJobInfos != null) {for (HpcJobInfo jobInfo : hpcJobInfos) {if (jobInfo.getId() == hpcJobInfo.getId()) {hpcJobInfos.remove(jobInfo);}}if (hpcJobInfos.isEmpty()) {pendingHpcJobInfoMap.remove(hpcAccount);} else {pendingHpcJobInfoMap.put(hpcAccount, hpcJobInfos);}}}}	4
3654	public class A {@Overrideprotected void doGet(HttpServletRequest req, HttpServletResponse resp)throws ServletException, IOException {if (!httpAuth.isAllowed(req, resp)) {return;}final long start = System.currentTimeMillis();final CollectorController collectorController = new CollectorController(collectorServer);final String application = collectorController.getApplication(req, resp);I18N.bindLocale(req.getLocale());try {if (application == null) {CollectorController.writeOnlyAddApplication(resp);return;}if (!collectorServer.isApplicationDataAvailable(application)&& HttpParameter.ACTION.getParameterFrom(req) == null) {CollectorController.writeDataUnavailableForApplication(application, resp);return;}collectorController.doMonitoring(req, resp, application);} finally {I18N.unbindLocale();if (LOGGER.isDebugEnabled()) {}}}}	1
3655	public class A {private Either<GroupDefinition, ResponseFormat> buildGroupDefinition(List<ArtifactDefinition> createdArtifacts,List<GroupDefinition> heatGroups,ArtifactTemplateInfo groupTemplateInfo,String groupName,Set<String> artifactsGroup,Set<String> artifactsUUIDGroup) {Map<String, String> members = new HashMap<>();associateMembersToArtifacts(createdArtifacts, null, heatGroups, artifactsGroup, members);List<String> artifactsList = new ArrayList<>(artifactsGroup);List<String> artifactsUUIDList = new ArrayList<>(artifactsUUIDGroup);GroupDefinition groupDefinition = new GroupDefinition();groupDefinition.setName(groupName);groupDefinition.setType(Constants.DEFAULT_GROUP_VF_MODULE);groupDefinition.setArtifacts(artifactsList);groupDefinition.setArtifactsUuid(artifactsUUIDList);if (!members.isEmpty()) {groupDefinition.setMembers(members);}List<GroupProperty> properties = new ArrayList<>();GroupProperty prop = new GroupProperty();prop.setName(Constants.IS_BASE);prop.setValue(Boolean.toString(groupTemplateInfo.isBase()));properties.add(prop);Either<GroupTypeDefinition, StorageOperationStatus> getLatestGroupTypeRes =groupTypeOperation.getLatestGroupTypeByType(Constants.DEFAULT_GROUP_VF_MODULE, true);if (getLatestGroupTypeRes.isRight()) {return Either.right(componentsUtils.getResponseFormat(componentsUtils.convertFromStorageResponse(getLatestGroupTypeRes.right().value())));}properties =createVfModuleAdditionalProperties(groupTemplateInfo.isBase(),groupName,properties,createdArtifacts,artifactsList,getLatestGroupTypeRes.left().value());groupDefinition.convertFromGroupProperties(properties);return Either.left(groupDefinition);}}	1
3656	public class A {public Signature invokeSigning() throws SignatureTokenMissingException {if (signatureToken == null) {throw new SignatureTokenMissingException();}return invokeSigningProcess();}}	1
3657	public class A {@Deprecatedpublic boolean waitForLockBean(B bean, String contextInfo) throws InterruptedException {checkBean(bean);if (!lockIfUnlockedBean(bean, contextInfo)) {synchronized (Thread.currentThread()) {waitingThreadsByKey.put(getterId.get(bean), Thread.currentThread());try {if (log.isTraceEnabled()) {}Thread.currentThread().wait();if (log.isTraceEnabled()) {}waitForLockBean(bean);} catch (InterruptedException e) {throw e;} finally {waitingThreadsByKey.removeValue(getterId.get(bean), Thread.currentThread());}}return true;}return false;}}	2
3658	public class A {@Overridepublic void onComplete(final Exchange exchange) {try {executor.submit(new RunCommand(successCommand, exchange)).get();} catch (Exception e) {}}}	1
3659	public class A {@Overridepublic synchronized void serialEvent(SerialPortEvent event) {switch (event.getEventType()) {case SerialPortEvent.DATA_AVAILABLE:try {Thread.sleep(8);} catch (InterruptedException e) {}byte[] frame = {0, 0, 0, 0, 0, 0};InputStream in = inputStream;if (in != null) {try {do {int cnt = 0;while (cnt < 6 && in.available() > 0) {final int bytes = in.read(frame, cnt, 1);if (cnt > 0 || frame[0] == 0x01) {cnt += bytes;}}int sum = checksum(frame);if (sum == (frame[5] & 0xff)) {if (logger.isTraceEnabled()) {}interpretFrame(frame);} else {if (logger.isTraceEnabled()) {}}} while (in.available() > 0);} catch (IOException e1) {}}break;default:break;}}}	3
3660	public class A {public static Type[] getGenericTypes(Field f) {if (f != null) {try {ParameterizedType pt = (ParameterizedType) f.getGenericType();return (Type[]) pt.getActualTypeArguments();} catch (Exception e) {}}return null;}}	1
3661	"public class A {public static String getVarValue(String varName,Field field,Validator validator,HttpServletRequest request,boolean required) {Var var = field.getVar(varName);if (var == null) {String msg = sysmsgs.getMessage(""variable.missing"", varName);if (required) {throw new IllegalArgumentException(msg);}if (log.isDebugEnabled()) {}return null;}ServletContext application =(ServletContext) validator.getParameterValue(SERVLET_CONTEXT_PARAM);return getVarValue(var, application, request, required);}}"	1
3662	"public class A {public List<String> listTables() throws SQLException {List<String> ret = new ArrayList<>();if (tablesCache.size() == 0) {try (Connection conn = getConnection();ResultSet rs = conn.getMetaData().getTables(null, null, null, null)) {while (rs.next()) {String name = rs.getString(TABLE_NAME);String database =rs.getString(TABLE_SCHEM) != null? rs.getString(TABLE_SCHEM): rs.getString(""TABLE_CAT"");String cacheKey = joiner.join(config.datasourceId, config.url, database, ""tables"");List<String> cachedTables = tablesCache.getIfPresent(cacheKey);if (cachedTables == null) {cachedTables = new ArrayList<>();tablesCache.put(cacheKey, cachedTables);}if (!cachedTables.contains(name)) {cachedTables.add(name);}ret.add(name);}}} else {for (Map.Entry<String, List<String>> entry : tablesCache.asMap().entrySet()) {ret.addAll(entry.getValue());}}return ret;}}"	1
3663	public class A {private ProfileEntity obtainEntity(String username) {ProfileEntity profile = null;if (!StringUtils.isEmpty(username)) {if (OrcidStringUtils.isValidOrcid(username)) {profile = profileDao.find(username);} else {try {String orcid = emailManagerReadOnly.findOrcidIdByEmail(username);if (!PojoUtil.isEmpty(orcid)) {profile = profileDao.find(orcid);}} catch (javax.persistence.NoResultException nre) {} catch (Exception e) {}}}return profile;}}	2
3664	"public class A {protected void processRequest(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)throws ServletException, IOException {try {ApplicationContext appContext =WebApplicationContextUtils.getWebApplicationContext(this.getServletContext());testcaseService = appContext.getBean(ITestCaseService.class);applicationService = appContext.getBean(IApplicationService.class);PolicyFactory policy = Sanitizers.FORMATTING.and(Sanitizers.LINKS);String test = policy.sanitize(httpServletRequest.getParameter(""test""));String testcase = policy.sanitize(httpServletRequest.getParameter(""testcase""));JSONObject export = new JSONObject();export.put(""version"", Infos.getInstance().getProjectVersion());export.put(""user"", httpServletRequest.getUserPrincipal());SimpleDateFormat formatter = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss.SSSXXX"");export.put(""date"", formatter.format(new Date()));TestCase tcInfo = testcaseService.findTestCaseByKeyWithDependency(test, testcase);ObjectMapper mapper = new ObjectMapper();JSONObject tcInfoJSON = new JSONObject(mapper.writeValueAsString(tcInfo));tcInfoJSON.remove(""bugs"");tcInfoJSON.put(""bugs"", tcInfo.getBugs());tcInfoJSON.remove(""conditionOptions"");tcInfoJSON.put(""conditionOptions"", tcInfo.getConditionOptions());JSONArray tcJA = new JSONArray();tcJA.add(tcInfoJSON);export.put(""testcases"", tcJA);Application appInfo =applicationService.convert(applicationService.readByKey(tcInfo.getApplication()));JSONObject app = new JSONObject(mapper.writeValueAsString(appInfo));export.put(""application"", app);export.put(""invariants"", new JSONArray());export.put(""applicationsObjects"", new JSONArray());export.put(""datalibs"", new JSONArray());export.put(""services"", new JSONArray());export.put(""libraryTestcases"", new JSONArray());httpServletResponse.setContentType(""application/json"");httpServletResponse.setHeader(""Content-Disposition"",""attachment; filename=\"""" + getFilename(test, testcase) + "".json\"""");httpServletResponse.getOutputStream().print(export.toString(1));} catch (CerberusException | JSONException ex) {}}}"	1
3665	public class A {public void electLeader() {jobNodeStorage.executeInLeader(LeaderNode.LATCH, new LeaderElectionExecutionCallback());}}	2
3666	"public class A {@Overridepublic List<IBaseResource> process(List<ResourcePersistentId> theResourcePersistentId) {String collect =theResourcePersistentId.stream().map(pid -> pid.getId().toString()).collect(Collectors.joining("",""));IFhirResourceDao<?> dao = myDaoRegistry.getResourceDao(myResourceType);Class<? extends IBaseResource> resourceTypeClass =myContext.getResourceDefinition(myResourceType).getImplementingClass();ISearchBuilder sb =mySearchBuilderFactory.newSearchBuilder(dao, myResourceType, resourceTypeClass);List<IBaseResource> outgoing = new ArrayList<>();sb.loadResourcesByPid(theResourcePersistentId, Collections.emptyList(), outgoing, false, null);return outgoing;}}"	2
3667	"public class A {public ExpiredObject getExpiredObject(String key) {Connection conn = null;try {conn = provider.getConnection();conn.setAutoCommit(false);PreparedStatement query =conn.prepareStatement(""select ""+ this.expiredObjectColumnName+ "", value, type, iat, exp from expired_objects where ""+ this.expiredObjectColumnName+ "" = ?"");query.setString(1, key.trim());ResultSet rs = query.executeQuery();ExpiredObject expiredObject = null;rs.next();if (!Strings.isNullOrEmpty(rs.getString(""key""))) {expiredObject =new ExpiredObject(rs.getString(""key""),rs.getString(""value""),ExpiredObjectType.fromValue(rs.getString(""type"")),new java.util.Date(rs.getTimestamp(""iat"").getTime()),new java.util.Date(rs.getTimestamp(""exp"").getTime()));}query.close();conn.commit();if (expiredObject != null) {return expiredObject;} else {return expiredObject;}} catch (Exception e) {rollbackSilently(conn);return null;} finally {IOUtils.closeSilently(conn);}}}"	3
3668	public class A {public static void skipSubTree(Logger log, XmlPullParser xpp)throws XmlPullParserException, IOException {if (log.isDebugEnabled()) {}XmlPullUtil.skipSubTree(xpp);}}	1
3669	"public class A {private void processPublishedItem(Element item) throws NodeStoreException {Element entry = item.element(""entry"");try {if (null == entry.elementText(""updated"")) {return;}String inReplyTo = null;Element reply;if (null != (reply = entry.element(""in-reply-to""))) {String[] inReplyToParts = reply.attributeValue(""ref"").split("","");inReplyTo = inReplyToParts[inReplyToParts.length - 1];}Date updatedDate = Conf.parseDate(entry.elementText(""updated""));NodeItemImpl nodeItem =new NodeItemImpl(node,GlobalItemIDImpl.toLocalId(entry.elementText(""id"")),updatedDate,entry.asXML(),inReplyTo);try {channelManager.deleteNodeItemById(node, entry.elementText(""id""));} catch (NodeStoreException e) {}channelManager.addNodeItem(nodeItem);} catch (IllegalArgumentException e) {e.printStackTrace();return;}}}"	3
3670	public class A {@Overridepublic void onEvent(SensorEvent<Number> event) {Number current = producer.sensors().get(sourceCurrentSensor);if (current == null) {return;}Number total = producer.sensors().get(sourceTotalSensor);if (total == null) {return;}Double currentDouble = current.doubleValue();Double totalDouble = total.doubleValue();if (DoubleMath.fuzzyEquals(totalDouble, 0d, EPSILON)) {return;}if (currentDouble < 0d || totalDouble < 0d) {return;}Double result = currentDouble / totalDouble;emit(targetSensor, result);}}	4
3671	public class A {protected void addSensor(Map<String, CoIotDescrSen> sensorMap, String key, String json) {try {if (!sensorMap.containsKey(key)) {CoIotDescrSen sen = gson.fromJson(json, CoIotDescrSen.class);if (sen != null) {sensorMap.put(key, sen);}}} catch (JsonSyntaxException e) {}}}	1
3672	public class A {private void initializeRegistryRoot() {try {registryRoot = registryHelper.ensureDirectory(PIPELINE_EXECUTOR_REGISTRY_PATH);} catch (Exception e) {}}}	1
3673	public class A {private void registerWatcher() {try {final byte[] layoutUpdate = mZKClient.getData(mTableLayoutFile, mWatcher, mLayoutStat);if (!Arrays.equals(mLatestLayout, layoutUpdate)) {mLatestLayout = layoutUpdate;mHandler.update(layoutUpdate);}} catch (KeeperException.NoNodeException nne) {} catch (KeeperException ke) {}}}	3
3674	"public class A {@Overridepublic void process(final Exchange exchange) throws Exception {Snmp snmp = null;TransportMapping<? extends Address> transport = null;try {if (""tcp"".equals(this.endpoint.getProtocol())) {transport = new DefaultTcpTransportMapping();} else if (""udp"".equals(this.endpoint.getProtocol())) {transport = new DefaultUdpTransportMapping();} else {throw new IllegalArgumentException(""Unknown protocol: "" + this.endpoint.getProtocol());}snmp = new Snmp(transport);PDU trap = exchange.getIn().getBody(PDU.class);trap.setErrorIndex(0);trap.setErrorStatus(0);trap.setMaxRepetitions(0);if (this.endpoint.getSnmpVersion() == SnmpConstants.version1) {trap.setType(PDU.V1TRAP);} else {trap.setType(PDU.TRAP);}snmp.send(trap, this.target);} finally {try {transport.close();} catch (Exception e) {}try {snmp.close();} catch (Exception e) {}}}}"	4
3675	public class A {public void setFilter(WorkspaceFilter filter, boolean autoSave) {try {JcrWorkspaceFilter.saveFilter(filter, defNode, autoSave);} catch (RepositoryException e) {}}}	1
3676	public class A {@Overridepublic String extract(FileEntry fileEntry, Locale locale) {try {FileVersion fileVersion = fileEntry.getFileVersion();try (InputStream inputStream = fileVersion.getContentStream(false)) {return FileUtil.extractText(inputStream, fileVersion.getFileName());}} catch (Exception exception) {return null;}}}	1
3677	"public class A {@Testpublic void callMethodWithExistingErrorEnum() {try {String wantedExceptionArg = ""ProviderRuntimeException"";testInterfaceProxy.methodWithExistingErrorEnum(wantedExceptionArg);fail(name.getMethodName() + "" - FAILED - 1st - unexpected return without exception"");return;} catch (ProviderRuntimeException e) {if (e.getMessage() == null|| !e.getMessage().endsWith(""Exception from methodWithExistingErrorEnum"")) {fail(name.getMethodName() + "" - FAILED - 1st - got invalid exception content"");return;}} catch (Exception e) {fail(name.getMethodName()+ "" - FAILED - 1st - caught unexpected exception type: ""+ e.getMessage());return;}try {String wantedExceptionArg = ""ApplicationException_1"";testInterfaceProxy.methodWithExistingErrorEnum(wantedExceptionArg);fail(name.getMethodName() + "" - FAILED - 2nd - unexpected return without exception"");return;} catch (ApplicationException e) {if (e.getError() != ExtendedErrorEnumTc.ERROR_2_3_TC2) {fail(name.getMethodName() + "" - FAILED - 2nd - unexpected exception error enum value"");return;}} catch (Exception e) {fail(name.getMethodName() + "" - FAILED - caught unexpected exception: "" + e.getMessage());return;}try {String wantedExceptionArg = ""ApplicationException_2"";testInterfaceProxy.methodWithExistingErrorEnum(wantedExceptionArg);fail(name.getMethodName() + "" - FAILED - 3rd - unexpected return without exception"");return;} catch (ApplicationException e) {if (e.getError() != ExtendedErrorEnumTc.ERROR_1_2_TC_2) {fail(name.getMethodName() + "" - FAILED - 3rd - unexpected exception error enum value"");return;}} catch (Exception e) {fail(name.getMethodName() + "" - FAILED - caught unexpected exception: "" + e.getMessage());return;}}}"	2
3678	public class A {@Overridepublic void operationComplete(ChannelFuture future) throws Exception {_lastSendResponseLatency.stop();_metric.addServingStats(_lastRequsetSizeInBytes,_lastResponseSizeInBytes,1L,false,_lastProcessingLatency.getLatencyMs(),_lastSendResponseLatency.getLatencyMs());long totalQueryTime = System.currentTimeMillis() - _requestStartTime;if (totalQueryTime > _defaultLargeQueryLatencyMs) {}_state = State.RESPONSE_SENT;}}	2
3679	"public class A {@Testpublic void testResponseUp() {WebTarget target = target().path(""logs"");String s = target.request().get(String.class);assertEquals(""Logs resource is up!"", s);}}"	1
3680	public class A {public static void removeLogFilesFromMining(OracleConnection conn) throws SQLException {try (PreparedStatement ps = conn.connection(false).prepareStatement(SqlUtils.FILES_FOR_MINING);ResultSet result = ps.executeQuery()) {Set<String> files = new LinkedHashSet<>();while (result.next()) {files.add(result.getString(1));}for (String fileName : files) {executeCallableStatement(conn, SqlUtils.deleteLogFileStatement(fileName));}}}}	1
3681	public class A {@Overrideprotected boolean handleCancellation(NotificationMessage notificationMessage) {if (MessageJsonHandler.CANCEL_METHOD.getMethodName().equals(notificationMessage.getMethod())) {Object cancelParams = notificationMessage.getParams();if (cancelParams != null) {if (cancelParams instanceof CancelParams) {String id = ((CancelParams) cancelParams).getId();CompletableFuture<?> future;synchronized (receivedRequestMap) {future = receivedRequestMap.remove(id);}if (future != null) future.cancel(true);return true;} else {}} else {}}return false;}}	4
3682	"public class A {@Overridepublic Authentication authenticate(Authentication authentication) throws AuthenticationException {try {if (null == authentication|| null == authentication.getPrincipal()|| null == authentication.getCredentials()) {throw new UsernameNotFoundException(""Invalid principal and/or credentials"");}UserDetails user =this.extractUser(authentication.getPrincipal().toString(),authentication.getCredentials().toString(),false);if (null != user) {Authentication newAuth =new UsernamePasswordAuthenticationToken(authentication.getPrincipal(),authentication.getCredentials(),user.getAuthorizations());return newAuth;} else {throw new UsernameNotFoundException(""Invalid username/password"");}} catch (AuthenticationException e) {throw e;} catch (Exception e) {throw new AuthenticationServiceException(""Error detected during user authentication"", e);}}}"	1
3683	public class A {public boolean isServiceWSDlNotExist(String serviceUrl, long synchronizingDelay)throws Exception, IOException {boolean isServiceUnDeployed = false;Calendar startTime = Calendar.getInstance();long time;while ((time = (Calendar.getInstance().getTimeInMillis() - startTime.getTimeInMillis()))< synchronizingDelay) {if (!isWSDLAvailable(serviceUrl)) {isServiceUnDeployed = true;break;}try {Thread.sleep(500);} catch (InterruptedException ignored) {}}return isServiceUnDeployed;}}	2
3684	public class A {private static String getCnd(NodeTypeDefinition def) {StringWriter out = new StringWriter();CompactNodeTypeDefWriter cndWriter =new CompactNodeTypeDefWriter(out,new CompactNodeTypeDefWriter.NamespaceMapping() {@Overridepublic String getNamespaceURI(String s) {return s;}},false);try {cndWriter.write(def);} catch (IOException e) {throw new IllegalStateException(e);}return out.toString();}}	1
3685	public class A {@Overridepublic Plugin<T> cloneMe() {SiegfriedPlugin<T> siegfriedPlugin = new SiegfriedPlugin<>();try {siegfriedPlugin.init();} catch (PluginException e) {}return siegfriedPlugin;}}	1
3686	"public class A {private IdentifierNode cutTypeIdentifier(IdentifierNode typeIdentifierNode) {try {IdentifierNode[] variableAndType =Tokenizer.tokenize(typeIdentifierNode.getModule(), SpreadsheetSymbols.TYPE_DELIMITER.toString());if (variableAndType.length > 1) {IdentifierNode[] nodes =Tokenizer.tokenize(typeIdentifierNode.getModule(), "" []\n\r"", variableAndType[1].getLocation());if (nodes.length > 0) {return nodes[0];}}} catch (OpenLCompilationException e) {SyntaxNodeException error =SyntaxNodeExceptionUtils.createError(""Cannot parse header."", typeIdentifierNode);getBindingContext().addError(error);}return null;}}"	1
3687	public class A {@Testpublic void sampleMultiple() {setupLogger(10 * Constants.SECOND_MS);doReturn(true).when(mBaseLogger).isWarnEnabled();for (int i = 0; i < 10; i++) {}}}	4
3688	public class A {public void fatal(Object message, Throwable t, Object... args) {if (log.isFatalEnabled()) {}}}	1
3689	public class A {@Overrideprotected void updateOutput() {if (!mLit) {highTurnout.getBean().setCommandedState(Turnout.CLOSED);} else if (!mFlashOn&& ((mAppearance == FLASHGREEN)|| (mAppearance == FLASHYELLOW)|| (mAppearance == FLASHRED))) {highTurnout.getBean().setCommandedState(Turnout.CLOSED);} else {switch (mAppearance) {case FLASHRED:case RED:lowTurnout.getBean().setCommandedState(Turnout.THROWN);break;case FLASHYELLOW:case YELLOW:highTurnout.getBean().setCommandedState(Turnout.THROWN);break;case FLASHGREEN:case GREEN:lowTurnout.getBean().setCommandedState(Turnout.CLOSED);break;case DARK:highTurnout.getBean().setCommandedState(Turnout.CLOSED);break;default:}}}}	1
3690	public class A {@Overridepublic void ping() {invocationCount++;}}	1
3691	public class A {private void assignToOwner(Entity entity) {EntityIdentity entityIdentity = new EntityIdentity(entity);String ownerName = entity.getString(ownerAttributeName);Sid ownerSid = createUserSid(ownerName);MutableAcl acl = (MutableAcl) mutableAclService.readAclById(entityIdentity);acl.setOwner(ownerSid);removeAllEntries(acl);acl.insertAce(0, WRITE, ownerSid, true);mutableAclService.updateAcl(acl);}}	2
3692	"public class A {private int processRoleDDL(LogHelper console,SentryPolicyServiceClient sentryClient,String subject,HiveAuthzBinding hiveAuthzBinding,RoleDDLDesc desc)throws SentryUserException {RoleDDLDesc.RoleOperation operation = desc.getOperation();DataOutputStream outStream = null;String name = desc.getName();try {if (operation.equals(RoleDDLDesc.RoleOperation.SET_ROLE)) {hiveAuthzBinding.setActiveRoleSet(name, sentryClient.listUserRoles(subject));return RETURN_CODE_SUCCESS;} else if (operation.equals(RoleDDLDesc.RoleOperation.CREATE_ROLE)) {sentryClient.createRole(subject, name);return RETURN_CODE_SUCCESS;} else if (operation.equals(RoleDDLDesc.RoleOperation.DROP_ROLE)) {sentryClient.dropRole(subject, name);return RETURN_CODE_SUCCESS;} else if (operation.equals(RoleDDLDesc.RoleOperation.SHOW_ROLE_GRANT)) {Set<TSentryRole> roles;PrincipalType principalType = desc.getPrincipalType();if (principalType != PrincipalType.GROUP) {String msg = SentryHiveConstants.GRANT_REVOKE_NOT_SUPPORTED_FOR_PRINCIPAL + principalType;throw new HiveException(msg);}roles = sentryClient.listRolesByGroupName(subject, desc.getName());writeToFile(writeRoleGrantsInfo(roles), desc.getResFile());return RETURN_CODE_SUCCESS;} else if (operation.equals(RoleDDLDesc.RoleOperation.SHOW_ROLES)) {Set<TSentryRole> roles = sentryClient.listRoles(subject);writeToFile(writeRolesInfo(roles), desc.getResFile());return RETURN_CODE_SUCCESS;} else if (operation.equals(RoleDDLDesc.RoleOperation.SHOW_CURRENT_ROLE)) {ActiveRoleSet roleSet = hiveAuthzBinding.getActiveRoleSet();if (roleSet.isAll()) {Set<TSentryRole> roles = sentryClient.listUserRoles(subject);writeToFile(writeRolesInfo(roles), desc.getResFile());return RETURN_CODE_SUCCESS;} else {Set<String> roles = roleSet.getRoles();writeToFile(writeActiveRolesInfo(roles), desc.getResFile());return RETURN_CODE_SUCCESS;}} else {throw new HiveException(""Unknown role operation "" + operation.getOperationName());}} catch (HiveException e) {String msg =""Error in role operation ""+ operation.getOperationName()+ "" on role name ""+ name+ "", error message ""+ e.getMessage();console.printError(msg);return RETURN_CODE_FAILURE;} catch (IOException e) {String msg = ""IO Error in role operation "" + e.getMessage();console.printError(msg);return RETURN_CODE_FAILURE;} finally {closeQuiet(outStream);}}}"	2
3693	public class A {private static Object evaluateFile(ScriptableObject scope, String filename) {InputStream is = FormulaEvaluator.class.getResourceAsStream(filename);if (is != null) {try {return Context.getCurrentContext().evaluateString(scope, IOUtils.toString(is), filename, 0, null);} catch (IOException e) {}return null;}}	2
3694	public class A {protected void tryTransform(MachineLocation machine, AttributeSensor<?> sensor) {Object sensorVal = entity.sensors().get(sensor);if (sensorVal == null) {return;}Maybe<String> newVal = transformVal(machine, sensor, sensorVal);if (newVal.isAbsent()) {return;}AttributeSensor<String> mappedSensor =Sensors.newStringSensor(sensorNameConverter.apply(sensor.getName()));if (newVal.get().equals(entity.sensors().get(mappedSensor))) {return;}entity.sensors().set(mappedSensor, newVal.get());}}	1
3695	"public class A {@Overridepublic void initialize() {commManager = null;String threadName = ""OH-binding-"" + getThing().getUID().getAsString();String errorMsg = null;if (getThing().getThingTypeUID().equals(BRIDGE_TYPE_SERIAL)) {errorMsg = initializeBridgeSerial(getConfigAs(PowermaxSerialConfiguration.class), threadName);} else if (getThing().getThingTypeUID().equals(BRIDGE_TYPE_IP)) {errorMsg = initializeBridgeIp(getConfigAs(PowermaxIpConfiguration.class), threadName);} else {errorMsg = ""Unexpected thing type "" + getThing().getThingTypeUID();}if (errorMsg == null) {if (globalJob == null || globalJob.isCancelled()) {globalJob =scheduler.scheduleWithFixedDelay(() -> {try {updateMotionSensorState();if (isConnected()) {checkKeepAlive();commManager.retryDownloadSetup(remainingDownloadAttempts);} else {tryReconnect();}} catch (Exception e) {}},10,JOB_REPEAT,TimeUnit.SECONDS);}} else {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, errorMsg);}}}"	3
3696	"public class A {private void createHealthNodes(GraphDBHandler dbHandler,String routingKey,List<JsonObject> dataList,String agentId,String nodeLabels,int nodeCount,String latestLabel)throws InsightsCustomException {String healthQuery;if (!agentId.equalsIgnoreCase("""")) {healthQuery = ""Match"";healthQuery = healthQuery + "" (old"" + nodeLabels + "")"";healthQuery = healthQuery + "" where old.agentId='"" + agentId + ""' or old.agentId is null"";healthQuery =healthQuery+ "" OPTIONAL MATCH (old) <-[:UPDATED_TO*""+ nodeCount+ ""]-(purge)  where old.agentId='""+ agentId+ ""'"";healthQuery = healthQuery + CREATE + nodeLabels + "" {props}) "";healthQuery = healthQuery + "" MERGE  (new)<-[r:UPDATED_TO]-(old)"";healthQuery = healthQuery + "" REMOVE old:"" + latestLabel;healthQuery = healthQuery + "" detach delete purge "";healthQuery = healthQuery + "" return old,new"";} else {healthQuery = ""Match (old"" + nodeLabels + "")"";healthQuery =healthQuery + "" OPTIONAL MATCH (old) <-[:UPDATED_TO*"" + nodeCount + ""]-(purge) "";healthQuery = healthQuery + CREATE + nodeLabels + "" {props})"";healthQuery = healthQuery + "" MERGE  (new)<-[r:UPDATED_TO]-(old)"";healthQuery = healthQuery + "" REMOVE old:"" + latestLabel;healthQuery = healthQuery + "" detach delete purge "";healthQuery = healthQuery + "" return old,new"";}JsonObject graphResponse = dbHandler.executeQueryWithData(healthQuery, dataList);if (graphResponse.get(""response"").getAsJsonObject().get(""results"").getAsJsonArray().get(0).getAsJsonObject().get(""data"").getAsJsonArray().size()== 0) {healthQuery = """";healthQuery = healthQuery + CREATE + nodeLabels + "" {props})"";JsonObject graphResponse1 = dbHandler.executeQueryWithData(healthQuery, dataList);parseGraphResponseForError(graphResponse1, routingKey);}parseGraphResponseForError(graphResponse, routingKey);}}"	1
3697	public class A {@Overridepublic AdditionalInfo getInfo(final Principal clientIdentity, final Object customArgument) {if (customArgument instanceof AdditionalInfo) {final AdditionalInfo info = (AdditionalInfo) customArgument;final String authId = info.get(EXT_INFO_KEY_HONO_AUTH_ID, String.class);final Device device = info.get(EXT_INFO_KEY_HONO_DEVICE, Device.class);return info;}return AdditionalInfo.empty();}}	2
3698	"public class A {public void recordImportFailure(Owner owner, Throwable error, String filename) {ImportRecord record = new ImportRecord(owner);if (error instanceof ImporterException) {Meta meta = (Meta) ((ImporterException) error).getCollectedData().get(""meta"");if (meta != null) {record.setGeneratedBy(meta.getPrincipalName());record.setGeneratedDate(meta.getCreated());}}record.setUpstreamConsumer(createImportUpstreamConsumer(owner, null));record.setFileName(filename);record.recordStatus(ImportRecord.Status.FAILURE, error.getMessage());this.importRecordCurator.create(record);}}"	1
3699	public class A {@Overridepublic void run() {if (log.isDebugEnabled()) {}ApplicationsEventPublisher.sendCompleteApplicationsEvent(ApplicationHolder.getApplications());}}	1
3700	public class A {@Nullable@Advice.OnMethodEnter(suppress = Throwable.class, inline = false)public static Object setTransactionName(@Advice.Argument(value = 0) @Nullable JobExecutionContext context,@SimpleMethodSignature String signature,@Advice.Origin Class<?> clazz) {Transaction transaction = null;AbstractSpan<?> active = GlobalTracer.get().getActive();if (context == null) {transaction = createAndActivateTransaction(clazz, signature);} else if (active == null) {transaction = createAndActivateTransaction(clazz, context.getJobDetail().getKey().toString());} else {}return transaction;}}	2
3701	"public class A {@MCRCommand(syntax = ""export all permissions to file {0}"",help = ""Export all permissions from the Access Control System to the file {0}."",order = 50)public static void exportAllPermissionsToFile(String filename) throws Exception {MCRAccessInterface accessImpl = MCRAccessManager.getAccessImpl();Element mcrpermissions = new Element(""mcrpermissions"");mcrpermissions.addNamespaceDeclaration(XSI_NAMESPACE);mcrpermissions.addNamespaceDeclaration(XLINK_NAMESPACE);mcrpermissions.setAttribute(""noNamespaceSchemaLocation"", ""MCRPermissions.xsd"", XSI_NAMESPACE);Document doc = new Document(mcrpermissions);Collection<String> permissions = accessImpl.getPermissions();for (String permission : permissions) {Element mcrpermission = new Element(""mcrpermission"");mcrpermission.setAttribute(""name"", permission);String ruleDescription = accessImpl.getRuleDescription(permission);if (!ruleDescription.equals("""")) {mcrpermission.setAttribute(""ruledescription"", ruleDescription);}Element rule = accessImpl.getRule(permission);mcrpermission.addContent(rule);mcrpermissions.addContent(mcrpermission);}File file = new File(filename);if (file.exists()) {}FileOutputStream fos = new FileOutputStream(file);String mcrEncoding =MCRConfiguration2.getString(""MCR.Metadata.DefaultEncoding"").orElse(DEFAULT_ENCODING);XMLOutputter out = new XMLOutputter(Format.getPrettyFormat().setEncoding(mcrEncoding));out.output(doc, fos);}}"	2
3702	"public class A {@Testpublic void test_apply_variant_01() {Variant variant = new Variant(transcript.getParent(), 290, ""TTT"", ""AAA"");checkApplyMnp(variant, transcript.cds(), transcript.protein(), 1, 300, 399);}}"	1
3703	public class A {public boolean clientExistsThenEvict(Integer demographicNo) {boolean exists = false;Demographic existingDemo = this.getClientByDemographicNo(demographicNo);exists = (existingDemo != null);if (exists) this.getHibernateTemplate().evict(existingDemo);return exists;}}	1
3704	public class A {public static com.liferay.dynamic.data.lists.model.DDLRecordVersionSoap[] getRecordVersions(long recordId) throws RemoteException {try {java.util.List<com.liferay.dynamic.data.lists.model.DDLRecordVersion> returnValue =DDLRecordVersionServiceUtil.getRecordVersions(recordId);return com.liferay.dynamic.data.lists.model.DDLRecordVersionSoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
3705	"public class A {public static Connection createConnection(Map<String, Object> connectionParams)throws IOException {if (isDirectInstance(connectionParams)) {return new JvmDirectConnection();}if (connectionParams.get(PROCESS_NAME_REGEX) != null) {try {Class.forName(""com.sun.tools.attach.AttachNotSupportedException"");} catch (ClassNotFoundException e) {throw new IOException(""Unable to find tools.jar.""+ "" Are you using a JDK and did you set the path to tools.jar ?"");}return new AttachApiConnection(connectionParams);}return new RemoteConnection(connectionParams);}}"	3
3706	public class A {void attachDeploymentErrors(@NotNull ServiceSingleNodeDeploymentResult depRes, @Nullable Collection<Throwable> errors) {if (F.isEmpty(errors)) return;Collection<byte[]> errorsBytes = new ArrayList<>();for (Throwable th : errors) {try {byte[] arr = U.marshal(ctx, th);errorsBytes.add(arr);} catch (IgniteCheckedException e) {}}depRes.errors(errorsBytes);}}	1
3707	"public class A {public void testType3Message() throws Exception {try {MessageDigest.getInstance(""MD4"");} catch (NoSuchAlgorithmException ex) {return;}int flags = 0x00000001 | 0x00000200 | 0x00010000 | 0x00800000;String msg =""4e544c4d53535000020000000c000c003000000001028100""+ ""0123456789abcdef0000000000000000620062003c000000""+ ""44004f004d00410049004e0002000c0044004f004d004100""+ ""49004e0001000c0053004500520056004500520004001400""+ ""64006f006d00610069006e002e0063006f006d0003002200""+ ""7300650072007600650072002e0064006f006d0061006900""+ ""6e002e0063006f006d0000000000"";byte[] challengePacket = ByteUtilities.asByteArray(msg);int serverFlags = NTLMUtilities.extractFlagsFromType2Message(challengePacket);assertEquals(flags, serverFlags);NTLMUtilities.printTargetInformationBlockFromType2Message(challengePacket, serverFlags, new PrintWriter(System.out, true));byte[] osVer = new byte[8];NTLMUtilities.writeOSVersion((byte) 5, (byte) 0, (short) 2195, osVer, 0);byte[] challenge = NTLMUtilities.extractChallengeFromType2Message(challengePacket);assertEquals(""0123456789abcdef"", asHex(challenge));String expectedTargetInfoBlock =""02000c0044004f004d00410049004e00""+ ""01000c00530045005200560045005200""+ ""0400140064006f006d00610069006e00""+ ""2e0063006f006d000300220073006500""+ ""72007600650072002e0064006f006d00""+ ""610069006e002e0063006f006d000000""+ ""0000"";byte[] targetInfo = NTLMUtilities.extractTargetInfoFromType2Message(challengePacket, null);assertEquals(expectedTargetInfoBlock, asHex(targetInfo));assertEquals(""DOMAIN"", NTLMUtilities.extractTargetNameFromType2Message(challengePacket, serverFlags));serverFlags = 0x00000001 | 0x00000200;String msgType3 =asHex(NTLMUtilities.createType3Message(""user"", ""SecREt01"", challenge, ""DOMAIN"", ""WORKSTATION"", serverFlags, null));String expected =""4e544c4d5353500003000000180018006a00000018001800""+ ""820000000c000c0040000000080008004c00000016001600""+ ""54000000000000009a0000000102000044004f004d004100""+ ""49004e00750073006500720057004f0052004b0053005400""+ ""4100540049004f004e00c337cd5cbd44fc9782a667af6d42""+ ""7c6de67c20c2d3e77c5625a98c1c31e81847466b29b2df46""+ ""80f39958fb8c213a9cc6"";assertEquals(expected, msgType3);}}"	1
3708	"public class A {@Post(subscribeToken = ""knowledge"")public Boundary stock() throws IOException, InvalidParamException {Long knowledgeId = getPathLong();if (LOG.isTraceEnabled()) {}List<Stock> stocks = new ArrayList<>();BufferedReader reader = getRequest().getReader();try {List<Map<String, String>> json = JSON.decode(reader);for (Map<String, String> map : json) {Stock stock = new Stock();Iterator<String> keys = map.keySet().iterator();while (keys.hasNext()) {String key = keys.next();Object value = map.get(key);if (LOG.isTraceEnabled()) {}Object val =PropertyUtil.convValue(value.toString(), PropertyUtil.getPropertyType(stock, key));PropertyUtil.setPropertyValue(stock, key, val);}stocks.add(stock);if (LOG.isTraceEnabled()) {}}} finally {reader.close();}StockKnowledgesDao dao = StockKnowledgesDao.get();for (Stock stock : stocks) {StockKnowledgesEntity entity = new StockKnowledgesEntity();entity.setStockId(stock.getStockId());entity.setKnowledgeId(knowledgeId);entity.setComment(stock.getDescription());if (stock.getStocked()) {dao.save(entity);} else {dao.physicalDelete(entity);}}ActivityLogic.get().processActivity(Activity.KNOWLEDGE_STOCK,getLoginedUser(),DateUtils.now(),KnowledgesDao.get().selectOnKey(knowledgeId));return sendMsg(MessageStatus.Success, HttpStatus.SC_200_OK, ""saved"", ""message.success.save"");}}"	3
3709	public class A {@Overridepublic void memberAttributeChanged(MemberAttributeEvent memberAttributeEvent) {if (log.isDebugEnabled()) {}}}	1
3710	"public class A {private String getFirstSchemaValueFromJson(JSONObject jsonObject) throws CharonException {String value = null;try {JSONArray schemas = jsonObject.getJSONArray(ResponseCodeConstants.SCHEMAS);value = schemas.getString(0);} catch (JSONException e) {value = getStringValueFromJson(jsonObject, ResponseCodeConstants.SCHEMAS);if (value == null) {throw new CharonException(""could not retrieve the 'schemas' field from the given json resource"");}}return value;}}"	1
3711	"public class A {@Overridepublic void updateDomain(User actor, String uuid, String domain) throws BusinessException {checkPermissions(actor);if (!actor.hasSuperAdminRole()) {throw new BusinessException(BusinessErrorCode.CANNOT_UPDATE_USER,""Only superadmins can update an inconsistent user."");}User u = userRepository.findByLsUuid(uuid);AbstractDomain d = abstractDomainService.retrieveDomain(domain);if (u == null) {throw new BusinessException(BusinessErrorCode.USER_NOT_FOUND,""Attempt to update an user entity failed : User not found."");} else if (d == null) {throw new BusinessException(BusinessErrorCode.DOMAIN_DO_NOT_EXIST,""Attempt to update an user entity failed : Domain does not exist."");}User userInTargetDomain = userRepository.findByMailAndDomain(domain, u.getMail());if (userInTargetDomain != null) {throw new BusinessException(BusinessErrorCode.USER_ALREADY_EXISTS_IN_DOMAIN_TARGET,""Attempt to update an user entity failed : The user : ""+ u.getFullName()+ "" is already in the Domain : ""+ domain);}u.setDomain(d);userRepository.update(u);}}"	1
3712	public class A {public void testBSPTaskSelfDestroy() {CompletionService<Integer> completionService =new ExecutorCompletionService<Integer>(this.testBSPTaskService);TestBSPProcessRunner runner =new TestBSPProcessRunner(0, workerServer.getListenerAddress().getPort());Future<Integer> future = completionService.submit(runner);try {while (groom.pingCount == 0) {Thread.sleep(100);}} catch (Exception e) {}workerServer.stop();umbilical = null;workerServer = null;Integer exitValue = -1;try {exitValue = future.get(20000, TimeUnit.MILLISECONDS);} catch (InterruptedException e1) {} catch (ExecutionException e1) {} catch (TimeoutException e) {}assertEquals(69, exitValue.intValue());runner.destroyProcess();}}	5
3713	"public class A {@Testpublic void testLedgerDeleteWithExistingEntryLogs() throws Exception {LedgerHandle[] lhs = writeLedgerEntries(3, 1024, 1024);restartBookies();for (LedgerHandle lh : lhs) {bkc.deleteLedger(lh.getId());}Thread.sleep(2 * baseConf.getGcWaitTime());for (File ledgerDirectory : tmpDirs) {assertFalse(""Found the entry log file ([0,1].log) that should have been deleted in ledgerDirectory: ""+ ledgerDirectory,TestUtils.hasLogFiles(ledgerDirectory, true, 0, 1));}}}"	1
3714	"public class A {@SuppressWarnings({""rawtypes"", ""unchecked""})public void start(BSPPeer<K1, V1, K2, V2, M> peer) throws IOException, InterruptedException {Map<String, String> env = setupEnvironment(peer.getConfiguration());List<String> cmd = setupCommand(peer.getConfiguration());TaskAttemptID taskid = peer.getTaskId();File stdout = TaskLog.getTaskLogFile(taskid, TaskLog.LogName.STDOUT);File stderr = TaskLog.getTaskLogFile(taskid, TaskLog.LogName.STDERR);long logLength = TaskLog.getTaskLogLength(peer.getConfiguration());if (!streamingEnabled) {cmd = TaskLog.captureOutAndError(null, cmd, stdout, stderr, logLength);} else {cmd = TaskLog.captureOutAndErrorTee(null, cmd, stdout, stderr, logLength);}checkParentFile(stdout);checkParentFile(stderr);process = runClient(cmd, env);try {if (streamingEnabled) {downlink = new StreamingProtocol(peer, process.getOutputStream(), process.getInputStream());} else {serverSocket.setSoTimeout(SERVER_SOCKET_TIMEOUT);clientSocket = serverSocket.accept();downlink =new BinaryProtocol<K1, V1, K2, V2, M>(peer, clientSocket.getOutputStream(), clientSocket.getInputStream());}downlink.start();} catch (SocketException e) {BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(stderr)));String inputLine;while ((inputLine = br.readLine()) != null) {}br.close();throw new SocketException(""Timout: Client pipes application did not connect!"");}}}"	6
3715	"public class A {private JButton getDeleteButton() {if (deleteButton == null) {deleteButton = new JButton(MessageBundle.getMessage(""angal.common.delete.btn""));deleteButton.setMnemonic(MessageBundle.getMnemonic(""angal.common.delete.btn.key""));deleteButton.addActionListener(new java.awt.event.ActionListener() {public void actionPerformed(java.awt.event.ActionEvent e) {if (table.getSelectedRow() < 0) {} else {ExamRowBrowsingManager manager =Context.getApplicationContext().getBean(ExamRowBrowsingManager.class);ExamRow row =(ExamRow)(((ExamRowBrowsingModel) model).getValueAt(table.getSelectedRow(), -1));int n =JOptionPane.showConfirmDialog(null,MessageBundle.getMessage(""angal.exa.deleteexamresult"")+ "" \""""+ row.getDescription()+ ""\"" ?"",MessageBundle.getMessage(""angal.hospital""),JOptionPane.YES_NO_OPTION);if ((n == JOptionPane.YES_OPTION)) {try {boolean deleted = manager.deleteExamRow(row);if (deleted) {examRowDeleted();}} catch (OHServiceException e1) {OHServiceExceptionUtil.showMessages(e1);}}}}});}return deleteButton;}}"	1
3716	public class A {@Overridepublic void instantiateServiceInstance() {endpointRpcRegistry = new EndpointRpcRegistry(dataBroker);serviceRpcRegistration = rpcProviderRegistry.addRpcImplementation(EndpointService.class, this);}}	1
3717	public class A {@Overridepublic void onInboundMessage(JmsInboundMessageDispatch envelope) {envelope.setConsumerInfo(consumerInfo);stateLock.lock();try {if (envelope.isEnqueueFirst()) {this.messageQueue.enqueueFirst(envelope);} else {this.messageQueue.enqueue(envelope);}if (messageQueue.isRunning()) {try {dispatcher.execute(() -> deliverNextPending());} catch (RejectedExecutionException rje) {}}} finally {stateLock.unlock();}}}	1
3718	"public class A {void insertNewAttachmentOnTaskUpdate(TaskImpl newTaskImpl, Attachment attachment)throws AttachmentPersistenceException {AttachmentImpl attachmentImpl = (AttachmentImpl) attachment;initAttachment(attachmentImpl, newTaskImpl);try {attachmentMapper.insert(attachmentImpl);if (LOGGER.isDebugEnabled()) {}} catch (PersistenceException e) {throw new AttachmentPersistenceException(String.format(""Cannot insert the Attachement %s for Task %s  because it already exists."",attachmentImpl.getId(), newTaskImpl.getId()),e.getCause());}}}"	1
3719	"public class A {private void showGenericErrorNotification(NotificationController nc) {Platform.runLater(() -> {nc.addNotification(""Sorry, there was an error."");});}}"	1
3720	"public class A {private String getServicePrincipalName(final HttpRequest request, final HttpClientContext clientContext) {String spn = null;if (this.servicePrincipalName != null) {spn = this.servicePrincipalName;} else if (challengeType == ChallengeType.PROXY) {final RouteInfo route = clientContext.getHttpRoute();if (route != null) {spn = ""HTTP/"" + route.getProxyHost().getHostName();} else {spn = null;}} else {final URIAuthority authority = request.getAuthority();if (authority != null) {spn = ""HTTP/"" + authority.getHostName();} else {final RouteInfo route = clientContext.getHttpRoute();if (route != null) {spn = ""HTTP/"" + route.getTargetHost().getHostName();} else {spn = null;}}}if (LOG.isDebugEnabled()) {}return spn;}}"	1
3721	public class A {@Overridepublic void start() throws Exception {TestConfig tc = TestConfig.getInstance();Executor exec = Executor.getInstance();Set<Class<? extends IPerfTest>> scenarios = exec.getScenarios(tc.getTestPackage());if (scenarios.size() == 1) {IPerfTest scenario = scenarios.iterator().next().newInstance();exec.initMetrics(scenario);scenario.init();if (tc.isWarmUp()) {exec.performWarmUp(scenario);}CPUUsageHistogramSet cpuusage = null;boolean cpuusageEnabled = tc.getMeasure().contains(Measure.CPUUSAGE);if (cpuusageEnabled) {cpuusage = CPUUsageHistogramSet.getInstance(scenario.getClass());cpuusage.start();}startScenario(scenario.getClass());if (cpuusageEnabled) {cpuusage.stop();}exec.getReporter().report();} else {for (Class<? extends IPerfTest> c : scenarios) {KPKConstraint constraint = exec.checkScenarioConstraints(c);if (constraint != null) {} else {exec.forkScenario(c.getSimpleName());}}}}}	1
3722	"public class A {public static java.util.List<com.liferay.wiki.model.WikiPage> getRecentChanges(HttpPrincipal httpPrincipal, long groupId, long nodeId, int start, int end)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(WikiPageServiceUtil.class, ""getRecentChanges"", _getRecentChangesParameterTypes35);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, nodeId, start, end);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<com.liferay.wiki.model.WikiPage>) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
3723	"public class A {private List<DasColumn> buildDasColumn(String tableName, ResultSetMetaData metaData) {List<DasColumn> res = Lists.newArrayList();try {int columnCount = metaData.getColumnCount();for (int i = 1; i <= columnCount; i++) {DasColumn dasColumn = new DasColumn();dasColumn.setColumnClassName(metaData.getColumnClassName(i));dasColumn.setColumnTypeName(metaData.getColumnTypeName(i));dasColumn.setColumnName(metaData.getColumnName(i));dasColumn.setIsNull(metaData.isNullable(i));res.add(dasColumn);}Statement statement = connection.createStatement();if (currentDatabase.equals(JdbcConstants.MYSQL)|| currentDatabase.equals(JdbcConstants.ORACLE)) {DatabaseMetaData databaseMetaData = connection.getMetaData();ResultSet resultSet = databaseMetaData.getPrimaryKeys(null, null, tableName);while (resultSet.next()) {String name = resultSet.getString(""COLUMN_NAME"");res.forEach(e -> {if (e.getColumnName().equals(name)) {e.setIsprimaryKey(true);} else {e.setIsprimaryKey(false);}});}res.forEach(e -> {String sqlQueryComment =sqlBuilder.getSQLQueryComment(currentSchema, tableName, e.getColumnName());try {ResultSet resultSetComment = statement.executeQuery(sqlQueryComment);while (resultSetComment.next()) {e.setColumnComment(resultSetComment.getString(1));}JdbcUtils.close(resultSetComment);} catch (SQLException e1) {}});}JdbcUtils.close(statement);} catch (SQLException e) {}return res;}}"	2
3724	"public class A {public LanguagePage addLanguageAndJoin(String localeId) {addLanguage(localeId);LanguagePage languagePage =goToHome().goToLanguages().gotoLanguagePage(localeId).gotoMembersTab();if (languagePage.getMemberUsernames().contains(""admin"")) {return languagePage;}return languagePage.joinLanguageTeam();}}"	1
3725	public class A {private synchronized void killAndUnregisterHook(final S stat) {try {killImpl(stat);} catch (IOException e) {throw new RuntimeException(e);}if (null != killerHook) {try {Runtime.getRuntime().removeShutdownHook(killerHook);} catch (IllegalStateException e) {}killerHook = null;}}}	2
3726	"public class A {public void updateVfModule(String cloudSiteId,String cloudOwner,String tenantId,String vnfType,String vnfVersion,String vnfName,String requestType,String volumeGroupHeatStackId,String baseVfHeatStackId,String vfModuleStackId,String modelCustomizationUuid,Map<String, Object> inputs,MsoRequest msoRequest,Holder<Map<String, String>> outputs,Holder<VnfRollback> rollback)throws VnfException {throw new VnfException(""UpdateVfModule:  Unsupported command"", MsoExceptionCategory.USERDATA);}}"	1
3727	"public class A {private void regexReplace(String predicate, String regexMatch, String newValue)throws IOException {String query =""""+ ""SELECT ?s ?o \n""+ ""WHERE {\n""+ ""  ?s <""+ predicate+ ""> ?o .\n""+ ""  FILTER (regex(str(?o), \""""+ regexMatch+ ""\"", \""s\"")) .\n""+ ""}"";StringBuilder insertQ = new StringBuilder(""INSERT DATA {\n"");StringBuilder deleteQ = new StringBuilder(""DELETE DATA {\n"");int modifyCounter = 0;for (QuerySolution s : IterableAdaptor.adapt(this.model.executeSelectQuery(query))) {modifyCounter++;Literal obj = s.getLiteral(""o"");RDFDatatype datatype = obj.getDatatype();String lang = obj.getLanguage();String objStr = obj.getValue().toString();String oldStr = encodeString(objStr, datatype, lang);String newStr = encodeString(objStr.replaceAll(regexMatch, newValue), datatype, lang);String sUri = s.getResource(""s"").getURI();deleteQ.append(""  <"" + sUri + ""> <"" + predicate + ""> "" + oldStr + "" . \n"");insertQ.append(""  <"" + sUri + ""> <"" + predicate + ""> "" + newStr + "" . \n"");}insertQ.append(""} \n"");deleteQ.append(""} \n"");this.model.executeUpdateQuery(deleteQ.toString());this.model.executeUpdateQuery(insertQ.toString());}}"	7
3728	"public class A {@SuppressWarnings(""unchecked"")private Object buildNameStep(NameStep nameStep, String value, Parent parent)throws JaxenException {String name = nameStep.getLocalName();String prefix = nameStep.getPrefix();Namespace ns =prefix.isEmpty() ? Namespace.NO_NAMESPACE : MCRConstants.getStandardNamespace(prefix);if (nameStep.getAxis() == Axis.CHILD) {if (parent instanceof Document) {return buildPredicates(nameStep.getPredicates(), ((Document) parent).getRootElement());} else {return buildPredicates(nameStep.getPredicates(), buildElement(ns, name, value, (Element) parent));}} else if (nameStep.getAxis() == Axis.ATTRIBUTE) {return buildAttribute(ns, name, value, (Element) parent);} else {if (LOGGER.isDebugEnabled()) {}return null;}}}"	1
3729	public class A {private void shrinkIfBelowCapacity() {int currentLoad = maxTotalInFlight.getAndSet(totalInFlight.get());int maxRequestsPerConnection = options().getMaxRequestsPerConnection(hostDistance);int needed = currentLoad / maxRequestsPerConnection + 1;if (currentLoad % maxRequestsPerConnection > options().getNewConnectionThreshold(hostDistance))needed += 1;needed = Math.max(needed, options().getCoreConnectionsPerHost(hostDistance));int actual = open.get();int toTrash = Math.max(0, actual - needed);if (toTrash <= 0) return;for (Connection connection : connections)if (trashConnection(connection)) {toTrash -= 1;if (toTrash == 0) return;}}}	1
3730	"public class A {@Afterpublic void tearDown() throws IOException, StorageEngineException {ClusterDescriptor.getInstance().getConfig().setReplicationNum(prevReplicaNum);if (mManager != null) {for (MManager manager : mManager) {manager.clear();}}EnvironmentUtils.cleanEnv();File[] files = new File(""target/schemas"").listFiles();if (files != null) {for (File file : files) {try {Files.delete(file.toPath());} catch (IOException e) {}}}StorageEngine.setEnablePartition(prevEnablePartition);StorageEngine.setTimePartitionInterval(prevPartitionInterval);}}"	1
3731	"public class A {@SuppressWarnings(""unchecked"")@Overridepublic List<ComprehensionTestQuestionBo> getComprehensionTestQuestionList(Integer studyId) {logger.entry(""begin getComprehensionTestQuestionList()"");Session session = null;List<ComprehensionTestQuestionBo> comprehensionTestQuestionList = null;try {session = hibernateTemplate.getSessionFactory().openSession();query =session.createQuery(""From ComprehensionTestQuestionBo CTQBO where CTQBO.studyId=:studyId""+ "" and CTQBO.active=1 order by CTQBO.sequenceNo asc"");query.setInteger(""studyId"", studyId);comprehensionTestQuestionList = query.list();} catch (Exception e) {} finally {if ((null != session) && session.isOpen()) {session.close();}}logger.exit(""getComprehensionTestQuestionList() - Ends"");return comprehensionTestQuestionList;}}"	1
3732	public class A {@Overridepublic void start(Map<String, String> configProps) {this.configProps = configProps;}}	1
3733	public class A {public static void main(String[] args) throws Exception {StorageCleanupJob cli = new StorageCleanupJob();cli.execute(args);}}	1
3734	"public class A {@Overridepublic long getFileLength(String key) throws IOException {GetObjectMetadataRequest getObjectMetadataRequest =new GetObjectMetadataRequest(bucketName, key);try {ObjectMetadata objectMetadata =(ObjectMetadata) callCOSClientWithRetry(getObjectMetadataRequest);return objectMetadata.getContentLength();} catch (Exception e) {String errMsg =String.format(""Getting file length occurs an exception."" + ""COS key: %s, exception: %s"",key, e.toString());handleException(new Exception(errMsg), key);return 0;}}}"	2
3735	public class A {private void reAttemptDelivery(Mail mail, int retries) throws MailQueue.MailQueueException {DeliveryRetriesHelper.incrementRetries(mail);mail.setLastUpdated(dateSupplier.get());Duration delay = getNextDelay(DeliveryRetriesHelper.retrieveRetries(mail));if (configuration.isUsePriority()) {mail.setAttribute(MailPrioritySupport.LOW_PRIORITY_ATTRIBUTE);}queue.enQueue(mail, delay);}}	1
3736	public class A {protected void onInPacketAdded(final String networkId, final InPacketAdded msg) {if (onInPacketAddedPre(networkId, msg)) {HashMap<String, Response> respList = conversion(networkId, msg);onInPacketAddedPost(networkId, msg, respList);}}}	1
3737	public class A {@PreDestroypublic void destroyDataSources() {for (final SourceConfiguration sourceConfig : sourceConfigurations.values()) {try {DataSources.destroy(sourceConfig.getDataSource());} catch (SQLException e) {}}}}	1
3738	"public class A {@Overridepublic void saveAccounts(List<AccountVO> accounts) {TransactionLegacy txn = TransactionLegacy.currentTxn();try {txn.start();String sql = INSERT_ACCOUNT;PreparedStatement pstmt = null;pstmt = txn.prepareAutoCloseStatement(sql);for (AccountVO acct : accounts) {pstmt.setLong(1, acct.getId());pstmt.setString(2, acct.getAccountName());pstmt.setShort(3, acct.getType());if (acct.getRoleId() == null) {pstmt.setLong(4, RoleType.User.getId());} else {pstmt.setLong(4, acct.getRoleId());}pstmt.setLong(5, acct.getDomainId());Date removed = acct.getRemoved();if (removed == null) {pstmt.setString(6, null);} else {pstmt.setString(6, DateUtil.getDateDisplayString(TimeZone.getTimeZone(""GMT""), acct.getRemoved()));}pstmt.setBoolean(7, acct.getNeedsCleanup());pstmt.addBatch();}pstmt.executeBatch();txn.commit();} catch (Exception ex) {txn.rollback();throw new CloudRuntimeException(ex.getMessage());}}}"	1
3739	public class A {@Overridepublic BulkWriterResponse write(String sensorType,WriterConfiguration configurations,List<BulkMessage<JSONObject>> messages) {BulkWriterResponse writerResponse = new BulkWriterResponse();List<Map.Entry<MessageId, Future>> results = new ArrayList<>();for (BulkMessage<JSONObject> bulkWriterMessage : messages) {MessageId messageId = bulkWriterMessage.getId();JSONObject message = bulkWriterMessage.getMessage();String jsonMessage;try {jsonMessage = message.toJSONString();} catch (Throwable t) {writerResponse.addError(t, messageId);continue;}Optional<String> topic = getKafkaTopic(message);if (topic.isPresent()) {Future future =kafkaProducer.send(new ProducerRecord<String, String>(topic.get(), jsonMessage));results.add(new AbstractMap.SimpleEntry<>(messageId, future));} else {}}Collection<MessageId> ids =messages.stream().map(BulkMessage::getId).collect(Collectors.toList());try {kafkaProducer.flush();} catch (InterruptException e) {writerResponse.addAllErrors(e, ids);return writerResponse;}for (Map.Entry<MessageId, Future> kv : results) {try {kv.getValue().get();writerResponse.addSuccess(kv.getKey());} catch (Exception e) {writerResponse.addError(e, kv.getKey());}}return writerResponse;}}	1
3740	"public class A {protected List<String> getBaseNamingContexts(InitialDirContext ctx) {List<String> dNs = new ArrayList<String>();try {SearchControls ctls = new SearchControls();ctls.setReturningObjFlag(true);ctls.setSearchScope(SearchControls.OBJECT_SCOPE);ctls.setReturningAttributes(new String[] {BASE_DN_ATTRIBUTE});NamingEnumeration<SearchResult> objResults = ctx.search("""", ""objectclass=*"", ctls);while (objResults != null && objResults.hasMore()) {final SearchResult objEntry = objResults.nextElement();final Attributes objAttributes = objEntry.getAttributes();if (objAttributes != null) {final Attribute objAttribute = objAttributes.get(BASE_DN_ATTRIBUTE);NamingEnumeration<? extends Object> allValues = objAttribute.getAll();while (allValues.hasMoreElements()) dNs.add((String) allValues.nextElement());}}} catch (Exception e) {}return dNs;}}"	2
3741	"public class A {@PayloadRoot(localPart = ""SendNotificationRequest"", namespace = MICROGRIDS_NOTIFICATION_NAMESPACE)@ResponsePayloadpublic SendNotificationResponse sendNotification(@OrganisationIdentification final String organisationIdentification,@RequestPayload final SendNotificationRequest request)throws WebServiceException {this.notificationService.handleNotification(request.getNotification(), organisationIdentification);return new SendNotificationResponse();}}"	1
3742	"public class A {private String getMonthAndYearOfDate(String strDate) {final SimpleDateFormat sdf = new SimpleDateFormat(""MM/dd/yyyy"");final Calendar cal = Calendar.getInstance();Date date;int month = -1;int year = -1;try {date = sdf.parse(strDate);cal.setTime(date);month = cal.get(Calendar.MONTH);year = cal.get(Calendar.YEAR);} catch (ParseException ex) {}return String.valueOf(year) + '-' + month;}}"	2
3743	"public class A {private void processPageRegExpLabel(String pageBody, String regExpKey, String regExpValue, boolean isDelta, long time) {ArrayList<String> labels = new ArrayList<>();Pattern patternKey = patterns.get(regExpKey);if (patternKey == null) {try {patternKey = Pattern.compile(regExpKey);patterns.put(regExpKey, patternKey);} catch (PatternSyntaxException ex) {}}Pattern patternValue = patterns.get(regExpValue);if (patternValue == null) {try {patternValue = Pattern.compile(regExpValue);patterns.put(regExpValue, patternValue);} catch (PatternSyntaxException ex) {}}if (patternKey != null && patternValue != null) {Matcher mKey = patternKey.matcher(pageBody);Matcher mValue = patternValue.matcher(pageBody);boolean found = false;while (mKey.find() && mValue.find()) {found = true;String key = mKey.group(1);if (labels.contains(key)) {int i = 2;while (labels.contains(key + ""_"" + i)) {i++;}key = key + ""_"" + i;}labels.add(key);String sValue = mValue.group(1);try {double value = Double.parseDouble(sValue);if (isDelta) {if (oldValues.containsKey(key)) {double delta = value - oldValues.get(key);addRecord(key, time, delta);}oldValues.put(key, value);} else {addRecord(key, time, value);}} catch (NumberFormatException ex) {}}if (!found) {}}}}"	4
3744	"public class A {private void deployConfirmationServlet() {if (confirmationServletFactory == null) {return;}ServletHolder holder = confirmationServletFactory.getServiceServlet();FilterHolder filterHolder = new FilterHolder(confirmationServletFactory.getServiceFilter());try {sharedEndpointManagement.deployInternalEndpointServlet(EmailConfirmationServletProvider.SERVLET_PATH, holder, true);sharedEndpointManagement.deployInternalEndpointFilter(EmailConfirmationServletProvider.SERVLET_PATH, filterHolder);} catch (EngineException e) {throw new InternalException(""Cannot deploy internal confirmation servlet"", e);}}}"	2
3745	public class A {protected <C, R> void handle(CommandMessage<C> command,MessageHandler<? super CommandMessage<?>> handler,CommandCallback<? super C, ? super R> callback) {if (logger.isDebugEnabled()) {}UnitOfWork<CommandMessage<?>> unitOfWork = DefaultUnitOfWork.startAndGet(command);unitOfWork.attachTransaction(transactionManager);InterceptorChain chain =new DefaultInterceptorChain<>(unitOfWork, handlerInterceptors, handler);CommandResultMessage<R> resultMessage =asCommandResultMessage(unitOfWork.executeWithResult(chain::proceed, rollbackConfiguration));callback.onResult(command, resultMessage);}}	1
3746	"public class A {@Overridepublic boolean registerSlotRequest(SlotRequest slotRequest) throws ResourceManagerException {checkInit();if (checkDuplicateRequest(slotRequest.getAllocationId())) {return false;} else {PendingSlotRequest pendingSlotRequest = new PendingSlotRequest(slotRequest);pendingSlotRequests.put(slotRequest.getAllocationId(), pendingSlotRequest);try {internalRequestSlot(pendingSlotRequest);} catch (ResourceManagerException e) {pendingSlotRequests.remove(slotRequest.getAllocationId());throw new ResourceManagerException(""Could not fulfill slot request "" + slotRequest.getAllocationId() + '.', e);}return true;}}}"	1
3747	"public class A {@DELETE@Produces(MediaType.APPLICATION_JSON)@Path(""/groups/{groupName}"")@RolesAllowed({ADMIN_ROLE})public Response deleteGroup(@PathParam(""groupName"") String groupName) {assertObjectExists(groupManagerService.get(groupName), ""group"", groupName);UberfireRestResponse response = resourceHelper.removeGroup(groupName);return createResponse(response);}}"	1
3748	public class A {@Overridepublic void accept(String value) {try {realConsumer.accept(objectMapper.readValue(value, clazz));} catch (JsonProcessingException e) {}}}	1
3749	"public class A {@Value(""${maintenance:FULL,FULL}"")public void set(String mode) {AccessType world = null, trusted = null;try {String[] modes = StringUtils.split(mode, ',');world = AccessType.valueOf(modes[0].trim());trusted = AccessType.valueOf(modes[1].trim());} catch (RuntimeException e) {}if (world != null && trusted != null) {set(world, trusted);}}}"	1
3750	public class A {@Overridepublic Object get(final Context context) throws FlowException {final Map<String, Object> result = new LinkedHashMap<>();for (final FlowKeyValue _keySource : getProperty(keyValueSources)) {final Object item = _keySource.get(context);if (item != null && item instanceof KeyValue) {final KeyValue keyValue = (KeyValue) item;result.put(keyValue.getKey(), keyValue.getValue());} else {}}return result;}}	1
3751	"public class A {@Overridepublic boolean stopKubernetesCluster(long kubernetesClusterId) throws CloudRuntimeException {if (!KubernetesServiceEnabled.value()) {logAndThrow(Level.ERROR, ""Kubernetes Service plugin is disabled"");}final KubernetesClusterVO kubernetesCluster =kubernetesClusterDao.findById(kubernetesClusterId);if (kubernetesCluster == null) {throw new InvalidParameterValueException(""Failed to find Kubernetes cluster with given ID"");}if (kubernetesCluster.getRemoved() != null) {throw new InvalidParameterValueException(String.format(""Kubernetes cluster : %s is already deleted"", kubernetesCluster.getName()));}accountManager.checkAccess(CallContext.current().getCallingAccount(),SecurityChecker.AccessType.OperateEntry,false,kubernetesCluster);if (kubernetesCluster.getState().equals(KubernetesCluster.State.Stopped)) {if (LOGGER.isDebugEnabled()) {}return true;}if (kubernetesCluster.getState().equals(KubernetesCluster.State.Stopping)) {if (LOGGER.isDebugEnabled()) {}return true;}KubernetesClusterStopWorker stopWorker =new KubernetesClusterStopWorker(kubernetesCluster, this);stopWorker = ComponentContext.inject(stopWorker);return stopWorker.stop();}}"	2
3752	"public class A {private JsonObject doRawHttpRequest(String path, String method, JsonObject body, boolean errorOk) {OkHttpClient httpClient = client.adapt(OkHttpClient.class);HttpUrl url = HttpUrl.get(client.getMasterUrl()).resolve(path);Request.Builder requestBuilder =new Request.Builder().url(url).addHeader(""Content-Type"", ""application/json"").addHeader(""Authorization"", ""Bearer "" + apiToken).method(method,body != null? RequestBody.create(MediaType.parse(""application/json""), body.encode()): null);try (Response response = httpClient.newCall(requestBuilder.build()).execute()) {try (ResponseBody responseBody = response.body()) {String responseString = responseBody != null ? responseBody.string() : ""{}"";if (response.isSuccessful()) {return new JsonObject(responseString);} else {if (errorOk) {return null;} else {String errorMessage =String.format(""Error performing %s on %s: %d, %s"",method, path, response.code(), responseString);throw new RuntimeException(errorMessage);}}}} catch (IOException e) {throw new UncheckedIOException(e);}}}"	1
3753	public class A {public Renderable getRenderable(Image image, ImageTypeEnum imageType, OnErrorTypeEnum onErrorType)throws JRException {byte[] data = null;try {data =JRImageLoader.getInstance(context.getJasperReportsContext()).loadBytesFromAwtImage(image, imageType);} catch (Exception e) {if (log.isDebugEnabled()) {}return handleImageError(e, onErrorType);}return SimpleDataRenderer.getInstance(data);}}	1
3754	public class A {public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb,final int seqid) {final org.apache.thrift.AsyncProcessFunction fcall = this;return new org.apache.thrift.async.AsyncMethodCallback<Void>() {public void onComplete(Void o) {revokeTablePermission_result result = new revokeTablePermission_result();try {fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);} catch (org.apache.thrift.transport.TTransportException e) {fb.close();} catch (java.lang.Exception e) {onError(e);}}public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;revokeTablePermission_result result = new revokeTablePermission_result();if (e instanceof ThriftSecurityException) {result.sec = (ThriftSecurityException) e;result.setSecIsSet(true);msg = result;} else if (e instanceof ThriftTableOperationException) {result.tope = (ThriftTableOperationException) e;result.setTopeIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}};}}	6
3755	public class A {private void takeSnapshot(OutputStream out) throws IOException {ObjectOutputStream stream = new ObjectOutputStream(out);stream.writeUTF(getClass().getName());stream.writeInt(LOG_VERSION);stream.writeObject(myServiceID);stream.writeLong(eventID);stream.writeInt(unicastPort);stream.writeObject(memberGroups);stream.writeObject(lookupGroups);stream.writeLong(announcementSeqNo);marshalAttributes(lookupAttrs, stream);marshalLocators(lookupLocators, stream);for (Iterator iter = serviceByID.entrySet().iterator(); iter.hasNext(); ) {Map.Entry entry = (Map.Entry) iter.next();if (myServiceID != entry.getKey()) stream.writeObject(entry.getValue());}stream.writeObject(null);for (Iterator iter = eventByID.values().iterator(); iter.hasNext(); ) {stream.writeObject(iter.next());}stream.writeObject(null);stream.flush();}}	1
3756	public class A {private void save(Tuple tuple) {byte[] rowKey = mapper.rowKey(tuple);ColumnList cols = mapper.columns(tuple);Durability durability = writeToWAL ? Durability.SYNC_WAL : Durability.SKIP_WAL;Optional<Long> ttl = mapper.getTTL(tuple);if (ttl.isPresent()) {hbaseClient.addMutation(rowKey, cols, durability, ttl.get());} else {hbaseClient.addMutation(rowKey, cols, durability);}batchHelper.addBatch(tuple);}}	1
3757	"public class A {private List<WebElement> findElementsByLocator(LocatorHandler handler, WebDriver driver, Locator ploc, List<Locator> selectedFrameLocators) {List<WebElement> result = handler.handle(driver, ploc.arg);if (!result.isEmpty()) return result;if (ploc.frameIndexList.size() >= MAX_FRAME_DEPTH) {return null;}int iframeCount = driver.findElements(By.tagName(""iframe"")).size();for (int index = 0; index < iframeCount; index++) {pushFrame(driver, ploc, index);result = findElementsByLocator(handler, driver, ploc, selectedFrameLocators);if (result != null) return result;popFrame(driver, ploc, selectedFrameLocators);}int frameCount = driver.findElements(By.tagName(""frame"")).size();for (int index = 0; index < frameCount; index++) {pushFrame(driver, ploc, index);result = findElementsByLocator(handler, driver, ploc, selectedFrameLocators);if (result != null) return result;popFrame(driver, ploc, selectedFrameLocators);}return null;}}"	1
3758	"public class A {@Overridepublic void connectionLost(Throwable throwable) {String message = getLogPrefix() + ""connection lost"";receiver.getAdapter().getMessageKeeper().add(message);ibisExceptionListener.exceptionThrown(this, throwable);}}"	1
3759	"public class A {private static File findToolsJar(String javaHome) {if (JavaVersionUtils.isGreaterThanJava8()) {return null;}File toolsJar = new File(javaHome, ""lib/tools.jar"");if (!toolsJar.exists()) {toolsJar = new File(javaHome, ""../lib/tools.jar"");}if (!toolsJar.exists()) {toolsJar = new File(javaHome, ""../../lib/tools.jar"");}if (!toolsJar.exists()) {throw new IllegalArgumentException(""Can not find tools.jar under java home: "" + javaHome);}return toolsJar;}}"	1
3760	"public class A {private boolean isSparkOrigin(String objectName) {if (cachedSparkOriginated.containsKey(objectName)) {return cachedSparkOriginated.get(objectName).booleanValue();}String obj = objectName;Boolean sparkOriginated = Boolean.FALSE;final StoredObject so = mJossAccount.getAccount().getContainer(container).getObject(obj);if (so != null && so.exists()) {final Object sparkOrigin = so.getMetadata(""Data-Origin"");if (sparkOrigin != null) {String tmp = (String) sparkOrigin;if (tmp.equals(""stocator"")) {sparkOriginated = Boolean.TRUE;}}}cachedSparkOriginated.put(objectName, sparkOriginated);return sparkOriginated.booleanValue();}}"	2
3761	"public class A {public static void writeToken(String token, String tokenCacheFile) throws IOException {File cacheFile = new File(tokenCacheFile);try (Writer writer = new FileWriterWithEncoding(cacheFile, StandardCharsets.UTF_8)) {writer.write(token);writer.flush();cacheFile.setReadable(false, false);cacheFile.setReadable(true, true);if (!cacheFile.setWritable(true, true)) {throw new KrbException(""Cache file is not readable."");}} catch (IOException ioe) {if (cacheFile.delete()) {System.err.println(""Cache file is deleted."");}} catch (KrbException e) {}}}"	1
3762	"public class A {private void checkAndHandleEndOfNonCircularTrajectory(EpisimPerson person, DayOfWeek day) {Id<ActivityFacility> firstFacilityId = person.getFirstFacilityId(day);double now = EpisimUtils.getCorrectedTime(episimConfig.getStartOffset(), 0, iteration + 1);if (person.isInContainer()) {EpisimContainer<?> container = person.getCurrentContainer();Id<?> lastFacilityId = container.getContainerId();if (container instanceof EpisimFacility&& this.pseudoFacilityMap.containsKey(lastFacilityId)&& !firstFacilityId.equals(lastFacilityId)) {EpisimFacility lastFacility = this.pseudoFacilityMap.get(lastFacilityId);int index = person.getEndOfDay(day.minus(1));String actType = person.getTrajectory().get(index).actType;contactModel.infectionDynamicsFacility(person, lastFacility, now, actType);double timeSpent = now - lastFacility.getContainerEnteringTime(person.getPersonId());person.addSpentTime(actType, timeSpent);if (iteration > 1 && timeSpent > 86400 && !actType.equals(""home"")) {}lastFacility.removePerson(person);EpisimFacility firstFacility = this.pseudoFacilityMap.get(firstFacilityId);firstFacility.addPerson(person, now);contactModel.notifyEnterFacility(person, firstFacility, now);} else if (container instanceof EpisimVehicle&& this.vehicleMap.containsKey(lastFacilityId)) {EpisimVehicle lastVehicle = this.vehicleMap.get(lastFacilityId);contactModel.infectionDynamicsVehicle(person, lastVehicle, now);person.addSpentTime(""pt"", now - lastVehicle.getContainerEnteringTime(person.getPersonId()));lastVehicle.removePerson(person);EpisimFacility firstFacility = this.pseudoFacilityMap.get(firstFacilityId);firstFacility.addPerson(person, now);contactModel.notifyEnterFacility(person, firstFacility, now);}} else {EpisimFacility firstFacility = this.pseudoFacilityMap.get(firstFacilityId);firstFacility.addPerson(person, now);contactModel.notifyEnterFacility(person, firstFacility, now);}}}"	1
3763	public class A {@Test(groups = {JDBC, SIMBA_JDBC})@Requires(MutableAllTypesTable.class)public void preparedInsertVarbinaryApi() {if (usingTeradataJdbcDriver(connection())) {String tableNameInDatabase = mutableTablesState().get(TABLE_NAME_MUTABLE).getNameInDatabase();String insertSqlWithTable = String.format(INSERT_SQL, tableNameInDatabase);String selectSqlWithTable = String.format(SELECT_STAR_SQL, tableNameInDatabase);defaultQueryExecutor().executeQuery(insertSqlWithTable,param(TINYINT, null),param(SMALLINT, null),param(INTEGER, null),param(BIGINT, null),param(FLOAT, null),param(DOUBLE, null),param(DECIMAL, null),param(DECIMAL, null),param(TIMESTAMP, null),param(DATE, null),param(VARCHAR, null),param(VARCHAR, null),param(CHAR, null),param(BOOLEAN, null),param(VARBINARY, new byte[] {0, 1, 2, 3, 0, 42, -7}));QueryResult result = defaultQueryExecutor().executeQuery(selectSqlWithTable);assertColumnTypes(result);assertThat(result).containsOnly(row(null,null,null,null,null,null,null,null,null,null,null,null,null,null,new byte[] {0, 1, 2, 3, 0, 42, -7}));} else {}}}	1
3764	"public class A {public static java.util.List<com.liferay.dynamic.data.mapping.model.DDMStructure>getDDMStructures(HttpPrincipal httpPrincipal,long[] groupIds,long folderId,int restrictionType,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.dynamic.data.mapping.model.DDMStructure>orderByComparator)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(JournalFolderServiceUtil.class, ""getDDMStructures"", _getDDMStructuresParameterTypes5);MethodHandler methodHandler =new MethodHandler(methodKey, groupIds, folderId, restrictionType, orderByComparator);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<com.liferay.dynamic.data.mapping.model.DDMStructure>) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
3765	"public class A {public static WikiPage getPage(PortletRequest portletRequest) throws Exception {HttpServletRequest httpServletRequest = PortalUtil.getHttpServletRequest(portletRequest);long nodeId = ParamUtil.getLong(httpServletRequest, ""nodeId"");String title = ParamUtil.getString(httpServletRequest, ""title"");double version = ParamUtil.getDouble(httpServletRequest, ""version"");WikiNode node = null;try {if (nodeId > 0) {node = WikiNodeServiceUtil.getNode(nodeId);}} catch (NoSuchNodeException noSuchNodeException) {if (_log.isDebugEnabled()) {}}if (node == null) {node = (WikiNode) httpServletRequest.getAttribute(WikiWebKeys.WIKI_NODE);if (node != null) {nodeId = node.getNodeId();}}WikiWebComponentProvider wikiWebComponentProvider =WikiWebComponentProvider.getWikiWebComponentProvider();WikiGroupServiceConfiguration wikiGroupServiceConfiguration =wikiWebComponentProvider.getWikiGroupServiceConfiguration();if (Validator.isNull(title)) {title = wikiGroupServiceConfiguration.frontPageName();}try {return WikiPageServiceUtil.getPage(nodeId, title, version);} catch (NoSuchPageException noSuchPageException) {if (title.equals(wikiGroupServiceConfiguration.frontPageName()) && (version == 0)) {return getFirstVisiblePage(nodeId, portletRequest);}throw noSuchPageException;}}}"	1
3766	public class A {private GeocodeResponse getDefaultGeocodeResponse(double lat, double lng, int x, int y, int colour, String hex) {GeocodeResponse locations;if (colourKey.containsKey(colour)) {locations = colourKey.get(colour);return locations;}locations = loadFn.apply(LatLng.builder().withLatitude(lat).withLongitude(lng).build());if (locations.getLocations().isEmpty()) {if (missEqualsFail) {} else {}colourKey.put(colour, locations);} else {colourKey.put(colour, locations);}return locations;}}	4
3767	public class A {public void abort() {cancel(false);if (logger.isDebugEnabled()) {}aborted = true;responseText = null;getRequest().getHeaders().clear();if (readyState == ReadyState.HEADERS_RECEIVED || readyState == ReadyState.LOADING) {readyState = ReadyState.DONE;if (isAsynchronous()) {notifyReadyStateChange(false);notifyAbort();}} else {readyState = ReadyState.UNSENT;}}}	1
3768	public class A {@Overridepublic Map<ReturnableData, Object> handle(final RequestWrapper request, final HttpSession session) {final User user = (User) session.getAttribute(SessionAttribute.USER);assert (user != null);if (!user.isAdmin()) {return error(ErrorCode.NOT_ADMIN);}if (null == request.getParameter(AjaxRequest.NICKNAME)|| request.getParameter(AjaxRequest.NICKNAME).isEmpty()) {return error(ErrorCode.NO_NICK_SPECIFIED);}final String banIp;final User kickUser = connectedUsers.getUser(request.getParameter(AjaxRequest.NICKNAME));if (null != kickUser) {banIp = kickUser.getHostname();final Map<ReturnableData, Object> kickData = new HashMap<ReturnableData, Object>();kickData.put(LongPollResponse.EVENT, LongPollEvent.BANNED.toString());final QueuedMessage qm = new QueuedMessage(MessageType.KICKED, kickData);kickUser.enqueueMessage(qm);connectedUsers.removeUser(kickUser, DisconnectReason.BANNED);} else {banIp = request.getParameter(AjaxRequest.NICKNAME);}banList.add(banIp);return new HashMap<ReturnableData, Object>();}}	2
3769	public class A {private String createSdpResponseForUser(RoomParticipant sender, String sdpOffer) {WebRtcEndpoint receivingEndpoint = sender.getReceivingEndpoint();if (receivingEndpoint == null) {return null;}if (sender.getName().equals(name)) {return receivingEndpoint.processOffer(sdpOffer);}if (sendingEndpoints.get(sender.getName()) != null) {return null;}WebRtcEndpoint sendingEndpoint = new WebRtcEndpoint.Builder(pipeline).build();WebRtcEndpoint oldSendingEndpoint =sendingEndpoints.putIfAbsent(sender.getName(), sendingEndpoint);if (oldSendingEndpoint != null) {return null;}try {receivingEndpoint = sender.getReceivingEndpoint();if (receivingEndpoint != null) {receivingEndpoint.connect(sendingEndpoint);return sendingEndpoint.processOffer(sdpOffer);}} catch (KurentoServerException e) {if (e.getCode() == 40101) {} else {sendingEndpoint.release(new Continuation<Void>() {@Overridepublic void onSuccess(Void result) throws Exception {}@Overridepublic void onError(Throwable cause) throws Exception {}});}sendingEndpoints.remove(sender.getName());releaseEndpoint(sender.getName(), sendingEndpoint);}return null;}}	9
3770	"public class A {@Override@edu.umd.cs.findbugs.annotations.SuppressWarnings(value = {""UL_UNRELEASED_LOCK"", ""IMSE_DONT_CATCH_IMSE""})public void run() {boolean haveLock = false;synchronized (clearLockSync) {try {while (locked && dm.isCurrentMember(locker)) {try {clearLockSync.wait();} catch (InterruptedException e) {}}if (logger.isDebugEnabled()) {}try {versionLock.writeLock().lock();lockOwner = locker;doUnlock = false;locked = true;haveLock = true;acquiredLock.countDown();} catch (IllegalMonitorStateException e) {return;}while (!doUnlock && dm.isCurrentMember(locker)) {try {clearLockSync.wait(250);} catch (InterruptedException e) {}}} finally {if (haveLock) {locked = false;versionLock.writeLock().unlock();doUnlock = false;clearLockSync.notifyAll();}acquiredLock.countDown();}}}}"	2
3771	"public class A {@RuleAction(label = ""initiateAutoArm"", description = ""Initiate auto arm"")public void initiateAutoArm(@ActionInput(name = ""pin"", label = ""pin"", description = ""The pin 4 or 6 digit pin"") @NullableString pin) {ThingHandlerPartition handler = this.handler;if (handler == null) {return;}String adjustedPin = adjustPin(pin);if (adjustedPin == null) {return;}handler.initiateAutoArm(adjustedPin);}}"	1
3772	"public class A {void getTrigger(RoutingContext routing, boolean isFullTrigger) {routing.vertx().executeBlocking(future -> {String tenantId = checkTenant(routing);String triggerId = routing.request().getParam(""triggerId"");Object found = null;try {found =isFullTrigger? definitionsService.getFullTrigger(tenantId, triggerId): definitionsService.getTrigger(tenantId, triggerId);} catch (NotFoundException e) {} catch (IllegalArgumentException e) {throw new BadRequestException(""Bad arguments: "" + e.getMessage());} catch (Exception e) {throw new InternalServerException(e.toString());}if (found == null) {throw new ResponseUtil.NotFoundException(""triggerId: "" + triggerId + "" not found"");}log.debugf(""Trigger: %s"", found);future.complete(found);},res -> result(routing, res));}}"	1
3773	"public class A {public static com.liferay.portal.kernel.model.Group updateGroup(HttpPrincipal httpPrincipal, long groupId, String typeSettings)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(GroupServiceUtil.class, ""updateGroup"", _updateGroupParameterTypes38);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, typeSettings);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.Group) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
3774	public class A {@Overridepublic void closeAnalyzer() throws Exception {if (tempFileLocation != null && tempFileLocation.exists()) {final boolean success = FileUtils.delete(tempFileLocation);if (!success && tempFileLocation.exists()) {final String[] l = tempFileLocation.list();if (l != null && l.length > 0) {}}}}}	2
3775	"public class A {@Test(groups = {""Phase 1 Calendar""},description = ""empty column sunday"",priority = 149)public void verifyTest_2_3_8() throws Exception {Context context = new Context();CheckPointReport result =verifyValidation(log, context, ""calendar_3_8"", GTFS_1_GTFS_Common_12, SEVERITY.ERROR, RESULT.NOK, true);Assert.assertEquals(result.getCheckPointErrorCount(), 1, ""detail count"");for (CheckPointErrorReport detail : getDetails(context, result)) {Assert.assertNotNull(detail.getSource(), ""detail must refer a source"");Assert.assertNotNull(detail.getSource().getFile(), ""detail must refer a file source"");Assert.assertEquals(detail.getSource().getFile().getFilename(), ""calendar.txt"", ""detail must refer bad file"");Assert.assertEquals(detail.getSource().getFile().getLineNumber(),Integer.valueOf(2),""detail must refer bad line"");}}}"	1
3776	public class A {protected List<?> execute() {if (getQuery().isEmpty()) {return null;}return execute(getQuery());}}	1
3777	"public class A {@Testpublic void testCQWithBridgeClient() throws Exception {final Host host = Host.getHost(0);VM server1 = host.getVM(0);VM client = host.getVM(1);cqDUnitTest.createServer(server1, 0, false, DataPolicy.REPLICATE);final int port1 = server1.invoke(() -> CqQueryDUnitTest.getCacheServerPort());final String serverHost = NetworkUtils.getServerHostName(server1.getHost());final String[] regions = cqDUnitTest.regions;final int[] serverPorts = new int[] {port1};SerializableRunnable createClientWithPool =new CacheSerializableRunnable(""createClientWithPool"") {@Overridepublic void run2() throws CacheException {try {getCache().getQueryService();} catch (Exception cqe) {cqe.printStackTrace();fail(""Failed to getCQService."");}AttributesFactory regionFactory = new AttributesFactory();regionFactory.setScope(Scope.LOCAL);ClientServerTestCase.configureConnectionPool(regionFactory, serverHost, serverPorts[0], -1, true, -1, -1, null);for (int i = 0; i < regions.length; i++) {createRegion(regions[i], regionFactory.createRegionAttributes());LogWriterUtils.getLogWriter()}}};client.invoke(createClientWithPool);cqDUnitTest.createCQ(client, ""testCQWithPool_1"", cqDUnitTest.cqs[0]);cqDUnitTest.executeCQ(client, ""testCQWithPool_1"", false, null);cqDUnitTest.closeClient(client);cqDUnitTest.closeServer(server1);}}"	2
3778	"public class A {public void actionPerformed(ActionEvent event) {if (table.getSelectedRow() < 0) {} else {selectedrow = table.convertRowIndexToModel(table.getSelectedRow());Medical med = (Medical) (((MedicalBrowsingModel) model).getValueAt(selectedrow, -1));StringBuilder deleteMessage =new StringBuilder().append(MessageBundle.getMessage(""angal.medicals.deletemedical"")).append("" \"""").append(med.getDescription()).append(""\"" ?"");int n =JOptionPane.showConfirmDialog(MedicalBrowser.this,deleteMessage.toString(),MessageBundle.getMessage(""angal.hospital""),JOptionPane.YES_NO_OPTION);boolean deleted;try {deleted = medicalBrowsingManager.deleteMedical(med);} catch (OHServiceException e) {deleted = false;OHServiceExceptionUtil.showMessages(e);}if ((n == JOptionPane.YES_OPTION) && deleted) {pMedicals.remove(selectedrow);model.fireTableDataChanged();table.updateUI();}}}}"	1
3779	"public class A {@PayloadRoot(localPart = ""ClearAlarmRegisterAsyncRequest"",namespace = SMARTMETER_MONITORING_NAMESPACE)@ResponsePayloadpublic ClearAlarmRegisterResponse getClearAlarmRegisterResponse(@OrganisationIdentification final String organisationIdentification,@RequestPayload final ClearAlarmRegisterAsyncRequest request)throws OsgpException {ClearAlarmRegisterResponse response = null;try {response = new ClearAlarmRegisterResponse();final ResponseData responseData =this.responseDataService.dequeue(request.getCorrelationUid(), ComponentType.WS_SMART_METERING);this.throwExceptionIfResultNotOk(responseData, ""Retrieving clear alarm register"");response.setResult(OsgpResultType.fromValue(responseData.getResultType().getValue()));if (responseData.getMessageData() instanceof String) {response.setDescription((String) responseData.getMessageData());}} catch (final FunctionalException e) {throw e;} catch (final Exception e) {this.handleException(e);}return response;}}"	2
3780	public class A {public void MethodWithClassDbAnnotated() {_dummy.sayHello();}}	1
3781	"public class A {private String addDocument(Map.Entry<AttachmentInfo, Metacard> attachmentInfoAndMetacard,List<String> contentTypeList,String transformerParam,InputStream message)throws CatalogServiceException {try {MimeType mimeType = getMimeType(contentTypeList);CreateResponse createResponse;if (attachmentInfoAndMetacard == null) {CreateRequest createRequest =new CreateRequestImpl(generateMetacard(mimeType, null, message, transformerParam));createResponse = catalogFramework.create(createRequest);} else {String id =attachmentInfoAndMetacard.getValue() == null? null: attachmentInfoAndMetacard.getValue().getId();if (id == null) {id = uuidGenerator.generateUuid();}CreateStorageRequest streamCreateRequest =new CreateStorageRequestImpl(Collections.singletonList(new IncomingContentItem(id,attachmentInfoAndMetacard.getKey().getStream(),attachmentInfoAndMetacard.getKey().getContentType(),attachmentInfoAndMetacard.getKey().getFilename(),0L,attachmentInfoAndMetacard.getValue())),null);createResponse = catalogFramework.create(streamCreateRequest);}String id = createResponse.getCreatedMetacards().get(0).getId();if (INGEST_LOGGER.isInfoEnabled()) {}return id;} catch (SourceUnavailableException e) {String exceptionMessage = ""Cannot create catalog entry because source is unavailable: "";LOGGER.info(exceptionMessage, e);throw new InternalServerErrorException(exceptionMessage);} catch (InternalIngestException e) {String exceptionMessage = ""Error while storing entry in catalog: "";throw new InternalServerErrorException(exceptionMessage);} catch (MetacardCreationException | IngestException e) {String errorMessage = ""Error while storing entry in catalog: "";throw new CatalogServiceException(errorMessage);} finally {IOUtils.closeQuietly(message);}}}"	6
3782	"public class A {public synchronized void deregisterProcessor(final Processor processor) {if (!isProcessorRegistered(processor)) {if (this.processor == null) {} else {}return;}this.processor = null;sessions.keySet().forEach(sessionId -> {try {disconnect(sessionId, ""Processing has stopped."");} catch (IOException e) {}});}}"	3
3783	"public class A {@Overridepublic void saveTestSuiteResult() {testSuite.refreshState();MapSqlParameterSource tcParameters = getCompleteParameters();String sqlStatement =""UPDATE sakuli_suites ""+ createSqlSetStringForNamedParameter(tcParameters.getValues())+ "" where id=:id"";int affectedRows = getNamedParameterJdbcTemplate().update(sqlStatement, tcParameters);}}"	4
3784	"public class A {void detach() {StringBuilder sql = new StringBuilder();sql.append(""ALTER TABLE "");sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.abstractLabel.getPrefix() + this.abstractLabel.getName()));sql.append("" DETACH PARTITION "");sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.getAbstractLabel().getSchema().getName()));sql.append(""."");sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.name));if (this.sqlgGraph.getSqlDialect().needsSemicolon()) {sql.append("";"");}if (logger.isDebugEnabled()) {}Connection conn = this.sqlgGraph.tx().getConnection();try (Statement stmt = conn.createStatement()) {stmt.execute(sql.toString());} catch (SQLException e) {throw new RuntimeException(e);}}}"	1
3785	public class A {public EventBean getEvent(Node result) {if (eventType == null) {EventType candidateEventType = eventTypeResolver.getTypeByName(eventTypeName);if (candidateEventType == null) {return null;}if (!(candidateEventType instanceof BaseXMLEventType)) {return null;}eventType = candidateEventType;}return eventBeanTypedEventFactory.adapterForTypedDOM(result, eventType);}}	2
3786	"public class A {public void testSoftRefCache() throws Exception {ICache<byte[]> c =CacheManager.inst.getCache(""bytesCache"", byte[].class, CacheType.SOFT_REFERENCE);for (int h = 0; h < 10; h++) {for (int i = h * 10, max = i + 10; i < max; i++) {c.put(String.valueOf(i), new byte[100 * 1024]);c.get(""0"");}for (int i = 0; i < 10; i++) {}}log.debug(""size: "" + c.size());for (int i = 0; i < 100; i++) {}}}"	6
3787	public class A {private void inspectNode(ZToolAddress16 nwkAddress, ZToolAddress64 ieeeAddress) {int nwk = nwkAddress.get16BitValue();final String ieee = IEEEAddress.toString(ieeeAddress.getLong());ZigBeeNodeImpl node;boolean isNew = false, correctlyInspected;final ZigBeeNetwork network = ApplicationFrameworkLayer.getAFLayer(driver).getZigBeeNetwork();synchronized (network) {node = network.getNode(ieee);if (node == null) {node = new ZigBeeNodeImpl(nwk, ieeeAddress, (short) driver.getCurrentPanId());isNew = true;network.addNode(node);}}if (isNew) {ZDO_NODE_DESC_REQ nodeDescriptorReq = new ZDO_NODE_DESC_REQ(nwkAddress.get16BitValue());final ZDO_NODE_DESC_RSP nodeResult = driver.sendZDONodeDescriptionRequest(nodeDescriptorReq);if (nodeResult == null) {} else {node.setNodeDescriptor(new ZigBeeNodeDescriptor(nodeResult));if (nodeResult.ComplexDescriptorAvailable) {}if (nodeResult.UserDescriptorAvailable) {}}ZDO_POWER_DESC_REQ powerDescriptorReq = new ZDO_POWER_DESC_REQ(nwkAddress.get16BitValue());final ZDO_POWER_DESC_RSP powerResult =driver.sendZDOPowerDescriptionRequest(powerDescriptorReq);if (powerResult == null) {} else {node.setPowerDescriptor(new ZigBeeNodePowerDescriptor(powerResult));}correctlyInspected = inspectEndpointOfNode(nwk, node);if (correctlyInspected) {network.notifyNodeDiscovered(node);return;} else {network.removeNode(node);}} else {if (node.getNetworkAddress() != nwk) {node.setNetworkAddress(nwk);for (final ZigBeeEndpoint endpoint : network.getEndpoints(node)) {network.notifyEndpointUpdated(endpoint);}network.notifyNodeUpdated(node);}}}}	7
3788	"public class A {@Testpublic void parseEofError() {String rac =""jdbc:oracle:thin:@(DESCRIPTION=(LOAD_BALANCE = off )""+ ""(ADDRESS  =  ( PROTOCOL = TCP)(HOST = 1.2.3.4 ) (PORT = 1521 ))""+ "" ( CONNECT_DATA = ( SID = sid ) ) "";OracleNetConnectionDescriptorParser parser = new OracleNetConnectionDescriptorParser(rac);try {KeyValue keyValue = parser.parse();Assert.fail();} catch (OracleConnectionStringException e) {}}}"	1
3789	"public class A {public static void main(String[] args) throws Exception {Preconditions.checkArgument(args.length == 5, ""Illegal number of arguments. Expected: 5, Actual: "" + args.length);String stormId = args[0];String assignmentId = args[1];String supervisorPort = args[2];String portStr = args[3];String workerId = args[4];Map<String, Object> conf = ConfigUtils.readStormConfig();Utils.setupWorkerUncaughtExceptionHandler();StormCommon.validateDistributedMode(conf);int supervisorPortInt = Integer.parseInt(supervisorPort);Worker worker =new Worker(conf,null,stormId,assignmentId,supervisorPortInt,Integer.parseInt(portStr),workerId);int workerShutdownSleepSecs =ObjectReader.getInt(conf.get(Config.SUPERVISOR_WORKER_SHUTDOWN_SLEEP_SECS));Utils.addShutdownHookWithDelayedForceKill(worker::shutdown, workerShutdownSleepSecs);worker.start();}}"	1
3790	public class A {@Overrideprotected void runPhase(IParadoxInitialLoginCommunicator communicator, Object... args) {String password = communicator.getPassword();if (communicator.isEncrypted()) {EncryptionHandler.getInstance().updateKey(ParadoxUtil.getBytesFromString(password));}ParadoxIPPacket packet =new ParadoxIPPacket(ParadoxUtil.getBytesFromString(password), false).setCommand(HeaderCommand.CONNECT_TO_IP_MODULE);sendLogonPhasePacket(communicator, packet);}}	1
3791	public class A {@Overridepublic boolean waitForChannelToReachAgi(long timeout, TimeUnit timeunit)throws InterruptedException {boolean tmp = hasReachedAgi.await(timeout, timeunit);return tmp;}}	2
3792	"public class A {private Map<String, Boolean> getReferencesInfo(IPage page) {Map<String, Boolean> references = new HashMap<>();try {String[] defNames = applicationContext.getBeanNamesForType(PageUtilizer.class);for (String defName : defNames) {Object service = null;try {service = applicationContext.getBean(defName);} catch (Throwable t) {service = null;}if (service != null) {PageUtilizer pageUtilizer = (PageUtilizer) service;List<?> utilizers = pageUtilizer.getPageUtilizers(page.getCode());if (utilizers != null && !utilizers.isEmpty()) {references.put(pageUtilizer.getName(), true);} else {references.put(pageUtilizer.getName(), false);}}}} catch (ApsSystemException ex) {throw new RestServerError(""error in getReferencingObjects "", ex);}return references;}}"	2
3793	public class A {public String cache(final Path file, final String id) {if (log.isDebugEnabled()) {}if (null == id) {cache.remove(new SimplePathPredicate(file));file.attributes().setVersionId(null);} else {cache.put(new SimplePathPredicate(file), id);file.attributes().setVersionId(id);}return id;}}	1
3794	public class A {private void applyColumnOverrides(TableConfiguration tc, Map<ActualTableName, List<IntrospectedColumn>> columns) {for (Map.Entry<ActualTableName, List<IntrospectedColumn>> entry : columns.entrySet()) {for (IntrospectedColumn introspectedColumn : entry.getValue()) {ColumnOverride columnOverride =tc.getColumnOverride(introspectedColumn.getActualColumnName());if (columnOverride != null) {if (logger.isDebugEnabled()) {}if (stringHasValue(columnOverride.getJavaProperty())) {introspectedColumn.setJavaProperty(columnOverride.getJavaProperty());}if (stringHasValue(columnOverride.getJavaType())) {introspectedColumn.setFullyQualifiedJavaType(new FullyQualifiedJavaType(columnOverride.getJavaType()));}if (stringHasValue(columnOverride.getJdbcType())) {introspectedColumn.setJdbcTypeName(columnOverride.getJdbcType());}if (stringHasValue(columnOverride.getTypeHandler())) {introspectedColumn.setTypeHandler(columnOverride.getTypeHandler());}if (columnOverride.isColumnNameDelimited()) {introspectedColumn.setColumnNameDelimited(true);}introspectedColumn.setGeneratedAlways(columnOverride.isGeneratedAlways());introspectedColumn.setProperties(columnOverride.getProperties());}}}}}	1
3795	public class A {public static synchronized Cipher getCipher(String transformation)throws NoSuchAlgorithmException, NoSuchPaddingException, NoSuchProviderException {Cipher result = Cipher.getInstance(transformation);return result;}}	1
3796	"public class A {@ExpectedLog(expectedClass = ElasticsearchIndexWriter.class,expectedLevel = ExpectedLog.Level.WARNING,expectedLog = ""Bulk delete failed"")@Testpublic void testDeleteDocuments() {SearchContext searchContext = new SearchContext();searchContext.setCompanyId(1);List<String> uids = new ArrayList<>();uids.add(""1"");IndexWriter indexWriter = getIndexWriter();try {indexWriter.deleteDocuments(searchContext, uids);} catch (SearchException searchException) {if (_log.isDebugEnabled()) {}}}}"	1
3797	public class A {private boolean run(Session session, int iterations) {try {CountDownLatch latch = new CountDownLatch(iterations);long factor = (logger.isDebugEnabled() ? 25 : 1) * 100;Thread testThread = Thread.currentThread();Scheduler.Task task =client.getScheduler().schedule(() -> {testThread.interrupt();},iterations * factor,TimeUnit.MILLISECONDS);long successes = 0;long begin = System.nanoTime();for (int i = 0; i < iterations; ++i) {boolean success = test(session, latch);if (success) ++successes;}assertTrue(latch.await(iterations, TimeUnit.SECONDS));long end = System.nanoTime();assertThat(successes, Matchers.greaterThan(0L));task.cancel();long elapsed = TimeUnit.NANOSECONDS.toMillis(end - begin);return true;} catch (Exception x) {x.printStackTrace();return false;}}}	2
3798	"public class A {private boolean isUnindexed(JexlNode node) {List<ASTIdentifier> identifiers = JexlASTHelper.getIdentifiers(node);for (ASTIdentifier identifier : identifiers) {if (!(identifier.image.equals(Constants.ANY_FIELD)|| identifier.image.equals(Constants.NO_FIELD))) {if (this.indexedFields == null) {if (config.getIndexedFields() != null && !config.getIndexedFields().isEmpty()) {this.indexedFields = config.getIndexedFields();} else {try {this.indexedFields = this.helper.getIndexedFields(config.getDatatypeFilter());} catch (Exception ex) {throw new RuntimeException(""got exception when using MetadataHelper to get indexed fields "", ex);}}}if (this.indexedFields.contains(JexlASTHelper.deconstructIdentifier(identifier)) == false) {return true;}}}return false;}}"	1
3799	"public class A {public static void main(String[] args) throws Exception {Logging.initialize();DistributedQueryRunner queryRunner =createRedisQueryRunner(new RedisServer(),ImmutableMap.of(""http-server.http.port"", ""8080""),""string"",TpchTable.getTables());Logger log = Logger.get(RedisQueryRunner.class);}}"	2
3800	public class A {@Overridepublic void clearCompositePhenomenonsForObservableProperty(String observableProperty) {this.compositePhenomenonsForObservableProperty.remove(observableProperty);}}	1
3801	public class A {public static com.liferay.portal.kernel.model.GroupSoap getUserGroup(long companyId, long userId)throws RemoteException {try {com.liferay.portal.kernel.model.Group returnValue =GroupServiceUtil.getUserGroup(companyId, userId);return com.liferay.portal.kernel.model.GroupSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
3802	public class A {private void removePrincipals(final Collection<Principal> principals) {for (final Principal principal : principals) {if (m_subject.getPrincipals().contains(principal)) {m_subject.getPrincipals().remove(principal);if (log.isDebugEnabled()) {}}}}}	1
3803	public class A {@PostConstructpublic void start() {try {for (Service svc : services) {if (!isServiceUsed(svc)) {continue;}svc.start();}} catch (Exception e) {throw new RuntimeException(e);}}}	1
3804	public class A {@Overridepublic final void setupValueChangedListeners() {model.activeModuleProperty().addListener((observable, oldModule, newModule) -> {view.showToolbar(false);view.hideActiveView();if (Objects.isNull(newModule)) {view.setAddModuleView();} else {Node activeModuleView = model.getActiveModuleView();Node previousView = openModuleViews.put(newModule, activeModuleView);if (previousView != null && previousView != activeModuleView) {view.removeView(previousView);}view.setContent(activeModuleView);VBox.setVgrow(activeModuleView, Priority.ALWAYS);view.toolbarControl.toolbarControlsLeftProperty().unbind();view.toolbarControl.toolbarControlsRightProperty().unbind();view.toolbarControl.toolbarControlsLeftProperty().bindContent(newModule.getToolbarControlsLeft());view.toolbarControl.toolbarControlsRightProperty().bindContent(newModule.getToolbarControlsRight());view.showToolbar(!view.toolbarControl.isEmpty());view.toolbarControl.emptyProperty().addListener((observable1, wasEmpty, isEmpty) -> view.showToolbar(!isEmpty));}});WorkbenchUtils.addListListener(openModules,module -> {},module -> {view.removeView(openModuleViews.get(module));openModuleViews.remove(module);});}}	2
3805	public class A {public void attachDirty(StgMbGefaehrskatTxt instance) {try {sessionFactory.getCurrentSession().saveOrUpdate(instance);} catch (RuntimeException re) {throw re;}}}	3
3806	"public class A {public void onXAEvent(Xid xid, String state) throws TransactionJournalingException {XidImpl xidImpl = null;if (""start"".equals(state)) {createXid(xid);} else {xidImpl = resolveXid(xid);if (xidImpl == null) {throw new TransactionJournalingException(""Could not resolve XidImpl for ["" + xid + ""]"", null);}xidImpl.setState(state);long now = System.currentTimeMillis();xidImpl.setLastUpdatedDateTime(now);try {dao.save(xidImpl);} catch (TransactionalResourceCommandPersistenceException e) {throw new TransactionJournalingException(""Exception persisting Xid"", e);}}}}"	1
3807	"public class A {@Overridepublic boolean updateConfigInfoCas(final ConfigInfo configInfo,final String srcIp,final String srcUser,final Timestamp time,final Map<String, Object> configAdvanceInfo,final boolean notify) {return tjt.execute(status -> {try {ConfigInfo oldConfigInfo =findConfigInfo(configInfo.getDataId(), configInfo.getGroup(), configInfo.getTenant());String appNameTmp = oldConfigInfo.getAppName();if (configInfo.getAppName() == null) {configInfo.setAppName(appNameTmp);}int rows =updateConfigInfoAtomicCas(configInfo, srcIp, srcUser, time, configAdvanceInfo);if (rows < 1) {return Boolean.FALSE;}String configTags =configAdvanceInfo == null ? null : (String) configAdvanceInfo.get(""config_tags"");if (configTags != null) {removeTagByIdAtomic(oldConfigInfo.getId());addConfigTagsRelation(oldConfigInfo.getId(),configTags,configInfo.getDataId(),configInfo.getGroup(),configInfo.getTenant());}insertConfigHistoryAtomic(oldConfigInfo.getId(), oldConfigInfo, srcIp, srcUser, time, ""U"");} catch (CannotGetJdbcConnectionException e) {throw e;}return Boolean.TRUE;});}}"	1
3808	public class A {public void checkStreamFileExistence(String taskFileName, String streamName, String errorMessage, Exception e) {File taskFile = new File(taskFileName);if (!taskFile.exists()) {try (FileOutputStream stream = new FileOutputStream(taskFile)) {stream.write(errorMessage.getBytes());if (e != null) {try (PrintStream s = new PrintStream(stream)) {e.printStackTrace(s);}}stream.close();} catch (IOException ioe) {}}}}	1
3809	public class A {public void execute(Vulnerability vuln, HashMap<String, Object> args, BackendConnector _backendConnector)throws BackendConnectionException, JsonSyntaxException, IOException {String vulnId = vuln.getVulnId();this.backendConnector = _backendConnector;Boolean overwrite = (Boolean) args.get(OVERWRITE_OPTION);if (!overwrite && getBackendConnector().isBugExisting(vulnId)) {return;}List<Commit> commits = new ArrayList<Commit>();File file = new File((String) args.get(DIRECTORY_OPTION));File commitDirs[] =file.listFiles(new FileFilter() {@Overridepublic boolean accept(File file) {return file.isDirectory();}});for (File commitDir : commitDirs) {String dir = commitDir.getAbsolutePath();Commit commit = null;commit = Metadata.getCommitMetadata(dir);if (commit != null) {commits.add(commit);}}Set<ConstructChange> changes = null;Map<String, Set<ConstructChange>> allChanges = new HashMap<String, Set<ConstructChange>>();for (Commit commit : commits) {changes = ConstructSet.identifyConstructChanges(commit, allChanges);if ((Boolean) args.get(VERBOSE_OPTION)) {for (ConstructChange chg : changes) {}}}final String json = toJSON(vuln, commits, allChanges);_backendConnector.uploadChangeList(vulnId, json);}}	2
3810	public class A {@Overridepublic void onThrowable(Throwable t) {if (shouldDeleteUpdateOnFailure) {deleteWebhookUpdate();}if (completableFuture != null) {completableFuture.completeExceptionally(t);}}}	1
3811	public class A {private void shutdownDroplet(Exchange exchange) throws Exception {Action action = getEndpoint().getDigitalOceanClient().shutdownDroplet(dropletId);exchange.getMessage().setBody(action);}}	1
3812	"public class A {private void buildCluster() {EmbeddedConnectCluster.Builder builder = new EmbeddedConnectCluster.Builder();Properties brokerProps = new Properties();brokerProps.put(""auto.create.topics.enable"", String.valueOf(true));Map<String, String> workerProps = new HashMap<>();workerProps.put(WorkerConfig.OFFSET_COMMIT_INTERVAL_MS_CONFIG, String.valueOf(OFFSET_COMMIT_INTERVAL_MS));String address = ""http://localhost:"" + NetworkUtils.getFreePort();workerProps.put(WorkerConfig.LISTENERS_CONFIG, address);String pluginPaths = PluginPathHelper.getInstance().pluginPaths();workerProps.put(WorkerConfig.PLUGIN_PATH_CONFIG, pluginPaths);this.cluster =builder.name(""connect-cluster"").numWorkers(1).numBrokers(1).brokerProps(brokerProps).workerProps(workerProps).maskExitProcedures(true).build();}}"	5
3813	"public class A {private void prepareGetResourceConfigurations() throws Exception {final String complexResourceJSONString =DMPPersistenceUtil.getResourceAsString(""complex_resource.json"");final Resource expectedComplexResource =objectMapper.readValue(complexResourceJSONString, Resource.class);Assert.assertNotNull(""the complex resource shouldn't be null"", expectedComplexResource);Assert.assertNotNull(""the name of the complex resource shouldn't be null"", expectedComplexResource.getName());Assert.assertNotNull(""the description of the complex resource shouldn't be null"",expectedComplexResource.getDescription());Assert.assertNotNull(""the type of the complex resource shouldn't be null"", expectedComplexResource.getType());Assert.assertNotNull(""the attributes of the complex resource shouldn't be null"",expectedComplexResource.getAttributes());Assert.assertNotNull(""the configurations of the complex resource shouldn't be null"",expectedComplexResource.getConfigurations());Assert.assertFalse(""the configurations of the complex resource shouldn't be empty"",expectedComplexResource.getConfigurations().isEmpty());final ResourceServiceTestUtils resourceServiceTestUtils =resourcesResourceTestUtils.getPersistenceServiceTestUtils();Resource complexResource =resourceServiceTestUtils.getJpaService().createObjectTransactional().getObject();final Set<Configuration> createdConfigurations = Sets.newLinkedHashSet();final ConfigurationServiceTestUtils configurationServiceTestUtils =resourceServiceTestUtils.getConfigurationsServiceTestUtils();for (final Configuration expectedConfiguration : expectedComplexResource.getConfigurations()) {final String configurationUuid = UUIDService.getUUID(Configuration.class.getSimpleName());final Configuration configuration = new Configuration(configurationUuid);configuration.setParameters(expectedConfiguration.getParameters());final Configuration createdConfiguration =configurationServiceTestUtils.createAndCompareObject(configuration, configuration);complexResource.addConfiguration(createdConfiguration);createdConfigurations.add(createdConfiguration);complexResource =resourceServiceTestUtils.updateAndCompareObject(complexResource, complexResource);complexResource = resourceServiceTestUtils.getObject(complexResource);}complexResource.setName(expectedComplexResource.getName());complexResource.setDescription(expectedComplexResource.getDescription());complexResource.setType(expectedComplexResource.getType());complexResource.setAttributes(expectedComplexResource.getAttributes());final Resource updatedComplexResource =resourceServiceTestUtils.updateAndCompareObject(complexResource, complexResource);Assert.assertNotNull(""updated resource shouldn't be null"", updatedComplexResource);Assert.assertNotNull(""updated resource id shouldn't be null"", updatedComplexResource.getUuid());actualResource = updatedComplexResource;expectedResource = actualResource;exceptedConfigurations = createdConfigurations;}}"	1
3814	"public class A {@Testpublic void happyPath() throws IOException {logStart();String updateAAIGenericVnfRequest =FileUtil.readResourceFile(""__files/VfModularity/UpdateAAIGenericVnfRequest.xml"");MockGetGenericVnfByIdWithDepth(wireMockServer, ""skask"", 1, ""VfModularity/GenericVnf.xml"");MockPutGenericVnf(wireMockServer, ""/skask"", 200);MockPatchGenericVnf(wireMockServer, ""skask"");String businessKey = UUID.randomUUID().toString();Map<String, Object> variables = new HashMap<>();variables.put(""mso-request-id"", UUID.randomUUID().toString());variables.put(""isDebugLogEnabled"", ""true"");variables.put(""UpdateAAIGenericVnfRequest"", updateAAIGenericVnfRequest);invokeSubProcess(""UpdateAAIGenericVnf"", businessKey, variables);Assert.assertTrue(isProcessEnded(businessKey));String response =(String) getVariableFromHistory(businessKey, ""UAAIGenVnf_updateGenericVnfResponse"");Integer responseCode =(Integer) getVariableFromHistory(businessKey, ""UAAIGenVnf_updateGenericVnfResponseCode"");Assert.assertEquals(200, responseCode.intValue());logEnd();}}"	2
3815	public class A {public BufferedInputStream getBufferedInputStream(String filePath) {try {return new BufferedInputStream(fs.open(new Path(filePath)));} catch (IOException e) {return null;}}}	1
3816	public class A {synchronized void reset() throws Exception {instanceIndex.incrementAndGet();isConnected.set(false);connectionStartMs = System.currentTimeMillis();handleHolder.closeAndReset();handleHolder.getZooKeeper();}}	1
3817	public class A {@Overridepublic final void run() {for (; ; ) {try {MDC.clear();loop();} catch (InterruptedException e) {Thread.currentThread().interrupt();return;} catch (Throwable e) {throw e;}}}}	2
3818	public class A {@Beanpublic IamExternalRestClientFactory iamRestClientFactory() {return new IamExternalRestClientFactory(iamClientProperties, restTemplateBuilder);}}	1
3819	"public class A {@Overridepublic void update(String testName) throws Exception {setupRead();ConservationClient client = new ConservationClient();Response res = client.read(knownResourceId);PoxPayloadIn input = null;try {assertStatusCode(res, testName);input = new PoxPayloadIn(res.readEntity(String.class));if (logger.isDebugEnabled()) {}} finally {if (res != null) {res.close();}}PayloadInputPart payloadInputPart = input.getPart(client.getCommonPartName());ConservationCommon conservationCommon = null;if (payloadInputPart != null) {conservationCommon = (ConservationCommon) payloadInputPart.getBody();}Assert.assertNotNull(conservationCommon);conservationCommon.setConservationNumber(""updated-"" + conservationCommon.getConservationNumber());conservationCommon.setFabricationNote(""updated-"" + conservationCommon.getFabricationNote());if (logger.isDebugEnabled()) {}setupUpdate();PoxPayloadOut output = new PoxPayloadOut(this.getServicePathComponent());PayloadOutputPart commonPart = output.addPart(client.getCommonPartName(), conservationCommon);res = client.update(knownResourceId, output);try {assertStatusCode(res, testName);int statusCode = res.getStatus();if (logger.isDebugEnabled()) {}Assert.assertTrue(testRequestType.isValidStatusCode(statusCode),invalidStatusCodeMessage(testRequestType, statusCode));Assert.assertEquals(statusCode, testExpectedStatusCode);input = new PoxPayloadIn(res.readEntity(String.class));} finally {if (res != null) {res.close();}}payloadInputPart = input.getPart(client.getCommonPartName());ConservationCommon updatedConservationCommon = null;if (payloadInputPart != null) {updatedConservationCommon = (ConservationCommon) payloadInputPart.getBody();}Assert.assertNotNull(updatedConservationCommon);Assert.assertEquals(updatedConservationCommon.getConservationNumber(),conservationCommon.getConservationNumber(),""Data in updated object did not match submitted data."");if (logger.isDebugEnabled()) {}Assert.assertTrue(updatedConservationCommon.getFabricationNote().contains(getUTF8DataFragment()),""UTF-8 data retrieved '""+ updatedConservationCommon.getFabricationNote()+ ""' does not contain expected data '""+ getUTF8DataFragment());Assert.assertEquals(updatedConservationCommon.getFabricationNote(),conservationCommon.getFabricationNote(),""Data in updated object did not match submitted data."");}}"	5
3820	"public class A {@Test(description = ""This test case tests the Group Management APIs"")public void GroupManagementTest() throws AutomationFrameworkException {URL url =Thread.currentThread().getContextClassLoader().getResource(""jmeter-scripts"" + File.separator + ""GroupManagementAPI.jmx"");JMeterTest script = new JMeterTest(new File(url.getPath()));JMeterTestManager manager = new JMeterTestManager();manager.runTest(script);}}"	1
3821	"public class A {@Overridepublic Object call(Job<Object> job, Map<String, Object> parameters) {this.checkAndCollectParameters(parameters);try {this.initializeConfig((ComputerJob) job);} catch (Exception e) {throw new HugeException(""Failed to initialize computer config file"", e);}Map<String, Object> configs = new HashMap<>();configs.putAll(this.commonConfig);configs.putAll(this.checkAndCollectParameters(parameters));String[] command = this.constructShellCommands(configs);try {ProcessBuilder builder = new ProcessBuilder(command);builder.redirectErrorStream(true);builder.directory(new File(executeDir()));Process process = builder.start();StringBuilder output = new StringBuilder();try (LineNumberReader reader =new LineNumberReader(new InputStreamReader(process.getInputStream()))) {String line;while ((line = reader.readLine()) != null) {output.append(line).append(""\n"");}}int exitCode = process.waitFor();if (exitCode == 0) {return 0;}throw new HugeException(""The computer job exit with code %s: %s"", exitCode, output);} catch (HugeException e) {throw e;} catch (Throwable e) {throw new HugeException(""Failed to execute computer job"", e);}}}"	1
3822	public class A {private <T> void forwardIfValidLeader(UUID expectedLeaderId,CompletableFuture<? extends T> source,CompletableFuture<T> target,String forwardDescription) {source.whenComplete((t, throwable) -> {synchronized (lock) {if (isValidLeader(expectedLeaderId)) {if (throwable != null) {target.completeExceptionally(throwable);} else {target.complete(t);}} else {}}});}}	1
3823	public class A {@Overridepublic void close() {disruptor.halt();disruptor.shutdown();disruptorExec.shutdownNow();try {disruptorExec.awaitTermination(3, SECONDS);} catch (InterruptedException e) {Thread.currentThread().interrupt();}}}	5
3824	public class A {public void attachDirty(DtsPackageTxt instance) {try {sessionFactory.getCurrentSession().saveOrUpdate(instance);} catch (RuntimeException re) {throw re;}}}	3
3825	public class A {protected void concurrentExecution() {List<Future<JexlNode>> futures;try {futures = executor.invokeAll(todo);for (Future<JexlNode> future : futures) {Exception sawException = null;try {if (future.get() != null) {}} catch (InterruptedException e) {sawException = (Exception) e.getCause();} catch (ExecutionException e) {sawException = (Exception) e.getCause();} catch (Exception e) {sawException = e;}if (null != sawException) {throw new CannotExpandUnfieldedTermFatalException(sawException);}}} catch (InterruptedException e) {throw new CannotExpandUnfieldedTermFatalException(e.getMessage());} finally {todo.clear();}}}	1
3826	public class A {protected void closeEntityManagerFactory() {if (emf != null) {emf.close();emf = null;}}}	1
3827	public class A {@Overridepublic void addBinding(final Binding binding) {try {if (logger.isTraceEnabled()) {}if (binding.isExclusive()) {exclusiveBindings.add(binding);} else {routingNameBindingMap.addBindingIfAbsent(binding);}bindingsIdMap.put(binding.getID(), binding);bindingsNameMap.put(binding.getUniqueName(), binding);if (binding instanceof RemoteQueueBinding) {setMessageLoadBalancingType(((RemoteQueueBinding) binding).getMessageLoadBalancingType());}if (logger.isTraceEnabled()) {}} finally {updated();}}}	2
3828	"public class A {@ApiOperation(value =""Migrates a specified process instance to a process definition in another KIE container."")@ApiResponses(value = {@ApiResponse(code = 500, message = ""Unexpected error""),@ApiResponse(code = 404, message = ""Process instance or Container Id not found""),@ApiResponse(code = 404, message = ""Container Id not found""),@ApiResponse(code = 201,response = MigrationReportInstance.class,message = ""Successfull response"",examples =@Example(value = {@ExampleProperty(mediaType = JSON, value = GET_MIGRATION_REPORT_RESPONSE_JSON)}))})@PUT@Path(MIGRATE_PROCESS_INST_PUT_URI)@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})public Response migrateProcessInstance(@javax.ws.rs.core.Context HttpHeaders headers,@ApiParam(value = ""container id that process instance belongs to"",required = true,example = ""evaluation_1.0.0-SNAPSHOT"")@PathParam(CONTAINER_ID)String containerId,@ApiParam(value = ""identifier of process instance to be migrated"",required = true,example = ""123"")@PathParam(PROCESS_INST_ID)Long processInstanceId,@ApiParam(value = ""container id that new process definition belongs to"", required = true)@QueryParam(""targetContainerId"")String targetContainerId,@ApiParam(value = ""process definition that process instance should be migrated to"",required = true)@QueryParam(""targetProcessId"")String targetProcessId,@ApiParam(value = ""node mapping - unique ids of old definition to new definition given as Map"",required = false,examples =@Example(value = {@ExampleProperty(mediaType = JSON, value = SIMPLE_VAR_MAP_JSON),@ExampleProperty(mediaType = XML, value = SIMPLE_VAR_MAP_XML)}))String payload) {Variant v = getVariant(headers);String type = getContentType(headers);Header conversationIdHeader = buildConversationIdHeader(containerId, context, headers);try {MigrationReportInstance reportInstance =processAdminServiceBase.migrateProcessInstance(containerId, processInstanceId, targetContainerId, targetProcessId, payload, type);return createCorrectVariant(reportInstance, headers, Response.Status.CREATED, conversationIdHeader);} catch (ProcessInstanceNotFoundException e) {return notFound(MessageFormat.format(PROCESS_INSTANCE_NOT_FOUND, processInstanceId),v,conversationIdHeader);} catch (DeploymentNotFoundException e) {return notFound(MessageFormat.format(CONTAINER_NOT_FOUND, containerId), v, conversationIdHeader);} catch (Exception e) {return internalServerError(errorMessage(e), v, conversationIdHeader);}}}"	1
3829	"public class A {private void discoverMavenReactorProjects(String rootProjectDirectoryProperty, List<URL> classPath, File rootArtifactClassesFolder) {Path rootProjectDirectory = get(rootProjectDirectoryProperty);File currentDir = rootArtifactClassesFolder;File lastMavenProjectDir = currentDir;while (containsMavenProject(currentDir)&& !currentDir.toPath().equals(rootProjectDirectory.getParent())) {lastMavenProjectDir = currentDir;currentDir = currentDir.getParentFile();}try {walkFileTree(lastMavenProjectDir.toPath(), new MavenDiscovererFileVisitor(classPath));} catch (IOException e) {throw new RuntimeException(""Error while discovering Maven projects from path: "" + currentDir.toPath());}}}"	2
3830	public class A {protected ExecutionBlockContext createExecutionBlock(ExecutionBlockId executionBlockId, String queryMasterHostAndPort) {AsyncRpcClient client = null;try {InetSocketAddress address = NetUtils.createSocketAddr(queryMasterHostAndPort);ExecutionBlockContextRequest.Builder request = ExecutionBlockContextRequest.newBuilder();request.setExecutionBlockId(executionBlockId.getProto()).setWorker(getWorkerContext().getConnectionInfo().getProto());client =RpcClientManager.getInstance().newClient(address, QueryMasterProtocol.class, true, rpcParams);QueryMasterProtocol.QueryMasterProtocolService.Interface stub = client.getStub();CallFuture<ExecutionBlockContextResponse> callback = new CallFuture<>();stub.getExecutionBlockContext(callback.getController(), request.build(), callback);ExecutionBlockContextResponse contextProto = callback.get();ExecutionBlockContext context =new ExecutionBlockContext(getWorkerContext(), contextProto, client, pullServerService);context.init();return context;} catch (Throwable e) {RpcClientManager.cleanup(client);throw new RuntimeException(e);}}}	2
3831	"public class A {protected String getInProgressKBCommentsLabel() {int inProgressKBCommentsCount = 0;try {inProgressKBCommentsCount = _kbSuggestionListDisplayContext.getInProgressKBCommentsCount();} catch (PortalException portalException) {}return String.format(""%s (%s)"", LanguageUtil.get(_resourceBundle, ""in-progress""), inProgressKBCommentsCount);}}"	1
3832	"public class A {@Testpublic void testQuery() throws Exception {CreationTools.createJobDef(null,true,""pyl.KillMe"",null,""jqm-tests/jqm-test-pyl/target/test.jar"",TestHelpers.qNormal,42,""jqm-test-kill"",null,""Franquin"",""ModuleMachin"",""other"",""other"",false,cnx);cnx.commit();JqmClientFactory.getClient().enqueue(""jqm-test-kill"", ""test"");JqmClientFactory.getClient().enqueue(""jqm-test-kill"", ""test"");JqmClientFactory.getClient().enqueue(""jqm-test-kill"", ""test"");JqmClientFactory.getClient().enqueue(""jqm-test-kill"", ""test"");JqmClientFactory.getClient().enqueue(""jqm-test-kill"", ""test"");Assert.assertEquals(0,Query.create().setQueryLiveInstances(true).setQueryHistoryInstances(false).addStatusFilter(com.enioka.jqm.api.State.RUNNING).addStatusFilter(com.enioka.jqm.api.State.ENDED).run().size());Assert.assertEquals(5,Query.create().setQueryLiveInstances(true).setQueryHistoryInstances(false).addStatusFilter(com.enioka.jqm.api.State.SUBMITTED).run().size());}}"	2
3833	public class A {public UnitDefinition removeUnitDefinition(String id) {UnitDefinition unit = findUnitDefinition(id);if ((unit != null) && unit.removeFromParent()) {return unit;}return null;}}	1
3834	"public class A {public void setService(Class cls, Object classInstance) {if (cls != null && classInstance != null) {try {Advised cachedService = (Advised) services.get(cls);boolean noExistingService = cachedService == null;boolean replacingService = cachedService != null && cachedService != classInstance;boolean serviceAdvised = classInstance instanceof Advised;if (noExistingService || replacingService) {Advised advisedService;if (!serviceAdvised) {Class[] interfaces = {cls};ProxyFactory factory = new ProxyFactory(interfaces);factory.setTarget(classInstance);advisedService = (Advised) factory.getProxy(OpenmrsClassLoader.getInstance());} else {advisedService = (Advised) classInstance;}if (replacingService) {moveAddedAOP(cachedService, advisedService);}services.put(cls, advisedService);}} catch (Exception e) {throw new APIException(""service.unable.create.proxy.factory"",new Object[] {classInstance.getClass().getName()},e);}}}}"	2
3835	public class A {private static void pre() {PropertyUtils.init();}}	1
3836	public class A {void close() {try {writeFileHandle.close();} catch (IOException e) {}}}	1
3837	"public class A {@Overrideprotected void onSubmit(AjaxRequestTarget target) {try {User user = SecurityPasswordCreationContentPanel.this.getModelObject();securityManagementService.updatePassword(user, passwordModel.getObject());Session.get().success(getString(""security.password.creation.validate.success""));throw LoginSuccessPage.linkDescriptor().newRestartResponseException();} catch (RestartResponseException e) {throw e;} catch (Exception e) {}FeedbackUtils.refreshFeedback(target, getPage());}}"	2
3838	public class A {@Overridepublic JournalArticle remove(Serializable primaryKey) throws NoSuchArticleException {Session session = null;try {session = openSession();JournalArticle journalArticle =(JournalArticle) session.get(JournalArticleImpl.class, primaryKey);if (journalArticle == null) {if (_log.isDebugEnabled()) {}throw new NoSuchArticleException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return remove(journalArticle);} catch (NoSuchArticleException noSuchEntityException) {throw noSuchEntityException;} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}}	1
3839	public class A {@OnMessagepublic void echo(Session session, String message) throws Exception {session.getBasicRemote().sendObject(message);verifyRunningThread(session, LOGGER);}}	1
3840	public class A {private static void logIndentOptions(@Nonnull PsiFile file,@Nonnull FileIndentOptionsProvider provider,@Nonnull IndentOptions options) {}}	1
3841	"public class A {@Overridepublic WikiPageResource findByUUID_G(String uuid, long groupId)throws NoSuchPageResourceException {WikiPageResource wikiPageResource = fetchByUUID_G(uuid, groupId);if (wikiPageResource == null) {StringBundler sb = new StringBundler(6);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""uuid="");sb.append(uuid);sb.append("", groupId="");sb.append(groupId);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchPageResourceException(sb.toString());}return wikiPageResource;}}"	1
3842	"public class A {@BuildStepvoid registerExchangeAttributeBuilders(final BuildProducer<ServiceProviderBuildItem> exchangeAttributeBuilderService)throws BuildException {final CodeSource codeSource =ExchangeAttributeBuilder.class.getProtectionDomain().getCodeSource();if (codeSource == null) {return;}try (final FileSystem jarFileSystem =ZipUtils.newFileSystem(new URI(""jar"", codeSource.getLocation().toURI().toString(), null),Collections.emptyMap())) {final Path serviceDescriptorFilePath =jarFileSystem.getPath(""META-INF"",""services"",""io.quarkus.vertx.http.runtime.attribute.ExchangeAttributeBuilder"");if (!Files.exists(serviceDescriptorFilePath)) {return;}final ServiceProviderBuildItem serviceProviderBuildItem;serviceProviderBuildItem =ServiceProviderBuildItem.allProviders(ExchangeAttributeBuilder.class.getName(), serviceDescriptorFilePath);exchangeAttributeBuilderService.produce(serviceProviderBuildItem);} catch (IOException | URISyntaxException e) {throw new BuildException(e, Collections.emptyList());}}}"	2
3843	public class A {public static com.liferay.segments.model.SegmentsEntrySoap getSegmentsEntry(long segmentsEntryId)throws RemoteException {try {com.liferay.segments.model.SegmentsEntry returnValue =SegmentsEntryServiceUtil.getSegmentsEntry(segmentsEntryId);return com.liferay.segments.model.SegmentsEntrySoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
3844	public class A {@Overridepublic Model getConciseBoundedDescription(String resource, int depth, boolean withTypesForLeafs) {Model cbd = ModelFactory.createDefaultModel();cbd.add(getIncomingModel(resource, depth));cbd.add(getOutgoingModel(resource, depth));return cbd;}}	2
3845	"public class A {protected void rollbackTransaction() {closePreviousStatement();if (!_txn) {if (s_logger.isTraceEnabled()) {}return;}assert (!hasTxnInStack()) : ""Who's rolling back transaction when there's still txn in stack?"";_txn = false;try {if (_conn != null) {if (s_logger.isDebugEnabled()) {}_conn.rollback();}clearLockTimes();closeConnection();} catch (final SQLException e) {}}}"	3
3846	"public class A {@SuppressWarnings(""serial"")@Overrideprotected void init() {personalAddressMap = personalAddressDao.getPersonalAddressByAddressId();addressCampaignValueMap = new HashMap<>();{final SubmitLink excelExportLink =new SubmitLink(ContentMenuEntryPanel.LINK_ID, form) {@Overridepublic void onSubmit() {final List<AddressDO> list = getList();final byte[] xls =addressCampaignValueExport.export(list,personalAddressMap,addressCampaignValueMap,form.getSearchFilter().getAddressCampaign() != null? form.getSearchFilter().getAddressCampaign().getTitle(): """");if (xls == null || xls.length == 0) {form.addError(""address.book.hasNoVCards"");return;}final String filename =""ProjectForge-AddressCampaignValueExport_""+ DateHelper.getDateAsFilenameSuffix(new Date())+ "".xlsx"";DownloadUtils.setDownloadTarget(xls, filename);}};final ContentMenuEntryPanel excelExportButton =new ContentMenuEntryPanel(getNewContentMenuChildId(), excelExportLink, getString(""address.book.export"")).setTooltip(getString(""address.book.export.tooltip""));addContentMenuEntry(excelExportButton);}}}"	1
3847	"public class A {public Set<VEvent> getEvents(Interval interval, SyndFeed feed) {Set<VEvent> events = new HashSet<VEvent>();try {@SuppressWarnings(""unchecked"")List<SyndEntry> entries = (List<SyndEntry>) feed.getEntries();for (SyndEntry entry : entries) {PropertyList props = new PropertyList();Date start = null;if (entry.getPublishedDate() != null) {start = entry.getPublishedDate();}if (start != null && interval.contains(start.getTime())) {props.add(new DtStart(new DateTime(start), true));props.add(new Summary(entry.getTitle()));props.add(new Description(entry.getDescription().getValue()));String guid = null;if (entry instanceof Item && ((Item) entry).getGuid() != null) {guid = ((Item) entry).getGuid().getValue();props.add(new Uid(guid));}if (entry.getLink() != null) {try {props.add(new Url(new URI(entry.getLink())));} catch (URISyntaxException e1) {}}VEvent event = new VEvent(props);events.add(event);}}} catch (IllegalArgumentException e) {}return events;}}"	1
3848	public class A {@Overridepublic Integer getSerial() {return super.getSerial();}}	1
3849	public class A {private List<BigQuerySplit> readFromBigQuery(TableId tableId,Optional<List<ColumnHandle>> projectedColumns,int actualParallelism,Optional<String> filter) {List<ColumnHandle> columns = projectedColumns.orElse(ImmutableList.of());List<String> projectedColumnsNames =columns.stream().map(column -> ((BigQueryColumnHandle) column).getName()).collect(toImmutableList());ReadSession readSession =new ReadSessionCreator(readSessionCreatorConfig, bigQueryClient, bigQueryStorageClientFactory).create(tableId, projectedColumnsNames, filter, actualParallelism);return readSession.getStreamsList().stream().map(stream ->BigQuerySplit.forStream(stream.getName(), readSession.getAvroSchema().getSchema(), columns)).collect(toImmutableList());}}	1
3850	public class A {public boolean vsUnLoading(VSensorConfig config) {synchronized (listeners) {ArrayList<DistributionRequest> toRemove = new ArrayList<DistributionRequest>();for (DistributionRequest listener : listeners) {if (listener.getVSensorConfig() == config) toRemove.add(listener);}for (DistributionRequest listener : toRemove) {try {removeListener(listener);} catch (Exception e) {}}}return true;}}	2
3851	"public class A {public void configure() {try {from(""direct:start"").setHeader(""QUERY"", constant(""Carl*"")).process(new LuceneQueryProcessor(""target/simpleindexDir"", analyzer, null, 20, 20)).to(""direct:next"");} catch (Exception e) {}from(""direct:next"").process(new Processor() {public void process(Exchange exchange) throws Exception {Hits hits = exchange.getIn().getBody(Hits.class);printResults(hits);}private void printResults(Hits hits) {for (int i = 0; i < hits.getNumberOfHits(); i++) {}}}).to(""mock:searchResult"");}}"	5
3852	"public class A {static LogFile.RandomReader getRandomReader(File file, @Nullable KeyProvider encryptionKeyProvider, boolean fsyncPerTransaction)throws IOException {RandomAccessFile logFile = new RandomAccessFile(file, ""r"");try {File metaDataFile = Serialization.getMetaDataFile(file);if (logFile.length() == 0L || metaDataFile.exists()) {return new LogFileV3.RandomReader(file, encryptionKeyProvider, fsyncPerTransaction);}int version = logFile.readInt();if (Serialization.VERSION_2 == version) {return new LogFileV2.RandomReader(file);}throw new IOException(""File "" + file + "" has bad version "" + Integer.toHexString(version));} finally {if (logFile != null) {try {logFile.close();} catch (IOException e) {}}}}}"	1
3853	public class A {public void uninstallBundle(Bundle bundle) {try {bundle.uninstall();} catch (BundleException bundleException) {}}}	1
3854	public class A {private void insertSpanStat(SpanBo span) {final ServiceType applicationServiceType = getApplicationServiceType(span);final ServiceType spanServiceType = registry.findServiceType(span.getServiceType());final boolean isError = span.getErrCode() != 0;int bugCheck = 0;if (span.getParentSpanId() == -1) {if (spanServiceType.isQueue()) {statisticsService.updateCaller(span.getAcceptorHost(),spanServiceType,span.getRemoteAddr(),span.getApplicationId(),applicationServiceType,span.getEndPoint(),span.getElapsed(),isError);statisticsService.updateCallee(span.getApplicationId(),applicationServiceType,span.getAcceptorHost(),spanServiceType,span.getAgentId(),span.getElapsed(),isError);} else {statisticsService.updateCaller(span.getApplicationId(),ServiceType.USER,span.getAgentId(),span.getApplicationId(),applicationServiceType,span.getAgentId(),span.getElapsed(),isError);statisticsService.updateCallee(span.getApplicationId(),applicationServiceType,span.getApplicationId(),ServiceType.USER,span.getAgentId(),span.getElapsed(),isError);}bugCheck++;}if (span.getParentApplicationId() != null) {String parentApplicationName = span.getParentApplicationId();ServiceType parentApplicationType =registry.findServiceType(span.getParentApplicationServiceType());if (spanServiceType.isQueue()) {if (!applicationServiceType.isQueue() && !parentApplicationType.isQueue()) {hostApplicationMapDao.insert(span.getRemoteAddr(),span.getAcceptorHost(),spanServiceType.getCode(),parentApplicationName,parentApplicationType.getCode());statisticsService.updateCaller(span.getAcceptorHost(),spanServiceType,span.getRemoteAddr(),span.getApplicationId(),applicationServiceType,span.getEndPoint(),span.getElapsed(),isError);parentApplicationName = span.getAcceptorHost();parentApplicationType = spanServiceType;}}statisticsService.updateCallee(span.getApplicationId(),applicationServiceType,parentApplicationName,parentApplicationType,span.getAgentId(),span.getElapsed(),isError);bugCheck++;}statisticsService.updateResponseTime(span.getApplicationId(),applicationServiceType,span.getAgentId(),span.getElapsed(),isError);if (bugCheck != 1) {}}}	2
3855	"public class A {@Overrideprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain)throws IOException, ServletException {if (!request.getScheme().equalsIgnoreCase(""https"") && !ignoreHttps) {chain.doFilter(request, response);return;}if (!authenticationIsRequired()) {chain.doFilter(request, response);return;}String auth = request.getHeader(""Authorization"");if ((auth == null) || !auth.startsWith(""Basic "")) {final String userAgent = request.getHeader(""User-Agent"");if (userAgentMatch(userAgent)) {getAuthenticationEntryPoint().commence(request, response, _exception);} else {chain.doFilter(request, response);}} else {super.doFilterInternal(request, response, chain);}}}"	5
3856	public class A {@Overridepublic byte[] serializeHandshakeMessageContent() {if (hasExtensionLengthField()) {writeExtensionLength();if (hasExtensions()) {writeExtensionBytes();}}return getAlreadySerialized();}}	1
3857	"public class A {@Testpublic void testGetJavaScriptOption() {AnimateDuration animateDuration = new AnimateDuration(500);String expectedJavascript = ""500"";String generatedJavascript = animateDuration.getJavascriptOption().toString();assertEquals(generatedJavascript, expectedJavascript);}}"	2
3858	"public class A {@Overridepublic void applyInTx() {try {FileUtils.moveDirectory(dataTargetFolder(), dataSourceFolder());} catch (Exception e) {throw new RuntimeException(""Could not move data folder to backup location {""+ dataTargetFolder().getAbsolutePath()+ ""}. Maybe the permissions not allowing this?"");}Vertex meshRoot = getMeshRootVertex();Vertex binaryRoot = getGraph().addVertex(""class:BinaryRootImpl"");binaryRoot.setProperty(""ferma_type"", ""BinaryRootImpl"");binaryRoot.setProperty(""uuid"", randomUUID());meshRoot.addEdge(""HAS_BINARY_ROOT"", binaryRoot).setProperty(""uuid"", randomUUID());Iterable<Vertex> it = getGraph().getVertices(""@class"", ""BinaryGraphFieldImpl"");for (Vertex binaryField : it) {migrateField(binaryField, binaryRoot);}}}"	1
3859	"public class A {public static ICacheEventLogger parseCacheEventLogger(final Properties props, final String auxPrefix) {final String eventLoggerClassName = auxPrefix + CACHE_EVENT_LOGGER_PREFIX;final ICacheEventLogger cacheEventLogger =OptionConverter.instantiateByKey(props, eventLoggerClassName, null);if (cacheEventLogger != null) {final String cacheEventLoggerAttributePrefix =auxPrefix + CACHE_EVENT_LOGGER_PREFIX + ATTRIBUTE_PREFIX;PropertySetter.setProperties(cacheEventLogger, props, cacheEventLoggerAttributePrefix + ""."");} else {}return cacheEventLogger;}}"	2
3860	public class A {@Overrideprotected void start() {try {super.start();super.destroy();this.with(LAST_UPDATED_ORDERBY.clone()).direction(DIRECTION.DESC).with(POSTED_TIME_ORDERBY.clone()).direction(DIRECTION.DESC);} catch (Exception ex) {}}}	1
3861	public class A {@Overridepublic void timeout(long timeoutMs) {this.timeoutMs = timeoutMs;}}	1
3862	"public class A {protected void fillAttr(final List<String> values,final AnyUtils anyUtils,final PlainSchema schema,final PlainAttr<?> attr,final SyncopeClientException invalidValues) {List<String> valuesProvided =schema.isMultivalue()? values: (values.isEmpty() || values.get(0) == null ? List.of() : List.of(values.get(0)));valuesProvided.forEach(value -> {if (StringUtils.isBlank(value)) {} else {try {attr.add(value, anyUtils);} catch (InvalidPlainAttrValueException e) {String valueToPrint = value.length() > 40 ? value.substring(0, 20) + ""..."" : value;invalidValues.getElements().add(schema.getKey() + "": "" + valueToPrint + "" - "" + e.getMessage());}}});}}"	2
3863	public class A {public OutstandingMigrationsProblem createOutstandingMigrationsProblem() {return new OutstandingMigrationsProblem() {private Set<TabletId> migrations = Collections.emptySet();@Overridepublic void setMigrations(Set<TabletId> migrations) {this.migrations = migrations;}@Overridepublic void report() {if (log.isDebugEnabled()) {}migrations = Collections.emptySet();}};}}	2
3864	"public class A {@Overrideprotected EquipmentConfigurationUpdate configureCacheObject(Equipment equipment, Properties properties) {EquipmentCacheObject equipmentCacheObject = (EquipmentCacheObject) equipment;EquipmentConfigurationUpdate configurationUpdate =setCommonProperties(equipmentCacheObject, properties);String tmpStr = properties.getProperty(""address"");if (tmpStr != null) {equipmentCacheObject.setAddress(tmpStr);configurationUpdate.setEquipmentAddress(tmpStr);}if ((tmpStr = properties.getProperty(""processId"")) != null) {try {equipmentCacheObject.setProcessId(Long.valueOf(tmpStr));} catch (NumberFormatException e) {throw new ConfigurationException(ConfigurationException.INVALID_PARAMETER_VALUE,""NumberFormatException: Unable to convert parameter \""processId\"" to Long: "" + tmpStr);}}return configurationUpdate;}}"	2
3865	public class A {private int buildPreprocess(Resource root) {StmtIterator solnIter = root.listProperties(ResultSetGraphVocab.solution);int rows = 0;int indexed = 0;for (; solnIter.hasNext(); ) {Resource soln = solnIter.nextStatement().getResource();rows++;if (soln.hasProperty(ResultSetGraphVocab.index)) indexed++;}solnIter.close();if (indexed > 0 && rows != indexed) {return rows;}return rows;}}	1
3866	"public class A {protected @Nullable T getAppliance(OndusService ondusService) {try {BaseAppliance appliance =ondusService.getAppliance(getRoom(), config.applianceId).orElse(null);if (appliance.getType() != getType()) {updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.CONFIGURATION_ERROR,""Thing is not a GROHE SENSE Guard device."");return null;}return (T) appliance;} catch (IOException e) {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());}return null;}}"	1
3867	public class A {public org.apache.thrift.async.AsyncMethodCallback<java.util.List<InterpreterCompletion>>getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb,final int seqid) {final org.apache.thrift.AsyncProcessFunction fcall = this;return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<InterpreterCompletion>>() {public void onComplete(java.util.List<InterpreterCompletion> o) {completion_result result = new completion_result();result.success = o;try {fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);} catch (org.apache.thrift.transport.TTransportException e) {fb.close();} catch (java.lang.Exception e) {onError(e);}}public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;completion_result result = new completion_result();if (e instanceof InterpreterRPCException) {result.ex = (InterpreterRPCException) e;result.setExIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}};}}	6
3868	"public class A {private void executeQueryOnBuckets(Collection<Collection> resultCollector, ExecutionContext context)throws ForceReattemptException, QueryInvocationTargetException, QueryException {QueryMonitor queryMonitor = null;if (GemFireCacheImpl.getInstance() != null) {queryMonitor = GemFireCacheImpl.getInstance().getQueryMonitor();}try {if (queryMonitor != null) {queryMonitor.monitorQueryExecution(context);}Object results = query.executeUsingContext(context);synchronized (resultCollector) {this.resultType = ((SelectResults) results).getCollectionType().getElementType();resultCollector.add((Collection) results);}isIndexUsedForLocalQuery = ((QueryExecutionContext) context).isIndexUsed();} catch (BucketMovedException bme) {if (logger.isDebugEnabled()) {}throw new ForceReattemptException(""Query targeted local bucket not found."" + bme.getMessage(), bme);} catch (RegionDestroyedException rde) {throw new QueryInvocationTargetException(""The Region on which query is executed may have been destroyed."" + rde.getMessage(), rde);} catch (QueryException qe) {if (pr.isLocallyDestroyed || pr.isClosed) {throw new ForceReattemptException(""Local Partition Region or the targeted bucket has been moved"");}throw qe;} finally {if (queryMonitor != null) {queryMonitor.stopMonitoringQueryExecution(context);}}}}"	1
3869	public class A {void logActionWithMarker(final EntityIdentification entity, final Marker marker, final Operation operation) {if (logger.isInfoEnabled()) {final Instant now = Instant.now();final String entityName = entity.getClass().getSimpleName();}}}	1
3870	public class A {private void onWatcherClosed(Exception cause) {if (closeCalled) {return;}int currentRetries = retries.addAndGet(1);if (currentRetries >= MAX_RETRIES) {giveUp.run();} else {try {watcher = watcherCreator.apply(listener);retries.set(0);} catch (Exception ex) {ex.addSuppressed(cause);onWatcherClosed(ex);}}}}	1
3871	public class A {void remove(final String id) {EntityManager em = daoManager.getEntityManagerFromFactory();try {daoManager.startTransaction(em);UserDelegateEntity item = em.find(UserDelegateEntity.class, id);em.remove(item);daoManager.commitTransaction(em);} catch (Exception e) {daoManager.rollBackTransaction(em);} finally {daoManager.closeEntityManager(em);}}}	1
3872	public class A {@Override@Transactionalpublic void updateSessionActivity(String id) {Long lastWrite = recentUsageUpdates.get(id);if (lastWrite != null) {if (System.currentTimeMillis() < lastWrite + DB_ACTIVITY_WRITE_DELAY) return;}if (!updateSession(id, session -> session.setLastUsed(new Date())))throw new SessionExpiredException();recentUsageUpdates.put(id, System.currentTimeMillis());}}	1
3873	"public class A {@Override@BeforeEachpublic void setUp() throws Exception {super.setUp();testDirectory(""in"", true);Files.write(testFile(""in/file.dat""), ""Line"".getBytes());}}"	2
3874	"public class A {@Overridepublic int doStartTag() throws JspException {try {String currentCounter = this.getCurrentIndex();this.pageContext.getOut().print(currentCounter);} catch (Throwable t) {throw new JspException(""error creating (or modifying) counter"", t);}return super.doStartTag();}}"	1
3875	"public class A {Session createSession(User user) throws SecurityException {Session session = null;LdapConnection ld = null;try {ld = getAdminConnection();ld.setTimeOut(0);RbacCreateSessionRequest rbacCreateSessionRequest = new RbacCreateSessionRequestImpl();rbacCreateSessionRequest.setTenantId(user.getContextId());rbacCreateSessionRequest.setUserIdentity(user.getUserId());rbacCreateSessionRequest.setPassword(new String(user.getPassword()));if (CollectionUtils.isNotEmpty(user.getRoles())) {for (UserRole userRole : user.getRoles()) {rbacCreateSessionRequest.addRole(userRole.getName());}}RbacCreateSessionResponse rbacCreateSessionResponse =(RbacCreateSessionResponse) ld.extended(rbacCreateSessionRequest);session = new Session(user, rbacCreateSessionResponse.getSessionId());if (rbacCreateSessionResponse.getLdapResult().getResultCode() == ResultCodeEnum.SUCCESS) {session.setAuthenticated(true);} else {session.setAuthenticated(false);String info =""createSession UserId [""+ user.getUserId()+ ""] failed: ""+ rbacCreateSessionResponse.getLdapResult()+ "" , resultCode: ""+ rbacCreateSessionResponse.getLdapResult().getResultCode().getResultCode();throw new SecurityException(GlobalErrIds.USER_PW_INVLD, info);}} catch (LdapException e) {String error =""createSession userId [""+ user.getUserId()+ ""] caught LDAPException=""+ "" msg=""+ e.getMessage();throw new SecurityException(GlobalErrIds.ACEL_CREATE_SESSION_ERR, error, e);} finally {closeAdminConnection(ld);}return session;}}"	1
3876	public class A {@Overridepublic void run() {try {serviceCenterTaskMonitor.beginCycle(interval);microserviceServiceCenterTask.run();serviceCenterTaskMonitor.endCycle();} catch (Throwable e) {}}}	1
3877	public class A {@Overridepublic void appendToComment(String st) {}}	1
3878	"public class A {private DataCell[] readSparseRow() {DataCell[] rowCells = new DataCell[m_tSpec.getNumColumns()];String token;token = m_tokenizer.nextToken().substring(1);boolean foundending = false;while ((token != null) && !token.isEmpty() && (!token.equals(""\n""))) {if (token.charAt(token.length() - 1) == '}') {foundending = true;token = token.substring(0, token.length() - 1);}String[] fields = token.split("" "");if (fields.length != 2) {throw new IllegalStateException(""Malformatted sparse data entry: '"" + token + ""'"");}int col;try {col = Integer.parseInt(fields[0].trim());} catch (NumberFormatException e) {throw new IllegalStateException(""Malformatted column index in sparse data entry: '"" + fields[0].trim() + ""'"");}String data = fields[1];if (!m_tokenizer.lastTokenWasQuoted()) {data = data.trim();}boolean missCell = data.equals(""?"") && !m_tokenizer.lastTokenWasQuoted();rowCells[col] = createNewDataCellOfType(m_tSpec.getColumnSpec(col).getType(), data, missCell);token = m_tokenizer.nextToken();}if (!foundending) {int line = m_tokenizer.getLineNumber();if (token != null && token.equals(""\n"")) {line--;}}for (int c = 0; c < rowCells.length; c++) {if (rowCells[c] == null) {rowCells[c] = createNewDataCellOfType(m_tSpec.getColumnSpec(c).getType(), ""0"", false);}}return rowCells;}}"	1
3879	public class A {protected boolean filter(ExcludeList avoid, StoragePool pool, DiskProfile dskCh, DeploymentPlan plan) {if (s_logger.isDebugEnabled()) {}if (avoid.shouldAvoid(pool)) {if (s_logger.isDebugEnabled()) {}return false;}Long clusterId = pool.getClusterId();if (clusterId != null) {ClusterVO cluster = clusterDao.findById(clusterId);if (!(cluster.getHypervisorType() == dskCh.getHypervisorType())) {if (s_logger.isDebugEnabled()) {}return false;}} else if (pool.getHypervisor() != null&& !pool.getHypervisor().equals(HypervisorType.Any)&& !(pool.getHypervisor() == dskCh.getHypervisorType())) {if (s_logger.isDebugEnabled()) {}return false;}if (!checkHypervisorCompatibility(dskCh.getHypervisorType(), dskCh.getType(), pool.getPoolType())) {return false;}Volume volume = volumeDao.findById(dskCh.getVolumeId());if (!storageMgr.storagePoolCompatibleWithVolumePool(pool, volume)) {return false;}if (pool.isManaged()&& !storageUtil.managedStoragePoolCanScale(pool, plan.getClusterId(), plan.getHostId())) {return false;}List<Volume> requestVolumes = new ArrayList<>();requestVolumes.add(volume);if (dskCh.getHypervisorType() == HypervisorType.VMware) {if (pool.getPoolType() == Storage.StoragePoolType.DatastoreCluster&& storageMgr.isStoragePoolDatastoreClusterParent(pool)) {return false;}if (pool.getParent() != 0L) {StoragePoolVO datastoreCluster = storagePoolDao.findById(pool.getParent());if (datastoreCluster == null|| (datastoreCluster != null && datastoreCluster.getStatus() != StoragePoolStatus.Up)) {return false;}}try {boolean isStoragePoolStoragepolicyComplaince =storageMgr.isStoragePoolComplaintWithStoragePolicy(requestVolumes, pool);if (!isStoragePoolStoragepolicyComplaince) {return false;}} catch (StorageUnavailableException e) {return false;}}return storageMgr.storagePoolHasEnoughIops(requestVolumes, pool)&& storageMgr.storagePoolHasEnoughSpace(requestVolumes, pool, plan.getClusterId());}}	5
3880	public class A {private synchronized void savePartitionTable() {File tempFile = new File(PARTITION_FILE_NAME + TEMP_SUFFIX);tempFile.getParentFile().mkdirs();File oldFile = new File(PARTITION_FILE_NAME);try (DataOutputStream outputStream =new DataOutputStream(new BufferedOutputStream(new FileOutputStream(tempFile)))) {synchronized (partitionTable) {byte[] tableBuffer = partitionTable.serialize().array();outputStream.writeInt(tableBuffer.length);outputStream.write(tableBuffer);outputStream.flush();}} catch (IOException e) {}if (oldFile.exists()) {try {Files.delete(Paths.get(oldFile.getAbsolutePath()));} catch (IOException e) {}}if (!tempFile.renameTo(oldFile)) {}}}	4
3881	public class A {@Overridepublic void onMessageReceived(String from, ClusterMessage message) {if (getClusterMessageKey().equalsIgnoreCase(message.getType())) {CacheBackedProviderClusterMessage content =(CacheBackedProviderClusterMessage) message.getMessage();if (CacheBackedProviderClusterMessage.Type.REMOVED == content.getType()) {removeItems(content.getItems());}if (CacheBackedProviderClusterMessage.Type.REFRESHED == content.getType()) {if (canRefresh()) {removeAll();populateCache();} else {}} else if (CacheBackedProviderClusterMessage.Type.ADDED == content.getType()) {addItems(content.getItems());}}}}	1
3882	"public class A {@Overridepublic void addRole(Role role) throws ApsSystemException {try {this.getRoleDAO().addRole(role);this.getRoleCacheWrapper().addRole(role);} catch (Throwable t) {throw new ApsSystemException(""Error while adding a role"", t);}}}"	1
3883	public class A {public static <E extends Enum<E>> E objectToEnum(Object object, Class<E> enumeration, E defaultValue) {E ret = defaultValue;if (object != null) {if (object instanceof String) {String name = (String) object;try {ret = parseEnum(enumeration, name);} catch (IllegalArgumentException e) {} catch (NullPointerException e) {}} else {}}return ret;}}	3
3884	public class A {@Overridepublic Signature sign(byte[] document, Credential credential) {Objects.requireNonNull(document);if (log.isTraceEnabled()) {}MultiSigCredential multiSigCredential = getMultiSigCredential(credential);Map<byte[], byte[]> signatures = new HashMap<>();for (byte[] seed : multiSigCredential.getKeys()) {signatures.put(Crypto.getPublicKey(seed), Crypto.sign(document, seed));}MultiSigData multiSigData = new MultiSigData(signatures.size());signatures.forEach(multiSigData::addSignature);if (log.isTraceEnabled()) {}return multiSigData;}}	2
3885	"public class A {void ssn139() throws IOException {CIFSContext tc = this.transportContext;Name calledName = new Name(tc.getConfig(), this.address.firstCalledName(), 0x20, null);do {this.socket = new Socket();if (this.localAddr != null)this.socket.bind(new InetSocketAddress(this.localAddr, this.localPort));this.socket.connect(new InetSocketAddress(this.address.getHostAddress(), 139),tc.getConfig().getConnTimeout());this.socket.setSoTimeout(tc.getConfig().getSoTimeout());this.out = this.socket.getOutputStream();this.in = this.socket.getInputStream();SessionServicePacket ssp =new SessionRequestPacket(tc.getConfig(), calledName, tc.getNameServiceClient().getLocalName());this.out.write(this.sbuf, 0, ssp.writeWireFormat(this.sbuf, 0));if (readn(this.in, this.sbuf, 0, 4) < 4) {try {this.socket.close();} catch (IOException ioe) {}throw new SmbException(""EOF during NetBIOS session request"");}switch (this.sbuf[0] & 0xFF) {case SessionServicePacket.POSITIVE_SESSION_RESPONSE:if (log.isDebugEnabled()) {}return;case SessionServicePacket.NEGATIVE_SESSION_RESPONSE:int errorCode = this.in.read() & 0xFF;switch (errorCode) {case NbtException.CALLED_NOT_PRESENT:case NbtException.NOT_LISTENING_CALLED:this.socket.close();break;default:disconnect(true);throw new NbtException(NbtException.ERR_SSN_SRVC, errorCode);}break;case -1:disconnect(true);throw new NbtException(NbtException.ERR_SSN_SRVC, NbtException.CONNECTION_REFUSED);default:disconnect(true);throw new NbtException(NbtException.ERR_SSN_SRVC, 0);}} while ((calledName.name = this.address.nextCalledName(tc)) != null);throw new IOException(""Failed to establish session with "" + this.address);}}"	2
3886	public class A {private void logAvailableInstances(Logger logger, Instance<MessageSender> instances) {List<String> names = new ArrayList<>();for (MessageSender instance : instances) {names.add(instance.getMessageSenderId());}}}	1
3887	public class A {@Testpublic void onlyLastCoalescingWorkShouldBeExecuted() throws InterruptedException {int longDurationMs = 20_000;int shortDurationMs = 1_000;SleepWork longWork = createCoalescing(longDurationMs);SleepWork shortWork = createCoalescing(shortDurationMs);service.schedule(shortWork);service.schedule(longWork);service.schedule(longWork);service.schedule(shortWork);long start = System.currentTimeMillis();assertTrue(service.awaitCompletion(60, TimeUnit.SECONDS));long elapsed = System.currentTimeMillis() - start;tracker.assertDiff(0, 0, 4, 0);assertTrue(String.valueOf(elapsed), elapsed < longDurationMs);}}	2
3888	public class A {private int addPattern(OWLAxiom axiom) {String axiomString = render(axiom);Integer patternID = getPatternID(axiom);if (patternID != null) {return patternID;}try {insertPatternIdPs.setString(1, axiomString);insertPatternIdPs.setString(2, axiomRenderer.render(axiom));insertPatternIdPs.setString(3, getAxiomType(axiom));insertPatternIdPs.execute();} catch (SQLException e) {}return getPatternID(axiom);}}	1
3889	"public class A {public void await(long timeoutMillis) throws InterruptedException {if (latch.await(timeoutMillis, TimeUnit.MILLISECONDS)) {return;}long c = latch.getCount();Preconditions.checkState(0 < c);String msg =""Did not read expected number of messages before timeout was reached (latch count is ""+ c+ "")"";throw new AssertionError(msg);}}"	1
3890	"public class A {private void fetchRootDSE(String... explicitAttributes) throws LdapException {EntryCursor cursor = null;String[] attributes = explicitAttributes;if (attributes.length == 0) {attributes =new String[] {SchemaConstants.ALL_USER_ATTRIBUTES, SchemaConstants.ALL_OPERATIONAL_ATTRIBUTES};}try {cursor = search("""", LdapConstants.OBJECT_CLASS_STAR, SearchScope.OBJECT, attributes);if (cursor.next()) {rootDse = cursor.get();} else {throw new LdapException(I18n.err(I18n.ERR_04155_ROOT_DSE_SEARCH_FAILED));}} catch (Exception e) {String msg = I18n.err(I18n.ERR_04156_FAILED_FETCHING_ROOT_DSE);throw new LdapException(msg, e);} finally {if (cursor != null) {try {cursor.close();} catch (Exception e) {}}}}}"	2
3891	public class A {private void handleAlreadyInvalidEntry(EntryEventImpl event, LocalRegion owner, RegionEntry re) {if (logger.isDebugEnabled()) {}processVersionTag(re, event);if (owner.getConcurrencyChecksEnabled() && event.hasValidVersionTag()) {event.invokeCallbacks(owner, true, true);}}}	1
3892	public class A {@Overrideprotected void initInternal(final FilterConfig filterConfig) throws ServletException {setExceptionOnValidationFailure(getBoolean(ConfigurationKeys.EXCEPTION_ON_VALIDATION_FAILURE));setRedirectAfterValidation(getBoolean(ConfigurationKeys.REDIRECT_AFTER_VALIDATION));setUseSession(getBoolean(ConfigurationKeys.USE_SESSION));if (!this.useSession && this.redirectAfterValidation) {setRedirectAfterValidation(false);}setTicketValidator(getTicketValidator(filterConfig));super.initInternal(filterConfig);}}	1
3893	public class A {public static List<IBase> getValues(FhirContext theFhirContext, IBaseResource theResource, String theFieldName) {RuntimeResourceDefinition resourceDefinition =theFhirContext.getResourceDefinition(theResource);BaseRuntimeChildDefinition resourceIdentifier = resourceDefinition.getChildByName(theFieldName);if (resourceIdentifier == null) {return null;}return resourceIdentifier.getAccessor().getValues(theResource);}}	1
3894	"public class A {private List<String> installLinux(List<String> urls, String saveAs) {String apt =chainGroup(installPackage(MutableMap.of(""apt"", ""python-httplib2 libssl0.9.8""), null),sudo(format(""dpkg -i %s"", saveAs)));String yum =chainGroup(""which yum"",ok(sudo(""sed -i.bk s/^enabled=1$/enabled=0/""+ "" /etc/yum/pluginconf.d/subscription-manager.conf"")),ok(sudo(""yum check-update"")),sudo(""yum install -y pkgconfig""),sudo(""[ -f /etc/redhat-release ] && (grep -i \""red hat\"" /etc/redhat-release && sudo yum""+ "" install -y openssl098e) || :""),sudo(format(""rpm --install %s"", saveAs)));String link =new DownloadProducerFromUrlAttribute().apply(new BasicDownloadRequirement(this)).getPrimaryLocations().iterator().next();return ImmutableList.<String>builder().add(INSTALL_CURL).addAll(Arrays.asList(INSTALL_CURL,BashCommands.require(BashCommands.alternatives(BashCommands.simpleDownloadUrlAs(urls, saveAs),""curl -f -L -k ""+ BashStringEscapes.wrapBash(link)+ "" -H 'Referer: http://www.couchbase.com/downloads'""+ "" -o ""+ saveAs),""Could not retrieve "" + saveAs + "" (from "" + urls.size() + "" sites)"",9))).add(alternatives(apt, yum)).build();}}"	1
3895	"public class A {SwaggerResource swaggerResource(String name, String location) {SwaggerResource swaggerResource = new SwaggerResource();swaggerResource.setName(name);swaggerResource.setLocation(location);swaggerResource.setSwaggerVersion(""3.0"");return swaggerResource;}}"	1
3896	"public class A {@Override@RequestMappingpublic @ResponseBody void query(@RequestParam(value = ""query"", required = false) String query,@RequestParam(value = ""format"", required = false) String format,@RequestParam(value = ""offset"", required = false) Integer offset,@RequestParam(value = ""limit"", required = false) Integer limit,@RequestParam(value = ""inference"", required = false) boolean inference,HttpServletRequest request,HttpServletResponse response)throws QueryParseException, LodeException, IOException {final long startTime = System.currentTimeMillis();String v = request.getHeader(""Referer"");LoggingContext.put(""webui"", v != null && v.contains(""/mesh/query""));if (query != null) LoggingContext.put(""query"", query);if (format != null) LoggingContext.put(""format"", format);if (limit != null) LoggingContext.put(""limit"", limit);if (offset != null) LoggingContext.put(""offset"", offset);LoggingContext.put(""inference"", inference);super.query(query, format, offset, limit, inference, request, response);final long responseTime = System.currentTimeMillis() - startTime;LoggingContext.put(""responsetime"", responseTime);LoggingContext.clear();}}"	1
3897	"public class A {private void sendResponse(ChannelHandlerContext ctx, Call call) {ByteArrayOutputStream buf = new ByteArrayOutputStream(INITIAL_RESP_BUF_SIZE);Writable value = null;try {value = call(protocol, call.param, call.timestamp);} catch (Throwable e) {String logMsg = this.getClass().getName() + "", call "" + call + "": error: "" + e;if (e instanceof RuntimeException || e instanceof Error) {} else if (exceptionsHandler.isTerse(e.getClass())) {} else {}errorClass = e.getClass().getName();error = StringUtils.stringifyException(e);}try {setupResponse(buf, call, (error == null) ? Status.SUCCESS : Status.ERROR, value, errorClass, error);if (buf.size() > maxRespSize) {buf = new ByteArrayOutputStream(INITIAL_RESP_BUF_SIZE);}channelWrite(ctx, call.response);} catch (Exception e) {error = null;} finally {IOUtils.closeStream(buf);}}}"	5
3898	"public class A {public B addExtra(String key, Number value) {Preconditions.checkArgument(!(null == key), ""Key should not be null."");if (null == value) {return theBuilder;}if (null == numberExtrasBuilder) {numberExtrasBuilder = new HashMap<String, Number>();}numberExtrasBuilder.put(key, value);return theBuilder;}}"	1
3899	"public class A {@Overridepublic Map<String, Object> postProcessOperationsWithModels(Map<String, Object> objs, List<Object> allModels) {Map<String, Object> operations = (Map<String, Object>) objs.get(""operations"");List<CodegenOperation> operationList = (List<CodegenOperation>) operations.get(""operation"");for (CodegenOperation op : operationList) {int index = 1;for (CodegenParameter p : op.allParams) {if (Boolean.TRUE.equals(p.isArray)) {p.vendorExtensions.put(""x-protobuf-type"", ""repeated"");} else if (Boolean.TRUE.equals(p.isMap)) {}if (!p.vendorExtensions.containsKey(""x-protobuf-data-type"")) {if (Boolean.TRUE.equals(p.isArray)) {p.vendorExtensions.put(""x-protobuf-data-type"", p.items.dataType);} else {p.vendorExtensions.put(""x-protobuf-data-type"", p.dataType);}}p.vendorExtensions.putIfAbsent(""x-protobuf-index"", index);index++;}if (StringUtils.isEmpty(op.returnType)) {op.vendorExtensions.put(""x-grpc-response"", ""google.protobuf.Empty"");} else {if (Boolean.FALSE.equals(op.returnTypeIsPrimitive)&& StringUtils.isEmpty(op.returnContainer)) {op.vendorExtensions.put(""x-grpc-response"", op.returnType);} else {if (""map"".equals(op.returnContainer)) {op.vendorExtensions.put(""x-grpc-response-type"", op.returnBaseType);} else if (""array"".equals(op.returnContainer)) {op.vendorExtensions.put(""x-grpc-response-type"", ""repeated "" + op.returnBaseType);} else {op.vendorExtensions.put(""x-grpc-response-type"", op.returnBaseType);}}}}return objs;}}"	2
3900	public class A {@Overridepublic void doCallback(String previousTable, String activeTable) {if (logger.isDebugEnabled())final String sql = getSql(previousTable, activeTable);try {long t = System.currentTimeMillis();int numOfRows =transactionTemplate.execute(new TransactionCallback<Integer>() {@Overridepublic Integer doInTransaction(TransactionStatus status) {return jdbcTemplate.update(sql);}});t = System.currentTimeMillis() - t;if (logger.isDebugEnabled())else if (t > TimeUnit.MINUTES.toMillis(1))} catch (DataAccessException ex) {}}}	5
3901	"public class A {@Test(groups = {""Phase 1 Calendar""},description = ""missing column friday"",priority = 137)public void verifyTest_2_2_6() throws Exception {Context context = new Context();CheckPointReport result =verifyValidation(log, context, ""calendar_2_6"", GTFS_1_GTFS_Common_9, SEVERITY.ERROR, RESULT.NOK, true);Assert.assertEquals(result.getCheckPointErrorCount(), 1, ""detail count"");for (CheckPointErrorReport detail : getDetails(context, result)) {Assert.assertNotNull(detail.getSource(), ""detail must refer a source"");Assert.assertNotNull(detail.getSource().getFile(), ""detail must refer a file source"");Assert.assertEquals(detail.getSource().getFile().getFilename(), ""calendar.txt"", ""detail must refer bad file"");Assert.assertEquals(detail.getSource().getFile().getLineNumber(),Integer.valueOf(1),""detail must refer bad line"");}}}"	1
3902	"public class A {@Overridepublic Integer call() throws Exception {int responseCode;String reasonPhrase;InputStreamEntity entity = new InputStreamEntity(in, -1);entity.setChunked(true);entity.setContentType(contentType);request.setEntity(entity);openConnection.set(true);try (CloseableHttpResponse response = client.execute(request)) {responseCode = response.getStatusLine().getStatusCode();reasonPhrase = response.getStatusLine().getReasonPhrase();}if (responseCode == HTTP_UNAUTHORIZED) {mAccount.authenticate();request.removeHeaders(""X-Auth-Token"");request.addHeader(""X-Auth-Token"", mAccount.getAuthToken());try (CloseableHttpResponse response = client.execute(request)) {responseCode = response.getStatusLine().getStatusCode();reasonPhrase = response.getStatusLine().getReasonPhrase();}}if (responseCode >= HTTP_BAD_REQUEST) {throw new IOException(""HTTP Error: "" + responseCode + "" Reason: "" + reasonPhrase);}return responseCode;}}"	4
3903	"public class A {public static Tuple getElements(String xml, String className, int inactiveGroupsCount) {List<Element> resultRows = new ArrayList<>();int totalRows = 0;try {xml = XMLUtil.stripInvalidChars(xml);Document document = SAXReaderUtil.read(xml);Element rootElement = document.getRootElement();List<Element> elements = rootElement.elements(""entry"");totalRows =GetterUtil.getInteger(rootElement.elementText(OpenSearchUtil.getQName(""totalResults"", OpenSearchUtil.OS_NAMESPACE)));for (Element element : elements) {try {long entryScopeGroupId =GetterUtil.getLong(element.elementText(OpenSearchUtil.getQName(""scopeGroupId"", OpenSearchUtil.LIFERAY_NAMESPACE)));if ((entryScopeGroupId != 0) && (inactiveGroupsCount > 0)) {Group entryGroup = GroupServiceUtil.getGroup(entryScopeGroupId);if (entryGroup.isLayout()) {entryGroup = GroupLocalServiceUtil.getGroup(entryGroup.getParentGroupId());}if (!GroupLocalServiceUtil.isLiveGroupActive(entryGroup)) {totalRows--;continue;}}resultRows.add(element);} catch (Exception exception) {totalRows--;}}} catch (Exception exception) {}return new Tuple(resultRows, totalRows);}}"	2
3904	"public class A {private Pair<String, Integer> getPeerInfo(Channel channel) {try {String[] peerInfo = channel.remoteAddress().toString().replace(""/"", """").split("":"");return new Pair<>(peerInfo[0], Integer.parseInt(peerInfo[1]));} catch (Exception e) {}return new Pair<>(null, 0);}}"	1
3905	"public class A {protected String filterQueryString(String queryString) {String query = queryString.replaceAll(COMMENT_BLOCK_PATTERN, """");String[] lines = query.split(""\\n"");StringBuilder stringBuilder = new StringBuilder("""");for (String line : lines) {line = line.trim();if (!line.startsWith(""--"") && !line.isEmpty() && !line.startsWith(""#"")) {line = line.replaceAll(""\\?"", """");line = line.replaceAll(""\\:"", """");stringBuilder.append(line);stringBuilder.append("" "");}}stringBuilder.deleteCharAt(stringBuilder.length() - 1);return stringBuilder.toString();}}"	1
3906	"public class A {@Testpublic void testNumericAndRange() throws Exception {String query =""(""+ CityField.NUM.name()+ GTE_OP+ ""30)""+ AND_OP+ ""(""+ CityField.NUM.name()+ LTE_OP+ ""105)"";runTest(""((_Bounded_ = true) && ("" + query + ""))"", query);}}"	1
3907	public class A {private PartitionData add(final PartitionData pd, final ByteArray itemId) {PartitionData singleton = uniqueSetOfPartitions.get(pd);if (singleton == null) {uniqueSetOfPartitions.put(pd, pd);singleton = pd;}Set<ByteArray> idsSet = partitionsToIds.get(singleton);if (idsSet == null) {idsSet = new HashSet<>();partitionsToIds.put(singleton, idsSet);}if (idsSet.size() > upperBoundPerPartition) {return null;}if (idsSet.size() == upperBoundPerPartition) {}idsSet.add(itemId);Set<PartitionData> partitionSet = idsToPartition.get(itemId);if (partitionSet == null) {partitionSet = new HashSet<>();idsToPartition.put(itemId, partitionSet);}partitionSet.add(singleton);return singleton;}}	1
3908	"public class A {private ImmutableMap<PatroniStatsScripts, String> getPodStats(Pod pod) {try {return Seq.seq(podExecutor.exec(pod,StackgresClusterContainers.PATRONI,""sh"",""-c"",Seq.seq(PatroniStatsScripts.getScripts()).map(tt ->""echo \""""+ tt.v1.getName()+ "":$( (""+ tt.v2+ "") 2>&1 | tr -d '\\n')\""\n"").toString())).peek(line -> {if (LOGGER.isTraceEnabled() && line.endsWith(""#failed"")) {}}).filter(line -> !line.endsWith(""#failed"")).map(line -> Tuple.tuple(line, line.indexOf("":""))).map(tt ->Tuple.tuple(PatroniStatsScripts.fromName(tt.v1.substring(0, tt.v2)),tt.v1.substring(tt.v2 + 1))).collect(ImmutableMap.toImmutableMap(Tuple2::v1, Tuple2::v2));} catch (Exception ex) {return ImmutableMap.<PatroniStatsScripts, String>of();}}}"	2
3909	public class A {public void delete(String reponame) {RepoEntry repoEntry = entriesRepository.findFirstByName(reponame);if (repoEntry != null) {entriesRepository.delete(repoEntry);}}}	1
3910	public class A {@Overridepublic void run() {RadioStation oldStation = currentStation;currentStationIndex++;currentStationIndex = currentStationIndex % stationsList.size();currentStation = stationsList.get(currentStationIndex);currentStationChanged(currentStation);deferred.resolve();}}	1
3911	"public class A {@Testpublic void dropImport() throws Exception {Repository repository = createTestRepoUsingRepoService();getL10nJCommander().run(""push"",""-r"",repository.getName(),""-s"",getInputResourcesTestDir(""source"").getAbsolutePath());Asset asset =assetClient.getAssetByPathAndRepositoryId(""source-xliff.xliff"", repository.getId());importTranslations(asset.getId(), ""source-xliff_"", ""fr-FR"");importTranslations(asset.getId(), ""source-xliff_"", ""ja-JP"");Asset asset2 =assetClient.getAssetByPathAndRepositoryId(""source2-xliff.xliff"", repository.getId());importTranslations(asset2.getId(), ""source2-xliff_"", ""fr-FR"");importTranslations(asset2.getId(), ""source2-xliff_"", ""ja-JP"");waitForRepositoryToHaveStringsForTranslations(repository.getId());getL10nJCommander().run(""drop-export"", ""-r"", repository.getName());final Long dropId = getLastDropIdFromOutput(outputCapture);Console mockConsole = mock(Console.class);when(mockConsole.readLine(Long.class)).thenAnswer(new Answer<Long>() {@Overridepublic Long answer(InvocationOnMock invocation) throws Throwable {return getAvailableDropNumberForDropIdFromOutput(dropId);}});L10nJCommander l10nJCommander = getL10nJCommander();DropImportCommand dropImportCommand = l10nJCommander.getCommand(DropImportCommand.class);dropImportCommand.console = mockConsole;int numberOfFrenchTranslationsBefore = getNumberOfFrenchTranslations(repository);localizeDropFiles(dropRepository.findById(dropId).orElse(null));l10nJCommander.run(new String[] {""drop-import"", ""-r"", repository.getName(), ""--number-drop-fetched"", ""1000""});int numberOfFrenchTranslationsAfter = getNumberOfFrenchTranslations(repository);assertEquals(""2 new french translations must be added"",numberOfFrenchTranslationsBefore + 2,numberOfFrenchTranslationsAfter);getL10nJCommander().run(""tm-export"",""-r"",repository.getName(),""-t"",targetTestDir.getAbsolutePath(),""--target-basename"",""fortest"");modifyFilesInTargetTestDirectory(XliffUtils.replaceCreatedDateFunction());checkExpectedGeneratedResources();}}"	1
3912	"public class A {@Overridepublic String format(String id) {String formattedID = id;String pattern = getFormatPattern();if (pattern == null || pattern.trim().isEmpty()) {if (!isValidLength(formattedID)) {logger.error(""Formatted ID '""+ formattedID+ ""' exceeds maximum length of ""+ getMaxOutputLength()+ "" characters.""+ ""Returning ID without formatting."");return id;}} else {StringBuffer buf = stringwriter.getBuffer();buf.setLength(0);try {PrintWriter printwriter = new PrintWriter(stringwriter);printwriter.printf(id, pattern);formattedID = stringwriter.toString();} catch (IllegalFormatException e) {}if (!isValidLength(formattedID)) {return id;}}return formattedID;}}"	2
3913	"public class A {@RestAccessControl(permission = Permission.SUPERUSER)@RequestMapping(value = ""/report/{reportCode}"",method = RequestMethod.GET,produces = MediaType.APPLICATION_JSON_VALUE)public ResponseEntity<SimpleRestResponse<DumpReportDto>> getDumpReport(@PathVariable String reportCode) {DumpReportDto result = this.getDatabaseService().getDumpReportDto(reportCode);return new ResponseEntity<>(new SimpleRestResponse<>(result), HttpStatus.OK);}}"	2
3914	"public class A {public CompletableFuture<StatefulRedisConnection<K, V>> getConnectionAsync(Intent intent) {if (debugEnabled) {}if (readFrom != null && intent == Intent.READ) {List<RedisNodeDescription> selection =readFrom.select(new ReadFrom.Nodes() {@Overridepublic List<RedisNodeDescription> getNodes() {return knownNodes;}@Overridepublic Iterator<RedisNodeDescription> iterator() {return knownNodes.iterator();}});if (selection.isEmpty()) {throw new RedisException(String.format(""Cannot determine a node to read (Known nodes: %s) with setting %s"",knownNodes, readFrom));}try {Flux<StatefulRedisConnection<K, V>> connections = Flux.empty();for (RedisNodeDescription node : selection) {connections = connections.concatWith(Mono.fromFuture(getConnection(node)));}if (OrderingReadFromAccessor.isOrderSensitive(readFrom) || selection.size() == 1) {return connections.filter(StatefulConnection::isOpen).next().switchIfEmpty(connections.next()).toFuture();}return connections.filter(StatefulConnection::isOpen).collectList().map(it -> {int index = ThreadLocalRandom.current().nextInt(it.size());return it.get(index);}).switchIfEmpty(connections.next()).toFuture();} catch (RuntimeException e) {throw Exceptions.bubble(e);}}return getConnection(getMaster());}}"	1
3915	public class A {private static boolean _verifyProcess(String verifyProcessClassName) throws VerifyException {if (_log.isDebugEnabled()) {}try {Class<?> clazz = Class.forName(verifyProcessClassName);VerifyProcess verifyProcess = (VerifyProcess) clazz.newInstance();if (_log.isDebugEnabled()) {}verifyProcess.verify();if (_log.isDebugEnabled()) {}return true;} catch (ClassNotFoundException classNotFoundException) {} catch (IllegalAccessException illegalAccessException) {} catch (InstantiationException instantiationException) {}return false;}}	6
3916	public class A {public void debug(Object msg, Throwable thr) {}}	1
3917	"public class A {@SuppressWarnings(""unchecked"")@Testpublic void testSkipAndRetryWithWriteFailureAndNonTrivialCommitInterval() throws Exception {factory.setCommitInterval(3);factory.setListeners(new StepListener[] {new SkipListenerSupport<String, String>() {@Overridepublic void onSkipInWrite(String item, Throwable t) {recovered.add(item);assertTrue(TransactionSynchronizationManager.isActualTransactionActive());}}});factory.setSkipLimit(2);ItemReader<String> provider =new ListItemReader<String>(Arrays.asList(""a"", ""b"", ""c"", ""d"", ""e"", ""f"")) {@Nullable@Overridepublic String read() {String item = super.read();provided.add(item);count++;return item;}};ItemWriter<String> itemWriter =new ItemWriter<String>() {@Overridepublic void write(List<? extends String> item) throws Exception {processed.addAll(item);written.addAll(item);if (item.contains(""b"") || item.contains(""d"")) {throw new RuntimeException(""Write error - planned but recoverable."");}}};factory.setItemReader(provider);factory.setItemWriter(itemWriter);factory.setRetryLimit(5);factory.setRetryableExceptionClasses(getExceptionMap(RuntimeException.class));AbstractStep step = (AbstractStep) factory.getObject();step.setName(""mytest"");StepExecution stepExecution = new StepExecution(step.getName(), jobExecution);repository.add(stepExecution);step.execute(stepExecution);assertEquals(2, recovered.size());assertEquals(2, stepExecution.getSkipCount());assertEquals(2, stepExecution.getWriteSkipCount());List<String> expectedOutput =Arrays.asList(StringUtils.commaDelimitedListToStringArray(""a,c,e,f""));assertEquals(expectedOutput, written);assertEquals(7, provided.size());assertEquals(36, processed.size());assertEquals(2, recovered.size());}}"	2
3918	public class A {@Overridepublic void onError(Throwable t) {if (agentId != null) {connectedAgents.remove(agentId, ConnectedAgent.this);}}}	2
3919	"public class A {@Overridepublic Long getDatasetCount(Dataset dataset, Endpoint endpoint) throws MetadataException {try {DigirMetadata metadata = getDigirMetadata(endpoint);String code = MachineTagUtils.firstTag(dataset, TagName.DIGIR_CODE).getValue();int numberOfRecords =metadata.getResources().stream().filter((r) -> code.equals(r.getCode())).findFirst().map(DigirResource::getNumberOfRecords).orElse(0);if (numberOfRecords != 0) {return (long) numberOfRecords;}return null;} catch (Exception e) {throw new MetadataException(""Unable to retrieve count of DiGIR dataset ["" + dataset.getKey() + ""]"",e,ErrorCode.OTHER_ERROR);}}}"	1
3920	public class A {public boolean clientAuthentication(Credentials credentials, boolean interactive, boolean skipPassword) {boolean isServiceUsesExternalAuthenticator =!interactive&& externalAuthenticationService.isEnabled(AuthenticationScriptUsageType.SERVICE);if (isServiceUsesExternalAuthenticator) {CustomScriptConfiguration customScriptConfiguration =externalAuthenticationService.determineCustomScriptConfiguration(AuthenticationScriptUsageType.SERVICE, 1, this.authAcr);if (customScriptConfiguration == null) {} else {this.authAcr = customScriptConfiguration.getCustomScript().getName();boolean result =externalAuthenticationService.executeExternalAuthenticate(customScriptConfiguration, null, 1);if (result) {Client client = authenticationService.configureSessionClient();showClientAuthenticationLog(client);return true;}}}boolean loggedIn = skipPassword;if (!loggedIn) {loggedIn = clientService.authenticate(credentials.getUsername(), credentials.getPassword());}if (loggedIn) {Client client = authenticationService.configureSessionClient();showClientAuthenticationLog(client);return true;}return false;}}	2
3921	public class A {@Overridepublic ProbeResult executeTest() {try {ecdsaPkGroupsStatic = new LinkedList<>();ecdsaPkGroupsEphemeral = new LinkedList<>();ecdsaPkGroupsTls13 = new LinkedList<>();ecdsaCertSigGroupsStatic = new LinkedList<>();ecdsaCertSigGroupsEphemeral = new LinkedList<>();ecdsaCertSigGroupsTls13 = new LinkedList<>();Set<CertificateChain> certificates = new HashSet<>();if (scanForRsaCert) {certificates.addAll(getRsaCerts());}if (scanForDssCert) {certificates.addAll(getDssCerts());}if (scanForEcdsaCert) {certificates.addAll(getEcdsaCerts());}if (scanForGostCert) {certificates.addAll(getGostCert());}if (scanForTls13) {certificates.addAll(getTls13Certs());}if (certificates.isEmpty()) {return getCouldNotExecuteResult();} else {return new CertificateResult(certificates,ecdsaPkGroupsStatic,ecdsaPkGroupsEphemeral,ecdsaCertSigGroupsStatic,ecdsaCertSigGroupsEphemeral,ecdsaPkGroupsTls13,ecdsaCertSigGroupsTls13);}} catch (Exception E) {return getCouldNotExecuteResult();}}}	1
3922	public class A {public static void catchAndLog(final Logger log, final CheckedRunnable r) {try {r.run();} catch (final Exception e) {}}}	1
3923	"public class A {@Test(dataProvider = ""testName"",dependsOnMethods = {""CRUDTests""})public void createForUniqueRole(String testName) throws Exception {setupCreate();RoleClient client = new RoleClient();Role role = createRoleInstance(knownRoleName, ""role users"", true);Response res = client.create(role);try {int statusCode = res.getStatus();if (logger.isDebugEnabled()) {}Assert.assertTrue(testRequestType.isValidStatusCode(statusCode),invalidStatusCodeMessage(testRequestType, statusCode));Assert.assertEquals(statusCode, Response.Status.BAD_REQUEST.getStatusCode());} finally {res.close();}}}"	3
3924	public class A {private void killOozieJob(String jobId) {String out = sshOozieClient.killJob(jobId);}}	1
3925	"public class A {public static void traceMBeans(String domain) throws Exception {MBeanServer mbsc = ManagementFactory.getPlatformMBeanServer();String d = getDomainName(domain);Set<ObjectName> s = mbsc.queryNames(new ObjectName(d + "":*""), null);if (s.size() > 0) {for (ObjectName on : s) {}}}}"	2
3926	public class A {@Verify(global = true)public void globalVerify() {ICacheListenerOperationCounter total = new ICacheListenerOperationCounter();for (ICacheListenerOperationCounter i : results) {total.add(i);}}}	1
3927	public class A {private static int getPositiveIntProperty(Configuration configSource, int defaultValue, String... keys) {configSource = guardConfigSource(configSource);if (configSource == null) {return defaultValue;}for (String key : keys) {Integer val = configSource.getInteger(key, null);if (val != null && val <= 0) {continue;}if (val != null) {return val;}}return defaultValue;}}	1
3928	public class A {private void checkConnectionOpen() {try {if (!connection.isValid(10)) {establishConnection();jdbcWriter.prepareStatement(connection);}} catch (SQLException e) {} catch (ClassNotFoundException e) {} catch (IOException e) {}}}	4
3929	"public class A {public static com.liferay.commerce.price.list.model.CommercePriceEntry upsertCommercePriceEntry(HttpPrincipal httpPrincipal,long commercePriceEntryId,long cProductId,String cpInstanceUuid,long commercePriceListId,String externalReferenceCode,java.math.BigDecimal price,boolean discountDiscovery,java.math.BigDecimal discountLevel1,java.math.BigDecimal discountLevel2,java.math.BigDecimal discountLevel3,java.math.BigDecimal discountLevel4,int displayDateMonth,int displayDateDay,int displayDateYear,int displayDateHour,int displayDateMinute,int expirationDateMonth,int expirationDateDay,int expirationDateYear,int expirationDateHour,int expirationDateMinute,boolean neverExpire,String skuExternalReferenceCode,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommercePriceEntryServiceUtil.class,""upsertCommercePriceEntry"",_upsertCommercePriceEntryParameterTypes27);MethodHandler methodHandler =new MethodHandler(methodKey,commercePriceEntryId,cProductId,cpInstanceUuid,commercePriceListId,externalReferenceCode,price,discountDiscovery,discountLevel1,discountLevel2,discountLevel3,discountLevel4,displayDateMonth,displayDateDay,displayDateYear,displayDateHour,displayDateMinute,expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,neverExpire,skuExternalReferenceCode,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.price.list.model.CommercePriceEntry) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
3930	public class A {private void getAllLogicalSwitches() {ResourceCollection<LogicalSwitch> logicalSwitches = client.getAll();}}	1
3931	public class A {public List<JobTaskMoveAssignment> getAssignmentsForJobReallocation(Job job, int tasksToMove, List<HostState> hosts) {int maxTasksToMove = (tasksToMove > 0) ? tasksToMove : config.getTasksMovedFullRebalance();List<JobTaskMoveAssignment> candidateAssignments = new ArrayList<>();JobTaskItemByHostMap tasksByHost = generateTaskCountByHost(hosts, job.getCopyOfTasks());int maxPerHost = maxTasksPerHost(job, tasksByHost.size());if (log.isDebugEnabled()) {}while (candidateAssignments.size() < maxTasksToMove) {MoveAssignmentList moves = null;List<String> hostsSorted = tasksByHost.generateHostsSorted();String hostWithMost = hostsSorted.get(hostsSorted.size() - 1);String hostWithLeast = hostsSorted.get(0);int mostTasksOnHost = tasksByHost.findMostTasksOnHost();int leastTasksOnHost = tasksByHost.findLeastTasksOnHost();boolean isExtremeHost = isExtremeHost(hostWithMost, true, true);if (log.isDebugEnabled()) {}if (mostTasksOnHost > maxPerHost) {moves = moveTasksOffHost(tasksByHost, maxPerHost, 1, -1, hostWithMost);} else if (leastTasksOnHost < (maxPerHost - 1)) {moves = moveTasksOntoHost(tasksByHost, maxPerHost, 1, -1, hostWithLeast);} else if (isExtremeHost) {moves = moveTasksOffHost(tasksByHost, maxPerHost, 1, -1, hostWithMost);}if ((moves == null) || moves.isEmpty()) {break;} else {candidateAssignments.addAll(moves.getList());}}if (candidateAssignments.size() > maxTasksToMove) {candidateAssignments = candidateAssignments.subList(0, maxTasksToMove);}candidateAssignments = removeDuplicateAssignments(candidateAssignments);return pruneTaskReassignments(candidateAssignments);}}	2
3932	public class A {public static void sendCallback(String callbackURL, String executeStatus, long id) {if (Validator.isBlank(callbackURL)) {return;}HttpClientBuilder httpClientBuilder = HttpClientBuilder.create();try (CloseableHttpClient closeableHttpClient =httpClientBuilder.useSystemProperties().build()) {HttpPost httpPost = new HttpPost(callbackURL);httpPost.setEntity(new StringEntity(_objectMapper.writeValueAsString(Collections.singletonMap(id, executeStatus)),ContentType.APPLICATION_JSON));closeableHttpClient.execute(httpPost);} catch (Exception exception) {}}}	1
3933	public class A {@Activateprotected void activate(ComponentContext componentContext) {if (log.isDebugEnabled()) {}}}	1
3934	public class A {@Overridepublic void run(TransformContext context, GtfsMutableRelationalDao dao) {int removedStopTimeCount = 0;int totalStopTimeCount = 0;for (Trip trip : dao.getAllTrips()) {List<StopTime> stopTimes = dao.getStopTimesForTrip(trip);for (int i = 0; i < stopTimes.size(); i++) {totalStopTimeCount++;StopTime stopTime = stopTimes.get(i);if (isNonRevenue(stopTime)) {dao.removeEntity(stopTime);removedStopTimeCount++;}}}UpdateLibrary.clearDaoCache(dao);}}	1
3935	public class A {@Overridepublic void add(Policy policy) {Policy old = findApparentlyEqualAndWarnIfNotSameUniqueTag(policiesInternal, policy);if (old != null) {remove(old);}CatalogUtils.setCatalogItemIdOnAddition(AbstractEntity.this, policy);policiesInternal.add((AbstractPolicy) policy);((AbstractPolicy) policy).setEntity(AbstractEntity.this);ConfigConstraints.assertValid(policy);getManagementSupport().getEntityChangeListener().onPolicyAdded(policy);sensors().emit(AbstractEntity.POLICY_ADDED, new PolicyDescriptor(policy));}}	1
3936	"public class A {@Overridepublic Authenticator authenticate(Vertx vertx,Map<String, String> config,MultiMap headerMap,Handler<AsyncResult<Void>> resultHandler) {OAuth2FlowType flowType = getFlowType(config.get(""flowType""));JsonObject params = new JsonObject();if (config.get(""username"") != null) {params.put(""username"", config.get(""username""));}if (config.get(""password"") != null) {params.put(""password"", config.get(""password""));}OAuth2Auth oauth2 = KeycloakAuth.create(vertx, flowType, mapToJson(config));oauth2.getToken(params,tokenResult -> {if (tokenResult.succeeded()) {AccessToken token = tokenResult.result();headerMap.set(""Authorization"", ""Bearer "" + token.principal().getString(""access_token""));resultHandler.handle(Future.succeededFuture());} else {resultHandler.handle(Future.failedFuture(tokenResult.cause()));}});return this;}}"	2
3937	public class A {public static DocumentFragment createDocumentFragment(final Page thisPage) {final App app = StructrApp.getInstance(thisPage.getSecurityContext());try {org.structr.web.entity.dom.DocumentFragment fragment =app.create(org.structr.web.entity.dom.DocumentFragment.class);fragment.setOwnerDocument(thisPage);return fragment;} catch (FrameworkException fex) {final Logger logger = LoggerFactory.getLogger(Page.class);}return null;}}	1
3938	"public class A {@Overridepublic WorkflowDocument loadWorkflowDocument(String documentId, Person user) {if (documentId == null) {throw new IllegalArgumentException(""invalid (null) documentHeaderId"");}if (user == null) {throw new IllegalArgumentException(""invalid (null) workflowUser"");} else if (StringUtils.isEmpty(user.getPrincipalName())) {throw new IllegalArgumentException(""invalid (empty) workflowUser"");}if (LOG.isDebugEnabled()) {}try {return WorkflowDocumentFactory.loadDocument(user.getPrincipalId(), documentId);} catch (IllegalArgumentException e) {throw new UnknownDocumentIdException(""unable to locate document with documentHeaderId '"" + documentId + ""'"");}}}"	1
3939	public class A {public static synchronized InetSocketAddress findLocalAddress(final String host) {ServerSocket socket = null;try {final InetAddress address = SocketUtils.addressByName(host);socket = new ServerSocket(0, 3, address);return (InetSocketAddress) socket.getLocalSocketAddress();} catch (final Exception e) {return null;} finally {if (socket != null) {try {socket.close();} catch (final Exception e) {}}}}}	2
3940	"public class A {public void saveModel(CustomModel custModel, String filename) throws IOException {File dir = new File(modelDir);if (!dir.exists()) {dir.mkdirs();}File f = new File(filename);ModelSerializer.writeModel(custModel.getModel(), filename, true);String labelFilename = filename + "".labels"";FileWriter fw = new FileWriter(new File(labelFilename));fw.write(StringUtils.join(custModel.getLabels(), ""|""));fw.flush();fw.close();}}"	3
3941	public class A {@Overridepublic void bsp(BSPPeer<LongWritable, Text, NullWritable, NullWritable, NullWritable> peer)throws IOException, SyncException, InterruptedException {long numOfPairs = 0;KeyValuePair<LongWritable, Text> readNext = null;while ((readNext = peer.readNext()) != null) {numOfPairs++;}assertTrue(numOfPairs > 2 || numOfPairs == 0);}}	1
3942	"public class A {@Overridepublic AssetLink findByE_E_T(long entryId1, long entryId2, int type) throws NoSuchLinkException {AssetLink assetLink = fetchByE_E_T(entryId1, entryId2, type);if (assetLink == null) {StringBundler sb = new StringBundler(8);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""entryId1="");sb.append(entryId1);sb.append("", entryId2="");sb.append(entryId2);sb.append("", type="");sb.append(type);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchLinkException(sb.toString());}return assetLink;}}"	1
3943	public class A {@PreDestroypublic void close() {if (log.isDebugEnabled()) {}clearAll = true;clearQueries(System.currentTimeMillis());}}	2
3944	public class A {private GrpcTransportConfig loadGrpcTransportConfig() {GrpcTransportConfig grpcTransportConfig = new GrpcTransportConfig();grpcTransportConfig.read(profilerConfig.getProperties());return grpcTransportConfig;}}	1
3945	public class A {public int getButton(int integrationID, int component) {synchronized (deviceButtonMapLock) {if (deviceButtonMap != null) {List<Integer> buttonList = deviceButtonMap.get(integrationID);if (buttonList != null && component <= buttonList.size()) {return buttonList.get(component - 1);} else {return 0;}} else {return 0;}}}}	2
3946	public class A {private static void addMetricsRegistryRegistrationListener(MetricsRegistryRegistrationListener listener) {synchronized (PinotMetricUtils.class) {metricsRegistryRegistrationListenersMap.put(listener, Boolean.TRUE);Set<PinotMetricsRegistry> metricsRegistries = metricsRegistryMap.keySet();for (PinotMetricsRegistry metricsRegistry : metricsRegistries) {listener.onMetricsRegistryRegistered(metricsRegistry);}}}}	1
3947	public class A {@Verifypublic void globalVerify() {MapOperationCounter total = new MapOperationCounter();for (MapOperationCounter operationCounter : operationCounterList) {total.add(operationCounter);}}}	1
3948	public class A {@Overridepublic void versionCommand(final org.locationtech.geowave.service.grpc.protobuf.VersionCommandParametersProtos request,final io.grpc.stub.StreamObserver<org.locationtech.geowave.service.grpc.protobuf.GeoWaveReturnTypesProtos.StringResponseProtos>responseObserver) {final VersionCommand cmd = new VersionCommand();final Map<FieldDescriptor, Object> m = request.getAllFields();GeoWaveGrpcServiceCommandUtil.setGrpcToCommandFields(m, cmd);final File configFile = GeoWaveGrpcServiceOptions.geowaveConfigFile;final OperationParams params = new ManualOperationParams();params.getContext().put(ConfigOptions.PROPERTIES_FILE_CONTEXT, configFile);cmd.prepare(params);try {cmd.computeResults(params);final StringResponseProtos resp = StringResponseProtos.newBuilder().build();responseObserver.onNext(resp);responseObserver.onCompleted();} catch (final Exception e) {responseObserver.onError(e);}}}	2
3949	"public class A {public static void unzip(final File zipFile, final File destination, final boolean noparent) {Files.assertDir(destination);Files.writable(destination);Files.assertFile(zipFile);Files.readable(zipFile);try {final ZipInputStream in = IO.unzip(zipFile);ZipEntry entry;while ((entry = in.getNextEntry()) != null) {String path = entry.getName();if (noparent) {path = path.replaceFirst(""^[^/]+/"", """");}final File file = new File(destination, path);if (entry.isDirectory()) {Files.mkdir(file);continue;}Files.mkdir(file.getParentFile());IO.copy(in, file);final long lastModified = entry.getTime();if (lastModified > 0) {file.setLastModified(lastModified);}}in.close();} catch (final Exception e) {logger.log(Level.SEVERE, ""Unable to unzip "" + zipFile.getAbsolutePath(), e);throw new IllegalStateException(""Unable to unzip "" + zipFile.getAbsolutePath(), e);}}}"	1
3950	public class A {public void startPeriodicFetching() {if (_running.getAndSet(true)) {return;}_scheduledFuture =_scheduledExecutorService.scheduleWithFixedDelay(_splitFetcher.get(), 0L, _refreshEveryNSeconds.get(), TimeUnit.SECONDS);}}	2
3951	public class A {public long deleteByQuery(Query query) throws GoraException {try {List<Object> objectArrayList = new ArrayList<>();if (query.getKey() == null && query.getEndKey() == null && query.getStartKey() == null) {if (query.getFields() == null) {client.getSession().execute(CassandraQueryFactory.getTruncateTableQuery(mapping));} else {}} else {String cqlQuery = CassandraQueryFactory.getDeleteByQuery(mapping, query, objectArrayList);ResultSet results;SimpleStatement statement;if (objectArrayList.size() == 0) {statement = new SimpleStatement(cqlQuery);} else {statement = new SimpleStatement(cqlQuery, objectArrayList.toArray());}if (writeConsistencyLevel != null) {statement.setConsistencyLevel(ConsistencyLevel.valueOf(writeConsistencyLevel));}results = client.getSession().execute(statement);}return 0;} catch (Exception e) {throw new GoraException(e);}}}	3
3952	"public class A {private synchronized void disconnectQuietly() {connected = false;for (Map.Entry<String, MessageListenerWrapper> entry : topicToWrapper.entrySet()) {entry.getValue().stop();}if (connection != null && !connection.isClosed() && connection.isTransportFailed()) {try {connection.close();} catch (JMSException e) {String message =""Exception caught while attempting to disconnect from JMS: "" + e.getMessage();}}}}"	2
3953	"public class A {private Object deserializeEventMessage(AgentEventBo agentEventBo) {try {if (agentEventBo.getVersion() == 0) {return this.agentEventMessageDeserializer.deserialize(agentEventBo.getEventType(), agentEventBo.getEventBody());} else if (agentEventBo.getVersion() == AgentEventBo.CURRENT_VERSION) {return this.agentEventMessageDeserializerV1.deserialize(agentEventBo.getEventType(), agentEventBo.getEventBody());} else {throw new UnsupportedEncodingException(""invalid version "" + agentEventBo.getVersion());}} catch (UnsupportedEncodingException e) {return null;}}}"	1
3954	public class A {public void addUnAckedMessages(PersistentDispatcherMultipleConsumers dispatcher, int numberOfMessages) {if (maxUnackedMessages > 0) {totalUnackedMessages.add(numberOfMessages);if (blockedDispatcherOnHighUnackedMsgs.get()&& !dispatcher.isBlockedDispatcherOnUnackedMsgs()&& dispatcher.getTotalUnackedMessages() > maxUnackedMsgsPerDispatcher) {lock.readLock().lock();try {dispatcher.blockDispatcherOnUnackedMsgs();blockedDispatchers.add(dispatcher);} finally {lock.readLock().unlock();}}}}}	1
3955	public class A {@Overridepublic OutputStream createOutputStream(long arg0) throws IOException {file = new MyOutputStream();return file;}}	1
3956	"public class A {@Overridepublic void onReadyForReadWrite(ReadWriteMetastorage metastorage) throws IgniteCheckedException {this.metastore = metastorage;Integer storeVer;try {storeVer = (Integer) readMeta(META_VERSION_KEY);} catch (Exception e) {if (log.isInfoEnabled())storeVer = null;}if (!VERSION.equals(storeVer)) {if (storeVer == null) {} else {if (log.isInfoEnabled()) {}}clearAllStatistics();writeMeta(META_VERSION_KEY, VERSION);} else {try {checkLocalStatistics();} catch (IgniteCheckedException e) {log.warning(String.format(""Unable to read statistics due to %s, clearing local statistics store."",e.getMessage()));clearAllStatistics();writeMeta(META_VERSION_KEY, VERSION);}}}}"	3
3957	public class A {@Overridepublic void handleCommand(ChannelUID channelUID, Command command) {x10Function = 0;Bridge bridge = getBridge();if (bridge == null) {return;}this.channelUID = channelUID;Cm11aBridgeHandler cm11aHandler = (Cm11aBridgeHandler) bridge.getHandler();if (cm11aHandler != null && cm11aHandler.getThing().getStatus().equals(ThingStatus.ONLINE)) {if (command == OnOffType.ON) {x10Function = X10Interface.FUNC_ON;desiredState = OnOffType.ON;} else if (command == OnOffType.OFF) {x10Function = X10Interface.FUNC_OFF;desiredState = OnOffType.OFF;} else if (command instanceof RefreshType) {x10Function = X10Interface.FUNC_OFF;desiredState = OnOffType.OFF;}if (x10Function > 0) {X10Interface x10Interface = cm11aHandler.getX10Interface();x10Interface.scheduleHWUpdate(this);} else {}} else {}}}	5
3958	public class A {private void cancelSuspicionTimeoutTask(String memberId) {Disposable future = suspicionTimeoutTasks.remove(memberId);if (future != null && !future.isDisposed()) {future.dispose();}}}	1
3959	"public class A {@Overridepublic Object execute(CommandLine commandLine) throws Exception {String settings = commandLine.getValue(Options.SETTINGS_OPTION);Preferences preferences = getPreferences();File file = new File(settings);List<Error> errors;try {errors = preferences.setValues(file);} finally {try {file.delete();} catch (Exception e) {}}if (errors.size() > 0) {return errors;}return Services.getMessage(""settings.updated"");}}"	1
3960	public class A {private void handleException(ExceptionHandlingStrategy strategy, String message) {switch (strategy) {case IGNORE:break;case LOGGING:break;case FAIL:throw new IllegalArgumentException(message);default:throw new AssertionError(strategy);}}}	2
3961	public class A {void rescheduleLeftOverJobs() {final Iterator<Long> jobs = jobDaoProvider.get().getAllJobIds(JobStatus.SUBMITTED);int resubmitcount = 0;while (jobs.hasNext()) {long oldID = jobs.next();long newID = jobDaoProvider.get().rescheduleJob(oldID);++resubmitcount;}}}	2
3962	public class A {@Overridepublic ReturnWithExceptions<Void, ModelObserver> representationCreated(Representation representation) {ReturnWithExceptions<Void, ModelObserver> ret = new ReturnWithExceptions<>(this);try {AIP aip = model.retrieveAIP(representation.getAipId());List<String> ancestors = SolrUtils.getAncestors(aip.getParentId(), model);indexRepresentation(aip, representation, ancestors).addTo(ret);if (ret.isEmpty()) {indexPreservationsEvents(aip.getId(), representation.getId()).addTo(ret);if (aip.getRepresentations().size() == 1) {SolrUtils.update(index,IndexedAIP.class,aip.getId(),Collections.singletonMap(RodaConstants.AIP_HAS_REPRESENTATIONS, true),(ModelObserver) this).addTo(ret);}}} catch (RequestNotValidException| NotFoundException| GenericException| AuthorizationDeniedException e) {ret.add(e);}return ret;}}	1
3963	public class A {protected void runTestQueryWithUniqueness(Set<Set<String>> expected,String querystr,Date startDate,Date endDate,Map<String, String> extraParms,AccumuloClient client)throws Exception {QueryImpl settings = new QueryImpl();settings.setBeginDate(startDate);settings.setEndDate(endDate);settings.setPagesize(Integer.MAX_VALUE);settings.setQueryAuthorizations(auths.serialize());settings.setQuery(querystr);settings.setParameters(extraParms);settings.setId(UUID.randomUUID());GenericQueryConfiguration config = logic.initialize(client, settings, authSet);logic.setupQuery(config);DocumentTransformer transformer = (DocumentTransformer) (logic.getTransformer(settings));TransformIterator iter = new DatawaveTransformIterator(logic.iterator(), transformer);List<Object> eventList = new ArrayList<>();while (iter.hasNext()) {eventList.add(iter.next());}BaseQueryResponse response = transformer.createResponse(eventList);Assert.assertTrue(response instanceof DefaultEventQueryResponse);DefaultEventQueryResponse eventQueryResponse = (DefaultEventQueryResponse) response;for (EventBase event : eventQueryResponse.getEvents()) {boolean found = false;for (Iterator<Set<String>> it = expected.iterator(); it.hasNext(); ) {Set<String> expectedSet = it.next();if (expectedSet.contains(event.getMetadata().getInternalId())) {it.remove();found = true;break;}}Assert.assertTrue(found);}Assert.assertTrue(expected.isEmpty());}}	3
3964	"public class A {@Overridepublic void onMessage(final Message m) {try {count++;TextMessage tm = (TextMessage) m;if (count == 1) {assertRemainingMessages(3);if (!""a"".equals(tm.getText())) {log.trace(""Expected a but got "" + tm.getText());failed = true;latch.countDown();}}if (count == 2) {assertRemainingMessages(3);if (!""b"".equals(tm.getText())) {log.trace(""Expected b but got "" + tm.getText());failed = true;latch.countDown();}}if (count == 3) {assertRemainingMessages(3);if (!""c"".equals(tm.getText())) {log.trace(""Expected c but got "" + tm.getText());failed = true;latch.countDown();}log.trace(""calling recover"");sess.recover();}if (count == 4) {assertRemainingMessages(3);if (!""a"".equals(tm.getText())) {failed = true;latch.countDown();}tm.acknowledge();assertRemainingMessages(2);log.trace(""calling recover"");sess.recover();}if (count == 5) {assertRemainingMessages(2);if (!""b"".equals(tm.getText())) {log.trace(""Expected b but got "" + tm.getText());failed = true;latch.countDown();}sess.recover();}if (count == 6) {assertRemainingMessages(2);if (!""b"".equals(tm.getText())) {failed = true;latch.countDown();}}if (count == 7) {assertRemainingMessages(2);if (!""c"".equals(tm.getText())) {failed = true;latch.countDown();}tm.acknowledge();assertRemainingMessages(0);latch.countDown();}} catch (Exception e) {failed = true;latch.countDown();}}}"	6
3965	"public class A {private static String nuxeoLongValueToString(Object value) {Long longVal;try {longVal = (Long) value;} catch (ClassCastException cce) {return """";}return longVal.toString();}}"	1
3966	"public class A {private void testNodeFailBeforeSendGridNearTxFinishResponse() throws Exception {IgniteEx grid0 = startGrids(2);grid0.cluster().state(ClusterState.ACTIVE);IgniteEx grid1 = grid(1);int key0 = primaryKey(grid0.cache(DEFAULT_CACHE_NAME));int key1 = primaryKey(grid1.cache(DEFAULT_CACHE_NAME));Affinity<Object> aff = grid1.affinity(DEFAULT_CACHE_NAME);assertFalse(""Keys have the same mapping [key0="" + key0 + "", key1="" + key1 + ']',aff.mapKeyToNode(key0).equals(aff.mapKeyToNode(key1)));spi(grid0).blockMessages(GridNearTxFinishResponse.class, getTestIgniteInstanceName(1));IgniteInternalFuture stopNodeFut =GridTestUtils.runAsync(() -> {try {spi(grid0).waitForBlocked();} catch (InterruptedException e) {}info(""Stopping node: ["" + grid0.name() + ']');grid0.close();},""node-stopper"");try (Transaction tx = grid1.transactions().txStart()) {grid1.cache(DEFAULT_CACHE_NAME).put(key0, 100);grid1.cache(DEFAULT_CACHE_NAME).put(key1, 200);tx.commit();fail(""Transaction passed, but no one partition is alive."");} catch (Exception e) {assertTrue(X.hasCause(e, CacheInvalidStateException.class));String msg = e.getMessage();assertTrue(msg.contains(ALL_PARTITION_OWNERS_LEFT_GRID_MSG));if (!mvccEnabled(grid1.context())) {Pattern msgPtrn;if (S.getSensitiveDataLogging() == PLAIN) {msgPtrn =Pattern.compile("" \\[cacheName=""+ DEFAULT_CACHE_NAME+ "", partition=\\d+, ""+ ""key=KeyCacheObjectImpl \\[part=\\d+, val=""+ key0+ "", hasValBytes=true\\]\\]"");} else if (S.getSensitiveDataLogging() == HASH) {msgPtrn =Pattern.compile("" \\[cacheName=""+ DEFAULT_CACHE_NAME+ "", partition=\\d+, ""+ ""key=""+ IgniteUtils.hash(key0)+ ""\\]"");} else {msgPtrn =Pattern.compile("" \\[cacheName=""+ DEFAULT_CACHE_NAME+ "", partition=\\d+, ""+ ""key=KeyCacheObject\\]"");}Matcher matcher = msgPtrn.matcher(msg);assertTrue(""Message does not match: [msg="" + msg + ']', matcher.find());}}stopNodeFut.get(10_000);}}"	1
3967	public class A {protected Mono<Long> doCount(SearchRequest request) {if (QUERY_LOGGER.isDebugEnabled()) {}return Mono.from(execute(client -> client.count(request))).onErrorResume(NoSuchIndexException.class, it -> Mono.just(0L));}}	1
3968	"public class A {private static void queryPlanReport(String indexNameOrNull,EventTable eventTableOrNull,Annotation[] annotations,AgentInstanceContext agentInstanceContext,String objectName) {QueryPlanIndexHook hook =QueryPlanIndexHookUtil.getHook(annotations, agentInstanceContext.getClasspathImportServiceRuntime());boolean queryPlanLogging =agentInstanceContext.getRuntimeSettingsService().getConfigurationCommon().getLogging().isEnableQueryPlan();if (queryPlanLogging && (QUERY_PLAN_LOG.isInfoEnabled() || hook != null)) {String prefix = ""Fire-and-forget or init-time-query from "" + objectName + "" "";String indexText =indexNameOrNull != null ? ""index "" + indexNameOrNull + "" "" : ""full table scan "";indexText += ""(snapshot only, for join see separate query plan) "";if (eventTableOrNull == null) {} else {}if (hook != null) {hook.fireAndForget(new QueryPlanIndexDescFAF(new IndexNameAndDescPair[] {new IndexNameAndDescPair(indexNameOrNull,eventTableOrNull != null? eventTableOrNull.getProviderClass().getSimpleName(): null)}));}}}}"	2
3969	"public class A {protected Object invokePutPostDeleteMethod(ApiMethod apiMethod, Object bean, Properties parameters, Object bodyObject)throws ApiException, Throwable {Object result = null;try {if (apiMethod.getHttpMethod().equals(ApiMethod.HttpMethod.DELETE)) {result = this.invokeDeleteMethod(apiMethod, bean, parameters);} else {result = this.invokePutPostMethod(apiMethod, bean, parameters, bodyObject);}if (null != result) return result;StringApiResponse response = new StringApiResponse();response.setResult(SUCCESS, null);result = response;} catch (NoSuchMethodException e) {throw new ApiException(IApiErrorCodes.API_METHOD_ERROR,""Method not supported - "" + this.buildApiSignature(apiMethod),Response.Status.INTERNAL_SERVER_ERROR);} catch (InvocationTargetException e) {if (e.getTargetException() instanceof ApiException) {throw (ApiException) e.getTargetException();} else {throw new ApiException(IApiErrorCodes.API_METHOD_ERROR,""Error invoking Method - "" + this.buildApiSignature(apiMethod),Response.Status.INTERNAL_SERVER_ERROR);}} catch (Throwable t) {throw t;}return result;}}"	3
3970	public class A {@Overridepublic void exceptionCaught(Throwable cause) {if (cause instanceof Error) {throw (Error) cause;}}}	1
3971	public class A {public synchronized void cleanup(boolean deleteTemporary) {if (deleteTemporary && tempDirectory != null && tempDirectory.exists()) {FileUtils.delete(tempDirectory);tempDirectory = null;}}}	1
3972	public class A {private void successMessage(String msg) {messages.add(msg);}}	1
3973	public class A {@Overridepublic String removeListElement() {IApsEntity entity = this.getCurrentApsEntity();try {int elementIndex = this.getElementIndex();ListAttributeInterface currentAttribute =(ListAttributeInterface) entity.getAttribute(this.getAttributeName());if (currentAttribute instanceof MonoListAttribute) {((MonoListAttribute) currentAttribute).removeAttribute(elementIndex);} else if (currentAttribute instanceof ListAttribute) {((ListAttribute) currentAttribute).removeAttribute(this.getListLangCode(), elementIndex);}} catch (Throwable t) {return FAILURE;}return SUCCESS;}}	2
3974	public class A {public boolean update(Rp rp) {try {RpObject rpObj =new RpObject(getDnForRp(rp.getOxdId()), rp.getOxdId(), Jackson2.serializeWithoutNulls(rp));this.persistenceEntryManager.merge(rpObj);return true;} catch (Exception e) {}return false;}}	2
3975	public class A {protected Properties getDefaultPackageSelection() {File desc = new File(getDownloadDirectory(), PACKAGES_DEFAULT_SELECTION);if (desc.exists()) {try {Properties props = new Properties();props.load(new FileReader(desc));return props;} catch (IOException e) {}}return null;}}	1
3976	public class A {@Overridepublic void unload(Consumer<EntityPlayer> playerConsumer) {super.unload(playerConsumer);if (!this.worldDir.delete()) {}}}	1
3977	public class A {private void verifyContextualFilter(Filter filter, String expectedPropertyName, String expectedSearchTerm) {LikeFilterImpl likeFilter = (LikeFilterImpl) filter;AttributeExpressionImpl expression = (AttributeExpressionImpl) likeFilter.getExpression();assertEquals(expectedPropertyName, expression.getPropertyName());String extractedSearchTerm = likeFilter.getLiteral();assertEquals(expectedSearchTerm, extractedSearchTerm);}}	2
3978	"public class A {private void uploadR4Profiles(FhirContext theContext, IGenericClient theClient, String theName)throws CommandFailureException {int total;int count;org.hl7.fhir.r4.model.Bundle bundle;String vsContents;try {vsContents =IOUtils.toString(ValidationDataUploader.class.getResourceAsStream(""/org/hl7/fhir/r4/model/"" + theName + "".xml""),""UTF-8"");} catch (IOException e) {throw new CommandFailureException(e.toString());}bundle =theContext.newXmlParser().parseResource(org.hl7.fhir.r4.model.Bundle.class, vsContents);filterBundle(bundle);total = bundle.getEntry().size();count = 1;Collections.sort(bundle.getEntry(),new Comparator<org.hl7.fhir.r4.model.Bundle.BundleEntryComponent>() {@Overridepublic int compare(org.hl7.fhir.r4.model.Bundle.BundleEntryComponent theO1,org.hl7.fhir.r4.model.Bundle.BundleEntryComponent theO2) {if (theO1.getResource() == null && theO2.getResource() == null) {return 0;}if (theO1.getResource() == null) {return 1;}if (theO2.getResource() == null) {return -1;}return theO2.getResource().getClass().getName().compareTo(theO1.getResource().getClass().getName());}});for (org.hl7.fhir.r4.model.Bundle.BundleEntryComponent i : bundle.getEntry()) {org.hl7.fhir.r4.model.Resource next = i.getResource();next.setId(next.getIdElement().toUnqualifiedVersionless());if (next instanceof org.hl7.fhir.r4.model.CapabilityStatement) {continue;}try {theClient.update().resource(next).execute();} catch (BaseServerResponseException e) {}count++;}}}"	3
3979	public class A {public void init() {if (disableGlobalTransaction) {if (LOGGER.isInfoEnabled()) {}return;}initClient();}}	1
3980	"public class A {protected void updateProcessDefinitionJsonWorkerGroup() {WorkerGroupDao workerGroupDao = new WorkerGroupDao();ProcessDefinitionDao processDefinitionDao = new ProcessDefinitionDao();Map<Integer, String> replaceProcessDefinitionMap = new HashMap<>();try {Map<Integer, String> oldWorkerGroupMap =workerGroupDao.queryAllOldWorkerGroup(dataSource.getConnection());Map<Integer, String> processDefinitionJsonMap =processDefinitionDao.queryAllProcessDefinition(dataSource.getConnection());for (Map.Entry<Integer, String> entry : processDefinitionJsonMap.entrySet()) {ObjectNode jsonObject = JSONUtils.parseObject(entry.getValue());ArrayNode tasks = JSONUtils.parseArray(jsonObject.get(""tasks"").toString());for (int i = 0; i < tasks.size(); i++) {ObjectNode task = (ObjectNode) tasks.path(i);ObjectNode workerGroupNode = (ObjectNode) task.path(""workerGroupId"");Integer workerGroupId = -1;if (workerGroupNode != null && workerGroupNode.canConvertToInt()) {workerGroupId = workerGroupNode.asInt(-1);}if (workerGroupId == -1) {task.put(""workerGroup"", ""default"");} else {task.put(""workerGroup"", oldWorkerGroupMap.get(workerGroupId));}}jsonObject.remove(""task"");jsonObject.put(""tasks"", tasks);replaceProcessDefinitionMap.put(entry.getKey(), jsonObject.toString());}if (replaceProcessDefinitionMap.size() > 0) {processDefinitionDao.updateProcessDefinitionJson(dataSource.getConnection(), replaceProcessDefinitionMap);}} catch (Exception e) {}}}"	1
3981	public class A {private void doTest() throws Exception {final AtomicBoolean failed = new AtomicBoolean();for (int i = 0; i < GRID_CNT; i++) {final int idx = i;final Ignite grid = concurrent ? null : startGrid(idx);IgniteInternalFuture<?> fut =multithreadedAsync(new Runnable() {@Overridepublic void run() {Random rnd = new Random();try {Ignite ignite = grid == null ? startGrid(idx) : grid;IgniteCache<Object, Object> cache = getCache(ignite);cache.put(ignite.cluster().localNode().id(), UUID.randomUUID());while (!stopped) {int val = Math.abs(rnd.nextInt(100));if (val >= 0 && val < 40)cache.containsKey(ignite.cluster().localNode().id());else if (val >= 40 && val < 80) cache.get(ignite.cluster().localNode().id());else cache.put(ignite.cluster().localNode().id(), UUID.randomUUID());Thread.sleep(50);}} catch (Exception e) {failed.set(true);}}},1);futs.add(fut);}Thread.sleep(10_000);stopped = true;for (IgniteInternalFuture<?> fut : futs) fut.get();assertFalse(failed.get());}}	1
3982	public class A {@Overrideprotected final WriteMessage wrapMessage(Object msg, Future<Boolean> writeFuture) {((Command) msg).encode();((Command) msg).setWriteFuture((FutureImpl<Boolean>) writeFuture);if (log.isDebugEnabled()) {}return (WriteMessage) msg;}}	1
3983	public class A {@Overridepublic void actionPerformed(ActionEvent ev) {SignalDocument signalDocument = getActionFocusSelector().getActiveSignalDocument();if (signalDocument == null) {return;}signalDocument.getSignalView().toggleScaleToolBar();}}	2
3984	public class A {public static <CT extends TServiceClient, RT> RT executeRaw(ClientContext context, TServiceClientFactory<CT> factory, ClientExecReturn<RT, CT> exec)throws Exception {while (true) {CT client = null;String server = null;try {Pair<String, CT> pair = ServerClient.getConnection(context, factory, true);server = pair.getFirst();client = pair.getSecond();return exec.execute(client);} catch (TApplicationException tae) {throw new AccumuloServerException(server, tae);} catch (TTransportException tte) {sleepUninterruptibly(100, TimeUnit.MILLISECONDS);} finally {if (client != null) ServerClient.close(client);}}}}	1
3985	"public class A {@ResponseMetered(name = HttpConstants.WRITE_REQUEST)@Timed(name = HttpConstants.WRITE_REQUEST)@DELETE@Path(""{clusterId}/customized-state-config"")public Response removeCustomizedStateConfig(@PathParam(""clusterId"") String clusterId) {if (!doesClusterExist(clusterId)) {return notFound(String.format(""Cluster %s does not exist"", clusterId));}HelixAdmin admin = getHelixAdmin();try {admin.removeCustomizedStateConfig(clusterId);} catch (Exception ex) {return serverError(ex);}return OK();}}"	1
3986	"public class A {@Overridepublic JsonObject validateUsecaseName(String usecase) throws InsightsCustomException {try {JsonObject response = new JsonObject();response.addProperty(""UniqueUsecase"", autoMLConfigDAL.isUsecaseExisting(usecase));response.addProperty(""Usecase"", usecase);return response;} catch (Exception e) {throw new InsightsCustomException(e.getMessage());}}}"	2
3987	public class A {public void addCurrentContentItemToPresetContainer(DecimalType command) {if (command.intValue() > 6) {addContentItemToPresetContainer(command.intValue(), currentContentItem);} else {}}}	1
3988	public class A {private CdiContainer doCreateContainer(Bundle bundle) {Set<Bundle> extensions = new HashSet<>();findExtensions(bundle, extensions);return factory.createContainer(bundle, extensions);}}	1
3989	public class A {private MapGeometrySupport loadPolylineRecord(PolyLineRecord shapeRec) {Point2D.Double[] pointList = shapeRec.getPoints();int[] partsList = shapeRec.getParts();boolean isBad =pointList == null || pointList.length == 0 || isBadPolylineOrPolygon(shapeRec.getPoints());if (!isBad) {return processPolylineOrPolygonData(false, pointList, partsList);} else {return null;}}}	1
3990	"public class A {@Overridepublic InputStream read(final Path file, final TransferStatus status, final ConnectionCallback callback)throws BackgroundException {try {if (file.getType().contains(Path.Type.placeholder)) {final DescriptiveUrl link =new OneDriveUrlProvider().toUrl(file).find(DescriptiveUrl.Type.http);if (DescriptiveUrl.EMPTY.equals(link)) {return new NullInputStream(file.attributes().getSize());}return IOUtils.toInputStream(UrlFileWriterFactory.get().write(link), Charset.defaultCharset());} else {final DriveItem target = session.getItem(file);if (status.isAppend()) {final HttpRange range = HttpRange.withStatus(status);final String header;if (-1 == range.getEnd()) {header = String.format(""%d-"", range.getStart());} else {header = String.format(""%d-%d"", range.getStart(), range.getEnd());}if (log.isDebugEnabled()) {}return Files.download(target, header);}return Files.download(target);}} catch (OneDriveAPIException e) {switch (e.getResponseCode()) {case HttpStatus.SC_NOT_FOUND:fileid.cache(file, null);}throw new GraphExceptionMappingService().map(""Download {0} failed"", e, file);} catch (IOException e) {throw new DefaultIOExceptionMappingService().map(""Download {0} failed"", e, file);}}}"	2
3991	"public class A {private void registerCacheListener(final String metadataTableName) {if (log.isDebugEnabled())final SharedCacheCoordinator watcher =new SharedCacheCoordinator(metadataTableName, this.zookeepers, 30, 300, 10);try {watcher.start();} catch (Exception | Error e) {throw new RuntimeException(""table:"" + metadataTableName + "" Error starting Watcher for MetadataHelper"", e);}final String triStateName = metadataTableName + "":needsUpdate"";try {watcher.registerTriState(triStateName,new SharedTriStateListener() {@Overridepublic void stateHasChanged(SharedTriStateReader reader, SharedTriState.STATE value)throws Exception {if (log.isTraceEnabled()) {}if (value == SharedTriState.STATE.NEEDS_UPDATE) {maybeUpdateTypeMetadataInHdfs(watcher, triStateName, metadataTableName);}}@Overridepublic void stateChanged(CuratorFramework client, ConnectionState newState) {if (log.isTraceEnabled())}});if (!watcher.checkTriState(triStateName, SharedTriState.STATE.NEEDS_UPDATE)) {watcher.setTriState(triStateName, SharedTriState.STATE.NEEDS_UPDATE);}} catch (Exception e) {}}}"	4
3992	public class A {void enqueue(SolarEdgeCommand command) {try {commandQueue.add(command);} catch (IllegalStateException ex) {if (commandQueue.size() >= WEB_REQUEST_QUEUE_MAX_SIZE) {} else {}}}}	2
3993	"public class A {@LifecycleStartpublic void start() throws Exception {if (!lifecycleLock.canStart()) {throw new ISE(""can't start."");}synchronized (lock) {try {cleanupAndMakeTmpTaskDir();registerLocationListener();restoreRestorableTasks();initAssignedTasks();initCompletedTasks();scheduleCompletedTasksCleanup();lifecycleLock.started();} catch (Exception e) {log.makeAlert(e, ""Exception starting WorkerTaskManager."").emit();throw e;} finally {lifecycleLock.exitStart();}}}}"	2
3994	public class A {private void activateResource(String resourceId) throws ResourceException, CorruptStateException {Resource resource = (Resource) getResource(resourceId);checkResourceCanBeStarted(resource);if (protocolManagerIsAvailable()) {try {createProtocolSessions(resourceId);} catch (Exception e) {try {destroyProtocolSessions(resourceId);} catch (Exception e1) {}throw new ResourceException(e);}}List<? extends ICapability> oldCapabilities = resource.getCapabilities();List<ICapability> capabilities = createCapabilities(resource);resource.setCapabilities(capabilities);IResourceBootstrapper oldBootstrapper = resource.getBootstrapper();if (bootstrapperFactory != null) {resource.setBootstrapper(bootstrapperFactory.createResourceBootstrapper());}IProfile oldProfile = resource.getProfile();if (resource.getResourceDescriptor().getProfileId() != null&& !resource.getResourceDescriptor().getProfileId().isEmpty()) {loadProfileInResource(resource, resource.getResourceDescriptor().getProfileId());}try {try {resource.activate();} catch (IncorrectLifecycleStateException e) {throw new ResourceException(e);}} catch (ResourceException re) {resource.setCapabilities(oldCapabilities);resource.setBootstrapper(oldBootstrapper);resource.setProfile(oldProfile);if (protocolManagerIsAvailable()) {try {destroyProtocolSessions(resourceId);} catch (Exception e) {}}throw re;}}}	11
3995	"public class A {private void addConditionalImportInformation(Map<String, Object> operations) {Map<String, Object> _operations = (Map<String, Object>) operations.get(""operations"");List<ExtendedCodegenOperation> operationList =(List<ExtendedCodegenOperation>) _operations.get(""operation"");boolean hasRequiredParams = false;boolean hasListContainers = false;boolean hasHttpHeaders = false;boolean hasQueryParams = false;boolean hasPathParams = false;for (ExtendedCodegenOperation op : operationList) {if (op.getHasRequiredParams()) {hasRequiredParams = true;}for (CodegenParameter p : op.allParams) {String paramNameAlternative = null;if (this.reservedParamNames.contains(p.paramName)) {paramNameAlternative = p.paramName + ""Alias"";}setParamNameAlternative(p, p.paramName, paramNameAlternative);for (CodegenParameter param : op.headerParams) {if (param.isArray) {hasListContainers = true;}setParamNameAlternative(param, p.paramName, paramNameAlternative);}for (CodegenParameter param : op.queryParams) {if (param.isArray && !param.isCollectionFormatMulti) {hasListContainers = true;}if (param.required) {op.hasRequiredQueryParams = true;} else {op.hasOptionalQueryParams = true;}setParamNameAlternative(param, p.paramName, paramNameAlternative);}for (CodegenParameter param : op.formParams) {if (param.isArray && !param.isCollectionFormatMulti) {hasListContainers = true;}setParamNameAlternative(param, p.paramName, paramNameAlternative);}for (CodegenParameter param : op.pathParams) {setParamNameAlternative(param, p.paramName, paramNameAlternative);}}if (op.hasHttpHeaders) {hasHttpHeaders = true;}if (op.getHasQueryParams()) {hasQueryParams = true;}if (op.getHasPathParams()) {hasPathParams = true;}}operations.put(""hasRequiredParams"", hasRequiredParams);operations.put(""hasListContainers"", hasListContainers);operations.put(""hasHttpHeaders"", hasHttpHeaders);operations.put(""hasQueryParams"", hasQueryParams);operations.put(""hasPathParams"", hasPathParams);}}"	1
3996	"public class A {public void configure() {from(""seda:async"").to(""direct:foo"");from(""direct:foo"").process(new Processor() {public void process(Exchange exchange) throws Exception {exchange.getUnitOfWork().addSynchronization(new SynchronizationAdapter() {@Overridepublic void onComplete(Exchange exchange) {completed = exchange;foo = exchange.getIn().getHeader(""foo"");doneLatch.countDown();}});exchange.getUnitOfWork().addSynchronization(new SynchronizationAdapter() {@Overridepublic void onFailure(Exchange exchange) {failed = exchange;baz = exchange.getIn().getHeader(""baz"");doneLatch.countDown();}});String name = getName();if (name.equals(""testException"")) {throw new Exception(""Failing test!"");}}});}}"	2
3997	public class A {public static ResourceRequirements getResourceRequirements(ResourceRequirements resourceRequirements,int mem,double cpu,Map<String, ExternalResource> externalResources,Map<String, String> externalResourceConfigKeys) {final Quantity cpuQuantity = new Quantity(String.valueOf(cpu));final Quantity memQuantity = new Quantity(mem + Constants.RESOURCE_UNIT_MB);ResourceRequirementsBuilder resourceRequirementsBuilder =new ResourceRequirementsBuilder(resourceRequirements).addToRequests(Constants.RESOURCE_NAME_MEMORY, memQuantity).addToRequests(Constants.RESOURCE_NAME_CPU, cpuQuantity).addToLimits(Constants.RESOURCE_NAME_MEMORY, memQuantity).addToLimits(Constants.RESOURCE_NAME_CPU, cpuQuantity);for (Map.Entry<String, ExternalResource> externalResource : externalResources.entrySet()) {final String configKey = externalResourceConfigKeys.get(externalResource.getKey());if (!StringUtils.isNullOrWhitespaceOnly(configKey)) {final Quantity resourceQuantity =new Quantity(String.valueOf(externalResource.getValue().getValue().longValue()));resourceRequirementsBuilder.addToRequests(configKey, resourceQuantity).addToLimits(configKey, resourceQuantity);}}return resourceRequirementsBuilder.build();}}	1
3998	"public class A {@Testpublic void fileImageInputStreamExtImpl() {try {final File url = TestData.file(this, ""sample.jpeg"");final ImageInputStream stream = ImageIO.createImageInputStream(url);final RenderedOp image = JAI.create(""ImageRead"", stream);if (TestData.isInteractiveTest()) visualize(image, ""testFileImageInputStreamExtImpl"");else image.getAsBufferedImage();} catch (IOException e) {LOGGER.log(Level.SEVERE, e.getLocalizedMessage(), e);}}}"	2
3999	public class A {protected void runApplyModelPhase() {ViewLifecycleProcessor processor = ViewLifecycle.getProcessor();List<String> refreshPaths = null;if (refreshPathMappings != null) {refreshPaths = refreshPathMappings.get(UifConstants.ViewPhases.APPLY_MODEL);}ViewLifecyclePhase phase =KRADServiceLocatorWeb.getViewLifecyclePhaseBuilder().buildPhase(ViewLifecycle.getView(), UifConstants.ViewPhases.APPLY_MODEL, refreshPaths);View view = ViewLifecycle.getView();ViewHelperService helper = ViewLifecycle.getHelper();UifFormBase model = (UifFormBase) ViewLifecycle.getModel();if (LOG.isInfoEnabled()) {}if (model.isApplyDefaultValues()) {helper.applyDefaultValues(view);model.setApplyDefaultValues(false);}if (model.isEvaluateFlagsAndModes()) {helper.retrieveEditModesAndActionFlags();model.setActionFlags(view.getActionFlags());model.setEditModes(view.getEditModes());model.setEvaluateFlagsAndModes(false);} else {view.setActionFlags(model.getActionFlags());view.setEditModes(model.getEditModes());}helper.setViewContext();processor.performPhase(phase);}}	2
4000	"public class A {public void postProcessingExecuteBB(DelegateExecution execution) {try {List<ExecuteBuildingBlock> flowsToExecute =(List<ExecuteBuildingBlock>) execution.getVariable(""flowsToExecute"");String handlingCode = (String) execution.getVariable(HANDLINGCODE);final boolean aLaCarte = (boolean) execution.getVariable(BBConstants.G_ALACARTE);int currentSequence = (int) execution.getVariable(BBConstants.G_CURRENT_SEQUENCE);ExecuteBuildingBlock ebb = flowsToExecute.get(currentSequence - 1);String bbFlowName = ebb.getBuildingBlock().getBpmnFlowName();if (""ActivateVfModuleBB"".equalsIgnoreCase(bbFlowName)&& aLaCarte&& ""Success"".equalsIgnoreCase(handlingCode)) {postProcessingExecuteBBActivateVfModule(execution, ebb, flowsToExecute);}flowManipulatorListenerRunner.postModifyFlows(flowsToExecute, new DelegateExecutionImpl(execution));} catch (Exception ex) {workflowAction.buildAndThrowException(execution, ""Failed to post process Execute BB"");}}}"	2
4001	public class A {public void cleanupContext() {WebContainer wc = getWebContainer();if (wc == null || httpContext == null) {return;}wc.end(httpContext);httpContext = null;}}	1
4002	public class A {@AfterAllstatic void cdiContainerDown() {KafkaConnector factory = getInstance(KafkaConnector.class, KAFKA_CONNECTOR_LITERAL).get();Collection<KafkaPublisher<?, ?>> resources = factory.resources();assertFalse(resources.isEmpty());cdiContainer.close();assertTrue(resources.isEmpty());}}	1
4003	"public class A {@Overridepublic void visit(String key, Object value) {if (""ordinal"".equals(name)) {extensionInfo.ordinal = Integer.parseInt(value.toString());} else if (""plugins"".equals(name)) {if (value instanceof String) {extensionInfo.plugins.add((String) value);} else if (value instanceof String[]) {extensionInfo.plugins.addAll(Arrays.asList((String[]) value));} else {extensionInfo.plugins.add(value.toString());}} else {String pointClassName = ((Type) value).getClassName();extensionInfo.points.add(pointClassName);}super.visit(key, value);}}"	5
4004	public class A {private void processPath(Bundle bundle, PathElement[] path) {try {TreeMapState ps = new TreeMapState(this, tree, path, bundle);ps.process();processNodes.addAndGet(ps.touched());} catch (RuntimeException ex) {throw ex;} catch (Exception ex) {}bench.addEvents(BENCH.RULES, 1);}}	1
4005	public class A {@Overridepublic void operationComplete(ChannelFuture future) throws Exception {long durationNanos = System.nanoTime() - creationNanos;long durationMillis = TimeUnit.MILLISECONDS.convert(durationNanos, TimeUnit.NANOSECONDS);if (future.isSuccess()) {stats.reportSuccessfulRequest(durationMillis);} else {stats.reportFailedRequest();}}}	2
4006	"public class A {private Location validateCustomLocation(NamespaceMeta namespaceMeta) throws IOException {Location customNamespacedLocation = namespacePathLocator.get(namespaceMeta);if (!customNamespacedLocation.exists()) {throw new IOException(String.format(""The provided home directory '%s' for namespace '%s' does not exist. Please create it""+ "" on filesystem with sufficient privileges for the user %s and then try""+ "" creating a namespace."",customNamespacedLocation.toString(),namespaceMeta.getNamespaceId(),namespaceMeta.getConfig().getPrincipal()));}if (!customNamespacedLocation.isDirectory()) {throw new IOException(String.format(""The provided home directory '%s' for namespace '%s' is not a directory. Please""+ "" specify a directory for the namespace with sufficient privileges for the user""+ "" %s and then try creating a namespace."",customNamespacedLocation.toString(),namespaceMeta.getNamespaceId(),namespaceMeta.getConfig().getPrincipal()));}if (!customNamespacedLocation.list().isEmpty()) {throw new IOException(String.format(""The provided home directory '%s' for namespace '%s' is not empty. Please try""+ "" creating the namespace again with an empty directory mapping and sufficient""+ "" privileges for the user %s."",customNamespacedLocation.toString(),namespaceMeta.getNamespaceId(),namespaceMeta.getConfig().getPrincipal()));}if (namespaceMeta.getConfig().getGroupName() != null) {String groupName = customNamespacedLocation.getGroup();String permissions = customNamespacedLocation.getPermissions().substring(3, 6);if (!groupName.equals(namespaceMeta.getConfig().getGroupName())) {}if (!""rwx"".equals(permissions)) {}}return customNamespacedLocation;}}"	2
4007	public class A {@Overridepublic User addUserWithWorkflow(long companyId,boolean autoPassword,String password1,String password2,boolean autoScreenName,String screenName,String emailAddress,Locale locale,String firstName,String middleName,String lastName,long prefixId,long suffixId,boolean male,int birthdayMonth,int birthdayDay,int birthdayYear,String jobTitle,long[] groupIds,long[] organizationIds,long[] roleIds,long[] userGroupIds,boolean sendEmail,ServiceContext serviceContext)throws PortalException {long creatorUserId = 0;try {creatorUserId = getGuestOrUserId();} catch (PrincipalException principalException) {if (_log.isWarnEnabled()) {}}checkAddUserPermission(creatorUserId,companyId,emailAddress,groupIds,organizationIds,roleIds,userGroupIds,serviceContext);User user =userLocalService.addUserWithWorkflow(creatorUserId,companyId,autoPassword,password1,password2,autoScreenName,screenName,emailAddress,locale,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,jobTitle,groupIds,organizationIds,roleIds,userGroupIds,sendEmail,serviceContext);checkMembership(new long[] {user.getUserId()}, groupIds, organizationIds, roleIds, userGroupIds);propagateMembership(new long[] {user.getUserId()}, groupIds, organizationIds, roleIds, userGroupIds);return user;}}	1
4008	public class A {protected DashboardRenderer getDashboardRenderer(String layout) {try {return this.componentManager.getInstance(DashboardRenderer.class, layout);} catch (ComponentLookupException e) {return null;}}}	1
4009	public class A {public void add(OWLEntity entity, String name) {if (entity == null) {return;}Map<String, IRI> map = pickMap(entity);if (map == null) {return;}labels.put(entity.getIRI(), name);iris.put(name, entity.getIRI());map.put(name, entity.getIRI());}}	1
4010	public class A {@Subscribepublic void lifecycleStateChange(Lifecycle lifecycle) {switch (lifecycle) {case RUNNING:paused = false;break;default:paused = true;}}}	1
4011	public class A {@Overrideprotected void doReceive(Message message) throws Exception {Response response = (Response) message.getPayload();if (response.isSucceeded() || !(response instanceof AppleResponse)) {return;}AppleResponse appleResponse = (AppleResponse) response;String invalidTokenErrorName = DeliveryError.INVALID_TOKEN.name();if (invalidTokenErrorName.equals(appleResponse.getStatus())) {String token = appleResponse.getToken();try {_pushNotificationsDeviceLocalService.deletePushNotificationsDevice(token);if (_log.isWarnEnabled()) {}} catch (Exception exception) {if (_log.isDebugEnabled()) {}}}}}	2
4012	public class A {@Overrideprotected void recordEventStateFromImageProvider(InternalDistributedMember provider) {if (createRegionReplyProcessor != null) {Map<ThreadIdentifier, EventSequenceNumberHolder> providerEventStates =createRegionReplyProcessor.getEventState(provider);if (providerEventStates != null) {recordEventState(provider, providerEventStates);} else {}createRegionReplyProcessor = null;}}}	1
4013	"public class A {public List findByExample(StgMbMasGef instance) {try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.StgMbMasGef"").add(Example.create(instance)).list();return results;} catch (RuntimeException re) {throw re;}}}"	3
4014	"public class A {@Testpublic void testHandleGetRequest() {String jsonResponse = JsonLoader.loadJson(DomainHelper.getRestUrlV2() + ""/content/emojis"");JSONArray emojisJSONArray = new JSONArray(jsonResponse);assertThat(emojisJSONArray.length() > 0, is(true));JSONObject emojiJsonObject = emojisJSONArray.getJSONObject(0);assertThat(emojiJsonObject.getString(""glyph""), not(nullValue()));}}"	2
4015	public class A {@Overridepublic void fillText(final String text, final double x, final double y) {if (LOG.isDebugEnabled()) {}final AffineTransform savedTransform = graphics2D_.getTransform();try {graphics2D_.setTransform(transformation_);graphics2D_.setColor(fillColor_);graphics2D_.drawString(text, (int) x, (int) y);} finally {graphics2D_.setTransform(savedTransform);}}}	1
4016	public class A {private void logPluginPathConfigProviderWarning(Map<String, String> rawOriginals) {String rawPluginPath = rawOriginals.get(PLUGIN_PATH_CONFIG);String transformedPluginPath = Objects.toString(originals().get(PLUGIN_PATH_CONFIG));if (!Objects.equals(rawPluginPath, transformedPluginPath)) {}}}	1
4017	"public class A {private static void matchSubElements(ModelNode descriptionModel, List<Lookup> fieldNames, List<FieldDesc> fields) {if (descriptionModel.hasDefined(RESULT))descriptionModel = descriptionModel.get(RESULT).asObject();try {if (descriptionModel.hasDefined(ATTRIBUTES)) {List<Property> elements = descriptionModel.get(ATTRIBUTES).asPropertyList();for (Property element : elements) {String childName = element.getName();ModelNode value = element.getValue();for (Lookup lookup : fieldNames) {if (lookup.getDetypedName().equals(childName)) {FieldDesc desc =new FieldDesc(lookup.getJavaName(), value.get(""description"").asString());if (value.hasDefined(""expressions-allowed"")) {desc.setSupportExpressions(value.get(""expressions-allowed"").asBoolean());}if (!fields.contains(desc)) fields.add(desc);}}}}if (fieldNames.isEmpty()) return;if (descriptionModel.hasDefined(""children"")) {List<Property> children = descriptionModel.get(""children"").asPropertyList();for (Property child : children) {ModelNode childDesc = child.getValue();ModelNode desc = childDesc.get(MODEL_DESCRIPTION);if (desc.isDefined()) {for (Property modDescProp : desc.asPropertyList()) {matchSubElements(childDesc.get(MODEL_DESCRIPTION, modDescProp.getName()), fieldNames, fields);if (fieldNames.isEmpty()) return;}}}}} catch (IllegalArgumentException e) {}}}"	1
4018	public class A {@Overridepublic void dispose() {try {closeProducer(producer);closeSession(session);connection.close();} catch (JMSException e) {}}}	1
4019	public class A {public void failedToCapture(SnapshotStateId componentId) {updateCapture(componentId, SnapshotComponentCounter.ComponentState.FAILED);}}	1
4020	public class A {@Overridepublic void stop() throws Exception {if (mStream == null) {return;}try {mStream.close();} catch (IOException e) {return;}}}	2
4021	public class A {@Overridepublic void start() throws Exception {mRunning = true;mJournalSystem.start();startMasters(false);if (ServerConfiguration.getBoolean(PropertyKey.MASTER_JOURNAL_CATCHUP_PROTECT_ENABLED)) {mJournalSystem.waitForCatchup();}try {mLeaderSelector.start(getRpcAddress());} catch (IOException e) {throw new RuntimeException(e);}while (!Thread.interrupted()) {if (!mRunning) {break;}if (ServerConfiguration.getBoolean(PropertyKey.MASTER_JOURNAL_CATCHUP_PROTECT_ENABLED)) {mJournalSystem.waitForCatchup();}mLeaderSelector.waitForState(State.PRIMARY);if (!mRunning) {break;}if (gainPrimacy()) {mLeaderSelector.waitForState(State.SECONDARY);if (ServerConfiguration.getBoolean(PropertyKey.MASTER_JOURNAL_EXIT_ON_DEMOTION)) {stop();} else {if (!mRunning) {break;}losePrimacy();}}}}}	2
4022	"public class A {private void writeProperties() {try {File file = P2Cache.getCacheFile(indexUrl);try (FileOutputStream stream = new FileOutputStream(file)) {indexProperties.store(stream, ""generated by pax exam"");file.setLastModified(0);}} catch (Exception e) {}}}"	1
4023	public class A {private void createZones() {MGRSConverter parser = new MGRSConverter();List<LatitudeBandData> latitudeData = parser.getLatitudeBands();final double lonSpacing = 6.;for (LatitudeBandData latData : latitudeData) {int index = 1;double lon;for (lon = -MAX_LON; lon < MAX_LON; lon += lonSpacing) {double lonAddRight = 0.;double lonAddLeft = 0.;if (latData.getLatitudeBand() == 'X' && index == 31) {lonAddRight = 3;}if (latData.getLatitudeBand() == 'X' && (index == 33 || index == 35)) {lonAddRight = 3;lonAddLeft = -3;}if (latData.getLatitudeBand() == 'X' && index == 37) {lonAddLeft = -3;}if (latData.getLatitudeBand() == 'X' && (index == 32 || index == 34 || index == 36)) {if (LOGGER.isDebugEnabled()) {}index++;continue;}if (latData.getLatitudeBand() == 'V' && index == 31) {lonAddRight = -3;}if (latData.getLatitudeBand() == 'V' && index == 32) {lonAddLeft = -3;}String zoneNumber = constructZone(index++);UTMZone zone =new UTMZone(latData, zoneNumber, lon + lonAddLeft, lon + lonSpacing + lonAddRight);myZones.put(zoneNumber + latData.getLatitudeBand(), zone);}}}}	1
4024	"public class A {@GET@Timed@Produces(MediaType.APPLICATION_JSON)public Map<String, String> naturalDateTester(@QueryParam(""string"") @NotEmpty String string) {try {return new NaturalDateParser().parse(string).asMap();} catch (NaturalDateParser.DateNotParsableException e) {throw new WebApplicationException(e, 422);}}}"	1
4025	"public class A {public Collection<PFUserDO> getSortedUsers(final String userIds) {if (StringUtils.isEmpty(userIds)) {return null;}TreeSet<PFUserDO> sortedUsers = new TreeSet<>(usersComparator);final int[] ids = StringHelper.splitToInts(userIds, "","", false);for (final int id : ids) {final PFUserDO user = userGroupCache.getUser(id);if (user != null) {sortedUsers.add(user);} else {}}return sortedUsers;}}"	1
4026	public class A {@Overridepublic void onLinkRemoteOpen(Event event) {this.linkStateCallback.onReceiverLinkRemoteOpen();}}	1
4027	public class A {private void runProcessing(StatisticsObjectType objectType, YearMonth month) {if (LOG.isDebugEnabled()) {}List<StatisticsMonthlyProcessor> processors = getProcessors(objectType);for (StatisticsMonthlyProcessor processor : processors) {if (LOG.isDebugEnabled()) {}processor.processMonth(month);if (LOG.isDebugEnabled()) {}}if (LOG.isDebugEnabled()) {}}}	4
4028	"public class A {public boolean setSubnetworks(final byte[] subnetworks, final int subnetworkId) {if (subnetworkId > 127) throw new IllegalStateException(""Too many subnetworks "" + subnetworkId);final AtomicBoolean failed = new AtomicBoolean(false);IntObjectMap<SPTEntry> map = fromMode ? bestWeightMapFrom : bestWeightMapTo;map.forEach((IntObjectPredicate<SPTEntry>)(nodeId, value) -> {int sn = subnetworks[coreNodeIdMap.get(nodeId)];if (sn != subnetworkId) {if (sn != UNSET_SUBNETWORK && sn != UNCLEAR_SUBNETWORK) {failed.set(true);return false;}subnetworks[coreNodeIdMap.get(nodeId)] = (byte) subnetworkId;}return true;});return failed.get();}}"	1
4029	"public class A {@Overridepublic void assignNewTaskToUser(Long id, Long userId) throws Exception {try {int retVal = remoteTaskAssignmentEJB.insertOneTaskAssignment(id, userId);if (retVal <= 0) {throw new Exception(""[assignNewTaskToUser] Couldn't do task assignment"");}} catch (Exception e) {}}}"	2
4030	"public class A {private void handleFlowFileTooBig(final ProcessSession session, final FlowFile flowFileCandidate, final String message) {final FlowFile tooBig =session.putAttribute(flowFileCandidate,message,""record too big "" + flowFileCandidate.getSize() + "" max allowed "" + MAX_MESSAGE_SIZE);session.transfer(tooBig, REL_FAILURE);getLogger()}}"	1
4031	public class A {@Overridebyte[] execute() throws KeeperException, InterruptedException {return ZooKeeperClient.super.getData(path, watch, stat);}}	1
4032	public class A {public void stop() {if (selectorThread.isRunning()) {selectorThread.stopEndpoint();}}}	1
4033	"public class A {void logUsageSummary(Logger log, String name, int pooled) {if (statisticsEnabled && consumer != null) {long created = statistics.getCreatedCounter();long acquired = statistics.getAcquiredCounter();long released = statistics.getReleasedCounter();long discarded = statistics.getDiscardedCounter();boolean shouldLog =pooled > 0 || created > 0 || acquired > 0 || released > 0 || discarded > 0;if (shouldLog) {String id = getRouteId();if (id == null) {id = """";} else {id = "" "" + id;}String uri = consumer.getEndpoint().getEndpointBaseUri();uri = URISupport.sanitizeUri(uri);boolean leak = created + acquired > released + discarded;if (leak) {long leaks = (created + acquired) - (released + discarded);} else {}}}}}"	2
4034	"public class A {@RequestMapping(""/resetStudy.do"")public ModelAndView resetStudy(HttpServletRequest request) {logger.entry(""resetStudy()"");ModelAndView mav = new ModelAndView(""redirect:login.do"");boolean flag = false;try {String cusId =FdahpStudyDesignerUtil.isEmpty(request.getParameter(""cusId""))? """": request.getParameter(""cusId"");if (!cusId.isEmpty()) {flag = studyService.resetDraftStudyByCustomStudyId(cusId);if (flag) {request.getSession(false).setAttribute(""sucMsg"", ""Reset successfully"");} else {request.getSession(false).setAttribute(""errMsg"", ""DB issue or study does not exist"");}}} catch (Exception e) {}logger.exit(""resetStudy() - Ends"");return mav;}}"	1
4035	public class A {@Overrideprotected void runInContext() {while (true) {synchronized (_notificationMsgs) {try {_notificationMsgs.wait(1000);} catch (final InterruptedException e) {}}ClusterManagerMessage msg = null;while ((msg = getNextNotificationMessage()) != null) {try {switch (msg.getMessageType()) {case nodeAdded:if (msg.getNodes() != null && msg.getNodes().size() > 0) {final Profiler profiler = new Profiler();profiler.start();notifyNodeJoined(msg.getNodes());profiler.stop();if (profiler.getDurationInMillis() > 1000) {if (s_logger.isDebugEnabled()) {}} else {}}break;case nodeRemoved:if (msg.getNodes() != null && msg.getNodes().size() > 0) {final Profiler profiler = new Profiler();profiler.start();notifyNodeLeft(msg.getNodes());profiler.stop();if (profiler.getDurationInMillis() > 1000) {if (s_logger.isDebugEnabled()) {}} else {}}break;case nodeIsolated:notifyNodeIsolated();break;default:assert false;break;}} catch (final Throwable e) {}}try {Thread.sleep(1000);} catch (final InterruptedException e) {}}}}	5
4036	"public class A {private Future<Void> invokePermissionsForModule(Tenant tenant,ModuleDescriptor mdFrom,ModuleDescriptor mdTo,ModuleDescriptor permsModule,ProxyContext pc) {PermissionList pl;InterfaceDescriptor permInt = permsModule.getSystemInterface(""_tenantPermissions"");String permIntVer = permInt.getVersion();switch (permIntVer) {case ""1.0"":if (mdTo == null) {return Future.succeededFuture();}pl = new PermissionList(mdTo.getId(), stripPermissionReplaces(mdTo.getPermissionSets()));break;case ""1.1"":if (mdTo == null) {return Future.succeededFuture();}pl =new PermissionList(mdTo.getId(), stripPermissionReplaces(mdTo.getExpandedPermissionSets()));break;case ""2.0"":if (mdTo != null) {pl = new PermissionList(mdTo.getId(), mdTo.getExpandedPermissionSets());} else {pl = new PermissionList(mdFrom.getId(), new Permission[0]);}break;default:return Future.failedFuture(new OkapiError(ErrorType.USER,""Unknown version of _tenantPermissions interface in use "" + permIntVer + "".""));}String pljson = Json.encodePrettily(pl);String permPath = """";List<RoutingEntry> routingEntries = permInt.getAllRoutingEntries();ModuleInstance permInst = null;if (!routingEntries.isEmpty()) {for (RoutingEntry re : routingEntries) {if (re.match(null, ""POST"")) {permPath = re.getStaticPath();permInst = new ModuleInstance(permsModule, re, permPath, HttpMethod.POST, true);}}}if (permInst == null) {return Future.failedFuture(new OkapiError(ErrorType.USER,""Bad _tenantPermissions interface in module ""+ permsModule.getId()+ "". No path to POST to""));}if (pc == null) {MultiMap headersIn = MultiMap.caseInsensitiveMultiMap();return proxyService.doCallSystemInterface(headersIn, tenant.getId(), null, permInst, null, pljson).mapEmpty();}return proxyService.callSystemInterface(tenant.getId(), permInst, pljson, pc).compose(cres -> {pc.passOkapiTraceHeaders(cres);return Future.succeededFuture();});}}"	2
4037	"public class A {private Properties readPropertyFile(String file) throws IOException {String fileName = file.startsWith(""/"") ? file : ""/"" + file;return Util.readProperties(fileName);}}"	1
4038	public class A {public RiskIncidence createRiskIncidence(RiskIncidence riskIncidence, boolean commit)throws AlreadyExistsException, NotFoundException, AuthorizationDeniedException,GenericException {RodaCoreFactory.checkIfWriteIsAllowedAndIfFalseThrowException(nodeType);try {riskIncidence.setId(IdUtils.createUUID());riskIncidence.setDetectedOn(new Date());String riskIncidenceAsJson = JsonUtils.getJsonFromObject(riskIncidence);StoragePath riskIncidencePath = ModelUtils.getRiskIncidenceStoragePath(riskIncidence.getId());storage.createBinary(riskIncidencePath, new StringContentPayload(riskIncidenceAsJson), false);} catch (GenericException| RequestNotValidException| AuthorizationDeniedException| NotFoundException| AlreadyExistsException e) {}notifyRiskIncidenceCreatedOrUpdated(riskIncidence, commit).failOnError();return riskIncidence;}}	1
4039	public class A {public static RawOccurrenceRecord parseRecord(byte[] xml, OccurrenceSchemaType schemaType, String unitQualifier) {RawOccurrenceRecord result = null;List<RawOccurrenceRecord> records = parseRecord(xml, schemaType);if (records == null || records.isEmpty()) {} else if (records.size() == 1) {result = records.get(0);} else if (unitQualifier == null) {result = records.get(0);} else {for (RawOccurrenceRecord record : records) {if (record.getScientificName().equals(unitQualifier)) {result = record;break;}}if (result == null) {}}return result;}}	3
4040	"public class A {private void predictTest() throws Exception {try {String inputPath = ""../../data/census/census_148d_test.dummy"";String loadPath = LOCAL_FS + TMP_PATH + ""/model/deepFM"";String predictPath = LOCAL_FS + TMP_PATH + ""/predict"";conf.set(AngelConf.ANGEL_PREDICT_DATA_PATH, inputPath);conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, loadPath);conf.set(AngelConf.ANGEL_PREDICT_PATH, predictPath);conf.set(AngelConf.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_PREDICT());GraphRunner runner = new GraphRunner();runner.predict(conf);} catch (Exception x) {throw x;}}}"	1
4041	public class A {private void reloadPage() {try {redirect(getUserPageUrl());} catch (IOException e) {}}}	1
4042	"public class A {public double solve(final double x0, final double y0, final double x1, final Function f, final double eps) {double y, e = eps / 10;if (e < EPS_MIN) {String msg = String.format(""epsilon:%.2g less than esp_min=%.2g"", eps, EPS_MIN);e = max(eps, EPS_MIN);}y = rungeKuttaFehlberg(x0, y0, x1, f, e);return y;}}"	1
4043	"public class A {@Overridepublic String getUserName(long userId,String defaultUserName,String userAttribute,HttpServletRequest httpServletRequest) {String userName = defaultUserName;try {User user = UserLocalServiceUtil.getUserById(userId);if (userAttribute.equals(UserAttributes.USER_NAME_FULL)) {userName = user.getFullName();} else {userName = user.getScreenName();}if (httpServletRequest != null) {Layout layout = (Layout) httpServletRequest.getAttribute(WebKeys.LAYOUT);userName =StringBundler.concat(""<a href=\"""",PortletURLBuilder.create(PortletURLFactoryUtil.create(httpServletRequest,PortletKeys.DIRECTORY,layout,PortletRequest.RENDER_PHASE)).setParameter(""struts_action"", ""/directory/view_user"").setParameter(""p_u_i_d"", user.getUserId()).setPortletMode(PortletMode.VIEW).setWindowState(WindowState.MAXIMIZED).buildString(),""\"">"",HtmlUtil.escape(userName),""</a>"");}} catch (Exception exception) {if (_log.isDebugEnabled()) {}}return userName;}}"	1
4044	"public class A {public String pom() {String requestUrl = this.base + ""/pom.xml"";return this.restTemplate.exchange(RequestEntity.get(URI.create(requestUrl)).accept(mediaTypes()).build(), String.class).getBody();}}"	1
4045	"public class A {@Overridepublic void flush() {RuntimeException firstException = null;if (!stores.isEmpty()) {for (final StateStoreMetadata metadata : stores.values()) {final StateStore store = metadata.stateStore;try {store.flush();} catch (final RuntimeException exception) {if (firstException == null) {if (exception instanceof StreamsException) firstException = exception;elsefirstException =new ProcessorStateException(format(""%sFailed to flush state store %s"", logPrefix, store.name()),exception);}}}}if (firstException != null) {throw firstException;}}}"	3
4046	public class A {public DeviceConnection connect(final DeviceConnectionParameters deviceConnectionParameters,final String organisationIdentification,final boolean cacheConnection)throws ConnectionFailureException {final String deviceIdentification = deviceConnectionParameters.getDeviceIdentification();final String serverName = deviceConnectionParameters.getServerName();final IED ied = deviceConnectionParameters.getIed();try {if (cacheConnection&& this.testIfConnectionIsCachedAndAlive(deviceIdentification,ied,serverName,deviceConnectionParameters.getLogicalDevice())) {return new DeviceConnection(this.fetchIec61850Connection(deviceIdentification),deviceIdentification,organisationIdentification,serverName);}} catch (final ProtocolAdapterException e) {this.logProtocolAdapterException(deviceIdentification, e);}final InetAddress inetAddress =this.convertIpAddress(deviceConnectionParameters.getIpAddress());final DateTime startTime = DateTime.now();Iec61850ClientBaseEventListener eventListener = null;try {eventListener =this.iec61850ClientEventListenerFactory.getEventListener(ied, deviceIdentification, organisationIdentification);} catch (final ProtocolAdapterException e) {this.logProtocolAdapterException(deviceIdentification, e);}final Iec61850Device iec61850Device =this.iec61850DeviceRepository.findByDeviceIdentification(deviceIdentification);final int port = this.determinePortForIec61850Device(ied, iec61850Device);final Iec61850ClientAssociation iec61850ClientAssociation =this.iec61850Client.connect(deviceIdentification, inetAddress, eventListener, port);final ClientAssociation clientAssociation = iec61850ClientAssociation.getClientAssociation();clientAssociation.setResponseTimeout(this.responseTimeout);ServerModel serverModel;try {serverModel = this.readServerModel(clientAssociation, deviceIdentification, iec61850Device);} catch (final ProtocolAdapterException e) {throw new ConnectionFailureException(e.getMessage(), e);}final Iec61850Connection iec61850Connection =new Iec61850Connection(iec61850ClientAssociation, serverModel, startTime, ied);if (cacheConnection) {this.cacheIec61850Connection(deviceIdentification, iec61850Connection);}final DeviceConnection connection =new DeviceConnection(iec61850Connection, deviceIdentification, organisationIdentification, serverName);final DateTime endTime = DateTime.now();this.iec61850RtuDeviceReportingService.enableReportingForDevice(connection, deviceIdentification, serverName);return connection;}}	3
4047	public class A {@Overridepublic void onPathWatchEvents(List<PathWatchEvent> events) {if (!Objects.isNull(scanner)) {try {scanner.stop();if (!Objects.isNull(jetty.getWebApp())) {jetty.getWebApp().stop();jetty.setWebAppProperties(loadWebAppProps());jetty.setWebApp(jetty.getWebApp());jetty.redeployWebApp();scanner.start();}} catch (Exception e) {}}}}	1
4048	public class A {@Overridepublic Response getPatientGeneCounts(final String patientId, final boolean excludeRejectedGenes, final boolean withMatchCount) {if (StringUtils.isBlank(patientId)) {return Response.status(Response.Status.BAD_REQUEST).build();}try {final Patient patient = this.repository.get(patientId);if (patient == null) {return Response.status(Response.Status.NOT_FOUND).build();}final JSONObject genePanel =this.genePanelFactory.withMatchCount(withMatchCount).build(patient, excludeRejectedGenes).toJSON();return Response.ok(genePanel, MediaType.APPLICATION_JSON_TYPE).build();} catch (final SecurityException ex) {return Response.status(Response.Status.UNAUTHORIZED).build();}}}	3
4049	"public class A {private void extractContentDataFromVisualizationResponse(Map<String, String> contentMap,JsonObject eachKpiResult,String kpiId,Map<String, List<String>> kpiContentMap,boolean isTable) {if (eachKpiResult.has(""contentResult"")) {JsonArray kpiContentArray = eachKpiResult.get(""contentResult"").getAsJsonArray();if (kpiContentArray.size() > 0) {JsonObject content = kpiContentArray.get(0).getAsJsonObject();JsonArray dataArray = content.get(""data"").getAsJsonArray();List<String> observationList = new ArrayList<>();for (JsonElement eachData : dataArray) {JsonObject eachRowObject = eachData.getAsJsonObject();JsonArray eachRowArray = eachRowObject.get(""row"").getAsJsonArray();if (!eachRowArray.get(0).isJsonNull()) {String contentText = eachRowArray.get(0).getAsString();String contentId = eachRowArray.get(1).getAsString();if (!isTable) {contentMap.put(contentId, contentText);}observationList.add(contentText);} else {}}kpiContentMap.put(kpiId, observationList);}}}}"	2
4050	public class A {@Overridepublic ListenableFuture<? extends DOMRpcResult> create(final LogicalDatastoreType store,final YangInstanceIdentifier path,final NormalizedNode<?, ?> data,final Optional<ModifyAction> defaultOperation) {masterActor.tell(new CreateEditConfigRequest(store, new NormalizedNodeMessage(path, data), defaultOperation.orElse(null)),ActorRef.noSender());return createResult();}}	1
4051	public class A {@Overridepublic void run() {try {try {ss = new ServerSocket(port);if (logger.isInfoEnabled()) {}} finally {latch.countDown();}while (true) {Socket socket = ss.accept();connected.incrementAndGet();totalConnected.incrementAndGet();if (logger.isInfoEnabled()) {}IoAction ioAction = ioActionFactory.createIoAction(socket);executors.execute(new Task(socket, ioAction));}} catch (IOException e) {} finally {}}}	3
4052	"public class A {@Overridepublic void generateJson(String prefix, PrintWriter pw, VWorkspace vWorkspace) {JSONObject obj = new JSONObject();JSONArray resultArray = new JSONArray();try {obj.put(JsonKeys.updateType.name(), ""PropertyList"");for (LabeledLink link : finalProperties) {Label linkLabel = link.getLabel();String edgeLabelStr = linkLabel.getDisplayName();JSONObject edgeObj = new JSONObject();if (linkLabel.getUri() != null&& linkLabel.getNs() != null&& linkLabel.getUri().equalsIgnoreCase(linkLabel.getNs())) {edgeLabelStr = linkLabel.getUri();}edgeObj.put(JsonKeys.label.name(), edgeLabelStr);edgeObj.put(JsonKeys.rdfsLabel.name(), linkLabel.getRdfsLabel());edgeObj.put(JsonKeys.uri.name(), linkLabel.getUri());edgeObj.put(JsonKeys.id.name(), link.getId());if (link instanceof ObjectPropertyLink) edgeObj.put(JsonKeys.type.name(), ""objectProperty"");else edgeObj.put(JsonKeys.type.name(), ""dataProperty"");resultArray.put(edgeObj);}obj.put(JsonKeys.properties.name(), resultArray);pw.println(obj.toString());} catch (Exception e) {e.printStackTrace();}}}"	1
4053	"public class A {private static Properties loadProperties() {URL url = DigitalOceanTestSupport.class.getResource(""/test-options.properties"");InputStream inStream;try {inStream = url.openStream();} catch (IOException e) {throw new IllegalAccessError(""test-options.properties could not be found"");}Properties properties = new Properties();try {properties.load(inStream);return properties;} catch (IOException e) {throw new IllegalAccessError(""test-options.properties could not be found"");}}}"	2
4054	"public class A {@Testpublic void test_04_Intron() {Variant variant = new Variant(chromosome, 920, """", ""C"", """");Variant variantShifted = variant.realignLeft();Assert.assertFalse(variant == variantShifted);Assert.assertEquals(925, variantShifted.getStart());}}"	5
4055	public class A {private void persistAndNotify(BaseApiUsageState state, Map<ApiFeature, ApiUsageStateValue> result) {apiUsageStateService.update(state.getApiUsageState());clusterService.onApiStateChange(state.getApiUsageState(), null);long ts = System.currentTimeMillis();List<TsKvEntry> stateTelemetry = new ArrayList<>();result.forEach((apiFeature, aState) ->stateTelemetry.add(new BasicTsKvEntry(ts, new StringDataEntry(apiFeature.getApiStateKey(), aState.name()))));tsWsService.saveAndNotifyInternal(state.getTenantId(), state.getApiUsageState().getId(), stateTelemetry, VOID_CALLBACK);if (state.getEntityType() == EntityType.TENANT&& !state.getEntityId().equals(TenantId.SYS_TENANT_ID)) {String email = tenantService.findTenantById(state.getTenantId()).getEmail();if (StringUtils.isNotEmpty(email)) {result.forEach((apiFeature, stateValue) -> {mailExecutor.submit(() -> {try {mailService.sendApiFeatureStateEmail(apiFeature,stateValue,email,createStateMailMessage((TenantApiUsageState) state, apiFeature, stateValue));} catch (ThingsboardException e) {}});});} else {}}}}	3
4056	public class A {@Overrideprotected void doSync() throws IOException {this.writer.hsync();}}	1
4057	"public class A {private int readData(EntityManager em, String collectionName, int expectedEntities, int expectedConnections)throws Exception {app.waitForQueueDrainAndRefreshIndex();Query q = Query.fromQL(""select * where key1=1000"").withLimit(1000);Results results =em.searchCollectionConsistent(em.getApplicationRef(), collectionName, q, expectedEntities);int count = 0;while (true) {for (Entity e : results.getEntities()) {assertEquals(2000, e.getProperty(""key2""));Results catResults =em.searchTargetEntities(e, Query.fromQL(""select *"").setConnectionType(""herds""));assertEquals(expectedConnections, catResults.size());if (count % 100 == 0) {}count++;}if (results.hasCursor()) {q.setCursor(results.getCursor());results = em.searchCollection(em.getApplicationRef(), collectionName, q);} else {break;}}return count;}}"	2
4058	"public class A {@Override@SuppressWarnings(""unchecked"")public void put(Object tuple) {inputPort.process((T) tuple);}}"	1
4059	public class A {@VisibleForTestingpublic void closeUfsBlock(long sessionId, long blockId)throws BlockAlreadyExistsException, IOException, WorkerOutOfSpaceException {try {mUnderFileSystemBlockStore.closeReaderOrWriter(sessionId, blockId);if (mLocalBlockStore.getTempBlockMeta(sessionId, blockId) != null) {try {commitBlock(sessionId, blockId, false);} catch (BlockDoesNotExistException e) {} catch (InvalidWorkerStateException e) {}}} finally {mUnderFileSystemBlockStore.releaseAccess(sessionId, blockId);}}}	2
4060	public class A {@Overridepublic List<String> ipToIdLookup(List<String> ips) {if (ips.isEmpty()) {return new ArrayList<>();}if (!InetAddresses.isInetAddress(ips.get(0))) {return ips;}final String project = envConfig.getProjectId();final String zone = envConfig.getZoneName();try {Compute computeService = createComputeService();Compute.Instances.List request = computeService.instances().list(project, zone);List<String> instanceIds = new ArrayList<>();InstanceList response;do {response = request.execute();if (response.getItems() == null) {continue;}for (Instance instance : response.getItems()) {for (NetworkInterface ni : instance.getNetworkInterfaces()) {if (ips.contains(ni.getNetworkIP())) {instanceIds.add(instance.getName());}}}request.setPageToken(response.getNextPageToken());} while (response.getNextPageToken() != null);return instanceIds;} catch (Exception e) {}return new ArrayList<>();}}	4
4061	public class A {@Overridepublic ObjectLayoutBox remove(Serializable primaryKey) throws NoSuchLayoutBoxException {Session session = null;try {session = openSession();ObjectLayoutBox objectLayoutBox =(ObjectLayoutBox) session.get(ObjectLayoutBoxImpl.class, primaryKey);if (objectLayoutBox == null) {if (_log.isDebugEnabled()) {}throw new NoSuchLayoutBoxException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return remove(objectLayoutBox);} catch (NoSuchLayoutBoxException noSuchEntityException) {throw noSuchEntityException;} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}}	1
4062	public class A {@Overridepublic void run() {try {doMergeFragments(fragmentsToMerge);} catch (Exception e) {}}}	1
4063	public class A {public void cleanup(Map<String, List<String>> vmZone, String clusterName, Set<String> groupNames)throws KaramelException {Iterator<Map.Entry<String, List<String>>> iterator = vmZone.entrySet().iterator();LinkedList<Operation> operations = new LinkedList<>();while (iterator.hasNext()) {Map.Entry<String, List<String>> entry = iterator.next();String zone = entry.getKey();List<String> vms = entry.getValue();InstanceApi instanceApi = context.getGceApi().instancesInZone(zone);for (String vm : vms) {Operation op = instanceApi.delete(vm);if (op != null) {operations.add(op);}}}for (Operation operation : operations) {if (waitForOperation(context.getGceApi().operations(), operation) == 1) {} else {}}operations.clear();}}	3
4064	public class A {public Object getValue(Field property) {try {return property.get(this);} catch (IllegalAccessException e) {}return null;}}	1
4065	"public class A {@Testpublic void importFetched() throws Exception {Repository repository = createTestRepoUsingRepoService();getL10nJCommander().run(""push"",""-r"",repository.getName(),""-s"",getInputResourcesTestDir(""source"").getAbsolutePath());Asset asset =assetClient.getAssetByPathAndRepositoryId(""source-xliff.xliff"", repository.getId());importTranslations(asset.getId(), ""source-xliff_"", ""fr-FR"");importTranslations(asset.getId(), ""source-xliff_"", ""ja-JP"");Asset asset2 =assetClient.getAssetByPathAndRepositoryId(""source2-xliff.xliff"", repository.getId());importTranslations(asset2.getId(), ""source2-xliff_"", ""fr-FR"");importTranslations(asset2.getId(), ""source2-xliff_"", ""ja-JP"");waitForRepositoryToHaveStringsForTranslations(repository.getId());getL10nJCommander().run(""drop-export"", ""-r"", repository.getName());final Long dropId = getLastDropIdFromOutput(outputCapture);Console mockConsole = mock(Console.class);verify(mockConsole, never()).readLine(Long.class);L10nJCommander l10nJCommander = getL10nJCommander();DropImportCommand dropImportCommand = l10nJCommander.getCommand(DropImportCommand.class);dropImportCommand.console = mockConsole;int numberOfFrenchTranslationsBefore = getNumberOfFrenchTranslations(repository);localizeDropFiles(dropRepository.findById(dropId).orElse(null));l10nJCommander.run(new String[] {""drop-import"", ""-r"", repository.getName(), ""--import-fetched""});int numberOfFrenchTranslationsAfter = getNumberOfFrenchTranslations(repository);assertEquals(""2 new french translations must be added"",numberOfFrenchTranslationsBefore + 2,numberOfFrenchTranslationsAfter);getL10nJCommander().run(""tm-export"",""-r"",repository.getName(),""-t"",targetTestDir.getAbsolutePath(),""--target-basename"",""fortest"");modifyFilesInTargetTestDirectory(XliffUtils.replaceCreatedDateFunction());checkExpectedGeneratedResources();}}"	1
4066	public class A {private boolean parseNextPacket(RowSetLoader rowWriter) {if (rowWriter.limitReached(maxRecords)) {return false;}Packet packet = new Packet();if (offset >= validBytes) {return false;}if (validBytes - offset < decoder.getMaxLength()) {getNextPacket(rowWriter);}int old = offset;offset = decoder.decodePacket(buffer, offset, packet, decoder.getMaxLength(), validBytes);if (offset > validBytes) {packet.setIsCorrupt(true);}if (readerConfig.getSessionizeTCPStreams()) {long sessionID = packet.getSessionHash();if (!sessionQueue.containsKey(sessionID)) {sessionQueue.put(sessionID, new TcpSession(sessionID));}sessionQueue.get(sessionID).addPacket(packet);if (sessionQueue.get(sessionID).connectionClosed()) {addSessionDataToTable(sessionQueue.get(sessionID), rowWriter);sessionQueue.remove(sessionID);}} else {addDataToTable(packet, decoder.getNetwork(), rowWriter);}return true;}}	2
4067	public class A {public RunningBuild startProjectBuild(BuildExecutionSession buildExecutionSession,RunningEnvironment runningEnvironment,Consumer<CompletedBuild> onComplete,Consumer<Throwable> onError) {Thread thread =new Thread(() -> {try {complete(buildExecutionSession, runningEnvironment, onComplete);} catch (InterruptedException e) {}});thread.start();return createRunningBuild(runningEnvironment);}}	2
4068	"public class A {public Answer execute(NetworkUsageCommand cmd) {if (cmd.isForVpc()) {return vpcNetworkUsage(cmd);}if (LOGGER.isInfoEnabled()) {}if (cmd.getOption() != null && CREATE.equals(cmd.getOption())) {String result = networkUsage(cmd.getPrivateIP(), CREATE, null);return new NetworkUsageAnswer(cmd, result, 0L, 0L);}long[] stats = getNetworkStats(cmd.getPrivateIP());return new NetworkUsageAnswer(cmd, """", stats[0], stats[1]);}}"	1
4069	"public class A {private static void syncUsers(RemoteLogicsInterface remoteLogics, Result<List<UserInfo>> userInfos) {if (remoteLogics != null) {JSONArray users = new JSONArray();for (UserInfo userInfo : userInfos.result) {users.put(userInfo.name);}FileData fileData =new FileData(new RawFileData(users.toString().getBytes(StandardCharsets.UTF_8)), ""json"");try {ExternalResponse result =remoteLogics.exec(AuthenticationToken.ANONYMOUS,MainController.getSessionInfo(),""Authentication.syncUsers[ISTRING[100], JSONFILE]"",new ExternalRequest(new Object[] {MainController.computerName, fileData}));JSONArray unlockedUsers =new JSONArray(new String(((FileData) result.results[0]).getRawFile().getBytes(),StandardCharsets.UTF_8));List<Object> currentUsers = unlockedUsers.toList();List<UserInfo> newUserInfos = new ArrayList<>();for (UserInfo userInfo : userInfos.result) {if (currentUsers.remove(userInfo.name)) {newUserInfos.add(userInfo);}}for (Object user : currentUsers) {newUserInfos.add(new UserInfo(user.toString(), false, null));}userInfos.set(newUserInfos);} catch (RemoteException e) {}}}}"	1
4070	public class A {public String enqueueGetConfigurationRequest(@Identification final String organisationIdentification,@Identification final String deviceIdentification,final int messagePriority)throws FunctionalException {final Organisation organisation =this.domainHelperService.findOrganisation(organisationIdentification);final Device device = this.domainHelperService.findActiveDevice(deviceIdentification);this.domainHelperService.isAllowed(organisation, device, DeviceFunction.GET_CONFIGURATION);this.domainHelperService.isInMaintenance(device);final String correlationUid =this.correlationIdProviderService.getCorrelationId(organisationIdentification, deviceIdentification);final DeviceMessageMetadata deviceMessageMetadata =new DeviceMessageMetadata(deviceIdentification,organisationIdentification,correlationUid,MessageType.GET_CONFIGURATION.name(),messagePriority);final CommonRequestMessage message =new CommonRequestMessage.Builder().deviceMessageMetadata(deviceMessageMetadata).build();this.commonRequestMessageSender.send(message);return correlationUid;}}	1
4071	"public class A {public static com.liferay.journal.model.JournalArticle addArticleDefaultValues(HttpPrincipal httpPrincipal,long groupId,long classNameId,long classPK,java.util.Map<java.util.Locale, String> titleMap,java.util.Map<java.util.Locale, String> descriptionMap,String content,String ddmStructureKey,String ddmTemplateKey,String layoutUuid,boolean indexable,boolean smallImage,String smallImageURL,java.io.File smallImageFile,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(JournalArticleServiceUtil.class,""addArticleDefaultValues"",_addArticleDefaultValuesParameterTypes4);MethodHandler methodHandler =new MethodHandler(methodKey,groupId,classNameId,classPK,titleMap,descriptionMap,content,ddmStructureKey,ddmTemplateKey,layoutUuid,indexable,smallImage,smallImageURL,smallImageFile,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.journal.model.JournalArticle) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4072	public class A {private void doStart(boolean sync) {accept();if (sync) {ThreadUtil.sync(this);}}}	1
4073	public class A {@Overridepublic boolean validateObject(ChannelFuture channelFuture) {if (!channelFuture.isDone()) {return true;}if (!channelFuture.isSuccess()) {return false;}Channel channel = channelFuture.channel();boolean answer = channel.isActive();return answer;}}	3
4074	public class A {private void redoSubscribe() {for (String each : subscribes) {ServiceInfo serviceInfo = ServiceInfo.fromKey(each);try {clientProxy.subscribe(serviceInfo.getName(), serviceInfo.getGroupName(), serviceInfo.getClusters());} catch (NacosException e) {}}}}	2
4075	"public class A {@Override@SuppressWarnings(""unchecked"")public List<ProjectSampleAnalysisOutputInfo> getAllAnalysisOutputInfoSharedWithProject(Long projectId, Set<UUID> workflowIds) {final String query =""SELECT\n""+ ""  s.id AS sampleId,\n""+ ""  s.sampleName AS sampleName,\n""+ ""  a.id AS analysisId,\n""+ ""  aofmap.analysis_output_file_key AS analysisOutputFileKey,\n""+ ""  aof.file_path AS filePath,\n""+ ""  aof.id AS analysisOutputFileId,\n""+ ""  a.analysis_type AS analysisType,\n""+ ""  asub.workflow_id AS workflowId,\n""+ ""  aof.created_date AS createdDate,\n""+ ""  asub.name AS analysisSubmissionName,\n""+ ""  asub.id AS analysisSubmissionId,\n""+ ""  u.id AS userId,\n""+ ""  u.firstName AS userFirstName,\n""+ ""  u.lastName AS userLastName\n""+ ""FROM analysis_output_file aof\n""+ ""  INNER JOIN analysis_output_file_map aofmap ON aof.id =""+ "" aofmap.analysisOutputFilesMap_id\n""+ ""  INNER JOIN analysis a ON aofmap.analysis_id = a.id\n""+ ""  INNER JOIN analysis_submission asub ON a.id = asub.analysis_id\n""+ ""  INNER JOIN analysis_submission_sequencing_object o ON asub.id =""+ "" o.analysis_submission_id\n""+ ""  INNER JOIN sample_sequencingobject sso ON sso.sequencingobject_id =""+ "" o.sequencing_object_id\n""+ ""  INNER JOIN sample s ON sso.sample_id = s.id\n""+ ""  INNER JOIN project_sample psample ON s.id = psample.sample_id\n""+ ""  INNER JOIN user u ON asub.submitter = u.id\n""+ ""  INNER JOIN project_analysis_submission pasub ON asub.id =""+ "" pasub.analysis_submission_id\n""+ ""WHERE\n""+ ""  psample.project_id = :projectId\n""+ ""  AND asub.workflow_id IN (:workflowIds)\n"";MapSqlParameterSource parameters = new MapSqlParameterSource();final List<String> workflowUUIDStrings =workflowIds.stream().map(UUID::toString).collect(Collectors.toList());parameters.addValue(""projectId"", projectId);parameters.addValue(""workflowIds"", workflowUUIDStrings);NamedParameterJdbcTemplate tmpl = new NamedParameterJdbcTemplate(dataSource);return tmpl.query(query, parameters, new BeanPropertyRowMapper(ProjectSampleAnalysisOutputInfo.class));}}"	1
4076	public class A {@Overridepublic void runTask() {try {DiameterTimerTaskData data = (DiameterTimerTaskData) getData();BaseSession bSession = sessionDataSource.getSession(data.getSessionId());if (bSession == null) {return;} else {try {if (!bSession.isAppSession()) {BaseSessionImpl impl = (BaseSessionImpl) bSession;impl.onTimer(data.getTimerName());} else {AppSessionImpl impl = (AppSessionImpl) bSession;impl.onTimer(data.getTimerName());}} catch (Exception e) {}}} catch (Exception e) {}}}	3
4077	"public class A {public void create(final boolean baseline) {callbackExecutor.onEvent(Event.CREATE_SCHEMA);int retries = 0;while (true) {try {ExecutionTemplateFactory.createExecutionTemplate(connection.getJdbcConnection(), database).execute(() -> {List<Schema> createdSchemas = new ArrayList<>();for (Schema schema : schemas) {if (!schema.exists()) {if (schema.getName() == null) {throw new FlywayException(""Unable to determine schema for the schema history table. Set a default""+ "" schema for the connection or specify one using the""+ "" defaultSchema property!"");}schema.create();createdSchemas.add(schema);} else {}}if (!createdSchemas.isEmpty()) {schemaHistory.create(baseline);schemaHistory.addSchemasMarker(createdSchemas.toArray(new Schema[0]));}return null;});return;} catch (RuntimeException e) {if (++retries >= 10) {throw e;}try {Thread.sleep(1000);} catch (InterruptedException e1) {}}}}}"	3
4078	public class A {@Overridepublic void close() throws IOException {synchronized (charBuffer) {try {if (telnetClient.isConnected()) {telnetClient.disconnect();}} catch (IOException e) {throw (e);} finally {reader = null;outstream = null;}}}}	2
4079	"public class A {@Overridepublic Map<TopicPartition, OffsetAndMetadata> prepareCommit() {switch (state()) {case CREATED:case RESTORING:case RUNNING:case SUSPENDED:if (commitNeeded) {stateMgr.flushCache();recordCollector.flush();hasPendingTxCommit = eosEnabled;return committableOffsetsAndMetadata();} else {return Collections.emptyMap();}case CLOSED:throw new IllegalStateException(""Illegal state "" + state() + "" while preparing active task "" + id + "" for committing"");default:throw new IllegalStateException(""Unknown state "" + state() + "" while preparing active task "" + id + "" for committing"");}}}"	2
4080	public class A {private void getExtraUnmanagedStorageVolumes() {ResourceCollection<ExtraStorageVolume> extraStorageVolumes =this.storageVolumeAttachmentClient.getExtraUnmanagedStorageVolumes();}}	1
4081	"public class A {void create(Set<String> tableDirs, Manager manager) throws IOException {UniqueNameAllocator namer = manager.getContext().getUniqueNameAllocator();for (ImportedTableInfo.DirectoryMapping dm : tableInfo.directories) {Path exportDir = new Path(dm.exportDir);Path base = manager.getVolumeManager().matchingFileSystem(exportDir, tableDirs);if (base == null) {throw new IOException(dm.exportDir + "" is not in the same file system as any volume configured for Accumulo"");}Path directory = new Path(base, tableInfo.tableId.canonical());Path newBulkDir = new Path(directory, Constants.BULK_PREFIX + namer.getNextName());dm.importDir = newBulkDir.toString();}}}"	3
4082	"public class A {public AssetDto editAsset(String resourceId,MultipartFile file,String description,List<String> categories,String folderPath) {try {ResourceInterface resource = loadResource(resourceId);BaseResourceDataBean resourceFile = new BaseResourceDataBean();resourceFile.setResourceType(resource.getType());resourceFile.setResourceId(resourceId);resourceFile.setMetadata(resource.getMetadata());resourceFile.setOwner(resource.getOwner());resourceFile.setFolderPath(resource.getFolderPath());if (file != null) {validateMimeType(unconvertResourceType(resource.getType()), file.getContentType());resourceFile.setInputStream(file.getInputStream());resourceFile.setFileSize(file.getBytes().length / 1000);resourceFile.setFileName(file.getOriginalFilename());resourceFile.setMimeType(file.getContentType());resourceFile.setDescr(file.getOriginalFilename());if ((description == null || description.trim().length() == 0)&& resource.getDescription().equals(resource.getMasterFileName())) {description = resourceFile.getFileName();}}if (description != null && !description.trim().isEmpty()) {resourceFile.setDescr(description.trim());} else {resourceFile.setDescr(resource.getDescription());}if (folderPath != null) {resourceFile.setFolderPath(folderPath);}resourceFile.setMainGroup(resource.getMainGroup());resourceFile.setCategories(convertCategories(categories));resourceManager.updateResource(resourceFile);return convertResourceToDto(resourceManager.loadResource(resourceId));} catch (ApsSystemException e) {throw new RestServerError(""plugins.jacms.resources.resourceManager.error.persistence"", e);} catch (IOException e) {throw new RestServerError(""plugins.jacms.resources.image.errorReadingStream"", e);}}}"	1
4083	public class A {@Overridepublic void run() {try {tunnelClient.connect(true);} catch (Throwable e) {}}}	2
4084	public class A {@Overridepublic MutableAcl updateAcl(MutableAcl mutableAcl) throws NotFoundException {try (AutoLock l = lock.lockForWrite()) {AclRecord record = ((MutableAclRecord) mutableAcl).getAclRecord();crud.save(record);} catch (IOException e) {throw new InternalErrorException(e);}return mutableAcl;}}	1
4085	public class A {@Overridevoid refreshConfiguration(ResourceManager configuration) {super.refreshConfiguration(configuration);int newMaxUnits = getIntegerParameter(PRM_QUANTITY);int delta = newMaxUnits - previousMaxUnits;previousMaxUnits = newMaxUnits;this.availableUnits.addAndGet(delta);this.defaultConsumption = getIntegerParameter(PRM_CONSUMPTION);}}	1
4086	"public class A {@Overrideprotected ModelAndView onSubmit(HttpServletRequest request,HttpServletResponse response,Object command,BindException errors)throws Exception {AddFileMetadataCommand addFileMetadataCommand = (AddFileMetadataCommand) command;int fileId = Integer.parseInt(request.getParameter(""fileId""));ModelAndView mav = new ModelAndView(""redirect:/experiments/data/detail.html?fileId="" + fileId);if (!auth.userIsOwnerOrCoexpOfCorrespExperiment(fileId)) {return mav;}FileMetadataParamVal metadata = new FileMetadataParamVal();metadata.setId(new FileMetadataParamValId(addFileMetadataCommand.getParamId(), fileId));metadata.setMetadataValue(addFileMetadataCommand.getParamValue());fileMetadataParamValDao.create(metadata);return mav;}}"	6
4087	"public class A {private void syncSnapshotToRegionStore(long snapshotId, DataStore store) {SnapshotInfo snapOnStore = _snapshotFactory.getSnapshot(snapshotId, store);if (snapOnStore == null) {throw new CloudRuntimeException(""Cannot find an entry in snapshot_store_ref for snapshot ""+ snapshotId+ "" on region store: ""+ store.getName());}if (snapOnStore.getPath() == null || snapOnStore.getPath().length() == 0) {if (s_logger.isDebugEnabled()) {}SnapshotInfo srcSnapshot = _snapshotFactory.getReadySnapshotOnCache(snapshotId);if (srcSnapshot == null) {throw new CloudRuntimeException(""Cannot find snapshot "" + snapshotId + ""  on cache store"");}AsyncCallFuture<SnapshotResult> future = syncToRegionStoreAsync(srcSnapshot, store);try {SnapshotResult result = future.get();if (result.isFailed()) {throw new CloudRuntimeException(""sync snapshot from cache to region wide store failed for image store ""+ store.getName()+ "":""+ result.getResult());}_cacheMgr.releaseCacheObject(srcSnapshot);} catch (Exception ex) {throw new CloudRuntimeException(""sync snapshot from cache to region wide store failed for image store ""+ store.getName());}}}}"	1
4088	public class A {@Secured(ServicesData.ROLE_CREATE_CONTEXTS)@ResponseStatus(HttpStatus.CREATED)@PostMappingpublic ContextDto create(final @Valid @RequestBody ContextDto contextDto) {return contextExternalService.create(contextDto);}}	1
4089	"public class A {public static void waitForTaskCountToBecome(final ManagementContext mgmt, final int allowedMax, final boolean skipKnownBackgroundTasks) {Repeater.create().every(Duration.millis(20)).limitTimeTo(Duration.TEN_SECONDS).until(new Callable<Boolean>() {@Overridepublic Boolean call() throws Exception {((LocalManagementContext) mgmt).getGarbageCollector().gcIteration();long taskCountAfterAtOld =((BasicExecutionManager) mgmt.getExecutionManager()).getNumIncompleteTasks();List<Task<?>> tasks =((BasicExecutionManager) mgmt.getExecutionManager()).getAllTasks();int unendedTasks = 0, extraAllowedMax = 0;for (Task<?> t : tasks) {if (!t.isDone()) {if (skipKnownBackgroundTasks) {if (t.toString().indexOf(""ssh-location cache cleaner"") >= 0) {extraAllowedMax++;}}unendedTasks++;}}return taskCountAfterAtOld <= allowedMax + extraAllowedMax;}}).runRequiringTrue();}}"	1
4090	public class A {private void commitCheckpointMark(KafkaCheckpointMark checkpointMark) {consumer.commitSync(checkpointMark.getPartitions().stream().filter(p -> p.getNextOffset() != UNINITIALIZED_OFFSET).collect(Collectors.toMap(p -> new TopicPartition(p.getTopic(), p.getPartition()),p -> new OffsetAndMetadata(p.getNextOffset()))));}}	1
4091	public class A {@Overridepublic void collect(JVMMetricCollection request, StreamObserver<Commands> responseObserver) {if (log.isDebugEnabled()) {}final JVMMetricCollection.Builder builder = request.toBuilder();builder.setService(namingControl.formatServiceName(builder.getService()));builder.setServiceInstance(namingControl.formatInstanceName(builder.getServiceInstance()));builder.getMetricsList().forEach(jvmMetric -> {jvmSourceDispatcher.sendMetric(builder.getService(), builder.getServiceInstance(), jvmMetric);});responseObserver.onNext(Commands.newBuilder().build());responseObserver.onCompleted();}}	1
4092	public class A {public void registerTask(Long taskId, String stateMachineId, long redriveDelay) {try {LoggingUtils.registerStateMachineIdForLogging(stateMachineId.toString());redriverMessageService.saveMessage(new ScheduledMessage(taskId, stateMachineId, System.currentTimeMillis() + redriveDelay));} finally {LoggingUtils.deRegisterStateMachineIdForLogging();}}}	1
4093	"public class A {public static boolean isAppropriateInput(final String annotation,final AnnotatorCompatible walker,final PerReadAlleleLikelihoodMap map,final Genotype g,final boolean[] warningsLogged,final Logger logger) {if (annotation == null) {throw new IllegalArgumentException(""The input annotation cannot be null"");}if (walker == null) {throw new IllegalArgumentException(""The input walker cannot be null"");}if (g == null) {throw new IllegalArgumentException(""The input genotype cannot be null"");}if (warningsLogged == null) {throw new IllegalArgumentException(""The input warnings logged cannot be null"");}if (logger == null) {throw new IllegalArgumentException(""The input logger cannot be null"");}if (warningsLogged.length < WARNINGS_LOGGED_SIZE) {throw new ReviewedGATKException(""Warnings logged array must have at least ""+ WARNINGS_LOGGED_SIZE+ "" elements, but has ""+ warningsLogged.length);}if (!(walker instanceof HaplotypeCaller) && !(walker instanceof MuTect2)) {if (!warningsLogged[0]) {warningsLogged[0] = true;}return false;}if (map == null) {if (!warningsLogged[1]) {warningsLogged[1] = true;}return false;}if (!g.isCalled()) {if (!warningsLogged[2]) {warningsLogged[2] = true;}return false;}return true;}}"	3
4094	"public class A {@Testpublic void testPOSTObjectsWithLegacyEntitiesAndInbuiltSchemaAsOutputSchema() throws Exception {objectJSONString = DMPPersistenceUtil.getResourceAsString(""old.fotothek.project.json"");final Response response =target(""/robust"").request(MediaType.APPLICATION_JSON_TYPE).accept(MediaType.APPLICATION_JSON_TYPE).post(Entity.json(objectJSONString));Assert.assertEquals(""201 Created was expected"", 201, response.getStatus());final String responseString = response.readEntity(String.class);Assert.assertNotNull(""the response JSON shouldn't be null"", responseString);final Project actualObject = objectMapper.readValue(responseString, pojoClass);Assert.assertNotNull(""the response project shouldn't be null"", actualObject);}}"	2
4095	"public class A {@Overrideprotected void doPost(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException {String id = request.getParameter(""idName"");String idName = ParameterParserUtil.parseStringParam(id, """");ApplicationContext appContext =WebApplicationContextUtils.getWebApplicationContext(this.getServletContext());IInvariantService invariantService = appContext.getBean(InvariantService.class);JSONObject jsonResponse = new JSONObject();String action = request.getParameter(""action"");try {if (request.getParameter(""action"") != null) {if (""getNInvariant"".equals(action)) {JSONObject listOfInvariants = new JSONObject(idName);for (int i = 0; i < listOfInvariants.length(); i++) {String invariantName = (String) listOfInvariants.get(String.valueOf(i));JSONArray array = new JSONArray();for (Invariant myInvariant : invariantService.readByIdName(invariantName)) {array.put(myInvariant.getValue());}jsonResponse.put(invariantName, array);}}} else {for (Invariant myInvariant : invariantService.readByIdName(idName)) {jsonResponse.put(myInvariant.getValue(), myInvariant.getValue());}}response.setContentType(""application/json"");response.getWriter().print(jsonResponse.toString());} catch (JSONException e) {response.setContentType(""text/html"");response.getWriter().print(e.getMessage());} catch (CerberusException ex) {}}}"	2
4096	public class A {private void revert(String jobUUID, String backupType, int rev, long time, int taskID)throws Exception {JobTask task = getTask(jobUUID, taskID);if (task != null) {task.setPreFailErrorCode(0);HostState host = hostManager.getHostState(task.getHostUUID());if ((task.getState() == JobTaskState.ALLOCATED) || task.getState().isQueuedState()) {}spawnMQ.sendControlMessage(new CommandTaskRevert(host.getHostUuid(),jobUUID,task.getTaskID(),backupType,rev,time,getTaskReplicaTargets(task.getAllReplicas()),false));} else {}}}	3
4097	"public class A {@Overridepublic void applyInTx() {Vertex meshRoot = MeshGraphHelper.getMeshRootVertex(getGraph());Vertex projectRoot = meshRoot.getVertices(Direction.OUT, ""HAS_PROJECT_ROOT"").iterator().next();Vertex admin = findAdmin();for (Vertex project : projectRoot.getVertices(Direction.OUT, ""HAS_PROJECT"")) {Vertex releaseRoot = getGraph().addVertex(""class:ReleaseRootImpl"");releaseRoot.setProperty(""ferma_type"", ""ReleaseRootImpl"");releaseRoot.setProperty(""uuid"", randomUUID());project.addEdge(""HAS_RELEASE_ROOT"", releaseRoot);String branchUuid = randomUUID();Vertex release = getGraph().addVertex(""class:ReleaseImpl"");release.setProperty(""ferma_type"", ""ReleaseImpl"");release.setProperty(""uuid"", branchUuid);release.setProperty(""name"", project.getProperty(""name""));release.setProperty(""active"", true);releaseRoot.addEdge(""HAS_LATEST_RELEASE"", release);releaseRoot.addEdge(""HAS_INITIAL_RELEASE"", release);releaseRoot.addEdge(""HAS_RELEASE"", release);Vertex schemaRoot = project.getVertices(Direction.OUT, ""HAS_ROOT_SCHEMA"").iterator().next();for (Vertex schemaContainer :schemaRoot.getVertices(Direction.OUT, ""HAS_SCHEMA_CONTAINER_ITEM"")) {Vertex latestSchemaVersion =schemaContainer.getVertices(Direction.OUT, ""HAS_LATEST_VERSION"").iterator().next();release.addEdge(""HAS_SCHEMA_VERSION"", latestSchemaVersion);}getOrFixUserReference(project, ""HAS_EDITOR"");getOrFixUserReference(project, ""HAS_CREATOR"");Vertex baseNode = project.getVertices(Direction.OUT, ""HAS_ROOT_NODE"").iterator().next();migrateBaseNode(baseNode, admin);migrateNode(baseNode, branchUuid);}migrateTags(meshRoot);migrateUsers(meshRoot);for (Vertex vertex : getGraph().getVertices()) {migrateType(vertex);}for (Edge edge : getGraph().getEdges()) {migrateType(edge);}for (Edge edge : getGraph().getEdges(""ferma_type"", ""TranslatedImpl"")) {edge.setProperty(""ferma_type"", ""GraphFieldContainerEdgeImpl"");}}}"	1
4098	public class A {public void start(ModuleDefineHolder moduleDefineHolder, int ttl) {final long timeInterval = 10;Executors.newSingleThreadScheduledExecutor().scheduleAtFixedRate(new RunnableWithExceptionProtection(1,timeInterval,TimeUnit.SECONDS);this.ttl = ttl;}}	2
4099	public class A {void logTextUnitSearcherError(TextUnitSearcherError textUnitSearcherError)throws TextUnitSearcherError {}}	1
4100	public class A {@Overridepublic void onClick(final AjaxRequestTarget target, final GroupTO ignore) {try {GroupRestClient.provisionMembers(model.getObject().getKey(), ProvisionAction.DEPROVISION);SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));target.add(container);} catch (SyncopeClientException e) {SyncopeConsoleSession.get().onException(e);}((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);}}	1
4101	public class A {@Overridepublic Void call() {try {final PullResult result =getGit().pull().setProgressMonitor(PROGRESS_MONITOR).setRebase(true).setCredentialsProvider(user).call();if (!result.isSuccessful()) {undoLocalChanges();}} catch (final Exception e) {}return null;}}	4
4102	"public class A {@DisplayName(""Test Serialization Comp Graph"")@ParameterizedTest@MethodSource(""org.deeplearning4j.nn.layers.recurrent.BidirectionalTest#params"")void testSerializationCompGraph(RNNFormat rnnDataFormat, Nd4jBackend backend) throws Exception {for (WorkspaceMode wsm : WorkspaceMode.values()) {Nd4j.getRandom().setSeed(12345);ComputationGraphConfiguration conf1 =new NeuralNetConfiguration.Builder().activation(Activation.TANH).weightInit(WeightInit.XAVIER).trainingWorkspaceMode(wsm).inferenceWorkspaceMode(wsm).updater(new Adam()).graphBuilder().addInputs(""in"").layer(""0"",new Bidirectional(Bidirectional.Mode.ADD,new GravesLSTM.Builder().nIn(10).nOut(10).dataFormat(rnnDataFormat).build()),""in"").layer(""1"",new Bidirectional(Bidirectional.Mode.ADD,new GravesLSTM.Builder().nIn(10).nOut(10).dataFormat(rnnDataFormat).build()),""0"").layer(""2"",new RnnOutputLayer.Builder().lossFunction(LossFunctions.LossFunction.MSE).dataFormat(rnnDataFormat).nIn(10).nOut(10).build(),""1"").setOutputs(""2"").build();ComputationGraph net1 = new ComputationGraph(conf1);net1.init();long[] inshape = (rnnDataFormat == NCW) ? new long[] {3, 10, 5} : new long[] {3, 5, 10};INDArray in = Nd4j.rand(inshape);INDArray labels = Nd4j.rand(inshape);net1.fit(new DataSet(in, labels));byte[] bytes;try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {ModelSerializer.writeModel(net1, baos, true);bytes = baos.toByteArray();}ComputationGraph net2 =ModelSerializer.restoreComputationGraph(new ByteArrayInputStream(bytes), true);in = Nd4j.rand(inshape);labels = Nd4j.rand(inshape);INDArray out1 = net1.outputSingle(in);INDArray out2 = net2.outputSingle(in);assertEquals(out1, out2);net1.setInput(0, in);net2.setInput(0, in);net1.setLabels(labels);net2.setLabels(labels);net1.computeGradientAndScore();net2.computeGradientAndScore();assertEquals(net1.score(), net2.score(), 1e-6);assertEquals(net1.gradient().gradient(), net2.gradient().gradient());}}}"	1
4103	public class A {@Overridepublic ColumnValues createValues() {if (count == 0) {if (log.isDebugEnabled()) {}return EmptyColumnValues.instance();}if (min == max) {if (log.isDebugEnabled()) {}Object value = valueTransformer == null ? min : valueTransformer.get(min);return new ConstantColumnValue(count, value);}long linearOffset = 0;long linearFactor = 1;if (min != 0) {linearOffset = min;if (log.isDebugEnabled()) {}for (int i = 0; i < count; i++) {values[i] -= linearOffset;}min = 0;max -= linearOffset;}if (useGCD) {long gcd = computeGCD();if (gcd > 1) {if (log.isDebugEnabled()) {}for (int i = 0; i < count; i++) {values[i] /= gcd;}max /= gcd;linearFactor = gcd;}}int originalCount = count;ValueLength valueLength = ValueLength.getNumberLength(max);ColumnValues runLengthValues = runLengthStore.applyRunLengths(valueLength);if (log.isDebugEnabled()) {}ColumnValues colValues =NumberValuesUtils.instance().toValues(count, values, valueLength, linearFactor, linearOffset);if (valueTransformer != null) {colValues = new TransformedColumnValues(colValues, valueTransformer);}ColumnValues finalValues;if (runLengthValues == null) {finalValues = colValues;} else {finalValues = new RunLengthColumnValues(originalCount, colValues, runLengthValues);}return finalValues;}}	5
4104	"public class A {private void loadConfig(ComponentContext cc) throws ConfigurationException {String orgStr =OsgiUtil.getComponentContextProperty(cc, ORGANIZATION_KEY, DEFAULT_ORGANIZATION_VALUE);try {org = orgDirectory.getOrganization(orgStr);} catch (NotFoundException e) {throw new ConfigurationException(ORGANIZATION_KEY, ""not found"");}url = OsgiUtil.getComponentContextProperty(cc, CANVAS_URL_KEY);if (url.endsWith(""/"")) {url = StringUtils.chop(url);}token = OsgiUtil.getComponentContextProperty(cc, CANVAS_USER_TOKEN_KEY);String cacheSizeStr =OsgiUtil.getComponentContextProperty(cc, CACHE_SIZE_KEY, DEFAULT_CACHE_SIZE_VALUE.toString());cacheSize = NumberUtils.toInt(cacheSizeStr);String cacheExpireStr =OsgiUtil.getComponentContextProperty(cc, CACHE_EXPIRATION_KEY, DEFAULT_CACHE_EXPIRATION_VALUE.toString());cacheExpiration = NumberUtils.toInt(cacheExpireStr);String rolesStr =OsgiUtil.getComponentContextProperty(cc, CANVAS_INSTRUCTOR_ROLES_KEY, DEFAULT_CANVAS_INSTRUCTOR_ROLES);instructorRoles = parsePropertyLineAsSet(rolesStr);String ignoredUsersStr =OsgiUtil.getComponentContextProperty(cc, IGNORED_USERNAMES_KEY, DEFAULT_INGROED_USERNAMES);ignoredUsernames = parsePropertyLineAsSet(ignoredUsersStr);}}"	4
4105	"public class A {private synchronized void updateRegistryOnDisk(final RestXqService restXqService, final UpdateAction updateAction) {final Optional<Path> optTmpNewRegistry = getRegistryFile(true);if (!optTmpNewRegistry.isPresent()) {} else {final Path tmpNewRegistry = optTmpNewRegistry.get();try {try (final PrintWriter writer =new PrintWriter(Files.newBufferedWriter(tmpNewRegistry, StandardOpenOption.TRUNCATE_EXISTING))) {writer.println(VERSION_LABEL + LABEL_SEP + REGISTRY_FILE_VERSION);final Map<URI, List<FunctionSignature>> xqueryServices = new HashMap<>();for (final RestXqService service : getRegistry()) {List<FunctionSignature> fnNames =xqueryServices.get(service.getResourceFunction().getXQueryLocation());if (fnNames == null) {fnNames = new ArrayList<>();}fnNames.add(service.getResourceFunction().getFunctionSignature());xqueryServices.put(service.getResourceFunction().getXQueryLocation(), fnNames);}for (final Entry<URI, List<FunctionSignature>> xqueryServiceFunctions :xqueryServices.entrySet()) {writer.print(xqueryServiceFunctions.getKey() + FIELD_SEP);final List<FunctionSignature> fnSigs = xqueryServiceFunctions.getValue();for (final FunctionSignature fnSig : fnSigs) {writer.print(qnameToClarkNotation(fnSig.getName()) + ARITY_SEP + fnSig.getArgumentCount());}writer.println();}}final Optional<Path> optRegistry = getRegistryFile(false);if (optRegistry.isPresent()) {final Path registry = optRegistry.get();final Path localTmpNewRegistry =Files.copy(tmpNewRegistry, registry.getParent().resolve(tmpNewRegistry.getFileName()));Files.move(localTmpNewRegistry,registry,StandardCopyOption.REPLACE_EXISTING,StandardCopyOption.ATOMIC_MOVE);} else {throw new IOException(""Unable to retrieve existing RESTXQ registry"");}} catch (final IOException ioe) {} finally {TemporaryFileManager.getInstance().returnTemporaryFile(tmpNewRegistry);}}}}"	4
4106	"public class A {protected void processResults(Document results, String labType) {setLastFileCount(getDocumentHandler().getMessageCount());setLabType(labType);String savePath = null;if (getLastFileCount() > 0) {if (getLabHandler() != null) {getLabHandler().setFileName(getConfigurationBean().getServiceName()+ "".""+ new SimpleDateFormat(""yyyyMMddHHmmss"").format(new Date()));savePath = getLabHandler().getSavePath();savePath = savePath + getConfigurationBean().getServiceName();getLabHandler().setHl7labs(results);try {getLabHandler().saveFile(savePath);} catch (IOException e) {handleError(""Expedius has failed to save downloaded lab files. They will not be aknowledged.""+ "" Contact support. "",e,ERROR);} catch (TransformerException e) {handleError(""There was a problem parsing the lab files into XML. They have not been saved and""+ "" will not be aknowledged. "",e,ERROR);} finally {if (getLabHandler().getResponseCode() == HL7LabHandler.OK) {}}parseAndPersist();} else {handleError(""A software error prevented the lab file from being saved "", null, DISMISSABLE_ERROR);}}}}"	3
4107	"public class A {private String getVersion(String namespace, CuratorRepository.CuratorFrameworkOp curatorFrameworkOp) {try {List<String> versionList = new ArrayList<>();String executorsPath = ""/"" + namespace + ExecutorNodePath.getExecutorNodePath();if (!curatorFrameworkOp.checkExists(executorsPath)) {return getVersionStrFromList(versionList);}List<String> executors = curatorFrameworkOp.getChildren(executorsPath);if (executors == null || executors.isEmpty()) {return getVersionStrFromList(versionList);}for (String exe : executors) {String versionPath = executorsPath + ""/"" + exe + ""/version"";if (!curatorFrameworkOp.checkExists(versionPath)) {continue;}String version = curatorFrameworkOp.getData(versionPath);if (StringUtils.isBlank(version)) {continue;}String tmp = version.trim();if (!versionList.contains(tmp)) {versionList.add(tmp);}}return getVersionStrFromList(versionList);} catch (Exception e) {return """";}}}"	1
4108	public class A {protected void testQueryEdge(GraphManager graph, int threads, int thread, int multiple) {int i = 0;int j = 0;int totalV = 0;int totalE = 0;for (Object id : this.vertices) {if (i++ % multiple != 0) {continue;}if (j++ % threads != thread) {continue;}Iterator<Edge> edges = graph.queryVertexEdge(id, Directions.OUT);while (edges.hasNext()) {totalE++;}totalV++;}}}	3
4109	public class A {private Cipher getCipherForDecryption()throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException {final PrivateKey privateKey = this.keyPair.getPrivate();if (privateKey == null) {throw new EncrypterException(PRIVATE_KEY_MUST_BE_CONFIGURED_FOR_DECRYPTION);}final Cipher cipher = Cipher.getInstance(TRANSFORMATION);cipher.init(Cipher.DECRYPT_MODE, privateKey);return cipher;}}	1
4110	public class A {public void watchSubscriptions() {reqObserver =stub.streamSubscriptions(new StreamObserver<DiscoveryResponse>() {@Overridepublic void onNext(DiscoveryResponse response) {XdsSchedulerManager.getInstance().stopSubscriptionDiscoveryScheduling();latestReceived = response;try {List<Subscription> subscriptionList = new ArrayList<>();for (Any res : response.getResourcesList()) {subscriptionList.addAll(res.unpack(SubscriptionList.class).getListList());}subscriptionDataStore.addSubscriptions(subscriptionList);ack();} catch (Exception e) {onError(e);}}@Overridepublic void onError(Throwable throwable) {XdsSchedulerManager.getInstance().startSubscriptionDiscoveryScheduling();nack(throwable);}@Overridepublic void onCompleted() {}});try {DiscoveryRequest req =DiscoveryRequest.newBuilder().setNode(Node.newBuilder().setId(nodeId).build()).setVersionInfo(latestACKed.getVersionInfo()).setTypeUrl(Constants.SUBSCRIPTION_LIST_TYPE_URL).build();reqObserver.onNext(req);} catch (Exception e) {reqObserver.onError(e);}}}	5
4111	public class A {public void onSessionInit(@Observes @Initialized(SessionScoped.class) Object payload) {}}	1
4112	"public class A {@Testpublic void callMethodWithMultipleByteBufferParametersAsync() {final Semaphore resultAvailable = new Semaphore(0);try {final Byte[] byteBufferArg1 = {-5, 125};final Byte[] byteBufferArg2 = {78, 0};Byte[] concatenatedBuffer = IltUtil.concatenateByteArrays(byteBufferArg1, byteBufferArg2);Callback<Byte[]> callback =new Callback<Byte[]>() {@Overridepublic void onSuccess(Byte[] byteBufferOut) {if (!java.util.Objects.deepEquals(byteBufferOut, concatenatedBuffer)) {methodWithMultipleByteBufferParametersAsyncCallbackResult = false;resultAvailable.release();return;}methodWithMultipleByteBufferParametersAsyncCallbackResult = true;resultAvailable.release();}@Overridepublic void onFailure(JoynrRuntimeException error) {methodWithMultipleByteBufferParametersAsyncCallbackResult = false;if (error instanceof JoynrRuntimeException) {} else {}resultAvailable.release();}};testInterfaceProxy.methodWithMultipleByteBufferParameters(callback, byteBufferArg1, byteBufferArg2);try {Assert.assertTrue(name.getMethodName() + "" - FAILED - callback not received in time"",resultAvailable.tryAcquire(10, TimeUnit.SECONDS));Assert.assertTrue(name.getMethodName() + "" - FAILED - callback reported error"",methodWithMultipleByteBufferParametersAsyncCallbackResult);} catch (InterruptedException | JoynrRuntimeException e) {fail(name.getMethodName() + "" - FAILED - caught unexpected exception: "" + e.getMessage());}} catch (Exception e) {fail(name.getMethodName() + "" - FAILED - caught unexpected exception: "" + e.getMessage());}}}"	9
4113	public class A {public static void deleteCommerceAccountGroupRels(String className, long classPK)throws RemoteException {try {CommerceAccountGroupRelServiceUtil.deleteCommerceAccountGroupRels(className, classPK);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4114	"public class A {@AfterClass(alwaysRun = true)public void cleanUp() throws Exception {String noTest = System.getProperty(""noTestCleanup"");if (Boolean.TRUE.toString().equalsIgnoreCase(noTest)) {return;}PersonClient personAuthClient = new PersonClient();for (String resourceId : personIdsCreated) {personAuthClient.deleteItem(personAuthCSID, resourceId).close();}if (personAuthCSID != null) {personAuthClient.delete(personAuthCSID);MediaClient mediaClient = new MediaClient();for (String resourceId : mediaIdsCreated) {mediaClient.delete(resourceId);}}}}"	2
4115	public class A {@Overridepublic void run() {boolean running = true;while (running) {Map<Range, ConcurrentHashMap<Locator, Points>> dataToBeRolled = BuildStore.getEligibleData();try {if (dataToBeRolled != null && !dataToBeRolled.isEmpty()) {final RollupBatchWriter batchWriter = new RollupBatchWriter(batchWriterPool, null);Set<Range> ranges = dataToBeRolled.keySet();for (Range range : ranges) {BuildStore.rangesStillApplicable.remove(range);Set<Locator> locators = dataToBeRolled.get(range).keySet();for (Locator locator : locators) {rollupExecutors.submit(new RollupValidatorAndComputer(locator, range, dataToBeRolled.get(range).get(locator), batchWriter));}dataToBeRolled.remove(range);batchWriter.drainBatch();}} else {try {Thread.sleep(10000);} catch (InterruptedException e) {running = false;}}} catch (Throwable e) {throw new RuntimeException(e);}}}}	4
4116	"public class A {@ParallelNamespaceTest@Tag(INTERNAL_CLIENTS_USED)void testSendMessagesPlainAnonymous(ExtensionContext extensionContext) {final String namespaceName =extensionContext.getStore(ExtensionContext.Namespace.GLOBAL).get(Constants.NAMESPACE_KEY).toString();final String clusterName = mapWithClusterNames.get(extensionContext.getDisplayName());final String topicName = mapWithTestTopics.get(extensionContext.getDisplayName());final String clientsName = mapWithKafkaClientNames.get(extensionContext.getDisplayName());resourceManager.createResource(extensionContext, KafkaTemplates.kafkaEphemeral(clusterName, 3).build());resourceManager.createResource(extensionContext, KafkaTopicTemplates.topic(clusterName, topicName).build());resourceManager.createResource(extensionContext,KafkaClientsTemplates.kafkaClients(false, clusterName + ""-"" + Constants.KAFKA_CLIENTS).build());final String defaultKafkaClientsPodName =kubeClient(namespaceName).listPodsByPrefixInName(namespaceName, clusterName + ""-"" + Constants.KAFKA_CLIENTS).get(0).getMetadata().getName();InternalKafkaClient internalKafkaClient =new InternalKafkaClient.Builder().withUsingPodName(defaultKafkaClientsPodName).withTopicName(topicName).withNamespaceName(namespaceName).withClusterName(clusterName).withMessageCount(MESSAGE_COUNT).withListenerName(Constants.PLAIN_LISTENER_DEFAULT_NAME).build();internalKafkaClient.checkProducedAndConsumedMessages(internalKafkaClient.sendMessagesPlain(), internalKafkaClient.receiveMessagesPlain());Service kafkaService =kubeClient(namespaceName).getService(namespaceName, KafkaResources.bootstrapServiceName(clusterName));String kafkaServiceDiscoveryAnnotation =kafkaService.getMetadata().getAnnotations().get(""strimzi.io/discovery"");JsonArray serviceDiscoveryArray = new JsonArray(kafkaServiceDiscoveryAnnotation);assertThat(StUtils.expectedServiceDiscoveryInfo(""none"", ""none"", false, true),is(serviceDiscoveryArray));}}"	1
4117	public class A {private Datagram syncCheckpointUntilSuccess() {while (true) {try {return slaveSyncClient.syncCheckpoint();} catch (Exception e) {try {TimeUnit.SECONDS.sleep(2);} catch (InterruptedException ignore) {}}}}}	2
4118	"public class A {public void attachSpeechRecognizer(SpeechRecognizer recognizer) {if (recognizer == null) {return;}addListener(""publishStartSpeaking"", recognizer.getName(), ""onStartSpeaking"");addListener(""publishEndSpeaking"", recognizer.getName(), ""onEndSpeaking"");}}"	1
4119	public class A {public void refreshCurrentMasterHealthStatus() {long currentTime = System.currentTimeMillis();Set<String> toDeleteTargetDcIds = new HashSet<>();Set<String> unhealthyTargetDcIds = new HashSet<>();for (String targetDcId : remoteMasterLastHealthDelayTimes.keySet()) {if (!isDcClusterShardExist(targetDcId, clusterId, shardId)) {toDeleteTargetDcIds.add(targetDcId);continue;}Long lastHealthDelay = remoteMasterLastHealthDelayTimes.get(targetDcId);if (null != lastHealthDelay&& currentTime - lastHealthDelay> remoteMasterInstances.get(targetDcId).getHealthCheckConfig().delayDownAfterMilli()) {unhealthyTargetDcIds.add(targetDcId);}}toDeleteTargetDcIds.forEach(remoteMasterLastHealthDelayTimes::remove);toDeleteTargetDcIds.forEach(remoteMasterInstances::remove);updateCurrentMasterHealthStatus(clusterId, shardId, unhealthyTargetDcIds);}}	1
4120	public class A {private static void checkOrcVersion(OrcDataSource orcDataSource, List<Integer> version) {if (version.size() >= 1) {int major = version.get(0);int minor = 0;if (version.size() > 1) {minor = version.get(1);}if (major > CURRENT_MAJOR_VERSION|| (major == CURRENT_MAJOR_VERSION && minor > CURRENT_MINOR_VERSION)) {}}}}	1
4121	"public class A {@Overridepublic boolean checkForDatabase(String connectionUrl) {boolean exist = false;JdbcUrl jdbcUrl = prepareConnectionUri(connectionUrl);String dbName = jdbcUrl.getDbName();String serverUrl = jdbcUrl.getUrlForDbServer();loadSQLDriverClass();try (Connection conn = buildConnection(serverUrl);Statement stmt = conn.createStatement()) {StringBuilder sb = new StringBuilder();if (MYSQL_DRIVER_CLASSNAME.equalsIgnoreCase(getChosenSQLDriver())) {sb =sb.append(""SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '"").append(dbName).append(""'"");} else {sb =sb.append(""SELECT datname FROM pg_catalog.pg_database WHERE datname = '"").append(dbName).append(""'"");}ResultSet rs = stmt.executeQuery(sb.toString());while (rs.next()) {exist = true;}} catch (SQLException e) {}return exist;}}"	1
4122	"public class A {public void send() throws JMSException {synchronized (sendMutex) {int trans = ++transRover;boolean relevantTrans = true;ClientType clientType = relevantTrans ? ClientType.randomClientType() : null;int count = 1000;Connection con = cf.createConnection();Session sess = con.createSession(true, Session.SESSION_TRANSACTED);MessageProducer prod = sess.createProducer(null);for (int i = 0; i < count; i++) {Message message = sess.createMessage();message.setIntProperty(""ID"", ++messageRover);message.setIntProperty(""TRANS"", trans);String type =clientType != null? clientType.randomMessageType(): ClientType.randomNonRelevantMessageType();message.setStringProperty(""TYPE"", type);if (CARGO_SIZE > 0) message.setStringProperty(""CARGO"", getCargo(random(CARGO_SIZE)));prod.send(topic, message);clientManager.onServerMessage(message);}Message message = sess.createMessage();message.setIntProperty(""ID"", ++messageRover);message.setIntProperty(""TRANS"", trans);message.setBooleanProperty(""COMMIT"", true);message.setBooleanProperty(""RELEVANT"", relevantTrans);prod.send(topic, message);clientManager.onServerMessage(message);committingTransaction = trans;sess.commit();committingTransaction = -1;sess.close();con.close();}}}"	2
4123	"public class A {@Testpublic void testEmptyStructuredConfig() throws Exception {Entity app =createAndStartApplication(loadYaml(""test-entity-basic-template.yaml"",""  brooklyn.config:"",""    test.confName: \""\"""",""    test.confListThing: !!seq []"",""    test.confSetThing: !!set {}"",""    test.confMapThing: !!map {}""));waitForApplicationTasks(app);Assert.assertEquals(app.getDisplayName(), ""test-entity-basic-template"");Dumper.dumpInfo(app);Entity entity = app.getChildren().iterator().next();Assert.assertNotNull(entity, ""Expected app to have child entity"");Assert.assertTrue(entity instanceof TestEntity, ""Expected TestEntity, found "" + entity.getClass());TestEntity testEntity = (TestEntity) entity;List<String> thingList = (List<String>) testEntity.getConfig(TestEntity.CONF_LIST_THING);Set<String> thingSet = (Set<String>) testEntity.getConfig(TestEntity.CONF_SET_THING);Map<String, String> thingMap = testEntity.getConfig(TestEntity.CONF_MAP_THING);Assert.assertEquals(thingList, Lists.newArrayList());Assert.assertEquals(thingSet, ImmutableSet.of());Assert.assertEquals(thingMap, ImmutableMap.of());}}"	1
4124	"public class A {protected boolean readToBuffer(ImageInputStream pImageInput, InputStream pSourceInput, boolean pUsePool) throws IOException {boolean success = false;String error = ""Unable to read image"";final Iterator<ImageReader> imageReaders = ImageIO.getImageReaders(pImageInput);if (!imageReaders.hasNext()) {error = ""Unable to read image because no image readers were found"";}while (imageReaders.hasNext() && !success) {final ImageReader reader = imageReaders.next();try {final ImageReadParam param = reader.getDefaultReadParam();reader.setInput(pImageInput, true, true);final int width = reader.getWidth(0);final int height = reader.getHeight(0);final ImageTypeSpecifier chosenType = getImageTypeSpecifier(reader);if (chosenType == null) {continue;}final BufferedImageSpecs key = new BufferedImageSpecs(width, height, chosenType);BufferedImage destination = null;try {while (true) {try {destination = getBufferedImage(pUsePool, key);break;} catch (final InterruptedException e) {if (LOGGER.isDebugEnabled()) {}if (pSourceInput instanceof Cancellable&& ((Cancellable) pSourceInput).isCancelled()) {throw new IOException(""Stream is cancelled."", e);}}}param.setDestination(destination);final BufferedImage img = reader.read(0, param);myBufferedImage = img;destination = null;success = true;} finally {if (pUsePool && destination != null) {BUFFERED_IMAGE_POOL.surrender(key, destination);}}} finally {reader.dispose();}}if (!success) {}return success;}}"	2
4125	"public class A {private void handleHangup() {addShutdownListener(() -> {if (main.getCamelContext() != null) {final CountDownLatch latch = new CountDownLatch(1);CamelContextTracker tracker =new CamelContextTracker() {@Overridepublic void contextDestroyed(CamelContext camelContext) {latch.countDown();}};tracker.open();long max =5000+ main.getCamelContext().getShutdownStrategy().getTimeUnit().toMillis(main.getCamelContext().getShutdownStrategy().getTimeout());int waits = 0;boolean done = false;StopWatch watch = new StopWatch();while (!main.getCamelContext().isStopped() && !done && watch.taken() < max) {String msg =""Waiting for CamelContext to graceful shutdown, elapsed: ""+ TimeUtils.printDuration(watch.taken());if (waits > 0 && waits % 5 == 0) {} else {}waits++;try {done = latch.await(1000, TimeUnit.MILLISECONDS);} catch (InterruptedException e) {}}tracker.close();}});shutdown();}}"	5
4126	public class A {public static CatalogDto newDtoFromUrl(String url) {try {InputStream source = ResourceUtils.create().getResourceFromUrl(url);CatalogDto result =(CatalogDto) new CatalogXmlSerializer().deserialize(new InputStreamReader(source));return result;} catch (Throwable t) {throw Exceptions.propagate(t);}}}	3
4127	"public class A {private IgniteInternalFuture updateFuture(final int nodes,final String cacheName,final List<Integer> keys,final boolean reverse,final AtomicBoolean stop,final AtomicBoolean err) {final AtomicInteger idx = new AtomicInteger();return GridTestUtils.runMultiThreadedAsync(new Callable<Void>() {@Overridepublic Void call() throws Exception {try {Ignite node = ignite(idx.getAndIncrement() % nodes);IgniteCache cache = node.cache(cacheName);Map<Integer, Integer> map = new LinkedHashMap<>();if (reverse) {for (int i = keys.size() - 1; i >= 0; i--) map.put(keys.get(i), 2);} else {for (Integer key : keys) map.put(key, 1);}while (!stop.get()) cache.putAll(map);} catch (Exception e) {err.set(true);stop.set(true);}return null;}},nodes * 2,""update-"" + cacheName + ""-"" + reverse);}}"	2
4128	"public class A {protected void handleError(final Exception e,final String correlationUid,final String organisationIdentification,final String deviceIdentification,final String messageType,final int messagePriority) {OsgpException osgpException = null;if (e instanceof OsgpException) {osgpException = (OsgpException) e;} else {osgpException =new TechnicalException(this.componentType,String.format(""An unknown error of type %s occurred."", e.getClass().getName()),e);}final ResponseMessage responseMessage =ResponseMessage.newResponseMessageBuilder().withCorrelationUid(correlationUid).withOrganisationIdentification(organisationIdentification).withDeviceIdentification(deviceIdentification).withResult(ResponseMessageResultType.NOT_OK).withOsgpException(osgpException).withMessagePriority(messagePriority).build();this.responseMessageSender.send(responseMessage, messageType);}}"	1
4129	"public class A {@JsxFunctionpublic void setRequestHeader(final String name, final String value) {if (!isAuthorizedHeader(name)) {if (LOG.isWarnEnabled()) {}return;}if (webRequest_ != null) {webRequest_.setAdditionalHeader(name, value);} else {throw Context.reportRuntimeError(""The open() method must be called before setRequestHeader()."");}}}"	1
4130	public class A {Point createPointFromWkt(String wkt) {try {JtsSpatialContextFactory contextFactory = new JtsSpatialContextFactory();contextFactory.allowMultiOverlap = true;SpatialContext spatialContext = contextFactory.newSpatialContext();Shape shape = (Shape) spatialContext.readShapeFromWkt(wkt);Point center = shape.getCenter();return center;} catch (java.text.ParseException parseException) {}return null;}}	1
4131	public class A {@Overridepublic AcknowledgementType auditLog(LogEventRequestType request, AssertionType assertion) {AcknowledgementType result = new AcknowledgementType();if (request.getAuditMessage() == null) {return result;}try {String url = oProxyHelper.getUrlLocalHomeCommunity(NhincConstants.AUDIT_REPO_SERVICE_NAME);if (NullChecker.isNotNullish(url)) {ServicePortDescriptor<AuditRepositoryManagerPortType> portDescriptor =new AuditRepositoryUnsecuredServicePortDescriptor();CONNECTClient<AuditRepositoryManagerPortType> client =CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);result =(AcknowledgementType)client.invokePort(AuditRepositoryManagerPortType.class, invokeMethodName, request);}} catch (Exception e) {}return result;}}	3
4132	public class A {public synchronized Iterator<ScheduledMeasurement> getMeasurementList() throws IOException {Collection<String> records = new ArrayList<String>();try {readRecordsFromStorage(records);} catch (Exception e) {store.convertListToCurrentRecordSize(MeasurementSchedule.PROP_MSCHED);readRecordsFromStorage(records);}return createMeasurementList(records);}}	1
4133	"public class A {private void logProcessResultIfNecessary(IProcessResult processResult, List<IReplicationOrderedPacket> packets) {if (_specificVerboseLogger.isTraceEnabled()) {String packetsBatchText =packets.isEmpty()? ""IDLE-STATE"": ""firstPacketKey=""+ packets.get(0).getKey()+ "", lastPacketKey=""+ packets.get(packets.size() - 1).getEndKey();}}}"	1
4134	public class A {@Overridepublic void invoke(List<TwitterListener> listeners) throws TwitterException {User user = twitter.showUserListMembership(listId, userId);for (TwitterListener listener : listeners) {try {listener.checkedUserListMembership(user);} catch (Exception e) {}}}}	1
4135	"public class A {public LensResultSet execute(QueryContext ctx) throws LensException {OperationHandle op = null;LensResultSet result = null;try {addPersistentPath(ctx);Configuration qdconf = ctx.getDriverConf(this);qdconf.set(""mapred.job.name"", ctx.getQueryHandle().toString());SessionHandle sessionHandle = getSession(ctx);op =getClient().executeStatement(sessionHandle, ctx.getSelectedDriverQuery(), qdconf.getValByRegex("".*""));ctx.setDriverOpHandle(op.toString());hiveHandles.put(ctx.getQueryHandle(), op);opHandleToSession.put(op, sessionHandle);updateStatus(ctx);OperationStatus status = getClient().getOperationStatus(op);if (status.getState() == OperationState.ERROR) {throw new LensException(""Unknown error while running query "" + ctx.getUserQuery());}result = createResultSet(ctx, true);if (result == null || !(result instanceof InMemoryResultSet)) {closeQuery(ctx.getQueryHandle());}hiveHandles.remove(ctx.getQueryHandle());} catch (IOException e) {throw new LensException(""Error adding persistent path"", e);} catch (HiveSQLException hiveErr) {handleHiveServerError(ctx, hiveErr);handleHiveSQLException(hiveErr);} finally {if (null != op) {opHandleToSession.remove(op);}}return result;}}"	1
4136	public class A {public final void setType(final String name) {if (name.equals(OrganizationIdentityProvider.NAME)) {setType(Type.USER);} else if (name.equals(SpaceIdentityProvider.NAME)) {setType(Type.SPACE);} else {}}}	1
4137	"public class A {@Overridepublic void reset(QueryPlanChooser c) {for (QueryPlanNode node : c.getQueryPlan().getAllNodes()) {if (!(node.getData() instanceof IndexedFieldScorerData)) {throw new IllegalStateException(""Expected instance of ""+ IndexedFieldScorerData.class.getName()+ "" but got: ""+ node.getData().getClass().getName());}IndexedFieldScorerData data = getData(node);CompositeMetadata md = node.getMetadata();data.setRootNode(md.getParent() == null);Field[] identities = md.getEntitySchema().getIdentityFields();if (identities != null && identities.length > 0) {List<Path> idFields = new ArrayList<Path>(identities.length);for (Field f : identities) {idFields.add(md.getEntityRelativeFieldName(f));}Map<Index, Set<Path>> idIndexes =md.getEntityInfo().getIndexes().getUsefulIndexes(idFields);for (Map.Entry<Index, Set<Path>> s : idIndexes.entrySet()) {if (s.getValue().size() == idFields.size()) {data.setIdIndex(s.getKey());break;}}data.setIdFields(idFields);}Set<Path> indexableFields = new HashSet<>();for (Conjunct cj : data.getConjuncts()) {List<QueryFieldInfo> cjFields = cj.getFieldInfo();if (cjFields.size() == 1) {indexableFields.add(cjFields.get(0).getEntityRelativeFieldNameWithContext());}}data.setIndexableFields(indexableFields);if (md.getEntityInfo().getIndexes() != null) {data.setIndexMap(md.getEntityInfo().getIndexes().getUsefulIndexes(indexableFields));Index idIndex = data.getIdIndex();if (idIndex != null) {Set<Path> usefulness = idIndex.getUsefulness(indexableFields);if (usefulness.size() == idIndex.getFields().size()) {data.setIdentitySearch(true);}}} else {data.setIndexMap(new HashMap<Index, Set<Path>>());}}}}"	2
4138	"public class A {private void asyncError(AsyncContext asyncContext, Message message) {try {Map<String, Object> result = new HashMap<>();result.put(""status"", -1);result.put(""error"", message.getMessageId());ServletResponse response = asyncContext.getResponse();response.setContentType(""application/json"");MAPPER.writeValue(response.getWriter(), result);} catch (Exception e) {} finally {asyncContext.complete();}}}"	1
4139	public class A {public void init() {if (workers == null || workers.length == 0) {workers = new DistPoolThread[threads];for (int i = 0; i < workers.length; i++) {workers[i] = new DistPoolThread(this, ec, i);workers[i].start();}}}}	1
4140	public class A {public void setValue(final String key, final String value) {if (key != null) {if (buildContext != null) {buildContext.setValue(key, value);}if (value != null) {fallbackStorage.setProperty(key, value);} else {fallbackStorage.remove(key);}} else {}}}	2
4141	public class A {@Overrideprotected void doCleanup(Context context) throws IOException, InterruptedException {while (!future.isDone()) {if (queue.offer(inputConverterUnit.getEndRow(), 1, TimeUnit.SECONDS)) {break;}}futureGet(context);queue.clear();}}	1
4142	public class A {private static boolean copyNodeState(@NotNull final NodeState source,@NotNull final NodeBuilder target,@NotNull final String currentPath,@NotNull final Set<String> mergePaths) {boolean hasChanges = false;for (final String childName : target.getChildNodeNames()) {if (!source.hasChildNode(childName)&& !isMerge(PathUtils.concat(currentPath, childName), mergePaths)) {target.setChildNode(childName, EmptyNodeState.MISSING_NODE);hasChanges = true;}}for (ChildNodeEntry child : source.getChildNodeEntries()) {final String childName = child.getName();final NodeState childSource = child.getNodeState();if (!target.hasChildNode(childName)) {target.setChildNode(childName, childSource);hasChanges = true;} else {final NodeBuilder childTarget = target.getChildNode(childName);final String childPath = PathUtils.concat(currentPath, childName);hasChanges = copyNodeState(childSource, childTarget, childPath, mergePaths) || hasChanges;}}hasChanges = copyProperties(source, target) || hasChanges;if (hasChanges) {}return hasChanges;}}	1
4143	public class A {public void addMappingFile(final String file) {if (new File(file).exists()) {entityManagerFactoryCallable.getUnitInfo().addMappingFileName(file);} else {}}}	1
4144	public class A {@Overrideprotected PaymentTransactionInfoPlugin doCallSpecificOperationCallback()throws PaymentPluginApiException {return new DefaultNoOpPaymentInfoPlugin(paymentStateContext.getPaymentId(),paymentStateContext.getTransactionId(),TransactionType.CHARGEBACK,paymentStateContext.getAmount(),paymentStateContext.getCurrency(),null,null,PaymentPluginStatus.PROCESSED,null,null);}}	1
4145	public class A {protected String getJSONObjectLocalizedPropertyFromRequest(String propertyName) {String propertyValue = ParamUtil.getString(formAdminRequestHelper.getRequest(), propertyName);if (Validator.isNull(propertyValue)) {return StringPool.BLANK;}ThemeDisplay themeDisplay = formAdminRequestHelper.getThemeDisplay();try {JSONObject jsonObject = jsonFactory.createJSONObject(propertyValue);String languageId = themeDisplay.getLanguageId();if (jsonObject.has(languageId)) {return jsonObject.getString(languageId);}return jsonObject.getString(getDefaultLanguageId());} catch (JSONException jsonException) {}return StringPool.BLANK;}}	1
4146	"public class A {@Overridepublic void afterBulk(long executionId, BulkRequest request, BulkResponse response) {long msec = response.getTook().getMillis();eventCounter.scope(""bulks_received"").incrBy(1);eventCounter.scope(""bulk_msec"").incrBy(msec);Iterator<BulkItemResponse> bulkitemiterator = response.iterator();int itemcount = 0;int acked = 0;int failurecount = 0;synchronized (waitAck) {while (bulkitemiterator.hasNext()) {BulkItemResponse bir = bulkitemiterator.next();itemcount++;String id = bir.getId();BulkItemResponse.Failure f = bir.getFailure();boolean failed = false;if (f != null) {if (f.getStatus().equals(RestStatus.CONFLICT)) {eventCounter.scope(""doc_conflicts"").incrBy(1);} else {failed = true;}}List<Tuple> xx = waitAck.getIfPresent(id);if (xx != null) {for (Tuple x : xx) {if (!failed) {String url = x.getStringByField(""url"");acked++;super.ack(x, url);} else {failurecount++;_collector.fail(x);}}waitAck.invalidate(id);} else {}}if (waitAck.size() > 0 && LOG.isDebugEnabled()) {for (String kinaw : waitAck.asMap().keySet()) {}}}}}"	8
4147	public class A {@Testpublic void testMultipleErrors() {Logger log = Mockito.mock(Logger.class);ScheduledExecutorService executor = Mockito.mock(ScheduledExecutorService.class);Duration seconds = Duration.seconds(30);RateLimitedLog rateLimitedLog = new DefaultRateLimitedLogFactory(executor, seconds).from(log);Mockito.verify(executor).scheduleWithFixedDelay(any(), eq(1L), eq(1L), eq(TimeUnit.MINUTES));Throwable t1 = new Throwable();Throwable t2 = new Throwable();Throwable t3 = new Throwable();ArgumentCaptor<Runnable> captor1 = ArgumentCaptor.forClass(Runnable.class);Mockito.verify(executor).schedule(captor1.capture(), eq(30L), eq(TimeUnit.SECONDS));Mockito.verifyNoMoreInteractions(log, executor);Mockito.reset(executor);captor1.getValue().run();Mockito.verify(log)ArgumentCaptor<Runnable> captor2 = ArgumentCaptor.forClass(Runnable.class);Mockito.verify(executor).schedule(captor2.capture(), eq(30L), eq(TimeUnit.SECONDS));Mockito.verifyNoMoreInteractions(log, executor);captor2.getValue().run();Mockito.verifyNoMoreInteractions(log, executor);}}	5
4148	public class A {public void requestReadAlarmRegister(final DeviceMessageMetadata deviceMessageMetadata,final ReadAlarmRegisterRequest readAlarmRegisterRequestValueObject)throws FunctionalException {final SmartMeter smartMeteringDevice =this.domainHelperService.findSmartMeter(deviceMessageMetadata.getDeviceIdentification());final ReadAlarmRegisterRequestDto readAlarmRegisterRequestDto =this.monitoringMapper.map(readAlarmRegisterRequestValueObject, ReadAlarmRegisterRequestDto.class);this.osgpCoreRequestMessageSender.send(new RequestMessage(deviceMessageMetadata.getCorrelationUid(),deviceMessageMetadata.getOrganisationIdentification(),deviceMessageMetadata.getDeviceIdentification(),smartMeteringDevice.getIpAddress(),readAlarmRegisterRequestDto),deviceMessageMetadata.getMessageType(),deviceMessageMetadata.getMessagePriority(),deviceMessageMetadata.getScheduleTime(),deviceMessageMetadata.bypassRetry());}}	1
4149	public class A {@Overridepublic void initialize() {StationConfiguration config = getConfigAs(StationConfiguration.class);updateStatus(ThingStatus.UNKNOWN);if (thing.getProperties().isEmpty()) {Map<String, String> properties = discoverAttributes(config);updateProperties(properties);}getReferences();refreshJob =scheduler.scheduleWithFixedDelay(this::updateAndPublish, 0, config.refresh, TimeUnit.MINUTES);}}	2
4150	public class A {@Overridepublic Map<String, IMonomer> getMonomers() {return super.getMonomers();}}	1
4151	"public class A {public List findByExample(StgMsZykTxt instance) {try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.StgMsZykTxt"").add(Example.create(instance)).list();return results;} catch (RuntimeException re) {throw re;}}}"	3
4152	public class A {@Overridepublic void close() throws HiveException {if (model != null) {if (count == 0) {this.model = null;return;}if (iterations > 1) {runIterativeTraining(iterations);}final IntWritable idx = new IntWritable();final FloatWritable[] Pu = HiveUtils.newFloatArray(factor, 0.f);final FloatWritable[] Qi = HiveUtils.newFloatArray(factor, 0.f);final FloatWritable Bi = useBiasClause ? new FloatWritable() : null;final Object[] forwardObj = new Object[] {idx, Pu, Qi, Bi};int numForwarded = 0;for (int i = model.getMinIndex(), maxIdx = model.getMaxIndex(); i <= maxIdx; i++) {idx.set(i);Rating[] userRatings = model.getUserVector(i);if (userRatings == null) {forwardObj[1] = null;} else {forwardObj[1] = Pu;copyTo(userRatings, Pu);}Rating[] itemRatings = model.getItemVector(i);if (itemRatings == null) {forwardObj[2] = null;} else {forwardObj[2] = Qi;copyTo(itemRatings, Qi);}if (useBiasClause) {Bi.set(model.getItemBias(i));}forward(forwardObj);numForwarded++;}this.model = null;}}}	1
4153	public class A {@Overridepublic void validationError(Throwable throwable) {wbNotification.fire(new NotificationEvent(i18n.validationError(), NotificationEvent.NotificationType.ERROR));}}	1
4154	"public class A {private List<OFClient> createAndStartClient(final int amountOfCLients,final ScenarioHandler scenarioHandler,final TransportProtocol protocol,final ClientType clientType)throws ExecutionException, InterruptedException, TimeoutException {final List<OFClient> clientsHorde = new ArrayList<>();for (int i = 0; i < amountOfCLients; i++) {OFClient sc = null;if (clientType == ClientType.SIMPLE) {if (protocol.equals(TransportProtocol.TCP)) {sc = new SimpleClient(startupAddress.getHostAddress(), port);sc.setSecuredClient(false);} else if (protocol.equals(TransportProtocol.TLS)) {sc = new SimpleClient(startupAddress.getHostAddress(), port);sc.setSecuredClient(true);} else {sc = new UdpSimpleClient(startupAddress.getHostAddress(), port);}} else if (clientType == ClientType.LISTENING) {sc = new ListeningSimpleClient(0);sc.setScenarioHandler(scenarioHandler);sc.setSecuredClient(false);} else {throw new IllegalStateException(""Unknown type of client."");}sc.setScenarioHandler(scenarioHandler);clientsHorde.add(sc);thread = new Thread(sc);thread.start();}for (final OFClient sc : clientsHorde) {sc.getIsOnlineFuture().get(CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS);}return clientsHorde;}}"	2
4155	"public class A {private Optional<Pattern> getLogErrorRegex(final Optional<SingularityTask> task) {Optional<String> maybeRegex;SMTPConfiguration configuration = smtpConfiguration.get();if (task.isPresent()&& task.get().getTaskRequest().getRequest().getTaskLogErrorRegex().isPresent()&& !task.get().getTaskRequest().getRequest().getTaskLogErrorRegex().get().equals("""")) {maybeRegex = task.get().getTaskRequest().getRequest().getTaskLogErrorRegex();} else {maybeRegex = configuration.getTaskLogErrorRegex();}if (!maybeRegex.isPresent()) {return Optional.empty();}String regex = maybeRegex.get();Boolean caseSensitive;if (task.isPresent()&& task.get().getTaskRequest().getRequest().getTaskLogErrorRegexCaseSensitive().isPresent()) {caseSensitive =task.get().getTaskRequest().getRequest().getTaskLogErrorRegexCaseSensitive().get();} else if (configuration.getTaskLogErrorRegexCaseSensitive().isPresent()) {caseSensitive = configuration.getTaskLogErrorRegexCaseSensitive().get();} else {caseSensitive = true;}try {if (caseSensitive) {return Optional.of(Pattern.compile(regex));} else {return Optional.of(Pattern.compile(regex, Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE));}} catch (PatternSyntaxException e) {return Optional.empty();}}}"	2
4156	public class A {@Overridepublic void handle(CloseSessionEvent event, EventProcessor proc) throws RemoteException {if (event.cSID != null) {int count = event.session.destroySession(event.cSID);event.status.getOperatorMeasurement().changeActiveValue(-count);} else {int count = event.session.destroySession();event.status.getOperatorMeasurement().changeActiveValue(-count);}}}	2
4157	public class A {@Overridepublic void shutdown() {if (started) {started = false;Enumeration<String> keys = allocatedLimiters.keys();Collections.asList(keys).forEach(name -> Tasks.shutdownExecutor(name, allocatedLimiters.get(name).executor, 5));} else {}}}	1
4158	public class A {public static List<String> getAllMembersOfGroupName(String groupName, Map<String, Object> groups) {Map<String, Object> groupInfo = (Map<String, Object>) groups.get(groupName);try {if (groupInfo.containsKey(TOSCAkeywords.GROUP_ELEMENT_MEMBERS_TAG)) {return (List<String>) groupInfo.get(TOSCAkeywords.GROUP_ELEMENT_MEMBERS_TAG);}} catch (ClassCastException E) {return null;}if (log.isDebugEnabled()) {}return null;}}	2
4159	"public class A {private static <T> T runExternalAttach(long pid,String methodName,InputStreamProcessor<T> processor,@Nullable File glowrootJarFile)throws Exception {List<String> command = buildCommand(pid, methodName, glowrootJarFile);ProcessBuilder processBuilder = new ProcessBuilder(command);Process process = processBuilder.start();Closer closer = Closer.create();ErrorStreamReader errorStreamReader;T result = null;Exception processingException = null;try {InputStream in = closer.register(process.getInputStream());InputStream err = closer.register(process.getErrorStream());errorStreamReader = new ErrorStreamReader(err);Thread errorStreamReaderThread = new Thread(errorStreamReader);errorStreamReaderThread.setName(""Glowroot-JVM-Tool-Error-Stream-Reader"");errorStreamReaderThread.setDaemon(true);errorStreamReaderThread.start();try {result = processAndClose(in, processor);} catch (Exception e) {processingException = e;} catch (Throwable t) {processingException = new RuntimeException(t);}errorStreamReaderThread.join();} catch (Throwable t) {throw closer.rethrow(t);} finally {closer.close();}int status = process.waitFor();if (status == UNAVAILABLE_DUE_TO_RUNNING_IN_JRE_STATUS) {throw new UnavailableDueToRunningInJreException();} else if (status == UNAVAILABLE_PROBABLY_DUE_TO_DOCKER_PID_ONE_STATUS) {throw new UnavailableDueToDockerAlpinePidOneException();} else if (status != 0) {throw new IllegalStateException(""Error occurred while trying to run jvm tool"");}if (result == null) {throw checkNotNull(processingException);}return result;}}"	1
4160	public class A {public void warn(CharSequence charSequence) {seenWarning(charSequence);}}	1
4161	public class A {@ExceptionHandler(UaaException.class)public ResponseEntity<UaaException> handleException(UaaException e) {if (e instanceof InternalUserManagementDisabledException) {throw e;}return new ResponseEntity<>(e, HttpStatus.valueOf(e.getHttpStatus()));}}	1
4162	"public class A {protected String logFilename() {if (this.logFilename == null) {org.apache.logging.log4j.Logger logger = LogManager.getLogger();Map<String, Appender> appenderMap =((org.apache.logging.log4j.core.Logger) logger).getAppenders();for (Map.Entry<String, Appender> e : appenderMap.entrySet()) {String filename = null;Appender appender = e.getValue();if (appender instanceof FileAppender) {filename = ((FileAppender) appender).getFileName();} else if (appender instanceof RollingFileAppender) {filename = ((RollingFileAppender) appender).getFileName();} else if (appender instanceof RandomAccessFileAppender) {filename = ((RandomAccessFileAppender) appender).getFileName();} else if (appender instanceof RollingRandomAccessFileAppender) {filename = ((RollingRandomAccessFileAppender) appender).getFileName();}if (filename != null) {this.logFilename = filename;return this.logFilename;}}this.logFilename = Platform.homePath() + ""DICOMLOG.log"";}return this.logFilename;}}"	2
4163	public class A {@Overridepublic void getCurrentConfigFailed(VehicleState.GetCurrentConfigErrorEnum error, ReplyContext replyContext) {}}	1
4164	public class A {public Entry newEntry(String ldif, String dn) {try {Entry entry = readEntry(ldif);Dn newDn = getDnFactory().create(dn);entry.setDn(newDn);return new DefaultEntry(schemaManager, entry);} catch (Exception e) {return null;}}}	1
4165	public class A {private static void createShuntCompensator(MBus mBus, VoltageLevel voltageLevel, PerUnitContext perUnitContext) {if (mBus.getShuntSusceptance() != 0) {String busId = getId(BUS_PREFIX, mBus.getNumber());String shuntId = getId(SHUNT_PREFIX, mBus.getNumber());double zb =voltageLevel.getNominalV() * voltageLevel.getNominalV() / perUnitContext.getBaseMva();ShuntCompensatorAdder adder =voltageLevel.newShuntCompensator().setId(shuntId).setConnectableBus(busId).setBus(busId).setSectionCount(1);adder.newLinearModel().setBPerSection(mBus.getShuntSusceptance() / perUnitContext.getBaseMva() / zb).setMaximumSectionCount(1).add();ShuntCompensator newShunt = adder.add();}}}	1
4166	public class A {@Overridepublic void sendCommfaultTag(long tagID, String tagName, boolean value, String pDescription) {long timestamp = System.currentTimeMillis();SourceDataTagValue commfaultTagValue =SourceDataTagValue.builder().id(tagID).name(tagName).controlTag(true).value(value).quality(new SourceDataTagQuality()).timestamp(new Timestamp(timestamp)).daqTimestamp(new Timestamp(timestamp)).priority(JmsMessagePriority.PRIORITY_HIGHEST.getPriority()).timeToLive(DataTagConstants.TTL_FOREVER).valueDescription(pDescription).build();distributeValue(commfaultTagValue);}}	1
4167	public class A {private SenseiProtos.ErrorType convert(ErrorType errorType) {switch (errorType) {case BoboExecutionError:return SenseiProtos.ErrorType.BoboExecutionError;case BQLParsingError:return SenseiProtos.ErrorType.BQLParsingError;case BrokerGatherError:return SenseiProtos.ErrorType.BrokerGatherError;case BrokerTimeout:return SenseiProtos.ErrorType.BrokerTimeout;case ExecutionTimeout:return SenseiProtos.ErrorType.ExecutionTimeout;case FederatedBrokerUnavailable:return SenseiProtos.ErrorType.FederatedBrokerUnavailable;case InternalError:return SenseiProtos.ErrorType.InternalError;case JsonCompilationError:return SenseiProtos.ErrorType.JsonCompilationError;case JsonParsingError:return SenseiProtos.ErrorType.JsonParsingError;case MergePartitionError:return SenseiProtos.ErrorType.MergePartitionError;case PartitionCallError:return SenseiProtos.ErrorType.PartitionCallError;case UnknownError:return SenseiProtos.ErrorType.UnknownError;default:{return SenseiProtos.ErrorType.UnknownError;}}}}	1
4168	public class A {@Overrideprotected void sendMcastDiscoveryRequest(Message msg) {try {if (msg.getSrc() == null) msg.setSrc(local_addr);ByteArrayDataOutputStream out = new ByteArrayDataOutputStream(msg.size());msg.writeTo(out);for (int i = bind_port; i <= bind_port + port_range; i++) {DatagramPacket packet = new DatagramPacket(out.buffer(), 0, out.position(), dest_addr, i);sock.send(packet);}} catch (Exception ex) {}}}	1
4169	public class A {@Overridepublic String getName() {return super.getName();}}	1
4170	"public class A {public Single<Map<String, String>> loadVersionsFromIndex(String indexName, Bucket bucket) {return Single.fromCallable(() -> {String fullIndexName = searchProvider.installationPrefix() + indexName;Map<String, String> versions = new HashMap<>();ElasticsearchClient<JsonObject> client = searchProvider.getClient();JsonObject query = new JsonObject();query.put(""size"", ES_SYNC_FETCH_BATCH_SIZE);query.put(""_source"", new JsonArray().add(""uuid"").add(""version""));query.put(""query"", bucket.rangeQuery());query.put(""sort"", new JsonArray().add(""_doc""));System.out.println(query.encodePrettily());RequestBuilder<JsonObject> builder = client.searchScroll(query, ""1m"", fullIndexName);JsonObject result = new JsonObject();try {result = builder.sync();if (log.isTraceEnabled()) {}JsonArray hits = result.getJsonObject(""hits"").getJsonArray(""hits"");processHits(hits, versions);if (hits.size() != 0) {String nextScrollId = result.getString(""_scroll_id"");try {while (true) {final String currentScroll = nextScrollId;JsonObject scrollResult = client.scroll(""1m"", currentScroll).sync();JsonArray scrollHits = scrollResult.getJsonObject(""hits"").getJsonArray(""hits"");if (log.isTraceEnabled()) {}if (scrollHits.size() != 0) {processHits(scrollHits, versions);nextScrollId = scrollResult.getString(""_scroll_id"");if (log.isDebugEnabled()) {}} else {break;}}} finally {client.clearScroll(nextScrollId).sync();}}} catch (HttpErrorException e) {throw e;}return versions;});}}"	8
4171	public class A {private void addSigContributionResults(final SampleData sample, final List<SampleResult> results) {final Map<String, Double> sampleSigContribs = mSampleSigContributions.get(sample.Id);if (sampleSigContribs == null) {return;}for (final String sigName : SomaticSigs.REPORTABLE_SIGS.keySet()) {double sampleSigContrib =sampleSigContribs.containsKey(sigName) ? sampleSigContribs.get(sigName) : 0;if (sigName.equalsIgnoreCase(SIG_NAME_2)) {sampleSigContrib +=sampleSigContribs.containsKey(SIG_NAME_13) ? sampleSigContribs.get(SIG_NAME_13) : 0;} else if (sigName.equalsIgnoreCase(SIG_NAME_13)) {continue;}Map<String, Double> cancerResults = Maps.newHashMap();for (Map.Entry<String, Map<String, double[]>> cancerContribs :mRefCancerSigContribPercentiles.entrySet()) {final String cancerType = cancerContribs.getKey();final double[] refSigPercentiles = cancerContribs.getValue().get(sigName);if (refSigPercentiles == null) {cancerResults.put(cancerType, 0.0);} else {double percentile = getPercentile(refSigPercentiles, sampleSigContrib, true);cancerResults.put(cancerType, percentile);}}results.add(new SampleResult(sample.Id,SNV,PERCENTILE,signatureDisplayName(sigName),round(sampleSigContrib),cancerResults));}}}	1
4172	"public class A {private void validateInMemoryResultSet(InMemoryQueryResult result) {int size = result.getRows().size();for (int i = 0; i < size; i++) {}Assert.assertEquals(size, 2, ""Wrong result"");Assert.assertEquals(result.getRows().get(0).getValues().get(0), 2, ""Wrong result"");Assert.assertEquals(result.getRows().get(0).getValues().get(1), ""second"", ""Wrong result"");Assert.assertEquals(result.getRows().get(1).getValues().get(0), 3, ""Wrong result"");Assert.assertEquals(result.getRows().get(1).getValues().get(1), ""third"", ""Wrong result"");}}"	1
4173	public class A {public List<CtMethod<?>> reduce(List<CtMethod<?>> tests) {final List<CtMethod<?>> reducedTests = new ArrayList<>();if (tests.size() > this.maxNumTests) {final Map<Long, List<CtMethod<?>>> valuesToMethod = new HashMap<>();for (CtMethod<?> test : tests) {final long value = sumByteArrayToLong(test.toString().getBytes());if (!valuesToMethod.containsKey(value)) {valuesToMethod.put(value, new ArrayList<>());}valuesToMethod.get(value).add(test);}final Long average = average(valuesToMethod.keySet());while (reducedTests.size() < this.maxNumTests) {final Long furthest = furthest(valuesToMethod.keySet(), average);reducedTests.add(valuesToMethod.get(furthest).get(0));if (valuesToMethod.get(furthest).isEmpty()) {valuesToMethod.remove(furthest);} else {valuesToMethod.get(furthest).remove(0);if (valuesToMethod.get(furthest).isEmpty()) {valuesToMethod.remove(furthest);}}}}if (reducedTests.isEmpty()) {reducedTests.addAll(tests);}return reducedTests;}}	2
4174	"public class A {@Overridepublic void validate(Action action, ServiceContext ctx) throws InvalidDocumentException {if (logger.isDebugEnabled()) {}if (action.equals(Action.DELETE)) {return;}try {MultipartServiceContext mctx = (MultipartServiceContext) ctx;CitationauthoritiesCommon citationAuth =(CitationauthoritiesCommon)mctx.getInputPart(mctx.getCommonPartLabel(), CitationauthoritiesCommon.class);String msg = """";boolean invalid = false;if (citationAuth != null) {if (action.equals(Action.CREATE)) {String shortId = citationAuth.getShortIdentifier();if ((shortId != null) && (shortIdBadPattern.matcher(shortId).find())) {invalid = true;msg +=String.format(""shortIdentifier '%s' must only contain standard word characters"", shortId);}} else if (action.equals(Action.UPDATE)) {}}if (invalid) {throw new InvalidDocumentException(msg);}} catch (InvalidDocumentException ide) {throw ide;} catch (Exception e) {throw new InvalidDocumentException(e);}}}"	2
4175	"public class A {@Overridepublic void handleEvent(JsonObject json) {int zone = 0;JsonObject param;try {param = json.getAsJsonArray(""params"").get(0).getAsJsonObject();} catch (NullPointerException e) {logger.debug(""Invalid json in handleEvent"");return;} catch (IndexOutOfBoundsException e) {return;}if (param == null) {return;}if (param.has(""output"")) {String outputStr = param.get(""output"").getAsString();Pattern pattern = Pattern.compile("".*zone=(\\d+)"");Matcher m = pattern.matcher(outputStr);if (m.matches()) {try {zone = Integer.parseInt(m.group(1));} catch (NumberFormatException e) {return;}}}if (json.get(""method"").getAsString().equalsIgnoreCase(""notifyPlayingContentInfo"")) {SonyAudioInput input = new SonyAudioInput();input.input = param.get(""uri"").getAsString();if (param.has(""broadcastFreq"")) {int freq = param.get(""broadcastFreq"").getAsInt();input.radio_freq = Optional.of(freq);checkRadioPreset(input.input);}listener.updateInput(zone, input);listener.updateSeekStation("""");}if (json.get(""method"").getAsString().equalsIgnoreCase(""notifyVolumeInformation"")) {SonyAudioVolume volume = new SonyAudioVolume();int rawVolume = param.get(""volume"").getAsInt();volume.volume = Math.round(100 * (rawVolume - min_volume) / (max_volume - min_volume));volume.mute = param.get(""mute"").getAsString().equalsIgnoreCase(""on"");listener.updateVolume(zone, volume);}if (json.get(""method"").getAsString().equalsIgnoreCase(""notifyPowerStatus"")) {String power = param.get(""status"").getAsString();listener.updatePowerStatus(zone, power.equalsIgnoreCase(""active""));}listener.updateConnectionState(true);}}"	3
4176	public class A {@Overrideprotected void doit() throws WollMuxFehlerException {if (model == null) {return;}model.getDocumentCommands().update();DocumentCommandInterpreter dci =new DocumentCommandInterpreter(documentController, WollMuxFiles.isDebugMode());try {dci.executeTemplateCommands();dci.scanGlobalDocumentCommands();dci.scanInsertFormValueCommands();} catch (WMCommandsFailedException e) {}}}	1
4177	"public class A {@Overridepublic void save(FqlStore fqlStore) {fqlStore.setId(UUID.randomUUID().toString());try {elasticsearchConnection.getClient().prepareIndex().setIndex(FQL_STORE_INDEX).setType(DOCUMENT_TYPE_NAME).setId(fqlStore.getId()).setSource(objectMapper.writeValueAsBytes(fqlStore), XContentType.JSON).execute().get();} catch (Exception e) {throw new FqlPersistenceException(""Couldn't save FQL query: "" + fqlStore.getQuery() + "" Error Message: "" + e.getMessage(),e);}}}"	1
4178	public class A {public static com.liferay.dynamic.data.mapping.model.DDMTemplateSoap getTemplate(long groupId, long classNameId, String templateKey, boolean includeAncestorTemplates)throws RemoteException {try {com.liferay.dynamic.data.mapping.model.DDMTemplate returnValue =DDMTemplateServiceUtil.getTemplate(groupId, classNameId, templateKey, includeAncestorTemplates);return com.liferay.dynamic.data.mapping.model.DDMTemplateSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4179	"public class A {public void testTransaction() throws Exception {ActiveMQConnectionFactory factory =new ActiveMQConnectionFactory(""vm://localhost?broker.persistent=false"");connection = factory.createConnection();queue = new ActiveMQQueue(getClass().getName() + ""."" + getName());producerSession = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);consumerSession = connection.createSession(true, 0);producer = producerSession.createProducer(queue);consumer = consumerSession.createConsumer(queue);consumer.setMessageListener(new MessageListener() {@Overridepublic void onMessage(Message m) {try {TextMessage tm = (TextMessage) m;receivedText = tm.getText();latch.countDown();consumerSession.commit();} catch (JMSException e) {try {consumerSession.rollback();} catch (JMSException e1) {e1.printStackTrace();}e.printStackTrace();}}});connection.start();TextMessage tm = null;try {tm = producerSession.createTextMessage();tm.setText(""Hello, "" + new Date());producer.send(tm);} catch (JMSException e) {e.printStackTrace();}latch.await(2, TimeUnit.SECONDS);assertNotNull(receivedText);}}"	8
4180	public class A {public void onCommit(final long position) {final Listener listener = appendedListeners.remove(position);if (listener != null) {try {listener.onSuccess();} catch (final IllegalArgumentException e) {listener.onIgnore();}metrics.decInflight();} else {}}}	2
4181	"public class A {@GetMapping(RestApi.ARCHIVE_UNIT_INFO + CommonConstants.PATH_ID)@Secured(ServicesData.ROLE_GET_ARCHIVE)public ResponseEntity<ResultsDto> findUnitById(final @PathVariable(""id"") String id) {ParameterChecker.checkParameter(""The Identifier is a mandatory parameter: "", id);return archivesSearchExternalService.findUnitById(id);}}"	1
4182	public class A {@Overridepublic void doDisable() {if (tmSocket != null) {try {tmSocket.close();} catch (IOException e) {}tmSocket = null;}if (thread != null) {thread.interrupt();}}}	1
4183	public class A {@Overrideprotected ResourcePreProcessor getStrategyForAlias(final String alias) {ResourcePreProcessor processor = super.getStrategyForAlias(alias);if (processor == null) {final String extension = FilenameUtils.getExtension(alias);boolean hasExtension = !StringUtils.isEmpty(extension);if (hasExtension) {final String processorName = FilenameUtils.getBaseName(alias);processor = super.getStrategyForAlias(processorName);if (processor != null) {processor = ExtensionsAwareProcessorDecorator.decorate(processor).addExtension(extension);}}}return processor;}}	2
4184	"public class A {@SuppressWarnings({""null"", ""unused""})@Overridepublic void processMessage(String topic, byte[] payload) {final ScheduledFuture<?> scheduledFuture = this.scheduledFuture;if (scheduledFuture != null) {scheduledFuture.cancel(false);this.scheduledFuture = null;}if (payload.length == 0) {return;}String valueStr = new String(payload, StandardCharsets.UTF_8);final MQTTvalueTransform transform = field.getAnnotation(MQTTvalueTransform.class);Object value;if (transform != null) {valueStr = transform.prefix() + valueStr + transform.suffix();value =field.getType().isArray()? valueStr.split(transform.splitCharacter()): numberConvert(valueStr, field.getType());} else if (field.getType().isArray()) {throw new IllegalArgumentException(""No split character defined!"");} else {value = numberConvert(valueStr, field.getType());}receivedValue = true;changeConsumer.fieldChanged(field, value);future.complete(null);}}"	1
4185	"public class A {@Overridepublic void removeConsumedToken(String token) {Connection conn = null;PreparedStatement stat = null;try {conn = this.getConnection();conn.setAutoCommit(false);stat = conn.prepareStatement(DELETE_USED_TOKEN);stat.setString(1, token);stat.executeUpdate();conn.commit();} catch (Throwable t) {this.executeRollback(conn);throw new RuntimeException(""Error removing consumed Token"", t);} finally {closeDaoResources(null, stat, conn);}}}"	1
4186	public class A {public static void sideInputPatterns() {Pipeline p = Pipeline.create();PCollectionView<Map<String, String>> map =p.apply(GenerateSequence.from(0).withRate(1, Duration.standardSeconds(5L))).apply(Window.<Long>into(new GlobalWindows()).triggering(Repeatedly.forever(AfterProcessingTime.pastFirstElementInPane())).discardingFiredPanes()).apply(ParDo.of(new DoFn<Long, Map<String, String>>() {@ProcessElementpublic void process(@Element Long input, OutputReceiver<Map<String, String>> o) {o.output(PlaceholderExternalService.readTestData());}})).apply(View.asSingleton());p.apply(GenerateSequence.from(0).withRate(1, Duration.standardSeconds(1L))).apply(Window.into(FixedWindows.of(Duration.standardSeconds(1)))).apply(Sum.longsGlobally().withoutDefaults()).apply(ParDo.of(new DoFn<Long, KV<Long, Long>>() {@ProcessElementpublic void process(ProcessContext c) {Map<String, String> keyMap = c.sideInput(map);c.outputWithTimestamp(KV.of(1L, c.element()), Instant.now());}}).withSideInputs(map));}}	1
4187	"public class A {private void checkIfPackageExistsAndLog(String pkg) {String resourcePath = pkg.replace(""."", ""/"");URL resource = getClass().getClassLoader().getResource(resourcePath);if (resource != null) {} else {}}}"	2
4188	"public class A {protected void init() throws MojoExecutionException, MojoFailureException {super.init();if (moduleId != null) {ModuleConfig moduleConfig = createModuleConfigFromId(moduleId);if (modules == null) {modules = new ModuleConfig[] {moduleConfig};} else {List list = Arrays.asList(modules);ArrayList aList = new ArrayList(list);aList.add(moduleConfig);modules = (ModuleConfig[]) aList.toArray(new ModuleConfig[list.size()]);}} else if (modules == null || modules.length == 0) {throw new MojoExecutionException(""At least one module configuration (or moduleId) must be specified"");}}}"	1
4189	public class A {public KaleoDefinition getKaleoDefinition(KaleoDefinitionVersion kaleoDefinitionVersion) {try {if (kaleoDefinitionVersion != null) {return kaleoDefinitionVersion.getKaleoDefinition();}} catch (PortalException portalException) {if (_log.isDebugEnabled()) {}}return null;}}	1
4190	public class A {@Overridepublic StreamObserver<BrowserErrorLog> collectErrorLogs(final StreamObserver<Commands> responseObserver) {return new StreamObserver<BrowserErrorLog>() {@Overridepublic void onNext(final BrowserErrorLog browserErrorLog) {if (log.isDebugEnabled()) {}HistogramMetrics.Timer timer = errorLogHistogram.createTimer();try {ErrorLogAnalyzer analyzer =new ErrorLogAnalyzer(moduleManager, errorLogListenerManager, config);analyzer.doAnalysis(browserErrorLog);} catch (Throwable e) {logErrorCounter.inc();} finally {timer.finish();}}@Overridepublic void onError(final Throwable throwable) {responseObserver.onCompleted();}@Overridepublic void onCompleted() {responseObserver.onNext(Commands.newBuilder().build());responseObserver.onCompleted();}};}}	3
4191	public class A {public static void deleteCPDefinitionSpecificationOptionValues(long cpDefinitionId)throws RemoteException {try {CPDefinitionSpecificationOptionValueServiceUtil.deleteCPDefinitionSpecificationOptionValues(cpDefinitionId);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4192	"public class A {protected InputStream getInputStream(String profileId) throws IOException {final String profileUrl = registryBaseURl + profileId + ""/xml"";return new URL(profileUrl).openStream();}}"	1
4193	public class A {public static FutureCallback<RpcResult<Void>> logResultCallback(final NodeId nodeId, final String prefix) {return new FutureCallback<>() {@Overridepublic void onSuccess(final RpcResult<Void> result) {if (result != null) {if (result.isSuccessful()) {} else {final Collection<RpcError> errors =requireNonNullElse(result.getErrors(), ImmutableList.of());}} else {}}@Overridepublic void onFailure(final Throwable failure) {}};}}	4
4194	"public class A {private void updateRouterNetworkRef(Connection conn) {try (PreparedStatement pstmt =conn.prepareStatement(""SELECT d.id, d.network_id FROM `cloud`.`domain_router` d, `cloud`.`vm_instance` v ""+ ""WHERE d.id=v.id AND v.removed is NULL"");PreparedStatement pstmt1 =conn.prepareStatement(""SELECT guest_type from `cloud`.`networks` where id=?"");PreparedStatement pstmt2 =conn.prepareStatement(""INSERT INTO `cloud`.`router_network_ref` (router_id, network_id, guest_type) ""+ ""VALUES (?, ?, ?)"");ResultSet rs = pstmt.executeQuery(); ) {while (rs.next()) {Long routerId = rs.getLong(1);Long networkId = rs.getLong(2);pstmt1.setLong(1, networkId);try (ResultSet rs1 = pstmt1.executeQuery(); ) {rs1.next();String networkType = rs1.getString(1);pstmt2.setLong(1, routerId);pstmt2.setLong(2, networkId);pstmt2.setString(3, networkType);pstmt2.executeUpdate();}}} catch (SQLException e) {throw new CloudRuntimeException(""Failed to update the router/network reference "", e);}}}"	3
4195	"public class A {@RequestMapping(value = EXTRACTOR_TASKS + ""/*"", method = RequestMethod.PUT)public void updateTask(HttpServletRequest request, HttpServletResponse response)throws Exception {String jsonTask = FileUtils.asString(request.getInputStream());TaskDescriptor taskParam = new TaskDescriptor(jsonTask);String id = taskParam.getID();TaskDescriptor currentTask;try {currentTask = findTask(id);} catch (TaskNotFoundException e) {return;}if (currentTask.getPriority() != taskParam.getPriority()) {try {updatePriority(id, taskParam.getPriority().ordinal());} catch (Exception e) {}}if (currentTask.getStatus() != taskParam.getStatus()) {this.extractionManager.updateStatus(id, taskParam.getStatus());}}}"	2
4196	public class A {@OnWebSocketConnectpublic void onConnect(Session session) {this.session = session;}}	1
4197	public class A {private VloReport getPreviousReport() throws JAXBException {final VloReportMarshaller marshaller = new VloReportMarshaller();final VloReport previousReport;if (reportHistoryFile.exists() && reportHistoryFile.canRead()) {previousReport = marshaller.unmarshall(new StreamSource(this.reportHistoryFile));} else {previousReport = null;}return previousReport;}}	1
4198	public class A {private boolean isDatabaseAvailable()throws ParserConfigurationException, SAXException, IOException, ClassNotFoundException {final PersistenceXmlHandler configuration = parsePersistenceXml();Class.forName(configuration.getDriverClass());boolean available;try {final Connection testConnection =DriverManager.getConnection(configuration.getConnectionUrl(),configuration.getUsername(),configuration.getPassword());testConnection.close();available = true;} catch (SQLException ex) {available = false;}return available;}}	1
4199	public class A {public WebSocketAPI getMatchedAPI(WebSocketFrameRequest webSocketFrameRequest) {Map<String, String> extAuthMetadata =webSocketFrameRequest.getMetadata().getExtAuthzMetadataMap();String vHost = extAuthMetadata.get(APIConstants.GW_VHOST_PARAM);String basePath = extAuthMetadata.get(APIConstants.GW_BASE_PATH_PARAM);String version = extAuthMetadata.get(APIConstants.GW_VERSION_PARAM);String apiKey = getApiKey(vHost, basePath, version);if (logger.isDebugEnabled()) {}return (WebSocketAPI) apis.get(apiKey);}}	1
4200	public class A {private void checkBulkProcessorAvailability() {while (!isBulkProcessorAvailable()) {try {if (logger.isDebugEnabled()) {}Thread.sleep(2000);} catch (InterruptedException e) {}}}}	2
4201	public class A {@Deprecatedpublic static com.liferay.portal.kernel.model.UserSoap updateUser(long userId,String oldPassword,String newPassword1,String newPassword2,boolean passwordReset,String reminderQueryQuestion,String reminderQueryAnswer,String screenName,String emailAddress,long facebookId,String openId,boolean hasPortrait,byte[] portraitBytes,String languageId,String timeZoneId,String greeting,String comments,String firstName,String middleName,String lastName,long prefixId,long suffixId,boolean male,int birthdayMonth,int birthdayDay,int birthdayYear,String smsSn,String facebookSn,String jabberSn,String skypeSn,String twitterSn,String jobTitle,long[] groupIds,long[] organizationIds,long[] roleIds,com.liferay.portal.kernel.model.UserGroupRoleSoap[] userGroupRoles,long[] userGroupIds,com.liferay.portal.kernel.model.AddressSoap[] addresses,com.liferay.portal.kernel.model.EmailAddressSoap[] emailAddresses,com.liferay.portal.kernel.model.PhoneSoap[] phones,com.liferay.portal.kernel.model.WebsiteSoap[] websites,com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap[] announcementsDelivers,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.portal.kernel.model.User returnValue =UserServiceUtil.updateUser(userId,oldPassword,newPassword1,newPassword2,passwordReset,reminderQueryQuestion,reminderQueryAnswer,screenName,emailAddress,facebookId,openId,hasPortrait,portraitBytes,languageId,timeZoneId,greeting,comments,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,smsSn,facebookSn,jabberSn,skypeSn,twitterSn,jobTitle,groupIds,organizationIds,roleIds,com.liferay.portal.model.impl.UserGroupRoleModelImpl.toModels(userGroupRoles),userGroupIds,com.liferay.portal.model.impl.AddressModelImpl.toModels(addresses),com.liferay.portal.model.impl.EmailAddressModelImpl.toModels(emailAddresses),com.liferay.portal.model.impl.PhoneModelImpl.toModels(phones),com.liferay.portal.model.impl.WebsiteModelImpl.toModels(websites),com.liferay.portlet.announcements.model.impl.AnnouncementsDeliveryModelImpl.toModels(announcementsDelivers),serviceContext);return com.liferay.portal.kernel.model.UserSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4202	public class A {@Overridepublic boolean unbindFrom(ZigBeeEndpoint endpoint, int clusterId)throws ZigBeeNetworkManagerException {final ZDO_UNBIND_RSP response =networkManager.sendZDOUnbind(new ZDO_UNBIND_REQ((short) getNode().getNetworkAddress(),(short) clusterId,IEEEAddress.fromColonNotation(getNode().getIeeeAddress()),(byte) endPointAddress,IEEEAddress.fromColonNotation(endpoint.getNode().getIeeeAddress()),(byte) endpoint.getEndPointAddress()));if (response == null || response.Status != 0) {return false;}return true;}}	2
4203	public class A {@Overridepublic void handleMessage(String message, KaleidescapeHandler handler) {Matcher matcher = p.matcher(message);if (matcher.find()) {handler.updateChannel(PLAY_MODE, new StringType(KaleidescapeStatusCodes.PLAY_MODE.get(matcher.group(1))));handler.updateChannel(PLAY_SPEED, new StringType(matcher.group(2)));handler.updateChannel(TITLE_NUM, new DecimalType(Integer.parseInt(matcher.group(3))));handler.updateChannel(TITLE_LENGTH,new QuantityType<Time>(Integer.parseInt(matcher.group(4)), handler.apiSecondUnit));handler.updateChannel(TITLE_LOC,new QuantityType<Time>(Integer.parseInt(matcher.group(5)), handler.apiSecondUnit));handler.updateChannel(CHAPTER_NUM, new DecimalType(Integer.parseInt(matcher.group(6))));handler.updateChannel(CHAPTER_LENGTH,new QuantityType<Time>(Integer.parseInt(matcher.group(7)), handler.apiSecondUnit));handler.updateChannel(CHAPTER_LOC,new QuantityType<Time>(Integer.parseInt(matcher.group(8)), handler.apiSecondUnit));} else {}}}	1
4204	public class A {private void persistCoviCodes(LocalDate localDate) throws Exception {List<CoviCode> coviCodes = this.coviCodeGenerator.generateCoviCodes(localDate);coviCodes.forEach(code ->coviCodeRepository.saveDoNothingOnConflict(code.getCode(), code.getStartInterval(), code.getEndInterval()));}}	2
4205	"public class A {@Overrideprotected void doStart() throws Exception {super.doStart();if (transformerFactory == null) {createTransformerFactory();}if (rules == null) {try {InputStream schRules =ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext(), path);rules = TemplatesFactory.newInstance().getTemplates(schRules, transformerFactory);} catch (Exception classPathException) {try {InputStream schRules = FileUtils.openInputStream(new File(path));rules = TemplatesFactory.newInstance().getTemplates(schRules, transformerFactory);} catch (FileNotFoundException e) {throw classPathException;}}if (rules == null) {throw new SchematronConfigException(""Failed to load schematron rules: "" + path);}}}}"	4
4206	"public class A {public static String getHostname(SocketAddress socketAddress) {try {InetSocketAddress inetSocketAddress = (InetSocketAddress) socketAddress;String hostname = inetSocketAddress.getHostName();if (hostname != null) {return hostname;} else {throw new NullPointerException(""The returned hostname is null"");}} catch (Exception e) {}return """";}}"	1
4207	"public class A {protected void doReadyGo(CountDownRaceExecution execution) {if (_runnerRequestMap.isEmpty()) {return;}final int runnerCount = _runnerRequestMap.size();final CountDownLatch ready = new CountDownLatch(runnerCount);final CountDownLatch start = new CountDownLatch(1);final CountDownLatch goal = new CountDownLatch(runnerCount);final CountDownRaceLatch ourLatch = new CountDownRaceLatch(runnerCount);final Object lockObj = new Object();final List<Future<Void>> futureList = new ArrayList<Future<Void>>();for (Entry<Integer, Object> entry : _runnerRequestMap.entrySet()) {final Integer entryNumber = entry.getKey();final Object parameter = entry.getValue();final Callable<Void> callable =createCallable(execution, ready, start, goal, ourLatch, entryNumber, parameter, lockObj);final Future<Void> future = _service.submit(callable);futureList.add(future);}if (_log.isDebugEnabled()) {}start.countDown();try {goal.await();if (_log.isDebugEnabled()) {}} catch (InterruptedException e) {String msg = ""goal.await() was interrupted!"";throw new IllegalStateException(msg, e);}handleFuture(futureList, execution);}}"	2
4208	public class A {@Overridepublic Boolean updateWebHook(JsonObject registerWebhookjson) throws InsightsCustomException {Boolean status = false;try {WebHookConfig webHookConfig = populateWebHookConfiguration(registerWebhookjson);status = webhookConfigurationDAL.updateWebHookConfiguration(webHookConfig);} catch (Exception e) {throw new InsightsCustomException(e.toString());}return status;}}	1
4209	public class A {void tryToRefreshAccessToken() {final String currentRefreshToken = state.getRefreshToken();lastRefreshTokenTried.getAndUpdate(last -> {if (isFirstTime.get()) {return null;}if (last != null && last.equals(currentRefreshToken)) {return last;}return null;});if (!lastRefreshTokenTried.compareAndSet(null, currentRefreshToken)) {return;}try (CloseableHttpClient client = createHttpClient()) {final HttpUriRequest request = createHttpRequest();try (CloseableHttpResponse response = client.execute(request)) {final StatusLine statusLine = response.getStatusLine();if (statusLine.getStatusCode() != HttpStatus.SC_OK) {final HttpEntity entity = response.getEntity();return;}final HttpEntity entity = response.getEntity();processRefreshTokenResponse(entity);}} catch (final IOException e) {}}}	4
4210	public class A {@Overridepublic Single<PartitionKeyRange> tryGetPartitionKeyRangeByIdAsync(String collectionResourceId,String partitionKeyRangeId,boolean forceRefresh,Map<String, Object> properties) {Single<CollectionRoutingMap> routingMapObs =tryLookupAsync(collectionResourceId, null, properties);return routingMapObs.flatMap(routingMap -> {if (forceRefresh && routingMap != null) {return tryLookupAsync(collectionResourceId, routingMap, properties);}return Single.just(routingMap);}).map(routingMap -> {if (routingMap != null) {return routingMap.getRangeByPartitionKeyRangeId(partitionKeyRangeId);} else {return null;}});}}	1
4211	public class A {@Overridepublic WikiPage findByPrimaryKey(Serializable primaryKey) throws NoSuchPageException {WikiPage wikiPage = fetchByPrimaryKey(primaryKey);if (wikiPage == null) {if (_log.isDebugEnabled()) {}throw new NoSuchPageException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return wikiPage;}}	1
4212	"public class A {public synchronized byte[] softReset() {if (debug) {}ByteArrayOutputStream baos = new ByteArrayOutputStream();try {appendMessage(baos, MAGIC_NUMBER);appendMessage(baos, 1);appendMessage(baos, SOFT_RESET);byte[] message = sendMessage(baos);if (ackEnabled) {waitForAck();}if (record != null) {txBuffer.append(""> softReset"");txBuffer.append(""\n"");record.write(txBuffer.toString().getBytes());txBuffer.setLength(0);}return message;} catch (Exception e) {return null;}}}"	2
4213	"public class A {public BucketRegion getInitializedBucketForId(Object key, Integer bucketId)throws ForceReattemptException {final BucketRegion bucketRegion = this.localBucket2RegionMap.get(bucketId);if (null == bucketRegion) {this.partitionedRegion.checkReadiness();if (logger.isDebugEnabled()) {}ForceReattemptException fre =new BucketNotFoundException(String.format(""Bucket id %s not found on VM %s"",new Object[] {this.partitionedRegion.bucketStringForLogs(bucketId.intValue()),this.partitionedRegion.getMyId()}));if (key != null) {fre.setHash(key.hashCode());}throw fre;}bucketRegion.waitForData();return bucketRegion;}}"	1
4214	public class A {public boolean updateDocument() {try {XNamed textSection = UNO.XNamed(textSections.get(sectionNameComplete));String nameBase = generateCompleteName();String name = nameBase;int count = 1;while (textSections.containsKey(name)) {if (name.equals(sectionNameComplete)) return true;name = nameBase + (count++);}textSection.setName(name);sectionNameComplete = name;return true;} catch (Exception x) {return false;}}}	1
4215	"public class A {private void processLicenseSolution(ServiceInstance serviceInstance, JSONArray licenseSolutions) {List<GenericVnf> vnfs = serviceInstance.getVnfs();for (int i = 0; i < licenseSolutions.length(); i++) {JSONObject licenseSolution = licenseSolutions.getJSONObject(i);for (GenericVnf vnf : vnfs) {if (licenseSolution.getString(SERVICE_RESOURCE_ID).equals(vnf.getVnfId())) {License license = new License();JSONArray entitlementPools = licenseSolution.getJSONArray(""entitlementPoolUUID"");List<String> entitlementPoolsList = jsonUtils.StringArrayToList(entitlementPools);license.setEntitlementPoolUuids(entitlementPoolsList);JSONArray licenseKeys = licenseSolution.getJSONArray(""licenseKeyGroupUUID"");List<String> licenseKeysList = jsonUtils.StringArrayToList(licenseKeys);license.setLicenseKeyGroupUuids(licenseKeysList);vnf.setLicense(license);}}}}}"	1
4216	public class A {public void executeJob(String processInstanceId) {List<String> deadLetterJobsIds = getDeadLetterJobsDistinctIds(processInstanceId);if (deadLetterJobsIds.isEmpty()) {return;}moveDeadLetterJobsToExecutableJobs(deadLetterJobsIds);}}	1
4217	"public class A {@Overridepublic void run() {try {ApplicationConfigInterface.loadConfiguration();if (!isCorrelationExecutionInProgress) {isCorrelationExecutionInProgress = true;CorrelationExecutor correlationsExecutor = new CorrelationExecutor();correlationsExecutor.execute();isCorrelationExecutionInProgress = false;}EngineStatusLogger.getInstance().createEngineStatusNode(""Correlation Execution Completed"", PlatformServiceConstants.SUCCESS);} catch (Exception e) {EngineStatusLogger.getInstance().createEngineStatusNode(""Correlation Execution has some issue  "", PlatformServiceConstants.FAILURE);}}}"	3
4218	public class A {private void reportFailure(Collection<SpringBootExceptionReporter> exceptionReporters, Throwable failure) {try {for (SpringBootExceptionReporter reporter : exceptionReporters) {if (reporter.reportException(failure)) {registerLoggedException(failure);return;}}} catch (Throwable ex) {}if (logger.isErrorEnabled()) {registerLoggedException(failure);}}}	1
4219	public class A {@Overridepublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {return this.methodMap.computeIfAbsent(method.getName().toLowerCase(),(key) -> {try {return this.eventData.getClass().getMethod(method.getName());} catch (NoSuchMethodException exception) {throw new RuntimeException(exception);}}).invoke(this.eventData);}}	1
4220	public class A {public boolean receiveMessage(Message msg) {Header hdr = msg.getHeader(this.corr_id);if (hdr == null || hdr.corrId != this.corr_id) {return false;}if (hdr instanceof MultiDestinationHeader) {Address[] exclusion_list = ((MultiDestinationHeader) hdr).exclusion_list;if (local_addr != null && Util.contains(local_addr, exclusion_list)) {return true;}}dispatch(msg, hdr);return true;}}	2
4221	public class A {@Overridepublic void after(Object target, Object[] args, Object result, Throwable throwable) {if (isDebug) {logger.afterInterceptor(target, args, result, throwable);}final Trace trace = traceContext.currentTraceObject();if (trace == null) {return;}try {final SpanEventRecorder recorder = trace.currentSpanEventRecorder();recorder.recordApi(this.descriptor);recorder.recordServiceType(AgentSdkAsyncConstants.AGENT_SDK_ASYNC);recorder.recordException(throwable);boolean r = validate(result);if (r) {final AsyncContext asyncContext = recorder.recordNextAsyncContext();((AsyncContextAccessor) result)._$PINPOINT$_setAsyncContext(asyncContext);if (isDebug) {}}} finally {trace.traceBlockEnd();}}}	1
4222	"public class A {@BeforeMethodpublic void setUp(final Method testMethod) throws Throwable {couchbaseProvided = Boolean.parseBoolean(System.getProperty(""couchbase.provided"", ""false""));final int couchbasePort = Integer.parseInt(System.getProperty(""couchbase.port"", ""18091""));if (!couchbaseProvided) {cluster.add(setupCouchbase(couchbasePort));}try {System.setProperty(""org.apache.catalina.startup.EXIT_ON_INIT_FAILURE"", ""true"");_tomcat1 =getTestUtils().tomcatBuilder().port(_portTomcat1).memcachedNodes(""http://localhost:"" + couchbasePort + ""/pools"").sticky(true).memcachedProtocol(""binary"").username(""default"").buildAndStart();} catch (final Throwable e) {throw e;}setupCouchbaseClient();transcoderService =new TranscoderService(new JavaSerializationTranscoder(_tomcat1.getManager()));}}"	1
4223	public class A {public void send(final RequestMessage requestMessage, final String messageType) {this.jmsTemplate.send(session -> {final ObjectMessage objectMessage = session.createObjectMessage(requestMessage);objectMessage.setJMSType(messageType);objectMessage.setStringProperty(Constants.ORGANISATION_IDENTIFICATION,requestMessage.getOrganisationIdentification());objectMessage.setStringProperty(Constants.DEVICE_IDENTIFICATION, requestMessage.getDeviceIdentification());return objectMessage;});}}	1
4224	public class A {@Overridepublic void requestAgentInfo(PAgentInfo agentInfo, StreamObserver<PResult> responseObserver) {if (isDebug) {}try {executor.execute(new Runnable() {@Overridepublic void run() {final Message<PAgentInfo> message =newMessage(agentInfo, DefaultTBaseLocator.AGENT_INFO);simpleRequestHandlerAdaptor.request(message, responseObserver);AgentService.this.pingEventHandler.update((short) agentInfo.getServiceType());}});} catch (RejectedExecutionException ree) {}}}	2
4225	public class A {private Optional<String> getAmiIdFromEC2Api(final EC2InstanceContext context) {final String instanceId = context.getInstanceId();try {return context.getClient(AmazonEC2Client.class).describeInstances(new DescribeInstancesRequest().withInstanceIds(instanceId)).getReservations().stream().map(Reservation::getInstances).flatMap(Collection::stream).filter(i -> i.getInstanceId().equals(instanceId)).map(Instance::getImageId).findFirst();} catch (final AmazonClientException e) {return empty();}}}	1
4226	"public class A {private Object findEjb(Map<String, CacheEntry> map,String className,String sessionId,String jndiName,int warnLimit) {CacheEntry entry = map.get(getMapKey(className, sessionId));if (entry == null && jndiName != null) {synchronized (this) {entry = map.get(getMapKey(className, sessionId));if (entry == null) {Object ejb = lookupInJndi(jndiName);if (ejb != null) {map.put(getMapKey(className, sessionId), entry = new CacheEntry(ejb));int size = map.size();if (size > warnLimit) {String type = sessionId == null ? ""stateless"" : ""stateful"";}}}}}if (entry == null) {return null;} else {entry.setLastAccessTime(System.currentTimeMillis());return entry.getBean();}}}"	1
4227	public class A {@Overridepublic String onScript(String script, Document document, String languageId, Map<String, String> tokens) {if (_log.isDebugEnabled()) {}return replace(script);}}	1
4228	public class A {public Properties getConnectionProperties(String propertyValue) throws BeelineSiteParseException {Properties props = new Properties();String fileLocation = getFileLocation();if (fileLocation == null) {return props;}Configuration conf = new Configuration(false);conf.addResource(new Path(new File(fileLocation).toURI()));try {for (Entry<String, String> kv : conf) {String key = kv.getKey();if (key.startsWith(BEELINE_CONNECTION_NAMED_JDBC_URL_PREFIX)&& (propertyValue.equalsIgnoreCase(kv.getValue()))) {props.setProperty(key.substring(BEELINE_CONNECTION_NAMED_JDBC_URL_PREFIX.length()), conf.get(key));}}} catch (Exception e) {throw new BeelineSiteParseException(e.getMessage(), e);}return props;}}	2
4229	public class A {@Overridepublic ObjectLayout findByPrimaryKey(Serializable primaryKey) throws NoSuchLayoutException {ObjectLayout objectLayout = fetchByPrimaryKey(primaryKey);if (objectLayout == null) {if (_log.isDebugEnabled()) {}throw new NoSuchLayoutException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return objectLayout;}}	1
4230	public class A {@Overridepublic List<AbstractPlan> buildPlans(final String csarName, final AbstractDefinitions definitions) {final List<AbstractPlan> plans = new ArrayList<>();for (final AbstractServiceTemplate serviceTemplate : definitions.getServiceTemplates()) {if (!serviceTemplate.hasBuildPlan()) {final BPELPlan newBuildPlan = buildPlan(csarName, definitions, serviceTemplate);if (newBuildPlan != null) {plans.add(newBuildPlan);}} else {}}if (!plans.isEmpty()) {}return plans;}}	4
4231	public class A {@Overridepublic void register(EhcacheXAResource resource, boolean forRecovery) {}}	1
4232	public class A {public MProcResult applyMProcDelivery(final MProcRuleRaProvider anMProcRuleRa,Sms sms,boolean deliveryFailure,ProcessingType processingType) {if (this.mprocs.size() == 0) {return new MProcResult();}FastList<MProcRule> cur = this.mprocs;PostDeliveryProcessorImpl pap =new PostDeliveryProcessorImpl(this.smscPropertiesManagement.getDefaultValidityPeriodHours(),this.smscPropertiesManagement.getMaxValidityPeriodHours(),logger,deliveryFailure);MProcMessage message = new MProcMessageImpl(sms, processingType, null);try {for (FastList.Node<MProcRule> n = cur.head(), end = cur.tail(); (n = n.getNext()) != end; ) {MProcRule rule = n.getValue();if (rule.isForPostDeliveryState() && rule.matchesPostDelivery(message)) {if (logger.isDebugEnabled()) {}rule.onPostDelivery(anMProcRuleRa, pap, message);}}} catch (Throwable e) {return new MProcResult();}FastList<MProcNewMessage> newMsgs = pap.getPostedMessages();MProcResult res = new MProcResult();FastList<Sms> res0 = new FastList<Sms>();for (FastList.Node<MProcNewMessage> n = newMsgs.head(), end = newMsgs.tail();(n = n.getNext()) != end; ) {MProcNewMessageImpl newMsg = (MProcNewMessageImpl) n.getValue();res0.add(newMsg.getSmsContent());}res.setMessageList(res0);if (pap.isNeedRerouteMessages()) {res.setMessageIsRerouted(true);res.setNewNetworkId(pap.getNewNetworkId());}return res;}}	2
4233	public class A {@Overridepublic void warn(Throwable throwable) {try {} catch (Exception exception) {printMsg(throwable.getMessage());}}}	1
4234	public class A {@Overridepublic Object visit(Id filter, Object userData) {String idName;try {idName = featureModel.getEntityMetadata().getIdentifierPropertyName();} catch (LayerException e) {idName = HIBERNATE_ID;}Collection<?> c = (Collection<?>) castLiteral(filter.getIdentifiers(), idName);return Restrictions.in(idName, c);}}	1
4235	"public class A {public @Nullable StationStatus getStationStatus(String stationUUID)throws CommunicationException, ConfigurationException {if (!loggedIn) {return null;}String response = sendPost(STATUS_URL, gson.toJson(new StatusRequest(stationUUID)));if (response == null) {throw new CommunicationException(""No response received from portal"");}BaseResponse semsResponse = gson.fromJson(response, BaseResponse.class);if (semsResponse == null) {throw new CommunicationException(""Portal reponse not understood"");}if (semsResponse.isOk()) {StatusResponse statusResponse = gson.fromJson(response, StatusResponse.class);if (statusResponse == null) {throw new CommunicationException(""Portal reponse not understood"");}currentStatus = statusResponse.getStatus();updateStatus(ThingStatus.ONLINE);return currentStatus;} else if (semsResponse.isSessionInvalid()) {login();return getStationStatus(stationUUID);} else if (semsResponse.isError()) {throw new ConfigurationException(""ERROR status code received from SEMS portal. Please check your station ID"");} else {throw new CommunicationException(String.format(""Unknown status code received from SEMS portal: %s - %s"",semsResponse.getCode(), semsResponse.getMsg()));}}}"	2
4236	"public class A {public String decodeSAMLPostResponse(String encodedReponse) {String trimmed = encodedReponse.replaceAll(""\r\n"", """");String base64DecodedResponse = new String(Base64.decodeBase64(trimmed));return base64DecodedResponse;}}"	1
4237	public class A {void initValue() {String effectiveKey = doUpdateFinalValue();}}	1
4238	"public class A {public void load() throws RuntimeException {List<Organisation> tempOrganisations;tempOrganisations = registryManager.getOrganisations();Organisation o = new Organisation();o.setName("""");organisations.add(o);organisations.addAll(tempOrganisations);}}"	2
4239	"public class A {@Overridepublic LayoutPageTemplateEntry findByG_LPTEK(long groupId, String layoutPageTemplateEntryKey)throws NoSuchPageTemplateEntryException {LayoutPageTemplateEntry layoutPageTemplateEntry =fetchByG_LPTEK(groupId, layoutPageTemplateEntryKey);if (layoutPageTemplateEntry == null) {StringBundler sb = new StringBundler(6);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""groupId="");sb.append(groupId);sb.append("", layoutPageTemplateEntryKey="");sb.append(layoutPageTemplateEntryKey);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchPageTemplateEntryException(sb.toString());}return layoutPageTemplateEntry;}}"	1
4240	public class A {@Overridepublic void error(String msg, Object[] os, Throwable t) {}}	2
4241	public class A {@Testpublic void loadCacheErrorDirectTemp() throws Exception {loadDirectBackendTemp(64 * 1024 * 1024);}}	2
4242	public class A {@Overridepublic Operator run() {long start = System.currentTimeMillis();UResultOperator uResultOperator = new UResultOperator(_planNode.run());long end = System.currentTimeMillis();return uResultOperator;}}	1
4243	public class A {public void persist(StgSysNetzMapping transientInstance) {try {sessionFactory.getCurrentSession().persist(transientInstance);} catch (RuntimeException re) {throw re;}}}	3
4244	public class A {@Overridepublic IRingSet getConnectedRings(IRing ring) {return super.getConnectedRings(ring);}}	1
4245	public class A {@Overridepublic void onInterceptorConfig(Interceptors interceptors) {for (JbootAppListener listener : listeners) {try {listener.onInterceptorConfig(interceptors);} catch (Throwable ex) {}}}}	1
4246	public class A {private boolean determineReadOnly(IW itemWrapper, WrapperContext context) {Boolean readOnly = context.getReadOnly();if (readOnly != null) {return readOnly;}ItemStatus objectStatus = context.getObjectStatus();if (ItemStatus.NOT_CHANGED == objectStatus) {if (!itemWrapper.canModify()) {return true;}}return false;}}	2
4247	"public class A {@RestAccessControl(permission = Permission.SUPERUSER)@RequestMapping(value = ""/profileTypeAttributes"",method = RequestMethod.GET,produces = MediaType.APPLICATION_JSON_VALUE)public ResponseEntity<PagedRestResponse<String>> getUserProfileAttributeTypes(RestListRequest requestList) throws JsonProcessingException {this.getProfileTypeValidator().validateRestListRequest(requestList, AttributeTypeDto.class);PagedMetadata<String> result = this.getUserProfileTypeService().getAttributeTypes(requestList);this.getProfileTypeValidator().validateRestListResult(requestList, result);return new ResponseEntity<>(new PagedRestResponse<>(result), HttpStatus.OK);}}"	1
4248	public class A {@Overridepublic List<String> getPrimarySpringFiles() {final List<String> springFileLocations = new ArrayList<String>();springFileLocations.add(KRAD_SPRING_BEANS_PATH);if (isIncludeKnsSpringBeans()) {springFileLocations.add(KNS_SPRING_BEANS_PATH);}return springFileLocations;}}	1
4249	"public class A {@SuppressWarnings(""unchecked"")private void register(final G gateway, final int attempt, final long timeoutMillis) {if (canceled) {return;}try {CompletableFuture<RegistrationResponse> registrationFuture =invokeRegistration(gateway, fencingToken, timeoutMillis);CompletableFuture<Void> registrationAcceptFuture =registrationFuture.thenAcceptAsync((RegistrationResponse result) -> {if (!isCanceled()) {if (result instanceof RegistrationResponse.Success) {S success = (S) result;completionFuture.complete(RetryingRegistrationResult.success(gateway, success));} else if (result instanceof RegistrationResponse.Rejection) {R rejection = (R) result;completionFuture.complete(RetryingRegistrationResult.rejection(rejection));} else {if (result instanceof RegistrationResponse.Failure) {RegistrationResponse.Failure failure = (RegistrationResponse.Failure) result;} else {}registerLater(gateway,1,retryingRegistrationConfiguration.getInitialRegistrationTimeoutMillis(),retryingRegistrationConfiguration.getRefusedDelayMillis());}}},rpcService.getExecutor());registrationAcceptFuture.whenCompleteAsync((Void v, Throwable failure) -> {if (failure != null && !isCanceled()) {if (ExceptionUtils.stripCompletionException(failure) instanceof TimeoutException) {if (log.isDebugEnabled()) {}long newTimeoutMillis =Math.min(2 * timeoutMillis,retryingRegistrationConfiguration.getMaxRegistrationTimeoutMillis());register(gateway, attempt + 1, newTimeoutMillis);} else {registerLater(gateway,1,retryingRegistrationConfiguration.getInitialRegistrationTimeoutMillis(),retryingRegistrationConfiguration.getErrorDelayMillis());}}},rpcService.getExecutor());} catch (Throwable t) {completionFuture.completeExceptionally(t);cancel();}}}"	9
4250	"public class A {@Overridepublic void add(Entry entry) throws LdapException {if (entry == null) {String msg = ""Cannot add an empty entry"";throw new IllegalArgumentException(msg);}AddRequest addRequest = new AddRequestImpl();addRequest.setEntry(entry);addRequest.setEntryDn(entry.getDn());AddResponse addResponse = add(addRequest);processResponse(addResponse);}}"	1
4251	public class A {private void denyListSlowReceiver(CacheClientProxy clientProxy) {final CacheClientProxy proxy = clientProxy;if (proxy.getHARegionQueue() != null&& proxy.getHARegionQueue().isClientSlowReceiver()&& !denyListedClients.contains(proxy.getProxyID())) {addToDenylistedClient(proxy.getProxyID());InternalDistributedSystem ids = (InternalDistributedSystem) getCache().getDistributedSystem();final DistributionManager dm = ids.getDistributionManager();dm.getExecutors().getWaitingThreadPool().execute(() -> {CacheDistributionAdvisor advisor =proxy.getHARegionQueue().getRegion().getCacheDistributionAdvisor();Set<InternalDistributedMember> members = advisor.adviseCacheOp();ClientDenylistProcessor.sendDenylistedClient(proxy.getProxyID(), dm, members);proxy.close(false, false);removeClientProxy(proxy);if (PoolImpl.AFTER_QUEUE_DESTROY_MESSAGE_FLAG) {ClientServerObserver bo = ClientServerObserverHolder.getInstance();bo.afterQueueDestroyMessage();}RemoveClientFromDenylistMessage rcm = new RemoveClientFromDenylistMessage();rcm.setProxyID(proxy.getProxyID());dm.putOutgoing(rcm);denyListedClients.remove(proxy.getProxyID());});}}}	1
4252	"public class A {@Test(groups = {""multiCluster"", ""0.3.1"", ""embedded""},timeOut = 1200000,enabled = false)public void updateTimeAfterEndTimeProcess()throws JAXBException, InterruptedException, IOException, URISyntaxException,OozieClientException, AuthenticationException {String startTime = TimeUtil.getTimeWrtSystemTime(-15);String endTime = TimeUtil.getTimeWrtSystemTime(60);processBundle.setProcessValidity(startTime, endTime);processBundle.submitFeedsScheduleProcess(prism);TimeUtil.sleepSeconds(10);InstanceUtil.waitTillInstanceReachState(serverOC.get(0),Util.readEntityName(processBundle.getProcessData()),0,CoordinatorAction.Status.WAITING,EntityType.PROCESS);String oldProcess = processBundle.getProcessData();String oldBundleID =OozieUtil.getLatestBundleID(cluster1OC, Util.readEntityName(oldProcess), EntityType.PROCESS);List<String> oldNominalTimes =OozieUtil.getActionsNominalTime(cluster1OC, oldBundleID, EntityType.PROCESS);processBundle.setProcessProperty(""someProp"", ""someVal"");String updateTime = TimeUtil.addMinsToTime(endTime, 60);ServiceResponse r = prism.getProcessHelper().update(oldProcess, processBundle.getProcessData());AssertUtil.assertSucceeded(r);OozieUtil.verifyNewBundleCreation(cluster1OC, oldBundleID, oldNominalTimes, oldProcess, true, false);InstanceUtil.waitTillInstancesAreCreated(cluster1OC, processBundle.getProcessData(), 1);OozieUtil.verifyNewBundleCreation(cluster1OC, oldBundleID, oldNominalTimes, oldProcess, true, true);}}"	4
4253	public class A {public static void main(String[] args) {pre();AkkaStarter.init();VertXStarter.init();try {SpringApplication.run(PowerJobServerApplication.class, args);} catch (Throwable t) {throw t;}}}	1
4254	"public class A {@Override@NotNullpublic Response executeOperation(@NotNull final AbstractFacet facet) throws Exception {if (LOG.isInfoEnabled()) {}final FacetMetadataModifier facetMetadataModifier =new FacetMetadataModifier(uid, facetId, comment, tags);final AbstractFacet modifiedFacet =apiDataService.createOrReadModifyWrite(facet.getClass(),facetMetadataModifier.getFacetFinderQuery(),facetMetadataModifier,facet.apiKeyId);if (modifiedFacet != null) {return jsonResponseHelper.ok(""Metadata updated successfully!"", new FacetMetadata(modifiedFacet));}return jsonResponseHelper.forbidden(""User [""+ uid+ ""] is not allowed to set metadata for facet [""+ facetId+ ""] for connector [""+ connectorName+ ""] and object type [""+ objectTypeName+ ""]"");}}"	1
4255	public class A {public void setLevel(@Nonnull Level level) {this.level = level;parent.setLevel(level);}}	1
4256	public class A {@Overridepublic boolean update(LeaderElectionRecord record) {try {V1Lease latest = leaseRefer.get();latest.setSpec(getLeaseFromRecord(record));V1Lease updatedLease =coordinationV1Api.replaceNamespacedLease(name, namespace, latest, null, null, null);leaseRefer.set(updatedLease);return true;} catch (ApiException e) {if (e.getCode() == HttpURLConnection.HTTP_CONFLICT) {} else {}return false;}}}	2
4257	public class A {@Overridepublic void validate(Action action, ServiceContext ctx) throws InvalidDocumentException {if (logger.isDebugEnabled()) {}try {PermissionRole permRole = (PermissionRole) ctx.getInput();StringBuilder msgBldr = new StringBuilder(ServiceMessages.VALIDATION_FAILURE);boolean invalid = false;if (action.equals(Action.CREATE)) {for (PermissionValue pv : permRole.getPermission()) {if (isPermissionInvalid(pv.getPermissionId(), msgBldr)) {invalid = true;}}for (RoleValue rv : permRole.getRole()) {if (isRoleInvalid(rv.getRoleId(), msgBldr)) {invalid = true;}}}if (invalid) {String msg = msgBldr.toString();throw new InvalidDocumentException(msg);}} catch (InvalidDocumentException ide) {throw ide;} catch (Exception e) {throw new InvalidDocumentException(e);}}}	2
4258	public class A {@Overridepublic boolean hasNextAvailable(int timeout, TimeUnit timeUnit) {long deadline = System.currentTimeMillis() + timeUnit.toMillis(timeout);try {while (peekNullable() == null && System.currentTimeMillis() < deadline) {lock.lock();try {long waitTime = deadline - System.currentTimeMillis();if (peekNullable() == null && waitTime > 0) {boolean await =dataAvailable.await(Math.min(waitTime, MAX_AWAIT_AVAILABLE_DATA), TimeUnit.MILLISECONDS);}} finally {lock.unlock();}}return peekNullable() != null;} catch (InterruptedException e) {Thread.currentThread().interrupt();return false;}}}	2
4259	public class A {public void setLimit(int l) {if (limit != Integer.MAX_VALUE) {} else {limit = l;}}}	1
4260	public class A {private void initializeTimepoint() {Preconditions.checkState(null == this.messageTimeStart);if (!readMarker.hasIdentifier()) {this.messageTimeStart = readMarker.getStartTime(times);} else {long savedTimestamp =readSetting(readMarker.getIdentifier(),getMarkerColumn(partitionId, bucketId),times.getTime(readMarker.getStartTime(times)));this.messageTimeStart = times.getTime(savedTimestamp);}}}	2
4261	"public class A {@Overridepublic Document getNextPage(Document doc) throws IOException {String nextUrl = """";Element elem = doc.select(""li.next > a"").first();nextUrl = elem.attr(""href"");if (nextUrl == """") {throw new IOException(""No more pages"");}return Http.url(""https://eroshare.com"" + nextUrl).get();}}"	1
4262	"public class A {@Overridepublic String getTemplatesByCrisisID(long crisisID) throws AidrException {Client client = ClientBuilder.newBuilder().register(JacksonFeature.class).build();try {WebTarget webResource =client.target(taggerMainUrl + ""/customuitemplate/crisisID/"" + crisisID);ObjectMapper objectMapper = JacksonWrapper.getObjectMapper();Response clientResponse = webResource.request(MediaType.APPLICATION_JSON).get();String jsonResponse = clientResponse.readEntity(String.class);if (jsonResponse != null) {return jsonResponse;}return null;} catch (Exception e) {throw new AidrException(""Error while creating new template in Tagger"", e);}}}"	5
4263	public class A {protected Blob getBlob(DocumentModel doc) {BlobHolder bh = doc.getAdapter(BlobHolder.class);if (bh == null) {return null;}Blob blob = bh.getBlob();if (blob == null) {}return blob;}}	2
4264	public class A {private Map<String, String> getPropertiesOfNodeTemplate(final TNodeTemplate nodeTemplate) {if (nodeTemplate == null) {return null;}final Properties properties = nodeTemplate.getProperties();if (properties == null) {return null;}final Object any = properties;if (!(any instanceof Element)) {return null;}final Element element = (Element) any;final Document doc = element.getOwnerDocument();return getPropertiesFromDoc(doc);}}	4
4265	public class A {public void attachClean(SysHilfe instance) {try {sessionFactory.getCurrentSession().lock(instance, LockMode.NONE);} catch (RuntimeException re) {throw re;}}}	3
4266	"public class A {@BeforeClasspublic static void prepareMariaDB() throws IllegalStateException {boolean initDbSuccess = false;int i = 0;while (i < INITIALIZE_DB_MAX_RETRY) {try {db = DB.newEmbeddedDB(DBConfigurationBuilder.newBuilder().build());db.start();dbUrl = db.getConfiguration().getURL(DEFAULT_DB_NAME);connection = DriverManager.getConnection(dbUrl);try (Statement statement = connection.createStatement()) {statement.execute(""CREATE DATABASE IF NOT EXISTS `"" + DEFAULT_DB_NAME + ""`;"");ResultSet resultSet =statement.executeQuery(""SELECT SCHEMA_NAME FROM ""+ ""INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '""+ DEFAULT_DB_NAME+ ""';"");if (resultSet.next()) {String dbName = resultSet.getString(1);initDbSuccess = DEFAULT_DB_NAME.equalsIgnoreCase(dbName);}}} catch (Exception e) {stopDb();}if (initDbSuccess) {break;}i++;}if (!initDbSuccess) {throw new IllegalStateException(String.format(""Initialize MySQL database instance failed after %d attempts,""+ "" please open an issue."",INITIALIZE_DB_MAX_RETRY));}}}"	1
4267	public class A {protected void resotreSessionIfRequired(final LensSessionHandle sessionHandle) {try {verifySessionInMemory(sessionHandle);} catch (LensException e) {try {restoreFromDb(sessionHandle);} catch (LensException le) {}}}}	1
4268	"public class A {@Testpublic void test_systemSchemaAccess_stateOnlyNoLdapGroupUser() throws Exception {HttpUtil.makeRequest(stateOnlyUserClient, HttpMethod.GET, config.getBrokerUrl() + ""/status"", null);verifySystemSchemaQuery(stateOnlyNoLdapGroupUserClient, SYS_SCHEMA_SEGMENTS_QUERY, Collections.emptyList());verifySystemSchemaServerQuery(stateOnlyNoLdapGroupUserClient, SYS_SCHEMA_SERVERS_QUERY, adminServers);verifySystemSchemaQuery(stateOnlyNoLdapGroupUserClient, SYS_SCHEMA_SERVER_SEGMENTS_QUERY, Collections.emptyList());verifySystemSchemaQuery(stateOnlyNoLdapGroupUserClient, SYS_SCHEMA_TASKS_QUERY, Collections.emptyList());}}"	4
4269	public class A {@Overridepublic PermissionOverwrite run(final Session<?> session) throws BackgroundException {final UnixPermission feature = session.getFeature(UnixPermission.class);if (log.isDebugEnabled()) {}final List<Permission> permissions = new ArrayList<>();for (Path next : files) {if (this.isCanceled()) {throw new ConnectionCanceledException();}if (Permission.EMPTY == next.attributes().getPermission()) {next.attributes().setPermission(feature.getUnixPermission(next));}permissions.add(next.attributes().getPermission());}final PermissionOverwrite overwrite = new PermissionOverwrite();final Supplier<Stream<Permission>> supplier = permissions::stream;overwrite.user.read =resolveOverwrite(map(supplier, Permission::getUser, Permission.Action.read));overwrite.user.write =resolveOverwrite(map(supplier, Permission::getUser, Permission.Action.write));overwrite.user.execute =resolveOverwrite(map(supplier, Permission::getUser, Permission.Action.execute));overwrite.group.read =resolveOverwrite(map(supplier, Permission::getGroup, Permission.Action.read));overwrite.group.write =resolveOverwrite(map(supplier, Permission::getGroup, Permission.Action.write));overwrite.group.execute =resolveOverwrite(map(supplier, Permission::getGroup, Permission.Action.execute));overwrite.other.read =resolveOverwrite(map(supplier, Permission::getOther, Permission.Action.read));overwrite.other.write =resolveOverwrite(map(supplier, Permission::getOther, Permission.Action.write));overwrite.other.execute =resolveOverwrite(map(supplier, Permission::getOther, Permission.Action.execute));return overwrite;}}	1
4270	public class A {private void encryptRepositoryPasswords(ApplicationSignUp applicationSignUp, String applicationKey) {if (applicationSignUp.getArtifactRepositories() != null) {for (ArtifactRepository artifactRepository : applicationSignUp.getArtifactRepositories()) {String repoPassword = artifactRepository.getRepoPassword();if ((artifactRepository != null) && (StringUtils.isNotBlank(repoPassword))) {String encryptedRepoPassword = CommonUtil.encryptPassword(repoPassword, applicationKey);artifactRepository.setRepoPassword(encryptedRepoPassword);if (log.isDebugEnabled()) {}}}}}}	1
4271	public class A {private void handleWorkerCompletion(ManagedTask task, String nodeName, WorkerDone state) {} else {}TreeMap<String, Long> activeWorkerIds = task.activeWorkerIds();if (activeWorkerIds.isEmpty()) {task.doneMs = time.milliseconds();task.state = TaskStateType.DONE;} else if ((task.state == TaskStateType.RUNNING) && (!task.error.isEmpty())) {task.state = TaskStateType.STOPPING;for (Map.Entry<String, Long> entry : activeWorkerIds.entrySet()) {nodeManagers.get(entry.getKey()).stopWorker(entry.getValue());}}}}	7
4272	public class A {void receiveRecords(TlsContext receiveFromCtx) {receivedRecords = receiveMessageHelper.receiveRecords(receiveFromCtx);executedAsPlanned = true;}}	2
4273	public class A {public void registerOwnedBundles() {List<OwnedBundle> ownedBundles = new ArrayList<>(ownershipCache.getOwnedBundles().values());ownershipCache.invalidateLocalOwnerCache();ownedBundles.forEach(ownedBundle -> {String path = ServiceUnitUtils.path(ownedBundle.getNamespaceBundle());try {if (!pulsar.getLocalZkCache().checkRegNodeAndWaitExpired(path)) {ownershipCache.tryAcquiringOwnership(ownedBundle.getNamespaceBundle());}} catch (Exception e) {try {ownedBundle.handleUnloadRequest(pulsar, 5, TimeUnit.MINUTES);} catch (IllegalStateException ex) {} catch (Exception ex) {pulsar.getShutdownService().shutdown(-1);}}});}}	1
4274	public class A {public static <T extends Object> Map<String, T> convertListToTypedMap(List<ZNRecord> recordList, Class<T> clazz) {Map<String, T> map = new HashMap<String, T>();for (ZNRecord record : recordList) {if (record.getId() == null) {continue;}try {Constructor<T> constructor = clazz.getConstructor(new Class[] {ZNRecord.class});T instance = constructor.newInstance(record);map.put(record.getId(), instance);} catch (Exception e) {}}return map;}}	2
4275	public class A {public final void start(BundleContext context) throws Exception {serviceRegistration =context.registerService(ProxyTargetLocatorFactory.class, new SpringDMProxyTargetLocatorFactory(), null);}}	1
4276	public class A {protected final void extractAssertion(Object... arguments) {if (arguments != null) {AssertionType assertObj = getAssertion(arguments);if (assertObj != null) {assertion = Optional.of(assertObj);return;}}try {if (assertion == null || !assertion.isPresent()) {AssertionType contextAssertion =SAML2AssertionExtractor.getInstance().extractSamlAssertion(getContext());if (contextAssertion != null) {assertion = Optional.of(contextAssertion);return;}}} catch (Exception e) {}assertion = Optional.absent();}}	1
4277	"public class A {@Overridepublic void annotateLane(int laneSWID, Set<LaneAttribute> laneAtts) {try {Lane lane = ll.findLane(""/"" + laneSWID);lane.getLaneAttributes().clear();for (LaneAttribute la : laneAtts) {lane.getLaneAttributes().add(la);}ll.updateLane(""/"" + laneSWID, lane);} catch (IOException ex) {wrapAsRuntimeException(ex);} catch (JAXBException ex) {wrapAsRuntimeException(ex);} catch (ResourceException ex) {wrapAsRuntimeException(ex);}}}"	4
4278	public class A {private List<ModuleType> getAllModuleTypesFallback(Throwable e) {e.printStackTrace();return null;}}	1
4279	public class A {public void registerMBean(final Object object) {if (MBEAN_SERVER == null || objectName == null) {return;}try {MBEAN_SERVER.registerMBean(object, objectName);} catch (LinkageError | Exception e) {}}}	1
4280	"public class A {public static void startProxy() {String jmx = MonitoringViewProperties.getConnection();try {MBeanServerConnection server = JmxUtilities.connectMBeanServer(jmx);AgentMonitoringView view = new AgentMonitoringView(server);startView(view);Thread.currentThread().join();} catch (Exception e) {String m = ""Stopping Parfait proxy"";if (getCause(e) instanceof ConnectException) {} else if (e instanceof InterruptedException) {} else {}}}}"	3
4281	public class A {private ArtistBio getArtistBio(String artistName, Locale locale) {if (artistName == null) {return null;}Artist info;try {info = Artist.getInfo(artistName, locale, null, LAST_FM_KEY);} catch (CallException e) {if (LOG.isWarnEnabled()) {}return null;}if (info == null) {return null;}return new ArtistBio(processWikiText(info.getWikiSummary()),info.getMbid(),info.getUrl(),info.getImageURL(ImageSize.MEDIUM),info.getImageURL(ImageSize.LARGE),info.getImageURL(ImageSize.MEGA));}}	1
4282	"public class A {protected void loadConf(Configuration conf) {this.slop = normalizeSlop(conf.getFloat(""hbase.regions.slop"", getDefaultSlop()));this.rackManager = new RackManager(conf);useRegionFinder = conf.getBoolean(""hbase.master.balancer.uselocality"", true);if (useRegionFinder) {regionFinder = createRegionLocationFinder(conf);} else {regionFinder = null;}this.isByTable = conf.getBoolean(HConstants.HBASE_MASTER_LOADBALANCE_BYTABLE, isByTable);}}"	1
4283	"public class A {private void reduceReplicationStatusPriority(ServiceReplicationStatus serviceReplicationStatus, OutgoingChannel outgoingChannel) {if (outgoingChannel.getReplicationMode() == ReplicationMode.MIRROR|| outgoingChannel.getReplicationMode() == ReplicationMode.GATEWAY) {String targetType =outgoingChannel.getReplicationMode() == ReplicationMode.MIRROR ? ""mirror"" : ""gateway"";String description =""Service is inconsistent with a ""+ targetType+ "" target [""+ outgoingChannel.getTargetMemberName()+ ""] (gives highest inconsistency state)"";if (_logger.isDebugEnabled()) {}serviceReplicationStatus.reducePriority(ServiceReplicationStatus.INCONSISTENT_WITH_MIRROR_FACTOR, description);} else {String description =""Service is inconsistent with target ["" + outgoingChannel.getTargetMemberName() + ""]"";if (_logger.isDebugEnabled()) {}serviceReplicationStatus.reducePriority(ServiceReplicationStatus.INCONSISTENT_WITH_SPACE_FACTOR, description);}}}"	2
4284	public class A {@Overrideprotected void sendProxyRequest(HttpServletRequest clientRequest, HttpServletResponse proxyResponse, Request proxyRequest) {proxyRequest.timeout(httpClientConfig.getReadTimeout().getMillis(), TimeUnit.MILLISECONDS);proxyRequest.idleTimeout(httpClientConfig.getReadTimeout().getMillis(), TimeUnit.MILLISECONDS);byte[] avaticaQuery = (byte[]) clientRequest.getAttribute(AVATICA_QUERY_ATTRIBUTE);if (avaticaQuery != null) {proxyRequest.content(new BytesContentProvider(avaticaQuery));}final Query query = (Query) clientRequest.getAttribute(QUERY_ATTRIBUTE);if (query != null) {final ObjectMapper objectMapper =(ObjectMapper) clientRequest.getAttribute(OBJECTMAPPER_ATTRIBUTE);try {byte[] bytes = objectMapper.writeValueAsBytes(query);proxyRequest.content(new BytesContentProvider(bytes));proxyRequest.getHeaders().put(HttpHeader.CONTENT_LENGTH, String.valueOf(bytes.length));} catch (JsonProcessingException e) {throw new RuntimeException(e);}}clientRequest.setAttribute(AuthConfig.DRUID_AUTHORIZATION_CHECKED, true);AuthenticationResult authenticationResult =(AuthenticationResult) clientRequest.getAttribute(AuthConfig.DRUID_AUTHENTICATION_RESULT);if (authenticationResult != null && authenticationResult.getAuthenticatedBy() != null) {Authenticator authenticator =authenticatorMapper.getAuthenticatorMap().get(authenticationResult.getAuthenticatedBy());if (authenticator != null) {authenticator.decorateProxyRequest(clientRequest, proxyResponse, proxyRequest);} else {}}super.sendProxyRequest(clientRequest, proxyResponse, proxyRequest);}}	1
4285	public class A {private void setupApplicationInstanceId(DynamicConfig config) {String applicationInstanceId = AstrixSettings.APPLICATION_INSTANCE_ID.getFrom(config).get();if (applicationInstanceId == null) {applicationInstanceId = this.applicationDescriptor.toString();set(AstrixSettings.APPLICATION_INSTANCE_ID, this.applicationDescriptor.toString());Objects.requireNonNull(AstrixSettings.APPLICATION_INSTANCE_ID.getFrom(config).get());} else {}}}	2
4286	"public class A {@ExceptionHandler(HttpMessageNotReadableException.class)@ResponseStatus(HttpStatus.BAD_REQUEST)@ResponseBodypublic ValidationErrorResponse handleHttpMessageNotReadableException(HttpMessageNotReadableException e) {ValidationErrorResponse error = new ValidationErrorResponse();error.getViolations().add(new Violation("""", ""request body is required""));return error;}}"	1
4287	"public class A {@RequestMapping(""/adminDashboard/updateUserDetails.do"")public ModelAndView updateProfileDetails(HttpServletRequest request, UserBO userBO) {logger.entry(""begin updateProfileDetails()"");ModelAndView mav = new ModelAndView();Integer userId = null;String message = FdahpStudyDesignerConstants.FAILURE;Map<String, String> propMap = FdahpStudyDesignerUtil.getAppProperties();try {HttpSession session = request.getSession();SessionObject userSession =(SessionObject) session.getAttribute(FdahpStudyDesignerConstants.SESSION_OBJECT);userBO.setModifiedBy(userSession.getUserId());userBO.setModifiedOn(FdahpStudyDesignerUtil.getCurrentDateTime());userId = userSession.getUserId();message = dashBoardAndProfileService.updateProfileDetails(userBO, userId, userSession);if (message.equals(FdahpStudyDesignerConstants.SUCCESS)) {userSession.setFirstName(FdahpStudyDesignerUtil.isEmpty(userBO.getFirstName())? userSession.getFirstName(): userBO.getFirstName());userSession.setLastName(FdahpStudyDesignerUtil.isEmpty(userBO.getLastName())? userSession.getLastName(): userBO.getLastName());userSession.setEmail(FdahpStudyDesignerUtil.isEmpty(userBO.getUserEmail())? userSession.getEmail(): userBO.getUserEmail());request.setAttribute(FdahpStudyDesignerConstants.SESSION_OBJECT, userSession);}if (FdahpStudyDesignerConstants.SUCCESS.equals(message)) {request.getSession().setAttribute(FdahpStudyDesignerConstants.SUC_MSG, propMap.get(""update.profile.success.message""));} else {request.getSession().setAttribute(FdahpStudyDesignerConstants.ERR_MSG, propMap.get(""update.profile.error.message""));}mav = new ModelAndView(""redirect:/adminDashboard/viewUserDetails.do"");} catch (Exception e) {}logger.exit(""Exit Point: updateProfileDetails()"");return mav;}}"	1
4288	"public class A {@Overridepublic void dispose() {BluetoothDevice dev = device;if (dev != null) {if (Boolean.TRUE.equals(dev.isPaired())) {return;}try {dev.getAdapter().removeDevice(dev.getRawDevice());} catch (DBusException ex) {if (ex.getMessage().contains(""Does Not Exist"")) {} else {}} catch (RuntimeException ex) {}}}}"	2
4289	"public class A {private void handleOrganization(RegistryChangeMessage.ChangeType changeType, Organization oldOrg, Organization newOrg) {switch (changeType) {case UPDATED:if (!oldOrg.isEndorsementApproved() && newOrg.isEndorsementApproved()) {DatasetVisitor visitor =dataset -> {try {messagePublisher.send(new StartCrawlMessage(dataset.getKey()));} catch (IOException e) {}};visitOwnedDatasets(newOrg.getKey(), visitor);} else if (occurrenceMutator.requiresUpdate(oldOrg, newOrg)&& newOrg.getNumPublishedDatasets() > 0) {DatasetVisitor visitor =dataset -> {sendUpdateMessageToPipelines(dataset,Sets.newHashSet(METADATA_INTERPRETATION, LOCATION_INTERPRETATION),occurrenceMutator.generateUpdateMessage(oldOrg, newOrg).orElse(""Organization change in registry""));};visitOwnedDatasets(newOrg.getKey(), visitor);}break;case DELETED:case CREATED:break;}}}"	3
4290	public class A {private GlobalProperty createGlobalPropertyWithDatatype(String property,String defaultValue,String description,String datatypeClassname,String datatypeConfig) {GlobalProperty globalProperty = null;try {Class<CustomDatatype<?>> datatypeClazz =(Class<CustomDatatype<?>>)Class.forName(datatypeClassname).asSubclass(CustomDatatype.class);globalProperty =new GlobalProperty(property, defaultValue, description, datatypeClazz, datatypeConfig);} catch (ClassCastException ex) {} catch (ClassNotFoundException ex) {}return globalProperty;}}	2
4291	public class A {@Testpublic void pausedDoesNotAppend() {alertAppender.pause();assertThat(alertAppender.getLogEvents()).isEmpty();}}	1
4292	"public class A {public Map<String, Object> searchManagedUser(ActorRef actorRef, Request req, RequestContext context) {Map<String, Object> searchRequestMap = new HashMap<>();Map<String, Object> filters = new HashMap<>();filters.put(JsonKey.MANAGED_BY, (String) req.get(JsonKey.ID));List<String> objectType = new ArrayList<String>();objectType.add(""user"");filters.put(JsonKey.OBJECT_TYPE, objectType);searchRequestMap.put(JsonKey.FILTERS, filters);String sortByField = (String) req.get(JsonKey.SORTBY);if (StringUtils.isNotEmpty(sortByField)) {String order = (String) req.get(JsonKey.ORDER);Map<String, Object> sortby = new HashMap<>();sortby.put(sortByField, StringUtils.isEmpty(order) ? ""asc"" : order);searchRequestMap.put(JsonKey.SORT_BY, sortby);}Request request = new Request();request.setRequestContext(context);request.getRequest().putAll(searchRequestMap);request.setOperation(ActorOperations.USER_SEARCH.getValue());Object obj = null;try {Timeout t = new Timeout(Duration.create(10, TimeUnit.SECONDS));obj = Await.result(Patterns.ask(actorRef, request, t), t.duration());} catch (ProjectCommonException pce) {throw pce;} catch (Exception e) {ProjectCommonException.throwServerErrorException(ResponseCode.unableToCommunicateWithActor,ResponseCode.unableToCommunicateWithActor.getErrorMessage());}if (obj instanceof Response) {Response responseObj = (Response) obj;return (Map<String, Object>) responseObj.getResult().get(JsonKey.RESPONSE);} else if (obj instanceof ProjectCommonException) {throw (ProjectCommonException) obj;} else {throw new ProjectCommonException(ResponseCode.SERVER_ERROR.getErrorCode(),ResponseCode.SERVER_ERROR.getErrorMessage(),ResponseCode.SERVER_ERROR.getResponseCode());}}}"	2
4293	public class A {void updateNodeStatus(final NodeConnectionStatus status, final boolean waitForCoordinator) {final NodeIdentifier nodeId = status.getNodeIdentifier();final NodeConnectionStatus currentStatus = nodeStatuses.put(nodeId, status);final NodeConnectionState currentState =currentStatus == null ? null : currentStatus.getState();latestUpdateId.updateAndGet(curVal -> Math.max(curVal, status.getUpdateIdentifier()));if (currentState == null || currentState != status.getState()) {final boolean notifyAllNodes = isActiveClusterCoordinator();if (notifyAllNodes) {} else {}notifyOthersOfNodeStatusChange(status, notifyAllNodes, waitForCoordinator);} else {}}}	5
4294	public class A {private void uploadBlockAsync(final COSDataBlocks.DataBlock block) throws IOException {final int size = block.dataSize();final COSDataBlocks.BlockUploadData uploadData = block.startUpload();final int currentPartNumber = partETagsFutures.size() + 1;final UploadPartRequest request =writeOperationHelper.newUploadPartRequest(uploadId, currentPartNumber, size, uploadData.getUploadStream(), uploadData.getFile());ListenableFuture<PartETag> partETagFuture =executorService.submit(new Callable<PartETag>() {@Overridepublic PartETag call() throws Exception {PartETag partETag;try {partETag = fs.uploadPart(request).getPartETag();} finally {closeAll(LOG, uploadData, block);}return partETag;}});partETagsFutures.add(partETagFuture);}}	3
4295	"public class A {public void receiveProcessorTrackerHeartbeat(ProcessorTrackerStatusReportReq heartbeatReq) {ptStatusHolder.updateStatus(heartbeatReq);if (heartbeatReq.getType() == ProcessorTrackerStatusReportReq.IDLE) {String idlePtAddress = heartbeatReq.getAddress();ptStatusHolder.getProcessorTrackerStatus(idlePtAddress).setDispatched(false);List<TaskDO> unfinishedTask =taskPersistenceService.getAllUnFinishedTaskByAddress(instanceId, idlePtAddress);if (!CollectionUtils.isEmpty(unfinishedTask)) {unfinishedTask.forEach(task ->updateTaskStatus(task.getSubInstanceId(),task.getTaskId(),TaskStatus.WORKER_PROCESS_FAILED.getValue(),System.currentTimeMillis(),""SYSTEM: unreceived process result""));}}}}"	2
4296	public class A {public void addAll(final String index,final List<Map<String, Object>> docList,final BiConsumer<Map<String, Object>, IndexRequestBuilder> options) {final FessConfig fessConfig = ComponentUtil.getFessConfig();final BulkRequestBuilder bulkRequestBuilder = client.prepareBulk();for (final Map<String, Object> doc : docList) {final Object id = doc.remove(fessConfig.getIndexFieldId());final IndexRequestBuilder builder =client.prepareIndex().setIndex(index).setId(id.toString()).setSource(new DocMap(doc));options.accept(doc, builder);bulkRequestBuilder.add(builder);}final BulkResponse response =bulkRequestBuilder.execute().actionGet(ComponentUtil.getFessConfig().getIndexBulkTimeout());if (response.hasFailures()) {if (logger.isDebugEnabled()) {final List<DocWriteRequest<?>> requests = bulkRequestBuilder.request().requests();final BulkItemResponse[] items = response.getItems();if (requests.size() == items.length) {for (int i = 0; i < requests.size(); i++) {final BulkItemResponse resp = items[i];if (resp.isFailed() && resp.getFailure() != null) {final DocWriteRequest<?> req = requests.get(i);final Failure failure = resp.getFailure();}}}}throw new SearchEngineClientException(response.buildFailureMessage());}}}	1
4297	public class A {private static void runCommandServer() throws Exception {ServerSocket ss = null;boolean listening = true;try {ss = new ServerSocket(port);} catch (IOException e) {System.exit(-1);}while (listening) new CommandThread<Object>(prevayler, ss.accept()).start();ss.close();}}	1
4298	"public class A {@Test@Order(order = 4)public void testSamba() throws Exception {String base = ""<p><a href=\""smb://hoge/data\"" title=\""UNCPathLink\"">UNCPathLink</a></p>"";String result = SanitizingLogic.get().sanitize(base);try {String check =""<p><a href=\""smb://hoge/data\"" title=\""UNCPathLink\""""+ "" rel=\""nofollow\"">UNCPathLink</a></p>"";org.junit.Assert.assertEquals(check, result);} catch (AssertionError e) {throw e;}}}"	4
4299	"public class A {public boolean isConnected(final IPushNode<?> node) {Args.notNull(node, ""node"");if (node instanceof TimerPushNode) {final PushNodeState<?> state = _nodeStates.get(node);if (state == null) return false;synchronized (state) {if (state.isTimedOut()) {onDisconnect(state.node);return false;}}return true;}return false;}}"	1
4300	public class A {public void createAccountsAndTransfer(CryptoServiceGrpc.CryptoServiceBlockingStub stub)throws Exception {Path startUpAccountPathJson = getStartupPath();String path = startUpAccountPathJson.toString();hederaStartupAccount = getStartupAccountMap(path);AccountKeyListObj payerAccountDetails = getPayerAccount(hederaStartupAccount);AccountID nodeAccount =AccountID.newBuilder().setAccountNum(3).setRealmNum(0).setShardNum(0).build();KeyPair accountKeyPair = new KeyPairGenerator().generateKeyPair();KeyPairObj genKeyPairObj = payerAccountDetails.getKeyPairList().get(0);PrivateKey genesisPrivateKey = genKeyPairObj.getPrivateKey();KeyPair genKeyPair = new KeyPair(genKeyPairObj.getPublicKey(), genesisPrivateKey);TestHelper.initializeFeeClient(channel, payerAccountDetails.getAccountId(), genKeyPair, nodeAccount);Transaction transaction =TestHelper.createAccountWithFee(payerAccountDetails.getAccountId(),nodeAccount,accountKeyPair,10000l,Collections.singletonList(genesisPrivateKey));TransactionResponse response = stub.createAccount(transaction);Assert.assertNotNull(response);Assert.assertEquals(ResponseCodeEnum.OK, response.getNodeTransactionPrecheckCode());TransactionBody body = TransactionBody.parseFrom(transaction.getBodyBytes());AccountID newlyCreateAccountId1 =TestHelper.getTxReceipt(body.getTransactionID(), stub).getAccountID();Assert.assertNotNull(newlyCreateAccountId1);Transaction transfer =TestHelper.createTransferSigMap(payerAccountDetails.getAccountId(),genKeyPair,newlyCreateAccountId1,payerAccountDetails.getAccountId(),genKeyPair,nodeAccount,1000l);TransactionResponse transferRes = stub.cryptoTransfer(transfer);Assert.assertNotNull(transferRes);Assert.assertEquals(ResponseCodeEnum.OK, transferRes.getNodeTransactionPrecheckCode());TransactionBody transferBody = TransactionBody.parseFrom(transaction.getBodyBytes());TransactionReceipt txReceipt = TestHelper.getTxReceipt(transferBody.getTransactionID(), stub);Assert.assertNotNull(txReceipt);}}	7
4301	public class A {private Collection<TestCaseResult> evaluateTestCaseGroup(TestSource testSource, TestCaseGroup testCase) {Collection<TestCaseResult> internalResults =testCase.getTestCases().stream().flatMap(gt -> executeGenericTest(testSource, gt).stream()).collect(Collectors.toList());if (testCase.getLogicalOperator() != SHACL.LogicalConstraint.atomic&& this.getExecutionType() != TestCaseExecutionType.shaclLiteTestCaseResult&& this.getExecutionType() != TestCaseExecutionType.shaclTestCaseResult) {return Collections.emptyList();} else {return testCase.evaluateInternalResults(internalResults);}}}	1
4302	"public class A {@Overridepublic List<Integer> loadBpmWidgetInfos() {List<Integer> bpmWidgetInfosId = new ArrayList<Integer>();Connection conn = null;PreparedStatement stat = null;ResultSet res = null;try {conn = this.getConnection();stat = conn.prepareStatement(LOAD_BPMWIDGETINFOS_ID);res = stat.executeQuery();while (res.next()) {int id = res.getInt(""id"");bpmWidgetInfosId.add(id);}} catch (Throwable t) {throw new RuntimeException(""Error loading BpmWidgetInfo list"", t);} finally {closeDaoResources(res, stat, conn);}return bpmWidgetInfosId;}}"	1
4303	"public class A {@DELETE@Path(""/acl/{aclId}"")@RestQuery(name = ""deleteacl"",description = ""Delete an ACL"",returnDescription = ""Delete an ACL"",pathParameters = {@RestParameter(name = ""aclId"",isRequired = true,description = ""The ACL identifier"",type = INTEGER)},responses = {@RestResponse(responseCode = SC_OK, description = ""The ACL has successfully been deleted""),@RestResponse(responseCode = SC_NOT_FOUND, description = ""The ACL has not been found""),@RestResponse(responseCode = SC_CONFLICT,description = ""The ACL could not be deleted, there are still references on it""),@RestResponse(responseCode = SC_INTERNAL_SERVER_ERROR,description = ""Error during deleting the ACL"")})public Response deleteAcl(@PathParam(""aclId"") long aclId) throws NotFoundException {try {if (!aclService().deleteAcl(aclId)) {return conflict();}} catch (AclServiceException e) {throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);}return noContent();}}"	1
4304	"public class A {public ResultSet selectIncremental(String tableName,String[] selectFields,String dateField,int overlapTime,Date lastLoadDate,int backoffTime,UnitSizes unit)throws SQLException {ResultSet rs = null;final Date now = new Date(DateTimeUtils.currentTimeMillis());DateRange range = new DateRange(lastLoadDate, now, overlapTime, backoffTime, unit);StringBuilder sb = new StringBuilder();String select = selectStatement(selectFields, ""tbl"");sb.append(""select "").append(select).append("" from "").append(tableName).append("" tbl WHERE tbl."").append(dateField).append("" > ? and tbl."").append(dateField).append("" < ?"");if (range.getMinDate().before(range.getMaxDate())) {PreparedStatement ps = conn.prepareStatement(sb.toString());ps.setQueryTimeout(timeout);ps.setTimestamp(1, new java.sql.Timestamp(range.getMinDate().getTime()));ps.setTimestamp(2, new java.sql.Timestamp(range.getMaxDate().getTime()));rs = ps.executeQuery();}return rs;}}"	3
4305	public class A {public byte[] prepareMessage(Message message, boolean withPrepare) {if (withPrepare) {Preparator preparator = getPreparator(message);preparator.prepare();preparator.afterPrepare();Serializer serializer = getSerializer(message);byte[] completeMessage = serializer.serialize();message.setCompleteResultingMessage(completeMessage);}try {if (message.getAdjustContext()) {if (tlsContext.getConfig().getDefaultSelectedProtocolVersion().isDTLS()&& message.isHandshakeMessage()&& !message.isDtlsHandshakeMessageFragment()) {tlsContext.increaseDtlsWriteHandshakeMessageSequence();}}updateDigest(message);if (message.getAdjustContext()) {adjustTLSContext(message);}} catch (AdjustmentException E) {}return message.getCompleteResultingMessage().getValue();}}	2
4306	public class A {@Overridepublic synchronized void start() {for (TableDataManager tableDataManager : _tableDataManagerMap.values()) {tableDataManager.start();}_isStarted = true;}}	1
4307	public class A {@Overridepublic Long saveNewTask(T task, Long crisisID) {if (task == null) {return -1L;}try {DocumentDTO doc = (DocumentDTO) task;CollectionDTO crisisDTO = remoteCrisisEJB.findCrisisByID(crisisID);doc.setCrisisDTO(crisisDTO);doc.setHasHumanLabels(false);DocumentDTO savedDoc = remoteDocumentEJB.addDocument(doc);if (savedDoc != null) {return savedDoc.getDocumentID();}} catch (Exception e) {}return -1L;}}	2
4308	public class A {@Overrideprotected double getCurrentRate() {CollectionProperty data = arrivalsTG.getData();PropertyIterator it = data.iterator();int offset = 0;while (it.hasNext()) {CollectionProperty record = (CollectionProperty) it.next();double chunkLen = record.get(2).getDoubleValue() * arrivalsTG.getUnitFactor();double timeProgress = this.rollingTime / 1000.0 - startTime;double chunkProgress = (timeProgress - offset) / chunkLen;offset += chunkLen;if (timeProgress <= offset) {double chunkStart = record.get(0).getDoubleValue() / arrivalsTG.getUnitFactor();double chunkEnd = record.get(1).getDoubleValue() / arrivalsTG.getUnitFactor();double chunkHeight = chunkEnd - chunkStart;return chunkStart + chunkProgress * chunkHeight;}}return -1;}}	1
4309	public class A {public int send(@NotNull RawMercuryRequest request, @NotNull Callback callback)throws IOException {ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();DataOutputStream out = new DataOutputStream(bytesOut);int seq;synchronized (seqHolder) {seq = seqHolder.getAndIncrement();}out.writeShort((short) 4);out.writeInt(seq);out.writeByte(1);out.writeShort(1 + request.payload.length);byte[] headerBytes = request.header.toByteArray();out.writeShort(headerBytes.length);out.write(headerBytes);for (byte[] part : request.payload) {out.writeShort(part.length);out.write(part);}Packet.Type cmd = Packet.Type.forMethod(request.header.getMethod());session.send(cmd, bytesOut.toByteArray());callbacks.put((long) seq, callback);return seq;}}	1
4310	public class A {public synchronized boolean remove(K key) throws IOException {if (log.isDebugEnabled()) {}boolean removed = false;if (key instanceof String && ((String) key).endsWith(CacheConstants.NAME_COMPONENT_DELIMITER)) {synchronized (map) {for (Iterator itr = map.entrySet().iterator(); itr.hasNext(); ) {Map.Entry entry = (Map.Entry) itr.next();Object k = entry.getKey();if (k instanceof String && ((String) k).startsWith(key.toString())) {itr.remove();removed = true;}}}} else if (key instanceof GroupId) {synchronized (map) {for (Iterator itr = map.entrySet().iterator(); itr.hasNext(); ) {Map.Entry entry = (Map.Entry) itr.next();Object k = entry.getKey();if (k instanceof GroupAttrName && ((GroupAttrName) k).groupId.equals(key)) {itr.remove();removed = true;}}}} else {ICacheElement<K, V> ce = (ICacheElement) map.remove(key);removed = true;}return removed;}}	1
4311	"public class A {@Overridepublic void createOrReplaceFunction(String schemaName, String functionName, Supplier<String> supplier) {final String objectName = DataDefinitionUtil.getQualifiedName(schemaName, functionName);final StringBuilder ddl =new StringBuilder().append(""CREATE OR REPLACE FUNCTION "").append(objectName).append(System.lineSeparator()).append(supplier.get());final String ddlString = ddl.toString();if (logger.isLoggable(Level.FINE)) {logger.fine(ddlString);}runStatement(ddlString);}}"	1
4312	"public class A {public void set(Position newPosition) throws SQLException, DuplicateProcessException {if (newPosition == null) return;Long heartbeat = newPosition.getLastHeartbeatRead();String sql =""INSERT INTO `positions` set ""+ ""server_id = ?, ""+ ""gtid_set = ?, ""+ ""binlog_file = ?, ""+ ""binlog_position = ?, ""+ ""last_heartbeat_read = ?, ""+ ""client_id = ? ""+ ""ON DUPLICATE KEY UPDATE ""+ ""last_heartbeat_read = ?, ""+ ""gtid_set = ?, binlog_file = ?, binlog_position=?"";BinlogPosition binlogPosition = newPosition.getBinlogPosition();connectionPool.withSQLRetry(1,(c) -> {PreparedStatement s = c.prepareStatement(sql);s.setLong(1, serverID);s.setString(2, binlogPosition.getGtidSetStr());s.setString(3, binlogPosition.getFile());s.setLong(4, binlogPosition.getOffset());s.setLong(5, heartbeat);s.setString(6, clientID);s.setLong(7, heartbeat);s.setString(8, binlogPosition.getGtidSetStr());s.setString(9, binlogPosition.getFile());s.setLong(10, binlogPosition.getOffset());s.execute();});}}"	1
4313	public class A {@Testpublic void applicationLoggerAboveLevelUnaffectedByLoweringLogLevelChanges() {geodeConsoleAppender.clearLogEvents();when(config.getLogLevel()).thenReturn(FINE.intLevel());configuration.configChanged();assertThat(geodeConsoleAppender.getLogEvents()).hasSize(1);}}	1
4314	"public class A {public static com.liferay.bookmarks.model.BookmarksEntry addEntry(HttpPrincipal httpPrincipal,long groupId,long folderId,String name,String url,String description,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(BookmarksEntryServiceUtil.class, ""addEntry"", _addEntryParameterTypes0);MethodHandler methodHandler =new MethodHandler(methodKey, groupId, folderId, name, url, description, serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.bookmarks.model.BookmarksEntry) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4315	"public class A {@Overridepublic void sendProjectSyncUnauthorizedEmail(Project project) {User syncUser = null;try {syncUser = project.getRemoteStatus().getReadBy();} catch (NullPointerException e) {}Locale locale = LocaleContextHolder.getLocale();String projectSettingsUrl = serverURL + ""/projects/"" + project.getId() + ""/settings/remote"";final Context ctx = new Context(locale);ctx.setVariable(""failedProject"", project.getName());ctx.setVariable(""user"", syncUser.getUsername());ctx.setVariable(""settingsLink"", projectSettingsUrl);try {final MimeMessage mimeMessage = this.javaMailSender.createMimeMessage();final MimeMessageHelper message = new MimeMessageHelper(mimeMessage, ""UTF-8"");message.setSubject(messageSource.getMessage(""email.syncexpired.subject"", new Object[] {project.getName()}, locale));message.setFrom(serverEmail);message.setTo(syncUser.getEmail());final String htmlContent = templateEngine.process(SYNC_EXPIRED_TEMPLATE, ctx);message.setText(htmlContent, true);javaMailSender.send(mimeMessage);message.setText(htmlContent, true);javaMailSender.send(mimeMessage);} catch (Exception e) {throw new MailSendException(""Failed to send e-mail for sync failure."", e);}}}"	2
4316	"public class A {public String createMessage(Command c) {String message = null;String page = null;String behavior = null;String relay = null;if (c.getProperty(""command"").equals(""RELAY"")) {relay = HexIntConverter.convert(Integer.parseInt(address[2]) - 1);if (c.getProperty(""behavior"").equals(""on"")) {behavior = ""1"";}if (c.getProperty(""behavior"").equals(""off"")) {behavior = ""0"";}page = ""forms.htm?led"" + relay + ""="" + behavior;}if (c.getProperty(""command"").equals(""TOGGLE"")) {relay = address[2];int time = Integer.parseInt(c.getProperty(""time-in-ms""));int seconds = time / 1000;String relayLine = configuration.getProperty(""TOGGLE"" + seconds + ""S"" + relay);page = ""toggle.cgi?toggle="" + relayLine;}message = ""GET /"" + page + "" HTTP 1.1\r\n\r\n"";return (message);}}"	1
4317	"public class A {public CloudWithRelaysResponseDTO getCloudsWithExclusiveGatewayAndPublicRelays(final String operator, final String name) {Assert.isTrue(!Utilities.isEmpty(operator), ""operator is null or empty"");Assert.isTrue(!Utilities.isEmpty(name), ""name is null or empty"");final UriComponents uri = getGatekeeperGetCloudUri(operator, name);final ResponseEntity<CloudWithRelaysResponseDTO> response =httpService.sendRequest(uri, HttpMethod.GET, CloudWithRelaysResponseDTO.class);return response.getBody();}}"	1
4318	public class A {@Overridepublic int read(final byte b[], final int off, final int len) throws IOException {int temp;try {temp = fileIOOperations.fileRead(fd, b, off, len);} catch (JargonException e) {throw new IOException(e);}if (temp > 0) {filePointer += temp;}return temp;}}	1
4319	public class A {protected void addContribution(RepositoryDescriptor cdesc) {RepositoryDescriptor descriptor = getRepositoryDescriptor(cdesc);SQLRepositoryService sqlRepositoryService =Framework.getLocalService(SQLRepositoryService.class);sqlRepositoryService.addContribution(descriptor);}}	1
4320	public class A {private void send(String jobIDStr, Map<String, Double> counterValues) {EmbeddedAmbroseHiveProgressReporter reporter = getEmbeddedProgressReporter();Configuration conf = SessionState.get().getConf();String queryId = AmbroseHiveUtil.getHiveQueryId(conf);Map<String, DAGNode<Job>> nodeIdToDAGNode = reporter.getNodeIdToDAGNode();DAGNode<Job> dagNode = nodeIdToDAGNode.get(nodeId);if (dagNode == null) {return;}HiveJob job = (HiveJob) dagNode.getJob();if (job.getId() == null) {job.setId(AmbroseHiveUtil.asDisplayId(queryId, jobIDStr, nodeId));reporter.addJobIdToNodeId(jobIDStr, nodeId);reporter.pushEvent(queryId, new Event.JobStartedEvent(dagNode));}try {boolean isUpdated = updateJobState();if (isUpdated && !reporter.getCompletedJobIds().contains(jobIDStr)) {Event<DAGNode<? extends Job>> event = null;job.setMapReduceJobState(jobProgress);if (jobProgress.isComplete()) {event = new Event.JobFinishedEvent(dagNode);int reducers = jobProgress.getTotalReducers();if (reducers == 0) {jobProgress.setReduceProgress(1.0f);}job.setConfiguration(((HiveConf) conf).getAllProperties());job.setCounterGroupMap(AmbroseHiveUtil.counterGroupInfoMap(counterValues));reporter.addCompletedJobIds(jobIDStr);reporter.addJob(job);} else {event = new Event.JobProgressEvent(dagNode);}reporter.addJobIdToProgress(jobIDStr, getJobProgress());pushWorkflowProgress(queryId, reporter);reporter.pushEvent(queryId, event);}} catch (IOException e) {}}}	2
4321	"public class A {public void unregisterAlias(PluginContainer plugin, String alias) throws RegistryException {Objects.requireNonNull(plugin, ""plugin"");Objects.requireNonNull(alias, ""alias"");checkClosed();if (!knownAliases.containsKey(alias)) {return;}if (registeredCommands.containsKey(alias)) {return;}Command cmd = registeredCommands.get(knownAliases.get(alias));if (cmd instanceof PluginCommand && ((PluginCommand<?>) cmd).getPlugin() != plugin) {throw new RegistryException(""Plugins may not unregister another Plugin's command aliases"");}knownAliases.remove(alias);cmd.removeAlias(alias);}}"	2
4322	"public class A {public String getDeviceIpAddressFromSessionProvider(final DlmsDevice dlmsDevice)throws OsgpException {final SessionProvider sessionProvider =this.sessionProviderService.getSessionProvider(dlmsDevice.getCommunicationProvider());String deviceIpAddress;try {deviceIpAddress = sessionProvider.getIpAddress(dlmsDevice.getIccId());if (deviceIpAddress != null) {return deviceIpAddress;}this.jasperWirelessSmsClient.sendWakeUpSMS(dlmsDevice.getIccId());deviceIpAddress = this.pollForSession(sessionProvider, dlmsDevice);} catch (final SessionProviderException e) {throw new FunctionalException(FunctionalExceptionType.INVALID_ICCID, ComponentType.PROTOCOL_DLMS, e);}if ((deviceIpAddress == null) || """".equals(deviceIpAddress)) {throw new ProtocolAdapterException(""Session provider: ""+ dlmsDevice.getCommunicationProvider()+ "" did not return an IP address for device: ""+ dlmsDevice.getDeviceIdentification()+ ""and iccId: ""+ dlmsDevice.getIccId());}return deviceIpAddress;}}"	1
4323	"public class A {@Overridepublic Runnable prepareFlush() {if (activityFieldStore == null) {return new Runnable() {public void run() {}};}if (activityFieldStore.isClosed()) {throw new IllegalStateException(""The activityFile is closed"");}final UpdateBatch<AtomicFieldUpdate> oldBatch = updateBatch;updateBatch = new UpdateBatch<AtomicFieldUpdate>(activityConfig);return new Runnable() {public void run() {try {if (activityFieldStore.isClosed()) {throw new IllegalStateException(""The activityFile is closed"");}activityFieldStore.flush(oldBatch.getUpdates());} catch (Exception ex) {}}};}}"	1
4324	public class A {public synchronized void setParameter(final String name, final Object value) {if (this.parameters == null) {this.parameters = new HashMap();}this.parameters.put(name, value);if (LOG.isDebugEnabled()) {}}}	1
4325	public class A {public String getLogicalName(AProject project) {ProjectDescriptor pd = null;try {pd = getProjectDescriptor(project);} catch (Exception e) {}if (pd != null) {return pd.getName();}String actualPath = project.getRealPath();return actualPath.substring(actualPath.lastIndexOf('/') + 1);}}	1
4326	public class A {private void loadGraph(String name, String path) {final Graph graph = GraphFactory.open(path);this.graphs.put(name, graph);if (this.requireAuthentication() && !(graph instanceof HugeGraphAuthProxy)) {}}}	2
4327	public class A {@Overridepublic void completed(HttpClientCallbackResult result) {if (checkResultIsEmpty(result)) {initApp(id, appName);} else {}}}	1
4328	"public class A {public UserId getRandomBuyerId(Histogram<UserId> previousBidders, UserId... exclude) {tmp_userIdHistogram.clear();tmp_userIdHistogram.putHistogram(previousBidders);for (UserId ex : exclude) tmp_userIdHistogram.removeAll(ex);tmp_userIdHistogram.put(this.getRandomBuyerId(exclude));try {} catch (NullPointerException ex) {for (UserId user_id : tmp_userIdHistogram.values()) {System.err.println(String.format(""%s => NEW:%s / ORIG:%s"",user_id, tmp_userIdHistogram.get(user_id), previousBidders.get(user_id)));}throw ex;}FlatHistogram<UserId> rand_h = new FlatHistogram<UserId>(rng, tmp_userIdHistogram);return (rand_h.nextValue());}}"	1
4329	public class A {protected void executeTableProcess(Connection conn, List<DfTableMeta> tableMetaList) {if (!_suppressTruncateTable) {truncateTableIfPossible(conn, tableMetaList);} else {}if (!_suppressDropForeignKey) {dropForeignKey(conn, tableMetaList);} else {}if (!_suppressDropTable) {dropTable(conn, tableMetaList);} else {}if (!_suppressDropSequence) {dropSequence(conn, tableMetaList);} else {}}}	4
4330	public class A {@Override@NonNullByDefault({})public void handleStandaloneElement(final @Nullable String elementName,final @Nullable Map<String, String> attributes,final boolean minimized,final int line,final int col)throws ParseException {}}	1
4331	public class A {protected final Connection allocateConnection(ConnectionRequestInfo connRequestInfo)throws ResourceException {Connection connection =(Connection)this.connectionManager.allocateConnection(this.managedConnectionFactory, connRequestInfo);return connection;}}	1
4332	"public class A {@Overridepublic Set<MetricNameDto> getMetricNames(List<TaskDataDto> tests) {Set<Long> taskIds = new HashSet<>();Set<String> sessionIds = new HashSet<>();for (TaskDataDto tdd : tests) {taskIds.addAll(tdd.getIds());sessionIds.addAll(tdd.getSessionIds());}long temp = System.currentTimeMillis();Set<MetricNameDto> validators = getValidatorsNamesNewModel(tests);if (validators == null) {List<Object[]> validatorNames =entityManager.createNativeQuery(""SELECT v.validator, selected.taskdataID FROM ValidationResultEntity v JOIN ( ""+ "" SELECT wd.workloaddataID, td.taskdataID FROM     (       SELECT wd.id AS""+ "" workloaddataID, wd.taskId, wd.sessionId FROM WorkloadData wd WHERE""+ "" wd.sessionId IN (:sessionIds)    ) AS wd JOIN       (       SELECT td.id""+ "" AS taskdataID, td.taskId, td.sessionId FROM TaskData td WHERE td.id IN""+ "" (:taskIds)    ) AS td ON wd.taskId=td.taskId AND""+ "" wd.sessionId=td.sessionId) AS selected ON""+ "" v.workloadData_id=selected.workloaddataID"").setParameter(""taskIds"", taskIds).setParameter(""sessionIds"", sessionIds).getResultList();validators = new HashSet<>(validatorNames.size());for (Object[] name : validatorNames) {if (name == null || name[0] == null) continue;for (TaskDataDto td : tests) {if (td.getIds().contains(((BigInteger) name[1]).longValue())) {MetricNameDto metric = new MetricNameDto();metric.setTest(td);metric.setMetricName((String) name[0]);metric.setOrigin(MetricNameDto.Origin.VALIDATOR);validators.add(metric);break;}}}}return validators;}}"	1
4333	public class A {@Overrideprotected void sendConfigurationUpdateCommands() {if (updateScanParameters) {sendCommandMessage(new ScanParametersSetRequestMessage(macAddress,configuration.getSensitivity(),configuration.isDaylightOverride(),configuration.getSwitchOffDelay()));}if (updateSleepParameters) {sendCommandMessage(new SleepSetRequestMessage(macAddress, configuration.getWakeupDuration(), configuration.getWakeupInterval()));}if (recalibrate) {sendCommandMessage(new LightCalibrationRequestMessage(macAddress));}super.sendConfigurationUpdateCommands();}}	4
4334	"public class A {@Overridepublic synchronized void registerJSONWebServiceAction(String contextName,String contextPath,Class<?> actionClass,Method actionMethod,String path,String method) {try {if (!_addJSONWebServiceActionConfig(new JSONWebServiceActionConfig(contextName, contextPath, actionClass, actionMethod, path, method))) {if (_log.isDebugEnabled()) {}}} catch (Exception exception) {if (_log.isWarnEnabled()) {StringBundler sb = new StringBundler(14);sb.append(""Unable to register service method {actionClass="");sb.append(actionClass);sb.append("", actionMethod="");sb.append(actionMethod);sb.append("", contextName="");sb.append(contextName);sb.append("", contextPath="");sb.append(contextPath);sb.append("", method="");sb.append(method);sb.append("", path="");sb.append(path);sb.append(""} due to "");sb.append(exception.getMessage());}}}}"	2
4335	public class A {@Overridepublic XDRAcknowledgementType provideAndRegisterDocumentSetBAsyncResponse(RegistryResponseType request, AssertionType assertion, NhinTargetCommunitiesType targets) {XDRAcknowledgementType ack = new XDRAcknowledgementType();RegistryResponseType regResp = new RegistryResponseType();regResp.setStatus(NhincConstants.XDR_RESP_ACK_STATUS_MSG);ack.setMessage(regResp);return ack;}}	1
4336	public class A {@Overridepublic void onSuccess(TbQueueMsgMetadata metadata) {}}	1
4337	public class A {@Overridepublic String getExternalUrlForResources(String resourceId, List<String> resourcePaths, Locale locale) {LocaleProvider localeProvider = new LocaleProviderImpl(locale);Resource resource = getResourceForPaths(resourceId, resourcePaths, localeProvider);if (resource == null) {return null;}if (_debug) refreshResource(resource);return resource.getExternalUrl();}}	1
4338	"public class A {@Overridepublic String toModelName(String name) {if (!StringUtils.isEmpty(modelNamePrefix)) {name = modelNamePrefix + ""_"" + name;}if (!StringUtils.isEmpty(modelNameSuffix)) {name = name + ""_"" + modelNameSuffix;}name = sanitizeName(name);if (isReservedWord(name)) {name = ""model_"" + name;}if (name.matches(""^\\d.*"")) {name = ""model_"" + name;}return camelize(name);}}"	2
4339	"public class A {@Overridepublic WikiPage findByG_ERC_V(long groupId, String externalReferenceCode, double version)throws NoSuchPageException {WikiPage wikiPage = fetchByG_ERC_V(groupId, externalReferenceCode, version);if (wikiPage == null) {StringBundler sb = new StringBundler(8);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""groupId="");sb.append(groupId);sb.append("", externalReferenceCode="");sb.append(externalReferenceCode);sb.append("", version="");sb.append(version);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchPageException(sb.toString());}return wikiPage;}}"	1
4340	public class A {public static synchronized void getSensehatInterface(final SenseHat senseHat) {if (senseHatInterfaceRefCnt.getAndIncrement() == 0) {senseHatInterface = new SenseHatInterface(senseHat);}}}	2
4341	"public class A {private static void loginAsSCMUserIfSecurityEnabled(SCMHANodeDetails scmhaNodeDetails, ConfigurationSource conf)throws IOException, AuthenticationException {if (OzoneSecurityUtil.isSecurityEnabled(conf)) {if (LOG.isDebugEnabled()) {ScmConfig scmConfig = conf.getObject(ScmConfig.class);}Configuration hadoopConf = LegacyHadoopConfigurationSource.asHadoopConfiguration(conf);if (SecurityUtil.getAuthenticationMethod(hadoopConf).equals(AuthenticationMethod.KERBEROS)) {UserGroupInformation.setConfiguration(hadoopConf);InetSocketAddress socketAddress = getScmAddress(scmhaNodeDetails, conf);SecurityUtil.login(hadoopConf,ScmConfig.ConfigStrings.HDDS_SCM_KERBEROS_KEYTAB_FILE_KEY,ScmConfig.ConfigStrings.HDDS_SCM_KERBEROS_PRINCIPAL_KEY,socketAddress.getHostName());} else {throw new AuthenticationException(SecurityUtil.getAuthenticationMethod(hadoopConf)+ "" authentication method not support. ""+ ""SCM user login failed."");}}}}"	2
4342	public class A {@Overridepublic void refreshSupervisionStatus() {try {Collection<SupervisionEvent> allCurrentEvents =clientRequestHandler.getCurrentSupervisionStatus();for (SupervisionEvent event : allCurrentEvents) {onSupervisionUpdate(event);}c2monConnectionEstablished = true;} catch (Exception e) {c2monConnectionEstablished = false;}}}	2
4343	public class A {protected void renderRequestStatus(PortletRequest request, MimeResponse response, RequestStatus requestStatus) {JSONObject jsonObject = JSONFactoryUtil.createJSONObject();jsonObject.put(PortalConstants.RESULT, requestStatus.toString());try {writeJSON(request, response, jsonObject);} catch (IOException e) {}}}	1
4344	public class A {@Overridepublic ResultSubpartitionView createSubpartitionView(ResultPartitionID partitionId,int subpartitionIndex,BufferAvailabilityListener availabilityListener)throws IOException {final ResultSubpartitionView subpartitionView;synchronized (registeredPartitions) {final ResultPartition partition = registeredPartitions.get(partitionId);if (partition == null) {throw new PartitionNotFoundException(partitionId);}subpartitionView = partition.createSubpartitionView(subpartitionIndex, availabilityListener);}return subpartitionView;}}	1
4345	public class A {private void layoutAcyclicParts() throws CDKException {int safetyCounter = 0;IAtomContainer unplacedAtoms = null;IAtomContainer placedAtoms = null;IAtomContainer longestUnplacedChain = null;IAtom atom = null;Vector2d direction = null;Vector2d startVector = null;boolean done;do {safetyCounter++;done = false;atom = getNextAtomWithAliphaticUnplacedNeigbors();if (atom != null) {unplacedAtoms = getUnplacedAtoms(atom);placedAtoms = getPlacedAtoms(atom);longestUnplacedChain = atomPlacer.getLongestUnplacedChain(molecule, atom);try {} catch (Exception exc) {}if (longestUnplacedChain.getAtomCount() > 1) {if (placedAtoms.getAtomCount() > 1) {atomPlacer.distributePartners(atom,placedAtoms,GeometryUtil.get2DCenter(placedAtoms),unplacedAtoms,bondLength);direction = new Vector2d(longestUnplacedChain.getAtom(1).getPoint2d());startVector = new Vector2d(atom.getPoint2d());direction.sub(startVector);} else {direction =atomPlacer.getNextBondVector(atom, placedAtoms.getAtom(0), GeometryUtil.get2DCenter(molecule), true);}for (int f = 1; f < longestUnplacedChain.getAtomCount(); f++) {longestUnplacedChain.getAtom(f).setFlag(CDKConstants.ISPLACED, false);}atomPlacer.placeLinearChain(longestUnplacedChain, direction, bondLength);} else {done = true;}} else {done = true;}} while (!done && safetyCounter <= molecule.getAtomCount());}}	12
4346	public class A {public void login(String userName, String password) throws XMPPException {XmppData.initialize();domain = XmppData.domain;port = XmppData.port;user = userName;ConnectionConfiguration config = new ConnectionConfiguration(domain, port);connection = new XMPPConnection(config);connection.connect();try {AccountManager user = new AccountManager(connection);user.createAccount(userName, password);connection.login(userName, password);} catch (XMPPException e) {connection.login(userName, password);}}}	2
4347	"public class A {private void validateSidRequestParameter(String sid, String postLogoutRedirectUri) {if (StringUtils.isNotBlank(sid)) {SessionId sessionIdObject = sessionIdService.getSessionBySid(sid);if (sessionIdObject == null) {final String reason =""sid parameter in request is not valid. Logout is rejected. sid parameter in request""+ "" can be skipped or otherwise valid value must be provided."";throw new WebApplicationException(createErrorResponse(postLogoutRedirectUri,EndSessionErrorResponseType.INVALID_GRANT_AND_SESSION,reason));}}}}"	1
4348	public class A {public static void executeMemberStartedExtension(Map<String, String> envParameters) {try {if (log.isDebugEnabled()) {}String script = System.getProperty(CartridgeAgentConstants.MEMBER_STARTED_SCRIPT);String command = prepareCommand(script);addPayloadParameters(envParameters);cleanProcessParameters(envParameters);String output = CommandUtils.executeCommand(command, envParameters);if (log.isDebugEnabled()) {}} catch (Exception e) {if (log.isErrorEnabled()) {}}}}	3
4349	public class A {public static void getEndpointProperties(CamelContext camelContext,FacebookEndpointConfiguration configuration,Map<String, Object> properties) {BeanIntrospection beanIntrospection =camelContext.adapt(ExtendedCamelContext.class).getBeanIntrospection();if (beanIntrospection.getProperties(configuration, properties, null, false)) {final Set<String> names = properties.keySet();names.removeAll(COMPONENT_CONFIG_FIELDS);}if (LOG.isDebugEnabled()) {final Set<String> names = properties.keySet();}}}	1
4350	"public class A {public TMTextUnitVariant addTextUnitVariant(long assetId, long localeId, String name, String content, String comment)throws VirtualAssetRequiredException, VirutalAssetMissingTextUnitException {TextUnitSearcherParameters textUnitSearcherParameters = new TextUnitSearcherParameters();textUnitSearcherParameters.setAssetId(assetId);textUnitSearcherParameters.setName(name);textUnitSearcherParameters.setSearchType(SearchType.EXACT);textUnitSearcherParameters.setUsedFilter(UsedFilter.USED);textUnitSearcherParameters.setLimit(1);List<TextUnitDTO> textUnitDTOs = textUnitSearcher.search(textUnitSearcherParameters);if (textUnitDTOs.isEmpty()) {textUnitSearcherParameters.setUsedFilter(UsedFilter.UNUSED);textUnitDTOs = textUnitSearcher.search(textUnitSearcherParameters);}if (textUnitDTOs.isEmpty()) {String msg =MessageFormat.format(""Missing TmTextUnit for assetId: {0} and name: {1}"", assetId, name);throw new VirutalAssetMissingTextUnitException(msg);}return tmService.addCurrentTMTextUnitVariant(textUnitDTOs.get(0).getTmTextUnitId(), localeId, content);}}"	2
4351	"public class A {protected List<String> extractElementList(String ext, File baseDir) {final String extSuffix = ""."" + ext;final String[] elementList =baseDir.list(new FilenameFilter() {public boolean accept(File dir, String name) {return Srl.endsWith(name, extSuffix);}});if (elementList == null) {return DfCollectionUtil.emptyList();}return DfCollectionUtil.newArrayList(elementList);}}"	1
4352	"public class A {@GET@Timed@Path(""{id}"")@Produces(APPLICATION_JSON_WITH_CHARSET)public String get(@Context GraphManager manager, @PathParam(""graph"") String graph, @PathParam(""id"") String id) {HugeGraph g = graph(manager, graph);HugeUser user = manager.authManager().getUser(IdGenerator.of(id));return manager.serializer(g).writeAuthElement(user);}}"	1
4353	public class A {private boolean isBeyondRange(Key lastSeenKey, Key endKey) {if (lastSeenKey.compareTo(endKey) >= 0) {return true;} else {String cf = lastSeenKey.getColumnQualifier().toString();String endCf = endKey.getColumnQualifier().toString();if (log.isTraceEnabled()) {}if (dateCfLength == cf.length()) {endCf = endCf.substring(0, dateCfLength);if (cf.compareTo(endCf) >= 0) {return true;}}return false;}}}	1
4354	"public class A {public void testRelevanceHashMapInt2StringArrayWay() throws Exception {String req =""{\""sort\"":[\""_score\""],\""query\"":{\""query_string\"":{\""query\"":\""\"",\""relevance\"":{\""model\"":{\""function_params\"":[\""_INNER_SCORE\"",\""thisYear\"",\""year\"",\""goodYear\"",\""mileageWeight\"",\""mileage\"",\""color\"",\""yearcolor\"",\""colorweight\"",\""category\"",\""categorycolor\""],\""facets\"":{\""int\"":[\""year\"",\""mileage\""],\""string\"":[\""color\"",\""category\""],\""long\"":[\""groupid\""]},\""function\"":\""if(yearcolor.containsKey(year)""+ "" && yearcolor.get(year).equals(color)) return 100000f; if(goodYear.contains(year))""+ "" return (float)Math.exp(2d);   if(year==thisYear) return 87f   ; return ""+ "" _INNER_SCORE;\"",\""variables\"":{\""map_int_float\"":[\""mileageWeight\""],\""map_int_string\"":[\""yearcolor\""],\""set_int\"":[\""goodYear\""],\""int\"":[\""thisYear\""],\""map_string_float\"":[\""colorweight\""],\""map_string_string\"":[\""categorycolor\""]}},\""values\"":{\""thisYear\"":2001,\""yearcolor\"":{\""value\"":[\""red\""],\""key\"":[1998]},\""mileageWeight\"":{\""value\"":[777.9,10.2],\""key\"":[11400,11000]},\""colorweight\"":{\""value\"":[335.5],\""key\"":[\""red\""]},\""goodYear\"":[1996,1997],\""categorycolor\"":{\""value\"":[\""red\""],\""key\"":[\""compact\""]}}}}},\""fetchStored\"":false,\""from\"":0,\""explain\"":false,\""size\"":6}"";JSONObject res = search(new JSONObject(req));assertEquals(""numhits is wrong"", 15000, res.getInt(""numhits""));JSONArray hits = res.getJSONArray(""hits"");JSONObject firstHit = hits.getJSONObject(0);JSONObject secondHit = hits.getJSONObject(1);double firstScore = firstHit.getDouble(""_score"");double secondScore = secondHit.getDouble(""_score"");String firstYear = firstHit.getJSONArray(""year"").getString(0);String secondYear = secondHit.getJSONArray(""year"").getString(0);String firstColor = firstHit.getJSONArray(""color"").getString(0);String secondColor = secondHit.getJSONArray(""color"").getString(0);assertEquals(""inner score for first is not correct."", true, Math.abs(firstScore - 100000) < 1);assertEquals(""inner score for second is not correct."", true, Math.abs(secondScore - 100000) < 1);assertEquals(""year for first is not correct."", true, Integer.parseInt(firstYear) == 1998);assertEquals(""year for second is not correct."", true, Integer.parseInt(secondYear) == 1998);assertEquals(""color for first is not correct."", true, firstColor.equals(""red""));assertEquals(""color for second is not correct."", true, secondColor.equals(""red""));}}"	1
4355	"public class A {public KnoxClient getKnoxClient(String serviceName, Map<String, String> configs) {KnoxClient knoxClient = null;if (configs == null) {} else {String knoxUrl = configs.get(""knox.url"");String knoxAdminUser = configs.get(""username"");String knoxAdminPassword = configs.get(""password"");knoxClient = new KnoxClient(knoxUrl, knoxAdminUser, knoxAdminPassword);}return knoxClient;}}"	2
4356	public class A {public void stop() {statsReporter.stop();}}	2
4357	"public class A {@Testpublic void testReadFromOpenLedgerZeroAndOne() throws Exception {try {lh = bkc.createLedger(digestType, ledgerPassword);ledgerId = lh.getId();LedgerHandle lhOpen = bkc.openLedgerNoRecovery(ledgerId, digestType, ledgerPassword);long readLastConfirmed = lhOpen.readLastConfirmed();assertTrue(""Last confirmed has the wrong value"", readLastConfirmed == LedgerHandle.INVALID_ENTRY_ID);ByteBuffer entry = ByteBuffer.allocate(4);entry.putInt(rng.nextInt(maxInt));entry.position(0);entries.add(entry.array());entriesSize.add(entry.array().length);lh.addEntry(entry.array());readLastConfirmed = lhOpen.readLastConfirmed();assertTrue(readLastConfirmed == LedgerHandle.INVALID_ENTRY_ID);entry = ByteBuffer.allocate(4);entry.putInt(rng.nextInt(maxInt));entry.position(0);entries.add(entry.array());entriesSize.add(entry.array().length);lh.addEntry(entry.array());readLastConfirmed = lhOpen.readLastConfirmed();assertTrue(readLastConfirmed == 0L);lh.close();lhOpen.close();} catch (BKException e) {LOG.error(""Test failed"", e);fail(""Test failed due to BookKeeper exception"");} catch (InterruptedException e) {fail(""Test failed due to interruption"");}}}"	6
4358	public class A {private void appendToShardsAndDays(StringBuilder builder, BitSet bits, String date) {if ((bits.length() > 1)&& ((float) (bits.cardinality()) >= (collapseDatePercentThreshold * bits.length()))) {if (log.isDebugEnabled()) {}if (builder.length() > 0) {builder.append(',');}builder.append(date);} else {if (log.isDebugEnabled()) {}StringBuilder shard = new StringBuilder();shard.append(date).append('_');int baseShardLen = shard.length();for (int i = 0; i < bits.length(); i++) {if (bits.get(i)) {shard.setLength(baseShardLen);shard.append(i);String shardString = shard.toString();if (builder.length() > 0) {builder.append(',');}builder.append(shardString);}}}}}	3
4359	public class A {boolean wrapInTransaction() {final TransactionCoordinatorBuilder transactionCoordinatorBuilder =factory.getServiceRegistry().getService(TransactionCoordinatorBuilder.class);if (!transactionCoordinatorBuilder.isJta()) {return false;}final TransactionManager transactionManager = getTransactionManager();if (transactionManager == null) {return false;}try {if (transactionManager.getStatus() == Status.STATUS_NO_TRANSACTION) {return true;}} catch (SystemException e) {log.cannotGuessTransactionStatus(e);return false;}return false;}}	4
4360	public class A {@Overridepublic List<LwM2mObject> findLwM2mObjectPage(TenantId tenantId, String sortProperty, String sortOrder, PageLink pageLink) {validateId(tenantId, INCORRECT_TENANT_ID + tenantId);PageData<TbResource> resourcePageData =resourceService.findTenantResourcesByResourceTypeAndPageLink(tenantId, ResourceType.LWM2M_MODEL, pageLink);return resourcePageData.getData().stream().flatMap(s -> Stream.ofNullable(toLwM2mObject(s, false))).sorted(getComparator(sortProperty, sortOrder)).collect(Collectors.toList());}}	1
4361	public class A {private static void runNonCompileAssertion(int assertionNumber,EventType eventType,Map<String, ExprEvaluator> nodes,SupportEvalAssertionPair assertion,RegressionEnvironment env,SupportEvalBuilder builder) {EventBean event;if (assertion.getUnderlying() instanceof Map) {event = new MapEventBean((Map<String, Object>) assertion.getUnderlying(), eventType);} else {if (eventType.getUnderlyingType() != assertion.getUnderlying()) {eventType = getSubtype(assertion.getUnderlying(), env);}event = new BeanEventBean(assertion.getUnderlying(), eventType);}EventBean[] eventsPerStream = new EventBean[] {event};for (Map.Entry<String, SupportEvalExpected> expected :assertion.getBuilder().getResults().entrySet()) {if (builder.getExludeNamesExcept() != null&& !builder.getExludeNamesExcept().equals(expected.getKey())) {continue;}ExprEvaluator eval = nodes.get(expected.getKey());Object result = null;try {result = eval.evaluate(eventsPerStream, true, null);} catch (Throwable t) {fail();}doAssert(false, assertionNumber, expected.getKey(), expected.getValue(), result);}}}	1
4362	public class A {private void onSetGcGrace(CfDef cfDef, Properties cfProperties, StringBuilder builder) {String gcGraceSeconds = cfProperties.getProperty(CassandraConstants.GC_GRACE_SECONDS);if (gcGraceSeconds != null) {try {if (builder != null) {appendPropertyToBuilder(builder, gcGraceSeconds, CassandraConstants.GC_GRACE_SECONDS);} else {cfDef.setGc_grace_seconds(Integer.parseInt(gcGraceSeconds));}} catch (NumberFormatException nfe) {throw new SchemaGenerationException(nfe);}}}}	1
4363	public class A {private Response getSamlpPostLogoutRequest(String relayState, LogoutWrapper<LogoutRequest> logoutRequest)throws SignatureException, WSSecurityException {String encodedSamlRequest = encodeSaml(logoutRequest);String singleLogoutLocation = idpMetadata.getSingleLogoutLocation();String submitFormUpdated =String.format(submitForm, singleLogoutLocation, SAML_REQUEST, encodedSamlRequest, relayState);Response.ResponseBuilder ok = Response.ok(submitFormUpdated);return ok.build();}}	1
4364	"public class A {public void createTable(final Table table) throws HiveMetaStoreException {ClientAction<Void> create =new ClientAction<Void>() {@Overridepublic Void call() throws TException {try {client.createTable(table.getTTable());} catch (NoSuchObjectException e) {throw new HiveMetaStoreException(""Hive table not found: "" + table.getDbName() + ""."" + table.getTableName());} catch (AlreadyExistsException e) {} catch (InvalidObjectException e) {throw new HiveMetaStoreException(""Invalid table"", e);}return null;}};createDatabase(table.getDbName());doAction(create);}}"	1
4365	public class A {public static void deleteMessage(String relativeQueueUrl, String receiptHandle) throws Exception {long ts1 = System.currentTimeMillis();if (useInlineApiCalls) {CQSAPI.deleteMessage(cnsInternal.getUserId(), relativeQueueUrl, receiptHandle);} else {String absoluteQueueUrl = Util.getAbsoluteQueueUrlForRelativeUrl(relativeQueueUrl);sqs.deleteMessage(new DeleteMessageRequest(absoluteQueueUrl, receiptHandle));}long ts2 = System.currentTimeMillis();CMBControllerServlet.valueAccumulator.addToCounter(AccumulatorName.CNSCQSTime, ts2 - ts1);}}	1
4366	public class A {private void processLENGTH(final byte b) {if (b == RELPFrame.SEPARATOR || (currBytes.size() > 0 && b == RELPFrame.DELIMITER)) {final int dataLength = Integer.parseInt(new String(currBytes.toByteArray(), charset));frameBuilder.dataLength(dataLength);currBytes.reset();if (b == RELPFrame.SEPARATOR) {currState = RELPState.DATA;} else {frameBuilder.data(new byte[0]);currState = RELPState.TRAILER;}} else {currBytes.write(b);}}}	1
4367	"public class A {public static void flushAuthenticationUserCache(String userName) {ApplicationContext ctx =WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext);try {UserCache userCache = (UserCache) ctx.getBean(""userCache"");if (userCache != null) {userCache.removeUserFromCache(userName);}} catch (NoSuchBeanDefinitionException exc) {}}}"	1
4368	public class A {@Overridepublic synchronized boolean stop() {try {if (canalStater.isRunning()) {canalStater.stop(true);return true;}} catch (Throwable e) {}return false;}}	1
4369	public class A {public void remove(T element) {List<T> parentNodes = getModel().getParents(element);try {getModel().removeNode(element);} catch (NullPointerException e) {}getRenderer().refreshHoursValueForNodes(parentNodes);getRenderer().refreshBudgetValueForNodes(parentNodes);}}	1
4370	public class A {private void tearDown() {AbstractBasePoller poller = systemInformationPoller;if (poller != null) {poller.unregisterPollTask();systemInformationPoller = null;}poller = energyPoller;if (poller != null) {poller.unregisterPollTask();energyPoller = null;}poller = systemStatePoller;if (poller != null) {poller.unregisterPollTask();systemStatePoller = null;}poller = systemParameterPoller;if (poller != null) {poller.unregisterPollTask();systemParameterPoller = null;}comms = null;}}	4
4371	public class A {private Job runJob(ExtensionIndexRequest request) {this.currentRequest = request;try {Job job = this.jobs.execute(ExtensionIndexJob.JOB_TYPE, request);job.join();return job;} catch (Exception e) {if (!this.disposed) {}} finally {this.currentRequest = null;}return null;}}	1
4372	public class A {private static String checkHexKey(String input) {if (input == null || input.trim().isEmpty()) {return CryptoKeyProvider.EMPTY_KEY;}return input;}}	1
4373	public class A {@Overridepublic void onPartitionsAssigned(Collection<TopicPartition> partitions) {partitions.forEach(partition -> {});}}	1
4374	public class A {private Set<String> getBeanPropertyNames(final Class<?> clazz) {try {Set<String> beanProps = new HashSet<String>();PropertyDescriptor[] propDescriptors = getBeanInfo(clazz).getPropertyDescriptors();for (PropertyDescriptor propDescriptor : propDescriptors) {if (propDescriptor.getReadMethod() != null) {beanProps.add(propDescriptor.getName());}}return beanProps;} catch (IntrospectionException e) {}return newHashSet();}}	1
4375	public class A {@Overridepublic String getTitle(long classPK, Locale locale) {try {AssetRenderer<?> assetRenderer = getAssetRenderer(classPK);if (assetRenderer != null) {return assetRenderer.getTitle(locale);}} catch (Exception exception) {if (_log.isWarnEnabled()) {}}return null;}}	1
4376	"public class A {@PUT@Path(""/changePassword"")@SubmarineApipublic Response changePassword(SysUser sysUser) {try {userService.changePassword(sysUser);} catch (Exception e) {return new JsonResponse.Builder<>(Response.Status.OK).success(false).message(""delete user failed!"").build();}return new JsonResponse.Builder<>(Response.Status.OK).success(true).message(""delete  user successfully!"").build();}}"	2
4377	"public class A {@AfterClasspublic static void destroy() throws IOException {embeddedNode.stop();FileUtils.deleteDirectory(new File("".\\data""));}}"	1
4378	"public class A {public CacheSerializableRunnable getCacheSerializableRunnableForPRCreate(final String regionName) {SerializableRunnable prIndexCreator =new CacheSerializableRunnable(""PrRegionCreator"") {@Overridepublic void run2() {try {Cache cache = getCache();LogWriter logger = cache.getLogger();PartitionedRegion region = (PartitionedRegion) cache.getRegion(regionName);Map indexMap = region.getIndex();Set indexSet = indexMap.entrySet();Iterator it = indexSet.iterator();while (it.hasNext()) {Map.Entry entry = (Map.Entry) it.next();Index index = (Index) entry.getValue();}} finally {GemFireCacheImpl.testCacheXml = null;}}};return (CacheSerializableRunnable) prIndexCreator;}}"	2
4379	public class A {@Overridepublic Response toResponse(JobRunningException jobRunningException) {return Response.status(Status.INTERNAL_SERVER_ERROR).entity(new JobRunningExceptionInfo(jobRunningException)).build();}}	1
4380	public class A {@Overridepublic boolean isSatisfiedBy(Project project) {TaskContainer taskContainer = project.getTasks();Task jarTask = taskContainer.findByName(JavaPlugin.JAR_TASK_NAME);if (!(jarTask instanceof Jar)) {if (logger.isInfoEnabled()) {}return false;}return true;}}	1
4381	public class A {public String setNamespace(String futureNamespace) {String previousNamespace = namespace;namespace = futureNamespace;return previousNamespace;}}	1
4382	"public class A {@Around(value = ""mQAdminMethodPointCut() || multiMQAdminMethodPointCut()"")public Object aroundMQAdminMethod(ProceedingJoinPoint joinPoint) throws Throwable {long start = System.currentTimeMillis();Object obj = null;try {MethodSignature signature = (MethodSignature) joinPoint.getSignature();Method method = signature.getMethod();MultiMQAdminCmdMethod multiMQAdminCmdMethod =method.getAnnotation(MultiMQAdminCmdMethod.class);if (multiMQAdminCmdMethod != null && multiMQAdminCmdMethod.timeoutMillis() > 0) {MQAdminInstance.initMQAdminInstance(multiMQAdminCmdMethod.timeoutMillis(),rmqConfigure.getAccessKey(),rmqConfigure.getSecretKey());} else {MQAdminInstance.initMQAdminInstance(0, rmqConfigure.getAccessKey(), rmqConfigure.getSecretKey());}obj = joinPoint.proceed();} finally {MQAdminInstance.destroyMQAdminInstance();}return obj;}}"	1
4383	public class A {@Overridepublic void commitTask(TaskAttemptContext taskContext) throws IOException {for (String alias : outputCommitters.keySet()) {BaseOutputCommitterContainer outputContainer = outputCommitters.get(alias);OutputCommitter baseCommitter = outputContainer.getBaseCommitter();TaskAttemptContext committerContext = outputContainer.getContext();if (baseCommitter.needsTaskCommit(committerContext)) {baseCommitter.commitTask(committerContext);}}}}	1
4384	"public class A {public DaemonConnection connect(int port, byte[] token) throws DaemonException.ConnectException {InetSocketAddress address = new InetSocketAddress(InetAddress.getLoopbackAddress(), port);try {SocketChannel socketChannel = SocketChannel.open();Socket socket = socketChannel.socket();socket.connect(address, CONNECT_TIMEOUT);if (socket.getLocalSocketAddress().equals(socket.getRemoteSocketAddress())) {socketChannel.close();throw new DaemonException.ConnectException(String.format(""Socket connected to itself on %s."", address));}ByteBuffer tokenBuffer = ByteBuffer.wrap(token);do {socketChannel.write(tokenBuffer);} while (tokenBuffer.remaining() > 0);return new DaemonConnection(socketChannel);} catch (DaemonException.ConnectException e) {throw e;} catch (Exception e) {throw new DaemonException.ConnectException(String.format(""Could not connect to server %s."", address), e);}}}"	3
4385	public class A {protected void addGraph(final String name, final String configurationFile) {try {final Graph newGraph = GraphFactory.open(configurationFile);putGraph(name, newGraph);} catch (RuntimeException re) {}}}	3
4386	"public class A {private HashMap<String, String> getNamespacesFromConfig() {HashMap<String, String> nss = new HashMap<>();try {File file = new File(ConfigCore.getKitodoConfigDirectory() + ""kitodo_exportXml.xml"");if (file.exists() && file.canRead()) {XMLConfiguration config = new XMLConfiguration(file);config.setListDelimiter('&');config.setReloadingStrategy(new FileChangedReloadingStrategy());int count = config.getMaxIndex(""namespace"");for (int i = 0; i <= count; i++) {String name = config.getString(""namespace("" + i + "")[@name]"");String value = config.getString(""namespace("" + i + "")[@value]"");nss.put(name, value);}}} catch (ConfigurationException | RuntimeException e) {nss = new HashMap<>();}return nss;}}"	1
4387	"public class A {public void service(HttpServletRequest req, HttpServletResponse res) throws Exception {boolean debug = log.isDebugEnabled();try {req.setCharacterEncoding(""UTF-8"");} catch (UnsupportedEncodingException e) {}String portalPath = req.getRequestURI().substring(req.getContextPath().length());Router router = routerRef.get();if (router != null) {Iterator<Map<QualifiedName, String>> matcher =router.matcher(portalPath, req.getParameterMap());boolean started = false;boolean processed = false;try {while (matcher.hasNext() && !processed) {Map<QualifiedName, String> parameters = matcher.next();String handlerKey = parameters.get(HANDLER_PARAM);if (handlerKey != null) {WebRequestHandler handler = handlers.get(handlerKey);if (handler != null) {if (debug) {}if (!started && handler.getRequiresLifeCycle()) {if (debug) {}RequestLifeCycle.begin(ExoContainerContext.getCurrentContainer());started = true;}processed =handler.execute(new ControllerContext(this, router, req, res, parameters));} else {if (debug) {}}}}} finally {if (started) {if (debug) {}RequestLifeCycle.end();}}if (!processed) {res.sendError(HttpServletResponse.SC_NOT_FOUND);}} else {res.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);}}}"	7
4388	public class A {public void onDeviceConnected(final NodeId nodeId) {final DeviceMastership mastership =new DeviceMastership(nodeId, reconciliationRegistry, clusterSingletonService);deviceMasterships.put(nodeId, mastership);}}	1
4389	"public class A {@Testpublic void testSedaQueue() throws Exception {final CountDownLatch latch = new CountDownLatch(1);CamelContext context = new DefaultCamelContext();context.addRoutes(new RouteBuilder() {public void configure() {from(""seda:test.a"").to(""seda:test.b"");from(""seda:test.b"").process(new Processor() {public void process(Exchange e) {latch.countDown();}});}});context.start();Endpoint endpoint = context.getEndpoint(""seda:test.a"");Exchange exchange = endpoint.createExchange();exchange.getIn().setHeader(""cheese"", 123);Producer producer = endpoint.createProducer();producer.process(exchange);assertTrue(latch.await(5, TimeUnit.SECONDS));context.stop();}}"	1
4390	"public class A {private void doParse(String test, Object bean, int index, String property, boolean expected) {boolean result = false;try {result = doParse(test, bean, index, property);} catch (Exception ex) {fail(""Parsing "" + test + "" threw "" + ex);}if (expected) {assertTrue(test + "" didn't return TRUE for "" + property, result);} else {assertFalse(test + "" didn't return FALSE for "" + property, result);}}}"	1
4391	public class A {public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) throws Exception {}}	1
4392	public class A {protected void processForDocumentListPresenter(HistoryToken token) {if (!equal(token.getDocFilterExact(), currentHistoryState.getDocFilterExact())|| !equal(token.getDocFilterText(), currentHistoryState.getDocFilterText())|| !equal(token.isDocFilterCaseSensitive(), currentHistoryState.isDocFilterCaseSensitive())) {documentListPresenter.updateFilterAndRun(token.getDocFilterText(), token.getDocFilterExact(), token.isDocFilterCaseSensitive());}}}	1
4393	"public class A {private void getPOM(JarFile jarFile) {List<JarEntry> entryList = Collections.list(jarFile.entries());for (JarEntry jarEntry : entryList) {if (jarEntry.getName().contains(""pom.xml"")) {try (InputStream inputStream = jarFile.getInputStream(jarEntry)) {pomInformation.parsePom(inputStream);} catch (IOException e) {}}}}}"	1
4394	public class A {private AclImpl convert(AclObjectIdentity aclObjectIdentity, Set<AclEntry> aclEntries, Acl parentAcl) {AclImpl acl =new AclImpl(aclObjectIdentity.toObjectIdentity(),aclObjectIdentity.getId(),aclAuthorizationStrategy,grantingStrategy,parentAcl,null,aclObjectIdentity.isEntriesInheriting(),aclObjectIdentity.getOwnerSid());List<AccessControlEntry> aces = new ArrayList<>(aclEntries.size());for (AclEntry entry : aclEntries) {AccessControlEntry ace =new AccessControlEntryImpl(entry.getId(),acl,entry.getSidObject(),permissionFactory.buildFromMask(entry.getMask()),entry.isGranting(),entry.isAuditSuccess(),entry.isAuditFailure());aces.add(entry.getOrder(), ace);}try {fieldAces.set(acl, aces);} catch (Exception e) {}return acl;}}	1
4395	public class A {@Overridepublic void closeConnection(Connection connection) throws SQLException {if (connection != null) {if (logger.isTraceEnabled()) {}connection.close();}}}	1
4396	"public class A {public static com.liferay.depot.model.DepotEntryGroupRel updateDDMStructuresAvailable(HttpPrincipal httpPrincipal, long depotEntryGroupRelId, boolean ddmStructuresAvailable)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DepotEntryGroupRelServiceUtil.class,""updateDDMStructuresAvailable"",_updateDDMStructuresAvailableParameterTypes5);MethodHandler methodHandler =new MethodHandler(methodKey, depotEntryGroupRelId, ddmStructuresAvailable);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.depot.model.DepotEntryGroupRel) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4397	"public class A {public synchronized KijiTable getTable() throws IOException {PooledKijiTable availableConnection = mConnections.poll();if (null == availableConnection) {if (mPoolSize >= mMaxSize) {throw new NoCapacityException(""Reached max pool size for table ""+ mTableName+ "". There""+ "" are ""+ mPoolSize+ "" tables in the pool."");}availableConnection = new PooledKijiTable(mTableFactory.openTable(mTableName), this);mPoolSize++;if (mPoolSize < mMinSize) {while (mPoolSize < mMinSize) {mConnections.add(new PooledKijiTable(mTableFactory.openTable(mTableName), this));mPoolSize++;}}} else {}final int counter = availableConnection.mRetainCount.incrementAndGet();Preconditions.checkState(counter == 2,""Cannot get retained KijiTable %s: retain counter was %s."",availableConnection.getURI(),counter);return availableConnection;}}"	3
4398	"public class A {public long getMaxDataTime(String dataset) throws Exception {DatasetConfigDTO datasetConfig = ThirdEyeUtils.getDatasetConfigFromName(dataset);TimeSpec timeSpec = ThirdEyeUtils.getTimestampTimeSpecFromDatasetConfig(datasetConfig);DateTimeZone timeZone = Utils.getDataTimeZone(dataset);long maxTime = 0;String sourceName = dataset.split(""\\."")[0];String tableName = SqlUtils.computeSqlTableName(dataset);DataSource dataSource = getDataSourceFromDataset(dataset);try (Connection conn = dataSource.getConnection();Statement stmt = conn.createStatement();ResultSet rs =stmt.executeQuery(SqlUtils.getMaxDataTimeSQL(timeSpec.getColumnName(), tableName, sourceName))) {if (rs.next()) {String maxTimeString = rs.getString(1);if (maxTimeString.indexOf('.') >= 0) {maxTimeString = maxTimeString.substring(0, maxTimeString.indexOf('.'));}String timeFormat = timeSpec.getFormat();if (StringUtils.isBlank(timeFormat) || TimeSpec.SINCE_EPOCH_FORMAT.equals(timeFormat)) {maxTime =timeSpec.getDataGranularity().toMillis(Long.valueOf(maxTimeString) - 1, timeZone);} else {DateTimeFormatter inputDataDateTimeFormatter =DateTimeFormat.forPattern(timeFormat).withZone(timeZone);DateTime endDateTime = DateTime.parse(maxTimeString, inputDataDateTimeFormatter);Period oneBucket = datasetConfig.bucketTimeGranularity().toPeriod();maxTime = endDateTime.plus(oneBucket).getMillis() - 1;}}} catch (Exception e) {throw e;}return maxTime;}}"	1
4399	"public class A {@Override@AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,afterReturningBuilder = PRPAIN201305UV02AdapterEventDescBuilder.class,serviceType = ""Patient Discovery MPI"",version = ""1.0"")public PRPAIN201306UV02 findCandidates(PRPAIN201305UV02 findCandidatesRequest, AssertionType assertion) {return findCandidatesMpi(findCandidatesRequest, assertion);}}"	1
4400	"public class A {private Date _parseDate(String dateString) {try {return DateUtil.parseDate(""yyyyMMddHHmmss"", dateString, LocaleUtil.getDefault());} catch (Exception exception) {if (_log.isWarnEnabled()) {}return new Date();}}}"	1
4401	"public class A {public static com.liferay.commerce.product.model.CPDefinition updateSubscriptionInfo(HttpPrincipal httpPrincipal,long cpDefinitionId,boolean subscriptionEnabled,int subscriptionLength,String subscriptionType,com.liferay.portal.kernel.util.UnicodeProperties subscriptionTypeSettingsUnicodeProperties,long maxSubscriptionCycles,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CPDefinitionServiceUtil.class,""updateSubscriptionInfo"",_updateSubscriptionInfoParameterTypes25);MethodHandler methodHandler =new MethodHandler(methodKey,cpDefinitionId,subscriptionEnabled,subscriptionLength,subscriptionType,subscriptionTypeSettingsUnicodeProperties,maxSubscriptionCycles,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.product.model.CPDefinition) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4402	"public class A {@Overridepublic Template resolve(String input, ExecutionRuntime executionRuntime) {input = executionRuntime.resolveVariables(input);List<String> splittedArguments = DataTypeHandler.getInstance().splitInstructionArguments(input);if (splittedArguments.size() == 2) {DataType templateName =DataTypeHandler.getInstance().resolve(splittedArguments.get(0), executionRuntime);DataType templateVersion =DataTypeHandler.getInstance().resolve(splittedArguments.get(1), executionRuntime);if (templateName instanceof Text && templateVersion instanceof Text) {return TemplateConfiguration.getInstance().getByNameAndVersion(((Text) templateName).getString(),Long.parseLong(((Text) templateVersion).getString())).orElseThrow(() ->new RuntimeException(""Cannot find template with name "" + ((Text) templateName).getString()));} else {throw new IllegalArgumentException(""Cannot fetch template when given "" + templateName);}} else {throw new IllegalArgumentException(""Cannot fetch template with parameters "" + input);}}}"	1
4403	"public class A {public static void main(String[] args) {String path = Paths.get(""."").toAbsolutePath().normalize().toString();}}"	1
4404	"public class A {public static int getGroupEntriesCount(HttpPrincipal httpPrincipal, long groupId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(BookmarksEntryServiceUtil.class,""getGroupEntriesCount"",_getGroupEntriesCountParameterTypes11);MethodHandler methodHandler = new MethodHandler(methodKey, groupId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Integer) returnObj).intValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4405	public class A {@Overridepublic void onMessage(final Message message) {try {final ObjectMessage objectMessage = (ObjectMessage) message;final MessageProcessor processor =this.messageProcessorMap.getMessageProcessor(objectMessage);processor.processMessage(objectMessage);} catch (final Exception e) {}}}	2
4406	"public class A {@Overridepublic void deleteIndex(String indexName, List<String> partitionsToDelete) throws IOException {IndexRecord indexRecord = indexRecordManager.lookUpIndexRecord(indexName);Path tablePath = root.resolve(indexRecord.qualifiedTable);Path columnPath = tablePath.resolve(String.join("","", indexRecord.columns));Path indexLevelPath = columnPath.resolve(indexRecord.indexType);if (!fs.exists(indexLevelPath)) {indexRecordManager.deleteIndexRecord(indexName, partitionsToDelete);return;}Lock lock = new FileBasedLock(fs, indexLevelPath.getParent());try {Runtime.getRuntime().addShutdownHook(new Thread(() -> {lock.unlock();try {fs.close();} catch (IOException e) {throw new UncheckedIOException(""Error closing FileSystem Client: "" + fs.getClass().getName(), e);}}));lock.lock();if (partitionsToDelete.isEmpty()) {fs.deleteRecursively(indexLevelPath);} else {List<Path> toDeletePartitions =fs.walk(indexLevelPath).filter(fs::isDirectory).filter(path -> partitionsToDelete.contains(path.getFileName().toString())).collect(Collectors.toList());for (Path path : toDeletePartitions) {fs.deleteRecursively(path);}if (fs.walk(indexLevelPath).allMatch(fs::isDirectory)) {fs.deleteRecursively(indexLevelPath);}}try {if (fs.list(columnPath).allMatch(FileBasedLock::isLockUtilFile)) {fs.deleteRecursively(columnPath);}if (fs.list(tablePath).allMatch(FileBasedLock::isLockUtilFile)) {fs.deleteRecursively(tablePath);}} catch (Exception e) {}} finally {lock.unlock();}indexRecordManager.deleteIndexRecord(indexName, partitionsToDelete);}}"	1
4407	"public class A {public void compute(String currentLine, String secondLine) {final File baseDir = new File(this.pathToFirstVersion);final String file1 = ModifiedLinesUtils.getCorrectPathFile(currentLine);final String file2 = ModifiedLinesUtils.getCorrectPathFile(secondLine);if (ModifiedLinesUtils.shouldSkip(this.pathToFirstVersion, file1, file2)) {return;}final File f1 = ModifiedLinesUtils.getCorrectFile(baseDir.getAbsolutePath(), file1);final File f2 = ModifiedLinesUtils.getCorrectFile(this.pathToSecondVersion, file2);try {final Diff diff = new AstComparator().compare(f1, f2);if (f1.getAbsolutePath().contains(""src/test/java/"")) {this.buildModifiedTests(diff);} else {this.buildMap(diff);}} catch (Exception e) {e.printStackTrace();}}}"	5
4408	"public class A {public void syncSequenceFilePair(SequenceFilePair pair, Sample sample) {RemoteStatus fileStatus = pair.getRemoteStatus();fileStatus.setSyncStatus(SyncStatus.UPDATING);try {pair = pairRemoteService.mirrorSequencingObject(pair);syncSequencingObject(pair, sample, fileStatus);} catch (Exception e) {throw new ProjectSynchronizationException(""Could not synchronize pair "" + pair.getRemoteStatus().getURL(), e);}}}"	1
4409	public class A {@Overridepublic void disconnect() {this.kafkaSourceState = null;if (consumerKafkaGroup != null) {consumerKafkaGroup.setKafkaSourceState(null);consumerKafkaGroup.shutdown();}}}	1
4410	public class A {public void deleteData(List<String> paths, long time)throws IoTDBConnectionException, StatementExecutionException {for (int i = 0; i < RETRY; i++) {Session session = getSession();try {session.deleteData(paths, time);putBack(session);return;} catch (IoTDBConnectionException e) {cleanSessionAndMayThrowConnectionException(session, i, e);} catch (StatementExecutionException | RuntimeException e) {putBack(session);throw e;}}}}	1
4411	public class A {public Collection<CachedFacility> getAllFacilitiesToDisplay(LoggedInInfo loggedInInfo) {try {if (previousConsentToView == null) return (getAllRemoteFacilities());else return (getPreviousConsentFacilities(loggedInInfo));} catch (Exception e) {integratorServerError = true;return (null);}}}	1
4412	public class A {public void stop() {try {metrics.unregister();getRpcServer().stop();} catch (Exception ex) {}}}	2
4413	"public class A {public void validate(final String host, int port, final String path, boolean secure, final Cookie cookie)throws MalformedCookieException {if (cookie instanceof Cookie2) {if (cookie.getName().indexOf(' ') != -1) {throw new MalformedCookieException(""Cookie name may not contain blanks"");}if (cookie.getName().startsWith(""$"")) {throw new MalformedCookieException(""Cookie name may not start with $"");}CookieOrigin origin = new CookieOrigin(getEffectiveHost(host), port, path, secure);for (Iterator i = getAttribHandlerIterator(); i.hasNext(); ) {CookieAttributeHandler handler = (CookieAttributeHandler) i.next();handler.validate(cookie, origin);}} else {this.rfc2109.validate(host, port, path, secure, cookie);}}}"	1
4414	public class A {@TimeSteppublic void timeStep(ThreadState state) {firstLock.lock();try {TransactionContext ctx = targetInstance.newTransactionContext();try {ctx.beginTransaction();TransactionalQueue<Integer> queue = ctx.getQueue(name + 'q');queue.offer(1);secondLock.lock();secondLock.unlock();queue.take();ctx.commitTransaction();state.counter.committed++;} catch (Exception txnException) {try {ctx.rollbackTransaction();state.counter.rolled++;} catch (Exception rollException) {state.counter.failedRollbacks++;}}} catch (Exception e) {} finally {firstLock.unlock();}}}	3
4415	"public class A {private LateralTCPDiscoveryListener getDiscoveryListener(final ITCPLateralCacheAttributes ilca,final ICompositeCacheManager cacheManager,final ICacheEventLogger cacheEventLogger,final IElementSerializer elementSerializer) {final String key = ilca.getUdpDiscoveryAddr() + "":"" + ilca.getUdpDiscoveryPort();return lTCPDLInstances.computeIfAbsent(key,key1 -> {return new LateralTCPDiscoveryListener(this.getName(),(CompositeCacheManager) cacheManager,cacheEventLogger,elementSerializer);});}}"	1
4416	public class A {public void warn(Throwable e) {try {} catch (Throwable ignored) {}}}	1
4417	public class A {@Overridepublic void insertRollups(List<SingleRollupWriteContext> writeContexts) {if (writeContexts.size() == 0) {return;}Timer.Context ctx =Instrumentation.getWriteTimerContext(writeContexts.get(0).getDestinationCF().getName());try {BatchStatement batch = new BatchStatement(BatchStatement.Type.UNLOGGED);for (SingleRollupWriteContext writeContext : writeContexts) {Rollup rollup = writeContext.getRollup();Locator locator = writeContext.getLocator();Granularity granularity = writeContext.getGranularity();int ttl = getTtl(locator, rollup.getRollupType(), granularity);RollupType rollupType = writeContext.getRollup().getRollupType();DAbstractMetricIO io = getIO(rollupType.name().toLowerCase(), granularity);Statement statement =io.createStatement(locator, writeContext.getTimestamp(), rollup, writeContext.getGranularity(), ttl);batch.add(statement);}Session session = DatastaxIO.getSession();session.execute(batch);} catch (Exception ex) {Instrumentation.markWriteError();} finally {ctx.stop();}}}	1
4418	public class A {@Overridepublic void run() {try {groomServer.run();driver.sendStatusUpdate(TaskStatus.newBuilder().setTaskId(task.getTaskId()).setState(TaskState.TASK_FINISHED).build());try {Thread.sleep(2000);} catch (InterruptedException e) {}driver.stop();} catch (Throwable t) {driver.stop();System.exit(1);}}}	2
4419	public class A {protected synchronized void abort() {if (open) {disk.unwatch(uri, this);open = false;changed = false;deleted = false;try {deleteWriteFile();} catch (IOException e) {}}}}	1
4420	public class A {@Deprecated@Overridepublic void execute(ModelInfo model, IUserContext user, Map<String, Object> context) {Collection<PolicyEntry> policies =repositoryFactory.getPolicyManager(user.getWorkspaceId()).getPolicyEntries(model.getId());for (PolicyEntry entry : policies) {repositoryFactory.getPolicyManager(user.getWorkspaceId()).removePolicyEntry(model.getId(), entry);}repositoryFactory.getPolicyManager(user.getWorkspaceId()).addPolicyEntry(model.getId(),PolicyEntry.of(user.getUsername(), PrincipalType.User, Permission.FULL_ACCESS),PolicyEntry.of(RepositoryRole.SYS_ADMIN.getName(), PrincipalType.Role, Permission.FULL_ACCESS));model.setAuthor(user.getUsername());repositoryFactory.getRepository(user.getWorkspaceId()).updateMeta(model);}}	2
4421	public class A {@Overridepublic void initialize(StartupContext startupContext, UserStore userStore, Map<String, String> properties) {try {persistDefaultAuthResources();} catch (AuthServerException e) {}}}	1
4422	"public class A {private List<QueryHandle> getPersistedQueryHandles(String userName,String driver,String queryName,long fromTime,long toTime,Set<Status> statuses)throws LensException {List<Status> finishedStatusesQueried = finishedStatuses(statuses);if (finishedStatusesQueried == null || !finishedStatusesQueried.isEmpty()) {if (""all"".equalsIgnoreCase(userName)) {userName = null;}List<QueryHandle> persistedQueries =lensServerDao.findFinishedQueries(finishedStatusesQueried, userName, driver, queryName, fromTime, toTime);if (persistedQueries != null && !persistedQueries.isEmpty()) {return persistedQueries;}}return Collections.emptyList();}}"	1
4423	"public class A {@Overridepublic Job retract(MediaPackage mediaPackage) throws PublicationException {List<BasicNameValuePair> params = new ArrayList<BasicNameValuePair>();params.add(new BasicNameValuePair(""mediapackage"", MediaPackageParser.getAsXml(mediaPackage)));HttpPost post = new HttpPost(""/retract"");HttpResponse response = null;try {post.setEntity(new UrlEncodedFormEntity(params, ""UTF-8""));response = getResponse(post);if (response != null) {return JobParser.parseJob(response.getEntity().getContent());}} catch (Exception e) {throw new PublicationException(""Unable to retract mediapackage ""+ mediaPackage+ "" using a remote youtube publication service"",e);} finally {closeConnection(response);}throw new PublicationException(""Unable to retract mediapackage ""+ mediaPackage+ "" using a remote youtube publication service"");}}"	1
4424	public class A {public Optional<Double> parseLatency(String inputLine) {Matcher m = LATENCY_PATTERN.matcher(inputLine);if (m.find() && m.groupCount() == 1) {return Optional.of(Double.parseDouble(m.group(1)));}return Optional.empty();}}	2
4425	"public class A {private void ensureReplicatorThread() throws Exception {checkCommErrors();if (!this.isConnected && stopOnEOF) {return;}if (!this.isConnectionAlive()) {client.disconnect();if (this.gtidPositioning) {client.setBinlogFilename("""");client.setBinlogPosition(4L);client.connect(5000);throw new ClientReconnectedException();} else {client.connect(5000);}}}}"	2
4426	"public class A {@Overridepublic void initialize() {HwSerialBridgeConfig configuration = getConfigAs(HwSerialBridgeConfig.class);serialPortName = configuration.getSerialPort();updateTime = configuration.getUpdateTime();if (configuration.getBaudRate() == null) {baudRate = HwSerialBridgeConfig.DEFAULT_BAUD;} else {baudRate = configuration.getBaudRate().intValue();}if (serialPortName == null) {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, ""Serial port not specified"");return;}scheduler.execute(() -> openConnection());}}"	4
4427	"public class A {@Overridepublic SearchResult search(final ObjectClass objectClass,final Filter filter,final SearchResultsHandler handler,final OperationOptions options) {SearchResult result = new SearchResult();try {for (int record = 1; reader().hasNext(); record++) {Map<String, String> row = reader().next();String keyValue = row.get(keyColumn);if (StringUtils.isBlank(keyValue)) {keyValue = ""Record "" + record;}ConnectorObjectBuilder builder =new ConnectorObjectBuilder().setObjectClass(objectClass).setUid(keyValue).setName(keyValue);row.forEach((key, value) ->builder.addAttribute(arrayElementsSeparator == null? AttributeBuilder.build(key, value): AttributeBuilder.build(key,(Object[])StringUtils.splitByWholeSeparator(value, arrayElementsSeparator))));ConnectorObject obj = builder.build();if (filter == null || filter.accept(obj)) {handler.handle(obj);} else {}}} catch (IOException e) {throw new ConnectorException(e);}return result;}}"	2
4428	"public class A {private ConfigurationAsyncClient buildClient(String store) throws IllegalArgumentException {if (clients.containsKey(store)) {return clients.get(store);}ConfigurationClientBuilder builder = getBuilder();ExponentialBackoff retryPolicy =new ExponentialBackoff(appProperties.getMaxRetries(), Duration.ofMillis(800), Duration.ofSeconds(8));builder =builder.addPolicy(new BaseAppConfigurationPolicy()).retryPolicy(new RetryPolicy(retryPolicy));TokenCredential tokenCredential = null;Connection connection = pool.get(store);String endpoint = Optional.ofNullable(connection).map(Connection::getEndpoint).orElse(null);if (tokenCredentialProvider != null) {tokenCredential = tokenCredentialProvider.getAppConfigCredential(endpoint);}if ((tokenCredential != null|| (connection.getClientId() != null&& StringUtils.isNotEmpty(connection.getClientId())))&& (connection != null && StringUtils.isNotEmpty(connection.getConnectionString()))) {throw new IllegalArgumentException(""More than 1 Conncetion method was set for connecting to App Configuration."");} else if (tokenCredential != null&& connection != null&& connection.getClientId() != null&& StringUtils.isNotEmpty(connection.getClientId())) {throw new IllegalArgumentException(""More than 1 Conncetion method was set for connecting to App Configuration."");}if (tokenCredential != null) {builder.credential(tokenCredential);} else if ((connection.getClientId() != null&& StringUtils.isNotEmpty(connection.getClientId()))&& connection.getEndpoint() != null) {ManagedIdentityCredentialBuilder micBuilder =new ManagedIdentityCredentialBuilder().clientId(connection.getClientId());builder.credential(micBuilder.build());} else if (StringUtils.isNotEmpty(connection.getConnectionString())) {builder.connectionString(connection.getConnectionString());} else if (connection.getEndpoint() != null) {ManagedIdentityCredentialBuilder micBuilder = new ManagedIdentityCredentialBuilder();builder.credential(micBuilder.build());} else {throw new IllegalArgumentException(""No Configuration method was set for connecting to App Configuration"");}builder.endpoint(endpoint);if (clientProvider != null) {clientProvider.setup(builder, endpoint);}clients.put(store, builder.buildAsyncClient());return clients.get(store);}}"	4
4429	"public class A {@Overridepublic synchronized void sendMessage(byte[] message) throws KuraException, IOException {checkIfClosed();if (message == null) {throw new NullPointerException(""Message must not be null"");}if (this.outputStream == null) {openOutputStream();}this.outputStream.write(message, 0, message.length);this.outputStream.flush();}}"	1
4430	"public class A {public boolean isServiceSettingTrue(String serviceparameter) {String value = getServiceSetting(serviceparameter);boolean isTrue = (value != null ? value.equalsIgnoreCase(""true"") : false);return isTrue;}}"	1
4431	"public class A {protected void check(String xPathString) {if (this.xmlAsserterConfiguration.ignoreXPathException) {return;}ResultSequence expr = resultSequence(xPathString);boolean xpathMatched = !expr.empty();if (!xpathMatched) {throw new IllegalStateException(""Parsed XML [""+ this.cachedObjects.xmlAsString+ ""] doesn't match the XPath <""+ xPathString+ "">"");}}}"	1
4432	public class A {private Map<String, String> extractVariables(final String variablesBody) {final Map<String, String> map = new HashMap<String, String>();final Matcher m = PATTERN_VARIABLES_BODY.matcher(variablesBody);while (m.find()) {final String key = m.group(1);final String value = m.group(2);if (map.containsKey(key)) {}map.put(key, value);}return map;}}	2
4433	public class A {public static Dialect getDialect(SessionFactory sessionFactory) {if (dialect != null) {return dialect;}SessionFactoryImplementor implementor = (SessionFactoryImplementor) sessionFactory;dialect = implementor.getDialect();if (log.isDebugEnabled()) {}return dialect;}}	1
4434	public class A {public void unbind(SourceAttributeRestriction sourceAttributeRestriction) {if (sourceAttributeRestriction != null) {String sourceId = sourceAttributeRestriction.getSource().getId();sourceIdToSupportedAttributesMap.remove(sourceId);}}}	1
4435	"public class A {@Overridepublic void actionPerformed(ActionEvent e) {if (SystemUtils.IS_OS_MAC_OSX) {FileDialog chooser = new FileDialog(MediathekGui.ui(), ""Filme exportieren"");chooser.setMode(FileDialog.SAVE);chooser.setVisible(true);if (chooser.getFile() != null) {try {File destination = new File(chooser.getDirectory() + chooser.getFile());jTextFieldExportPath.setText(destination.getAbsolutePath());} catch (Exception ex) {}}} else {int returnVal;JFileChooser chooser = new JFileChooser();if (!jTextFieldExportPath.getText().equals("""")) {chooser.setCurrentDirectory(new File(jTextFieldExportPath.getText()));}chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);chooser.setFileHidingEnabled(false);returnVal = chooser.showOpenDialog(null);if (returnVal == JFileChooser.APPROVE_OPTION) {try {jTextFieldExportPath.setText(chooser.getSelectedFile().getAbsolutePath());} catch (Exception ex) {}}}}}"	2
4436	"public class A {private Result doUpdateMailbox(final MBox mailbox, MailboxData mailboxData) {final String desiredMailAddress = mailboxData.address;final String[] mailAddressParts = HelperUtils.splitMailAddress(desiredMailAddress);if (!HelperUtils.checkEmailAddressValidness(mailAddressParts, xcmConfiguration.DOMAIN_LIST)) {return ApiResults.forbidden(""mailboxAddress"", ""Domain is not allowed."");}final String localPart = mailAddressParts[0];final String domainPart = mailAddressParts[1];final MBox mbx = MBox.find(localPart, domainPart);if (mbx != null && mbx.getId() != mailbox.getId()) {return ApiResults.forbidden(""mailboxAddress"", ""Email address is already taken."");}mailbox.setAddress(localPart);mailbox.setDomain(domainPart);mailbox.setTs_Active(mailboxData.deactivationTime);mailbox.setExpired(mailboxData.deactivationTime <= System.currentTimeMillis());mailbox.setForwardEmails(mailboxData.forwardEnabled);mailbox.save();mailboxData = new MailboxData(mailbox);return ApiResults.ok().render(mailboxData);}}"	2
4437	public class A {@Overridepublic void punsubscribeAll() {}}	1
4438	public class A {public void addSecondary(BrooklynClassLoadingContext target) {if (!(target instanceof JavaBrooklynClassLoadingContext)) {}this.secondaries.add(target);}}	1
4439	public class A {@Overridepublic Response setCollaborators(CollaboratorsRepresentation collaborators, String entityId, String entityType) {return this.setCollaborators(collaborators.getCollaborators(), entityId, entityType, true);}}	1
4440	"public class A {@Overridepublic void updateConfigInfo4Beta(ConfigInfo configInfo,String betaIps,String srcIp,String srcUser,Timestamp time,boolean notify) {String appNameTmp =StringUtils.isBlank(configInfo.getAppName()) ? StringUtils.EMPTY : configInfo.getAppName();String tenantTmp =StringUtils.isBlank(configInfo.getTenant()) ? StringUtils.EMPTY : configInfo.getTenant();String md5 = MD5Utils.md5Hex(configInfo.getContent(), Constants.ENCODE);try {jt.update(""UPDATE config_info_beta SET content=?, md5 = ?,""+ "" src_ip=?,src_user=?,gmt_modified=?,app_name=? WHERE data_id=? AND group_id=? AND""+ "" tenant_id=?"",configInfo.getContent(),md5,srcIp,srcUser,time,appNameTmp,configInfo.getDataId(),configInfo.getGroup(),tenantTmp);} catch (CannotGetJdbcConnectionException e) {throw e;}}}"	1
4441	public class A {@Overridepublic void sendNCBIUploadExceptionEmail(String adminEmailAddress, Exception rootCause, Long submissionId) throws MailSendException {}}	1
4442	"public class A {@Testpublic void runFromDriver() {try {String matrixPath = """";String vectorPath = """";String outputPath = """";if (matrixPath.isEmpty() || vectorPath.isEmpty() || outputPath.isEmpty()) {return;}ExampleDriver.main(new String[] {""spmv"", matrixPath, vectorPath, outputPath, ""4""});} catch (Exception e) {e.printStackTrace();fail(e.getLocalizedMessage());}}}"	1
4443	"public class A {public Future<Boolean> isHealthy(final Channel channel) {checkNotNull(channel, ""expected non-null channel"");final RntbdRequestManager requestManager = channel.pipeline().get(RntbdRequestManager.class);final Promise<Boolean> promise = channel.eventLoop().newPromise();if (requestManager == null) {reportIssueUnless(logger, !channel.isActive(), channel, ""active with no request manager"");return promise.setSuccess(Boolean.FALSE);}final Timestamps timestamps = requestManager.snapshotTimestamps();final long currentTime = System.nanoTime();if (currentTime - timestamps.lastChannelRead() < recentReadWindow) {return promise.setSuccess(Boolean.TRUE);}final long writeDelay = timestamps.lastChannelWriteAttempt() - timestamps.lastChannelWrite();if (writeDelay > this.writeDelayLimit&& currentTime - timestamps.lastChannelWriteAttempt() > writeHangGracePeriod) {final Optional<RntbdContext> rntbdContext = requestManager.rntbdContext();final int pendingRequestCount = requestManager.pendingRequestCount();return promise.setSuccess(Boolean.FALSE);}final long readDelay = timestamps.lastChannelWrite() - timestamps.lastChannelRead();if (readDelay > this.readDelayLimit&& currentTime - timestamps.lastChannelWrite() > readHangGracePeriod) {final Optional<RntbdContext> rntbdContext = requestManager.rntbdContext();final int pendingRequestCount = requestManager.pendingRequestCount();return promise.setSuccess(Boolean.FALSE);}if (this.idleConnectionTimeout > 0L) {if (currentTime - timestamps.lastChannelRead() > this.idleConnectionTimeout) {return promise.setSuccess(Boolean.FALSE);}}channel.writeAndFlush(RntbdHealthCheckRequest.MESSAGE).addListener(completed -> {if (completed.isSuccess()) {promise.setSuccess(Boolean.TRUE);} else {promise.setSuccess(Boolean.FALSE);}});return promise;}}"	3
4444	"public class A {@Overridepublic long size() throws IOException {try {return getConvertedPropertyValue(securityContext, graphObject, key).getBytes(Charset.forName(""utf-8"")).length;} catch (FrameworkException fex) {}return 0L;}}"	1
4445	public class A {@Overrideprotected void process(ClusterDistributionManager dm) {if (CacheClientNotifier.getInstance() != null) {Class<? extends DataSerializer> c;try {c = getCachedClass(this.className);} catch (ClassNotFoundException ex) {return;}DataSerializer s;try {s = newInstance(c);} catch (IllegalArgumentException ex) {return;}s.setEventId(this.eventId);try {InternalDataSerializer._register(s, false);} catch (IllegalArgumentException | IllegalStateException ex) {}} else {try {InternalDataSerializer.register(this.className, false, this.eventId, null, this.id);} catch (IllegalArgumentException | IllegalStateException ex) {}}}}	4
4446	"public class A {public static void main(String[] args) throws Exception {@SuppressWarnings(""resource"")ClassPathXmlApplicationContext ac =new ClassPathXmlApplicationContext(""/META-INF/spring/integration/gmail-imap-idle-config.xml"");DirectChannel inputChannel = ac.getBean(""receiveChannel"", DirectChannel.class);inputChannel.subscribe(new MessageHandler() {@Overridepublic void handleMessage(Message<?> message) throws MessagingException {}});}}"	1
4447	public class A {private static int launch(Configuration conf, Tool tool, String[] args) throws Exception {if (LOG.isDebugEnabled()) {}ClassLoader contextClassLoader = switchContextClassLoader(conf.getClassLoader());try {return ToolRunner.run(conf, tool, args);} finally {switchContextClassLoader(contextClassLoader);}}}	1
4448	public class A {@UnitOfWork@Overridepublic Optional<User> authenticate(String credentials) {final Token token = dao.findByContent(credentials);if (token != null) {User byId = userDAO.findById(token.getUserId());if (byId.isBanned()) {return Optional.empty();}initializeUserProfiles(byId);return Optional.of(byId);} else {return userinfoPlusFromToken(credentials).map(userinfoPlus -> {final String email = userinfoPlus.getEmail();User user = userDAO.findByGoogleEmail(email);if (user == null) {user = createUser(userinfoPlus);}user.setTemporaryCredential(credentials);initializeUserProfiles(user);return Optional.of(user);}).filter(user -> !user.get().isBanned()).orElse(Optional.empty());}}}	1
4449	public class A {public MetadataResult<ComponentMetadataTypesDescriptor> resolveComponentMetadata(ComponentModel componentModel, ComponentElementDeclaration componentElementDeclaration) {try {if (LOGGER.isDebugEnabled()) {}Optional<ConfigurationInstance> optionalConfigurationInstance =getConfigurationInstance(componentModel, componentElementDeclaration);MetadataKeyResult metadataKeyResult =new MetadataKeyDeclarationResolver(componentModel, componentElementDeclaration, expressionManager).resolveKeyResult();if (!metadataKeyResult.isComplete()) {return failure(newFailure().withMessage(metadataKeyResult.getPartialReason()).withFailureCode(INVALID_METADATA_KEY).onComponent());}MetadataKey metadataKey = metadataKeyResult.getMetadataKey();if (LOGGER.isDebugEnabled()) {}ClassLoader extensionClassLoader =getClassLoader(artifactHelper.getExtensionModel(componentElementDeclaration));return resolveMetadata(componentModel, optionalConfigurationInstance, metadataKey, extensionClassLoader);} catch (MetadataResolvingException e) {if (LOGGER.isWarnEnabled()) {}return failure(newFailure(e).withFailureCode(e.getFailure()).onComponent());} catch (ExpressionNotSupportedException e) {return failure(newFailure(e).withFailureCode(INVALID_METADATA_KEY).onKeys());} catch (ExecutorExceptionWrapper e) {Throwable cause = e.getCause();if (cause instanceof MetadataResolvingException) {MetadataResolvingException metadataResolvingException = (MetadataResolvingException) cause;return failure(newFailure(e).withFailureCode(metadataResolvingException.getFailure()).onKeys());}propagateIfPossible(cause, MuleRuntimeException.class);throw new MuleRuntimeException(cause);} catch (Exception e) {propagateIfPossible(e, MuleRuntimeException.class);throw new MuleRuntimeException(e);} finally {if (LOGGER.isDebugEnabled()) {}}}}	5
4450	"public class A {String getMessageIdLocalPart(final Message message) throws MessagingException {final String[] headers = message.getHeader(""Message-Id"");if (headers != null && headers.length > 0) {Matcher matcher = MESSAGE_ID_PATTERN.matcher(headers[0]);if (matcher.matches()) {return matcher.group(1);}}return ""No-Message-Id."" + dateTimeProvider.getElapsedTime();}}"	1
4451	public class A {private void _localize(JSONObject jsonObject, Locale locale) {if (locale == null) {return;}ResourceBundle resourceBundle = _resourceBundleLoader.loadResourceBundle(locale);if (resourceBundle == null) {return;}Map<String, String> map = new HashMap<>();for (String key : jsonObject.keySet()) {if (_localizableKeys.contains(key)) {String value = jsonObject.getString(key);if (Validator.isNotNull(value)) {try {map.put(key, ResourceBundleUtil.getString(resourceBundle, value));} catch (MissingResourceException missingResourceException) {if (_log.isWarnEnabled()) {}}}} else {Object object = jsonObject.get(key);if (object instanceof JSONObject) {_localize((JSONObject) object, locale);} else if (object instanceof JSONArray) {JSONArray jsonArray = (JSONArray) object;for (int i = 0; i < jsonArray.length(); i++) {Object currentObject = jsonArray.get(i);if (currentObject instanceof JSONObject) {_localize((JSONObject) currentObject, locale);}}}}}for (Map.Entry<String, String> entry : map.entrySet()) {jsonObject.put(entry.getKey(), entry.getValue());}}}	1
4452	public class A {public static void log(String s) {}}	1
4453	"public class A {protected String readOutsideFileFirstLine(File dispatchFile, String defaultValue) {BufferedReader br = null;try {br = new BufferedReader(new InputStreamReader(new FileInputStream(dispatchFile), ""UTF-8""));final String line = br.readLine();return line;} catch (Exception continued) {return defaultValue;} finally {if (br != null) {try {br.close();} catch (IOException ignored) {}}}}}"	1
4454	"public class A {@SuppressWarnings(""null"")@RuleAction(label = ""send a raw command"", description = ""Send a raw command to the receiver."")public void sendRawCommand(@ActionInput(name = ""command"") @Nullable String command,@ActionInput(name = ""command"") @Nullable String value) {if (handler == null) {return;}handler.sendRawCommand(command, value);}}"	2
4455	public class A {private void handleAgentStatBatch(TAgentStatBatch tAgentStatBatch) {final List<AgentEventBo> agentEventBoList = this.agentEventBatchMapper.map(tAgentStatBatch);if (CollectionUtils.isEmpty(agentEventBoList)) {return;}try {for (AgentEventBo agentEventBo : agentEventBoList) {insert(agentEventBo);}} catch (Exception e) {}}}	1
4456	public class A {@Overridepublic void rollback() {try {m_transactedSession.rollback();} catch (final JMSException e) {}}}	1
4457	public class A {private boolean isFullyExpired(ZonedDateTime beginningOfRetentionPeriod, BucketName bucketName) {Optional<ZonedDateTime> maybeEndDate = nameGenerator.bucketEndTime(bucketName);if (!maybeEndDate.isPresent()) {}return maybeEndDate.map(endDate -> endDate.isBefore(beginningOfRetentionPeriod)).orElse(false);}}	1
4458	"public class A {@Overridepublic void initialize(final Subject subject,final CallbackHandler callbackHandler,final Map<String, ?> sharedState,final Map<String, ?> options) {super.initialize(subject, callbackHandler, sharedState, options);for (String key : options.keySet()) {final String value = (String) options.get(key);if (""roleFilter"".equalsIgnoreCase(key)) {roleFilter = value;} else if (""roleAttribute"".equalsIgnoreCase(key)) {if ("""".equals(value)) {roleAttribute = ReturnAttributes.NONE.value();} else if (""*"".equals(value)) {roleAttribute = ReturnAttributes.ALL_USER.value();} else {roleAttribute = value.split("","");}} else if (""noResultsIsError"".equalsIgnoreCase(key)) {noResultsIsError = Boolean.valueOf(value);} else if (""roleResolverFactory"".equalsIgnoreCase(key)) {try {roleResolverFactory =(RoleResolverFactory) Class.forName(value).getDeclaredConstructor().newInstance();} catch (Exception e) {throw new IllegalArgumentException(e);}}}if (roleResolverFactory == null) {roleResolverFactory = new PropertiesRoleResolverFactory();}roleResolver = roleResolverFactory.createRoleResolver(options);searchRequest = roleResolverFactory.createSearchRequest(options);searchRequest.setReturnAttributes(roleAttribute);}}"	3
4459	public class A {private InterpreterResult runQuery(String cypherQuery, InterpreterContext interpreterContext) {if (StringUtils.isBlank(cypherQuery)) {return new InterpreterResult(Code.SUCCESS);}try {Iterator<Record> result =this.neo4jConnectionManager.execute(cypherQuery, interpreterContext).iterator();Set<Node> nodes = new HashSet<>();Set<Relationship> relationships = new HashSet<>();List<String> columns = new ArrayList<>();List<List<String>> lines = new ArrayList<List<String>>();while (result.hasNext()) {Record record = result.next();List<Pair<String, Value>> fields = record.fields();List<String> line = new ArrayList<>();for (Pair<String, Value> field : fields) {if (field.value().hasType(InternalTypeSystem.TYPE_SYSTEM.NODE())) {nodes.add(field.value().asNode());} else if (field.value().hasType(InternalTypeSystem.TYPE_SYSTEM.RELATIONSHIP())) {relationships.add(field.value().asRelationship());} else if (field.value().hasType(InternalTypeSystem.TYPE_SYSTEM.PATH())) {nodes.addAll(Iterables.asList(field.value().asPath().nodes()));relationships.addAll(Iterables.asList(field.value().asPath().relationships()));} else {setTabularResult(field.key(), field.value(), columns, line, InternalTypeSystem.TYPE_SYSTEM);}}if (!line.isEmpty()) {lines.add(line);}}if (!nodes.isEmpty()) {return renderGraph(nodes, relationships);} else {return renderTable(columns, lines);}} catch (Exception e) {return new InterpreterResult(Code.ERROR, e.getMessage());}}}	1
4460	public class A {public static void log(String sql) {if (_queryLogLevelInfo) {} else {}}}	2
4461	"public class A {private Location getVisionOffsets(Head head, Location pickLocation) throws Exception {Camera camera = null;for (Camera c : head.getCameras()) {if (c.getVisionProvider() != null) {camera = c;}}if (camera == null) {throw new Exception(""No vision capable camera found on head."");}if (vision.getTemplateImage() == null) {throw new Exception(""Template image is required when vision is enabled."");}if (vision.getAreaOfInterest().getWidth() == 0 || vision.getAreaOfInterest().getHeight() == 0) {throw new Exception(""Area of Interest is required when vision is enabled."");}head.moveToSafeZ();camera.moveTo(pickLocation);VisionProvider visionProvider = camera.getVisionProvider();Rectangle aoi = getVision().getAreaOfInterest();Point[] matchingPoints =visionProvider.locateTemplateMatches(aoi.getX(),aoi.getY(),aoi.getWidth(),aoi.getHeight(),0,0,vision.getTemplateImage());Point match = matchingPoints[0];double imageWidth = camera.getWidth();double imageHeight = camera.getHeight();double templateWidth = vision.getTemplateImage().getWidth();double templateHeight = vision.getTemplateImage().getHeight();double matchX = match.x;double matchY = match.y;matchX += (templateWidth / 2);matchY += (templateHeight / 2);double offsetX = (imageWidth / 2) - matchX;double offsetY = (imageHeight / 2) - matchY;offsetY *= -1;Location unitsPerPixel = camera.getUnitsPerPixel();offsetX *= unitsPerPixel.getX();offsetY *= unitsPerPixel.getY();return new Location(unitsPerPixel.getUnits(), offsetX, offsetY, 0, 0);}}"	8
4462	public class A {public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {this.setPageFromDynaProperty();ServletContext application = getServlet().getServletContext();ActionErrors errors = new ActionErrors();String validationKey = getValidationKey(mapping, request);Validator validator =Resources.initValidator(validationKey, this, application, request, errors, page);try {validatorResults = validator.validate();} catch (ValidatorException e) {}return errors;}}	1
4463	public class A {public synchronized void close() {key.cancel();try {channel.close();} catch (IOException e) {}}}	1
4464	public class A {public static void sendFile(RoutingContext routingContext, int statusCode, String contentType, String filename) {if (!routingContext.response().closed() && !routingContext.response().ended()) {routingContext.response().setStatusCode(statusCode);routingContext.response().putHeader(HttpHeaderNames.CONTENT_TYPE, contentType).sendFile(filename);} else if (routingContext.response().ended()) {}}}	2
4465	public class A {public void waitSensorActive(@Nonnull Sensor[] mSensors) {waitSensorState(mSensors, Sensor.ACTIVE);}}	1
4466	"public class A {@Overridepublic void run() {try {File cacheDir = new File(failoverDir);if (!cacheDir.exists() && !cacheDir.mkdirs()) {throw new IllegalStateException(""failed to create cache dir: "" + failoverDir);}File[] files = cacheDir.listFiles();if (files == null || files.length <= 0) {new DiskFileWriter().run();}} catch (Throwable e) {}}}"	1
4467	public class A {private DatabaseConcept getDatabaseConcept(Map<String, Object> settings) {String concept = (String) settings.get(this.databaseConceptDefinition.getKey());if (concept == null || concept.isEmpty()) {String hibernateDirectories =(String) settings.get(HibernateDatasourceConstants.HIBERNATE_DIRECTORY);concept = DatabaseConcept.SIMPLE.name();if (hibernateDirectories.contains(HIBERNATE_MAPPING_EREPORTING_CONCEPT_PATH)) {concept = DatabaseConcept.EREPORTING.name();} else if (hibernateDirectories.contains(HIBERNATE_MAPPING_TRANSACTIONAL_CONCEPT_PATH)) {concept = DatabaseConcept.TRANSACTIONAL.name();}}return DatabaseConcept.valueOf(concept);}}	1
4468	public class A {private synchronized void getObliviousTasks(List<TaskInProgress> outOfContactTasks) {if (runningTasks == null) {return;}long currentTime = Calendar.getInstance().getTimeInMillis();long monitorPeriod =conf.getLong(Constants.GROOM_PING_PERIOD, Constants.DEFAULT_GROOM_PING_PERIOD);for (Map.Entry<TaskAttemptID, TaskInProgress> entry : runningTasks.entrySet()) {TaskInProgress tip = entry.getValue();if (LOG.isDebugEnabled())if (tip.taskStatus.getRunState().equals(TaskStatus.State.RUNNING)&& (((tip.lastPingedTimestamp == 0&& ((currentTime - tip.startTime) > 10 * monitorPeriod))|| ((tip.lastPingedTimestamp > 0)&& (currentTime - tip.lastPingedTimestamp) > 6 * monitorPeriod)))) {outOfContactTasks.add(tip);}}}}	3
4469	"public class A {public void createView(String name, String tableName, String... columnNames) throws SQLException {if (columnNames.length == 0) {throw new IllegalArgumentException(""Must specify at least one column when creating a view"");}StringBuilder statement = new StringBuilder();statement.append(""CREATE VIEW "");statement.append(quoteCaseSensitive(name));statement.append("" ("");statement.append(Arrays.stream(columnNames).collect(Collectors.joining(""\"", \"""", ""\"""", ""\"""")));statement.append("") AS SELECT "");statement.append(Arrays.stream(columnNames).collect(Collectors.joining(""\"", \"""", ""\"""", ""\"""")));statement.append("" FROM "");statement.append(quoteCaseSensitive(tableName));Statement stmt = conn.createStatement();String statementStr = statement.toString();stmt.execute(statementStr);}}"	1
4470	public class A {public boolean keyExists(String keyName) throws IOException {try {iam.projects().serviceAccounts().keys().get(keyName).execute();return true;} catch (GoogleJsonResponseException e) {if (e.getStatusCode() == 403 || e.getStatusCode() == 404) {return false;}throw e;}}}	1
4471	public class A {public void logLCMMessage(Object message) {ObjectMapper objectMapper = new ObjectMapper();objectMapper.setSerializationInclusion(Include.NON_NULL);ObjectWriter writer = objectMapper.writerWithDefaultPrettyPrinter();String inputAsJSON;try {inputAsJSON = writer.writeValueAsString(message);} catch (JsonProcessingException e) {}}}	2
4472	"public class A {private void setLdapProperties() {try {Configuration configuration = ApplicationProperties.get();Properties properties =ConfigurationConverter.getProperties(configuration.subset(""atlas.authentication.method.ldap""));ldapURL = properties.getProperty(""url"");ldapUserDNPattern = properties.getProperty(""userDNpattern"");ldapGroupSearchBase = properties.getProperty(""groupSearchBase"");ldapGroupSearchFilter = properties.getProperty(""groupSearchFilter"");ldapGroupRoleAttribute = properties.getProperty(""groupRoleAttribute"");ldapBindDN = properties.getProperty(""bind.dn"");ldapBindPassword = properties.getProperty(""bind.password"");ldapDefaultRole = properties.getProperty(""default.role"");ldapUserSearchFilter = properties.getProperty(""user.searchfilter"");ldapReferral = properties.getProperty(""referral"");ldapBase = properties.getProperty(""base.dn"");groupsFromUGI = configuration.getBoolean(""atlas.authentication.method.ldap.ugi-groups"", true);if (LOG.isDebugEnabled()) {}} catch (Exception e) {}}}"	2
4473	public class A {@Testpublic void testCopyFormSize() {for (String bcp47tag : PoPluralRule.mappingForNonDefault.keySet()) {PluralRules cldrPluralRule = PluralRules.forLocale(Locale.forLanguageTag(bcp47tag));int cldrSize = cldrPluralRule.getKeywords().size();int poSize = PoPluralRule.fromBcp47Tag(bcp47tag).getCldrForms().size();int copySize =PoPluralRule.fromBcp47Tag(bcp47tag).getFormsToCopyOnImport().getFormMap().values().size();Assert.assertEquals(copySize, cldrSize - poSize);}}}	1
4474	"public class A {public Settings getEffectiveSettings() throws BootstrapMavenException {if (settings != null) {return settings;}final DefaultSettingsBuildingRequest settingsRequest =new DefaultSettingsBuildingRequest().setSystemProperties(System.getProperties()).setUserSettingsFile(getUserSettings()).setGlobalSettingsFile(getGlobalSettings());final Properties cmdLineProps = getCliOptions().getSystemProperties();if (cmdLineProps != null) {settingsRequest.setUserProperties(cmdLineProps);}final Settings effectiveSettings;try {final SettingsBuildingResult result =new DefaultSettingsBuilderFactory().newInstance().build(settingsRequest);final List<SettingsProblem> problems = result.getProblems();if (!problems.isEmpty()) {for (SettingsProblem problem : problems) {switch (problem.getSeverity()) {case ERROR:case FATAL:throw new BootstrapMavenException(""Settings problem encountered at "" + problem.getLocation(),problem.getException());default:}}}effectiveSettings = result.getEffectiveSettings();} catch (SettingsBuildingException e) {throw new BootstrapMavenException(""Failed to initialize Maven repository settings"", e);}return settings = effectiveSettings;}}"	1
4475	public class A {@Overridepublic <K, V> Map<K, V> createLRUWeakCache(int maximumCacheSize) {return new SimpleLRUCache<>(maximumCacheSize);}}	1
4476	"public class A {@RuleAction(label = ""disarm"", description = ""Dis-arm"")public void disarm(@ActionInput(name = ""pin"", label = ""pin"", description = ""The pin 4 or 6 digit pin"") @NullableString pin) {ThingHandlerPartition handler = this.handler;if (handler == null) {return;}String adjustedPin = adjustPin(pin);if (adjustedPin == null) {return;}handler.disarm(adjustedPin);}}"	1
4477	"public class A {@Test(groups = {""Integration"", ""Broken""})public void testRetryBackoffs() {final Stopwatch stopwatch = Stopwatch.createStarted();final List<Duration> timestamps = Lists.newArrayList();final Supplier<Object> supplier =new Supplier<Object>() {@Overridepublic Object get() {timestamps.add(Duration.of(stopwatch));return ""myActualVal"";}};try {TestFrameworkAssertions.checkAssertionsEventually(new AssertionOptions(""myTarget"", supplier).timeout(Duration.seconds(1)).backoffToPeriod(Duration.millis(100)).assertions(Arrays.asList(ImmutableMap.of(""isEqualTo"", ""myExpectedVal""))));Asserts.shouldHaveFailedPreviously();} catch (AssertionError e) {Asserts.expectedFailureContains(e, ""myTarget expected isEqualTo myExpectedVal but found myActualVal"");}List<Duration> timestampDiffs = getDiffsBetweenTimes(timestamps);Duration initialDelay = Duration.millis(10);Duration finalDelay = Duration.millis(100);Duration earlyTollerance = Duration.millis(10);Duration lateTollerance = Duration.millis(50);Duration firstLateTollerance = Duration.millis(250);double multiplier = 1.2;for (int iteration = 1; iteration < timestampDiffs.size(); iteration++) {Duration actualDelay = timestampDiffs.get(iteration);Duration expectedDelay = initialDelay;for (int i = 0; i < iteration; i++) {expectedDelay = expectedDelay.multiply(multiplier);if (finalDelay != null && expectedDelay.compareTo(finalDelay) > 0) {expectedDelay = finalDelay;break;}}Duration min = Duration.max(expectedDelay.subtract(earlyTollerance), Duration.ZERO);Duration max = expectedDelay.add((iteration == 0) ? firstLateTollerance : lateTollerance);String errMsg = ""invalid time-diff at "" + iteration + "": "" + timestampDiffs;assertOrdered(ImmutableList.of(min, actualDelay, max), errMsg);}}}"	1
4478	"public class A {@Overridepublic List<AccountReport> listReports(String accountId, String report) throws IOException {if (StringUtils.isBlank(report)) {throw new IllegalArgumentException(""You must specify the report you want to run."");}String url =buildCanvasUrl(""accounts/"" + accountId + ""/reports/"" + report, Collections.emptyMap());return getListFromCanvas(url);}}"	1
4479	public class A {private static String[] getColumnNames(CassandraMapping mapping, List<String> fields) {ArrayList<String> columnNames = new ArrayList<>();for (String field : fields) {Field fieldBean = mapping.getFieldFromFieldName(field);CassandraKey cassandraKey = mapping.getCassandraKey();Field keyBean = null;if (cassandraKey != null) {keyBean = cassandraKey.getFieldFromFieldName(field);}if (fieldBean != null) {columnNames.add(fieldBean.getColumnName());} else if (keyBean != null) {columnNames.add(keyBean.getColumnName());} else {}}return columnNames.toArray(new String[0]);}}	1
4480	public class A {public void setProtocolManagerFactoryStr(final String protocolManagerFactoryStr) {if (logger.isTraceEnabled()) {}raProperties.setProtocolManagerFactoryStr(protocolManagerFactoryStr);}}	1
4481	"public class A {public static boolean hasTokenExpired(EmailConfig emailConfig, Token token)throws NoSuchAlgorithmException {boolean result = false;int maxConfigSeconds =emailConfig.getPasswordResetConfig().getTokenExpirationSeconds().intValue();int maxTokenSeconds = token.getExpireSeconds().intValue();long createdTime = token.getCreatedAtItem().getTime();long configExpirationTime = createdTime + maxConfigSeconds * 1000;long tokenDefinedExirationTime = createdTime + maxTokenSeconds * 1000;if (configExpirationTime != tokenDefinedExirationTime) {String msg =String.format(""The configured expiration time for the token = '%s' changed from when the token was""+ "" created."",token.getId());}if (System.currentTimeMillis() >= configExpirationTime) {result = true;}return result;}}"	1
4482	"public class A {public boolean pkgShow(List<String> packages) {boolean cmdOk = true;if (packages == null || packages.isEmpty()) {return cmdOk;}StringBuilder sb = new StringBuilder();sb.append(""****************************************"");for (String pkg : packages) {CommandInfo cmdInfo = cset.newCommandInfo(CommandInfo.CMD_SHOW);cmdInfo.param = pkg;try {PackageInfo packageInfo = newPackageInfo(cmdInfo, findPackage(pkg));sb.append(""\nPackage: "" + packageInfo.id);sb.append(""\nState: "" + packageInfo.state);sb.append(""\nVersion: "" + packageInfo.version);sb.append(""\nName: "" + packageInfo.name);sb.append(""\nType: "" + packageInfo.type);sb.append(""\nVisibility: "" + packageInfo.visibility);if (packageInfo.state == PackageState.REMOTE&& packageInfo.type != PackageType.STUDIO&& packageInfo.visibility != PackageVisibility.PUBLIC&& !LogicalInstanceIdentifier.isRegistered()) {sb.append("" (registration required)"");}sb.append(""\nTarget platforms: "" + ArrayUtils.toString(packageInfo.targetPlatforms));appendIfNotEmpty(sb, ""\nVendor: "", packageInfo.vendor);sb.append(""\nSupports hot-reload: "" + packageInfo.supportsHotReload);sb.append(""\nSupported: "" + packageInfo.supported);sb.append(""\nProduction state: "" + packageInfo.productionState);sb.append(""\nValidation state: "" + packageInfo.validationState);appendIfNotEmpty(sb, ""\nProvides: "", packageInfo.provides);appendIfNotEmpty(sb, ""\nDepends: "", packageInfo.dependencies);appendIfNotEmpty(sb, ""\nConflicts: "", packageInfo.conflicts);appendIfNotEmpty(sb, ""\nTitle: "", packageInfo.title);appendIfNotEmpty(sb, ""\nDescription: "", packageInfo.description);appendIfNotEmpty(sb, ""\nHomepage: "", packageInfo.homePage);appendIfNotEmpty(sb, ""\nLicense: "", packageInfo.licenseType);appendIfNotEmpty(sb, ""\nLicense URL: "", packageInfo.licenseUrl);sb.append(""\n****************************************"");} catch (PackageException e) {cmdOk = false;cmdInfo.exitCode = 1;cmdInfo.newMessage(e);}}return cmdOk;}}"	1
4483	"public class A {public List findByExample(NmbNotiz instance) {try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.NmbNotiz"").add(Example.create(instance)).list();return results;} catch (RuntimeException re) {throw re;}}}"	3
4484	public class A {private void grantAllWithoutLock(KijiUser user) throws IOException {KijiPermissions newPermissions = getPermissions(user);for (KijiPermissions.Action action : KijiPermissions.Action.values()) {newPermissions = newPermissions.addAction(action);}grantInstancePermissions(user, newPermissions);}}	1
4485	public class A {public static MemcachedCache create(final MemcachedCacheConfig config, String memcachedPrefix, int timeToLive) {try {SerializingTranscoder transcoder = new SerializingTranscoder(config.getMaxObjectSize());transcoder.setCompressionThreshold(Integer.MAX_VALUE);OperationQueueFactory opQueueFactory;int maxQueueSize = config.getMaxOperationQueueSize();if (maxQueueSize > 0) {opQueueFactory = new ArrayOperationQueueFactory(maxQueueSize);} else {opQueueFactory = new LinkedOperationQueueFactory();}String hostsStr = config.getHosts();ConnectionFactory connectionFactory =new MemcachedConnectionFactoryBuilder().setProtocol(ConnectionFactoryBuilder.Protocol.BINARY).setHashAlg(DefaultHashAlgorithm.FNV1A_64_HASH).setLocatorType(ConnectionFactoryBuilder.Locator.CONSISTENT).setDaemon(true).setFailureMode(FailureMode.Redistribute).setTranscoder(transcoder).setShouldOptimize(true).setOpQueueMaxBlockTime(config.getTimeout()).setOpTimeout(config.getTimeout()).setReadBufferSize(config.getReadBufferSize()).setOpQueueFactory(opQueueFactory).build();return new MemcachedCache(new MemcachedClient(new MemcachedConnectionFactory(connectionFactory), getResolvedAddrList(hostsStr)),config,memcachedPrefix,timeToLive);} catch (IOException e) {throw Throwables.propagate(e);}}}	1
4486	"public class A {protected NodeList select(DocumentSet docs)throws PermissionDeniedException, EXistException, XPathException {final XQuery xquery = broker.getBrokerPool().getXQueryService();final XQueryPool pool = broker.getBrokerPool().getXQueryPool();final Source source = new StringSource(selectStmt);CompiledXQuery compiled = pool.borrowCompiledXQuery(broker, source);XQueryContext context;if (compiled == null) {context = new XQueryContext(broker.getBrokerPool());} else {context = compiled.getContext();context.prepareForReuse();}context.setStaticallyKnownDocuments(docs);declareNamespaces(context);declareVariables(context);if (compiled == null)try {compiled = xquery.compile(broker, context, source);} catch (final IOException e) {throw new EXistException(""An exception occurred while compiling the query: "" + e.getMessage());}Sequence resultSeq = null;try {resultSeq = xquery.execute(broker, compiled, null);} finally {context.runCleanupTasks();pool.returnCompiledXQuery(source, compiled);}if (!(resultSeq.isEmpty() || Type.subTypeOf(resultSeq.getItemType(), Type.NODE))) {throw new EXistException(""select expression should evaluate to a node-set; got ""+ Type.getTypeName(resultSeq.getItemType()));}if (LOG.isDebugEnabled()) {}return resultSeq.toNodeSet();}}"	1
4487	"public class A {private void validateCloud(final Cloud cloud) {if (cloud == null) {throw new InvalidParameterException(""Cloud"" + NULL_ERROR_MESSAGE);}if (Utilities.isEmpty(cloud.getName())) {throw new InvalidParameterException(""Cloud name"" + EMPTY_OR_NULL_ERROR_MESSAGE);}if (Utilities.isEmpty(cloud.getOperator())) {throw new InvalidParameterException(""Cloud operator"" + EMPTY_OR_NULL_ERROR_MESSAGE);}}}"	1
4488	"public class A {@Test(groups = {""multiCluster""},timeOut = 1200000)public void updateProcessFrequencyInEachColoWithOneProcessRunningDaily() throws Exception {final String startTime = TimeUtil.getTimeWrtSystemTime(-20);String endTime = TimeUtil.getTimeWrtSystemTime(4000);bundles[1].setProcessPeriodicity(1, TimeUnit.days);bundles[1].setOutputFeedPeriodicity(1, TimeUnit.days);bundles[1].setProcessValidity(startTime, endTime);bundles[1].submitBundle(prism);AssertUtil.assertSucceeded(cluster3.getProcessHelper().schedule(bundles[1].getProcessData()));InstanceUtil.waitTillInstancesAreCreated(cluster3OC, bundles[1].getProcessData(), 0, 10);String oldBundleId =OozieUtil.getLatestBundleID(cluster3OC, bundles[1].getProcessName(), EntityType.PROCESS);waitForProcessToReachACertainState(cluster3OC, bundles[1], Job.Status.RUNNING);List<String> oldNominalTimes =OozieUtil.getActionsNominalTime(cluster3OC, oldBundleId, EntityType.PROCESS);ProcessMerlin updatedProcess = new ProcessMerlin(bundles[1].getProcessObject());updatedProcess.setFrequency(new Frequency(""5"", TimeUnit.minutes));ServiceResponse response =prism.getProcessHelper().update(bundles[1].getProcessData(), updatedProcess.toString());AssertUtil.assertSucceeded(response);InstanceUtil.waitTillInstancesAreCreated(cluster3OC, bundles[1].getProcessData(), 1, 10);String prismString = dualComparison(prism, cluster2, bundles[1].getProcessData());Assert.assertEquals(new ProcessMerlin(prismString).getFrequency(), new Frequency("""" + 5, TimeUnit.minutes));dualComparison(prism, cluster3, bundles[1].getProcessData());OozieUtil.verifyNewBundleCreation(cluster3OC, oldBundleId, oldNominalTimes, bundles[1].getProcessData(), true, true);AssertUtil.checkNotStatus(cluster2OC, EntityType.PROCESS, bundles[1], Job.Status.RUNNING);}}"	2
4489	public class A {@Overridepublic boolean isMovable(long classPK) throws PortalException {DLFileShortcut dlFileShortcut = getDLFileShortcut(classPK);try {DLFolder parentFolder = dlFileShortcut.getDLFolder();return parentFolder.isInTrash();} catch (NoSuchFolderException noSuchFolderException) {if (_log.isDebugEnabled()) {}return true;}}}	1
4490	public class A {public void addPreFilter(String filter) {if (!Arrays.asList(OpenCV.getPossibleFilters()).contains(filter)) {return;}preFilters.add(filter);if (instance.opencv != null && (instance.opencv.getFilter(filter) == null)) {instance.opencv.addFilter(filter).enable();}}}	1
4491	public class A {public Set<AbstractPlugin> getPlugins(final String viewName) {if (pluginCache.isEmpty()) {load();}return pluginCache.getOrDefault(viewName, Collections.emptySet());}}	1
4492	public class A {@Overridepublic void stsRevocationRegistryInstantiationError() {}}	1
4493	"public class A {void writeSpdxLicenseInfoIntoRelease(ResourceRequest request, ResourceResponse response) {User user = UserCacheHolder.getUserFromRequest(request);String releaseId = request.getParameter(PortalConstants.RELEASE_ID);ComponentService.Iface componentClient = thriftClients.makeComponentClient();RequestStatus result = null;try {Release release = componentClient.getReleaseById(releaseId, user);JsonNode input =OBJECT_MAPPER.readValue(request.getParameter(SPDX_LICENSE_INFO), JsonNode.class);JsonNode licenesIdsNode = input.get(LICENSE_IDS);if (null != licenesIdsNode) {if (licenesIdsNode.isArray()) {for (JsonNode objNode : licenesIdsNode) {release.addToMainLicenseIds(objNode.asText());}} else {release.addToMainLicenseIds(licenesIdsNode.asText());}}licenesIdsNode = input.get(""otherLicenseIds"");if (null != licenesIdsNode) {if (licenesIdsNode.isArray()) {for (JsonNode objNode : licenesIdsNode) {release.addToOtherLicenseIds(objNode.asText());}} else {release.addToOtherLicenseIds(licenesIdsNode.asText());}}result = componentClient.updateRelease(release, user);} catch (TException | IOException e) {response.setProperty(ResourceResponse.HTTP_STATUS_CODE, ""500"");}serveRequestStatus(request, response, result, ""Cannot write license info into release "" + releaseId, log);}}"	1
4494	"public class A {@RequestMapping(path = ""/v1/faqs"", method = RequestMethod.GET)public ResponseEntity<Object> getFAQSByWidget(@RequestParam(""widgetId"") String widgetId,@RequestParam(name = ""domainId"", required = false) String domainId) {if (Strings.isNullOrEmpty(widgetId)) {return ResponseUtils.buildFailureResponse(new Exception(""WidgetId is Mandatory""));}ResponseDTO response = null;try {response = new ResponseDTO(faqService.getFAQSByWidget(widgetId, domainId));} catch (ServiceException e) {return complianceService.formatException(e);}return ResponseUtils.buildSucessResponse(response);}}"	1
4495	"public class A {private void copyRepoUnpack(final String containerId, final String repoLink) {try {int count = 1;boolean reachable = isGithubReachable(containerId);while (!reachable && count < 5) {TimeUnit.SECONDS.sleep(count * 2);reachable = isGithubReachable(containerId);count++;}String cmd = String.format(""cd %s; bash get_unzip.sh %s"", TMP_DIR, repoLink);runCmd(containerId, cmd);} catch (Exception e) {}}}"	2
4496	public class A {static void putResponse(final RexProMessage response) throws Exception {final UUID requestId = response.requestAsUUID();if (!responses.containsKey(requestId)) {return;}try {final ArrayBlockingQueue<Object> queue = responses.get(requestId);if (queue != null) {queue.put(response);} else {}} catch (InterruptedException e) {}}}	3
4497	public class A {@Overridepublic void addDoubleField(String fieldName, double value) {if (logger.isTraceEnabled()) {}fieldList.add(new JSONFieldHolder(fieldName, value, FieldType.DOUBLE));}}	1
4498	"public class A {@Overridepublic void move(MoveOperationContext moveContext) throws LdapException {Entry entry = moveContext.getOriginalEntry();Attribute adminPoint = entry.get(directoryService.getAtProvider().getAdministrativeRole());if (adminPoint == null) {next(moveContext);return;}String message = ""Cannot move an Administrative Point in the current version"";throw new LdapUnwillingToPerformException(message);}}"	3
4499	public class A {@Overridepublic ILSMComponentId getId() throws HyracksDataException {if (componentId != null) {return componentId;}synchronized (this) {if (componentId == null) {componentId = LSMComponentIdUtils.readFrom(metadata, buffer);}}if (componentId.missing()) {}return componentId;}}	1
4500	public class A {private void resetDatabase(MeshTestSetting settings) throws Exception {meshDagger.boot().clearReferences();long start = System.currentTimeMillis();if (settings.inMemoryDB()) {meshDagger.database().clear();} else if (settings.clusterMode()) {meshDagger.database().clear();} else {meshDagger.database().stop();String dir = mesh.getOptions().getStorageOptions().getDirectory();File dbDir = new File(dir);FileUtils.deleteDirectory(dbDir);meshDagger.database().setupConnectionPool();}long duration = System.currentTimeMillis() - start;if (trackingSearchProvider != null) {trackingSearchProvider.reset();}}}	1
4501	"public class A {protected static void waitForRecoveriesToFinish(String collection,CloudSolrServer solrServer,boolean verbose,boolean failOnTimeout,int timeoutSeconds)throws Exception {ZkStateReader zkStateReader = solrServer.getZkStateReader();try {boolean cont = true;int cnt = 0;while (cont) {if (verbose) {}boolean sawLiveRecovering = false;zkStateReader.updateClusterState(true);ClusterState clusterState = zkStateReader.getClusterState();Map<String, Slice> slices = clusterState.getSlicesMap(collection);assertNotNull(""Could not find collection:"" + collection, slices);for (Map.Entry<String, Slice> entry : slices.entrySet()) {Map<String, Replica> shards = entry.getValue().getReplicasMap();for (Map.Entry<String, Replica> shard : shards.entrySet()) {if (verbose) {}String state = shard.getValue().getStr(ZkStateReader.STATE_PROP);if ((state.equals(ZkStateReader.RECOVERING)|| state.equals(ZkStateReader.SYNC)|| state.equals(ZkStateReader.DOWN))&& clusterState.liveNodesContain(shard.getValue().getStr(ZkStateReader.NODE_NAME_PROP))) {sawLiveRecovering = true;}}}if (!sawLiveRecovering || cnt == timeoutSeconds) {if (!sawLiveRecovering) {if (verbose) {}} else {if (verbose) {}if (failOnTimeout) {fail(""There are still nodes recovering - waited for "" + timeoutSeconds + "" seconds"");return;}}cont = false;} else {Thread.sleep(1000);}cnt++;}} finally {}}}"	6
4502	public class A {@Overridepublic void setup(ProfilerPluginSetupContext context) {DubboConfiguration config = new DubboConfiguration(context.getConfig());if (!config.isDubboEnabled()) {return;}if (ServiceType.UNDEFINED.equals(context.getConfiguredApplicationType())) {final DubboProviderDetector dubboProviderDetector =new DubboProviderDetector(config.getDubboBootstrapMains());if (dubboProviderDetector.detect()) {if (!context.registerApplicationType(DubboConstants.DUBBO_PROVIDER_SERVICE_TYPE)) {}}}this.addTransformers();}}	5
4503	"public class A {private Argument readArgument(SpaceSystem spaceSystem)throws IllegalStateException, XMLStreamException {checkStartElementPreconditions();Argument arg = null;StartElement element = xmlEvent.asStartElement();String name = readMandatoryAttribute(""name"", element);arg = new Argument(name);String initialValue = readAttribute(""initialValue"", element, null);String argumentTypeRef = readMandatoryAttribute(""argumentTypeRef"", element);ArgumentType atype = spaceSystem.getArgumentType(argumentTypeRef);if (atype != null) {arg.setArgumentType(atype);if (initialValue != null) {arg.setInitialValue(atype.parseString(initialValue));}} else {final Argument arg1 = arg;NameReference nr =new NameReference(argumentTypeRef, Type.ARGUMENT_TYPE).addResolvedAction(nd -> {ArgumentType atype1 = (ArgumentType) nd;if (initialValue != null) {arg1.setInitialValue(atype1.parseString(initialValue));}arg1.setArgumentType(atype1);});spaceSystem.addUnresolvedReference(nr);}arg.setShortDescription(readAttribute(""shortDescription"", element, null));while (true) {xmlEvent = xmlEventReader.nextEvent();if (isNamedItemProperty()) {readNamedItemProperty(arg);} else if (isEndElementWithName(XTCE_ARGUMENT)) {return arg;} else {logUnknown();}}}}"	1
4504	public class A {private void removePropertyMapping(ExtensionMapping extensionMapping, String qualifiedName) {PropertyMapping pm = extensionMapping.getField(qualifiedName);Set<PropertyMapping> propertyMappings = extensionMapping.getFields();if (pm != null && propertyMappings.contains(pm)) {propertyMappings.remove(pm);}}}	1
4505	public class A {@Nullablepublic String getInvocationType(final Node propNode) {final NodeList appProps = propNode.getChildNodes();for (int i = 0; i < appProps.getLength(); i++) {final Node addProp = appProps.item(i);if (addProp.getNodeType() == Node.ELEMENT_NODE) {if (addProp.getLocalName().equals(INVOCATION_TYPE)) {final String invocationType = addProp.getTextContent().trim();return invocationType;}}}return null;}}	1
4506	"public class A {private void checkSystemRequestDTO(final SystemRequestDTO system, final String origin) {if (system == null) {throw new BadPayloadException(""System"" + NULL_PARAMETER_ERROR_MESSAGE, HttpStatus.SC_BAD_REQUEST, origin);}if (Utilities.isEmpty(system.getSystemName())) {throw new BadPayloadException(""System name"" + NULL_OR_BLANK_PARAMETER_ERROR_MESSAGE, HttpStatus.SC_BAD_REQUEST, origin);}if (Utilities.isEmpty(system.getAddress())) {throw new BadPayloadException(""System address"" + NULL_OR_BLANK_PARAMETER_ERROR_MESSAGE,HttpStatus.SC_BAD_REQUEST,origin);}if (system.getPort() == null) {throw new BadPayloadException(""System port"" + NULL_PARAMETER_ERROR_MESSAGE, HttpStatus.SC_BAD_REQUEST, origin);}final int validatedPort = system.getPort().intValue();if (validatedPort < CommonConstants.SYSTEM_PORT_RANGE_MIN|| validatedPort > CommonConstants.SYSTEM_PORT_RANGE_MAX) {throw new BadPayloadException(""System port must be between ""+ CommonConstants.SYSTEM_PORT_RANGE_MIN+ "" and ""+ CommonConstants.SYSTEM_PORT_RANGE_MAX+ ""."",HttpStatus.SC_BAD_REQUEST,origin);}}}"	1
4507	public class A {private void adjustDhModulus(DHEServerKeyExchangeMessage message) {tlsContext.setServerDhModulus(new BigInteger(1, message.getModulus().getValue()));}}	1
4508	"public class A {private JsonObject getVersionDetails(String fileName, String hostEndPoint, String type)throws IOException {String version = """";String strResponse = """";if (version.equalsIgnoreCase("""")) {version = ServicesHealthStatus.class.getPackage().getSpecificationVersion();strResponse = ""Version captured as "" + version;return buildSuccessResponse(strResponse, hostEndPoint, type, version);} else {strResponse =""Error while capturing PlatformService (version ""+ version+ "") health check at ""+ hostEndPoint;return buildFailureResponse(strResponse, hostEndPoint, type, version);}}}"	1
4509	"public class A {@Overridepublic Node getContentAsDOM() throws XMLDBException {final InputSource is;InputStream cis = null;try {if (content != null) {is = new InputSource(new StringReader(content));} else {cis = getStreamContent();is = new InputSource(cis);}final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();factory.setNamespaceAware(true);factory.setValidating(false);final DocumentBuilder builder = factory.newDocumentBuilder();final Document doc = builder.parse(is);final boolean isDocumentNode = type.map(t -> t.equals(""document-node()"")).orElse(true);if (isDocumentNode) {return doc;} else {return doc.getFirstChild();}} catch (final SAXException | IOException | ParserConfigurationException e) {throw new XMLDBException(ErrorCodes.VENDOR_ERROR, e.getMessage(), e);} finally {if (cis != null) {try {cis.close();} catch (final IOException ioe) {}}}}}"	1
4510	public class A {public void waitForExpectedInitialNodes(String barrierName) throws Exception {if (expectedInitialNodes > 1) {FenixFramework.barrier(barrierName, expectedInitialNodes);}}}	3
4511	public class A {@Overridepublic Boolean isDuplicateFile(String filepath) {return false;}}	1
4512	public class A {private void updateDistanceChannelFromMessage(LocationMessage message, Channel c) {Configuration currentConfig = c.getConfiguration();Double accuracyThreshold = convertToMeters(ConfigHelper.getAccuracyThreshold(currentConfig));State messageAccuracy = message.getGpsAccuracy();Double accuracy =messageAccuracy != UnDefType.UNDEF? ((QuantityType<?>) messageAccuracy).doubleValue(): accuracyThreshold;if (accuracyThreshold >= accuracy || accuracyThreshold.intValue() == 0) {if (accuracyThreshold > 0) {} else {}String regionName = ConfigHelper.getRegionName(currentConfig);PointType center = ConfigHelper.getRegionCenterLocation(currentConfig);State newLocation = message.getTrackerLocation();if (center != null && newLocation != UnDefType.UNDEF) {double newDistance = center.distanceFrom((PointType) newLocation).doubleValue();updateState(c.getUID(), new QuantityType<>(newDistance / 1000, MetricPrefix.KILO(SIUnits.METRE)));if (!(message instanceof TransitionMessage)) {double radiusMeter = convertToMeters(ConfigHelper.getRegionRadius(c.getConfiguration()));if (radiusMeter > newDistance) {triggerRegionChannel(regionName, EVENT_ENTER, false);} else {triggerRegionChannel(regionName, EVENT_LEAVE, false);}}}} else {}}}	4
4513	"public class A {@Overrideprotected BindingSet getNextElement() throws QueryEvaluationException {if (error != null) {if (error instanceof QueryEvaluationException) {throw (QueryEvaluationException) error;}throw new QueryEvaluationException(error);}if (rightIter == null) {try {boolean completed =latch.await(getQueryInfo().getMaxRemainingTimeMS(), TimeUnit.MILLISECONDS);if (!completed) {throw new QueryInterruptedException(""Timeout during service evaluation"");}} catch (InterruptedException e) {error = e;}}if (error != null) {if (error instanceof QueryEvaluationException) {throw (QueryEvaluationException) error;}throw new QueryEvaluationException(error);}if (rightIter.hasNext()) {return rightIter.next();}return null;}}"	1
4514	public class A {private void tearDownSharedResources() throws Exception {if (testInfo.isAddressSpaceDeleteable()|| testInfo.getActualTest().getExecutionException().isPresent()) {sharedResourcesManager.tearDown(testInfo.getActualTest());} else if (sharedResourcesManager.getSharedAddressSpace() != null) {sharedResourcesManager.tearDownShared();}}}	1
4515	"public class A {private byte[] filterXML(HttpServletRequest request, DataResponseWrapper response)throws ServletException {byte[] data = response.getData();DocumentBuilder docBuilder = null;Document doc = null;try {synchronized (BUILDER_FACTORY) {docBuilder = BUILDER_FACTORY.newDocumentBuilder();}doc = docBuilder.parse(new ByteArrayInputStream(data));} catch (Exception e) {throw new ServletException(e);}XPath xpath;synchronized (XPATH_FACTORY) {xpath = XPATH_FACTORY.newXPath();}xpath.setNamespaceContext(TYPES_NAMESPACE);NodeList rows = null;try {rows =(NodeList)xpath.evaluate(""/:result/:resultList/:objectFields/:pid"", doc, XPathConstants.NODESET);} catch (XPathExpressionException xpe) {throw new ServletException(""Error parsing XML for search results: "", xpe);}if (rows.getLength() == 0) {return data;}Map<String, Node> pids = new HashMap<String, Node>();for (int x = 0; x < rows.getLength(); x++) {Node pid = rows.item(x);pids.put(pid.getFirstChild().getNodeValue(), pid.getParentNode());}Set<Result> results = evaluatePids(pids.keySet(), request, response);for (Result r : results) {String resource = r.getResource();if (resource == null || resource.isEmpty()) {} else if (logger.isDebugEnabled()) {}int lastSlash = resource.lastIndexOf('/');String rid = resource.substring(lastSlash + 1);if (r.getStatus().getCode().contains(Status.STATUS_OK)&& r.getDecision() != Result.DECISION_PERMIT) {Node node = pids.get(rid);node.getParentNode().removeChild(node);}}doc.getDocumentElement().setAttribute(""xmlns"", ""http://www.fedora.info/definitions/1/0/types/"");Source src = new DOMSource(doc);ByteArrayOutputStream os = new ByteArrayOutputStream();javax.xml.transform.Result dst = new StreamResult(os);try {xFormer.transform(src, dst);} catch (TransformerException te) {throw new ServletException(""error generating output"", te);}return os.toByteArray();}}"	4
4516	public class A {private void removeConflictingNodeIds(final NodeIdentifier nodeIdentifier) {final Set<NodeIdentifier> conflictingNodeIds = findConflictingNodeIds(nodeIdentifier);if (!conflictingNodeIds.isEmpty()) {final Set<String> fullNodeIdDescriptions =conflictingNodeIds.stream().map(NodeIdentifier::getFullDescription).collect(Collectors.toSet());conflictingNodeIds.forEach(uuid -> removeNode(uuid));}}}	1
4517	"public class A {@Overridepublic void run() {for (GroomServerStatus status : groomServerManager.get().groomServerStatusKeySet()) {final String groom = status.getGroomName();final String jvmPath = Monitor.MONITOR_ROOT_PATH + groom + ""/metrics/jvm"";final Act act =new Act(new ZKCollector(zk, ""jvm"", ""Jvm metrics."", jvmPath),new CollectorHandler() {@Overridepublic void handle(@SuppressWarnings(""rawtypes"") Future future) {try {MetricsRecord record = (MetricsRecord) future.get();if (null != record) {if (LOG.isDebugEnabled()) {for (@SuppressWarnings(""rawtypes"") Metric metric : record.metrics()) {}}repository.put(groom, record);}} catch (InterruptedException ie) {Thread.currentThread().interrupt();} catch (ExecutionException ee) {}}});this.federator.register(act);}}}"	3
4518	public class A {private CommandFuture<MetaServerConsoleService.PreviousPrimaryDcMessage> doPrevPrimaryDcMigrate(String cluster, String shard, String dc) {shardMigrationResult.stepRetry(ShardMigrationStep.MIGRATE_PREVIOUS_PRIMARY_DC);CommandFuture<MetaServerConsoleService.PreviousPrimaryDcMessage> migrateResult =commandBuilder.buildPrevPrimaryDcCommand(cluster, shard, dc).execute();migrateResult.addListener(new CommandFutureListener<MetaServerConsoleService.PreviousPrimaryDcMessage>() {@Overridepublic void operationComplete(CommandFuture<MetaServerConsoleService.PreviousPrimaryDcMessage> commandFuture)throws Exception {try {MetaServerConsoleService.PreviousPrimaryDcMessage previousPrimaryDcMessage =commandFuture.get();shardMigrationResult.setPreviousPrimaryDcMessage(previousPrimaryDcMessage);shardMigrationResult.updateStepResult(ShardMigrationStep.MIGRATE_PREVIOUS_PRIMARY_DC,true,previousPrimaryDcMessage == null: previousPrimaryDcMessage.getMessage());} catch (Exception e) {shardMigrationResult.updateStepResult(ShardMigrationStep.MIGRATE_PREVIOUS_PRIMARY_DC,true,}notifyObservers(new ShardObserverEvent(shardName(), ShardMigrationStep.MIGRATE_PREVIOUS_PRIMARY_DC));}});return migrateResult;}}	4
4519	"public class A {@Overridepublic CPOptionValue fetchByC_ERC(long companyId, String externalReferenceCode, boolean useFinderCache) {externalReferenceCode = Objects.toString(externalReferenceCode, """");Object[] finderArgs = null;if (useFinderCache) {finderArgs = new Object[] {companyId, externalReferenceCode};}Object result = null;if (useFinderCache) {result = finderCache.getResult(_finderPathFetchByC_ERC, finderArgs);}if (result instanceof CPOptionValue) {CPOptionValue cpOptionValue = (CPOptionValue) result;if ((companyId != cpOptionValue.getCompanyId())|| !Objects.equals(externalReferenceCode, cpOptionValue.getExternalReferenceCode())) {result = null;}}if (result == null) {StringBundler sb = new StringBundler(4);sb.append(_SQL_SELECT_CPOPTIONVALUE_WHERE);sb.append(_FINDER_COLUMN_C_ERC_COMPANYID_2);boolean bindExternalReferenceCode = false;if (externalReferenceCode.isEmpty()) {sb.append(_FINDER_COLUMN_C_ERC_EXTERNALREFERENCECODE_3);} else {bindExternalReferenceCode = true;sb.append(_FINDER_COLUMN_C_ERC_EXTERNALREFERENCECODE_2);}String sql = sb.toString();Session session = null;try {session = openSession();Query query = session.createQuery(sql);QueryPos queryPos = QueryPos.getInstance(query);queryPos.add(companyId);if (bindExternalReferenceCode) {queryPos.add(externalReferenceCode);}List<CPOptionValue> list = query.list();if (list.isEmpty()) {if (useFinderCache) {finderCache.putResult(_finderPathFetchByC_ERC, finderArgs, list);}} else {if (list.size() > 1) {Collections.sort(list, Collections.reverseOrder());if (_log.isWarnEnabled()) {if (!useFinderCache) {finderArgs = new Object[] {companyId, externalReferenceCode};}}}CPOptionValue cpOptionValue = list.get(0);result = cpOptionValue;cacheResult(cpOptionValue);}} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}if (result instanceof List<?>) {return null;} else {return (CPOptionValue) result;}}}"	1
4520	"public class A {@Overridepublic Status scan(String table,String startkey,int recordcount,Set<String> fields,Vector<HashMap<String, ByteIterator>> result) {String startRowKey = getRowKey(dbName, table, startkey);String endRowKey = getEndRowKey(table);try (Transaction tr = db.createTransaction()) {tr.options().setReadYourWritesDisable();AsyncIterable<KeyValue> entryList =tr.getRange(Tuple.from(startRowKey).pack(),Tuple.from(endRowKey).pack(),recordcount > 0 ? recordcount : 0);List<KeyValue> entries = entryList.asList().join();for (int i = 0; i < entries.size(); ++i) {final HashMap<String, ByteIterator> map = new HashMap<>();Tuple value = Tuple.fromBytes(entries.get(i).getValue());if (convTupleToMap(value, fields, map) == Status.OK) {result.add(map);} else {return Status.ERROR;}}return Status.OK;} catch (FDBException e) {logger.error(MessageFormatter.format(""Error scanning keys: from {} to {} "", startRowKey, endRowKey).getMessage(),e);e.printStackTrace();} catch (Exception e) {e.printStackTrace();}return Status.ERROR;}}"	3
4521	"public class A {private static void createCheckpoint(RocksDB rocksdb, String targetPath) {Path parentPath = Paths.get(targetPath).getParent().getFileName();assert parentPath.toString().startsWith(""snapshot"") : targetPath;try (Checkpoint checkpoint = Checkpoint.create(rocksdb)) {String tempPath = targetPath + ""_temp"";File tempFile = new File(tempPath);FileUtils.deleteDirectory(tempFile);FileUtils.forceMkdir(tempFile.getParentFile());checkpoint.createCheckpoint(tempPath);File snapshotFile = new File(targetPath);FileUtils.deleteDirectory(snapshotFile);if (!tempFile.renameTo(snapshotFile)) {throw new IOException(String.format(""Failed to rename %s to %s"", tempFile, snapshotFile));}} catch (Exception e) {throw new BackendException(""Failed to create checkpoint at path %s"", e, targetPath);}}}"	2
4522	public class A {private void clearOldCheckpoint(FileSystem fs, Path checkpointPath) throws IOException {int maxCheckpoint =context.getConf().getInt(AngelConf.ANGEL_PS_CHECKPOINTS_MAX_NUM,AngelConf.DEFAULT_ANGEL_PS_CHECKPOINTS_MAX_NUM);FileStatus[] status = fs.listStatus(checkpointPath);if (status.length <= maxCheckpoint) {return;}int[] checkpointIds = new int[status.length];for (int i = 0; i < status.length; i++) {try {checkpointIds[i] = Integer.valueOf(status[i].getPath().getName());} catch (Throwable x) {}}Sort.quickSort(checkpointIds, status, 0, checkpointIds.length - 1);for (int i = 0; i < checkpointIds.length - maxCheckpoint; i++) {try {if (!fs.delete(status[i].getPath(), true)) {} else {}} catch (Throwable x) {}}}}	4
4523	public class A {@Overridepublic void operationComplete(ChannelFuture future) throws Exception {if (future.isSuccess()) {final Channel channel = future.channel();channelReference.set(channel);final ServerSocketChannelConfig channelConfig = (ServerSocketChannelConfig) channel.config();final int receiveBufferSize = channelConfig.getReceiveBufferSize();if (receiveBufferSize != expectedRecvBufferSize) {}} else {}}}	3
4524	public class A {public static void registerMBean(Object bean, ObjectName objectName) {MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();if (mBeanServer != null) {try {registerMBean(bean, mBeanServer, objectName);} catch (Exception e) {}}}}	1
4525	public class A {public void onComplete(java.lang.Boolean o) {registerUser_result result = new registerUser_result();result.success = o;result.setSuccessIsSet(true);try {fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);} catch (org.apache.thrift.transport.TTransportException e) {fb.close();} catch (java.lang.Exception e) {onError(e);}}}	2
4526	"public class A {public static com.liferay.asset.kernel.model.AssetCategoryDisplay getVocabularyCategoriesDisplay(HttpPrincipal httpPrincipal,long vocabularyId,int start,int end,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.asset.kernel.model.AssetCategory>orderByComparator)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(AssetCategoryServiceUtil.class,""getVocabularyCategoriesDisplay"",_getVocabularyCategoriesDisplayParameterTypes20);MethodHandler methodHandler =new MethodHandler(methodKey, vocabularyId, start, end, orderByComparator);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.asset.kernel.model.AssetCategoryDisplay) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4527	"public class A {@Overridepublic WebServiceTemplate getTemplate(final String organisationIdentification, final String userName, final String applicationName)throws WebServiceSecurityException {if (StringUtils.isEmpty(organisationIdentification)) {}if (StringUtils.isEmpty(userName)) {}if (StringUtils.isEmpty(applicationName)) {}WebServiceTemplate webServiceTemplate = null;try {this.lock.lock();final String url = (this.targetUri == null) ? """" : ""-"" + this.targetUri;final String key =organisationIdentification.concat(""-"").concat(userName).concat(applicationName).concat(url);if (!this.webServiceTemplates.containsKey(key)) {this.webServiceTemplates.put(key, this.createTemplate(organisationIdentification, userName, applicationName));}webServiceTemplate = this.webServiceTemplates.get(key);} finally {this.lock.unlock();}return webServiceTemplate;}}"	3
4528	public class A {public void processMgcpResponseEvent(JainMgcpResponseEvent jainmgcpresponseevent) {switch (jainmgcpresponseevent.getObjectIdentifier()) {case Constants.RESP_ENDPOINT_CONFIGURATION:responseReceived = true;break;default:break;}}}	2
4529	public class A {@Overridepublic void init() throws Exception {this.checkTrashedResourceDiskFolder(this.getResourceTrashRootDiskSubFolder());}}	2
4530	"public class A {private void readTimeWindowedDepotAndCustomers() throws IOException {String line = bufferedReader.readLine();int locationListSizeEstimation = 25;List<Location> locationList = new ArrayList<>(locationListSizeEstimation);depotList = new ArrayList<>(1);TimeWindowedDepot depot = null;List<Customer> customerList = new ArrayList<>(locationListSizeEstimation);boolean first = true;while (line != null && !line.trim().isEmpty()) {String[] lineTokens = splitBySpacesOrTabs(line.trim(), 7);long id = Long.parseLong(lineTokens[0]);AirLocation location = new AirLocation();location.setId(id);location.setLatitude(Double.parseDouble(lineTokens[1]));location.setLongitude(Double.parseDouble(lineTokens[2]));locationList.add(location);int demand = Integer.parseInt(lineTokens[3]);long readyTime = Long.parseLong(lineTokens[4]) * 1000L;long dueTime = Long.parseLong(lineTokens[5]) * 1000L;long serviceDuration = Long.parseLong(lineTokens[6]) * 1000L;if (first) {depot = new TimeWindowedDepot();depot.setId(id);depot.setLocation(location);if (demand != 0) {throw new IllegalArgumentException(""The depot with id ("" + id + "") has a demand ("" + demand + "")."");}depot.setReadyTime(readyTime);depot.setDueTime(dueTime);if (serviceDuration != 0) {throw new IllegalArgumentException(""The depot with id ("" + id + "") has a serviceDuration ("" + serviceDuration + "")."");}depotList.add(depot);first = false;} else {TimeWindowedCustomer customer = new TimeWindowedCustomer();customer.setId(id);customer.setLocation(location);customer.setDemand(demand);customer.setReadyTime(readyTime);long maximumDueTime =depot.getDueTime() - serviceDuration - location.getDistanceTo(depot.getLocation());if (dueTime > maximumDueTime) {dueTime = maximumDueTime;}customer.setDueTime(dueTime);customer.setServiceDuration(serviceDuration);if (demand != 0) {customerList.add(customer);}}line = bufferedReader.readLine();}solution.setLocationList(locationList);solution.setDepotList(depotList);solution.setCustomerList(customerList);customerListSize = locationList.size();}}"	1
4531	public class A {private Object castCollection(Object literal, String propertyName) {try {Collection<?> c = (Collection) literal;Iterator iterator = c.iterator();List<Object> cast = new ArrayList<Object>();while (iterator.hasNext()) {cast.add(castLiteral(iterator.next(), propertyName));}return cast;} catch (Exception e) {}return literal;}}	1
4532	"public class A {@Test(groups = {""Live""})protected void testAwsEc2Addresses() throws Exception {jcloudsLocation =(JcloudsLocation)managementContext.getLocationRegistry().getLocationManaged(AWS_EC2_LOCATION_SPEC);machine = createEc2Machine(ImmutableMap.<String, Object>of());assertSshable(machine);String locationAddress = machine.getAddress().getHostName();InetAddress address = machine.getAddress();Set<String> publicAddresses = machine.getPublicAddresses();Set<String> privateAddresses = machine.getPrivateAddresses();String subnetIp = machine.getSubnetIp();String subnetHostname = machine.getSubnetHostname();String hostname = machine.getHostname();String msg =""locationAddress=""+ locationAddress+ ""; address=""+ address+ ""; publicAddrs=""+ publicAddresses+ ""; privateAddrs=""+ privateAddresses+ ""; subnetIp=""+ subnetIp+ ""; hostname=""+ hostname+ ""; subnetHostname=""+ subnetHostname;assertReachable(machine, locationAddress, msg);assertReachableFromMachine(machine, locationAddress, msg);assertReachable(machine, address, msg);assertTrue(publicAddresses.size() > 0, msg);for (String publicAddress : publicAddresses) {assertReachable(machine, publicAddress, msg);}assertTrue(privateAddresses.size() > 0, msg);for (String privateAddress : privateAddresses) {assertReachableFromMachine(machine, privateAddress, msg);assertNotReachable(machine, privateAddress, msg);}assertNotNull(subnetIp, msg);assertReachableFromMachine(machine, subnetIp, msg);assertNotNull(hostname, msg);assertReachableFromMachine(machine, hostname, msg);assertNotNull(subnetHostname, msg);assertReachable(machine, subnetHostname, msg);assertReachableFromMachine(machine, subnetHostname, msg);}}"	1
4533	"public class A {private void alive() {long deltaLastReceived = System.nanoTime() - telegramReceivedTimeNanos;if (deltaLastReceived > receivedTimeoutNanos) {if (dsmrDeviceRunnable != null) {dsmrDeviceRunnable.restart();}if (deltaLastReceived > receivedTimeoutNanos * OFFLINE_TIMEOUT_FACTOR) {if (getThing().getStatus() == ThingStatus.ONLINE) {deviceOffline(ThingStatusDetail.COMMUNICATION_ERROR, ""@text/error.bridge.nodata"");}resetLastReceivedState();}}}}"	3
4534	"public class A {protected LockedDocumentMap beginProtected(final DBBroker broker, final Map<String, Object> parameters)throws EXistException, PermissionDeniedException {final String protectColl = (String) parameters.get(RpcAPI.PROTECTED_MODE);if (protectColl == null) {return null;}int retries =BEGIN_PROTECTED_MAX_LOCKING_RETRIES == -1 ? -1 : BEGIN_PROTECTED_MAX_LOCKING_RETRIES - 2;do {MutableDocumentSet docs = null;final LockedDocumentMap lockedDocuments = new LockedDocumentMap();final LockMode documentLockMode = LockMode.WRITE_LOCK;final LockMode collectionLockMode =broker.getBrokerPool().getLockManager().relativeCollectionLockMode(LockMode.READ_LOCK, documentLockMode);try (final Collection coll =broker.openCollection(XmldbURI.createInternal(protectColl), collectionLockMode)) {docs = new DefaultDocumentSet();coll.allDocs(broker, docs, true, lockedDocuments, documentLockMode);return lockedDocuments;} catch (final LockException e) {lockedDocuments.unlock();}retries--;} while (retries >= -1);throw new EXistException(""Unable to beginProtected after "" + BEGIN_PROTECTED_MAX_LOCKING_RETRIES + "" retries"");}}"	1
4535	"public class A {public boolean isValidToken(String token) throws DAOException {LOGGER.entry(""begin isValidToken()"");Session session = null;boolean isValidStudy = false;EnrollmentTokenDto tokenDto = null;try {session = sessionFactory.openSession();tokenDto =(EnrollmentTokenDto)session.createQuery(""from EnrollmentTokenDto ""+ "" where enrollmentToken= :enrollmentToken""+ "" ORDER BY id DESC"").setString(""enrollmentToken"", token).setMaxResults(1).uniqueResult();if (null != tokenDto) {isValidStudy = true;}} catch (Exception e) {} finally {if (session != null) {session.close();}}LOGGER.exit(""isValidToken() :: Ends"");return isValidStudy;}}"	1
4536	public class A {protected EditableDataValidationResult validateParameter(final ValidationContext validationContext,final UIInput inputComponent,final String contentType,final String paramName,final String paramValue) {FacesContext context = validationContext.getFacesContext();validationContext.acceptParameter(paramName, paramValue);EditableDataValidationResult result =validateContent(context, paramName, paramValue, contentType);if (!result.isValid()) {FacesMessage msg = createFacesMessage(context, inputComponent);context.addMessage(paramName, msg);if (log.isDebugEnabled()) {}validationContext.rejectParameter(paramName,paramValue,HDIVErrorCodes.INVALID_EDITABLE_VALUE,result.getValidationId(),inputComponent);}return result;}}	1
4537	"public class A {public Structure update(final Structure structure) {if (!structure.getContent().equals(structure.getContent())|| !structure.getTemplate().getId().equals(structure.getTemplate().getId())) {boolean templateUsed = structureRepository.isStructureUsed(structure);if (templateUsed) {throw new PlatformRuntimeException(""You can not edit this structure because the structure is assigned to at least a one""+ "" advanced web content."");}}validateStructure(structure);return structureRepository.save(structure);}}"	1
4538	public class A {@Overridepublic void init() {super.init();Integer portStartingPoint;Object rawPort = getAllConfigBag().getStringKey(PORT_FORWARD_MANAGER_STARTING_PORT.getName());if (rawPort != null) {portStartingPoint = getConfig(PORT_FORWARD_MANAGER_STARTING_PORT);} else {portStartingPoint =getManagementContext().getConfig().getConfig(PORT_FORWARD_MANAGER_STARTING_PORT);}portReserved.set(portStartingPoint);}}	1
4539	public class A {@Overridepublic void stop() {springCtxs.forEach(context -> {context.onStop(new LifeCycleEvent(LifeCycleEvent.LifeCycleEventEnum.STOP));});}}	2
4540	"public class A {private static Protocol getProtocol(String protocol) {if (protocol.equals(""HTTP"")) {return Protocol.HTTP;} else if (protocol.equals(""HTTPS"")) {return Protocol.HTTPS;} else {}return null;}}"	1
4541	"public class A {@Overridepublic FileUploadJob createJob(String filename,long filesize,int chunksize,MediaPackage mp,MediaPackageElementFlavor flavor)throws FileUploadException {FileUploadJob job = new FileUploadJob(filename, filesize, chunksize, mp, flavor);try {File jobDir = getJobDir(job.getId());FileUtils.forceMkdir(jobDir);ensureExists(getPayloadFile(job.getId()));storeJob(job);} catch (FileUploadException e) {deleteJob(job.getId());throw fileUploadException(Severity.error, ""Could not create job file in "" + workRoot.getAbsolutePath(), e);} catch (IOException e) {deleteJob(job.getId());throw fileUploadException(Severity.error,""Could not create upload job directory in "" + workRoot.getAbsolutePath(),e);}return job;}}"	1
4542	public class A {@Overridepublic void readNonExistent(String testName) throws Exception {setupReadNonExistent();OsteologyClient client = new OsteologyClient();Response res = client.read(NON_EXISTENT_ID);try {int statusCode = res.getStatus();if (logger.isDebugEnabled()) {}Assert.assertTrue(testRequestType.isValidStatusCode(statusCode),invalidStatusCodeMessage(testRequestType, statusCode));Assert.assertEquals(statusCode, testExpectedStatusCode);} finally {res.close();}}}	1
4543	"public class A {@ApiOperation(value = ""get history by owner's id"")@GetMapping(CommonConstants.PATH_LOGBOOK)public LogbookOperationsResponseDto findHistoryById(final @PathVariable String id) {ParameterChecker.checkParameter(""Identifier is mandatory : "", id);return service.findHistoryById(buildUiHttpContext(), id);}}"	1
4544	"public class A {@RequestMapping(value = ""/{id}"", method = RequestMethod.GET)public RoleDto find(@PathVariable Long id) {return roleManagementService.findRole(id);}}"	1
4545	"public class A {public void connect() throws IOException {if (connected.compareAndSet(false, true)) {try {channel = SocketChannelPool.open(address);negotiate(channel);} catch (Exception e) {disconnect();throw new IOException(""connect "" + this.address + "" failure"", e);}} else {}}}"	2
4546	"public class A {protected void scheduleWithLock() throws IOException {if (!LAUNCH_CATALOG.get()) {return;}Map<String, String> catalogs = null;while (true) {try {catalogs = catalogService.latestInfraTemplates();break;} catch (IOException e) {try {Thread.sleep(2000);} catch (InterruptedException e1) {throw new IllegalStateException(e1);}}}if (catalogs.size() == 0) {return;}List<? extends Stack> stacks = Collections.emptyList();if (""true"".equalsIgnoreCase(UPGRADE_MANAGER.get())|| ""all"".equalsIgnoreCase(UPGRADE_MANAGER.get())) {stacks = stackDao.getStacksToUpgrade(catalogs.values());} else if (""mandatory"".equalsIgnoreCase(UPGRADE_MANAGER.get())) {stacks = stackDao.getStacksThatMatch(OLD_METADATAS);}for (Stack stack : stacks) {String templateId = catalogService.getTemplateIdFromExternalId(stack.getExternalId());if (StringUtils.isBlank(templateId)) {continue;}if (catalogs.containsKey(templateId)) {resourceDao.createAndSchedule(ScheduledUpgrade.class,SCHEDULED_UPGRADE.ACCOUNT_ID,stack.getAccountId(),SCHEDULED_UPGRADE.STACK_ID,stack.getId());}}}}"	1
4547	public class A {private void startServingRPCServer() {try {if (mBindSocket != null) {mBindSocket.close();}GrpcServerBuilder serverBuilder =GrpcServerBuilder.forAddress(GrpcServerAddress.create(mRpcConnectAddress.getHostName(), mRpcBindAddress),ServerConfiguration.global(),ServerUserState.global());for (Map.Entry<alluxio.grpc.ServiceType, GrpcService> serviceEntry :mJobWorker.getServices().entrySet()) {serverBuilder.addService(serviceEntry.getValue());}mGrpcServer = serverBuilder.build().start();mGrpcServer.awaitTermination();} catch (IOException e) {throw new RuntimeException(e);}}}	3
4548	public class A {public KeyPair generateKeyPair(String alg, int keySize) {try {KeyPairGenerator keyPairGenerator = null;keyPairGenerator = KeyPairGenerator.getInstance(alg);keyPairGenerator.initialize(keySize);return keyPairGenerator.generateKeyPair();} catch (NoSuchAlgorithmException e) {}return null;}}	1
4549	public class A {private Document parse(DocumentBuilder builder, URL url) throws IOException, SAXException {if (url == null) {return null;}URLConnection connection = url.openConnection();if (connection instanceof JarURLConnection) {connection.setUseCaches(false);}return parse(builder, connection.getInputStream(), url.toString());}}	1
4550	public class A {@Overridepublic FeeData usageGiven(TransactionBody txn, SigValueObj sigUsage, StateView view)throws InvalidTxBodyException {try {MerkleEntityId id = fromContractId(txn.getContractUpdateInstance().getContractID());Timestamp expiry = lookupAccountExpiry(id, view.accounts());return usageEstimator.getContractUpdateTxFeeMatrices(txn, expiry, sigUsage);} catch (Exception e) {return FeeData.getDefaultInstance();}}}	1
4551	public class A {@Overridepublic void setup(ProfilerPluginSetupContext context) {CommonsDbcpConfig config = new CommonsDbcpConfig(context.getConfig());if (!config.isPluginEnable()) {return;}addBasicDataSourceTransformer();if (config.isProfileClose()) {addPoolGuardConnectionWrapperTransformer();}}}	2
4552	public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;updateResourceJobManager_result result = new updateResourceJobManager_result();if (e instanceof org.apache.airavata.model.error.InvalidRequestException) {result.ire = (org.apache.airavata.model.error.InvalidRequestException) e;result.setIreIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataClientException) {result.ace = (org.apache.airavata.model.error.AiravataClientException) e;result.setAceIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataSystemException) {result.ase = (org.apache.airavata.model.error.AiravataSystemException) e;result.setAseIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AuthorizationException) {result.ae = (org.apache.airavata.model.error.AuthorizationException) e;result.setAeIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}}	4
4553	"public class A {@Overridepublic boolean check(ValidationContext ctx, T t) {if (elementsOrder == null) {return true;}if (t.isSetUserObjects() && t.getUserObject(JSBML.CHILD_ELEMENT_NAMES) != null) {@SuppressWarnings(""unchecked"")List<String> childElementNames = (List<String>) t.getUserObject(JSBML.CHILD_ELEMENT_NAMES);if (childElementNames == null || childElementNames.size() == 0) {return true;}int lastElementIndex = -1;String lastElementName = """";for (String elementName : childElementNames) {int currentElementIndex = -1;for (int i = 0; i < elementsOrder.length; i++) {if (elementsOrder[i].equals(elementName)) {currentElementIndex = i;break;}}if (currentElementIndex == -1) {if (logger.isDebugEnabled()) {}continue;}if (lastElementIndex != -1 && (currentElementIndex < lastElementIndex)) {return false;}lastElementIndex = currentElementIndex;lastElementName = elementName;}}return true;}}"	2
4554	public class A {@Overridepublic void run() {try {if (!Services.getInstance().isShuttingDown() && !Services.getInstance().isShutdownDone())info.messageCallback(topic, message);} catch (FrameworkException e) {}}}	1
4555	public class A {private ProtocolInitializer createExternalProtocolInitializer(BoltProtocolFactory boltProtocolFactory, TransportThrottleGroup throttleGroup, Log log) {SslContext sslCtx;boolean requireEncryption;BoltConnector.EncryptionLevel encryptionLevel = config.get(BoltConnector.encryption_level);SslPolicyLoader sslPolicyLoader = dependencyResolver.resolveDependency(SslPolicyLoader.class);switch (encryptionLevel) {case REQUIRED:requireEncryption = true;sslCtx = createSslContext(sslPolicyLoader);break;case OPTIONAL:requireEncryption = false;sslCtx = createSslContext(sslPolicyLoader);break;case DISABLED:requireEncryption = false;sslCtx = null;break;default:requireEncryption = false;sslCtx = null;break;}SocketAddress listenAddress = config.get(BoltConnector.listen_address);Duration channelTimeout =config.get(BoltConnectorInternalSettings.unsupported_bolt_unauth_connection_timeout);long maxMessageSize =config.get(BoltConnectorInternalSettings.unsupported_bolt_unauth_connection_max_inbound_bytes);return new SocketTransport(BoltConnector.NAME,listenAddress,sslCtx,requireEncryption,logService.getInternalLogProvider(),throttleGroup,boltProtocolFactory,connectionTracker,channelTimeout,maxMessageSize,BoltServer.NETTY_BUF_ALLOCATOR);}}	1
4556	"public class A {@Overridepublic void batchUpdateStatus(RetryQueryCondition retryQueryCondition, RetryStatus status, long updateTime, int updateBy)throws Exception {if (StringUtils.isNotEmpty(retryQueryCondition.getBusinessId())) {BATCH_UPDATE_SQL += ""and businessId = ?"";}int update =DaoUtil.update(dataSource,1,BATCH_UPDATE_SQL,(statement, target) -> {statement.setShort(1, status.getValue());statement.setTimestamp(2, new Timestamp(updateTime));statement.setInt(3, updateBy);statement.setString(4, retryQueryCondition.getTopic());statement.setString(5, retryQueryCondition.getApp());statement.setTimestamp(6, new Timestamp(retryQueryCondition.getStartTime()));statement.setTimestamp(7, new Timestamp(retryQueryCondition.getEndTime()));statement.setInt(8, retryQueryCondition.getStatus());if (StringUtils.isNotEmpty(retryQueryCondition.getBusinessId())) {statement.setString(9, retryQueryCondition.getBusinessId());}});if (update > 0) {} else {}}}"	2
4557	public class A {public static com.liferay.commerce.model.CommerceOrderSoap updateCustomFields(long commerceOrderId, com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.commerce.model.CommerceOrder returnValue =CommerceOrderServiceUtil.updateCustomFields(commerceOrderId, serviceContext);return com.liferay.commerce.model.CommerceOrderSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4558	"public class A {public static int getSegmentsEntryRelsCount(HttpPrincipal httpPrincipal, long groupId, long classNameId, long classPK)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(SegmentsEntryRelServiceUtil.class,""getSegmentsEntryRelsCount"",_getSegmentsEntryRelsCountParameterTypes7);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, classNameId, classPK);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Integer) returnObj).intValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4559	public class A {public void moveHeadBlocking(Double neck, Double rothead, Double eyeX, Double eyeY, Double jaw, Double rollNeck) {if (head != null) {head.moveToBlocking(neck, rothead, eyeX, eyeY, jaw, rollNeck);} else {}}}	1
4560	public class A {private static List<File> initNativeLibDirList(Set<File> narNativeLibDirs, Set<URL> additionalResourceUrls) {List<File> nativeLibDirList = new ArrayList<>(narNativeLibDirs);Set<File> additionalNativeLibDirs = new HashSet<>();if (additionalResourceUrls != null) {for (URL url : additionalResourceUrls) {File file;try {file = new File(url.toURI());} catch (URISyntaxException e) {file = new File(url.getPath());} catch (Exception e) {file = null;}File dir = toDir(file);if (dir != null) {additionalNativeLibDirs.add(dir);}}}nativeLibDirList.addAll(additionalNativeLibDirs);return nativeLibDirList;}}	1
4561	"public class A {private AuthorizationProvider createAuthProvider() throws Exception {String authProviderName =authConf.get(AuthzConfVars.AUTHZ_PROVIDER.getVar(), AuthzConfVars.AUTHZ_PROVIDER.getDefault());String resourceName =authConf.get(AuthzConfVars.AUTHZ_PROVIDER_RESOURCE.getVar(),AuthzConfVars.AUTHZ_PROVIDER_RESOURCE.getDefault());String providerBackendName =authConf.get(AuthzConfVars.AUTHZ_PROVIDER_BACKEND.getVar(),AuthzConfVars.AUTHZ_PROVIDER_BACKEND.getDefault());String policyEngineName =authConf.get(AuthzConfVars.AUTHZ_POLICY_ENGINE.getVar(),AuthzConfVars.AUTHZ_POLICY_ENGINE.getDefault());if (resourceName != null && resourceName.startsWith(""classpath:"")) {String resourceFileName = resourceName.substring(""classpath:"".length());resourceName =AuthorizationProvider.class.getClassLoader().getResource(resourceFileName).getPath();}if (LOG.isDebugEnabled()) {}Constructor<?> providerBackendConstructor =Class.forName(providerBackendName).getDeclaredConstructor(Configuration.class, String.class);providerBackendConstructor.setAccessible(true);providerBackend =(ProviderBackend)providerBackendConstructor.newInstance(new Object[] {authConf, resourceName});if (providerBackend instanceof SentryGenericProviderBackend) {((SentryGenericProviderBackend) providerBackend).setComponentType(COMPONENT_TYPE);((SentryGenericProviderBackend) providerBackend).setServiceName(instanceName);}Constructor<?> policyConstructor =Class.forName(policyEngineName).getDeclaredConstructor(ProviderBackend.class);policyConstructor.setAccessible(true);PolicyEngine policyEngine =(PolicyEngine) policyConstructor.newInstance(new Object[] {providerBackend});Constructor<?> constructor =Class.forName(authProviderName).getDeclaredConstructor(Configuration.class, String.class, PolicyEngine.class);constructor.setAccessible(true);return (AuthorizationProvider)constructor.newInstance(new Object[] {authConf, resourceName, policyEngine});}}"	1
4562	"public class A {@Testpublic void copyAllTranslationsWithMD5MatchBetweenRepositoriesNameRegex()throws InterruptedException, ExecutionException, RepositoryNameAlreadyUsedException,AssetWithIdNotFoundException, RepositoryWithIdNotFoundException {TMTestData tmTestDataSource = new TMTestData(testIdWatcher);Repository sourceRepository = tmTestDataSource.repository;Repository targetRepository =repositoryService.createRepository(testIdWatcher.getEntityName(""targetRepository""));TM tm = targetRepository.getTm();Asset asset =assetService.createAssetWithContent(targetRepository.getId(), ""fake_for_test"", ""fake for test"");Long assetId = asset.getId();tmService.addTMTextUnit(tm.getId(),assetId,""zuora_error_message_verify_state_province"",""Please enter a valid state, region or province"",""Comment1"");tmService.addTMTextUnit(tm.getId(), assetId, ""TEST2"", ""Content2"", ""Comment2"");tmService.addTMTextUnit(tm.getId(), assetId, ""TEST3"", ""Content3"", ""Comment3"");CopyTmConfig copyTmConfig = new CopyTmConfig();copyTmConfig.setSourceRepositoryId(sourceRepository.getId());copyTmConfig.setTargetRepositoryId(targetRepository.getId());copyTmConfig.setNameRegex(""TEST.*"");leveragingService.copyTm(copyTmConfig).get();List<TMTextUnitVariant> sourceTranslations =tmTextUnitVariantRepository.findByTmTextUnitTmRepositoriesAndLocale_Bcp47TagNotOrderByContent(sourceRepository, ""en"");List<TMTextUnitVariant> targetTranslations =tmTextUnitVariantRepository.findByTmTextUnitTmRepositoriesAndLocale_Bcp47TagNotOrderByContent(targetRepository, ""en"");Predicate<TMTextUnitVariant> filterZuora =new Predicate<TMTextUnitVariant>() {@Overridepublic boolean apply(TMTextUnitVariant tmtuv) {return !""zuora_error_message_verify_state_province"".equals(tmtuv.getTmTextUnit().getName());}};Iterator<TMTextUnitVariant> itSource =Iterables.filter(sourceTranslations, filterZuora).iterator();Iterator<TMTextUnitVariant> itTarget = targetTranslations.iterator();while (itTarget.hasNext()) {TMTextUnitVariant next = itTarget.next();Assert.assertEquals(""translation in source and target must be the same"",itSource.next().getContent(),next.getContent());}Assert.assertFalse(itSource.hasNext());}}"	1
4563	public class A {public void close() throws IOException {if (!isClosed) {try {this.addFile();this.outputStream.close();this.outputStream = null;} catch (Exception ex) {ex.printStackTrace();} finally {this.isClosed = true;}}}}	1
4564	"public class A {@Overrideprotected UserDetails processAutoLoginCookie(final String[] cookieTokens,final HttpServletRequest request,final HttpServletResponse response)throws RememberMeAuthenticationException, UsernameNotFoundException {if (cookieTokens.length != 2) {throw new InvalidCookieException(""Cookie token did not contain 2 tokens, but contained '""+ Arrays.asList(cookieTokens)+ ""'"");}final String presentedId = cookieTokens[0];final String presentedToken = cookieTokens[1];try {PersistentLogin persistentLogin = authenticationService.getPersistentLogin(presentedId);if (persistentLogin == null) {throw new RememberMeAuthenticationException(""No persistent token found for id: "" + presentedId);}if (!presentedToken.equals(persistentLogin.getToken())) {authenticationService.deletePersistentLogin(presentedId);throw new CookieTheftException(""Invalid remember-me token (id/token) mismatch. Implies previous cookie theft attack."");}if (persistentLogin.getTimestamp().getTime() + getTokenValiditySeconds() * 1000L< currentTimeMillis()) {throw new RememberMeAuthenticationException(""Remember-me login has expired"");}if (logger.isDebugEnabled()) {}persistentLogin = authenticationService.refreshPersistentLoginToken(presentedId);setCookie(new String[] {persistentLogin.getId(), persistentLogin.getToken()},getTokenValiditySeconds(),request,response);return ((ProfileUserDetailsService) getUserDetailsService()).loadUserById(persistentLogin.getProfileId());} catch (ProfileException e) {throw new RememberMeAuthenticationException(""Error validating persistent login "" + presentedId, e);}}}"	1
4565	public class A {@Overridepublic void feedback(String username, String title, String type, String message, String email, String host) {Calendar cal = Calendar.getInstance();try {EntityManager.instance.insertFeedback(username, title, type, message, email, host, cal.getTime());} catch (Exception e) {}}}	1
4566	"public class A {@SuppressWarnings({""unchecked""})public Object doSendCommandStart(Object[] args) {Command cmd = (Command) args[0];String host = (String) args[2];Integer port = (Integer) args[3];String targetURL = ""redis://"" + host + "":"" + port;String redisAction = cmd.name();if (logger.isDebugable()) {}Map<String, Object> params = new HashMap<String, Object>();params.put(CaptureConstants.INFO_CLIENT_REQUEST_URL, targetURL);params.put(CaptureConstants.INFO_CLIENT_REQUEST_ACTION, redisAction);params.put(CaptureConstants.INFO_CLIENT_APPID, appid);params.put(CaptureConstants.INFO_CLIENT_TYPE, ""redis.client.Jedis"");UAVServer.instance().runMonitorCaptureOnServerCapPoint(CaptureConstants.CAPPOINT_APP_CLIENT, Monitor.CapturePhase.PRECAP, params);UAVServer.instance().runSupporter(""com.creditease.uav.apm.supporters.InvokeChainSupporter"",""registerAdapter"",JedisClientAdapter.class);ivcContextParams =(Map<String, Object>)UAVServer.instance().runSupporter(""com.creditease.uav.apm.supporters.InvokeChainSupporter"",""runCap"",InvokeChainConstants.CHAIN_APP_CLIENT,InvokeChainConstants.CapturePhase.PRECAP,params,JedisClientAdapter.class,args);return null;}}"	1
4567	public class A {public static LateralCacheManager getInstance(ILateralCacheAttributes lca, ICompositeCacheManager cacheMgr) {LateralCacheManager ins = (LateralCacheManager) instances.get(lca.toString());synchronized (instances) {if (ins == null) {ins = (LateralCacheManager) instances.get(lca.toString());if (ins == null) {ins = new LateralCacheManager(lca, cacheMgr);instances.put(lca.toString(), ins);}}}ins.clients++;if (monitor == null) {monitor = new LateralCacheMonitor(ins);if (monitor != null) {Thread t = new Thread(monitor);t.setDaemon(true);t.start();}}return ins;}}	1
4568	public class A {@Overridepublic void close() throws SQLException {if (connection != null) {resetAutoCommit();if (log.isDebugEnabled()) {}connection.close();}}}	1
4569	public class A {@Overridepublic long getChangeNumber(String segmentName) {SegmentImp segmentImp = _segments.get(segmentName);if (segmentImp == null) {return DEFAULT_CHANGE_NUMBER;}return segmentImp.getChangeNumber();}}	1
4570	public class A {@Overridepublic Status delete(String table, String key) {key = createQualifiedKey(table, key);try {OperationFuture<Boolean> future = memcachedClient().delete(key);return getReturnCode(future);} catch (Exception e) {return Status.ERROR;}}}	1
4571	public class A {@Overrideprotected void processRenderSubGeometries(Collection<? extends RenderToTextureGeometry> objects,StateController<RenderToTextureGeometry> controller) {RenderContext mainRenderContext = RenderContext.getCurrent();if (mainRenderContext == null) {return;}for (RenderToTextureGeometry rttg : objects) {RenderToTextureImageProvider tp =(RenderToTextureImageProvider)rttg.getTileGeometry().getImageManager().getImageProvider();if (!tp.isReady()) {ScreenBoundingBox box = rttg.getRenderBox();ModelGeometryDistributor modelData = (ModelGeometryDistributor) getCachedData(rttg, null);if (modelData == null) {if (LOGGER.isDebugEnabled()) {}continue;}RenderToTexture pickRendToTex = tp.getRendToTexures().get(RenderMode.PICK);if (pickRendToTex == null) {PrivateRenderer rend = new PrivateRenderer(modelData.getDistributor());pickRendToTex = new RenderToTexture(rend, (int) box.getWidth(), (int) box.getHeight());tp.setRenderToTexture(RenderMode.PICK, pickRendToTex);}RenderContext rc = mainRenderContext.derive(rttg.getMapContext(), RenderMode.PICK);generateTexture(rc, tp, pickRendToTex);RenderToTexture drawRendToTex = tp.getRendToTexures().get(AbstractGeometry.RenderMode.DRAW);if (drawRendToTex == null) {PrivateRenderer rend = new PrivateRenderer(modelData.getDistributor());drawRendToTex = new RenderToTexture(rend, (int) box.getWidth(), (int) box.getHeight());drawRendToTex.setClearColor(rttg.getBackgroundColor());tp.setRenderToTexture(AbstractGeometry.RenderMode.DRAW, drawRendToTex);}rc = mainRenderContext.derive(rttg.getMapContext(), RenderMode.DRAW);generateTexture(rc, tp, drawRendToTex);}}controller.changeState(objects, State.READY);}}	2
4572	public class A {@Overridepublic void run() {HazelcastInstance instance = factory.newHazelcastInstance(config);instances.set(0, instance);IMap<String, String> map = instance.getMap(MAP_NAME);node1MapLoadingAboutToStart.countDown();int sizeOnNode1 = map.size();node1FinishedLoading.countDown();}}	3
4573	public class A {void stopContainer() {try {if (container != null) {container.stop();}} catch (LifecycleException exception) {}}}	2
4574	"public class A {private void logLevels(MessagingException me) {Exception ne;while ((ne = me.getNextException()) != null && ne instanceof MessagingException) {me = (MessagingException) ne;EnhancedMessagingException enhancedMessagingException = new EnhancedMessagingException(me);if (me.getClass().getName().endsWith("".SMTPAddressFailedException"")|| me.getClass().getName().endsWith("".SMTPAddressSucceededException"")) {}}}}"	1
4575	public class A {@Override@Transactionalpublic <T> T loadTraitsForUserAndProject(Key<T> aKey, User aUser, Project aProject) {try {Optional<UserProjectPreference> pref = getUserProjectPreference(aKey, aUser, aProject);if (pref.isPresent()) {String json = pref.get().getTraits();T result = JSONUtil.fromJsonString(aKey.getTraitClass(), json);return result;} else {return buildDefault(aKey.getTraitClass());}} catch (IOException e) {return buildDefault(aKey.getTraitClass());}}}	3
4576	public class A {protected Ini getServletContextIniResource(String servletContextPath) {String path = WebUtils.normalize(servletContextPath);if (getServletContext() != null) {InputStream is = getServletContext().getResourceAsStream(path);if (is != null) {Ini ini = new Ini();ini.load(is);if (CollectionUtils.isEmpty(ini)) {}return ini;}}return null;}}	1
4577	public class A {public void run() {try {Thread.sleep(getMaxTestTime());} catch (InterruptedException e) {} finally {if (!isTestSuccess.get()) {dumpAllThreads(getName());System.exit(EXIT_ERROR);}}}}	1
4578	public class A {@BeforeAllpublic static void setUp() throws SQLException {Config config = ConfigProvider.getConfig();Optional<String> jdbcUrl = config.getOptionalValue(PROPERTY_JDBC, String.class);if (jdbcUrl.isPresent()) {connection = DriverManager.getConnection(jdbcUrl.get());} else {}}}	1
4579	public class A {int getMillisecondValue(ConditionalAction action) {String sNumber = action.getActionString();float time = 0;try {time = Float.parseFloat(sNumber);} catch (NumberFormatException e) {if (sNumber.charAt(0) == '@') {sNumber = sNumber.substring(1);}Memory mem = getMemory(sNumber);if (mem == null) {return -1;}try {time = Float.parseFloat((String) mem.getValue());} catch (NumberFormatException ex) {time = -1;}if (time <= 0) {}}return (int) (time * 1000);}}	2
4580	"public class A {public MediaPackage getCurrentRecording(String agentId)throws NotFoundException, UnauthorizedException, SchedulerException {Opt<MediaPackage> current = schedulerService.getCurrentRecording(agentId);if (current.isNone()) {throw new NotFoundException(""No current recording found for agent '"" + agentId + ""'"");}return current.get();}}"	1
4581	"public class A {@Beforepublic void setup() throws Exception {File agentDir = StagedInstall.getInstance().getStageDir();File testDir = new File(agentDir, TestSpooldirSource.class.getName());assertTrue(testDir.mkdirs());File spoolParentDir = new File(testDir, ""spools"");assertTrue(""Unable to create sink output dir: "" + spoolParentDir.getPath(), spoolParentDir.mkdir());final int NUM_SOURCES = 100;agentProps = new Properties();List<String> spooldirSrcNames = Lists.newArrayList();String channelName = ""mem-01"";for (int i = 0; i < NUM_SOURCES; i++) {String srcName = String.format(""spooldir-%03d"", i);File spoolDir = new File(spoolParentDir, srcName);assertTrue(spoolDir.mkdir());spooldirSrcNames.add(srcName);spoolDirs.add(spoolDir);agentProps.put(String.format(""agent.sources.%s.type"", srcName), ""SPOOLDIR"");agentProps.put(String.format(""agent.sources.%s.spoolDir"", srcName), spoolDir.getPath());agentProps.put(String.format(""agent.sources.%s.channels"", srcName), channelName);}agentProps.put(""agent.channels.mem-01.type"", ""MEMORY"");agentProps.put(""agent.channels.mem-01.capacity"", String.valueOf(100000));sinkOutputDir = new File(testDir, ""out"");assertTrue(""Unable to create sink output dir: "" + sinkOutputDir.getPath(), sinkOutputDir.mkdir());agentProps.put(""agent.sinks.roll-01.channel"", channelName);agentProps.put(""agent.sinks.roll-01.type"", ""FILE_ROLL"");agentProps.put(""agent.sinks.roll-01.sink.directory"", sinkOutputDir.getPath());agentProps.put(""agent.sinks.roll-01.sink.rollInterval"", ""0"");agentProps.put(""agent.sources"", Joiner.on("" "").join(spooldirSrcNames));agentProps.put(""agent.channels"", channelName);agentProps.put(""agent.sinks"", ""roll-01"");}}"	1
4582	public class A {public static com.liferay.expando.kernel.model.ExpandoValueSoap addValue(long companyId,String className,String tableName,String columnName,long classPK,Object data)throws RemoteException {try {com.liferay.expando.kernel.model.ExpandoValue returnValue =ExpandoValueServiceUtil.addValue(companyId, className, tableName, columnName, classPK, data);return com.liferay.expando.kernel.model.ExpandoValueSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4583	public class A {@Overridepublic List<String> findAccessible(Entity entity) {List<String> securityEventIds = Collections.emptyList();List<NeutralQuery> filters = buildQualifyingFilters();if (filters.size() > 0) {NeutralQuery query = new NeutralQuery();for (NeutralQuery filter : filters) {query.addOrQuery(filter);}securityEventIds = Lists.newArrayList((repository.findAllIds(RESOURCE_NAME, query)));} else {}return securityEventIds;}}	1
4584	"public class A {public Exchange doInTransaction(TransactionStatus status) {Exchange result = null;final String key = correlationId;try {boolean present =jdbcTemplate.queryForObject(""SELECT COUNT(1) FROM "" + getRepositoryName() + "" WHERE "" + ID + "" = ?"",Integer.class,key)!= 0;if (isReturnOldExchange() && present) {result = get(key, getRepositoryName(), camelContext);}if (present) {long version = exchange.getProperty(VERSION_PROPERTY, Long.class);update(camelContext, correlationId, exchange, getRepositoryName(), version);} else {insert(camelContext, correlationId, exchange, getRepositoryName(), 1L);}} catch (Exception e) {throw new RuntimeException(""Error adding to repository "" + repositoryName + "" with key "" + key, e);}return result;}}"	3
4585	"public class A {protected Class resolveClassInternal(String className,boolean requireAnnotation,boolean forAnnotationUse,ClasspathExtensionClass classpathExtension)throws ClassNotFoundException {if (forAnnotationUse) {String lowercase = className.toLowerCase(Locale.ENGLISH);if (lowercase.equals(""private"")) {return Private.class;}if (lowercase.equals(""protected"")) {return Protected.class;}if (lowercase.equals(""public"")) {return Public.class;}if (lowercase.equals(""buseventtype"")) {return BusEventType.class;}}Class clazzExtension = classpathExtension.findClassByName(className);if (clazzExtension != null) {return clazzExtension;}try {return getClassForNameProvider().classForName(className);} catch (ClassNotFoundException e) {if (log.isDebugEnabled()) {}}if (forAnnotationUse) {Class clazz = checkImports(annotationImports, requireAnnotation, className);if (clazz != null) {return clazz;}}Class clazz = checkImports(imports, requireAnnotation, className);if (clazz != null) {return clazz;}throw new ClassNotFoundException(""Unknown class "" + className);}}"	1
4586	public class A {private static boolean removeFromNode(FilterHandle filterCallback,FilterHandleSetNode currentNode,FilterValueSetParam[] params,int currentLevel) {if (currentLevel == params.length) {currentNode.getNodeRWLock().writeLock().lock();try {return currentNode.remove(filterCallback);} finally {currentNode.getNodeRWLock().writeLock().unlock();}}if (currentLevel > params.length) {return false;}currentNode.getNodeRWLock().writeLock().lock();try {FilterParamIndexBase indexFound = null;for (FilterParamIndexBase index : currentNode.getIndizes()) {for (int i = 0; i < params.length; i++) {FilterValueSetParam param = params[i];boolean indexMatch = false;if (index instanceof FilterParamIndexLookupableBase) {FilterParamIndexLookupableBase baseIndex = (FilterParamIndexLookupableBase) index;if ((param.getLookupable().getExpression().equals(baseIndex.getLookupable().getExpression()))&& (param.getFilterOperator().equals(baseIndex.getFilterOperator()))) {indexMatch = true;}} else if (index instanceof FilterParamIndexBooleanExpr&& param.getFilterOperator() == FilterOperator.BOOLEAN_EXPRESSION) {indexMatch = true;}if (indexMatch) {boolean found =removeFromIndex(filterCallback, index, params, currentLevel + 1, param.getFilterForValue());if (found) {indexFound = index;break;}}}if (indexFound != null) {break;}}if (indexFound == null) {return false;}if (indexFound.isEmpty()) {boolean isRemoved = currentNode.remove(indexFound);if (!isRemoved) {return true;}}return true;} finally {currentNode.getNodeRWLock().writeLock().unlock();}}}	2
4587	"public class A {private void configureCaches(Path pluginDir, String pluginName) {Path cacheConfig = pluginDir.resolve(""cache-config.xml"");if (Files.exists(cacheConfig)) {PluginCacheConfigurator configurator = new PluginCacheConfigurator();try {configurator.setInputStream(new BufferedInputStream(Files.newInputStream(cacheConfig)));configurator.configure(pluginName);} catch (Exception e) {}}}}"	1
4588	"public class A {@Overridepublic boolean deleteSymLink(URI homeUri) {File homeFile = new File(fileMapper.mapUriToKitodoDataDirectoryUri(homeUri));String command = KitodoConfig.getParameter(""script_deleteSymLink"");CommandService commandService = new CommandService();List<String> parameters = new ArrayList<>();try {parameters.add(URLDecoder.decode(homeFile.getAbsolutePath(), StandardCharsets.UTF_8.name()));return commandService.runCommand(new File(command), parameters).isSuccessful();} catch (FileNotFoundException e) {return false;} catch (IOException e) {return false;}}}"	2
4589	"public class A {private Long findSchemaForPositionSHA(Connection c, String sha) throws SQLException {PreparedStatement p = c.prepareStatement(""SELECT * from `schemas` where position_sha = ?"");p.setString(1, sha);ResultSet rs = p.executeQuery();if (rs.next()) {Long id = rs.getLong(""id"");return id;} else {return null;}}}"	1
4590	"public class A {@Overridepublic void generate(Model model, MolgenisOptions options) throws Exception {Template template = createTemplate(""/"" + getClass().getSimpleName() + "".java.ftl"");Map<String, Object> templateArgs = createTemplateArguments(options);File target = new File(this.getDocumentationPath(options) + ""/tabledoc.html"");boolean created = target.getParentFile().mkdirs();if (!created && !target.getParentFile().exists()) {throw new IOException(""could not create "" + target.getParentFile());}templateArgs.put(""model"", model);OutputStream targetOut = new FileOutputStream(target);template.process(templateArgs, new OutputStreamWriter(targetOut, Charset.forName(""UTF-8"")));targetOut.close();}}"	1
4591	"public class A {public static void initialize(DistributionConfig distributionConfig, Collection<DistributedSystemService> services) {if (distributionConfig.getValidateSerializableObjects()) {if (!ClassUtils.isClassAvailable(""sun.misc.ObjectInputFilter"")&& !ClassUtils.isClassAvailable(""java.io.ObjectInputFilter"")) {throw new GemFireConfigException(""A serialization filter has been specified but this version of Java does not support""+ "" serialization filters - ObjectInputFilter is not available"");}serializationFilter =new ObjectInputStreamFilterWrapper(SANCTIONED_SERIALIZABLES_DEPENDENCIES_PATTERN+ distributionConfig.getSerializableObjectFilter()+ "";!*"",services);} else {clearSerializationFilter();}}}"	1
4592	"public class A {@Overridepublic byte[] doInTransform(Instrumentor instrumentor,ClassLoader classLoader,String className,Class<?> classBeingRedefined,ProtectionDomain protectionDomain,byte[] classfileBuffer)throws InstrumentException {final InstrumentClass target =instrumentor.getInstrumentClass(classLoader, className, classfileBuffer);target.addField(AsyncContextAccessor.class);target.addField(PinpointTraceAccessor.class);final MethodFilter applyMethodFilter = MethodFilters.chain(MethodFilters.name(""copy""));for (InstrumentMethod method : target.getDeclaredMethods(applyMethodFilter)) {try {method.addInterceptor(StartMarkerCopyInterceptor.class);break;} catch (Exception e) {final PLogger logger = PLoggerFactory.getLogger(this.getClass());if (logger.isWarnEnabled()) {}}}return target.toBytecode();}}"	1
4593	"public class A {@Given(""^Start Event Broker$"")public void start() {if (NO_EMBEDDED_SERVERS) {return;}if (StringUtils.isEmpty(System.getProperty(SystemSettingKey.EVENT_BUS_URL.key()))) {System.setProperty(SystemSettingKey.EVENT_BUS_URL.key(), ""amqp://127.0.0.1:5672"");}database.setup();try {Configuration configuration = new ConfigurationImpl();configuration.setPersistenceEnabled(false);configuration.setJournalDirectory(DEFAULT_DATA_DIRECTORY);configuration.setSecurityEnabled(false);configuration.addAcceptorConfiguration(""amqp"", ""tcp://127.0.0.1:5672?protocols=AMQP"");configuration.addConnectorConfiguration(""connector"", ""tcp://127.0.0.1:5672"");JMSConfiguration jmsConfig = new JMSConfigurationImpl();ConnectionFactoryConfiguration cfConfig =new ConnectionFactoryConfigurationImpl().setName(""cf"").setConnectorNames(Arrays.asList(""connector"")).setBindings(""cf"");jmsConfig.getConnectionFactoryConfigurations().add(cfConfig);jmsServer =new EmbeddedJMS().setConfiguration(configuration).setJmsConfiguration(jmsConfig).start();if (EXTRA_STARTUP_DELAY > 0) {Thread.sleep(Duration.ofSeconds(EXTRA_STARTUP_DELAY).toMillis());}} catch (RuntimeException e) {throw e;} catch (Exception e) {}}}"	2
4594	public class A {protected void persistPeriodChanges(NodeRef dispositionActionDef, DispositionAction nextAction) {NodeRef dispositionedNode =getNodeService().getPrimaryParent(nextAction.getNodeRef()).getParentRef();DispositionActionDefinition definition = nextAction.getDispositionActionDefinition();Date newAsOfDate = getDispositionService().calculateAsOfDate(dispositionedNode, definition);if (logger.isDebugEnabled()) {}getNodeService().setProperty(nextAction.getNodeRef(), PROP_DISPOSITION_AS_OF, newAsOfDate);}}	1
4595	public class A {private void prepareNextStream() throws IOException {streamProvider.next();currentPath = streamProvider.getCurrentPath();try {currentStream = streamProvider.openStream();currentWriter = streamSupport.createWriter(currentPath, currentStream);} catch (IOException e) {throw e;}}}	2
4596	"public class A {@Overridepublic void onCommand(Command c) throws UnableToExecuteException {String delimiter = configuration.getProperty(""address-delimiter"");address = c.getProperty(""address"").split(delimiter);Board board = (Board) devices.get(address[0]);String ip_board = board.getIpAddress();int port_board = board.getPort();boolean connected = false;try {connected = connect(ip_board, port_board);} catch (ArrayIndexOutOfBoundsException outEx) {throw new UnableToExecuteException();} catch (NumberFormatException numberFormatException) {throw new UnableToExecuteException();}if (connected) {String message = createCommandMessage(c);String expectedReply = c.getProperty(""expected-reply"");try {String reply = sendToBoard(message);if ((reply != null) && (!reply.equals(expectedReply))) {}} catch (IOException iOException) {setDescription(""Unable to send the message to host "" + address[0] + "" on port "" + address[1]);throw new UnableToExecuteException();} finally {disconnect();}} else {throw new UnableToExecuteException();}}}"	3
4597	public class A {public void startMongoServer(Runtime runtime, String startMongoServerCommand)throws IOException, InterruptedException {runtime.exec(startMongoServerCommand);Thread.sleep(90000);}}	2
4598	public class A {@Testpublic void testDebugShortCircuit() {inner.setLevel(Level.OFF);assertTrue(handler.isEmpty());}}	1
4599	public class A {private void processInitialStatusUpdates(WarningsPrinter warningsPrinter) {while (client.isRunning() && (client.currentData().getData() == null)) {warningsPrinter.print(client.currentStatusInfo().getWarnings(), true, false);try {client.advance();} catch (RuntimeException e) {}}List<Warning> warnings;if (client.isRunning()) {warnings = client.currentStatusInfo().getWarnings();} else {warnings = client.finalStatusInfo().getWarnings();}warningsPrinter.print(warnings, false, true);}}	1
4600	public class A {@Overridepublic void handle(PacketBlockPickRequest packet, long currentTimeMillis, PlayerConnection connection) {EntityPlayer player = connection.entity();float dist = player.location().distance(packet.getLocation().toVector());if (dist > 100) {return;}Block block = player.world().blockAt(packet.getLocation());switch (player.gamemode()) {case CREATIVE:for (io.gomint.inventory.item.ItemStack<?> drop : block.drops(null)) {player.inventory().addItem(drop);}break;case SURVIVAL:byte freeSlot = -1;ItemStack<?>[] items = player.inventory().contents();for (byte i = 0; i < items.length; i++) {ItemStack<?> itemStack = items[i];if (freeSlot == -1 && i < 9) {if (itemStack instanceof ItemAir) {freeSlot = i;}}if (block.blockId().equals(((io.gomint.server.inventory.item.ItemStack<?>) itemStack).material())) {if (i < 9) {player.inventory().setItemInHand(i);return;} else if (freeSlot > -1) {player.inventory().item(freeSlot, itemStack);player.inventory().item(i, ItemAir.create(1));player.inventory().setItemInHand(freeSlot);return;}}}}}}	1
4601	public class A {@Overridepublic void doHandleEvent(MCREvent evt) {if (evt.getObjectType().equals(MCRFileEventHandlerBase.FILE_TYPE)) {MCRFile file = (MCRFile) evt.get(MCRFILE_EVENT_KEY);if (file != null) {switch (evt.getEventType()) {case MCREvent.CREATE_EVENT:handleFileCreated(evt, file);break;case MCREvent.UPDATE_EVENT:handleFileUpdated(evt, file);break;case MCREvent.DELETE_EVENT:handleFileDeleted(evt, file);break;case MCREvent.REPAIR_EVENT:handleFileRepaired(evt, file);break;case MCREvent.INDEX_EVENT:updateFileIndex(evt, file);break;default:break;}return;}return;}super.doHandleEvent(evt);}}	3
4602	public class A {public void notifyStart(WorkflowExecutionContext context) throws FalconException {if (!updateContextFromWFConf(context)) {return;}for (WorkflowExecutionListener listener : listeners) {try {listener.onStart(context);} catch (Throwable t) {}}}}	2
4603	public class A {public static <T extends HasMetadata, L extends KubernetesResourceList<T>> void applyIfDifferent(File resourceDir,NonNamespaceOperation<T, L, Resource<T>> operation,Class<T> resourceClass,Comparator<T> comparator) {if (resourceDir.isDirectory()) {File[] files = resourceDir.listFiles();if (files != null) {for (File file : files) {T newResource = readAndParse(file, resourceClass);if (newResource != null) {T currentResource = operation.withName(newResource.getMetadata().getName()).get();if (currentResource == null) {operation.create(newResource);} else if (comparator.compare(currentResource, newResource) != 0) {operation.createOrReplace(newResource);}}}}}}}	2
4604	public class A {@Overridepublic void reset() {if (resetHandles != null) {for (ResetContextHandle handle : resetHandles) {try {handle.reset();} catch (Throwable e) {}}resetHandles = null;ConcurrentContext.popCurrent();}}}	1
4605	public class A {public static String extractHttpBody(final HttpURLConnection connection,final List<ContentEncoding> encodings,final String characterEncoding)throws IOException {final InputStream inputStream;BufferedReader bufferedReader = null;try {if (connection.getResponseCode() >= OK_RESPONSE && connection.getResponseCode() < 500) {inputStream = connection.getInputStream();} else {inputStream = connection.getErrorStream();}if (encodings.contains(ContentEncoding.GZIP)) {final InputStream gzipStream = new GZIPInputStream(inputStream);final Reader decoder = new InputStreamReader(gzipStream);bufferedReader = new BufferedReader(decoder);} else if (encodings.contains(ContentEncoding.DEFLATE)) {final InflaterInputStream inflaterInputStream = new InflaterInputStream(inputStream);final Reader decoder = new InputStreamReader(inflaterInputStream, characterEncoding);bufferedReader = new BufferedReader(decoder);} else {final InputStreamReader inputStreamReader =new InputStreamReader(inputStream, java.nio.charset.StandardCharsets.UTF_8);bufferedReader = new BufferedReader(inputStreamReader);}final StringBuilder stringBuilder = new StringBuilder();String buffer;while ((buffer = bufferedReader.readLine()) != null) {stringBuilder.append(buffer);stringBuilder.append(NEW_LINE);}return stringBuilder.toString();} catch (Exception e) {throw e;} finally {if (bufferedReader != null) {try {bufferedReader.close();} catch (IOException exception) {}}}}}	2
4606	public class A {public ConnectionBuilder db(String dbName) {this.dbName = dbName;return this;}}	1
4607	public class A {@Overridepublic DeploymentPolicy getDeploymentPolicy(String deploymentPolicyID) {if (log.isDebugEnabled()) {}return PolicyManager.getInstance().getDeploymentPolicy(deploymentPolicyID);}}	1
4608	public class A {public static void cancelCheckOut(long fileEntryId) throws RemoteException {try {DLAppServiceUtil.cancelCheckOut(fileEntryId);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4609	public class A {@Overrideprotected void shutDown() {}}	1
4610	"public class A {private void startXML() {try {writer.writeStartElement(ADD_IDENTIFIER);} catch (final XMLStreamException e) {final String message = ""couldn't finish Solr Update XML export successfully"";final DMPConverterException converterException = new DMPConverterException(message, e);throw DMPConverterError.wrap(converterException);}}}"	1
4611	"public class A {@Overridepublic void initialize(InputSplit inputSplit, TaskAttemptContext taskAttemptContext)throws IOException, InterruptedException {if (!(inputSplit instanceof KafkaInputSplit)) {throw new CrunchRuntimeException(""InputSplit for RecordReader is not valid split type."");}kafkaConnectionProperties =filterConnectionProperties(getKafkaConnectionProperties(taskAttemptContext.getConfiguration()));consumer = buildConsumer(kafkaConnectionProperties);KafkaInputSplit split = (KafkaInputSplit) inputSplit;topicPartition = split.getTopicPartition();consumer.assign(Collections.singletonList(topicPartition));consumer.poll(0);startingOffset = split.getStartingOffset();consumer.seek(topicPartition, startingOffset);currentOffset = startingOffset - 1;endingOffset = split.getEndingOffset();maxNumberOfRecords = endingOffset - startingOffset;if (LOG.isInfoEnabled()) {}Configuration config = taskAttemptContext.getConfiguration();consumerPollTimeout = config.getLong(CONSUMER_POLL_TIMEOUT_KEY, CONSUMER_POLL_TIMEOUT_DEFAULT);maxNumberAttempts = config.getInt(KAFKA_RETRY_ATTEMPTS_KEY, KAFKA_RETRY_ATTEMPTS_DEFAULT);}}"	1
4612	"public class A {@Overridepublic void registerSchema(List<DeviceSchema> schemaList) throws TsdbException {if (!config.getOPERATION_PROPORTION().split("":"")[0].equals(""0"")) {try {Set<String> groups = new HashSet<>();for (DeviceSchema schema : schemaList) {groups.add(schema.getGroup());}setStorageGroup(groups, connection1);setStorageGroup(groups, connection2);} catch (SQLException e) {if (!e.getMessage().contains(ALREADY_KEYWORD)) {throw new TsdbException(e);}}CreateTimeSeries(connection1, schemaList);CreateTimeSeries(connection2, schemaList);}}}"	1
4613	public class A {private void echoStartWorkers() {started = System.nanoTime();LOGGER.info(HORIZONTAL_RULER);}}	3
4614	"public class A {protected void savePageMetadata(String pageCode, PageMetadata pageMetadata, boolean isAdd, String tableName, Connection conn)throws ApsSystemException {if (pageMetadata != null) {PreparedStatement stat = null;try {StringBuilder query =new StringBuilder(isAdd ? ADD_PAGE_METADATA_START : UPDATE_PAGE_METADATA_START);query.append(tableName).append(isAdd ? ADD_PAGE_METADATA_END : UPDATE_PAGE_METADATA_END);stat = conn.prepareStatement(query.toString());int index = 1;if (isAdd) {stat.setString(index++, pageCode);}stat.setString(index++, pageMetadata.getGroup());stat.setString(index++, pageMetadata.getTitles().toXml());stat.setString(index++, pageMetadata.getModel().getCode());if (pageMetadata.isShowable()) {stat.setInt(index++, 1);} else {stat.setInt(index++, 0);}String extraConfig = this.getExtraConfig(pageMetadata);stat.setString(index++, extraConfig);Date updatedAt =pageMetadata.getUpdatedAt() != null ? pageMetadata.getUpdatedAt() : new Date();stat.setTimestamp(index++, updatedAt != null ? new java.sql.Timestamp(updatedAt.getTime()) : null);if (!isAdd) {stat.setString(index++, pageCode);}stat.executeUpdate();} catch (Throwable t) {throw new RuntimeException(""Error while saving the page metadata record for table "" + tableName, t);} finally {closeDaoResources(null, stat);}}}}"	1
4615	public class A {private void doUnsubscribe(String topic, Handler<AsyncResult<Void>> handler) {if (this.subscriptions.remove(topic) == null) {handler.handle(Future.succeededFuture());return;}if (handler != null) {this.notifyUnsubscribed.computeIfAbsent(topic, x -> new LinkedList<>()).add(handler);}if (log.isDebugEnabled()) {}requestUnsubscribe(Collections.singletonList(topic));}}	1
4616	public class A {@Overridepublic void debug(String format, Object... arguments) {for (Logger logger : this.loggers) {}}}	1
4617	"public class A {@Overrideprotected boolean begin() {if (getBasicProperties().isSuppressGenerateTask()) {return false;}_log.info(""+------------------------------------------+"");_log.info(""|                                          |"");DfDBFluteTaskStatus.getInstance().setTaskType(TaskType.Generate);return true;}}"	4
4618	public class A {@Overridepublic void run() {String iterator = prepareIterator();while (isAlive) {iterator = processNextIterator(iterator);try {Thread.sleep(1000);} catch (Exception e) {throw new RuntimeException(e);}}}}	1
4619	public class A {public void syncHive() {HiveSyncConfig hiveSyncConfig =DataSourceUtils.buildHiveSyncConfig(props, cfg.targetBasePath, cfg.baseFileFormat);HiveConf hiveConf = new HiveConf(conf, HiveConf.class);new HiveSyncTool(hiveSyncConfig, hiveConf, fs).syncHoodieTable();}}	3
4620	"public class A {@Overridepublic Exchange get(final CamelContext camelContext, final String key) {Exchange answer = null;try {byte[] lDbKey = keyBuilder(repositoryName, key);byte[] rc = levelDBFile.getDb().get(lDbKey);if (rc != null) {answer = codec().unmarshallExchange(camelContext, rc);}} catch (IOException e) {throw new RuntimeException(""Error getting key "" + key + "" from repository "" + repositoryName, e);}return answer;}}"	2
4621	"public class A {@RequestMapping(""/kafka-case"")@ResponseBodypublic String kafkaCase() {wrapProducer(producer -> {ProducerRecord<String, String> record =new ProducerRecord<String, String>(topicName, ""testKey"", Integer.toString(1));record.headers().add(""TEST"", ""TEST"".getBytes());producer.send(record,new Callback() {@Overridepublic void onCompletion(RecordMetadata metadata, Exception exception) {LOGGER.info(""send success metadata={}"", metadata);}});ProducerRecord<String, String> record2 =new ProducerRecord<String, String>(topicName2, ""testKey"", Integer.toString(1));record2.headers().add(""TEST"", ""TEST"".getBytes());Callback callback2 =(metadata, exception) -> {LOGGER.info(""send success metadata={}"", metadata);};producer.send(record2, callback2);ProducerRecord<String, String> record3 =new ProducerRecord<String, String>(topicName2, ""testKey"", Integer.toString(1));final Future<RecordMetadata> result = producer.send(record3);new Thread() {@Overridepublic void run() {try {RecordMetadata metadata = result.get(10, TimeUnit.MILLISECONDS);} catch (Throwable t) {}}}.start();ProducerRecord<String, String> recordForAssign =new ProducerRecord<String, String>(topicNameForAssign, ""testKey"", Integer.toString(1));recordForAssign.headers().add(""TEST"", ""TEST"".getBytes());producer.send(recordForAssign,new Callback() {@Overridepublic void onCompletion(RecordMetadata metadata, Exception exception) {}});},bootstrapServers);Thread thread = new ConsumerThread();thread.start();Thread thread2 = new ConsumerThread2();thread2.start();Thread thread3 = new ConsumerAssignThread();thread3.start();try {thread.join();thread2.join();thread3.join();} catch (InterruptedException e) {}return SUCCESS;}}"	3
4622	public class A {public void setConnectTimeout(final Optional<Integer> value) {value.ifPresent(s -> {super.setConnectTimeout(s);});}}	1
4623	public class A {@Overridepublic void recordEvent(Event e) {}}	1
4624	"public class A {public List<String> getAddressbookNames(final String abIds) {if (StringUtils.isEmpty(abIds) == true) {return null;}final int[] ids = StringHelper.splitToInts(abIds, "","", false);final List<String> list = new ArrayList<String>();for (final int id : ids) {final AddressbookDO ab = addressbookDao.internalGetById(id);if (ab != null) {list.add(ab.getTitle());} else {}}return list;}}"	1
4625	"public class A {@Overridepublic UserGroupRole findByU_G_R(long userId, long groupId, long roleId)throws NoSuchUserGroupRoleException {UserGroupRole userGroupRole = fetchByU_G_R(userId, groupId, roleId);if (userGroupRole == null) {StringBundler sb = new StringBundler(8);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""userId="");sb.append(userId);sb.append("", groupId="");sb.append(groupId);sb.append("", roleId="");sb.append(roleId);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchUserGroupRoleException(sb.toString());}return userGroupRole;}}"	1
4626	"public class A {public static CachedRowSet executeQuery(String dataSourceName, String repositoryName, String cspaceInstanceId, String sql)throws Exception {Connection conn = null;Statement stmt = null;try {conn = getConnection(dataSourceName, repositoryName, cspaceInstanceId);stmt = conn.createStatement();RowSetFactory rowSetFactory = RowSetProvider.newFactory();CachedRowSet crs = rowSetFactory.createCachedRowSet();stmt = conn.createStatement();try (ResultSet resultSet = stmt.executeQuery(sql)) {crs.populate(resultSet);}return crs;} catch (SQLException sqle) {SQLException tempException = sqle;while (null != tempException) {tempException = tempException.getNextException();}throw new RuntimeException(""SQL Exception in executeQuery: "", sqle);} finally {try {if (stmt != null) {stmt.close();}if (conn != null) {conn.close();}} catch (SQLException sqle) {return null;}}}}"	2
4627	"public class A {@Test(enabled = false,description = ""Disabled as it shows false failures too often. Run on demand if required"")public void testBeanMetaDataCanBeGarbageCollected() throws Exception {Class<?> lastIterationsBean = null;int totalCreatedMetaDataInstances = 0;int cachedBeanMetaDataInstances = 0;try {List<Object> memoryConsumer = new ArrayList<>();for (int i = 0; i < LOOP_COUNT; i++) {Class<?> c = new CustomClassLoader().loadClass(Engine.class.getName());BeanMetaData<?> meta = metaDataManager.getBeanMetaData(c);assertNotSame(meta.getBeanClass(), lastIterationsBean, ""The classes should differ in each iteration"");lastIterationsBean = meta.getBeanClass();totalCreatedMetaDataInstances++;cachedBeanMetaDataInstances = metaDataManager.numberOfCachedBeanMetaDataInstances();if (cachedBeanMetaDataInstances < totalCreatedMetaDataInstances) {break;}memoryConsumer.add(new long[ARRAY_ALLOCATION_SIZE]);}} catch (OutOfMemoryError e) {}if (!(cachedBeanMetaDataInstances < totalCreatedMetaDataInstances)) {fail(""Metadata instances should be garbage collectible"");}}}"	6
4628	public class A {@Overridepublic boolean connect() {InfluxDBClientOptions.Builder optionsBuilder =InfluxDBClientOptions.builder().url(configuration.getUrl()).org(configuration.getDatabaseName()).bucket(configuration.getRetentionPolicy());char[] token = configuration.getTokenAsCharArray();if (token.length > 0) {optionsBuilder.authenticateToken(token);} else {optionsBuilder.authenticate(configuration.getUser(), configuration.getPassword().toCharArray());}InfluxDBClientOptions clientOptions = optionsBuilder.build();final InfluxDBClient createdClient = InfluxDBClientFactory.create(clientOptions);this.client = createdClient;queryAPI = createdClient.getQueryApi();writeAPI = createdClient.getWriteApi();return checkConnectionStatus();}}	1
4629	public class A {private void handleException(FailureReason aReason, String aMessage) {myURLDataSource.setFailureReason(aReason);myURLDataSource.setErrorMessage(aMessage);}}	1
4630	"public class A {private static String cookie(HttpServletRequest httpRequest, String name) {Cookie[] cookies = httpRequest.getCookies();if (cookies != null)for (Cookie cookie : cookies) {if (name.equals(cookie.getName())) {try {String value = URLDecoder.decode(cookie.getValue(), ""UTF-8"");if (StringUtils.isNotBlank(value)) return value;} catch (UnsupportedEncodingException e) {}}}return null;}}"	3
4631	"public class A {@Overridepublic void init(SortedKeyValueIterator<Key, Value> source,Map<String, String> options,IteratorEnvironment env)throws IOException {super.init(source, options, env);final String compFields = options.get(COMPONENT_FIELDS);if (compFields != null) this.fieldNames = Arrays.asList(compFields.split("",""));for (String fieldName : fieldNames) {DiscreteIndexType type = null;String typeClass = options.get(fieldName + DISCRETE_INDEX_TYPE);if (typeClass != null) {try {type = Class.forName(typeClass).asSubclass(DiscreteIndexType.class).newInstance();} catch (Exception e) {}}if (type != null) fieldToDiscreteIndexType.put(fieldName, type);}this.separator = options.get(SEPARATOR);this.seekThreshold = Integer.parseInt(options.getOrDefault(SEEK_THRESHOLD, ""10""));compositeSeeker =new ShardIndexCompositeSeeker(fieldNames, separator, fieldToDiscreteIndexType);}}"	1
4632	"public class A {@Nullablepublic <V> V execute(String path, ConnectionHandler<V> connectionHandler) throws Exception {final List<URL> prioritizedUrlList = getPrioritizedUrlList();if (prioritizedUrlList.isEmpty()) {return null;}int expectedErrorCount = errorCount.get();Exception previousException = null;for (URL serverUrl : prioritizedUrlList) {HttpURLConnection connection = null;try {connection = startRequestToUrl(appendPath(serverUrl, path));return connectionHandler.withConnection(connection);} catch (Exception e) {expectedErrorCount = incrementAndGetErrorCount(expectedErrorCount);if (previousException != null) {e.addSuppressed(previousException);}previousException = e;} finally {HttpUtils.consumeAndClose(connection);}}if (previousException == null) {throw new IllegalStateException(""Expected previousException not to be null"");}throw previousException;}}"	1
4633	"public class A {private Result doCheck() {Config config = ConfigProvider.getConfig();if (!config.getOptionalValue(DEPLOY, Boolean.class).orElse(false)) {return Result.notConfigured();}if (serverFound) {return Result.enabled();}KubernetesClient client = KubernetesClientUtils.createClient();String masterURL = client.getConfiguration().getMasterUrl();try {VersionInfo version = client.getVersion();if (version == null) {return Result.exceptional(new RuntimeException(""Although a Kubernetes deployment was requested, it however cannot take place""+ "" because the version of the API Server at '""+ masterURL+ ""' could not be determined. Please ensure that a valid token is being""+ "" used.""));}log.debugf(""Kubernetes Version: %s.%s"", version.getMajor(), version.getMinor());serverFound = true;return Result.enabled();} catch (Exception e) {if (e.getCause() instanceof SSLHandshakeException) {return Result.exceptional(new RuntimeException(""Although a Kubernetes deployment was requested, it however cannot take place""+ "" because the API Server (at '""+ masterURL+ ""') certificates are not trusted. The certificates can be configured using""+ "" the relevant configuration propertiers under the""+ "" 'quarkus.kubernetes-client' config root, or""+ "" \""quarkus.kubernetes-client.trust-certs=true\"" can be set to explicitly""+ "" trust the certificates (not recommended)"",e));} else {return Result.exceptional(new RuntimeException(""Although a Kubernetes deployment was requested, it however cannot take place""+ "" because there was an error during communication with the API Server at '""+ masterURL+ ""'"",e));}} finally {client.close();}}}"	1
4634	public class A {public void removeVideoDisplayPanel(String source) {if (!displays.containsKey(source)) {return;}VideoDisplayPanel vdp = displays.remove(source);display.remove(vdp.myDisplay);display.invalidate();swingGui.pack();}}	1
4635	public class A {@Overridepublic void run() {if (canceled.get()) {return;}try {continuallyRunTask.invoke();} catch (final RuntimeException re) {throw re;} catch (final Exception e) {throw new ProcessException(e);}if (canceled.get()) {return;}nextSchedule = getNextSchedule(nextSchedule, cronExpression);final long delay = getDelay(nextSchedule);flowEngine.schedule(this, delay, TimeUnit.MILLISECONDS);}}	1
4636	public class A {@Overridepublic FeeData usageGiven(TransactionBody txn, SigValueObj sigUsage, StateView view)throws InvalidTxBodyException {try {MerkleTopic merkleTopic =view.topics().get(MerkleEntityId.fromTopicId(txn.getConsensusUpdateTopic().getTopicID()));long rbsIncrease =getUpdateTopicRbsIncrease(txn.getTransactionID().getTransactionValidStart(),JKey.mapJKey(merkleTopic.getAdminKey()),JKey.mapJKey(merkleTopic.getSubmitKey()),merkleTopic.getMemo(),merkleTopic.hasAutoRenewAccountId(),lookupExpiry(merkleTopic),txn.getConsensusUpdateTopic());return getConsensusUpdateTopicFee(txn, rbsIncrease, sigUsage);} catch (Exception illegal) {throw new InvalidTxBodyException(illegal);}}}	1
4637	"public class A {@Overridepublic void addCustomizedStateConfig(String clusterName, CustomizedStateConfig customizedStateConfig) {if (!ZKUtil.isClusterSetup(clusterName, _zkClient)) {throw new HelixException(""cluster "" + clusterName + "" is not setup yet"");}CustomizedStateConfig.Builder builder =new CustomizedStateConfig.Builder(customizedStateConfig);CustomizedStateConfig customizedStateConfigFromBuilder = builder.build();ZKHelixDataAccessor accessor =new ZKHelixDataAccessor(clusterName, new ZkBaseDataAccessor<ZNRecord>(_zkClient));PropertyKey.Builder keyBuilder = accessor.keyBuilder();accessor.setProperty(keyBuilder.customizedStateConfig(), customizedStateConfigFromBuilder);}}"	1
4638	public class A {@Overridepublic Entry<Key, Document> apply(Entry<Key, Document> entry) {Document document = entry.getValue();for (Map.Entry<String, Attribute<? extends Comparable<?>>> de : document.entrySet()) {String keyWithGrouping = de.getKey();String keyNoGrouping = keyWithGrouping;if (keyNoGrouping.indexOf('.') != -1) {keyNoGrouping = keyNoGrouping.substring(0, keyNoGrouping.indexOf('.'));}if (this.groupFieldsSet.contains(keyNoGrouping)) {if (log.isTraceEnabled())Attribute<?> attr = de.getValue();int delta = 1;if (attr instanceof Attributes) {Attributes attrs = (Attributes) attr;delta = attrs.size();} else {}int count =this.groupFieldsMap.get(keyWithGrouping) == null? 0: this.groupFieldsMap.get(keyWithGrouping);this.groupFieldsMap.put(keyWithGrouping, count + delta);}}applyCounts(document, groupFieldsMap);return entry;}}	5
4639	"public class A {private void checkUnauthArea(AreaKeys area, String type, String... users) throws OmException {for (String user : users) {testArea(user,p -> {tester.getRequest().setParameter(area.name(), type);try {tester.executeBehavior((AbstractAjaxBehavior) p.getBehaviorById(0));fail(""Not authorized"");} catch (UnauthorizedInstantiationException e) {assertTrue(true, ""Exception is expected"");}});}}}"	1
4640	"public class A {private Driver loadDriver() throws SQLException {try {if (jdbcDriver != null && jdbcDriver.length() > 0) {return loadDriverUsingClassName();} else {return loadDriverUsingURL();}} catch (Exception ex) {String msg = ""An Exception was caught while trying to load the driver. %s"";String msgArg = ex.getLocalizedMessage();throw new SQLException(String.format(msg, msgArg));}}}"	1
4641	public class A {private void shutdownManagedChannel() {if (managedChannel == null) {return;}try {managedChannel.shutdownNow();managedChannel.awaitTermination(1000L, TimeUnit.MILLISECONDS);} catch (Exception e) {}}}	1
4642	public class A {private javaslang.collection.List<Tuple2<Attribute, Optional<Boolean>>>determineAndCreateAttributes(final NodeList fields, final String schemaBaseURI)throws DMPPersistenceException {final List<Tuple2<Attribute, Optional<Boolean>>> attributes = new ArrayList<>();for (int i = 0; i < fields.getLength(); i++) {final Node field = fields.item(i);if (!field.hasAttributes()) {if (LOG.isDebugEnabled()) {}continue;}final NamedNodeMap fieldAttributes = field.getAttributes();final Optional<Node> optionalNameNode =Optional.ofNullable(fieldAttributes.getNamedItem(NAME_IDENTIFIER));if (!optionalNameNode.isPresent()) {if (LOG.isDebugEnabled()) {}continue;}final Node nameNode = optionalNameNode.get();final Optional<String> optionalName = Optional.ofNullable(nameNode.getNodeValue());if (!optionalName.isPresent()) {if (LOG.isDebugEnabled()) {}continue;}final Optional<Node> optionalMultiValuedNode =Optional.ofNullable(fieldAttributes.getNamedItem(MULTI_VALUED_IDENTIFIER));final Optional<Boolean> optionalIsMultiValued;if (optionalMultiValuedNode.isPresent()) {final Node multiValuedNode = optionalMultiValuedNode.get();optionalIsMultiValued =Optional.ofNullable(Boolean.valueOf(multiValuedNode.getNodeValue()));} else {optionalIsMultiValued = Optional.empty();}final Optional<Attribute> optionalAttribute =createAttribute(schemaBaseURI, optionalName.get());if (optionalAttribute.isPresent()) {attributes.add(Tuple.of(optionalAttribute.get(), optionalIsMultiValued));}}return javaslang.collection.List.ofAll(attributes);}}	3
4643	"public class A {@Transactional(rollbackFor = ArrowheadException.class)public void removePlanEntryById(final long id) {try {if (!choreographerPlanRepository.existsById(id)) {throw new InvalidParameterException(""ActionPlan with id of '"" + id + ""' doesn't exist!"");}choreographerPlanRepository.deleteById(id);choreographerPlanRepository.flush();} catch (final InvalidParameterException ex) {throw ex;} catch (final Exception ex) {throw new ArrowheadException(CoreCommonConstants.DATABASE_OPERATION_EXCEPTION_MSG);}}}"	2
4644	public class A {@Overridepublic void onFailure(Throwable t) {try {logTimeseriesDeleted(user, entityId, keys, t);} catch (ThingsboardException e) {}resultFuture.setException(t);}}	1
4645	public class A {private void logRequestSize(Item item) {if (logRequestSizeLimit == null) {return;}int sizeInBytes = item.getSize();if (sizeInBytes > logRequestSizeLimit) {}}}	1
4646	"public class A {protected Map<String, List<String>> importUsers(List<UserExport> users) {Map<String, List<String>> roleToUserMap = new HashMap<>();IUserRoleDao roleDao = PentahoSystem.get(IUserRoleDao.class);ITenant tenant = new Tenant(""/pentaho/"" + TenantUtils.getDefaultTenant(), true);if (users != null && roleDao != null) {for (UserExport user : users) {String password = user.getPassword();for (String role : user.getRoles()) {List<String> userList;if (!roleToUserMap.containsKey(role)) {userList = new ArrayList<>();roleToUserMap.put(role, userList);} else {userList = roleToUserMap.get(role);}userList.add(user.getUsername());}String[] userRoles = user.getRoles().toArray(new String[] {});try {roleDao.createUser(tenant, user.getUsername(), password, null, userRoles);} catch (AlreadyExistsException e) {getLogger()try {if (isOverwriteFile()) {roleDao.setUserRoles(tenant, user.getUsername(), userRoles);roleDao.setPassword(tenant, user.getUsername(), password);}} catch (Exception ex) {getLogger()}} catch (Exception e) {getLogger()}importUserSettings(user);}}return roleToUserMap;}}"	4
4647	public class A {@Overridepublic void lifeCycleStopping(@Nullable LifeCycle arg0) {}}	1
4648	public class A {@Overridepublic void runEx(RunnableEx runnable) throws Exception {startTransactionIfNeeded();runnable.run();flushAndClear();}}	1
4649	public class A {@Overridepublic void onNext(final TaskStop event) {NoopTask.this.stopTask();}}	1
4650	public class A {public static void deleteTopic(String zkServers, String topic) {ZkUtils zkUtils = ZkUtils.apply(zkServers, ZK_TIMEOUT_MSEC, ZK_TIMEOUT_MSEC, false);try {if (AdminUtils.topicExists(zkUtils, topic)) {AdminUtils.deleteTopic(zkUtils, topic);} else {}} finally {zkUtils.close();}}}	3
4651	public class A {@Overridepublic void run() {try {checkNotNull(embeddedAgentModule);embeddedAgentModule.waitForSimpleRepoModule();embeddedAgentModule.initEmbeddedServer();} catch (Exception e) {}}}	1
4652	public class A {private ClassSpace createClassSpace() {URLClassSpace space;if (plugin.classLoader instanceof PluginClassLoader) {PluginClassLoader cl = (PluginClassLoader) plugin.classLoader;space = new URLClassSpace(cl, cl.getURLs());} else {space = new URLClassSpace(plugin.classLoader);}return space;}}	1
4653	"public class A {public void sendOutbind(String systemId, String password) throws IOException {if (sessionContext().getSessionState().equals(SessionState.CLOSED)) {throw new IOException(""Session "" + sessionId + "" is closed"");}OutbindCommandTask task = new OutbindCommandTask(pduSender, systemId, password);try {executeSendCommandWithNoResponse(task);} catch (PDUException e) {}}}"	1
4654	public class A {public static PrintResultHandler executeProgram(CommandLine commandLine,String workingDirectory,long printJobTimeout,boolean printInBackground,int successExitValue,ExecuteStreamHandler streamHandler)throws IOException {ExecuteWatchdog watchdog = null;PrintResultHandler resultHandler;Executor executor = new DefaultExecutor();executor.setExitValue(successExitValue);if (StringHelper.isNotEmpty(workingDirectory)) {executor.setWorkingDirectory(new File(workingDirectory));}if (streamHandler != null) {executor.setStreamHandler(streamHandler);}if (printJobTimeout > 0) {watchdog = new ExecuteWatchdog(printJobTimeout);executor.setWatchdog(watchdog);}if (printInBackground) {resultHandler = new PrintResultHandler(watchdog);executor.execute(commandLine, resultHandler);} else {successExitValue = executor.execute(commandLine);resultHandler = new PrintResultHandler(successExitValue);}return resultHandler;}}	2
4655	public class A {private static void logAndPrint(String s) {System.out.println(s);}}	1
4656	"public class A {@Bean@ConditionalOnProperty(""sap.security.services.xsuaa.uaadomain"")public JwtDecoder hybridJwtDecoder(XsuaaServiceConfiguration xsuaaConfig, IdentityServiceConfiguration identityConfig) {return new JwtDecoderBuilder().withIasServiceConfiguration(identityConfig).withXsuaaServiceConfiguration(xsuaaConfig).build();}}"	1
4657	"public class A {private static IoBufferEx encodeClose(IoBufferAllocatorEx<?> allocator, int flags, AmqpCloseMessage message)throws IllegalStateException {String replyText = message.getReplyText();int size = 1 + 2 + 4 + 2 + 2 + 2 + 1 + replyText.length() + 2 + 2 + 1;ByteBuffer allocated = allocator.allocate(size, flags);int offset = allocated.position();int payloadSize = size - 8;putUnsigned(allocated, AmqpFrame.METHOD.type());putUnsignedShort(allocated, (short) message.getChannelId());putUnsignedInt(allocated, payloadSize);putUnsignedShort(allocated, message.getClassKind().classId());putUnsignedShort(allocated, message.getMethodKind().methodId());putUnsignedShort(allocated, message.getReplyCode());putShortString(allocated, replyText);putUnsignedShort(allocated, message.getReasonClassId());putUnsignedShort(allocated, message.getReasonMethodId());putUnsigned(allocated, AmqpClassMessage.FRAME_END);allocated.position(offset);Logger logger = LoggerFactory.getLogger(SERVICE_AMQP_PROXY_LOGGER);if (logger.isDebugEnabled()) {String s = "".encodeClose(): Raw Bytes - "" + getHexDump(allocated);}return allocator.wrap(allocated, flags);}}"	1
4658	public class A {public void startupSessionTimeoutCommand() {if (initSessionTimeoutCommand.compareAndSet(false, true)) {final Long sessionTimeout = getSessionTimeout();if (sessionTimeout != null && sessionTimeout > 0) {if (scheduledEventslogger.isTraceEnabled()) {}scheduleCommand(this.sessionTimeout, sessionTimeout);}}}}	1
4659	public class A {@Overridepublic void run() {try {if (getManagementSupport().isNoLongerManaged()) {return;}connectSensors();} catch (Throwable e) {Exceptions.propagateIfFatal(e);}}}	2
4660	public class A {@Overridepublic void postProcess(DataSetLookup lookup, DataSet dataSet) {numberOfRunningDataSetLookups.labels(dataSet.getUUID()).dec();dataSetExecution.labels(dataSet.getUUID()).inc();final Long start = (Long) lookup.getMetadata(PROMETHEUS_META);if (start != null) {final double duration = millisToSeconds(System.currentTimeMillis() - start);dataSetExecutionTime.labels(lookup.getDataSetUUID()).observe(duration);}}}	2
4661	"public class A {private void trainTest() throws Exception {try {String inputPath = ""../../data/a9a/a9a_123d_train.libsvm"";String savePath = LOCAL_FS + TMP_PATH + ""/FMmodel"";String logPath = LOCAL_FS + TMP_PATH + ""/FMlog"";conf.setInt(AngelConf.ANGEL_PS_NUMBER, 4);conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, inputPath);conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, savePath);conf.set(AngelConf.ANGEL_LOG_PATH, logPath);conf.set(AngelConf.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_TRAIN());GraphRunner runner = new GraphRunner();runner.train(conf);} catch (Exception x) {throw x;}}}"	1
4662	"public class A {@SuppressWarnings(""unchecked"")private static void writeCollection(InvocationParamCollection<InvocationParam> ipc) {String pathToWrite = (String) ipc.getValue();if (new File(pathToWrite).exists()) {} else {try (PrintWriter writer = new PrintWriter(pathToWrite, ""UTF-8""); ) {for (InvocationParam subParam : ipc.getCollectionParameters()) {writer.println(subParam.getType().ordinal()+ "" ""+ subParam.getValue()+ "" ""+ subParam.getContentType());if (subParam.getType() == DataType.COLLECTION_T) {writeCollection((InvocationParamCollection<InvocationParam>) subParam);} else if (subParam.getType() == DataType.DICT_COLLECTION_T) {writeDictCollection((InvocationParamDictCollection<InvocationParam, InvocationParam>) subParam);}}} catch (Exception e) {e.printStackTrace();}}}}"	3
4663	"public class A {@Override@SuppressFBWarnings(value = ""OS_OPEN_STREAM"", justification = ""Testing only"")public void run() {BufferedReader input =new BufferedReader(new InputStreamReader(p1.getErrorStream(), StandardCharsets.UTF_8));String line;try {while ((line = input.readLine()) != null) {System.out.println(line);}} catch (IOException e) {}}}"	1
4664	public class A {private static Optional<LogLevelOverrideExtension> getLogLevelOverrideExtension(ApplicationContext context) {try {var extension = context.getBean(LogLevelOverrideExtension.class);return Optional.of(extension);} catch (NoSuchBeanDefinitionException e) {return Optional.empty();}}}	1
4665	public class A {@Overridepublic boolean interrupt() {if (savedSock != null && savedSock.isOpen()) {try {savedSock.close();} catch (IOException ex) {return false;}}return true;}}	1
4666	"public class A {@Overridepublic void setStat(Handle handle, Attributes attributes) throws IOException {if (!isOpen()) {throw new IOException(""setStat("" + handle + "")["" + attributes + ""] client is closed"");}if (log.isDebugEnabled()) {}byte[] id = Objects.requireNonNull(handle, ""No handle"").getIdentifier();Buffer buffer = new ByteArrayBuffer(id.length + (2 * Long.SIZE), false);buffer.putBytes(id);buffer = writeAttributes(SftpConstants.SSH_FXP_FSETSTAT, buffer, attributes);checkCommandStatus(SftpConstants.SSH_FXP_FSETSTAT, buffer);}}"	1
4667	public class A {@Overridepublic void commit() throws SailException {super.commit();resetDedupBuffer();}}	1
4668	public class A {public static com.liferay.journal.model.JournalArticleSoap[] getArticlesByLayoutUuid(long groupId, String layoutUuid, int start, int end) throws RemoteException {try {java.util.List<com.liferay.journal.model.JournalArticle> returnValue =JournalArticleServiceUtil.getArticlesByLayoutUuid(groupId, layoutUuid, start, end);return com.liferay.journal.model.JournalArticleSoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4669	public class A {private void appendToMailbox(Content message,Date datetime,Flags flagsToBeSet,ImapSession session,AppendRequest request,MessageManager mailbox,Responder responder,MailboxPath mailboxPath) {try {final MailboxSession mailboxSession = session.getMailboxSession();final SelectedMailbox selectedMailbox = session.getSelected();final boolean isSelectedMailbox =selectedMailbox != null && selectedMailbox.getMailboxId().equals(mailbox.getId());final ComposedMessageId messageId =mailbox.appendMessage(MessageManager.AppendCommand.builder().withInternalDate(datetime).withFlags(flagsToBeSet).isRecent(!isSelectedMailbox).build(message),mailboxSession).getId();if (isSelectedMailbox) {selectedMailbox.addRecent(messageId.getUid());}UidValidity uidValidity = mailbox.getMailboxEntity().getUidValidity();unsolicitedResponses(session, responder, false);okComplete(request,ResponseCode.appendUid(uidValidity, new UidRange[] {new UidRange(messageId.getUid())}),responder);} catch (MailboxNotFoundException e) {tryCreate(request, responder, e);} catch (MailboxException e) {no(request, responder, HumanReadableText.SAVE_FAILED);}}}	1
4670	"public class A {@Override@edu.umd.cs.findbugs.annotations.SuppressWarnings(value = ""DB_DUPLICATE_BRANCHES"")public Page<T> success(HttpResponse hr) throws Exception {parser.parseResult(hr.getContent());List<T> rows = parser.getRows();int rowsSize = rows.size();if (pageRequest.isBack()) {Collections.reverse(rows);}int offset = pageRequest.isBack() ? 1 : 1;String nextId = parser.getLastId();JsonNode nextKey = parser.getLastKey();PageRequest.Builder b = pageRequest.nextRequest(nextKey, nextId);int currentPage = b.getPageNo();PageRequest nextRequest = b.page(currentPage + 1).build();PageRequest previousRequest =currentPage == 1? PageRequest.firstPage(pageRequest.getPageSize()): b.back(true).page(currentPage - 1).build();boolean hasMore = rowsSize == pageRequest.getPageSize() + offset;if (hasMore) {rows.remove(rows.size() - 1);} else if (!pageRequest.isBack()) {nextRequest = null;}if (currentPage == 0) {previousRequest = null;}return new Page<T>(rows, parser.getTotalRows(), pageRequest.getPageSize(), previousRequest, nextRequest);}}"	1
4671	public class A {@Overridepublic void delete(String key) {File file = new File(getMapStorePath() + key + PERSISTED_FILE_SUFFIX);if (file.exists()) {if (!file.delete()) {}}}}	1
4672	"public class A {private Integer internalGetPropertyMaxLength(final String entityName, final String propertyName) {Integer length = columnLengthMap.get(getKey(entityName, propertyName));if (length != null) {return length;}if (columnLengthFailedSet.contains(getKey(entityName, propertyName))) {return null;}EntityMetadata persistentClass =PfEmgrFactory.get().getMetadataRepository().findEntityMetadata(entityName);if (persistentClass == null) {final String msg =""Could not find persistent class for entityName '""+ entityName+ ""' (OK for non hibernate objects)."";if (entityName.endsWith(""DO"")) {} else {}putFailedEntry(entityName, propertyName);return null;}ColumnMetadata colinfo = persistentClass.getColumns().get(propertyName);if (colinfo == null) {return null;}length = colinfo.getMaxLength();columnLengthMap.put(entityName + ""#"" + propertyName, length);return length;}}"	3
4673	"public class A {@Then(""^the \""([^\""]*)\"" meter reads gas result should be returned$"")public void theMeterReadsGasResultShouldBeReturned(final String periodType, final Map<String, String> settings) throws Throwable {final PeriodicMeterReadsGasAsyncRequest asyncRequest =PeriodicMeterReadsGasRequestFactory.fromScenarioContext();final PeriodicMeterReadsGasResponse response = this.responseClient.getResponse(asyncRequest);assertThat(response).as(""PeriodicMeterReadsGasResponse should not be null"").isNotNull();assertThat(response.getPeriodType()).as(""PeriodType should match"").isEqualTo(PeriodType.fromValue(periodType));assertThat(response.getPeriodicMeterReadsGas()).as(""Expected periodic meter reads gas"").isNotNull();}}"	1
4674	"public class A {public void setSubscriptionEndStatus(String instanceId, SubscriptionEndStatus status)throws Exception {String query =""UPDATE instanceparameter SET parametervalue = ? WHERE parameterkey = '""+ VMPropertyHandler.SUBSCRIPTION_END_STATUS+ ""' AND serviceinstance_tkey = (SELECT tkey from serviceinstance WHERE instanceid =""+ "" ?)"";try (Connection con = getDatasource().getConnection();PreparedStatement stmt = con.prepareStatement(query); ) {stmt.setString(1, status.name());stmt.setString(2, instanceId);stmt.executeUpdate();} catch (SQLException e) {throw e;}}}"	2
4675	"public class A {private static void loadTpchTopic(EmbeddedKafka embeddedKafka, TestingPrestoClient prestoClient, TpchTable<?> table) {long start = System.nanoTime();TestUtils.loadTpchTopic(embeddedKafka,prestoClient,kafkaTopicName(table),new QualifiedObjectName(""tpch"", TINY_SCHEMA_NAME, table.getTableName().toLowerCase(ENGLISH)));}}"	2
4676	public class A {@Overridepublic void warn(Marker marker, String message) {}}	1
4677	public class A {@Overridepublic void addQueryToCache(String statement, Query query) {if (approximateSize.getAndIncrement() >= upperBound) {synchronized (clearLock) {if (approximateSize.get() >= upperBound) {if (warnWhenFull) {}clear();approximateSize.set(1);}}}_map.putIfAbsent(statement, new SoftReference<>(query));}}	1
4678	public class A {@CacheEntriesEvictedpublic void dataEvicted(CacheEntriesEvictedEvent event) {if (log.isTraceEnabled()) {if (event.isPre()) {} else {}}}}	2
4679	"public class A {public static com.liferay.message.boards.model.MBMessage addMessage(HttpPrincipal httpPrincipal,long categoryId,String subject,String body,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(MBMessageServiceUtil.class, ""addMessage"", _addMessageParameterTypes3);MethodHandler methodHandler =new MethodHandler(methodKey, categoryId, subject, body, serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.message.boards.model.MBMessage) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4680	"public class A {@Overrideprotected void createClient() {boolean browseOnly = false;try {if (!session.queueQuery(queueName).isExists() && autoCreateQueue) {session.createAddress(queueName, RoutingType.MULTICAST, true);session.createQueue(new QueueConfiguration(queueName));}consumer = session.createConsumer(queueName, browseOnly);} catch (ActiveMQException amqEx) {throw new ActiveMQClientResourceException(String.format(""Error creating consumer for queueName %s"", queueName.toString()), amqEx);}}}"	1
4681	"public class A {protected boolean addOrderRecord(Text file, TableId tableId, Status stat, Value value) {try {if (!stat.hasCreatedTime()) {try {long createdTime = setAndGetCreatedTime(new Path(file.toString()), tableId.toString());stat = Status.newBuilder(stat).setCreatedTime(createdTime).build();value = ProtobufUtil.toValue(stat);} catch (IOException e) {return false;} catch (MutationsRejectedException e) {return false;}}Mutation m = OrderSection.createMutation(file.toString(), stat.getCreatedTime());OrderSection.add(m, tableId, value);try {replicationWriter.addMutation(m);} catch (MutationsRejectedException e) {log.warn(""Failed to write order mutation for replication, will retry"", e);return false;}} finally {try {replicationWriter.flush();} catch (MutationsRejectedException e) {return false;}}return true;}}"	5
4682	"public class A {public void runStep(ChoreographerStep step, long sessionId) throws InterruptedException {ChoreographerRunningStep runningStep = insertInitiatedRunningStep(step.getId(), sessionId);ServiceQueryFormDTO serviceQuery = new ServiceQueryFormDTO();serviceQuery.setServiceDefinitionRequirement(step.getServiceName().toLowerCase());if (sslEnabled) {final PublicKey publicKey =(PublicKey) arrowheadContext.get(CommonConstants.SERVER_PUBLIC_KEY);requesterSystem.setAuthenticationInfo(Base64.getEncoder().encodeToString(publicKey.getEncoded()));}final OrchestrationFormRequestDTO orchestrationForm =new OrchestrationFormRequestDTO.Builder(requesterSystem).requestedService(serviceQuery).flag(OrchestrationFlags.Flag.MATCHMAKING, true).flag(OrchestrationFlags.Flag.OVERRIDE_STORE, true).flag(OrchestrationFlags.Flag.TRIGGER_INTER_CLOUD, false).build();final OrchestrationResponseDTO orchestrationResponse = queryOrchestrator(orchestrationForm);List<OrchestrationResultDTO> orchestrationResultList = orchestrationResponse.getResponse();ChoreographerSessionRunningStepDataDTO runningStepDataDTO =new ChoreographerSessionRunningStepDataDTO(sessionId, runningStep.getId());if (!orchestrationResultList.isEmpty()) {OrchestrationResultDTO orchestrationResult = orchestrationResultList.get(0);UriComponents uri =Utilities.createURI(orchestrationResult.getProvider().getAuthenticationInfo(),orchestrationResult.getProvider().getAddress(),orchestrationResult.getProvider().getPort(),orchestrationResult.getServiceUri());httpService.sendRequest(uri, HttpMethod.POST, Void.class, runningStepDataDTO);} else {choreographerDBService.setRunningStepStatus(runningStep.getId(),ChoreographerStatusType.ABORTED,""Step aborted because the Orchestrator couldn't find any suitable providers. Rerun the""+ "" plan when there are suitable providers for all steps!"");choreographerDBService.setSessionStatus(sessionId, ChoreographerStatusType.ABORTED);}}}"	2
4683	"public class A {private void pollController() {ScheduledFuture<?> localFuture = pollFuture;try {Home home = client.getHome(serialNumber, sessionId);if (""Error"".equals(home.getResponse())) {updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.COMMUNICATION_ERROR,""Service reports controller status as: "" + home.getStatus());return;}Map<String, String> map = home.getSerializedMap();if (map != null) {temperatureUnit = ""F"".equalsIgnoreCase(map.get(""temp_scale"")) ? FAHRENHEIT : CELSIUS;map.forEach((k, v) -> {updatedState(k, v);if (k.endsWith(""_heater"")) {HeaterState hs = HeaterState.fromValue(v);updatedState(k + ""_status"", hs == null ? null : hs.getLabel());}});}OneTouch[] oneTouches = client.getOneTouch(serialNumber, sessionId);Auxiliary[] auxes = client.getAux(serialNumber, sessionId);if (firstRun) {firstRun = false;updateChannels(auxes, oneTouches);}for (OneTouch ot : oneTouches) {updatedState(ot.getName(), ot.getState());}for (Auxiliary aux : auxes) {switch (aux.getType()) {case ""1"":updatedState(aux.getName(), aux.getSubtype());break;case ""2"":updatedState(aux.getName(), ""0"".equals(aux.getState()) ? ""off"" : ""on"");break;default:updatedState(aux.getName(), aux.getState());}}if (getThing().getStatus() != ThingStatus.ONLINE) {updateStatus(ThingStatus.ONLINE);}} catch (IOException e) {if (isFutureValid(localFuture)) {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());}} catch (NotAuthorizedException e) {clearPolling();configure();}}}"	2
4684	public class A {private void onTouchEnd(NativeEvent event) {if (!moved) {activeScrollDelegate = null;handlerRegistration.removeHandler();handlerRegistration = null;return;}int currentY = origScrollTop + deltaScrollPos;int maxFinalY = getMaxFinalY();int pixelsToMove;int finalY;int duration = -1;if (currentY > maxFinalY) {pixelsToMove = maxFinalY - currentY;finalY = maxFinalY;} else if (currentY < 0) {pixelsToMove = -currentY;finalY = 0;} else {double pixelsPerMs = calculateSpeed();pixelsToMove = (int) (0.5 * pixelsPerMs * pixelsPerMs / FRICTION);if (pixelsPerMs < 0) {pixelsToMove = -pixelsToMove;}finalY = currentY + pixelsToMove;if (finalY > maxFinalY + getMaxOverScroll()) {finalY = getMaxFinalY() + getMaxOverScroll();int fixedPixelsToMove = finalY - currentY;pixelsToMove = fixedPixelsToMove;} else if (finalY < 0 - getMaxOverScroll()) {finalY = -getMaxOverScroll();int fixedPixelsToMove = finalY - currentY;pixelsToMove = fixedPixelsToMove;} else {duration = (int) (Math.abs(pixelsPerMs / DECELERATION));}}if (duration == -1) {duration = getAnimationTimeForDistance(pixelsToMove);}if (duration > MAX_DURATION) {duration = MAX_DURATION;}finalScrollTop = finalY;if (Math.abs(pixelsToMove) < 3 || duration < 20) {getLogger()moveTransformationToScrolloffset();return;}int translateTo = -finalY + origScrollTop;int fromY = -currentY + origScrollTop;if (ANDROID_WITH_BROKEN_SCROLL_TOP) {fromY -= origScrollTop;translateTo -= origScrollTop;}translateTo(duration, fromY, translateTo);}}	3
4685	"public class A {@SuppressWarnings(""StatementWithEmptyBody"")public void validate() {if (poolName == null) {poolName = generatePoolName();} else if (isRegisterMbeans && poolName.contains("":"")) {throw new IllegalArgumentException(""poolName cannot contain ':' when used with JMX"");}catalog = getNullIfEmpty(catalog);connectionInitSql = getNullIfEmpty(connectionInitSql);connectionTestQuery = getNullIfEmpty(connectionTestQuery);transactionIsolationName = getNullIfEmpty(transactionIsolationName);dataSourceClassName = getNullIfEmpty(dataSourceClassName);dataSourceJndiName = getNullIfEmpty(dataSourceJndiName);driverClassName = getNullIfEmpty(driverClassName);jdbcUrl = getNullIfEmpty(jdbcUrl);if (dataSource != null) {if (dataSourceClassName != null) {}} else if (dataSourceClassName != null) {if (driverClassName != null) {throw new IllegalStateException(""cannot use driverClassName and dataSourceClassName together."");} else if (jdbcUrl != null) {}} else if (jdbcUrl != null || dataSourceJndiName != null) {} else if (driverClassName != null) {throw new IllegalArgumentException(""jdbcUrl is required with driverClassName."");} else {throw new IllegalArgumentException(""dataSource or dataSourceClassName or jdbcUrl is required."");}validateNumerics();if (LOGGER.isDebugEnabled() || unitTest) {logConfiguration();}}}"	5
4686	"public class A {private HttpURLConnection connect(URL url) throws IOException {final URLConnectionFactory factory = new URLConnectionFactory(settings);final HttpURLConnection conn = factory.createHttpURLConnection(url, useProxy);conn.setDoOutput(true);conn.addRequestProperty(""X-Result-Detail"", ""info"");final String username = settings.getString(Settings.KEYS.ANALYZER_ARTIFACTORY_API_USERNAME);final String apiToken = settings.getString(Settings.KEYS.ANALYZER_ARTIFACTORY_API_TOKEN);if (username != null && apiToken != null) {final String userpassword = username + "":"" + apiToken;final String encodedAuthorization =Base64.getEncoder().encodeToString(userpassword.getBytes(StandardCharsets.UTF_8));conn.addRequestProperty(""Authorization"", ""Basic "" + encodedAuthorization);} else {final String bearerToken =settings.getString(Settings.KEYS.ANALYZER_ARTIFACTORY_BEARER_TOKEN);if (bearerToken != null) {conn.addRequestProperty(""Authorization"", ""Bearer "" + bearerToken);}}conn.connect();return conn;}}"	1
4687	public class A {@Overridepublic void jvmRouteSwitchover(String fromJvmRoute, String toJvmRoute) {try {Node oldNode = getBalancerContext().jvmRouteToSipNode.get(fromJvmRoute);Node newNode = getBalancerContext().jvmRouteToSipNode.get(toJvmRoute);if (oldNode != null && newNode != null) {int updatedRoutes = 0;for (String key : userToMap.keySet()) {Node n = userToMap.get(key);if (n.equals(oldNode)) {userToMap.replace(key, newNode);updatedRoutes++;}}if (logger.isInfoEnabled()) {}} else {if (logger.isInfoEnabled()) {}}} catch (Throwable t) {if (logger.isInfoEnabled()) {}}}}	4
4688	public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;updateUserProfile_result result = new updateUserProfile_result();if (einstanceoforg.apache.airavata.service.profile.user.cpi.exception.UserProfileServiceException) {result.upe =(org.apache.airavata.service.profile.user.cpi.exception.UserProfileServiceException) e;result.setUpeIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AuthorizationException) {result.ae = (org.apache.airavata.model.error.AuthorizationException) e;result.setAeIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}}	4
4689	"public class A {static List<Protocol> parseProtocols(String protocols) {if (StringUtils.isEmpty(protocols)) {return null;}List<Protocol> protocolList = new ArrayList<>();try {List<String> protocolStrings =objectMapper.readValue(protocols, new TypeReference<List<String>>() {});for (String protocol : protocolStrings) {protocolList.add(Protocol.valueOf(CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, protocol)));}return protocolList;} catch (Exception e) {throw new IllegalStateException(""INVALID configured test protocols "" + protocols);}}}"	1
4690	public class A {private void authenticateHost(final HttpMethod method) throws AuthenticationException {if (!cleanAuthHeaders(method, WWW_AUTH_RESP)) {return;}AuthState authstate = method.getHostAuthState();AuthScheme authscheme = authstate.getAuthScheme();if (authscheme == null) {return;}if (authstate.isAuthRequested() || !authscheme.isConnectionBased()) {String host = method.getParams().getVirtualHost();if (host == null) {host = conn.getHost();}int port = conn.getPort();AuthScope authscope =new AuthScope(host, port, authscheme.getRealm(), authscheme.getSchemeName());if (LOG.isDebugEnabled()) {}Credentials credentials = this.state.getCredentials(authscope);if (credentials != null) {String authstring = authscheme.authenticate(credentials, method);if (authstring != null) {method.addRequestHeader(new Header(WWW_AUTH_RESP, authstring, true));}} else {if (LOG.isWarnEnabled()) {if (method.getHostAuthState().isPreemptive()) {}}}}}}	3
4691	public class A {public boolean cleanupNode(final RegionAndId regionAndId) {String instanceId = regionAndId.id();InstanceStatus instanceStatus =Iterables.tryFind(api.instanceApi().listInstanceStatus(regionAndId.regionId()).concat(),new InstanceStatusPredicate(instanceId)).orNull();if (instanceStatus == null) return true;if (InstanceStatus.Status.STOPPED != instanceStatus.status()) {api.instanceApi().powerOff(instanceId);instanceSuspendedPredicate.apply(RegionAndId.slashEncodeRegionAndId(regionAndId));}api.instanceApi().delete(instanceId);return instanceTerminatedPredicate.apply(RegionAndId.slashEncodeRegionAndId(regionAndId));}}	2
4692	public class A {@Overridepublic void process(@Nullable AudioStream audioStream)throws UnsupportedAudioFormatException, UnsupportedAudioStreamException {Coordinator localCoordinator = coordinator;if (localCoordinator != null) {localCoordinator.audioSink.process(audioStream);} else {}}}	1
4693	public class A {public void onFailure(Throwable failure) {submitDialog.hide();failure.printStackTrace(System.err);}}	1
4694	public class A {public String compressStringifiedRules() {final String stringified = stringifyRules();final ByteArrayOutputStream out = new ByteArrayOutputStream();String encodedResult = null;try {final DeflaterOutputStream dzip = new DeflaterOutputStream(out);dzip.write(stringified.getBytes());dzip.close();encodedResult = Base64.encodeBase64String(out.toByteArray());} catch (final IOException e) {}return encodedResult;}}	1
4695	"public class A {public List<GenPolynomial<C>> GB(int modv, List<GenPolynomial<C>> F) {List<GenPolynomial<C>> G = normalizeZerosOnes(F);G = PolyUtil.<C>monic(G);if (G.size() <= 1) {return G;}GenPolynomialRing<C> ring = G.get(0).ring;if (!ring.coFac.isField()) {throw new IllegalArgumentException(""coefficients not from a field"");}PairList<C> pairlist = strategy.create(modv, ring);pairlist.put(G);Terminator fin = new Terminator(threads);for (int i = 0; i < threads; i++) {Reducer<C> R = new Reducer<C>(fin, G, pairlist);pool.execute(R);}fin.waitDone();if (Thread.currentThread().isInterrupted()) {throw new RuntimeException(""interrupt before minimalGB"");}G = minimalGB(G);return G;}}"	3
4696	"public class A {@Testpublic void testLoginButton() {tester.startPage(GeoServerHomePage.class);String html = tester.getLastResponseAsString();assertTrue(html.contains(""<form style=\""display: inline-block;\"" method=\""post\""""+ "" action=\""../web/j_spring_oauth2_geonode_login\"">""));assertTrue(html.contains(""<img src=\""./wicket/resource/org.geoserver.web.security.oauth2.GeoNodeOAuth2AuthProviderPanel/geonode""));}}"	1
4697	public class A {@Overridepublic Set<Edge> getEdgesByElementType(CnATreeElement source, String elementTypeId) {if (log.isDebugEnabled()) {}Set<Edge> allEdgeSet = directedGraph.outgoingEdgesOf(source);Set<Edge> edgeSet = new HashSet<>();for (Edge edge : allEdgeSet) {if (elementTypeId == null || elementTypeId.equals(edge.getTarget().getTypeId())) {edgeSet.add(edge);if (log.isDebugEnabled()) {}}}return edgeSet;}}	2
4698	"public class A {@SuppressWarnings(""squid:S3776"")public static void recoverUpgrade() {if (FSFactoryProducer.getFSFactory().getFile(UpgradeLog.getUpgradeLogPath()).exists()) {try (BufferedReader upgradeLogReader =new BufferedReader(new FileReader(FSFactoryProducer.getFSFactory().getFile(UpgradeLog.getUpgradeLogPath())))) {String line = null;while ((line = upgradeLogReader.readLine()) != null) {String oldFilePath = line.split(COMMA_SEPERATOR)[0];String oldFileName = new File(oldFilePath).getName();if (upgradeRecoverMap.containsKey(oldFileName)) {upgradeRecoverMap.put(oldFileName, upgradeRecoverMap.get(oldFileName) + 1);} else {upgradeRecoverMap.put(oldFileName, 1);}}} catch (IOException e) {} finally {FSFactoryProducer.getFSFactory().getFile(UpgradeLog.getUpgradeLogPath()).delete();}}}}"	1
4699	public class A {public String getClientID() {return this.clientID;}}	1
4700	"public class A {@Overridepublic RequestCtx handleRequest(HttpServletRequest request, HttpServletResponse response)throws IOException, ServletException {if (logger.isDebugEnabled()) {}String format = request.getParameter(""format"");String eContext = request.getParameter(""context"");RequestCtx req = null;Map<URI, AttributeValue> actions = new HashMap<URI, AttributeValue>();Map<URI, AttributeValue> resAttr;try {String[] parts = getPathParts(request);String pid = parts[1];resAttr = ResourceAttributes.getResources(parts);if (format != null && !format.isEmpty()) {resAttr.put(Constants.OBJECT.ENCODING.getURI(), new StringAttribute(format));}if (eContext != null && !eContext.isEmpty()) {resAttr.put(Constants.OBJECT.CONTEXT.getURI(), new StringAttribute(eContext));}actions.put(Constants.ACTION.ID.getURI(), Constants.ACTION.EXPORT.getStringAttribute());actions.put(Constants.ACTION.API.getURI(), Constants.ACTION.APIM.getStringAttribute());req =getContextHandler().buildRequest(getSubjects(request), actions, resAttr, getEnvironment(request));LogUtil.statLog(request.getRemoteUser(), Constants.ACTION.EXPORT.uri, pid, null);} catch (Exception e) {throw new ServletException(e.getMessage(), e);}return req;}}"	2
4701	public class A {protected List<String> createEntity(ArrayNode entities) throws AtlasServiceException {ObjectNode response = callAPIWithBody(API_V1.CREATE_ENTITY, entities.toString());List<String> results = extractEntityResult(response).getCreatedEntities();return results;}}	2
4702	"public class A {private static void parseActions(DaybreakBill daybreakBill, String[] actionLines) {List<BillAction> billActions = new ArrayList<>();int sequenceNo = 0;for (int i = 0; i < actionLines.length; i++) {Matcher billActionMatcher = billActionPattern.matcher(actionLines[i]);if (billActionMatcher.matches()) {try {LocalDate actionDate =LocalDate.from(DateUtils.LRS_ACTIONS_DATE.parse(billActionMatcher.group(1)));String actionText = billActionMatcher.group(2);Chamber actionChamber =StringUtils.isAllUpperCase(actionText.replaceAll(""[^a-zA-Z]+"", """"))? Chamber.SENATE: Chamber.ASSEMBLY;billActions.add(new BillAction(actionDate,actionText,actionChamber,++sequenceNo,daybreakBill.getBaseBillId()));} catch (DateTimeParseException ex) {}} else if (billActions.size() > 0) {break;}}daybreakBill.setActions(billActions);}}"	2
4703	public class A {private void runFlow(AbstractHostAllocatorFlow flow) {try {lastFlow = flow;flow.setCandidates(result);flow.setSpec(allocationSpec);flow.setTrigger(this);flow.setPaginationInfo(paginationInfo);flow.allocate();} catch (OperationFailureException ofe) {if (ofe.getErrorCode().getCode().equals(HostAllocatorConstant.PAGINATION_INTERMEDIATE_ERROR.getCode())) {seriesErrorWhenPagination.add(ofe.getErrorCode());startOver();} else {fail(ofe.getErrorCode());}} catch (Throwable t) {completion.fail(inerr(t.getMessage()));}}}	2
4704	public class A {private static InetAddress getLocalAddress() {Enumeration<NetworkInterface> ifaces = null;try {ifaces = NetworkInterface.getNetworkInterfaces();} catch (SocketException e) {}if (ifaces != null) {while (ifaces.hasMoreElements()) {NetworkInterface iface = ifaces.nextElement();Enumeration<InetAddress> addresses = iface.getInetAddresses();while (addresses.hasMoreElements()) {InetAddress addr = addresses.nextElement();if (addr instanceof Inet4Address && !addr.isLoopbackAddress()) {return addr;}}}}return null;}}	1
4705	public class A {public boolean accept(String[] query) {if (solrQuery == null) {return false;}return super.accept(query);}}	1
4706	public class A {@Overridepublic void onBeforeRemove(Group group) throws ModelListenerException {ChangesetCollection changesetCollection =_changesetCollectionLocalService.fetchChangesetCollection(group.getGroupId(), StagingConstants.RANGE_FROM_LAST_PUBLISH_DATE_CHANGESET_NAME);if (changesetCollection == null) {return;}try {_changesetCollectionLocalService.deleteChangesetCollection(changesetCollection.getChangesetCollectionId());} catch (PortalException portalException) {}}}	1
4707	public class A {private void initiatingAuthentication(HttpServletRequest request,HttpServletResponse response,HttpSession session,OAuthService service)throws IOException {session.setAttribute(ENTRY_URL, request.getRequestURL());String authUrl = service.getAuthorizationUrl(null);response.sendRedirect(authUrl);}}	1
4708	"public class A {private String createValue() {if (_value.length() == 0) {return null;}switch (_dataType) {case BOOL:final char first = _value.charAt(0);return first == '0' ? ""false"" : ""true"";case ERROR:return _value.toString();case FORMULA:return _value.toString();case INLINESTR:final XSSFRichTextString rtsi = new XSSFRichTextString(_value.toString());return rtsi.toString();case SSTINDEX:final String sstIndex = _value.toString();final int idx = Integer.parseInt(sstIndex);final RichTextString item = _sharedStringTable.getItemAt(idx);return item.getString();case NUMBER:final String numberString = _value.toString();if (_formatString != null) {final DataFormatter formatter = getDataFormatter();if (HSSFDateUtil.isADateFormat(_formatIndex, _formatString)) {final Date date = DateUtil.getJavaDate(Double.parseDouble(numberString));return DateUtils.createDateFormat().format(date);}return formatter.formatRawCellContents(Double.parseDouble(numberString), _formatIndex, _formatString);} else {if (numberString.endsWith("".0"")) {return numberString.substring(0, numberString.length() - 2);}return numberString;}default:return """";}}}"	2
4709	public class A {@Overridepublic void onSuccess(@Nullable final Collection<SgtInfo> result) {final Integer counter = Optional.ofNullable(result).map(Collection::size).orElse(0);storeOutcome(true, counter, null);}}	1
4710	"public class A {private String formatDateTime(String value, String dpt) {Date date = null;try {if (DPTXlatorDate.DPT_DATE.getID().equals(dpt)) {date = new SimpleDateFormat(DATE_FORMAT).parse(value);} else if (DPTXlatorTime.DPT_TIMEOFDAY.getID().equals(dpt)) {if (value.contains(""no-day"")) {StringBuffer stb = new StringBuffer(value);int start = stb.indexOf(""no-day"");int end = start + ""no-day"".length();stb.replace(start, end, String.format(Locale.US, ""%1$ta"", Calendar.getInstance()));value = stb.toString();}date = new SimpleDateFormat(TIME_DAY_FORMAT, Locale.US).parse(value);}} catch (ParseException pe) {}return date != null ? new SimpleDateFormat(DateTimeType.DATE_PATTERN).format(date) : """";}}"	1
4711	public class A {@Testpublic void testSlowAppendWithoutTimeout()throws InterruptedException, LifecycleException, EventDeliveryException, IOException {slowAppendTestHelper(0);}}	1
4712	public class A {public BufferedWriter getBufferedWriter(String filePath, boolean append) {try {return new BufferedWriter(new OutputStreamWriter(fs.create(new Path(filePath))));} catch (IOException e) {return null;}}}	1
4713	"public class A {public void processException(Throwable t, ExceptionHolder exceptionHolder) {if (t instanceof RuntimeException) {exceptionHolder.setExpected(false);exceptionHolder.setException((Exception) t);} else if (t instanceof Exception) {exceptionHolder.setExpected(true);exceptionHolder.setException((Exception) t);} else {String msg =""A throwable was thrown while executing the task, this is most likely a severe issue."";exceptionHolder.setExpected(false);exceptionHolder.setException(new Exception(msg, t));}}}"	3
4714	"public class A {private void waitUntilServiceIsReady() throws Exception {getProvisionedServiceItem().expandServiceItem();selenium.takeScreenShot();selenium.getDriverWait().withTimeout(Duration.ofMinutes(5)).until(ExpectedConditions.numberOfElementsToBe(By.className(""alert-info""), 0));selenium.takeScreenShot();}}"	1
4715	public class A {@Overridepublic void debug(String message, Throwable e) {if (isEnabled(LogLevel.DEBUG)) {}}}	1
4716	public class A {public void run() {try {while (!shutdown) {env.sendEventBean(new SupportBean_S0(0));listenerZero.reset();listenerOne.reset();numQueries++;}} catch (RuntimeException ex) {exception = ex;}}}	3
4717	public class A {@Overrideprotected Map<Path, Distribution> operate(final PasswordCallback callback, final Path file)throws BackgroundException {final DistributionConfiguration feature = session.getFeature(DistributionConfiguration.class);if (null == feature) {return Collections.emptyMap();}final AttributedList<Path> containers =new SwiftContainerListService(session, new SwiftLocationFeature.SwiftRegion(session.getHost().getRegion())).list(file, new DisabledListProgressListener());final Map<Path, Distribution> distributions = new ConcurrentHashMap<>();for (Path container : containers) {for (Distribution.Method method : feature.getMethods(container)) {final Distribution distribution =feature.read(container, method, new DisabledLoginCallback());if (log.isInfoEnabled()) {}distributions.put(container, distribution);}}return distributions;}}	1
4718	public class A {@Overridepublic boolean stopMonitor(HoldingType holdingType, long holdingId, String property, long accountId) {FundingMonitorInstance monitor = null;boolean wasStopped = false;synchronized (monitors) {Iterator<FundingMonitorInstance> monitorIt = monitors.iterator();while (monitorIt.hasNext()) {monitor = monitorIt.next();if (monitor.getHoldingType() == holdingType&& monitor.getProperty().equals(property)&& (holdingType == HoldingType.APL || monitor.getHoldingId() == holdingId)&& monitor.getAccountId() == accountId) {monitorIt.remove();wasStopped = true;break;}}if (wasStopped) {Iterator<List<MonitoredAccount>> accountListIt = accounts.values().iterator();while (accountListIt.hasNext()) {List<MonitoredAccount> accountList = accountListIt.next();Iterator<MonitoredAccount> accountIt = accountList.iterator();while (accountIt.hasNext()) {MonitoredAccount account = accountIt.next();if (account.getMonitor() == monitor) {accountIt.remove();if (accountList.isEmpty()) {accountListIt.remove();}break;}}}}}return wasStopped;}}	3
4719	"public class A {protected static HashSet<String> scanContentForHosts(CharSequence content) {HashSet<String> set = new HashSet<>();Matcher mat = uriPattern.matcher(content);while (mat.find()) {String found = mat.group();Matcher cleanMat = uriCleanup.matcher(found);if (cleanMat.find()) {found = cleanMat.group(1);}cleanMat = uriCleanup2.matcher(found);if (cleanMat.find()) {found = cleanMat.replaceAll("""");}cleanMat = uriCleanup3.matcher(found);if (cleanMat.find()) {found = ""mailto://"" + cleanMat.group(1) + cleanMat.group(2);}cleanMat = schemePattern.matcher(found);if (!cleanMat.find()) {if (found.matches(""^(?i)www\\d*\\..*"")) {found = ""http://"" + found;} else if (found.matches(""^(?i)ftp\\..*"")) {found = ""ftp://"" + found;}}String host = hostFromUriStr(found);if (null != host) {host = host.toLowerCase(Locale.US);set.add(host);}}mat = emailAddrPattern.matcher(content);while (mat.find()) {String found = mat.group();found = ""mailto://"" + found;String host = hostFromUriStr(found);if (null != host) {host = host.toLowerCase(Locale.US);set.add(host);}}return set;}}"	2
4720	"public class A {private Long toLong(final Object possibleLong) {if (possibleLong instanceof Date) {return ((Date) possibleLong).getTime();} else if (possibleLong instanceof Number) {return ((Number) possibleLong).longValue();} else {try {return (new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ssZ"").parse(possibleLong.toString())).getTime();} catch (ParseException ignore) {}}return null;}}"	1
4721	"public class A {@RequestMapping(value = Constants.UDR_GET_BY_AUTHOR_TITLE, method = RequestMethod.GET)public JsonServiceResponse getUDR(@PathVariable String authorId, @PathVariable String title) {UdrSpecification resp = udrService.fetchUdr(authorId, title);return new JsonServiceResponse(Status.SUCCESS, ""GET UDR was successful"", resp);}}"	1
4722	"public class A {@Test@Order(2)void testWhenCaptured() {assertEquals(""captured error"", logCapture.getMessage(3));}}"	1
4723	public class A {public void shutdown() {try {if (agent != null) {agent.die();agent.cleanup();}} catch (Throwable e) {}}}	1
4724	public class A {public static DataSources fromDataSourcesUrl(URL dataSourcesUrl) {DataSources dataSources = null;try {dataSources = OBJECT_MAPPER.readValue(dataSourcesUrl, DataSources.class);} catch (IOException e) {}return dataSources;}}	1
4725	"public class A {@Overridepublic void blockUntilReady() throws TimeoutException, InterruptedException {long startTime = System.currentTimeMillis();if (_config.blockUntilReady() <= 0) {throw new IllegalArgumentException(""setBlockUntilReadyTimeout must be positive but in config was: ""+ _config.blockUntilReady());}if (!_gates.isSDKReady(_config.blockUntilReady())) {throw new TimeoutException(""SDK was not ready in "" + _config.blockUntilReady() + "" milliseconds"");}}}"	1
4726	"public class A {@Overridepublic void startBundles(String symbolicName, String... additionalSymbolicNames) {Set<String> toStart = toSet(symbolicName, additionalSymbolicNames);String bundlesNames = String.join("", "", toStart);long startTime = System.currentTimeMillis();for (Bundle bundle : bundleContext.getBundles()) {if (toStart.contains(bundle.getSymbolicName())) {try {bundle.start();} catch (BundleException e) {throw new SynchronizedInstallerException(""Failed to start bundle ["" + bundle.getSymbolicName() + ""]"");}}}}}"	2
4727	"public class A {@GetMapping(""/list.json"")@AuthAction(AuthService.PrivilegeType.READ_RULE)public Result<List<ApiDefinitionEntity>> queryApis(String app, String ip, Integer port) {if (StringUtil.isEmpty(app)) {return Result.ofFail(-1, ""app can't be null or empty"");}if (StringUtil.isEmpty(ip)) {return Result.ofFail(-1, ""ip can't be null or empty"");}if (port == null) {return Result.ofFail(-1, ""port can't be null"");}try {List<ApiDefinitionEntity> apis = sentinelApiClient.fetchApis(app, ip, port).get();repository.saveAll(apis);return Result.ofSuccess(apis);} catch (Throwable throwable) {return Result.ofThrowable(-1, throwable);}}}"	1
4728	public class A {private void collectExtensions(Enumeration<URL> urls, Set<String> bucket) throws IOException {while (urls.hasMoreElements()) {URL url = urls.nextElement();collectExtensions(url.openStream(), bucket);}}}	1
4729	public class A {public static Integer getPrecisionValue(IdentifierNode fieldNameNode) {try {String fieldName = fieldNameNode.getIdentifier();String txtIndex = fieldName.substring(fieldName.indexOf('(') + 1, fieldName.indexOf(')'));return Integer.parseInt(txtIndex);} catch (Exception e) {return null;}}}	1
4730	public class A {public static void main(String[] args) {List<Path> paths = new ArrayList<>();for (String arg : args) {paths.add(new File(arg).toPath());}if (paths.isEmpty()) {System.exit(-1);}PathWatcherDemo demo = new PathWatcherDemo();try {demo.run(paths);} catch (Throwable t) {}}}	2
4731	"public class A {@Testpublic void testSendTextMessage() throws Exception {String expectedBody = ""Hello there!"";template.sendBodyAndHeader(startEndpointUri, expectedBody, ""cheese"", 123);listener.assertMessagesArrived(1, 5000);List<Message> list = listener.flushMessages();assertFalse(list.isEmpty(), ""Should have received some messages!"");Message message = list.get(0);TextMessage textMessage = assertIsInstanceOf(TextMessage.class, message);assertEquals(expectedBody, textMessage.getText(), ""Text message body: "" + textMessage);}}"	1
4732	public class A {private void ackOsInfo() {assert log != null;if (log.isInfoEnabled()) {}}}	2
4733	"public class A {@Testpublic void willWriteSrcDirIncludesExcludesToConfigFile() throws Exception {File configFile = new File(tempFolder.getRoot(), ""zanata.xml"");configFile.createNewFile();FileUtils.write(configFile, readFromClasspath(""serverresponse/projectConfig.xml""), Charsets.UTF_8);command.writeToConfig(new File(""pot""), null, """", new File(""po""), configFile);List<String> lines = FileUtils.readLines(configFile, Charsets.UTF_8);StringBuilder content = new StringBuilder();for (String line : lines) {content.append(line.trim());}assertThat(content.toString()).contains(""<src-dir>pot</src-dir><trans-dir>po</trans-dir>"");}}"	1
4734	public class A {public static void errorLogging(Logger logger, short responseCommand) {}}	2
4735	public class A {@Overrideprotected void handleStateChange(DiskState next, String pct, String critcalMessage) {Object[] args = new Object[] {dir.getAbsolutePath(), pct};switch (next) {case NORMAL:break;case WARN:case CRITICAL:break;}}}	2
4736	"public class A {public void endDispatch() {DispatchElement oldde = null;if (dispatches.size() > 0) {oldde = dispatches.remove(dispatches.size() - 1);}reqctx.endDispatch();if (dispatches.size() > 0) {DispatchElement de = dispatches.get(dispatches.size() - 1);if ((de.type == Type.INC) || (de.type == Type.FWD)) {reqctx.startDispatch(this, de.qparms, phase);}} else {isClosed = true;}if (isTrace) {StringBuilder txt = new StringBuilder();txt.append(""Ending dispatch."");txt.append("" dispatched type: "").append(oldde.type);txt.append("",  # remaining nesting levels: "").append(dispatches.size());if (!dispatches.isEmpty()) {txt.append("",  active dispatch type: "");txt.append(dispatches.get(dispatches.size() - 1).type);}}}}"	1
4737	public class A {public void init(ClassLoader classLoader) throws Exception {for (Map.Entry<String, String> entry : _threadLocalSources.entrySet()) {String className = entry.getKey();String fieldName = entry.getValue();Class<?> clazz = classLoader.loadClass(className);Field field = ReflectionUtil.getDeclaredField(clazz, fieldName);if (!ThreadLocal.class.isAssignableFrom(field.getType())) {if (_log.isWarnEnabled()) {}continue;}if (!Modifier.isStatic(field.getModifiers())) {if (_log.isWarnEnabled()) {}continue;}ThreadLocal<?> threadLocal = (ThreadLocal<?>) field.get(null);if (threadLocal == null) {if (_log.isWarnEnabled()) {}continue;}_threadLocals.add(threadLocal);}}}	3
4738	"public class A {public static void main(String[] args) {try {LoggingFactory.init(Level.INFO);Platform.setVirtual(false);String port = ""COM7"";int pin = 22;boolean useHobbyServo = true;SwingGui gui = (SwingGui) Runtime.start(""gui"", ""SwingGui"");Arduino mega = (Arduino) Runtime.start(""mega"", ""Arduino"");ServoControl servo = null;servo = (ServoControl) Runtime.start(""servo"", ""Servo"");Service.sleep(500);gui.setActiveTab(""servo"");if (mega.isVirtual()) {VirtualArduino vmega = mega.getVirtual();vmega.setBoardMega();}mega.connect(port);servo.setPin(pin);servo.attach(mega);servo.moveTo(10.3);servo.moveTo(110.3);servo.moveToBlocking(113.0);servo.setSpeed(2.0);servo.moveTo(140.0);TestCatcher catcher = (TestCatcher) Runtime.start(""catcher"", ""TestCatcher"");catcher.exportAll(""export.py"");} catch (Exception e) {}}}"	3
4739	public class A {public static Set<String> getHadoopClusterQueueNames(String rmBaseUrlStr) throws FalconException {String jsonResult = getHadoopClusterSchedulerInfo(rmBaseUrlStr);Set<String> qNames = new HashSet<>();try {return getHadoopClusterQueueNamesHelper(jsonResult, qNames);} catch (JSONException jex) {throw new FalconException(jex);}}}	1
4740	public class A {@Overridepublic SessionData load(String id) throws Exception {SessionData d = null;try {d = _cache.load(id);} catch (Exception e) {}if (d != null) return d;d = _store.load(id);return d;}}	1
4741	public class A {public void executeSplit(KeyExtent tablet, Runnable splitTask) {if (tablet.isMeta()) {if (tablet.isRootTablet()) {return;}defaultSplitThreadPool.execute(splitTask);} else {splitThreadPool.execute(splitTask);}}}	1
4742	public class A {public File getRollbackTarget(RollbackOptions opt) {String entryKey = opt.getKey();Match<File> m = findInstalledJar(entryKey);if (m != null) {return m.object;} else {return null;}}}	1
4743	"public class A {protected Exchange onCompletion(final String key,final Exchange original,final Exchange aggregated,boolean fromTimeout,boolean aggregateFailed) {if (original != null) {original.setProperty(ExchangePropertyKey.AGGREGATED_CORRELATION_KEY, key);}aggregated.setProperty(ExchangePropertyKey.AGGREGATED_CORRELATION_KEY, key);if (original != null) {aggregationRepository.remove(aggregated.getContext(), key, original);}if (!fromTimeout && timeoutMap != null) {timeoutMap.remove(key);}if (closedCorrelationKeys != null) {closedCorrelationKeys.put(key, key);}if (fromTimeout) {long timeout = getCompletionTimeout() > 0 ? getCompletionTimeout() : -1;aggregationStrategy.timeout(aggregated, -1, -1, timeout);}Exchange answer;if (fromTimeout && isDiscardOnCompletionTimeout()) {discarded.incrementAndGet();LOG.debug(""Aggregation for correlation key {} discarding aggregated exchange: {}"", key, aggregated);aggregationRepository.confirm(aggregated.getContext(), aggregated.getExchangeId());redeliveryState.remove(aggregated.getExchangeId());answer = null;} else if (aggregateFailed && isDiscardOnAggregationFailure()) {discarded.incrementAndGet();aggregationRepository.confirm(aggregated.getContext(), aggregated.getExchangeId());redeliveryState.remove(aggregated.getExchangeId());answer = null;} else {answer = aggregated;}return answer;}}"	2
4744	"public class A {@Testpublic void testGetResource() throws Exception {final String resourceJSON = resourceUploadInteral(resourceFile, expectedResource);final Resource resource = objectMapper.readValue(resourceJSON, Resource.class);Assert.assertNotNull(""resource shouldn't be null"", resource);Assert.assertNotNull(""resource id shouldn't be null"", resource.getUuid());final Response response =target(String.valueOf(resource.getUuid())).request().accept(MediaType.APPLICATION_JSON_TYPE).get(Response.class);final String responseResource = response.readEntity(String.class);Assert.assertEquals(""200 OK was expected"", 200, response.getStatus());Assert.assertEquals(""resource JSONs are not equal"", resourceJSON, responseResource);}}"	4
4745	"public class A {@Overridepublic PagedMetadata<WidgetDto> getWidgets(RestListRequest restListReq) {try {List<WidgetType> types = this.getWidgetManager().getWidgetTypes();List<WidgetDto> dtoList = dtoBuilder.convert(types);List<WidgetDto> resultList =new WidgetTypeListProcessor(restListReq, dtoList).filterAndSort().toList();List<WidgetDto> sublist = restListReq.getSublist(resultList);SearcherDaoPaginatedResult<WidgetDto> paginatedResult =new SearcherDaoPaginatedResult<>(resultList.size(), sublist);PagedMetadata<WidgetDto> pagedMetadata = new PagedMetadata<>(restListReq, paginatedResult);pagedMetadata.setBody(sublist);return pagedMetadata;} catch (Throwable t) {throw new RestServerError(""error in get widgets"", t);}}}"	1
4746	public class A {public static void updateComponentSecret(String subdomain, String secret)throws ModificationNotAllowedException {for (ExternalComponentManagerListener listener : listeners) {try {listener.componentSecretUpdated(subdomain, secret);} catch (Exception e) {}}ExternalComponentConfiguration configuration = getConfiguration(subdomain, false);if (configuration != null) {configuration.setPermission(Permission.allowed);configuration.setSecret(secret);deleteConfigurationFromDB(configuration);} else {configuration =new ExternalComponentConfiguration(subdomain, false, Permission.allowed, secret);}addConfiguration(configuration);}}	1
4747	public class A {public void onPageUnload() {if (StringUtils.isNotEmpty(requestId)) {Explanator.remove(requestId);ParameterRegistry.remove(requestId);TableBean.tryUnlock(requestId);}}}	1
4748	public class A {public void addItem(String serviceName, String checksum) {if (StringUtils.isEmpty(serviceName) || StringUtils.isEmpty(checksum)) {return;}serviceName2Checksum.put(serviceName, checksum);}}	1
4749	public class A {@Overridepublic void run() {while (running) {try {while (!outputQueue.isEmpty()) {final Envelope envelope = outputQueue.poll();if (envelope != null) {final AbstractMessage message = envelope.getMessage();final PeerInfo recipient = envelope.getPeer();message.setSenderTimestamp(System.currentTimeMillis() + timeOffset);message.onSend(Peer.this);serverSocket.send(AbstractMessage.forSending(Peer.this.getUuid(), recipient, message));sent++;}}Thread.sleep(10L);} catch (IOException ignore1) {} catch (InterruptedException ignore2) {} catch (Throwable t) {}}}}	1
4750	public class A {public static com.liferay.blogs.model.BlogsEntrySoap getEntry(long entryId)throws RemoteException {try {com.liferay.blogs.model.BlogsEntry returnValue = BlogsEntryServiceUtil.getEntry(entryId);return com.liferay.blogs.model.BlogsEntrySoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
4751	public class A {public static void reload() {for (ReconfigurableBean bean : reconfigurableBeans) {try {bean.reloadConfiguration();} catch (Exception e) {}}}}	1
4752	"public class A {private List<ScheduleEntry> getScheduleEntryListFromParameter(HttpServletRequest request, ApplicationContext appContext, String campaign, JSONArray json)throws JSONException {List<ScheduleEntry> scheList = new ArrayList<>();IScheduleEntryService scheService = appContext.getBean(IScheduleEntryService.class);IFactoryScheduleEntry scheFactory = appContext.getBean(IFactoryScheduleEntry.class);PolicyFactory policy = Sanitizers.FORMATTING.and(Sanitizers.LINKS);String charset =request.getCharacterEncoding() == null ? ""UTF-8"" : request.getCharacterEncoding();for (int i = 0; i < json.length(); i++) {JSONObject tcsaJson = json.getJSONObject(i);boolean delete = tcsaJson.getBoolean(""toDelete"");String cronExpression = policy.sanitize(tcsaJson.getString(""cronDefinition""));String active = policy.sanitize(tcsaJson.getString(""active""));String strId = tcsaJson.getString(""ID"");String desc = tcsaJson.getString(""description"");String type = ""CAMPAIGN"";String name = campaign;int id;if (strId.isEmpty()) {id = 0;} else {try {id = Integer.parseInt(strId);} catch (NumberFormatException e) {id = 0;}}Timestamp timestampfactice = new Timestamp(System.currentTimeMillis());if (!delete) {ScheduleEntry sch =scheFactory.create(id,type,name,cronExpression,timestampfactice,active,desc,request.getRemoteUser(),timestampfactice,request.getRemoteUser(),timestampfactice);scheList.add(sch);}}return scheList;}}"	1
4753	"public class A {public List<Long> doInHibernate(final Session session) throws HibernateException {StringBuilder sb = new StringBuilder();sb.append(""SELECT DISTINCT child.id AS child_id FROM quota AS father"");sb.append("" JOIN quota AS child"");sb.append("" ON child.domain_parent_id = father.domain_id"");sb.append("" AND child.quota_type = :domainType "");sb.append("" AND father.domain_parent_id = :domainId "");sb.append("" AND father.default_max_file_size_override = false"");sb.append("" WHERE father.quota_type = :domainType"");if (containerType != null) {sb.append("" AND child.container_type = :containerType"");}sb.append("" AND child.default_max_file_size_override = false"");sb.append("";"");@SuppressWarnings(""unchecked"")final NativeQuery<Long> query = session.createNativeQuery(sb.toString());query.setParameter(""domainId"", domain.getPersistenceId());query.addScalar(""child_id"", LongType.INSTANCE);query.setParameter(""domainType"", type.name());if (containerType != null) {query.setParameter(""containerType"", containerType.name());}List<Long> res = query.list();return res;}}"	1
4754	public class A {@Overridepublic void showUser(final String screenName) {getDispatcher().invokeLater(new AsyncTask(SHOW_USER, listeners) {@Overridepublic void invoke(List<TwitterListener> listeners) throws TwitterException {User user = twitter.showUser(screenName);for (TwitterListener listener : listeners) {try {listener.gotUserDetail(user);} catch (Exception e) {}}}});}}	1
4755	public class A {@Overridepublic void ping(TCredentials credentials) {}}	1
4756	public class A {@Overridepublic byte[] requestToBytes(RequestType request) {byte[] uncompressedBytes = _inner.requestToBytes(request);ByteArrayOutputStream baos = new ByteArrayOutputStream();try {SnappyOutputStream snappyOutputStream = new SnappyOutputStream(baos);snappyOutputStream.write(uncompressedBytes);snappyOutputStream.close();baos.close();} catch (IOException e) {}return baos.toByteArray();}}	1
4757	public class A {private AbstractAction createCheckoutActionForBranch(String branchName) {return new AbstractAction(branchName) {@Overridepublic void actionPerformed(ActionEvent e) {GitOperationScheduler.getInstance().schedule(() -> {try {GitAccess.getInstance().setBranch(branchName);} catch (CheckoutConflictException ex) {restoreCurrentBranchSelectionInMenu();BranchesUtil.showBranchSwitchErrorMessage();} catch (GitAPIException | JGitInternalException ex) {restoreCurrentBranchSelectionInMenu();PluginWorkspaceProvider.getPluginWorkspace().showErrorMessage(ex.getMessage(), ex);}});}private void restoreCurrentBranchSelectionInMenu() {String currentBranchName = GitAccess.getInstance().getBranchInfo().getBranchName();Component[] menuComponents = branchesSplitMenuButton.getMenuComponents();for (Component component : menuComponents) {JRadioButtonMenuItem menuItem = (JRadioButtonMenuItem) component;if (menuItem.getText().equals(currentBranchName)) {menuItem.setSelected(true);break;}}}};}}	1
4758	"public class A {public static org.docx4j.xmlPackage.Part createRawBinaryPart(Part part) throws Docx4JException {String resolvedPartUri = part.getPartName().getName();org.docx4j.xmlPackage.Part partResult = factory.createPart();partResult.setName(resolvedPartUri);partResult.setContentType(part.getContentType());try {partResult.setCompression(""store"");partResult.setBinaryData(((BinaryPart) part).getBytes());} catch (Exception e) {throw new Docx4JException(""Failed to put binary part"", e);}return partResult;}}"	1
4759	public class A {@Overridepublic void initializeSecurity(String principal, byte[] token) {try {ZooReaderWriter zoo = context.getZooReaderWriter();synchronized (zooCache) {zooCache.clear();if (zoo.exists(ZKUserPath)) {zoo.recursiveDelete(ZKUserPath, NodeMissingPolicy.SKIP);}zoo.putPersistentData(ZKUserPath, principal.getBytes(UTF_8), NodeExistsPolicy.FAIL);constructUser(principal, ZKSecurityTool.createPass(token));}} catch (KeeperException | AccumuloException | InterruptedException e) {throw new RuntimeException(e);}}}	2
4760	"public class A {private List<Advisory> analyzePackage(final File lockFile,final File packageFile,Dependency dependency,Map<String, String> dependencyMap)throws AnalysisException {try {final Boolean skipDevDependencies =getSettings().getBoolean(Settings.KEYS.ANALYZER_NODE_AUDIT_SKIPDEV, false);final JsonObject lockJson = fetchYarnAuditJson(dependency, skipDevDependencies);final JsonReader packageReader = Json.createReader(FileUtils.openInputStream(packageFile));final JsonObject packageJson = packageReader.readObject();final JsonObject payload =NpmPayloadBuilder.build(lockJson, packageJson, dependencyMap, skipDevDependencies);return getSearcher().submitPackage(payload);} catch (URLConnectionFailureException e) {this.setEnabled(false);throw new AnalysisException(""Failed to connect to the NPM Audit API (YarnAuditAnalyzer); the analyzer ""+ ""is being disabled and may result in false negatives."",e);} catch (IOException e) {this.setEnabled(false);throw new AnalysisException(""Failed to read results from the NPM Audit API (YarnAuditAnalyzer); ""+ ""the analyzer is being disabled and may result in false negatives."",e);} catch (JsonException e) {throw new AnalysisException(String.format(""Failed to parse %s file from the NPM Audit API "" + ""(YarnAuditAnalyzer)."",lockFile.getPath()),e);} catch (SearchException ex) {throw ex;}}}"	2
4761	public class A {private void executeStatement(String sql, Statement stmt) throws SQLException {stmt.execute(sql);}}	1
4762	public class A {@Overridepublic void onStatusChanged(final UaSubscription subscription, final StatusCode status) {}}	1
4763	"public class A {public void execute(FunctionContext<LuceneFunctionContext> context, boolean waitForRepository) {RegionFunctionContext ctx = (RegionFunctionContext) context;ResultSender<TopEntriesCollector> resultSender = ctx.getResultSender();Region region = ctx.getDataSet();LuceneFunctionContext<IndexResultCollector> searchContext =(LuceneFunctionContext) ctx.getArguments();if (searchContext == null) {throw new IllegalArgumentException(""Missing search context"");}LuceneQueryProvider queryProvider = searchContext.getQueryProvider();if (queryProvider == null) {throw new IllegalArgumentException(""Missing query provider"");}InternalLuceneIndex index = getLuceneIndex(context.getCache(), region, searchContext);if (index == null) {throw new LuceneIndexNotFoundException(searchContext.getIndexName(), region.getFullPath());}RepositoryManager repoManager = index.getRepositoryManager();LuceneIndexStats stats = index.getIndexStats();Query query = getQuery(queryProvider, index);if (logger.isDebugEnabled()) {}int resultLimit = searchContext.getLimit();CollectorManager manager = searchContext.getCollectorManager();if (manager == null) {manager = new TopEntriesCollectorManager(null, resultLimit);}Collection<IndexResultCollector> results = new ArrayList<>();TopEntriesCollector mergedResult = null;try {long start = stats.startQuery();Collection<IndexRepository> repositories = null;try {repositories = repoManager.getRepositories(ctx, waitForRepository);for (IndexRepository repo : repositories) {IndexResultCollector collector = manager.newCollector(repo.toString());if (logger.isDebugEnabled()) {}repo.query(query, resultLimit, collector);results.add(collector);}mergedResult = (TopEntriesCollector) manager.reduce(results);} finally {stats.endQuery(start, mergedResult == null ? 0 : mergedResult.size());}stats.incNumberOfQueryExecuted();resultSender.lastResult(mergedResult);} catch (IOException| BucketNotFoundException| CacheClosedException| PrimaryBucketException e) {throw new InternalFunctionInvocationTargetException(e);} catch (LuceneIndexCreationInProgressException ex) {if (!waitForRepository) {handleIfRetryNeededOnException(ex, ctx);} else {throw new FunctionException(new LuceneQueryException(""Lucene Index is not available, currently indexing""));}}}}"	4
4764	"public class A {private void parseProcessOutput(Process process) {String threadLoggerInfoName =String.format(LoggerUtils.TASK_LOGGER_THREAD_NAME + ""-%s"", taskExecutionContext.getTaskAppId());ExecutorService getOutputLogService =ThreadUtils.newDaemonSingleThreadExecutor(threadLoggerInfoName + ""-"" + ""getOutputLogService"");getOutputLogService.submit(() -> {BufferedReader inReader = null;try {inReader = new BufferedReader(new InputStreamReader(process.getInputStream()));String line;logBuffer.add(""welcome to use bigdata scheduling system..."");while ((line = inReader.readLine()) != null) {if (line.startsWith(""${setValue("")) {varPool.append(line.substring(""${setValue("".length(), line.length() - 2));varPool.append(""$VarPool$"");} else {logBuffer.add(line);taskResultString = line;}}} catch (Exception e) {logger.error(e.getMessage(), e);} finally {logOutputIsScuccess = true;close(inReader);}});getOutputLogService.shutdown();ExecutorService parseProcessOutputExecutorService =ThreadUtils.newDaemonSingleThreadExecutor(threadLoggerInfoName);parseProcessOutputExecutorService.submit(() -> {try {long lastFlushTime = System.currentTimeMillis();while (logBuffer.size() > 0 || !logOutputIsScuccess) {if (logBuffer.size() > 0) {lastFlushTime = flush(lastFlushTime);} else {Thread.sleep(Constants.DEFAULT_LOG_FLUSH_INTERVAL);}}} catch (Exception e) {} finally {clear();}});parseProcessOutputExecutorService.shutdown();}}"	1
4765	"public class A {@Overridepublic int compare(String[] item1, String[] item2) {String dateString1 = item1[5];String dateString2 = item2[5];SimpleDateFormat format = new SimpleDateFormat(""MM/dd/yyyy HH:mm:ss"");Date date1 = null;Date date2 = null;if (dateString1 == ""NA"") dateString1 = ""00/00/0000 00:00:00"";if (dateString2 == ""NA"") dateString2 = ""00/00/0000 00:00:00"";try {date1 = format.parse(dateString1);date2 = format.parse(dateString2);} catch (ParseException e) {return 0;}return date2.compareTo(date1);}}"	1
4766	public class A {protected void leaked(LeakDetector.LeakInfo leakInfo) {}}	1
4767	public class A {@Overridepublic void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {if (ctx.channel().isActive()) {sendError(ctx, INTERNAL_SERVER_ERROR);}}}	1
4768	public class A {@Provides@Named(RABBITMQ_CONFIGURATION_NAME)@Singletonprivate org.apache.commons.configuration2.Configuration getConfiguration(PropertiesProvider propertiesProvider) throws ConfigurationException {try {return propertiesProvider.getConfiguration(RABBITMQ_CONFIGURATION_NAME);} catch (FileNotFoundException e) {throw new RuntimeException(e);}}}	1
4769	public class A {private static AttributeValue stringToValue(String value, String type) {try {if (StringAttribute.identifier.equals(type)) {return StringAttribute.getInstance(value);} else if (AnyURIAttribute.identifier.equals(type)) {return AnyURIAttribute.getInstance(value);} else if (DateTimeAttribute.identifier.equals(type)) {return DateTimeAttribute.getInstance(value);} else if (DateAttribute.identifier.equals(type)) {return DateAttribute.getInstance(value);} else if (TimeAttribute.identifier.equals(type)) {return TimeAttribute.getInstance(value);} else if (IntegerAttribute.identifier.equals(type)) {return IntegerAttribute.getInstance(value);} else if (BooleanAttribute.identifier.equals(type)) {return BooleanAttribute.getInstance(value);} else {return StringAttribute.getInstance(value);}} catch (Exception e) {return null;}}}	2
4770	public class A {private void sendMessage(final String ipAddress,final OslpEnvelope oslpRequest,final OslpResponseHandler oslpResponseHandler,final DeviceRequest deviceRequest)throws IOException {try {this.oslpChannelHandler.send(this.createAddress(ipAddress),oslpRequest,oslpResponseHandler,deviceRequest.getDeviceIdentification());} catch (final RuntimeException e) {throw new IOException(e.getMessage());}}}	1
4771	public class A {private ProfilingState checkProfilingState() {try {profiler.getAttribute();return ProfilingState.PROFILING_PRESENT;} catch (UnsatisfiedLinkError e) {return ProfilingState.PROFILING_ABSENT;}}}	2
4772	"public class A {public static byte[] getServiceIcon(String serviceType) {try {String path = getResourceRoot() + fs + serviceType + "".png"";return Files.readAllBytes(Paths.get(path));} catch (Exception e) {}return null;}}"	1
4773	public class A {public void deactivate() {httpService.unregister(path);this.bridgeHandler = null;}}	1
4774	public class A {public void inspectProperties(Exchange exchange) {Map properties = exchange.getProperties();Iterator iter = properties.entrySet().iterator();if (logger.isDebugEnabled()) {while (iter.hasNext()) {Map.Entry pairs = (Map.Entry) iter.next();}}}}	2
4775	"public class A {@SuppressWarnings({""rawtypes"", ""unchecked""})protected void setResponseFuture(ArgScheme argScheme, Response response) {switch (argScheme) {case RAW:((TFuture<RawResponse>) future).set((RawResponse) response);break;case JSON:((TFuture<JsonResponse>) future).set((JsonResponse) response);break;case THRIFT:((TFuture<ThriftResponse>) future).set((ThriftResponse) response);break;default:((TFuture<RawResponse>) future).set((RawResponse) response);break;}}}"	1
4776	"public class A {public void grantAccess(GrantRevokeRequest request, RangerAccessResultProcessor resultProcessor)throws Exception {if (LOG.isDebugEnabled()) {}boolean isSuccess = false;try {RangerPolicyEngine policyEngine = this.policyEngine;if (policyEngine != null) {request.setZoneName(policyEngine.getUniquelyMatchedZoneName(request));}getAdminClient().grantAccess(request);isSuccess = true;} finally {auditGrantRevoke(request, ""grant"", isSuccess, resultProcessor);}if (LOG.isDebugEnabled()) {}}}"	2
4777	public class A {protected static int[] randomAttributes(Random rng, boolean[] selected, int m) {int nbNonSelected = 0;for (boolean sel : selected) {if (!sel) {nbNonSelected++;}}if (nbNonSelected == 0) {return NO_ATTRIBUTES;}int[] result;if (nbNonSelected <= m) {result = new int[nbNonSelected];int index = 0;for (int attr = 0; attr < selected.length; attr++) {if (!selected[attr]) {result[index++] = attr;}}} else {result = new int[m];for (int index = 0; index < m; index++) {int rind;do {rind = rng.nextInt(selected.length);} while (selected[rind]);result[index] = rind;selected[rind] = true;}for (int attr : result) {selected[attr] = false;}}return result;}}	1
4778	public class A {@Overridepublic void service(final WebdavRequest request, final WebdavResponse response)throws WebdavException, IOException {requestInfo.setRequest(request);super.service(request, response);}}	1
4779	public class A {public org.springframework.data.domain.Page<ModuleDto> findAllModules(final Pageable pageable, final ModuleSearchForm moduleSearchForm) {final PlatformUser platformAuthorizedUser = securityService.getAuthorizedUser();final User authorizedUser = userService.find(platformAuthorizedUser.getId());final org.springframework.data.domain.Page<Module> modules =moduleService.findAll(pageable, moduleSearchForm, authorizedUser);return moduleToModuleDtoConverter.convertToPage(modules);}}	1
4780	"public class A {@Overrideprotected void runInContext() {final GlobalLock lock = GlobalLock.getInternLock(""TransitionChecking"");if (lock == null) {return;}if (!lock.lock(30)) {return;}try {scanStalledVMInTransitionStateOnDisconnectedHosts();final List<VMInstanceVO> instances =_vmDao.findVMInTransition(new Date(DateUtil.currentGMTTime().getTime() - AgentManager.Wait.value() * 1000),State.Starting,State.Stopping);for (final VMInstanceVO instance : instances) {final State state = instance.getState();if (state == State.Stopping) {_haMgr.scheduleStop(instance, instance.getHostId(), WorkType.CheckStop);} else if (state == State.Starting) {_haMgr.scheduleRestart(instance, true);}}} catch (final Exception e) {} finally {lock.unlock();}}}"	3
4781	public class A {private void getDropletActions(Exchange exchange) throws Exception {Actions actions =getEndpoint().getDigitalOceanClient().getAvailableDropletActions(dropletId, configuration.getPage(), configuration.getPerPage());exchange.getMessage().setBody(actions.getActions());}}	1
4782	"public class A {@Overridepublic void sendMessage(SlackMessage message) {if (slackApi == null) {throw new IllegalStateException(""slackApi is null!"");}try {slackApi.call(message);} catch (SlackChannelNotFoundException ex) {}}}"	1
4783	"public class A {@Testpublic void testHeartBeat4() throws Exception {connection.close();ClientStompFrame frame = conn.createFrame(""CONNECT"");frame.addHeader(""host"", ""127.0.0.1"");frame.addHeader(""login"", this.defUser);frame.addHeader(""passcode"", this.defPass);frame.addHeader(""heart-beat"", ""500,500"");frame.addHeader(""accept-version"", ""1.1,1.2"");ClientStompFrame reply = conn.sendFrame(frame);assertEquals(""CONNECTED"", reply.getCommand());RemotingConnection remotingConnection = null;StompConnection stompConnection = null;Iterator<RemotingConnection> iterator = server.getRemotingService().getConnections().iterator();while (iterator.hasNext()) {remotingConnection = iterator.next();if (remotingConnection instanceof StompConnection) {stompConnection = (StompConnection) remotingConnection;}}StompFrameHandlerV11 stompFrameHandler =(StompFrameHandlerV11) stompConnection.getStompVersionHandler();conn.startPinger(100);ClientStompFrame subFrame = conn.createFrame(""SUBSCRIBE"");subFrame.addHeader(""destination"", getTopicPrefix() + getTopicName());subFrame.addHeader(""id"", ""0"");ClientStompFrame f = conn.sendFrame(subFrame);f = conn.sendFrame(subFrame);f = conn.sendFrame(subFrame);f = conn.receiveFrame(1000);Assert.assertTrue(f.getCommand().equals(""ERROR""));conn.stopPinger();Thread.sleep(2000);Wait.waitFor(() -> {return server.getRemotingService().getConnections().size() == 0;});Assert.assertFalse(""HeartBeater is still running!!"", stompFrameHandler.getHeartBeater().isStarted());}}"	3
4784	public class A {public void persist(CmMasState transientInstance) {try {sessionFactory.getCurrentSession().persist(transientInstance);} catch (RuntimeException re) {throw re;}}}	3
4785	"public class A {@Testpublic void testTimedFlush() throws Exception {EntityManager em = app.getEntityManager();assertNotNull(em);UUID user1 = UUID.randomUUID();UUID user2 = UUID.randomUUID();Event event;for (int i = 0; i < 100; i++) {event = new Event();event.setTimestamp(ts + (i * 60 * 1000));event.addCounter(""visits"", 1);event.setUser(user1);em.create(event);event = new Event();event.setTimestamp(ts + (i * 60 * 1000));event.addCounter(""visits"", 1);event.setUser(user2);em.create(event);}Thread.sleep(30000);final long totalCount = returnCounts(em, ""visits"");assertEquals(200, totalCount);}}"	1
4786	public class A {private void addToPollQueue(InsteonDevice d, long time) {long texp = findNextExpirationTime(d, time);PQEntry ne = new PQEntry(d, texp);pollQueue.add(ne);}}	1
4787	"public class A {private void handleOnCompleted(PinpointGrpcServer pinpointGrpcServer, AgentInfo agentInfo) {Objects.requireNonNull(pinpointGrpcServer, ""pinpointGrpcServer"");Objects.requireNonNull(agentInfo, ""agentInfo"");pinpointGrpcServer.disconnected();}}"	1
4788	public class A {public void load() {String item = localStorage.getItem(documentsKey());if (item != null) {idCounter = Long.parseLong(item);}try {loadInternal(indexKey());if (indexRef == null) {reset();} else {}} catch (JavaScriptException e) {reset();}}}	1
4789	"public class A {public String undeploy(String artifactId) throws IOException {lock.lock();try {DeployedJar deployedJar = deployedJars.remove(artifactId);if (deployedJar == null) {throw new IllegalArgumentException(artifactId + "" not deployed"");}ClassPathLoader.getLatest().unloadClassloaderForArtifact(artifactId);deleteAllVersionsOfJar(deployedJar.getFile().getName());return deployedJar.getFileCanonicalPath();} finally {lock.unlock();}}}"	3
4790	"public class A {public static com.liferay.journal.model.JournalArticle getLatestArticle(HttpPrincipal httpPrincipal, long groupId, String className, long classPK)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(JournalArticleServiceUtil.class,""getLatestArticle"",_getLatestArticleParameterTypes47);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, className, classPK);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.journal.model.JournalArticle) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
4791	"public class A {@Deprecatedprivate Path getWorkspace(long studyId, String sessionId) throws CatalogException, IOException {QueryOptions studyOptions =new QueryOptions(QueryOptions.INCLUDE, FileDBAdaptor.QueryParams.URI.key());OpenCGAResult<Study> studyResult =catalogManager.getStudyManager().get(String.valueOf((Long) studyId), studyOptions, sessionId);if (studyResult.getNumResults() != 1) {throw new CatalogException(""Critical error: Study "" + studyId + "" not found in catalog"");}Path workspace =Paths.get(studyResult.first().getUri().getRawPath()).resolve("".opencga"").resolve(""alignments"");if (!workspace.toFile().exists()) {Files.createDirectories(workspace);}return workspace;}}"	1
4792	public class A {public boolean start() {if (!state.compareAndSet(null, Boolean.TRUE)) return false;try {executor.submit(this);} catch (Exception ignored) {return false;}synchronized (mux) {logEvictPartByGrps.computeIfAbsent(grpEvictionCtx.grp.groupId(), grpId -> new HashMap<>()).put(part.id(), reason);grpEvictionCtx.totalTasks.incrementAndGet();updateMetrics(grpEvictionCtx.grp, reason, INCREMENT);showProgress();grpEvictionCtx.taskScheduled(this);}if (log.isDebugEnabled())return true;}}	2
4793	public class A {public void spellCheck(File file) throws IOException {Files.asCharSource(file, Charsets.UTF_8).readLines(new LineProcessor<Void>() {@Overridepublic boolean processLine(String line) throws IOException {for (String word : Splitter.on(CharMatcher.whitespace()).split(line)) {word = LETTER.retainFrom(word);if (!word.isEmpty()) {spellCheck(word);}}return true;}@Overridepublic Void getResult() {return null;}});}}	1
4794	public class A {public ArrayList<FileMatch> getTargetFileMatches(CommandDirectories commandDirectories,FileType fileType,String sourceLocale,String sourcePathFilterRegex)throws CommandException {FileFinder fileFinder =getFileFinder(commandDirectories, fileType, sourceLocale, sourcePathFilterRegex);return fileFinder.getTargets();}}	1
4795	"public class A {public Long cascadeDefaultAccountQuotaToSubDomainsAccountQuota(AbstractDomain domain, Long accountQuota, List<Long> quotaIdList) {if (quotaIdList == null || quotaIdList.isEmpty()) {return 0L;}HibernateCallback<Long> action =new HibernateCallback<Long>() {public Long doInHibernate(final Session session) throws HibernateException {StringBuilder sb = new StringBuilder();sb.append(""UPDATE Quota SET account_quota = :accountQuota WHERE id IN :list_quota_id ;"");final Query<?> query = session.createNativeQuery(sb.toString());query.setParameter(""accountQuota"", accountQuota);query.setParameterList(""list_quota_id"", quotaIdList);return (long) query.executeUpdate();}};long updatedCounter = getHibernateTemplate().execute(action);return updatedCounter;}}"	1
4796	public class A {@Overridepublic void start(Promise<Void> promise) throws Exception {MonitoringConfig config = options.getMonitoringOptions();int port = config.getPort();String host = config.getHost();HttpServerOptions options = new HttpServerOptions();options.setPort(port);options.setHost(host);options.setCompressionSupported(true);options.setHandle100ContinueAutomatically(true);Router router = routes.getRouter();server = vertx.createHttpServer(options);server.requestHandler(router);server.listen(rh -> {if (rh.failed()) {promise.fail(rh.cause());} else {if (log.isInfoEnabled()) {}promise.complete();}});}}	2
4797	public class A {@Overridepublic PartitionContext getNextScaleUpPartitionContext(PartitionContext[] partitionContexts) {for (PartitionContext partitionContext : partitionContexts) {if (partitionContext.getNonTerminatedMemberCount() < partitionContext.getMax()&& !partitionContext.isObsoletePartition()) {if (log.isDebugEnabled()) {}return partitionContext;}}return null;}}	1
4798	"public class A {@Overridepublic List<Map<String, Object>> addTrustedCertificateFromUrl(String url) {SSLSocket socket = null;String decodedUrl = null;List<Map<String, Object>> resultList = new ArrayList<>();OutputStream fos = null;try {decodedUrl = new String(Base64.getDecoder().decode(url), ""UTF-8"");socket = createNonVerifyingSslSocket(decodedUrl);socket.startHandshake();X509Certificate[] peerCertificateChain =(X509Certificate[]) socket.getSession().getPeerCertificates();for (X509Certificate certificate : peerCertificateChain) {try {X500Name x500name = new JcaX509CertificateHolder(certificate).getSubject();RDN cn = x500name.getRDNs(BCStyle.CN)[0];String cnStr = IETFUtils.valueToString(cn.getFirst().getValue());trustStore.setCertificateEntry(cnStr, certificate);resultList.add(Collections.singletonMap(""success"", true));} catch (CertificateEncodingException e) {resultList.add(Collections.singletonMap(""success"", false));}}Path trustStoreFile = Paths.get(SecurityConstants.getTruststorePath());if (!trustStoreFile.isAbsolute()) {Path ddfHomePath = Paths.get(System.getProperty(DDF_HOME));trustStoreFile = Paths.get(ddfHomePath.toString(), trustStoreFile.toString());}String keyStorePassword = SecurityConstants.getTruststorePassword();fos = Files.newOutputStream(trustStoreFile);trustStore.store(fos, keyStorePassword.toCharArray());} catch (IOException | GeneralSecurityException e) {} finally {IOUtils.closeQuietly(socket);IOUtils.closeQuietly(fos);}return resultList;}}"	2
4799	public class A {private boolean hasPermission(Authentication authentication,Region region,Permission permission,boolean trustedDomainObject) {List<Region> trustedRegionContainer = new ArrayList<Region>();if (super.hasPermission(authentication, region, permission)) {return true;}boolean hasPermission = false;switch (permission) {case ADMINISTER:break;case CREATE:case DELETE:case UPDATE:hasPermission =isRegionOwner(authentication, region, trustedRegionContainer, trustedDomainObject)|| isRegionMember(authentication, region, trustedRegionContainer, trustedDomainObject, true);break;case READ:hasPermission =isRegionOwner(authentication, region, trustedRegionContainer, trustedDomainObject)|| isRegionMember(authentication, region, trustedRegionContainer, trustedDomainObject, false);default:break;}return hasPermission;}}	1
4800	"public class A {@Overridepublic String toString(AbstractWmlConversionContext context, FldSimpleModel model)throws TransformerException {DocPropertyResolver dpr = new DocPropertyResolver(context.getWmlPackage());String key = model.getFldArgument();try {String value = dpr.getValue(key).toString();return FormattingSwitchHelper.applyFormattingSwitch(context.getWmlPackage(), model, value);} catch (FieldValueException e) {if (e.getMessage().contains(""No value found for DOCPROPERTY PAGES"")) {}throw new TransformerException(e);} catch (Docx4JException e) {throw new TransformerException(e);}}}"	1
4801	"public class A {public void updated(Dictionary<String, ?> configuration) {if (configuration == null && defaultConfiguration == null) {configureDefaults();return;}if (configuration == null) {configuration = defaultConfiguration;}Object useLocks = configuration.get(PaxLoggingConstants.PID_CFG_USE_LOCKS);if (!""false"".equalsIgnoreCase(String.valueOf(useLocks))) {if (m_configLock == null) {m_configLock = new ReentrantReadWriteLock();}} else {m_configLock = null;}Properties extracted = extractKeys(configuration);lock(true);Exception problem = null;ClassLoader loader = null;List<PaxAppenderProxy> proxies = null;try {loader = Thread.currentThread().getContextClassLoader();Thread.currentThread().setContextClassLoader(getClass().getClassLoader());if (extracted.size() == 0) {configureDefaults();return;}try {LogManager.resetConfiguration();PaxLoggingConfigurator configurator = new PaxLoggingConfigurator(m_bundleContext);configurator.doConfigure(extracted, LogManager.getLoggerRepository());proxies = configurator.getProxies();emptyConfiguration.set(false);} catch (Exception e) {problem = e;}} finally {unlock(true);Thread.currentThread().setContextClassLoader(loader);}if (proxies != null) {for (PaxAppenderProxy proxy : proxies) {proxy.open();}}setLevelToJavaLogging(configuration);if (problem == null) {m_configNotifier.configurationDone();} else {m_configNotifier.configurationError(problem);}}}"	1
4802	public class A {@Testpublic void testInterruptedException() throws Exception {Blocker blocker0;try (Blocker blocker = sbcb.acquire()) {blocker0 = blocker;Thread.currentThread().interrupt();try {blocker.block();fail();} catch (InterruptedIOException ignored) {}}blocker0.succeeded();try (Blocker blocker = sbcb.acquire()) {assertThat(blocker, not(sameInstance(blocker0)));blocker.succeeded();}}}	1
4803	public class A {public boolean start(NodeImpl protectedParent) throws RepositoryException {String repMembers = resolver.getJCRName(UserConstants.NT_REP_MEMBERS);if (repMembers.equals(protectedParent.getPrimaryNodeType().getName())) {NodeImpl groupNode = protectedParent;while (groupNode.getDepth() != 0&& repMembers.equals(groupNode.getPrimaryNodeType().getName())) {groupNode = (NodeImpl) groupNode.getParent();}Authorizable auth = userManager.getAuthorizable(groupNode);if (auth == null) {return false;} else {currentMembership = new Membership(auth.getID());return true;}} else {return false;}}}	1
4804	public class A {@Overrideprotected ResourceResponse newResourceResponse(Attributes attr) {r = getFileItem(attr);if (r != null) {file = getFile(r, attr);}if (file != null && file.exists()) {ResourceResponse rr = createResourceResponse(attr, file.toPath());rr.setFileName(getFileName(r));return rr;} else {ResourceResponse rr = new ResourceResponse();rr.setError(HttpServletResponse.SC_NOT_FOUND);return rr;}}}	1
4805	public class A {@Overridepublic void start() {transactionMaintenanceTask =taskExecutor.scheduleWithFixedDelay(() -> {int originalSize = transactions.size();try {for (final String transactionId : transactions.keySet()) {if (!isTransactionActive(transactionId)) {cancelTransaction(transactionId);}}} catch (Exception e) {}},0,transactionTtlSec / 2,TimeUnit.SECONDS);}}	3
4806	public class A {@Overridepublic void onFailure(Throwable caught) {caught.printStackTrace(System.err);productionRequests = new DtoProductionRequest[0];fillRequestList();updateRequestDetails();}}	1
4807	public class A {@Overridepublic void play(@Nullable AudioStream audioStream, @Nullable String sinkId, @Nullable PercentType volume) {AudioSink sink = getSink(sinkId);if (sink != null) {PercentType oldVolume = null;try {oldVolume = getVolume(sinkId);} catch (IOException e) {}if (volume != null) {try {setVolume(volume, sinkId);} catch (IOException e) {}}try {sink.process(audioStream);} catch (UnsupportedAudioFormatException | UnsupportedAudioStreamException e) {} finally {if (volume != null && oldVolume != null) {try {setVolume(oldVolume, sinkId);} catch (IOException e) {}}}} else {}}}	5
4808	"public class A {@Pollable(message = ""Start Creating Mojito Folder Structure"")private MojitoAppUserInfo createMojitoFolderStructure() throws BoxSDKServiceException {try {MojitoAppUserInfo result = new MojitoAppUserInfo();BoxAPIConnection apiConnection = boxAPIConnectionProvider.getConnection();BoxFolder parentFolder =new BoxFolder(apiConnection, BoxFolder.getRootFolder(apiConnection).getID());BoxFolder.Info mojitoFolder = parentFolder.createFolder(MOJITO_FOLDER_NAME);result.setRootFolderId(mojitoFolder.getID());BoxFolder.Info projectRequestFolder =mojitoFolder.getResource().createFolder(PROJECT_REQUESTS_FOLDER_NAME);result.setDropsFolderId(projectRequestFolder.getID());return result;} catch (BoxAPIException e) {throw new BoxSDKServiceException(""Can't creating Mojito Folder Structure."", e);}}}"	3
4809	"public class A {@Testpublic void testSet() {Set<String> set = new HashSet<>();set.add(""1"");}}"	1
4810	public class A {@Overridepublic void checkDuplicateConnections(TorrentId torrentId, Peer peer) {connectionLock.lock();try {List<PeerConnection> connectionsWithSameAddress = getConnectionsForAddress(torrentId, peer);if (LOGGER.isDebugEnabled()) {}PeerConnection outgoingConnection = null;PeerConnection incomingConnection = null;for (PeerConnection connection : connectionsWithSameAddress) {if (connection.getRemotePort() == peer.getPort()) {outgoingConnection = connection;} else if (connection.getRemotePeer().getPort() == peer.getPort()) {incomingConnection = connection;}if (outgoingConnection != null && incomingConnection != null) {break;}}if (outgoingConnection != null && incomingConnection != null) {if (LOGGER.isDebugEnabled()) {}incomingConnection.closeQuietly();}} finally {connectionLock.unlock();}}}	2
4811	public class A {private void checkAndCreateSaveDirectory() throws IOException {if (!Files.exists(SAVE_DIRECTORY_PATH)) {Files.createDirectories(SAVE_DIRECTORY_PATH);}}}	1
4812	public class A {@Overrideprotected void shutDown() {publisher.close();listener.close();curator.close();}}	1
4813	"public class A {public synchronized void initServerInfo(Id server, NodeRole role) {E.checkArgument(server != null && role != null, ""The server id or role can't be null"");this.selfServerId = server;this.selfServerRole = role;HugeServerInfo existed = this.serverInfo(server);E.checkArgument(existed == null || !existed.alive(),""The server with name '%s' already in cluster"",server);if (role.master()) {String page = this.supportsPaging() ? PageInfo.PAGE_NONE : null;do {Iterator<HugeServerInfo> servers = this.serverInfos(PAGE_SIZE, page);while (servers.hasNext()) {existed = servers.next();E.checkArgument(!existed.role().master() || !existed.alive(),""Already existed master '%s' in current "" + ""cluster"",existed.id());}if (page != null) {page = PageInfo.pageInfo(servers);}} while (page != null);}HugeServerInfo serverInfo = new HugeServerInfo(server, role);serverInfo.maxLoad(this.calcMaxLoad());this.save(serverInfo);}}"	1
4814	"public class A {public void run() {Thread.currentThread().setName(""ChannelBufferManager Redis subscription Thread"");try {subscriberJedis.psubscribe(aidrSubscriber, channelRegEx);} catch (JedisConnectionException e) {stopSubscription();Thread.currentThread().interrupt();}Thread.currentThread().interrupt();}}"	3
4815	"public class A {@Overridepublic void runCompareTest() throws Exception {assertFalse(""Dir should not exist: "" + targetDir.getAbsolutePath(), targetDir.exists());assertTrue(""Unable to create: "" + targetDir.getAbsolutePath(), targetDir.mkdirs());assertTrue(new File(targetDir, ""0_deltas_go_here.txt"").createNewFile());preRunHook();int failedQueries = 0;for (final String queryString : queryReader.getQueries()) {if (StringUtils.isBlank(queryString) || queryString.startsWith(""#"")) {continue;}final Future<List<ResponseObject>> executor1Future = executeQuery(executor1, queryString);final Future<List<ResponseObject>> executor2Future = executeQuery(executor2, queryString);final List<ResponseObject> executor1Result = executor1Future.get();final List<ResponseObject> executor2Result = executor2Future.get();final ComparisonResult result = filterOutKnownDifferences(executor1Result, executor2Result);final Patch patch = DiffUtils.diff(result.getList1(), result.getList2());final List<Delta> deltas = patch.getDeltas();if (!deltas.isEmpty()) {ComparisonPrinter.writeDifferences(targetDir, queryString, executor1Result, executor2Result, deltas);failedQueries++;}}assertThat(""Number of failed queries"", failedQueries, is(0));}}"	3
4816	"public class A {@Overridepublic boolean insert(final SpanBo spanBo) {Objects.requireNonNull(spanBo, ""spanBo"");if (logger.isDebugEnabled()) {}CollectorUtils.checkAgentId(spanBo.getAgentId());CollectorUtils.checkApplicationName(spanBo.getApplicationId());long acceptedTime = spanBo.getCollectorAcceptTime();TransactionId transactionId = spanBo.getTransactionId();final byte[] rowKey = this.rowKeyEncoder.encodeRowKey(transactionId);final Put put = new Put(rowKey, acceptedTime);this.spanSerializer.serialize(spanBo, put, null);TableName traceTableName = descriptor.getTableName();return hbaseTemplate.asyncPut(traceTableName, put);}}"	1
4817	public class A {@Overridepublic List<Tuple2<Integer, BitSet>> snapshotState(long checkpointId, long timestamp)throws Exception {return Collections.singletonList(new Tuple2<>(numElements, duplicateChecker));}}	1
4818	public class A {public String getInstanceState(String instanceId) {DescribeInstancesResult result =getEC2().describeInstances(new DescribeInstancesRequest().withInstanceIds(instanceId));List<Reservation> reservations = result.getReservations();Set<Instance> instances = new HashSet<Instance>();for (Reservation reservation : reservations) {instances.addAll(reservation.getInstances());if (instances.size() > 0) {String state = instances.iterator().next().getState().getName();return state;}}return null;}}	3
4819	public class A {protected void loadAndShowHistory(Loadable... loadables) {final Integer iterationId = tabPanel == null ? null : tabPanel.getCurrentIterationId();dispatch.execute(new GetHistory(getId(), currentContainerDTO.getId(), iterationId),new CommandResultHandler<ListResult<HistoryTokenListDTO>>() {@Overridepublic void onCommandFailure(final Throwable e) {if (Log.isErrorEnabled()) {}}@Overridepublic void onCommandSuccess(final ListResult<HistoryTokenListDTO> result) {HistoryWindow.show(result.getList(), FlexibleElementDTO.this);}},loadables);}}	2
4820	public class A {public void abandon(final LdapException cause) {if (sentTime == null) {}if (!(request instanceof BindRequest|| request instanceof UnbindRequest|| request instanceof StartTLSRequest|| request instanceof CancelRequest)) {if (receivedTime == null) {try {connection.operation(new AbandonRequest(messageID));} finally {exception(cause);}} else {exception(cause);}} else {exception(cause);}}}	1
4821	public class A {@Overridepublic void update(Object args, Observable observable) {this.currentState.refresh();}}	1
4822	public class A {@ExceptionHandler(InvalidTokenException.class)public ResponseEntity<OAuth2Exception> handleException(Exception e) throws Exception {InvalidTokenException e400 =new InvalidTokenException(e.getMessage()) {@Overridepublic int getHttpErrorCode() {return 400;}};return exceptionTranslator.translate(e400);}}	1
4823	"public class A {@Testpublic void runBothDates() throws IOException {File createTempDir = Files.createTempDir();String randomString = UUID.randomUUID().toString();File testOutFile = new File(createTempDir, randomString + "".txt"");String listCommand =""-p net.sourceforge.seqware.pipeline.plugins.WorkflowRunReporter ""+ ""-- --output-filename ""+ testOutFile.getName()+ "" --workflow-accession 2861 --time-period 2012-01-01:2012-01-15 "";String listOutput = ITUtility.runSeqWareJar(listCommand, ReturnValue.SUCCESS, createTempDir);File retrievedFile = new File(createTempDir, testOutFile.getName());Assert.assertTrue(""output file does not exist"", retrievedFile.exists());List<String> readLines = FileUtils.readLines(testOutFile, StandardCharsets.UTF_8);Assert.assertTrue(""incorrect number of lines "", readLines.size() == 4);long checksumCRC32 = FileUtils.checksumCRC32(testOutFile);Assert.assertTrue(""incorrect output checksum ""+ checksumCRC32+ "" ""+ FileUtils.readFileToString(retrievedFile, StandardCharsets.UTF_8),checksumCRC32 == 562223107L || checksumCRC32 == 4072825873L);}}"	1
4824	public class A {@Overridepublic void setup(PortContext context) {if (Boolean.getBoolean(THREAD_AFFINITY_DISABLE_CHECK) == false) {operatorThread = Thread.currentThread();}}}	1
4825	public class A {@Overridepublic void stop() {_registry.unregisterRESTEasyResources(_alias, _classes);OsgiRESTEasyServletWrapper servlet = _registry.getRegisteredRESTEasyServlet(_alias);if (servlet != null && servlet.getDispatcher().getRegistry().getSize() == 0) {if (LOGGER.isDebugEnabled()) {}_registry.unregisterRESTEasyServlet(_alias);}}}	1
4826	"public class A {protected boolean exists(String bucketKey) {try {logTrace(""-->"", ""getObjectMetadata"");logTrace(""hnote right: "" + bucketKey);ObjectMetadata metadata = amazonS3.getObjectMetadata(bucketName, bucketKey);if (log.isDebugEnabled()) {}logTrace(""<--"", ""exists ("" + metadata.getContentLength() + "" bytes)"");return true;} catch (AmazonServiceException e) {if (isMissingKey(e)) {logTrace(""<--"", ""missing"");return false;}throw e;}}}"	1
4827	public class A {protected void processContributions(BiConsumer<String, LiferayDocumentTypeFactory> biConsumer) {if (Validator.isNotNull(_elasticsearchConfigurationWrapper.overrideTypeMappings())) {return;}RestHighLevelClient restHighLevelClient = null;try {restHighLevelClient = _elasticsearchConnectionManager.getRestHighLevelClient();} catch (ElasticsearchConnectionNotInitializedExceptionelasticsearchConnectionNotInitializedException) {if (_log.isInfoEnabled()) {}return;}LiferayDocumentTypeFactory liferayDocumentTypeFactory =new LiferayDocumentTypeFactory(restHighLevelClient.indices(), _jsonFactory);for (Long companyId : _companyIds) {biConsumer.accept(getIndexName(companyId), liferayDocumentTypeFactory);}}}	1
4828	"public class A {public static ReturnT postBody(String url, String accessToken, int timeout, Object requestObj, Class returnTargClassOfT) {HttpURLConnection connection = null;BufferedReader bufferedReader = null;try {URL realUrl = new URL(url);connection = (HttpURLConnection) realUrl.openConnection();boolean useHttps = url.startsWith(""https"");if (useHttps) {HttpsURLConnection https = (HttpsURLConnection) connection;trustAllHosts(https);}connection.setRequestMethod(""POST"");connection.setDoOutput(true);connection.setDoInput(true);connection.setUseCaches(false);connection.setReadTimeout(timeout * 1000);connection.setConnectTimeout(3 * 1000);connection.setRequestProperty(""connection"", ""Keep-Alive"");connection.setRequestProperty(""Content-Type"", ""application/json;charset=UTF-8"");connection.setRequestProperty(""Accept-Charset"", ""application/json;charset=UTF-8"");if (accessToken != null && accessToken.trim().length() > 0) {connection.setRequestProperty(XXL_JOB_ACCESS_TOKEN, accessToken);}connection.connect();if (requestObj != null) {String requestBody = GsonTool.toJson(requestObj);DataOutputStream dataOutputStream = new DataOutputStream(connection.getOutputStream());dataOutputStream.write(requestBody.getBytes(""UTF-8""));dataOutputStream.flush();dataOutputStream.close();}int statusCode = connection.getResponseCode();if (statusCode != 200) {return new ReturnT<String>(ReturnT.FAIL_CODE,""xxl-rpc remoting fail, StatusCode("" + statusCode + "") invalid. for url : "" + url);}bufferedReader =new BufferedReader(new InputStreamReader(connection.getInputStream(), ""UTF-8""));StringBuilder result = new StringBuilder();String line;while ((line = bufferedReader.readLine()) != null) {result.append(line);}String resultJson = result.toString();try {ReturnT returnT = GsonTool.fromJson(resultJson, ReturnT.class, returnTargClassOfT);return returnT;} catch (Exception e) {return new ReturnT<String>(ReturnT.FAIL_CODE,""xxl-rpc remoting (url="" + url + "") response content invalid("" + resultJson + "")."");}} catch (Exception e) {return new ReturnT<String>(ReturnT.FAIL_CODE, ""xxl-rpc remoting error("" + e.getMessage() + ""), for url : "" + url);} finally {try {if (bufferedReader != null) {bufferedReader.close();}if (connection != null) {connection.disconnect();}} catch (Exception e2) {}}}}"	3
4829	"public class A {@Overridepublic void run() {try {futureTimeToAlertTs = System.currentTimeMillis() + interval;info(""starting watchdog timer %s - expecting checkpoint in %d ms"", name, interval);while (active) {long currentTime = System.currentTimeMillis();if (active && futureTimeToAlertTs < currentTime) {parent.invoke(""publishAlert"", this);for (Message action : actions) {action.clearHops();action.msgId = System.currentTimeMillis();parent.send(action);}for (Message globalAction : globalActions) {globalAction.clearHops();globalAction.msgId = System.currentTimeMillis();parent.send(globalAction);}if (autoDeactivate) {activate();}}sleep(sleepIntervalMs);}} catch (Exception e2) {deactivate();}}}"	3
4830	public class A {@Overridepublic void createDirectory(AlluxioURI path, CreateDirectoryPOptions options)throws FileAlreadyExistsException, InvalidPathException, IOException, AlluxioException {checkUri(path);rpc(client -> {CreateDirectoryPOptions mergedOptions =FileSystemOptions.createDirectoryDefaults(mFsContext.getPathConf(path)).toBuilder().mergeFrom(options).build();client.createDirectory(path, mergedOptions);return null;});}}	1
4831	"public class A {@Testpublic void testHardcodedQuerySet() throws Exception {for (String query : getHardCodedQuerySet()) {try {runQuery(query, Collections.singletonList(query.replace(""'mytable'"", ""mytable"")));} catch (Exception e) {}}}}"	2
4832	public class A {@Testpublic void testGenerateJson() {BandInfoParameters object = new BandInfoParameters();List<BandInfoParameters> objects = new ArrayList<BandInfoParameters>();objects.add(object);}}	1
4833	"public class A {@Overridepublic int getInfoListCount(InfoListProviderContext infoListProviderContext) {AssetEntryQuery assetEntryQuery =getAssetEntryQuery(infoListProviderContext, ""ratings"", ""DESC"", null);try {return _assetEntryService.getEntriesCount(assetEntryQuery);} catch (Exception exception) {}return 0;}}"	1
4834	public class A {public SupportedVersion getSupportedVersion(File projectFolder) {SupportedVersion version = null;File file = new File(projectFolder, OPENL_PROJECT_PROPERTIES_FILE);if (projectFolder.isDirectory() && file.isFile()) {Properties properties = new Properties();InputStream is = null;try {is = new FileInputStream(file);properties.load(is);String compatibility = properties.getProperty(OPENL_COMPATIBILITY_VERSION);if (compatibility != null) {version = SupportedVersion.getByVersion(compatibility);}} catch (Exception e) {if (log.isErrorEnabled()) {}} finally {IOUtils.closeQuietly(is);}}return version == null ? defaultVersion : version;}}	1
4835	public class A {@Overridepublic boolean terminateEarly() {boolean terminationEarlySuccessful = basicPlumbingTermination.terminateEarly();if (terminationEarlySuccessful) {}return terminationEarlySuccessful;}}	1
4836	public class A {public SubEquipmentConfiguration createSubEquipmentConfiguration(String subEquipmentUnitXml) {Element subEquipmentElement = parser.parse(subEquipmentUnitXml).getDocumentElement();Long subEquipmentId = Long.parseLong(subEquipmentElement.getAttribute(ID_ATTRIBUTE));String subEquipmentName = subEquipmentElement.getAttribute(NAME_ATTRIBUTE);Long commFaultTagId =Long.parseLong(getTagValue(subEquipmentElement, COMMFAULT_TAG_ID_ELEMENT));Boolean commFaultTagValue =Boolean.parseBoolean(getTagValue(subEquipmentElement, COMMFAULT_TAG_VALUE_ELEMENT));SubEquipmentConfiguration subEquipmentConfiguration =new SubEquipmentConfiguration(subEquipmentId, subEquipmentName, commFaultTagId, commFaultTagValue);try {subEquipmentConfiguration.setAliveTagId(Long.parseLong(getTagValue(subEquipmentElement, ALIVE_TAG_ID_ELEMENT)));} catch (NullPointerException e) {}try {subEquipmentConfiguration.setAliveInterval(Long.parseLong(getTagValue(subEquipmentElement, ALIVE_INTERVAL_ELEMENT)));} catch (NullPointerException e) {}return subEquipmentConfiguration;}}	3
4837	"public class A {@Overridepublic void run() {try {PhaseWorkerCall call = new PhaseWorkerCall();do {if (PENDING_PHASE_QUEUE.isEmpty()) {synchronized (PENDING_PHASE_QUEUE) {PENDING_PHASE_QUEUE.wait(15000L);}} else if (ViewLifecycle.isTrace()) {ProcessLogger.follow(""view-lifecycle"", ""KRAD lifecycle worker"", call);} else {call.call();}} while (LIFECYCLE_EXECUTOR.getActiveCount() <= getMinThreads());} catch (Throwable t) {}}}"	1
4838	public class A {public void handleSetRandomisationSettingsResponse(final DeviceMessageMetadata deviceMessageMetadata,final ResponseMessageResultType deviceResult,final OsgpException exception) {ResponseMessageResultType result = deviceResult;if (exception != null) {result = ResponseMessageResultType.NOT_OK;}final ResponseMessage responseMessage =ResponseMessage.newResponseMessageBuilder().withCorrelationUid(deviceMessageMetadata.getCorrelationUid()).withOrganisationIdentification(deviceMessageMetadata.getOrganisationIdentification()).withDeviceIdentification(deviceMessageMetadata.getDeviceIdentification()).withResult(result).withOsgpException(exception).withMessagePriority(deviceMessageMetadata.getMessagePriority()).build();this.webServiceResponseMessageSender.send(responseMessage, deviceMessageMetadata.getMessageType());}}	2
4839	public class A {public void nextComma() throws IOException {int tt;if (tok.ttype == ',') {tt = tok.nextToken();if (debug) {}}}}	1
4840	"public class A {private Map<String, Value> prepareAndRunPythonAction(Collection<String> dependencies,String pythonScript,Map<String, Value> callArguments,boolean useJython) {if (StringUtils.isNotBlank(pythonScript)) {final Map<String, Value> returnedMap =scriptExecutor.executeScript(normalizePythonDependencies(dependencies), pythonScript, callArguments, useJython);final Value ex = returnedMap.get(EXCEPTION);if (ex != null) {}return returnedMap;}throw new RuntimeException(""Python script not found in action data"");}}"	1
4841	public class A {private void parseEntryMember(final XMLStreamReader reader, final QName memberName, final Entry entry)throws XMLStreamException {reader.require(START_ELEMENT, memberName.getNamespaceURI(), memberName.getLocalPart());if (ATOM.id.equals(memberName)) {String id = text(reader);entry.setId(id);} else if (ATOM.link.equals(memberName)) {String uri = text(reader);URI link;try {link = new URI(uri);entry.setLink(link);} catch (URISyntaxException e) {}} else if (ATOM.title.equals(memberName)) {String title = text(reader);entry.setTitle(title);} else if (ATOM.subtitle.equals(memberName)) {String subtitle = text(reader);entry.setSubtitle(subtitle);} else if (ATOM.updated.equals(memberName)) {String upd = text(reader);if (upd != null && upd.length() > 0) {entry.setUpdated(upd);}} else if (GEORSS.where.equals(memberName)) {QName nextTag = nextTag(reader);if (reader.isStartElement() && GML_NS_URI.equals(nextTag.getNamespaceURI())) {Geometry where = geometry(reader);if (logger.isTraceEnabled()) {}entry.setWhere(where);}}consume(reader, memberName);reader.require(END_ELEMENT, memberName.getNamespaceURI(), memberName.getLocalPart());}}	2
4842	public class A {@Overridepublic ListIterator<Object> listIterator() {Collections.shuffle(cachedEntityList, workingRandom);return cachedEntityList.listIterator();}}	1
4843	"public class A {@Overridepublic ERCGroupEntry findByG_ERC(long groupId, String externalReferenceCode)throws NoSuchERCGroupEntryException {ERCGroupEntry ercGroupEntry = fetchByG_ERC(groupId, externalReferenceCode);if (ercGroupEntry == null) {StringBundler sb = new StringBundler(6);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""groupId="");sb.append(groupId);sb.append("", externalReferenceCode="");sb.append(externalReferenceCode);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchERCGroupEntryException(sb.toString());}return ercGroupEntry;}}"	1
4844	"public class A {@POST@JacksonSerialized@Produces(MediaType.APPLICATION_JSON)public Response addWorkerContainer(ConnectWorkerContainer connectWorkerContainer) {this.workerAdministrationManagement.register(connectWorkerContainer);return ok(Notifications.success(""Worker Container sucessfully added""));}}"	1
4845	public class A {@Overridepublic void create(final boolean baseline) {connection.lock(table,new Callable<Object>() {@Overridepublic Object call() {int retries = 0;while (!exists()) {if (retries == 0) {}try {ExecutionTemplateFactory.createExecutionTemplate(connection.getJdbcConnection(), database).execute(new Callable<Object>() {@Overridepublic Object call() {sqlScriptExecutorFactory.createSqlScriptExecutor(connection.getJdbcConnection(), false, false, true).execute(database.getCreateScript(sqlScriptFactory, table, baseline));return null;}});} catch (FlywayException e) {if (++retries >= 10) {throw e;}try {Thread.sleep(1000);} catch (InterruptedException e1) {}}}return null;}});}}	3
4846	"public class A {public EnqueueBean enqueueController(String user, Map<String, Object> userArgs, String callback, List<String> args)throws NotAuthorizedException, BusyException, ExecuteException, IOException, QueueException {try {UserGroupInformation ugi = UgiFactory.getUgi(user);final long startTime = System.nanoTime();String id = queueAsUser(ugi, args);long elapsed = ((System.nanoTime() - startTime) / ((int) 1e6));if (id == null) throw new QueueException(""Unable to get job id"");registerJob(id, user, callback, userArgs);return new EnqueueBean(id);} catch (InterruptedException e) {throw new QueueException(""Unable to launch job "" + e);}}}"	1
4847	"public class A {@PUTpublic Response put(@PathParam(""path"") final String externalPath) throws Exception {final FedoraId id = identifierConverter().pathToInternalId(externalPath);return doRequest(id);}}"	1
4848	public class A {protected Future<NetworkConfig> loadNetworkConfig(final String fileName, final NetworkConfig networkConfig) {if (!Strings.isNullOrEmpty(fileName)) {vertx.fileSystem().readFile(fileName,readAttempt -> {if (readAttempt.succeeded()) {try (InputStream is = new ByteArrayInputStream(readAttempt.result().getBytes())) {networkConfig.load(is);} catch (final IOException e) {}} else {}});}return Future.succeededFuture(networkConfig);}}	2
4849	"public class A {@SuppressWarnings({""cast"", ""unchecked""})public List<Rectangle<C>> complexRoots(GenPolynomial<Complex<C>> a) {List<Rectangle<C>> roots = new ArrayList<Rectangle<C>>();if (a.isConstant() || a.isZERO()) {return roots;}ComplexRing<C> cr = (ComplexRing<C>) a.ring.coFac;GenPolynomial<Complex<C>> sp = engine.squarefreePart(a);SortedMap<GenPolynomial<Complex<C>>, Long> sa = new TreeMap<GenPolynomial<Complex<C>>, Long>();sa.put(sp, 1L);for (Map.Entry<GenPolynomial<Complex<C>>, Long> me : sa.entrySet()) {GenPolynomial<Complex<C>> p = me.getKey();Complex<C> Mb = rootBound(p);C M = Mb.getRe();C M1 = M.sum(M.factory().fromInteger(1));if (debug) {}Complex<C>[] corner = (Complex<C>[]) new Complex[4];corner[0] = new Complex<C>(cr, M1.negate(), M);corner[1] = new Complex<C>(cr, M1.negate(), M1.negate());corner[2] = new Complex<C>(cr, M, M1.negate());corner[3] = new Complex<C>(cr, M, M);Rectangle<C> rect = new Rectangle<C>(corner);try {List<Rectangle<C>> rs = complexRoots(rect, p);long e = me.getValue();for (int i = 0; i < e; i++) {roots.addAll(rs);}} catch (InvalidBoundaryException e) {throw new RuntimeException(""this should never happen "" + e);}}return roots;}}"	1
4850	public class A {@Overridepublic void save(Device profile) {deviceService.save(profile);Audit.logSave(profile);}}	1
4851	public class A {@Overridepublic void run() {try {task.run();} catch (Exception e) {}}}	1
4852	public class A {public void setConfigFile(String file) {configFile = file;}}	1
4853	public class A {void errorOut(final CompletionKey key, final int rc) {if (LOG.isDebugEnabled()) {}CompletionValue completion = completionObjects.remove(key);if (completion != null) {completion.errorOut(rc);} else {completionObjectsV2Conflicts.removeAny(key).ifPresent(c -> c.errorOut(rc));}}}	1
4854	public class A {public String getNotificationEvents(long companyId, long userId, JSONObject pollerResponseHeaderJSONObject, long timeout)throws ChannelException {try {_countDownLatch.await(timeout, TimeUnit.MILLISECONDS);} catch (InterruptedException interruptedException) {if (_log.isDebugEnabled()) {}}List<NotificationEvent> notificationEvents =ChannelHubManagerUtil.fetchNotificationEvents(companyId, userId, true);JSONArray jsonArray = JSONUtil.put(pollerResponseHeaderJSONObject);for (NotificationEvent notificationEvent : notificationEvents) {jsonArray.put(notificationEvent.toJSONObject());}return jsonArray.toString();}}	1
4855	"public class A {@Overridepublic void handleCommand(ChannelUID channelUID, Command command) {@Nullable OpenThermGatewayConnector conn = connector;if (!(command instanceof RefreshType)) {String channel = channelUID.getId();String code = getGatewayCodeFromChannel(channel);GatewayCommand gatewayCommand = null;if (command instanceof OnOffType) {OnOffType onOff = (OnOffType) command;gatewayCommand = GatewayCommand.parse(code, onOff == OnOffType.ON ? ""1"" : ""0"");}if (command instanceof QuantityType<?>) {QuantityType<?> quantityType = ((QuantityType<?>) command).toUnit(SIUnits.CELSIUS);if (quantityType != null) {double value = quantityType.doubleValue();gatewayCommand = GatewayCommand.parse(code, Double.toString(value));}}if (gatewayCommand == null) {gatewayCommand = GatewayCommand.parse(code, command.toFullString());}if (conn != null && conn.isConnected()) {conn.sendCommand(gatewayCommand);if (code == GatewayCommandCode.ControlSetpoint) {if (gatewayCommand.getMessage().equals(""0.0"")) {updateState(OpenThermGatewayBindingConstants.CHANNEL_OVERRIDE_CENTRAL_HEATING_WATER_SETPOINT,UnDefType.UNDEF);}updateState(OpenThermGatewayBindingConstants.CHANNEL_OVERRIDE_CENTRAL_HEATING_ENABLED,OnOffType.from(!gatewayCommand.getMessage().equals(""0.0"")));} else if (code == GatewayCommandCode.ControlSetpoint2) {if (gatewayCommand.getMessage().equals(""0.0"")) {updateState(OpenThermGatewayBindingConstants.CHANNEL_OVERRIDE_CENTRAL_HEATING2_WATER_SETPOINT,UnDefType.UNDEF);}updateState(OpenThermGatewayBindingConstants.CHANNEL_OVERRIDE_CENTRAL_HEATING2_ENABLED,OnOffType.from(!gatewayCommand.getMessage().equals(""0.0"")));}} else {connect();}}}}"	1
4856	public class A {private void debugTrace(boolean isEnter, String method, @Nullable Transaction transaction) {if (!log.isTraceEnabled()) {return;}}}	1
4857	"public class A {public void setPublicCert() {try {KeyStoreManager keyStoreManager =KeyStoreManager.getInstance(MultitenantConstants.SUPER_TENANT_ID);this.publicCert = keyStoreManager.getDefaultPrimaryCertificate();} catch (Exception e) {String error = ""Error in obtaining keystore"";}}}"	1
4858	"public class A {@Testpublic void TestCreateVfModuleFailure_5000() {new MockAAIGenericVnfSearch(wireMockServer);MockAAICreateGenericVnf(wireMockServer);MockAAIVfModulePUT(wireMockServer, true);Map<String, Object> variables = new HashMap<>();variables.put(""isDebugLogEnabled"", ""true"");variables.put(""isVidRequest"", ""false"");variables.put(""vnfId"", ""a27ce5a9-29c4-4c22-a017-6615ac73c721"");variables.put(""serviceId"", ""99999999-9999-9999-9999-999999999999"");variables.put(""personaModelId"", ""973ed047-d251-4fb9-bf1a-65b8949e0a73"");variables.put(""personaModelVersion"", ""1.0"");variables.put(""vfModuleName"", ""STMTN5MMSC21-PCRF::module-1-0"");variables.put(""vfModuleModelName"", ""STMTN5MMSC21-PCRF::model-1-0"");variables.put(""mso-request-id"", UUID.randomUUID().toString());String processId = invokeSubProcess(""CreateAAIVfModule"", variables);WorkflowException exception =BPMNUtil.getRawVariable(processEngine, ""CreateAAIVfModule"", ""WorkflowException"", processId);Assert.assertEquals(5000, exception.getErrorCode());Assert.assertEquals(true, exception.getErrorMessage().contains(""<messageId>SVC3002</messageId>""));}}"	1
4859	public class A {public void attachDirty(MBstnStatus instance) {try {getSession().saveOrUpdate(instance);} catch (RuntimeException re) {throw re;}}}	3
4860	"public class A {@Testpublic void findProjectsByFuzzyOwnerTest() {if (!config.hasAuth()) {assertTrue(true);return;}GetUser getUserRequest =GetUser.newBuilder().setEmail(authClientInterceptor.getClient1Email()).build();UserInfo testUser1 = uacServiceStub.getUser(getUserRequest);String testUser1UserName = testUser1.getVertaInfo().getUsername();Value stringValue =Value.newBuilder().setStringValue(testUser1UserName.substring(0, 2)).build();KeyValueQuery keyValueQuery =KeyValueQuery.newBuilder().setKey(""owner"").setValue(stringValue).setOperator(OperatorEnum.Operator.CONTAIN).build();FindProjects findProjects = FindProjects.newBuilder().addPredicates(keyValueQuery).build();FindProjects.Response response = projectServiceStub.findProjects(findProjects);LOGGER.info(""FindProjects Response : "" + response.getProjectsList());assertEquals(""Project count not match with expected project count"",4,response.getProjectsList().size());assertEquals(""Total records count not matched with expected records count"",4,response.getTotalRecords());keyValueQuery =KeyValueQuery.newBuilder().setKey(""owner"").setValue(stringValue).setOperator(OperatorEnum.Operator.NOT_CONTAIN).build();findProjects = FindProjects.newBuilder().addPredicates(keyValueQuery).build();response = projectServiceStub.findProjects(findProjects);assertEquals(""Total records count not matched with expected records count"",0,response.getTotalRecords());assertEquals(""Project count not match with expected project count"", 0, response.getProjectsCount());stringValue = Value.newBuilder().setStringValue(""asdasdasd"").build();keyValueQuery =KeyValueQuery.newBuilder().setKey(""owner"").setValue(stringValue).setOperator(OperatorEnum.Operator.CONTAIN).build();findProjects = FindProjects.newBuilder().addPredicates(keyValueQuery).build();response = projectServiceStub.findProjects(findProjects);assertEquals(""Project count not match with expected project count"",0,response.getProjectsList().size());}}"	3
4861	"public class A {@Testpublic void testQuery003() throws Exception {Set<String> expected = new HashSet<>();String query =CarField.COLOR.name() + "" =~ 'bl.*s.*' and "" + CarField.WHEELS.name() + "" == '4'"";runTest(query, expected);}}"	1
4862	public class A {@Overridepublic boolean isPageComplete() {boolean complete = super.isPageComplete();if (logger.isDebugEnabled()) {}return complete;}}	1
4863	public class A {@Overridepublic void prepareStaticStatements(InternalCassandraVersion cassandraVersion, Session session, StatementsCache cache) {if (LOGGER.isDebugEnabled()) {}generateStaticSelectQuery(session, cache, this);}}	1
4864	public class A {@Benchmark@BenchmarkMode(SingleShotTime)public int nestedForeach() {AtomicInteger counter = new AtomicInteger();try {Foreach internalForeach = createForeach();Processor nestedEventProcessor =event -> {counter.incrementAndGet();return event;};internalForeach.setMessageProcessors(singletonList(nestedEventProcessor));Foreach nestedForeach = createForeach();nestedForeach.setMessageProcessors(singletonList(internalForeach));initialiseIfNeeded(nestedForeach, muleContext);nestedForeach.process(nestedForeachEvent);} catch (Throwable t) {}return counter.get();}}	1
4865	"public class A {@Overridepublic Page<ConfigInfo> findConfigInfoByDataIdAndAdvance(final int pageNo,final int pageSize,final String dataId,final String tenant,final Map<String, Object> configAdvanceInfo) {String tenantTmp = StringUtils.isBlank(tenant) ? StringUtils.EMPTY : tenant;PaginationHelper<ConfigInfo> helper = createPaginationHelper();final String appName =configAdvanceInfo == null ? null : (String) configAdvanceInfo.get(""appName"");final String configTags =configAdvanceInfo == null ? null : (String) configAdvanceInfo.get(""config_tags"");StringBuilder sqlCount =new StringBuilder(""select count(*) from config_info where data_id=? and tenant_id=? "");StringBuilder sql =new StringBuilder(""select ID,data_id,group_id,tenant_id,app_name,content from config_info where data_id=?""+ "" and tenant_id=? "");List<String> paramList = new ArrayList<String>();paramList.add(dataId);paramList.add(tenantTmp);if (StringUtils.isNotBlank(configTags)) {sqlCount =new StringBuilder(""select count(*) from config_info  a left join config_tags_relation b on a.id=b.id""+ "" where a.data_id=? and a.tenant_id=? "");sql =new StringBuilder(""select a.ID,a.data_id,a.group_id,a.tenant_id,a.app_name,a.content from config_info ""+ "" a left join config_tags_relation b on a.id=b.id where a.data_id=? and""+ "" a.tenant_id=? "");sqlCount.append("" and b.tag_name in ("");sql.append("" and b.tag_name in ("");String[] tagArr = configTags.split("","");for (int i = 0; i < tagArr.length; i++) {if (i != 0) {sqlCount.append("", "");sql.append("", "");}sqlCount.append(""?"");sql.append(""?"");paramList.add(tagArr[i]);}sqlCount.append("") "");sql.append("") "");if (StringUtils.isNotBlank(appName)) {sqlCount.append("" and a.app_name=? "");sql.append("" and a.app_name=? "");paramList.add(appName);}} else {if (StringUtils.isNotBlank(appName)) {sqlCount.append("" and app_name=? "");sql.append("" and app_name=? "");paramList.add(appName);}}try {return helper.fetchPage(sqlCount.toString(),sql.toString(),paramList.toArray(),pageNo,pageSize,CONFIG_INFO_ROW_MAPPER);} catch (CannotGetJdbcConnectionException e) {throw e;}}}"	1
4866	"public class A {public <T> T getFromApplicationContext(String referenceName, String className, Class<T> expectedClass) {T resolvedReference = null;if (!StringUtils.isBlank(referenceName)) {resolvedReference = adapterGetter.getByName(referenceName, expectedClass);}if (resolvedReference == null && !StringUtils.isBlank(className)) {try {resolvedReference =adapterGetter.getByClassDefinition(Class.forName(className), expectedClass);} catch (ClassNotFoundException cnfe) {throw new ConfigurationException(""Unable to find specified default adapter class: "" + className, cnfe);}}return resolvedReference;}}"	1
4867	public class A {public void rollback() {boolean debug = log.isDebugEnabled();for (RollbackTask task : tasks) {try {if (debug) {}task.rollback();} catch (Exception e) {errors = true;}}}}	2
4868	"public class A {protected void doFireDeployEvent(HotDeployEvent hotDeployEvent) {String servletContextName = hotDeployEvent.getServletContextName();if (_deployedServletContextNames.contains(servletContextName)) {return;}boolean hasDependencies = true;for (String dependentServletContextName : hotDeployEvent.getDependentServletContextNames()) {if (!_deployedServletContextNames.contains(dependentServletContextName)) {hasDependencies = false;break;}}if (hasDependencies) {if (_log.isDebugEnabled()) {}for (HotDeployListener hotDeployListener : _hotDeployListeners) {PortletClassLoaderUtil.setServletContextName(hotDeployEvent.getServletContextName());try {hotDeployListener.invokeDeploy(hotDeployEvent);} catch (HotDeployException hotDeployException) {} finally {PortletClassLoaderUtil.setServletContextName(null);}}_deployedServletContextNames.add(servletContextName);_dependentHotDeployEvents.remove(hotDeployEvent);ClassLoader contextClassLoader = getContextClassLoader();try {setContextClassLoader(PortalClassLoaderUtil.getClassLoader());List<HotDeployEvent> dependentEvents = new ArrayList<>(_dependentHotDeployEvents);for (HotDeployEvent dependentEvent : dependentEvents) {setContextClassLoader(dependentEvent.getContextClassLoader());doFireDeployEvent(dependentEvent);if (!_dependentHotDeployEvents.contains(dependentEvent)) {dependentEvent.flushInits();}}} finally {setContextClassLoader(contextClassLoader);}} else {if (!_dependentHotDeployEvents.contains(hotDeployEvent)) {if (_log.isInfoEnabled()) {StringBundler sb = new StringBundler(4);sb.append(""Queueing "");sb.append(servletContextName);sb.append("" for deploy because it is missing "");sb.append(getRequiredServletContextNames(hotDeployEvent));}_dependentHotDeployEvents.add(hotDeployEvent);} else {if (_log.isInfoEnabled()) {for (HotDeployEvent dependentHotDeployEvent : _dependentHotDeployEvents) {StringBundler sb = new StringBundler(3);sb.append(servletContextName);sb.append("" is still in queue because it is missing "");sb.append(getRequiredServletContextNames(dependentHotDeployEvent));}}}}}}"	4
4869	public class A {protected void dispatch() {if (isEventBased()) {Request buffer = this.sessionData.getBuffer();if (buffer != null) {setState(ClientCCASessionState.PENDING_BUFFERED);try {dispatchEvent(new AppRequestEventImpl(buffer));} catch (Exception e) {try {handleSendFailure(e, Event.Type.SEND_EVENT_REQUEST, buffer);} catch (Exception e1) {}}}} else {if (this.sessionData.getClientCCASessionState() == ClientCCASessionState.OPEN&& eventQueue.size() > 0) {try {this.handleEvent(eventQueue.remove(0));} catch (Exception e) {}}}}}	2
4870	public class A {@Overridepublic boolean preCleanup() {if (LOG.isDebugEnabled()) {}super.preCleanup();Timer tagDownloadTimer = this.tagDownloadTimer;this.tagDownloadTimer = null;if (tagDownloadTimer != null) {tagDownloadTimer.cancel();}RangerTagRefresher tagRefresher = this.tagRefresher;this.tagRefresher = null;if (tagRefresher != null) {tagRefresher.cleanup();}if (LOG.isDebugEnabled()) {}return true;}}	2
4871	"public class A {@Test(groups = {""network""},description = ""4-Network-1 pattern lowercase"",priority = 6)public void verifyTest4_1_pattern_lower() throws Exception {Context context = initValidatorContext();Assert.assertNotNull(fullparameters, ""no parameters for test"");context.put(VALIDATION_REPORT, new ValidationReport());bean1.setRegistrationNumber(""azerty"");bean2.setRegistrationNumber(""az234ZDER"");fullparameters.getNetwork().getRegistrationNumber().setPattern(AbstractValidation.PATTERN_OPTION.lower.ordinal());context.put(VALIDATION, fullparameters);ValidationData data = new ValidationData();data.getNetworks().addAll(beansFor4);context.put(VALIDATION_DATA, data);checkPoint.validate(context, null);ValidationReport report = (ValidationReport) context.get(VALIDATION_REPORT);checkReportForTest(report, ""4-Network-1"", 1);}}"	1
4872	public class A {private void flush() throws HCatException {if (hCatRecordsBatch.isEmpty()) {return;}try {slaveWriter.write(hCatRecordsBatch.iterator());masterWriter.commit(writerContext);} catch (HCatException e) {masterWriter.abort(writerContext);throw e;} finally {hCatRecordsBatch.clear();}}}	1
4873	public class A {private <OutType> Yielder<OutType> makeYielder(OutType initValue, final YieldingAccumulator<OutType, T> accumulator, final IterType iter) {OutType retVal = initValue;while (!accumulator.yielded() && iter.hasNext()) {retVal = accumulator.accumulate(retVal, iter.next());}if (!accumulator.yielded()) {return Yielders.done(retVal,new Closeable() {@Overridepublic void close() throws IOException {maker.cleanup(iter);}});}final OutType finalRetVal = retVal;return new Yielder<OutType>() {@Overridepublic OutType get() {return finalRetVal;}@Overridepublic Yielder<OutType> next(OutType initValue) {accumulator.reset();try {return makeYielder(initValue, accumulator, iter);} catch (Exception e) {try {maker.cleanup(iter);} catch (RuntimeException e1) {}throw Throwables.propagate(e);}}@Overridepublic boolean isDone() {return false;}@Overridepublic void close() throws IOException {maker.cleanup(iter);}};}}	1
4874	public class A {public void close() {if (!m_closing.compareAndSet(false, true)) {return;}synchronized (m_connectionFunction) {int n = m_sessionWrappers.size();int i = 0;for (JmsSessionProviderWrapper s : m_sessionWrappers.keySet()) {i++;s.close();}if (m_impl == null) {return;}try {m_impl.close();} catch (JMSException e) {BEANS.get(MomExceptionHandler.class).handle(e);} finally {m_impl = null;}}}}	4
4875	public class A {public void migrate() {propertiesEncryption.encryptAndSave(input,propertyNames,s -> {try {return migration.migrate(s);} catch (Exception e) {return s;}});}}	1
4876	"public class A {public void newMappedRWFile() {try {if (rwFileChannel != null) rwFileChannel.close();rwFileChannel = null;if (rwRaf != null) rwRaf.close();rwRaf = null;rwFile = null;File parent = new File(baseDir);if (!parent.exists()) {parent.mkdirs();}rwFile = FileUtils.getFile(baseDir, SystemClock.now() + """");rwRaf = new RandomAccessFile(rwFile, ""rw"");rwFileChannel = rwRaf.getChannel();rwMap = rwFileChannel.map(FileChannel.MapMode.READ_WRITE, 0, pageSize);} catch (Exception ex) {}}}"	1
4877	"public class A {private void init() {try {configuration = new HdfsConfiguration();String resourceStorageType =PropertyUtils.getUpperCaseString(Constants.RESOURCE_STORAGE_TYPE);ResUploadType resUploadType = ResUploadType.valueOf(resourceStorageType);if (resUploadType == ResUploadType.HDFS) {if (CommonUtils.loadKerberosConf(configuration)) {hdfsUser = """";}String defaultFS = configuration.get(Constants.FS_DEFAULTFS);if (defaultFS.startsWith(""file"")) {String defaultFSProp = PropertyUtils.getString(Constants.FS_DEFAULTFS);if (StringUtils.isNotBlank(defaultFSProp)) {Map<String, String> fsRelatedProps = PropertyUtils.getPrefixedProperties(""fs."");configuration.set(Constants.FS_DEFAULTFS, defaultFSProp);fsRelatedProps.forEach((key, value) -> configuration.set(key, value));} else {throw new RuntimeException(String.format(""property: %s can not to be empty, please set!"", Constants.FS_DEFAULTFS));}} else {}if (StringUtils.isNotEmpty(hdfsUser)) {UserGroupInformation ugi = UserGroupInformation.createRemoteUser(hdfsUser);ugi.doAs((PrivilegedExceptionAction<Boolean>)() -> {fs = FileSystem.get(configuration);return true;});} else {fs = FileSystem.get(configuration);}} else if (resUploadType == ResUploadType.S3) {System.setProperty(Constants.AWS_S3_V4, Constants.STRING_TRUE);configuration.set(Constants.FS_DEFAULTFS, PropertyUtils.getString(Constants.FS_DEFAULTFS));configuration.set(Constants.FS_S3A_ENDPOINT, PropertyUtils.getString(Constants.FS_S3A_ENDPOINT));configuration.set(Constants.FS_S3A_ACCESS_KEY, PropertyUtils.getString(Constants.FS_S3A_ACCESS_KEY));configuration.set(Constants.FS_S3A_SECRET_KEY, PropertyUtils.getString(Constants.FS_S3A_SECRET_KEY));fs = FileSystem.get(configuration);}} catch (Exception e) {}}}"	4
4878	"public class A {@Testpublic void wildcardResourcesAreOrderedAlphabetically() {final WroModel model = new WroModel();final String uri =String.format(ClasspathUriLocator.PREFIX + ""%s/expander/order/**.js"",WroUtil.toPackageAsFolder(getClass()));model.addGroup(new Group(""group"").addResource(Resource.create(uri, ResourceType.JS)));Mockito.when(decoratedFactory.create()).thenReturn(model);final WroModel changedModel = transformer.transform(model);Assert.assertEquals(7, changedModel.getGroupByName(""group"").getResources().size());final List<Resource> resources = changedModel.getGroupByName(""group"").getResources();Assert.assertEquals(""01-xyc.js"", FilenameUtils.getName(resources.get(0).getUri()));Assert.assertEquals(""02-xyc.js"", FilenameUtils.getName(resources.get(1).getUri()));Assert.assertEquals(""03-jquery-ui.js"", FilenameUtils.getName(resources.get(2).getUri()));Assert.assertEquals(""04-xyc.js"", FilenameUtils.getName(resources.get(3).getUri()));Assert.assertEquals(""05-xyc.js"", FilenameUtils.getName(resources.get(4).getUri()));Assert.assertEquals(""06-xyc.js"", FilenameUtils.getName(resources.get(5).getUri()));Assert.assertEquals(""07-jquery-impromptu.js"", FilenameUtils.getName(resources.get(6).getUri()));}}"	1
4879	"public class A {@Overridepublic void run() {ExponentialBackoffRetry retry = new ExponentialBackoffRetry(1000, 30000, Integer.MAX_VALUE);long start = System.currentTimeMillis();final OptionalLong finalSN = UfsJournalReader.getLastSN(mJournal);Thread t =new Thread(() -> {UfsJournalProgressLogger progressLogger =new UfsJournalProgressLogger(mJournal, finalSN, () -> mLastAppliedSN);while (!Thread.currentThread().isInterrupted() && retry.attempt()) {progressLogger.logProgress();}});try {t.start();runInternal();} catch (Throwable e) {t.interrupt();ProcessUtils.fatalError(LOG, e, ""%s: Failed to run journal checkpoint thread, crashing."", mMaster.getName());System.exit(-1);} finally {t.interrupt();try {t.join();} catch (InterruptedException e) {Thread.currentThread().interrupt();}}}}"	1
4880	"public class A {@Overridepublic void contextDestroyed(ServletContextEvent servletContextEvent) {WebApplicationContext ac =WebApplicationContextUtils.getRequiredWebApplicationContext(servletContextEvent.getServletContext());ConfigurableApplicationContext gwac = (ConfigurableApplicationContext) ac;gwac.close();LOGGER.log(Level.FINE, ""Web application destroyed"");}}"	1
4881	"public class A {public static MultipartBody buildIdsMultipartMessage(final Message header, final Object payload)throws MessageBuilderException {try {return InfomodelMessageBuilder.messageWithString(header, String.valueOf(payload));} catch (IOException e) {if (log.isWarnEnabled()) {}throw new MessageBuilderException(""Message could not be built."", e);}}}"	1
4882	public class A {private static String unsanitizeDn(final String sanitizedDn) {if (StringUtils.isEmpty(sanitizedDn)) {return sanitizedDn;} else {final String decodedDn;if (isBase64Encoded(sanitizedDn)) {decodedDn = base64Decode(sanitizedDn);} else {decodedDn = sanitizedDn;}final String unsanitizedDn = decodedDn.replaceAll(ESCAPED_GT, GT).replaceAll(ESCAPED_LT, LT);if (!unsanitizedDn.equals(decodedDn)) {}return unsanitizedDn;}}}	2
4883	public class A {@Overrideprotected void afterExecute(Runnable r, Throwable t) {Utils.clearContexts();if (t != null) {}super.afterExecute(r, t);}}	1
4884	"public class A {@Overridepublic MutableAcl createAcl(ObjectIdentity objectIdentity) throws AlreadyExistsException {Assert.notNull(objectIdentity, ""Object Identity required"");if (LOG.isDebugEnabled()) {}Authentication auth = SecurityContextHolder.getContext().getAuthentication();PrincipalSid sid = new PrincipalSid(auth);AclObjectIdentity newAoi = new AclObjectIdentity(objectIdentity);newAoi.setOwnerId(sid.getPrincipal());newAoi.setOwnerPrincipal(true);newAoi.setEntriesInheriting(false);try {aclRepository.saveAcl(newAoi);} catch (AclAlreadyExistsException e) {throw new AlreadyExistsException(e.getMessage(), e);}Acl acl = readAclById(objectIdentity);Assert.isInstanceOf(MutableAcl.class, acl, ""MutableAcl should be been returned"");if (LOG.isDebugEnabled()) {}return (MutableAcl) acl;}}"	2
4885	"public class A {public void handleDeviceMessageStatus(final DeviceMessageStatus status)throws TechnicalException {switch (status) {case FAILURE:throw new TechnicalException(ComponentType.PROTOCOL_OSLP, ""Device reports failure"");case REJECTED:throw new TechnicalException(ComponentType.PROTOCOL_OSLP, ""Device reports rejected"");case OK:break;default:break;}}}"	4
4886	public class A {private void setPropertiesByEnv(final Properties prop) {for (EnvironmentArgument each : EnvironmentArgument.values()) {String key = each.getKey();String value = System.getenv(key);if (!Strings.isNullOrEmpty(value)) {prop.setProperty(each.getKey(), value);}}}}	1
4887	"public class A {private static void createFileIfRequired(String csvFile) throws IOException {try {File file = new File(csvFile);if (file.createNewFile()) {final boolean append = true;BufferedWriter headerWriter =new BufferedWriter(new OutputStreamWriter(new FileOutputStream(csvFile, append), StandardCharsets.UTF_8));final String headerToAppend =""ContainerId,Timestamp[uts],ReceivedMessages[msgs/sec],SentMessages[msgs/sec]"";headerWriter.write(headerToAppend);headerWriter.newLine();headerWriter.close();} else {}} catch (IOException e) {e.printStackTrace();throw new IOException(""An error occurred while creating csv file: can not continue"");}}}"	3
4888	public class A {@Overridepublic void exitLegacy_change_substitution(Legacy_change_substitutionContext ctx) {LegacyLocation location = (LegacyLocation) getValue(ctx.legacy_point_location());String from = ctx.NT_STRING(0).getText();String to = ctx.NT_STRING(1).getText();setValue(ctx, new LegacySubstitution(location, from, to));}}	1
4889	public class A {public void setUseWorkflowPessimisticLocking(boolean useWorkflowPessimisticLocking) {if (LOG.isDebugEnabled()) {}this.useWorkflowPessimisticLocking = useWorkflowPessimisticLocking;}}	1
4890	"public class A {protected Admin adminClient(List<Integer> bootstrapPods, boolean ceShouldBeFatal)throws ForceableProblem, FatalProblem {List<String> podNames =bootstrapPods.stream().map(podId -> podName(podId)).collect(Collectors.toList());try {String bootstrapHostnames =podNames.stream().map(podName ->KafkaCluster.podDnsName(this.namespace, this.cluster, podName)+ "":""+ KafkaCluster.REPLICATION_PORT).collect(Collectors.joining("",""));return adminClientProvider.createAdminClient(bootstrapHostnames, this.clusterCaCertSecret, this.coKeySecret, ""cluster-operator"");} catch (KafkaException e) {if (ceShouldBeFatal&& (e instanceof ConfigException || e.getCause() instanceof ConfigException)) {throw new FatalProblem(""An error while try to create an admin client with bootstrap brokers "" + podNames, e);} else {throw new ForceableProblem(""An error while try to create an admin client with bootstrap brokers "" + podNames, e);}} catch (RuntimeException e) {throw new ForceableProblem(""An error while try to create an admin client with bootstrap brokers "" + podNames, e);}}}"	1
4891	"public class A {private Long executeSQL(JobId jobId, String translatedQuery, Map<String, Object> queryParameters)throws Exception {QueryJobConfiguration.Builder builder =QueryJobConfiguration.newBuilder(translatedQuery).setUseLegacySql(false);setQueryParameters(queryParameters, builder);QueryJobConfiguration queryJobConfiguration = builder.build();try {if (LOG.isTraceEnabled()) {}JobId queryJobId;if (ObjectHelper.isNotEmpty(jobId)) {queryJobId = jobId;} else {queryJobId = JobId.of(configuration.getProjectId(), UUID.randomUUID().toString());}TableResult result = bigquery.query(queryJobConfiguration, queryJobId);if (LOG.isTraceEnabled()) {}return result.getTotalRows();} catch (JobException e) {throw new Exception(""Query "" + translatedQuery + "" failed: "" + e.getErrors(), e);} catch (BigQueryException e) {throw new Exception(""Query "" + translatedQuery + "" failed: "" + e.getError(), e);}}}"	2
4892	"public class A {private void createPools(Properties props) throws LuteceInitException {Enumeration propNames = props.propertyNames();String strPoolName = """";Map<String, Hashtable<String, String>> htPools = new HashMap<>();while (propNames.hasMoreElements()) {String name = (String) propNames.nextElement();try {strPoolName = name.substring(0, name.lastIndexOf('.'));Hashtable<String, String> htParamsPool =htPools.computeIfAbsent(strPoolName, s -> new Hashtable<>());htParamsPool.put(name, props.getProperty(name));htPools.put(strPoolName, htParamsPool);} catch (Exception e) {throw new LuteceInitException(""Invalid initialization of the pools. Problem encoutered with the property :  "" + name,e);}}for (Entry<String, Hashtable<String, String>> entry : htPools.entrySet()) {String key = entry.getKey();try {Hashtable<String, String> htParamsPool = htPools.get(key);ConnectionService cs = getConnectionService(htParamsPool, key);if (cs != null) {cs.setPoolName(key);cs.setLogger(_logger);cs.init(htParamsPool);_pools.put(key, cs);}} catch (Exception e) {throw new LuteceInitException(""Exception when getting the pool '""+ key+ ""'. Please check your '/WEB-INF/conf/db.properties' file."",e);}}}}"	2
4893	public class A {private void doLoadPids(Collection<ResourcePersistentId> thePids,Collection<ResourcePersistentId> theIncludedPids,List<IBaseResource> theResourceListToPopulate,boolean theForHistoryOperation,Map<ResourcePersistentId, Integer> thePosition) {List<Long> myLongPersistentIds;if (thePids.size() < getMaximumPageSize()) {myLongPersistentIds =normalizeIdListForLastNInClause(ResourcePersistentId.toLongList(thePids));} else {myLongPersistentIds = ResourcePersistentId.toLongList(thePids);}Collection<ResourceSearchView> resourceSearchViewList =myResourceSearchViewDao.findByResourceIds(myLongPersistentIds);Map<ResourcePersistentId, Collection<ResourceTag>> tagMap =getResourceTagMap(resourceSearchViewList);ResourcePersistentId resourceId;for (ResourceSearchView next : resourceSearchViewList) {if (next.getDeleted() != null) {continue;}Class<? extends IBaseResource> resourceType =myContext.getResourceDefinition(next.getResourceType()).getImplementingClass();resourceId = new ResourcePersistentId(next.getId());IBaseResource resource =myCallingDao.toResource(resourceType, next, tagMap.get(resourceId), theForHistoryOperation);if (resource == null) {continue;}Integer index = thePosition.get(resourceId);if (index == null) {continue;}if (resource instanceof IResource) {if (theIncludedPids.contains(resourceId)) {ResourceMetadataKeyEnum.ENTRY_SEARCH_MODE.put((IResource) resource, BundleEntrySearchModeEnum.INCLUDE);} else {ResourceMetadataKeyEnum.ENTRY_SEARCH_MODE.put((IResource) resource, BundleEntrySearchModeEnum.MATCH);}} else {if (theIncludedPids.contains(resourceId)) {ResourceMetadataKeyEnum.ENTRY_SEARCH_MODE.put((IAnyResource) resource, BundleEntrySearchModeEnum.INCLUDE.getCode());} else {ResourceMetadataKeyEnum.ENTRY_SEARCH_MODE.put((IAnyResource) resource, BundleEntrySearchModeEnum.MATCH.getCode());}}theResourceListToPopulate.set(index, resource);}}}	2
4894	public class A {private void addConfigDescription(@Nullable ConfigDescription configDescription) {if (configDescription != null) {try {configDescriptionProvider.add(bundle, configDescription);} catch (RuntimeException e) {}}}}	1
4895	"public class A {public void replay(RemoveTopicRecord record) {TopicControlInfo topic = topics.remove(record.topicId());if (topic == null) {throw new UnknownTopicIdException(""Can't find topic with ID "" + record.topicId() + "" to remove."");}topicsByName.remove(topic.name);configurationControl.deleteTopicConfigs(topic.name);for (PartitionControlInfo partition : topic.parts.values()) {for (int i = 0; i < partition.isr.length; i++) {brokersToIsrs.removeTopicEntryForBroker(topic.id, partition.isr[i]);}if (partition.leader != partition.preferredReplica()) {preferredReplicaImbalanceCount.decrement();}globalPartitionCount.decrement();}brokersToIsrs.removeTopicEntryForBroker(topic.id, NO_LEADER);controllerMetrics.setGlobalTopicsCount(topics.size());controllerMetrics.setGlobalPartitionCount(globalPartitionCount.get());controllerMetrics.setOfflinePartitionCount(brokersToIsrs.offlinePartitionCount());controllerMetrics.setPreferredReplicaImbalanceCount(preferredReplicaImbalanceCount.get());}}"	1
4896	"public class A {@Nullable@Overridepublic String read() throws Exception {if (index >= input.length || index >= max) {return null;}if (fail && index == 4) {synchronized (ExampleItemReader.class) {if (fail) {fail = false;index++;throw new RuntimeException(""Planned failure"");}}}return input[index++];}}"	2
4897	"public class A {private void attachShutDownHook() {Runtime.getRuntime().addShutdownHook(new Thread(""benchmark-cleaner"") {@Overridepublic void run() {if (!isCleaningDone) {close();}}});}}"	1
4898	public class A {@Overridepublic void onFailedConnection(Address address) {}}	1
4899	public class A {@Overridepublic void release() {try {if (hook != null) {Runtime.getRuntime().removeShutdownHook(hook);hook = null;}} catch (IllegalStateException e) {} catch (AccessControlException e) {}delete();}}	1
4900	public class A {private void assertScriptEquality(ASTJexlScript actualScript, String expected)throws ParseException {ASTJexlScript expectedScript = JexlASTHelper.parseJexlQuery(expected);Reason reason = new Reason();boolean equal = TreeEqualityVisitor.isEqual(expectedScript, actualScript, reason);if (!equal) {}assertTrue(reason.reason, equal);}}	4
4901	"public class A {public List<EnrichmentBase> enrichByEquivalenceValues(ReferenceValue referenceValue) {try {final ReferenceTerm referenceTerm =new ReferenceTermImpl(new URL(referenceValue.getReference()), Set.copyOf(referenceValue.getEntityTypes()));return persistentEntityResolver.resolveByUri(Set.of(referenceTerm)).getOrDefault(referenceTerm, Collections.emptyList());} catch (MalformedURLException e) {throw new IllegalArgumentException(""The input values are invalid"", e);}}}"	1
4902	"public class A {@Overridepublic void run() {NonNamespaceOperation<Node, NodeList, Resource<Node>> w =getEndpoint().getKubernetesClient().nodes();if (ObjectHelper.isNotEmpty(getEndpoint().getKubernetesConfiguration().getLabelKey())&& ObjectHelper.isNotEmpty(getEndpoint().getKubernetesConfiguration().getLabelValue())) {w.withLabel(getEndpoint().getKubernetesConfiguration().getLabelKey(),getEndpoint().getKubernetesConfiguration().getLabelValue());}if (ObjectHelper.isNotEmpty(getEndpoint().getKubernetesConfiguration().getResourceName())) {w.withName(getEndpoint().getKubernetesConfiguration().getResourceName());}watch =w.watch(new Watcher<Node>() {@Overridepublic void eventReceived(io.fabric8.kubernetes.client.Watcher.Action action, Node resource) {NodeEvent ne = new NodeEvent(action, resource);Exchange exchange = createExchange(false);exchange.getIn().setBody(ne.getNode());exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_EVENT_ACTION, ne.getAction());exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_EVENT_TIMESTAMP, System.currentTimeMillis());try {processor.process(exchange);} catch (Exception e) {getExceptionHandler().handleException(""Error during processing"", exchange, e);} finally {releaseExchange(exchange, false);}}@Overridepublic void onClose(WatcherException cause) {if (cause != null) {}}});}}"	1
4903	"public class A {private void incTrainTest() throws Exception {try {String inputPath = ""../../data/census/census_148d_train.dummy"";conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, inputPath);conf.set(AngelConf.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_TRAIN());conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + ""/model/deepFM"");conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + ""/model/deepFM_new"");GraphRunner runner = new GraphRunner();runner.train(conf);} catch (Exception x) {throw x;}}}"	1
4904	"public class A {public void processDataModel(final DataModel dataModel, final UpdateFormat updateFormat, final boolean enableVersioning)throws DMPControllerException {final Tuple<ConnectableObservable<GDMModel>,ConnectableObservable<org.dswarm.persistence.model.internal.Model>>connectableObservableTuple = doIngestInternal(dataModel, false, Schedulers.newThread());final ConnectableObservable<GDMModel> connectableSource = connectableObservableTuple.v1();final ConnectableObservable<org.dswarm.persistence.model.internal.Model> connectableResult =connectableObservableTuple.v2();final ConnectableObservable<org.dswarm.persistence.model.internal.Model> connectableResult2 =connectableResult.onBackpressureBuffer(100000).publish();connectableResult.connect();try {final ConnectableObservable<Response> writeResponse =internalServiceFactory.getInternalGDMGraphService().updateObject(dataModel.getUuid(),connectableResult2.observeOn(GDM_SCHEDULER).onBackpressureBuffer(100000),updateFormat,enableVersioning).onBackpressureBuffer(100000).publish();connectableResult2.connect();writeResponse.ignoreElements().cast(Void.class).doOnError(e -> {});final BlockingObservable<Response> blockingObservable = writeResponse.toBlocking();writeResponse.connect();connectableSource.connect();blockingObservable.firstOrDefault(null);} catch (final DMPPersistenceException e) {final String message =String.format(""couldn't persist the converted data of data model '%s'"", dataModel.getUuid());throw new DMPControllerException(String.format(""%s %s"", message, e.getMessage()), e);}}}"	4
4905	public class A {private void registerMBeanWithServer(Object obj, ObjectName name, boolean forceRegistration)throws JMException {boolean exists = isRegistered(name);if (exists) {if (forceRegistration) {server.unregisterMBean(name);} else {}}ObjectInstance instance = null;if (forceRegistration || !exists) {instance = server.registerMBean(obj, name);}if (instance != null) {ObjectName registeredName = instance.getObjectName();mbeansRegistered.put(name, registeredName);}}}	4
4906	public class A {@Overridepublic void destroy() {if (this.deregisterJDBCDriver) {cleanupDrivers(this.providedDrivers);} else {}}}	1
4907	public class A {public void setSourceHelper(WMSSourceHelper source) {this.sourceHelper = source;if (concurrency != null) {this.sourceHelper.setConcurrency(concurrency);} else {this.sourceHelper.setConcurrency(32);}if (backendTimeout != null) {this.sourceHelper.setBackendTimeout(backendTimeout);} else {this.sourceHelper.setBackendTimeout(120);}}}	1
4908	"public class A {public boolean doPairing() throws InterruptedException {ContentResponse contentResponse;try {String publicCert = getCertFromSslContextFactory();Map<String, String> items = new HashMap<>();items.put(""@type"", ""client"");items.put(""id"", BoschSslUtil.getBoschShcClientId());items.put(""name"", ""oss_OpenHAB_Binding"");items.put(""primaryRole"", ""ROLE_RESTRICTED_CLIENT"");items.put(""certificate"",""-----BEGIN CERTIFICATE-----\r"" + publicCert + ""\r-----END CERTIFICATE-----"");String url = this.getPairingUrl();Request request =this.createRequest(url, HttpMethod.POST, items).header(""Systempassword"",Base64.getEncoder().encodeToString(this.systemPassword.getBytes(StandardCharsets.UTF_8)));contentResponse = request.send();if (201 == contentResponse.getStatus()) {return true;} else {return false;}} catch (TimeoutException| CertificateEncodingException| KeyStoreException| NullPointerException e) {return false;} catch (ExecutionException e) {return false;}}}"	9
4909	public class A {private synchronized void safeClose() {if (isClosed) {return;}try {onClose.run();isClosed = true;} catch (Exception e) {}}}	2
4910	"public class A {@Overridepublic FSDataInputStream open(final Path f, final int bufferSize) throws IOException {final FileStatus fileStatus = getFileStatus(f);if (fileStatus.isDirectory()) {throw new FileNotFoundException(""Can't open "" + f + "" because it is a directory"");}return new FSDataInputStream(new OBSInputStream(bucket,OBSCommonUtils.pathToKey(this, f),fileStatus.getLen(),obs,statistics,readAheadRange,this));}}"	1
4911	public class A {@Overridepublic void updateChannels(ExtendedAuxSensorStatus status) {final OmnilinkBridgeHandler bridgeHandler = getOmnilinkBridgeHandler();if (bridgeHandler != null) {Optional<TemperatureFormat> temperatureFormat = bridgeHandler.getTemperatureFormat();if (temperatureFormat.isPresent()) {updateState(CHANNEL_AUX_TEMP,new QuantityType<>(temperatureFormat.get().omniToFormat(status.getTemperature()),temperatureFormat.get().getFormatNumber() == 1? ImperialUnits.FAHRENHEIT: SIUnits.CELSIUS));updateState(CHANNEL_AUX_LOW_SETPOINT,new QuantityType<>(temperatureFormat.get().omniToFormat(status.getCoolSetpoint()),temperatureFormat.get().getFormatNumber() == 1? ImperialUnits.FAHRENHEIT: SIUnits.CELSIUS));updateState(CHANNEL_AUX_HIGH_SETPOINT,new QuantityType<>(temperatureFormat.get().omniToFormat(status.getHeatSetpoint()),temperatureFormat.get().getFormatNumber() == 1? ImperialUnits.FAHRENHEIT: SIUnits.CELSIUS));} else {}} else {}}}	2
4912	"public class A {public Object lookup(String serviceName) {if (serviceName.equals(""jndi/serviceA"")) {return new ServiceImpl(""jndi/serviceA"");} else if (serviceName.equals(""jndi/serviceB"")) {return new ServiceImpl(""jndi/serviceB"");} else {return null;}}}"	2
4913	"public class A {@SuppressWarnings(""deprecation"")@Testpublic void testAddNewLocationDefinition() {String yaml =Joiner.on(""\n"").join(ImmutableList.of(""brooklyn.catalog:"",""  symbolicName: "" + locationName,""  version: "" + locationVersion,"""",""brooklyn.locations:"",""- type: "" + ""aws-ec2:us-east-1"",""  brooklyn.config:"",""    identity: bob"",""    credential: CR3dential""));ClientResponse response = client().resource(""/v1/catalog"").post(ClientResponse.class, yaml);assertEquals(response.getStatus(), Response.Status.CREATED.getStatusCode());URI addedCatalogItemUri = response.getLocation();CatalogLocationSummary locationItem =client().resource(""/v1/catalog/locations/"" + locationName + ""/"" + locationVersion).get(CatalogLocationSummary.class);LocationSummary locationSummary =client().resource(URI.create(""/v1/locations/"" + locationName + ""/"")).get(LocationSummary.class);Assert.assertEquals(locationSummary.getSpec(), ""brooklyn.catalog:"" + locationName + "":"" + locationVersion);JcloudsLocation l =(JcloudsLocation) getManagementContext().getLocationRegistry().resolve(locationName);Assert.assertEquals(l.getProvider(), ""aws-ec2"");Assert.assertEquals(l.getRegion(), ""us-east-1"");Assert.assertEquals(l.getIdentity(), ""bob"");Assert.assertEquals(l.getCredential(), ""CR3dential"");}}"	3
4914	"public class A {@Overridepublic void initialize() {try {this.jaxbContext = JAXBContext.newInstance(entityClass);} catch (JAXBException e) {throw new IllegalStateException(""Unable to create a new JAXB instance"", e);}final Collection<T> loadedFiles = loadFiles();for (T type : loadedFiles) {collection.put(type.getId(), type);}postInitiate();}}"	3
4915	public class A {private LoadingCache<String, Map<String, Integer>> initCache(CapacityLimitDB limitDB) {return CacheBuilder.newBuilder().expireAfterAccess(120, TimeUnit.SECONDS).build(new CacheLoader<String, Map<String, Integer>>() {public Map<String, Integer> load(String name) {return limitDB.getAll().stream().collect(Collectors.toMap(CapacityLimit::getName, CapacityLimit::getValue));}});}}	1
4916	"public class A {private void restoreAccessPoliciesSnapshot(List<AccessPolicy> accessPoliciesSnapshot) {List<AccessPolicy> currentAccessPolicies = createAccessPoliciesSnapshot();Set<String> policiesToRestore =accessPoliciesSnapshot.stream().map(AccessPolicy::getIdentifier).collect(Collectors.toSet());Set<AccessPolicy> policiesToDelete =currentAccessPolicies.stream().filter(p -> !policiesToRestore.contains(p.getIdentifier())).collect(Collectors.toSet());for (AccessPolicy originalPolicy : accessPoliciesSnapshot) {Response getCurrentPolicy =client.target(createURL(""policies/"" + originalPolicy.getIdentifier())).request().header(""Authorization"", ""Bearer "" + adminAuthToken).get(Response.class);if (getCurrentPolicy.getStatus() == 200) {client.target(createURL(""policies/"" + originalPolicy.getIdentifier())).request().header(""Authorization"", ""Bearer "" + adminAuthToken).put(Entity.entity(originalPolicy, MediaType.APPLICATION_JSON));} else {client.target(createURL(""policies"")).request().header(""Authorization"", ""Bearer "" + adminAuthToken).post(Entity.entity(originalPolicy, MediaType.APPLICATION_JSON));}}for (AccessPolicy policyToDelete : policiesToDelete) {try {final RevisionInfo revisionInfo = policyToDelete.getRevision();final Long version = revisionInfo == null ? 0 : revisionInfo.getVersion();client.target(createURL(""policies/"" + policyToDelete.getIdentifier())).queryParam(""version"", version.longValue()).request().header(""Authorization"", ""Bearer "" + adminAuthToken).delete();} catch (Exception e) {}}}}"	1
4917	public class A {public static void main(String[] args) throws Exception {int count = -1;Stopwatch sw = Stopwatch.createStarted();while (++count < 100) {TestNG testNG = new TestNG();testNG.setTestClasses(new Class[] {ElectPrimaryTest.class});testNG.addListener((ITestNGListener) new LoggingVerboseReporter());FailedReporter failedReporter = new FailedReporter();testNG.addListener((ITestNGListener) failedReporter);testNG.run();if (!failedReporter.getFailedTests().isEmpty()) {System.exit(1);}}}}	3
4918	"public class A {@Overridepublic void beforeAll(ExtensionContext context) throws Exception {if (context.getElement().isPresent()) {AnnotatedElement e = context.getElement().get();Description description = Description.createSuiteDescription(""LDAP"", e.getAnnotations());directoryService = DSAnnotationProcessor.getDirectoryService(description);DSAnnotationProcessor.applyLdifs(description, directoryService);ldapServer = ServerAnnotationProcessor.createLdapServer(description, directoryService);}}}"	2
4919	public class A {public UnitDefinition deriveUnit() throws SBMLException {MathContainer container = getParentSBMLObject();int level = -1;int version = -1;if (container != null) {level = container.getLevel();version = container.getVersion();}UnitsCompiler compiler = null;if (isSetParentSBMLObject()) {Model model = getParentSBMLObject().getModel();compiler = new UnitsCompiler(model);}if (compiler == null) {compiler = new UnitsCompiler(level, version);}UnitDefinition derivedUnit = compile(compiler).getUnits();UnitDefinition simplifiedUnit = derivedUnit.simplify();if (logger.isDebugEnabled()) {}return simplifiedUnit;}}	2
4920	"public class A {private void negotiatePeek() throws SocketException, IOException {try {this.socket.setSoTimeout(this.transportContext.getConfig().getConnTimeout());if (peekKey() == null) throw new IOException(""transport closed in negotiate"");} finally {this.socket.setSoTimeout(this.transportContext.getConfig().getSoTimeout());}int size = Encdec.dec_uint16be(this.sbuf, 2) & 0xFFFF;if (size < 33 || (4 + size) > this.sbuf.length) {throw new IOException(""Invalid payload size: "" + size);}int hdrSize = this.smb2 ? Smb2Constants.SMB2_HEADER_LENGTH : SMB1_HEADER_LENGTH;readn(this.in, this.sbuf, 4 + hdrSize, size - hdrSize);}}"	1
4921	public class A {private void forwardRpcRequestToDeviceActor(ToDeviceRpcRequest request, Consumer<FromDeviceRpcResponse> responseConsumer) {UUID requestId = request.getId();toDeviceRpcRequests.put(requestId, responseConsumer);sendRpcRequestToDevice(request);scheduleTimeout(request, requestId);}}	1
4922	"public class A {private void encryptVPNPassword(Connection conn) {List<PreparedStatement> pstmt2Close = new ArrayList<PreparedStatement>();PreparedStatement pstmt = null;ResultSet rs = null;try {pstmt = conn.prepareStatement(""select id, password from `cloud`.`vpn_users`"");pstmt2Close.add(pstmt);rs = pstmt.executeQuery();while (rs.next()) {long id = rs.getLong(1);String password = rs.getString(2);String encryptedpassword = DBEncryptionUtil.encrypt(password);pstmt = conn.prepareStatement(""update `cloud`.`vpn_users` set password=? where id=?"");pstmt2Close.add(pstmt);if (encryptedpassword == null) {pstmt.setNull(1, Types.VARCHAR);} else {pstmt.setBytes(1, encryptedpassword.getBytes(""UTF-8""));}pstmt.setLong(2, id);pstmt.executeUpdate();}} catch (SQLException e) {throw new CloudRuntimeException(""Unable encrypt vpn_users password "", e);} catch (UnsupportedEncodingException e) {throw new CloudRuntimeException(""Unable encrypt vpn_users password "", e);} finally {TransactionLegacy.closePstmts(pstmt2Close);}}}"	2
4923	public class A {public void attachDirty(FilterCol instance) {try {sessionFactory.getCurrentSession().saveOrUpdate(instance);} catch (RuntimeException re) {throw re;}}}	3
4924	public class A {@Overridepublic Class<?> getInterfaceClass()throws RulesInstantiationException, ProjectResolvingException, ClassNotFoundException {if (interfaceClass != null) {return interfaceClass;}if (generatedInterfaceClass != null) {return generatedInterfaceClass;}generatedInterfaceClass = getRulesInstantiationStrategy().getInstanceClass();return generatedInterfaceClass;}}	1
4925	public class A {@Overridepublic void onMessage(final Message message) {try {final ObjectMessage objectMessage = (ObjectMessage) message;final String messageType = objectMessage.getJMSType();final RequestMessage requestMessage = (RequestMessage) objectMessage.getObject();this.messageProcessor.processMessage(requestMessage, messageType);} catch (final JMSException e) {} catch (final UnknownMessageTypeException e) {}}}	3
4926	"public class A {protected String getDbScriptLocation(String databaseType) {String scriptName = databaseType + "".sql"";if (log.isDebugEnabled()) {}return setupSQLScriptBaseLocation.replaceFirst(""DBTYPE"", databaseType) + scriptName;}}"	1
4927	"public class A {public static Map<String, List<IAMCertificateVH>> fetchIAMCertificateInfo(BasicSessionCredentials temporaryCredentials,String skipRegions,String account,String accountName) {Map<String, List<IAMCertificateVH>> iamCertificateVH = new LinkedHashMap<>();AmazonIdentityManagement amazonIdentityManagement;List<ServerCertificateMetadata> listServerCertificatesMetadata = new ArrayList<>();String serverCertificateName = null;String arn = null;Date expiryDate = null;String expPrefix =InventoryConstants.ERROR_PREFIX_CODE+ account+ ""\"",\""Message\"": \""Exception in fetching info for resource \"" ,\""type\"":""+ "" \""IAMCertificate\"""";try {amazonIdentityManagement =AmazonIdentityManagementClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(temporaryCredentials)).withRegion(InventoryConstants.REGION_US_WEST_2).build();listServerCertificatesMetadata =amazonIdentityManagement.listServerCertificates(new ListServerCertificatesRequest()).getServerCertificateMetadataList();List<IAMCertificateVH> iamCerttList = new ArrayList<>();if (!CollectionUtils.isEmpty(listServerCertificatesMetadata)) {for (ServerCertificateMetadata serverCertIAMMetadata : listServerCertificatesMetadata) {serverCertificateName = serverCertIAMMetadata.getServerCertificateName();arn = serverCertIAMMetadata.getArn();expiryDate = serverCertIAMMetadata.getExpiration();IAMCertificateVH iamCertVH = new IAMCertificateVH();iamCertVH.setServerCertificateName(serverCertificateName);iamCertVH.setArn(arn);iamCertVH.setExpiryDate(expiryDate);iamCerttList.add(iamCertVH);}iamCertificateVH.put(account + delimiter + accountName, iamCerttList);} else {}} catch (Exception e) {ErrorManageUtil.uploadError(account, """", ""IAMCertificate"", e.getMessage());}return iamCertificateVH;}}"	3
4928	"public class A {public SessionId generateAuthenticatedSessionId(HttpServletRequest httpRequest, String userDn, Map<String, String> sessionIdAttributes)throws InvalidSessionStateException {SessionId sessionId =generateSessionId(userDn, new Date(), SessionIdState.AUTHENTICATED, sessionIdAttributes, true);if (externalApplicationSessionService.isEnabled()) {String userName = sessionId.getSessionAttributes().get(Constants.AUTHENTICATED_USER);boolean externalResult =externalApplicationSessionService.executeExternalStartSessionMethods(httpRequest, sessionId);if (!externalResult) {reinitLogin(sessionId, true);throw new InvalidSessionStateException(""Session creation is prohibited by external session script!"");}externalEvent(new SessionEvent(SessionEventType.AUTHENTICATED, sessionId).setHttpRequest(httpRequest));}return sessionId;}}"	1
4929	public class A {public org.talend.mdm.webservice.WSViewPK putView(org.talend.mdm.webservice.WSPutView arg0) {System.out.println(arg0);try {org.talend.mdm.webservice.WSViewPK _return = null;return _return;} catch (java.lang.Exception ex) {ex.printStackTrace();throw new RuntimeException(ex);}}}	1
4930	public class A {public static Set<String> getJcrRepositoryNames() {try {return repositoriesContainer.getRepositoryNames(Collections.unmodifiableMap(factoryParams));} catch (RepositoryException e) {return Collections.emptySet();}}}	1
4931	public class A {@Overridepublic boolean handleRequest(MessageContext messageContext, Object endpoint)throws IOException, SAXException, TransformerException {if (validateRequest) {Source requestSource = getValidationRequestSource(messageContext.getRequest());if (requestSource != null) {SAXParseException[] errors = validator.validate(requestSource, errorHandler);if (!ObjectUtils.isEmpty(errors)) {return handleRequestValidationErrors(messageContext, errors);} else if (logger.isDebugEnabled()) {}}}return true;}}	1
4932	public class A {private void endTransaction() {if (currentTransaction != null) {try {currentTransaction.success();currentTransaction.close();} catch (Throwable t) {} finally {currentTransaction = null;}}}}	1
4933	public class A {@Overrideprotected void finalize() throws Throwable {try {tryDestroy();} catch (Exception e) {}super.finalize();}}	1
4934	public class A {public <OUTPUT, THROWABLE extends Throwable> CompletableFuture<OUTPUT> submit(CheckedSupplier<OUTPUT, THROWABLE> task,ExecutorService executor,Function<Throwable, Throwable> newThrowable) {final CompletableFuture<OUTPUT> f = new CompletableFuture<>();final Runnable runnable =LogUtils.newRunnable(LOG,() -> {try {f.complete(task.get());} catch (Throwable e) {f.completeExceptionally(newThrowable.apply(e));}pollAndSubmit(executor);},task::toString);offerAndSubmit(runnable, executor);return f;}}	1
4935	"public class A {protected String post(URL url, Map<String, String> headers, String data) throws IOException {HttpURLConnection connection = (HttpURLConnection) url.openConnection();if (headers != null) {for (Map.Entry<String, String> entry : headers.entrySet()) {connection.addRequestProperty(entry.getKey(), entry.getValue());}}connection.addRequestProperty(""Accept-Encoding"", ""gzip"");connection.setRequestMethod(""POST"");connection.setDoOutput(true);connection.connect();OutputStream out = null;try {out = connection.getOutputStream();out.write(data.getBytes());out.flush();int statusCode = connection.getResponseCode();if (statusCode != HttpURLConnection.HTTP_OK) {}} finally {if (out != null) {out.close();}}String responseEncoding = connection.getHeaderField(""Content-Encoding"");responseEncoding = (responseEncoding == null ? """" : responseEncoding.trim());ByteArrayOutputStream bos = new ByteArrayOutputStream();InputStream in = connection.getInputStream();try {in = connection.getInputStream();if (""gzip"".equalsIgnoreCase(responseEncoding)) {in = new GZIPInputStream(in);}in = new BufferedInputStream(in);byte[] buff = new byte[1024];int n;while ((n = in.read(buff)) > 0) {bos.write(buff, 0, n);}bos.flush();bos.close();} finally {if (in != null) {in.close();}}return bos.toString();}}"	1
4936	public class A {private Map<KeyRange, ServerName> normalizeKeyBounds(List<HRegionLocation> locations) {HRegionLocation nullStart = null;HRegionLocation nullEnd = null;ImmutableMap.Builder<KeyRange, ServerName> b = ImmutableMap.builder();for (HRegionLocation location : locations) {HRegionInfo regionInfo = location.getRegionInfo();ServerName serverName = location.getServerName();byte startKey[] = regionInfo.getStartKey();byte endKey[] = regionInfo.getEndKey();if (0 == startKey.length) {startKey = null;}if (0 == endKey.length) {endKey = null;}if (null == startKey && null == endKey) {Preconditions.checkState(1 == locations.size());return b.put(new KeyRange(FOUR_ZERO_BYTES, FOUR_ZERO_BYTES), serverName).build();} else if (null == startKey) {Preconditions.checkState(null == nullStart);nullStart = location;StaticBuffer endBuf = StaticArrayBuffer.of(zeroExtend(endKey));b.put(new KeyRange(FOUR_ZERO_BYTES, endBuf), serverName);} else if (null == endKey) {Preconditions.checkState(null == nullEnd);nullEnd = location;b.put(new KeyRange(StaticArrayBuffer.of(zeroExtend(startKey)), FOUR_ZERO_BYTES), serverName);} else {Preconditions.checkState(null != startKey);Preconditions.checkState(null != endKey);StaticBuffer startBuf = StaticArrayBuffer.of(zeroExtend(startKey));StaticBuffer endBuf = StaticArrayBuffer.of(zeroExtend(endKey));KeyRange kr = new KeyRange(startBuf, endBuf);b.put(kr, serverName);}}Preconditions.checkState(!(null == nullStart ^ null == nullEnd));Map<KeyRange, ServerName> result = b.build();for (KeyRange kr : result.keySet()) {Preconditions.checkState(4 <= kr.getStart().length());Preconditions.checkState(4 <= kr.getEnd().length());}return result;}}	6
4937	public class A {@Overridepublic IApsEntity extractEntityType(String typeCode,Class entityClass,String configItemName,IEntityTypeDOM entityTypeDom,String entityManagerName,IApsEntityDOM entityDom)throws ApsSystemException {String xml = this.getConfigManager().getConfigItem(configItemName);return entityTypeDom.extractEntityType(typeCode, xml, entityClass, entityDom, entityManagerName);}}	1
4938	public class A {@Overridepublic void close() {try {xceiverClientManager.close();} catch (Exception ex) {}}}	1
4939	public class A {public void attachClean(MbPrioritaet instance) {try {sessionFactory.getCurrentSession().lock(instance, LockMode.NONE);} catch (RuntimeException re) {throw re;}}}	3
4940	public class A {@Overridepublic CommerceWishListItem findByPrimaryKey(Serializable primaryKey)throws NoSuchWishListItemException {CommerceWishListItem commerceWishListItem = fetchByPrimaryKey(primaryKey);if (commerceWishListItem == null) {if (_log.isDebugEnabled()) {}throw new NoSuchWishListItemException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return commerceWishListItem;}}	1
4941	public class A {public void configureResources() throws Exception {if (!conf.isConfigureResources()) {return;}String tableName = conf.getTableName();configureTable(tableName);}}	1
4942	public class A {private List<URI> findAllStaticallyAssignedComputeElements() {Collection<String> staticallyAssignedComputeElementUriStrings = new HashSet<String>();List<URI> computeVirtualPoolUris = _dbClient.queryByType(ComputeVirtualPool.class, true);Collection<ComputeVirtualPool> computeVirtualPools =_dbClient.queryObject(ComputeVirtualPool.class, computeVirtualPoolUris);for (ComputeVirtualPool computeVirtualPool : computeVirtualPools) {if (!computeVirtualPool.getUseMatchedElements()) {if (computeVirtualPool.getMatchedComputeElements() != null) {staticallyAssignedComputeElementUriStrings.addAll(computeVirtualPool.getMatchedComputeElements());}}}return toUriList(staticallyAssignedComputeElementUriStrings);}}	3
4943	"public class A {protected void multiAllelicKnockouts(String sample,Map<String, KnockoutGene> knockoutGenes,Query query,Predicate<String> ctFilter,Predicate<String> biotypeFilter,Predicate<String> geneFilter)throws Exception {query =new Query(query).append(VariantQueryParam.INCLUDE_SAMPLE_DATA.key(), includeSampleData).append(VariantQueryParam.GENOTYPE.key(), sample + IS + ""1/2"");Map<String, KnockoutVariant> variants = new HashMap<>();int numVariants =iterate(query,""Read "" + KnockoutVariant.KnockoutType.HET_ALT + "" variants: "",variant -> {Variant secVar = getSecondaryVariant(variant);StudyEntry studyEntry = variant.getStudies().get(0);SampleEntry sampleEntry = studyEntry.getSample(0);FileEntry fileEntry = studyEntry.getFiles().get(sampleEntry.getFileIndex());KnockoutVariant knockoutVariant =new KnockoutVariant(variant,variant.getAnnotation().getId(),sampleEntry.getData().get(0),KnockoutVariant.getDepth(studyEntry, fileEntry, sampleEntry),fileEntry.getData().get(StudyEntry.FILTER),fileEntry.getData().get(StudyEntry.QUAL),studyEntry.getStats(StudyEntry.DEFAULT_COHORT),KnockoutVariant.KnockoutType.HET_ALT,null,variant.getAnnotation().getPopulationFrequencies(),KnockoutVariant.getClinicalSignificance(variant.getAnnotation()));if (variants.put(variant.toString(), knockoutVariant) == null) {if (variant.overlapWith(secVar, true)) {variants.put(secVar.toString(), new KnockoutVariant());}} else {KnockoutVariant secKnockoutVar = variants.get(secVar.toString());for (ConsequenceType consequenceType :variant.getAnnotation().getConsequenceTypes()) {if (validCt(consequenceType, ctFilter, biotypeFilter, geneFilter)) {addGene(variant,knockoutVariant.getGenotype(),knockoutVariant.getDepth(),knockoutVariant.getFilter(),knockoutVariant.getQual(),consequenceType,knockoutGenes,KnockoutVariant.KnockoutType.HET_ALT,knockoutVariant.getDbSnp(),knockoutVariant.getPopulationFrequencies(),knockoutVariant.getClinicalSignificance(),knockoutVariant.getStats());addGene(secVar,secKnockoutVar.getGenotype(),secKnockoutVar.getDepth(),secKnockoutVar.getFilter(),secKnockoutVar.getQual(),consequenceType,knockoutGenes,KnockoutVariant.KnockoutType.HET_ALT,secKnockoutVar.getDbSnp(),secKnockoutVar.getPopulationFrequencies(),secKnockoutVar.getClinicalSignificance(),secKnockoutVar.getStats());}}}});}}"	1
4944	"public class A {@Overridepublic boolean handle(ApiRequest request) throws IOException {String id = request.getId();if (!FILENAME.equals(id)) {return false;}String pem = null;for (Map.Entry<String, PublicKey> entry : hostApiService.getPublicKeys().entrySet()) {try {pem = SshKeyGen.writePublicKey(entry.getValue());break;} catch (Exception e) {}}if (pem == null) {return false;}byte[] content = pem.getBytes(""UTF-8"");HttpServletResponse response = request.getServletContext().getResponse();response.getOutputStream().write(pem.getBytes(""UTF-8""));response.setContentLength(content.length);response.setContentType(""application/octet-stream"");response.setHeader(""Content-Disposition"", ""attachment; filename="" + FILENAME);response.setHeader(""Cache-Control"", ""private"");response.setHeader(""Pragma"", ""private"");response.setHeader(""Expires"", ""Wed 24 Feb 1982 18:42:00 GMT"");response.getOutputStream().write(content);return true;}}"	1
4945	public class A {@Overridepublic void operationFinished(Object ctx, Void resultOfOperation) {rl.offer();if (logger.isDebugEnabled()) {}long latencyMillis = MathUtils.now() - startTimeMillis;stat.requestComplete(TimeUnit.MILLISECONDS.toMicros(latencyMillis));}}	1
4946	"public class A {@Overridepublic Object apply(final ActionContext ctx, final Object caller, final Object[] sources)throws FrameworkException {try {assertArrayHasMinLengthAndAllElementsNotNull(sources, 2);Date date = null;if (sources[0] instanceof Date) {date = (Date) sources[0];} else if (sources[0] instanceof Number) {date = new Date(((Number) sources[0]).longValue());} else {try {date = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ssZ"").parse(sources[0].toString());} catch (ParseException ex) {return """";}}final Calendar givenDate = Calendar.getInstance();givenDate.setTime(date);givenDate.add(Calendar.YEAR, getIntParameter(sources, 1, ""year""));givenDate.add(Calendar.MONTH, getIntParameter(sources, 2, ""month""));givenDate.add(Calendar.DAY_OF_YEAR, getIntParameter(sources, 3, ""day""));givenDate.add(Calendar.HOUR_OF_DAY, getIntParameter(sources, 4, ""hour""));givenDate.add(Calendar.MINUTE, getIntParameter(sources, 5, ""minute""));givenDate.add(Calendar.SECOND, getIntParameter(sources, 6, ""second""));return givenDate.getTime();} catch (ArgumentNullException pe) {return """";} catch (ArgumentCountException pe) {logParameterError(caller, sources, pe.getMessage(), ctx.isJavaScriptContext());return usage(ctx.isJavaScriptContext());}}}"	1
4947	public class A {public void removeMapping(T key, WebSocketSession session) {synchronized (this) {Set<WebSocketSession> sessions = mapping.get(key);if (sessions != null) {sessions.remove(session);if (sessions.isEmpty()) mapping.remove(sessions);}}}}	1
4948	public class A {private void setNodeIdentifier(int identifier) {thisNode.setNodeIdentifier(identifier);File idFile = new File(NODE_IDENTIFIER_FILE_NAME);idFile.getParentFile().mkdirs();try (BufferedWriter writer = new BufferedWriter(new FileWriter(idFile))) {writer.write(String.valueOf(identifier));} catch (IOException e) {}}}	2
4949	public class A {public final ComponentTypesHash getComponentTypes() {String path = COMP_TYPES_PATH;Response resp = getObjectToSystemMng(path);if (resp == null) {return null;}try {return resp.getBody(ComponentTypesHash.class);} catch (Exception e) {return null;}}}	2
4950	public class A {@Overridepublic void save(Note note, AuthenticationInfo subject) throws IOException {String[] pathArray = toPathArray(note.getPath(), false);try (AutoLock autoLock = lock.lockForWrite()) {String pId = completeFolder(pathArray);saveNote(note);saveNotePath(note.getId(), note.getName(), pId);}}}	1
4951	public class A {protected void doDependency(Index index,final EntryStatistics es[],final IterablePosting ips[],ResultSet rs,final double[] phraseTermWeights,boolean SD)throws IOException {final int numPhraseTerms = phraseTerms.length;final boolean[] postingListFinished = new boolean[numPhraseTerms];for (int i = 0; i < numPhraseTerms; i++) {postingListFinished[i] = ips[i].next() == IterablePosting.EOL;}this.setCollectionStatistics(index.getCollectionStatistics(), index);determineGlobalStatistics(phraseTerms, es, SD);final int[] docids = rs.getDocids();final double[] scores = rs.getScores();final short[] occurrences = rs.getOccurrences();int altered = 0;MultiSort.ascendingHeapSort(docids, scores, occurrences, docids.length);final int docidsLength = docids.length;boolean allZero = true;for (int i = 0; i < docidsLength; i++) {if (scores[i] != 0.0d) allZero = false;scores[i] = w_t * scores[i];}DOC:for (int k = 0; k < docidsLength; k++) {int i = -1;int targetDocId = docids[k];if (!allZero && scores[k] <= 0.0d) continue DOC;boolean[] okToUse = new boolean[numPhraseTerms];TERM:for (IterablePosting ip : ips) {i++;if (postingListFinished[i]) {okToUse[i] = false;continue TERM;}okToUse[i] = true;if (ip == null) {okToUse[i] = false;continue TERM;}while (ip.getId() < targetDocId) {if (ip.next() == IterablePosting.EOL) {okToUse[i] = false;postingListFinished[i] = true;continue TERM;}}if (ip.getId() > targetDocId) {okToUse[i] = false;continue TERM;}okToUse[i] = true;}if (countTrue(okToUse) < 2) {continue DOC;}altered++;scores[k] += calculateDependence(ips, okToUse, phraseTermWeights, SD);}for (IterablePosting ip : ips) {if (ip != null) ip.close();}}}	1
4952	public class A {private void parseSaltLength(PasswordSaltExtensionMessage msg) {msg.setSaltLength(parseIntField(ExtensionByteLength.PASSWORD_SALT));}}	1
4953	"public class A {@Overrideprotected NextAction update(StateExecution execution, String state) {Random random = ThreadLocalRandom.current();if (random.nextDouble() < ERROR_FRACTION / 2.0) {throw new RuntimeException(""error at state "" + state + "" before new state is set"");}NextAction nextAction = super.update(execution, state);if (random.nextDouble() < ERROR_FRACTION / 2.0) {throw new RuntimeException(""error at state "" + state + "" after new state is set"");}return nextAction;}}"	2
4954	"public class A {@Testpublic void testIterator() {final int nRecord = 4345;final int nCut = 2000;final int nBatch = 60;final BlockingQueue<String> input = new LinkedBlockingQueue<>();final RecordConsumeBlockingQueueController inputController =RecordConsumeBlockingQueueController.getQueueController(new InputConverterUnitTest(), input, nBatch);new Thread(new Runnable() {@Overridepublic void run() {try {for (int i = 1; i <= nRecord; i++) {input.put(""test"");if (i % nCut == 0) {input.put(InputConverterUnitTest.CUT_ROW);}}input.put(InputConverterUnitTest.END_ROW);} catch (InterruptedException e) {}}}).start();final AtomicInteger nRecordConsumed = new AtomicInteger(0);final AtomicInteger nSplit = new AtomicInteger(0);while (true) {if (inputController.ifEnd()) {break;}nSplit.incrementAndGet();Thread consumer =new Thread(new Runnable() {@Overridepublic void run() {while (inputController.hasNext()) {inputController.next();nRecordConsumed.incrementAndGet();}System.out.println(nRecordConsumed.get()+ "" records consumed when finished split ""+ nSplit.get());}});consumer.start();try {consumer.join();} catch (InterruptedException e) {}}Assert.assertEquals(nRecord, nRecordConsumed.get());}}"	2
4955	public class A {@Overridepublic synchronized void stop() {counter.stop();try {closeWriter();commitTransaction();} catch (EventDeliveryException ex) {rollbackTransaction();}super.stop();}}	3
4956	"public class A {@Testpublic void testInvalidConfigStatus() {ThingMock t = new ThingMock();HashMap<String, Object> properties = new HashMap<String, Object>();properties.put(""sensorid"", -1);t.setConfiguration(properties);PMHandlerExtension pmHandler = new PMHandlerExtension(t);pmHandler.initialize();int retryCount = 0;while (pmHandler.getLifecycleStatus() != LifecycleStatus.RUNNING && retryCount < 20) {try {Thread.sleep(500);retryCount++;} catch (InterruptedException e) {}}assertEquals(ConfigStatus.SENSOR_ID_NEGATIVE,pmHandler.getConfigStatus(),""Handler Configuration status"");}}"	2
4957	public class A {public static void prepareLogContext() {Map<String, String> registered = new TreeMap<>();Properties properties = System.getProperties();for (Map.Entry<Object, Object> entry : properties.entrySet()) {if ((entry.getKey() instanceof String) == false|| (entry.getValue() instanceof String) == false) {continue;}String key = (String) entry.getKey();if (key.startsWith(LOG_CONTEXT_PREFIX) == false) {continue;}String value = (String) entry.getValue();String name = key.substring(LOG_CONTEXT_PREFIX.length());MDC.put(name, value);registered.put(name, value);}}}	1
4958	public class A {public void setHireDate(NSTimestamp value) {if (_Employee.LOG.isDebugEnabled()) {}takeStoredValueForKey(value, _Employee.HIRE_DATE_KEY);}}	1
4959	"public class A {private boolean isContentOverflow(byte[] content, String resPath) throws SQLException {if (kylinConfig.isJsonAlwaysSmallCell() && isJsonMetadata(resPath)) {int smallCellMetadataWarningThreshold = kylinConfig.getSmallCellMetadataWarningThreshold();int smallCellMetadataErrorThreshold = kylinConfig.getSmallCellMetadataErrorThreshold();if (content.length > smallCellMetadataWarningThreshold) {}if (content.length > smallCellMetadataErrorThreshold) {throw new SQLException(new IllegalArgumentException(""A JSON metadata entry's size is not supposed to exceed""+ "" kylin.metadata.jdbc.small-cell-meta-size-error-threshold(""+ smallCellMetadataErrorThreshold+ ""), resPath: ""+ resPath+ "", actual size: ""+ content.length));}return false;}int maxSize = kylinConfig.getJdbcResourceStoreMaxCellSize();if (content.length > maxSize) return true;else return false;}}"	1
4960	"public class A {public static Mat loadMat(String infile) {String tryfile = infile;if (tryfile.startsWith(""http"")) {tryfile = getImageFromUrl(tryfile);}File f = new File(tryfile);if (f.exists()) {return read(tryfile);}tryfile = Service.getResourceDir(OpenCV.class, infile);f = new File(tryfile);if (f.exists()) {return read(tryfile);}tryfile =""src""+ File.separator+ ""main""+ File.separator+ ""resources""+ File.separator+ ""resource""+ File.separator+ OpenCV.class.getSimpleName()+ File.separator+ infile;f = new File(tryfile);if (f.exists()) {return read(tryfile);}tryfile =""src""+ File.separator+ ""test""+ File.separator+ ""resources""+ File.separator+ OpenCV.class.getSimpleName()+ File.separator+ infile;f = new File(tryfile);if (f.exists()) {return read(tryfile);}return null;}}"	1
4961	public class A {protected void determineHighestAssignedHueID() {for (Metadata metadata : metadataRegistry.getAll()) {if (!metadata.getUID().getNamespace().equals(METAKEY)) {continue;}try {int hueId = Integer.parseInt(metadata.getValue());if (hueId > highestAssignedHueID) {highestAssignedHueID = hueId;}} catch (NumberFormatException e) {}}}}	1
4962	public class A {public void registerSenderEndPoint(short endPoint, int profileId, int[] clusters) {final List<Integer> list;synchronized (profile2Cluster) {if (profile2Cluster.containsKey(profileId)) {list = profile2Cluster.get(profileId);} else {list = new ArrayList<Integer>();profile2Cluster.put(profileId, list);}}synchronized (sender2EndPoint) {for (int i = 0; i < clusters.length; i++) {list.add(clusters[i]);SenderIdentifier adding = new SenderIdentifier(profileId, clusters[i]);if (sender2EndPoint.containsKey(adding)) {if (sender2EndPoint.get(adding).equals(endPoint)) {continue;}}sender2EndPoint.put(adding, endPoint);}}}}	2
4963	public class A {public synchronized IndexRecord getFirstWriteInProgressRecord() {IndexRecord ret = null;IndexRecords records = loadRecords(indexFile);if (records != null) {for (IndexRecord record : records.getRecords().values()) {if (record.isStatusWriteInProgress()) {ret = record;break;}}}return ret;}}	1
4964	"public class A {@Testpublic void testMarker() {Logger logger = LoggerFactory.getLogger(""testMarker"");Marker blue = MarkerFactory.getMarker(""BLUE"");}}"	12
4965	"public class A {@Overridepublic void reindexEvents(final Map<ProvenanceEventRecord, StorageSummary> events) {if (newestIndexDefunct) {return;}final EventIndexTask indexTask =new EventIndexTask(documentQueue,indexManager,directoryManager,EventIndexTask.DEFAULT_MAX_EVENTS_PER_COMMIT,eventReporter);File lastIndexDir = null;long lastEventTime = -2L;final List<IndexableDocument> indexableDocs = new ArrayList<>(events.size());for (final Map.Entry<ProvenanceEventRecord, StorageSummary> entry : events.entrySet()) {final ProvenanceEventRecord event = entry.getKey();final StorageSummary summary = entry.getValue();for (final CachedQuery cachedQuery : cachedQueries) {cachedQuery.update(event, summary);}final Document document = eventConverter.convert(event, summary);if (document == null) {} else {final File indexDir;if (event.getEventTime() == lastEventTime) {indexDir = lastIndexDir;} else {final List<File> files =getDirectoryManager().getDirectories(event.getEventTime(), null, false);if (files.isEmpty()) {final String partitionName = summary.getPartitionName().get();indexDir =getDirectoryManager().getWritableIndexingDirectory(event.getEventTime(), partitionName);} else {indexDir = files.get(0);}lastIndexDir = indexDir;}final IndexableDocument doc = new IndexableDocument(document, summary, indexDir);indexableDocs.add(doc);}}try {indexTask.reIndex(indexableDocs, CommitPreference.PREVENT_COMMIT);} catch (final IOException ioe) {eventReporter.reportEvent(Severity.ERROR,EVENT_CATEGORY,""Failed to re-index some Provenance Events. Some Provenance Events may not be available""+ "" for querying. See logs for more information."");}}}"	3
4966	"public class A {private void dumpStackTraceForWatchable() {if (!log.isDebugEnabled()) {return;}final Map<Thread, StackTraceElement[]> stackTraces = Thread.getAllStackTraces();final Set<Thread> threads = stackTraces.keySet();final Iterator<Thread> threadIterator = threads.iterator();final StringBuilder stacktrace = new StringBuilder();while (threadIterator.hasNext()) {final Thread t = threadIterator.next();if (t.getName().equals(m_watchable.getName())) {if (t.getName().equals(m_watchable.getName())) {stacktrace.append(""dumping stacktrace for too long running thread : "").append(t);} else {stacktrace.append(""dumping stacktrace for other running thread : "").append(t);}final StackTraceElement[] ste = stackTraces.get(t);for (final StackTraceElement stackTraceElement : ste) {stacktrace.append(""\n"").append(stackTraceElement);}}}}}"	1
4967	"public class A {@Override@SuppressWarnings(""deprecation"")public RequestCtx handleRequest(SOAPMessageContext context) throws OperationHandlerException {RequestCtx req = null;Object oMap = null;String pid = null;String sDefPid = null;String methodName = null;String asOfDateTime = null;try {oMap = getSOAPRequestObjects(context);} catch (SoapFault af) {throw new OperationHandlerException(""Error obtaining SOAP Request Objects"", af);}try {pid = (String) callGetter(""getPid"", oMap);sDefPid = (String) callGetter(""getServiceDefinitionPid"", oMap);methodName = (String) callGetter(""getMethodName"", oMap);asOfDateTime = (String) callGetter(""getAsOfDateTime"", oMap);} catch (Exception e) {throw new OperationHandlerException(""Error obtaining parameters."", e);}Map<URI, AttributeValue> actions = new HashMap<URI, AttributeValue>();Map<URI, AttributeValue> resAttr;try {resAttr = ResourceAttributes.getResources(pid);if (sDefPid != null && !sDefPid.isEmpty()) {resAttr.put(Constants.SDEF.PID.getURI(), new StringAttribute(sDefPid));}if (methodName != null && !methodName.isEmpty()) {resAttr.put(Constants.DISSEMINATOR.METHOD.getURI(), new StringAttribute(methodName));}if (asOfDateTime != null && !asOfDateTime.isEmpty()) {resAttr.put(Constants.DATASTREAM.AS_OF_DATETIME.getURI(),DateTimeAttribute.getInstance(asOfDateTime));}actions.put(Constants.ACTION.ID.getURI(), Constants.ACTION.GET_DISSEMINATION.getStringAttribute());actions.put(Constants.ACTION.API.getURI(), Constants.ACTION.APIA.getStringAttribute());req =getContextHandler().buildRequest(getSubjects(context), actions, resAttr, getEnvironment(context));LogUtil.statLog(getUser(context), Constants.ACTION.GET_DISSEMINATION.uri, pid, null);} catch (Exception e) {throw new OperationHandlerException(e.getMessage(), e);}return req;}}"	6
4968	public class A {@Overridepublic void unRegisterService(String serviceType, String baseUrl)throws ServiceRegistryException {setOnlineStatus(serviceType, baseUrl, null, false, null);cleanRunningJobs(serviceType, baseUrl);}}	1
4969	public class A {public synchronized void producersConnected(final Wire[] wires) {this.wireSupport.producersConnected(wires);}}	1
4970	"public class A {private void logCallInfo(URI _uri, Map<String, String> _params) {final StringBuilder b = new StringBuilder();b.append(""Calling ["").append(_uri.toString()).append(""]"");if (_params != null && _params.size() > 0) {b.append("" with params ["");int i = 0;for (Map.Entry<String, String> e : _params.entrySet()) {if (i++ > 0) b.append("", "");b.append(e.getKey()).append(""="").append(e.getValue());}}}}"	1
4971	public class A {@Overridepublic Reader loadResource(String relativePath) {InputStream is = this.classLoader.getResourceAsStream(relativePath);return is != null ? new InputStreamReader(is) : null;}}	1
4972	public class A {public List<String> lookupAssigningAuthorities(String homeCommunityId) {return mappingDao.getAssigningAuthoritiesByHomeCommunity(homeCommunityId);}}	1
4973	public class A {public As createAs(String asName,Functionality functionality,ExchangeType exchangeType,IPSPType ipspType,RoutingContext rc,TrafficModeType trafficMode,int minAspActiveForLoadbalance,NetworkAppearance na)throws Exception {As as = this.getAs(asName);if (as != null) {throw new Exception(String.format(M3UAOAMMessages.CREATE_AS_FAIL_NAME_EXIST, asName));}if (exchangeType == null) {exchangeType = ExchangeType.SE;}if (functionality == Functionality.IPSP && ipspType == null) {ipspType = IPSPType.CLIENT;}as =new AsImpl(asName,rc,trafficMode,minAspActiveForLoadbalance,functionality,exchangeType,ipspType,na);((AsImpl) as).setM3UAManagement(this);FSM localFSM = ((AsImpl) as).getLocalFSM();this.m3uaScheduler.execute(localFSM);FSM peerFSM = ((AsImpl) as).getPeerFSM();this.m3uaScheduler.execute(peerFSM);appServers.add(as);this.store();for (FastList.Node<M3UAManagementEventListener> n = this.managementEventListeners.head(),end = this.managementEventListeners.tail();(n = n.getNext()) != end; ) {M3UAManagementEventListener m3uaManagementEventListener = n.getValue();try {m3uaManagementEventListener.onAsCreated(as);} catch (Throwable ee) {}}return as;}}	1
4974	public class A {@Testpublic void deleteNotExistingUserExpectError() throws Exception {assertEquals(deleteUser(adminConnectionCorrect, NEW_USER_SDN).getStatus(), HttpStatus.NOT_FOUND_404);}}	1
4975	public class A {public static MessageResourcesFactory createFactory() {try {if (clazz == null) {clazz = RequestUtils.applicationClass(factoryClass);}MessageResourcesFactory factory = (MessageResourcesFactory) clazz.newInstance();return (factory);} catch (Throwable t) {return (null);}}}	1
4976	public class A {public void removeFromChannelsAndClose(long logId) {FileChannel fileChannel = logid2filechannel.remove(logId);if (null != fileChannel) {try {fileChannel.close();} catch (IOException e) {}}}}	1
4977	public class A {@Overrideprotected void refresh(final List<MetaData> data) {if (CollectionUtils.isEmpty(data)) {metaDataSubscribers.forEach(MetaDataSubscriber::refresh);} else {data.forEach(metaData -> metaDataSubscribers.forEach(subscriber -> subscriber.onSubscribe(metaData)));}}}	1
4978	public class A {public int getDistance(Node node1, Node node2) {if (node1 == node2) {return 0;}Node n1 = node1, n2 = node2;int dis = 0;netlock.readLock().lock();try {int level1 = node1.getLevel(), level2 = node2.getLevel();while (n1 != null && level1 > level2) {n1 = n1.getParent();level1--;dis++;}while (n2 != null && level2 > level1) {n2 = n2.getParent();level2--;dis++;}while (n1 != null && n2 != null && n1.getParent() != n2.getParent()) {n1 = n1.getParent();n2 = n2.getParent();dis += 2;}} finally {netlock.readLock().unlock();}if (n1 == null) {return Integer.MAX_VALUE;}if (n2 == null) {return Integer.MAX_VALUE;}return dis + 2;}}	2
4979	public class A {@Overridepublic Void call() throws Exception {if (logger.isDebugEnabled()) {}runCounter.inc();execution.start(maxFailCount);if (execution.getStatus() == Status.DEAD) {try {job.dead(execution);jobAccessor.save(execution);} catch (Exception t) {}return null;}jobAccessor.save(execution);job.execute(execution);if (currentListener != null) {currentListener.onSubmit(execution);}return null;}}	3
4980	public class A {@Dependent@PortletParam@Producespublic Date getDateParam(ClientDataRequest clientDataRequest,PortletResponse portletResponse,InjectionPoint injectionPoint) {String value = getStringParam(clientDataRequest, portletResponse, injectionPoint);if (value == null) {return null;}Annotated field = injectionPoint.getAnnotated();Annotation[] fieldAnnotations = _getFieldAnnotations(field);ParamConverter<Date> paramConverter =_getParamConverter(Date.class, field.getBaseType(), fieldAnnotations);if (paramConverter != null) {try {return paramConverter.fromString(value);} catch (IllegalArgumentException iae) {_addBindingError(fieldAnnotations, iae.getMessage(), value);return null;}}if (LOG.isWarnEnabled()) {}return null;}}	1
4981	public class A {@Overridepublic void applySchemaChange(SchemaChangeEvent schemaChange) {switch (schemaChange.getType()) {case CREATE:case ALTER:schemaChange.getTableChanges().forEach(x -> buildAndRegisterSchema(x.getTable()));break;case DROP:schemaChange.getTableChanges().forEach(x -> removeSchema(x.getId()));break;default:}if (!databaseHistory.storeOnlyCapturedTables()|| isGlobalSetVariableStatement(schemaChange.getDdl(), schemaChange.getDatabase())|| schemaChange.getTables().stream().map(Table::id).anyMatch(filters.dataCollectionFilter()::isIncluded)) {record(schemaChange, schemaChange.getTableChanges());}}}	1
4982	public class A {@Overridepublic Object handle(final HttpServletRequest request,final HttpServletResponse response,final WebServiceCallContext routeContext,final HandlerChain chain) {try {try {return chain.handle(request, response, routeContext);} catch (final WrappedException e) {throw unwrap(e);}} catch (final ValidationUserException e) {final UiMessageStack uiMessageStack = routeContext.getUiMessageStack();e.flushToUiMessageStack(uiMessageStack);return sendJsonUiMessageStack(SC_UNPROCESSABLE_ENTITY, uiMessageStack, response);} catch (final VUserException e) {final UiMessageStack uiMessageStack = routeContext.getUiMessageStack();return sendJsonUiMessageStack(SC_UNPROCESSABLE_ENTITY, uiMessageStack, response);} catch (final SessionException e) {return sendJsonError(HttpServletResponse.SC_UNAUTHORIZED, e, response);} catch (final VSecurityException e) {return sendJsonError(HttpServletResponse.SC_FORBIDDEN, e, response);} catch (final JsonSyntaxException e) {return sendJsonError(HttpServletResponse.SC_BAD_REQUEST, e, response);} catch (final TooManyRequestException e) {return sendJsonError(SC_TOO_MANY_REQUEST, e, response);} catch (final Throwable e) {return sendJsonError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, e, response);}}}	3
4983	public class A {@Overridepublic void run() {while (!Thread.currentThread().isInterrupted()) {try {int currentAlertCount = jobCounter.get();jobCounter.addAndGet(service.executeScheduledAlerts(50, timeout));if (jobCounter.get() != currentAlertCount) {}Thread.sleep(POLL_INTERVAL_MS);} catch (InterruptedException ex) {Thread.currentThread().interrupt();break;} catch (Throwable ex) {}}service.dispose();}}	4
4984	public class A {@Overridepublic long getGroupId() {try {Group group = GroupLocalServiceUtil.getCompanyGroup(_entry.getCompanyId());return group.getGroupId();} catch (Exception exception) {if (_log.isDebugEnabled()) {}}return 0;}}	1
4985	"public class A {public static short parseSBMLShortStrict(String value) {short v = 0;try {v = Short.parseShort(value.trim());} catch (NumberFormatException e) {Logger logger = Logger.getLogger(StringTools.class);throw new IllegalArgumentException(""Must be of type short!"", e);}return v;}}"	1
4986	"public class A {@RequestMapping(value = ""/{userName:.+}"",method = {RequestMethod.PUT},produces = {""application/json""})@ResponseBody@PreAuthorize(Constant.ACCESS_HAS_ROLE_ADMIN)public ManagedUser save(@PathVariable(""userName"") String userName, @RequestBody ManagedUser user) {checkProfileEditAllowed();if (StringUtils.equals(getPrincipal(), user.getUsername()) && user.isDisabled()) {throw new ForbiddenException(""Action not allowed!"");}checkUserName(userName);user.setUsername(userName);try {ManagedUser existing = get(userName);if (existing != null) {if (user.getPassword() == null) user.setPassword(existing.getPassword());if (user.getAuthorities() == null || user.getAuthorities().isEmpty())user.setGrantedAuthorities(existing.getAuthorities());}} catch (UsernameNotFoundException ex) {}user.setPassword(pwdEncode(user.getPassword()));completeAuthorities(user);userService.updateUser(user);return get(userName);}}"	1
4987	public class A {@Overridepublic void lifeCycleStarted(LifeCycle event) {final Set<SslReload> reloaders = new HashSet<>();reloaders.addAll(getReloaders(environment.getApplicationContext()));reloaders.addAll(getReloaders(environment.getAdminContext()));reloadTask.setReloaders(reloaders);}}	1
4988	public class A {private void printStat() {long curr = encodeCounter.addAndGet(1);if (System.currentTimeMillis() - lastCheck >= 10000) {long totalError = errorRemote.get() + errorLocal.get();String msg =String.format(Locale.ROOT,MSG_TEMPLATE,errorLocal.get(),errorRemote.get(),hitLocal.get(),missLocal.get(),curr);if (totalError > lastTotalError) {lastTotalError = totalError;} else {}lastCheck = System.currentTimeMillis();}}}	2
4989	public class A {@Overridepublic FtpFile getHomeDirectory() throws FtpException {return new SimpleFtpFile();}}	1
4990	public class A {@Overridepublic void onConnectGPRSRequest(ConnectGPRSRequest ind) {TestEvent te = TestEvent.createReceivedEvent(EventType.ConnectGPRSRequest, ind, sequence++);this.observerdEvents.add(te);}}	1
4991	"public class A {@Testpublic void multipleThreads() throws Exception {Helpers.updateLoggingConfig(context,cm,Helpers.LoggingLibrary.LOG4J1,""threads"",d -> {d.put(""irrelevant"", UUID.randomUUID().toString());});final Logger log = LoggerFactory.getLogger(""my.logger"");final CountDownLatch latch = new CountDownLatch(41);Runnable r1 =() -> {Thread.currentThread().setName(""Thread "" + UUID.randomUUID().toString());for (int i = 0; i < 100; i++) {try {Thread.sleep(30);} catch (InterruptedException e) {throw new RuntimeException(e.getMessage(), e);}}latch.countDown();};Runnable r2 =() -> {Thread.currentThread().setName(""Config Updater Thread"");for (int i = 0; i < 30; i++) {Helpers.updateLoggingConfig(context,cm,Helpers.LoggingLibrary.LOG4J1,""threads"",d -> {d.put(""irrelevant"", UUID.randomUUID().toString());});try {Thread.sleep(85);} catch (InterruptedException e) {throw new RuntimeException(e.getMessage(), e);}}latch.countDown();};new Thread(r2).start();for (int t = 0; t < 40; t++) {new Thread(r1).start();}latch.await();}}"	1
4992	public class A {@Overridepublic void onError(final Task task, final Throwable throwable) {errorReference.compareAndSet(null, throwable);}}	1
4993	public class A {public static URL convertFileToURL(File file) {if (file == null || !file.exists()) return null;if (!file.isAbsolute()) file = file.getAbsoluteFile();try {return file.toURI().toURL();} catch (MalformedURLException e) {return null;}}}	1
4994	"public class A {@RequestMapping(value = ""/replicaSet/{replicaSetID}/{nodeID:.+}"",method = {RequestMethod.PUT})@ResponseBodypublic void addNodeToReplicaSet(@PathVariable Integer replicaSetID, @PathVariable String nodeID) {final String user = SecurityContextHolder.getContext().getAuthentication().getName();streamingService.addNodeToReplicaSet(replicaSetID, nodeID);}}"	1
4995	public class A {private boolean load() {if (slotFilePath == null) {return false;}File slotFile = new File(slotFilePath);if (!slotFile.exists()) {return false;}try (FileInputStream fileInputStream = new FileInputStream(slotFile);BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream)) {byte[] bytes = new byte[(int) slotFile.length()];int read = bufferedInputStream.read(bytes);if (read != slotFile.length() && logger.isWarnEnabled()) {}deserialize(ByteBuffer.wrap(bytes));return true;} catch (Exception e) {return false;}}}	2
4996	"public class A {@Overridepublic void annotateWorkflow(int workflowSWID, WorkflowAttribute att, Boolean skip) {try {Workflow obj = ll.findWorkflow(""/"" + workflowSWID);if (skip != null) {}if (att != null) {Set<WorkflowAttribute> atts = new HashSet<>();atts.add(att);obj.setWorkflowAttributes(atts);}ll.updateWorkflow(""/"" + workflowSWID, obj);} catch (IOException ex) {wrapAsRuntimeException(ex);} catch (JAXBException ex) {wrapAsRuntimeException(ex);} catch (ResourceException ex) {wrapAsRuntimeException(ex);}}}"	5
4997	public class A {public static void transferCollectionContributors(List<PersonTO> persons, ContainerMetadata metadata, User u, TRANSFER_MODE mode) {for (PersonTO pTO : persons) {Person person = new Person();person.setFamilyName(pTO.getFamilyName());person.setGivenName(pTO.getGivenName());person.setCompleteName(pTO.getCompleteName());person.setAlternativeName(pTO.getAlternativeName());person.setRole(URI.create(pTO.getRole()));if (pTO.getIdentifiers().size() == 1) {IdentifierTO ito = new IdentifierTO();ito.setValue(pTO.getIdentifiers().get(0).getValue());person.setIdentifier(ito.getValue());} else if (pTO.getIdentifiers().size() > 1) {}transferContributorOrganizations(pTO.getOrganizations(), person, mode);metadata.getPersons().add(person);}if (metadata.getPersons().size() == 0 && TRANSFER_MODE.CREATE.equals(mode) && u != null) {Person personU = new Person();PersonTO pTo = new PersonTO();personU.setFamilyName(u.getPerson().getFamilyName());personU.setGivenName(u.getPerson().getGivenName());personU.setCompleteName(u.getPerson().getCompleteName());personU.setAlternativeName(u.getPerson().getAlternativeName());if (!isNullOrEmpty(u.getPerson().getIdentifier())) {IdentifierTO ito = new IdentifierTO();ito.setValue(u.getPerson().getIdentifier());personU.setIdentifier(ito.getValue());}personU.setOrganizations(u.getPerson().getOrganizations());personU.setRole(URI.create(pTo.getRole()));metadata.getPersons().add(personU);}}}	1
4998	public class A {static LanguageDetector langDetector() {if (detector == null) {try {detector = getDefaultLanguageDetector();detector.loadModels();} catch (IOException e) {}}return detector;}}	1
4999	"public class A {private void onUpdateAction(final EntityDTO<Integer> entityDTO) {if (entityDTO == null || entityDTO.getId() == null) {throw new UnsupportedOperationException(""Updated reminder entity DTO is invalid."");}if (!view.getForm().isValid()) {return;}final Boolean deleted;if (entityDTO instanceof ReminderDTO) {deleted = ((ReminderDTO) entityDTO).getDeleted();} else if (entityDTO instanceof MonitoredPointDTO) {deleted = ((MonitoredPointDTO) entityDTO).getDeleted();} else {deleted = null;}final HashMap<String, Object> properties = new HashMap<String, Object>();properties.put(ReminderDTO.EXPECTED_DATE, view.getExpectedDateField().getValue().getTime());properties.put(ReminderDTO.LABEL, view.getLabelField().getValue());properties.put(ReminderDTO.DELETED, deleted);properties.put(ReminderDTO.PROJECT_ID, projectId);dispatch.execute(new UpdateEntity(entityDTO, properties),new CommandResultHandler<VoidResult>() {@Overridepublic void onCommandFailure(final Throwable caught) {if (Log.isErrorEnabled()) {}if (reminderType == ReminderType.REMINDER) {} else {}}@Overridepublic void onCommandSuccess(final VoidResult result) {fireUpdateEvent();hideView();if (reminderType == ReminderType.REMINDER) {N10N.notification(I18N.CONSTANTS.infoConfirmation(),I18N.CONSTANTS.reminderUpdateConfirm(),MessageType.INFO);} else {N10N.notification(I18N.CONSTANTS.infoConfirmation(),I18N.CONSTANTS.monitoredPointUpdateConfirm(),MessageType.INFO);}}},view.getSaveButton(),view.getDeleteButton());}}"	3
5000	public class A {@Overrideprotected void tearDown() throws Exception {connection.close();service.stop();context.close();super.tearDown();}}	1
5001	public class A {protected final void initOutput(BatchSinkContext context,BigQuery bigQuery,String outputName,String tableName,@Nullable Schema tableSchema,String bucket,FailureCollector collector)throws IOException {List<BigQueryTableFieldSchema> fields =getBigQueryTableFields(bigQuery, tableName, tableSchema, getConfig().isAllowSchemaRelaxation(), collector);Configuration configuration = new Configuration(baseConfiguration);String temporaryGcsPath =BigQuerySinkUtils.getTemporaryGcsPath(bucket, runUUID.toString(), tableName);BigQuerySinkUtils.configureOutput(configuration,getConfig().getDatasetProject(),getConfig().getDataset(),tableName,temporaryGcsPath,fields);List<String> fieldNames =fields.stream().map(BigQueryTableFieldSchema::getName).collect(Collectors.toList());recordLineage(context, outputName, tableSchema, fieldNames);context.addOutput(Output.of(outputName, getOutputFormatProvider(configuration, tableName, tableSchema)));}}	1
5002	"public class A {@Overridepublic void updateBundle(long bundleId, InputStream inputStream) throws PortalException {_checkPermission();Bundle bundle = getBundle(bundleId);if (bundle == null) {throw new PortalException(""No bundle with ID "" + bundleId);}try {bundle.update(inputStream);} catch (BundleException bundleException) {throw new PortalException(bundleException);}}}"	1
5003	"public class A {private static AuthorizationResponse acceptAuthorization(WebDriver driver) {String authorizationResponseStr = driver.getCurrentUrl();AuthorizationResponse authorizationResponse = null;if (!authorizationResponseStr.contains(""#"")) {Wait<WebDriver> wait =new FluentWait<WebDriver>(driver).withTimeout(Duration.ofSeconds(WAIT_OPERATION_TIMEOUT)).pollingEvery(Duration.ofMillis(500)).ignoring(NoSuchElementException.class);WebElement allowButton =wait.until(new Function<WebDriver, WebElement>() {public WebElement apply(WebDriver d) {return d.findElement(By.id(""authorizeForm:allowButton""));}});JavascriptExecutor jse = (JavascriptExecutor) driver;jse.executeScript(""scroll(0, 1000)"");String previousURL = driver.getCurrentUrl();Actions actions = new Actions(driver);actions.click(allowButton).perform();authorizationResponseStr = driver.getCurrentUrl();authorizationResponse = new AuthorizationResponse(authorizationResponseStr);} else {fail(""The authorization form was expected to be shown."");}return authorizationResponse;}}"	1
5004	"public class A {public static void filterTypesDef(AtlasTypesDefFilterRequest request) {MetricRecorder metric = RequestContext.get().startMetricRecord(""filterTypesDef"");String userName = getCurrentUserName();if (StringUtils.isNotEmpty(userName) && !RequestContext.get().isImportInProgress()) {try {AtlasAuthorizer authorizer = AtlasAuthorizerFactory.getAtlasAuthorizer();request.setUser(getCurrentUserName(), getCurrentUserGroups());request.setClientIPAddress(RequestContext.get().getClientIPAddress());request.setForwardedAddresses(RequestContext.get().getForwardedAddresses());request.setRemoteIPAddress(RequestContext.get().getClientIPAddress());authorizer.filterTypesDef(request);} catch (AtlasAuthorizationException e) {}}RequestContext.get().endMetricRecord(metric);}}"	1
5005	"public class A {@Testvoid parse() throws Exception {JavaClassSource clazz =(JavaClassSource)Roaster.parse(new File(""src/test/java/org/apache/camel/parser/java/MySimpleToDRoute.java""));MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz);List<CamelEndpointDetails> details = new ArrayList<>();RouteBuilderParser.parseRouteBuilderEndpoints(clazz, ""."", ""src/test/java/org/apache/camel/parser/java/MySimpleToDRoute.java"", details);List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, true);for (ParserResult result : list) {}assertEquals(""direct:start"", list.get(0).getElement());list = CamelJavaParserHelper.parseCamelProducerUris(method, true, true);for (ParserResult result : list) {}assertEquals(""toD"", list.get(0).getNode());assertEquals(""log:a"", list.get(0).getElement());assertEquals(""to"", list.get(1).getNode());assertEquals(""log:b"", list.get(1).getElement());assertEquals(""to"", list.get(2).getNode());assertEquals(""log:c"", list.get(2).getElement());assertEquals(3, list.size());assertEquals(4, details.size());assertEquals(""direct:start"", details.get(0).getEndpointUri());assertEquals(""log:a"", details.get(1).getEndpointUri());assertEquals(""log:b"", details.get(2).getEndpointUri());assertEquals(""log:c"", details.get(3).getEndpointUri());}}"	3
5006	"public class A {@SuppressWarnings(""synthetic-access"")protected void onChannelOpened(OpenFuture future) {Buffer buffer = new ByteArrayBuffer(Long.SIZE, false);buffer.putByte((byte) 0x00);Throwable t = future.getException();if (t != null) {service.unregisterChannel(channel);channel.close(true);buffer.putByte((byte) 0x5b);} else {buffer.putByte((byte) 0x5a);}buffer.putByte((byte) 0x00);buffer.putByte((byte) 0x00);buffer.putByte((byte) 0x00);buffer.putByte((byte) 0x00);buffer.putByte((byte) 0x00);buffer.putByte((byte) 0x00);try {session.writeBuffer(buffer);} catch (IOException e) {throw new IllegalStateException(""Failed to send packet"", e);}}}"	1
5007	"public class A {public Object call() throws Exception {Thread.sleep(getEndpoint().getDelay());int count = counter.incrementAndGet();if (getEndpoint().getFailFirstAttempts() >= count) {exchange.setException(new CamelExchangeException(""Simulated error at attempt "" + count, exchange));} else {String reply = getEndpoint().getReply();exchange.getMessage().setBody(reply);exchange.getMessage().setHeaders(exchange.getIn().getHeaders());}callback.done(false);return null;}}"	4
5008	public class A {public String getLabel() {for (final Label label : labels)if (label.getLang().equals(Locale.getDefault().getLanguage())) {final String labelText = label.getLabel();if (labelText != null) return labelText;}return getName();}}	1
5009	"public class A {@Overridepublic synchronized void generateNewVersionType(String formTypeCode) throws ApsSystemException {try {Message prototype = (Message) super.getEntityPrototype(formTypeCode);Integer version = 1;if (null != prototype) {version = prototype.getVersionType() + 1;}prototype.setVersionType(version);String modelXml = new FormTypeDOM().getXml(prototype);StepsConfig stepsConfig = this.getStepsConfig(formTypeCode);String stepsXml = new StepConfigsDOM().createConfigXml(stepsConfig);TypeVersionGuiConfig versionConfig = new TypeVersionGuiConfig();versionConfig.setFormTypeCode(formTypeCode);versionConfig.setPrototypeXml(modelXml);versionConfig.setPrototype(prototype);versionConfig.setStepsConfigXml(stepsXml);versionConfig.setStepsConfig(stepsConfig);Map<String, StepGuiConfig> workGuiConfigs =this.getFormTypeGuiDAO().getWorkGuiConfigs(formTypeCode);List<StepGuiConfig> guiConfigs = new ArrayList<StepGuiConfig>();guiConfigs.addAll(workGuiConfigs.values());versionConfig.setGuiConfigs(guiConfigs);versionConfig.setVersion(prototype.getVersionType());this.generateLabels(versionConfig);this.getFormTypeGuiDAO().addTypeVersionGui(versionConfig);this.getLastVersionConfigs().put(formTypeCode, versionConfig);this.updateEntityPrototype(prototype);} catch (Throwable t) {throw new ApsSystemException(""Error generating new version type - "" + formTypeCode, t);}}}"	1
5010	"public class A {private void sendRequest(Socket socket, Integer port, String request, String arguments, Logger logger)throws IOException {socket.setSoTimeout(60000);socket.connect(new InetSocketAddress(""localhost"", port));socket.setSoTimeout(60000);final OutputStream socketOut = socket.getOutputStream();final Properties nifiProps = loadProperties(logger);final String secretKey = nifiProps.getProperty(""secret.key"");if (arguments == null) {socketOut.write((request + "" "" + secretKey + ""\n"").getBytes(StandardCharsets.UTF_8));} else {socketOut.write((request + "" "" + secretKey + "" "" + arguments + ""\n"").getBytes(StandardCharsets.UTF_8));}socketOut.flush();}}"	3
5011	"public class A {public void openDatabase(boolean readOnly, boolean lockRequired) throws DatabaseException {if (mode.isDatabaseRequired() && database == null) {try (WriteLock dblock =new WriteLock(getSettings(), lockRequired && DatabaseManager.isH2Connection(settings))) {if (readOnly&& DatabaseManager.isH2Connection(settings)&& settings.getString(Settings.KEYS.DB_CONNECTION_STRING).contains(""file:%s"")) {final File db = DatabaseManager.getH2DataFile(settings);if (db.isFile()) {final File temp = settings.getTempDirectory();final File tempDB = new File(temp, db.getName());Files.copy(db.toPath(), tempDB.toPath());settings.setString(Settings.KEYS.H2_DATA_DIRECTORY, temp.getPath());final String connStr = settings.getString(Settings.KEYS.DB_CONNECTION_STRING);if (!connStr.contains(""ACCESS_MODE_DATA"")) {settings.setString(Settings.KEYS.DB_CONNECTION_STRING, connStr + ""ACCESS_MODE_DATA=r"");}database = new CveDB(settings);} else {throw new DatabaseException(""Unable to open database - configured database file does not exist: ""+ db.toString());}} else {database = new CveDB(settings);}} catch (IOException ex) {throw new DatabaseException(""Unable to open database in read only mode"", ex);} catch (WriteLockException ex) {throw new DatabaseException(""Failed to obtain lock - unable to open database"", ex);}database.open();}}}"	1
5012	public class A {public synchronized <Key, SourceState, OutputState>GenericCompilerCache<Key, SourceState, OutputState> getGenericCompilerCache(final GenericCompiler<Key, SourceState, OutputState> compiler) throws IOException {GenericCompilerCache<?, ?, ?> cache = myGenericCachesMap.get(compiler);if (cache == null) {final GenericCompilerCache<?, ?, ?> genericCache =new GenericCompilerCache<Key, SourceState, OutputState>(compiler, GenericCompilerRunner.getGenericCompilerCacheDir(myProject, compiler));myGenericCachesMap.put(compiler, genericCache);myCacheDisposables.add(() -> {if (LOG.isDebugEnabled()) {}genericCache.close();});cache = genericCache;}return (GenericCompilerCache<Key, SourceState, OutputState>) cache;}}	1
5013	"public class A {public Job run() throws Exception {Job job = Job.getInstance(getConf());job.setJobName(name);job.setJarByClass(RollupPhaseFourJob.class);job.setMapperClass(RollupPhaseFourMapper.class);job.setInputFormatClass(SequenceFileInputFormat.class);job.setMapOutputKeyClass(BytesWritable.class);job.setMapOutputValueClass(BytesWritable.class);job.setCombinerClass(RollupPhaseFourReducer.class);job.setReducerClass(RollupPhaseFourReducer.class);job.setOutputKeyClass(BytesWritable.class);job.setOutputValueClass(BytesWritable.class);job.setOutputFormatClass(SequenceFileOutputFormat.class);String numReducers = props.getProperty(""num.reducers"");job.setNumReduceTasks(1);Configuration configuration = job.getConfiguration();String inputPathDir = getAndSetConfiguration(configuration, ROLLUP_PHASE4_INPUT_PATH);getAndSetConfiguration(configuration, ROLLUP_PHASE4_CONFIG_PATH);getAndSetConfiguration(configuration, ROLLUP_PHASE4_OUTPUT_PATH);for (String inputPath : inputPathDir.split("","")) {Path input = new Path(inputPath);FileInputFormat.addInputPath(job, input);}FileOutputFormat.setOutputPath(job, new Path(getAndCheck(ROLLUP_PHASE4_OUTPUT_PATH.toString())));job.waitForCompletion(true);return job;}}"	3
5014	public class A {private void spawnProgessLogger(Set<StateTuple> state) {Thread progressLogger =new Thread(() -> {while (true) {int done = 0;int cancelled = 0;for (StateTuple stateTuple : state) {if (stateTuple.future().isCancelled()) {cancelled++;} else if (stateTuple.future().isDone()) {done++;}}try {Thread.sleep(TimeUnit.SECONDS.toMillis(30));} catch (InterruptedException e) {Thread.currentThread().interrupt();}}});progressLogger.setDaemon(true);progressLogger.start();}}	1
5015	public class A {@Overrideprotected void doRun() {try {lock.lock();if (unRecoveredAlerts.isEmpty()) {return;}reportRecovered();} finally {lock.unlock();}}}	1
5016	public class A {private void getHouseStatusCommsJob() {if (new VeluxBridgeGetHouseStatus().evaluateState(thisBridge)) {syncChannelsWithProducts();} else {}}}	4
5017	public class A {@Overrideprotected void finalize() throws Throwable {if (this.logger.isDebugEnabled()) {}super.finalize();}}	1
5018	public class A {@Overridepublic ComponentCSVRecord apply(CSVRecord input) {ComponentCSVRecord componentCSVRecord = null;try {componentCSVRecord = new ComponentCSVRecordBuilder(input).build();} catch (Exception e) {}return componentCSVRecord;}}	1
5019	"public class A {public static int getKBCommentsCount(HttpPrincipal httpPrincipal, long groupId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(KBCommentServiceUtil.class, ""getKBCommentsCount"", _getKBCommentsCountParameterTypes9);MethodHandler methodHandler = new MethodHandler(methodKey, groupId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Integer) returnObj).intValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
5020	"public class A {void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {Thread thread =new Thread(new Runnable() {@Overridepublic void run() {try {btnPrint.setEnabled(false);JasperPrintManager.getInstance(viewerContext.getJasperReportsContext()).print(viewerContext.getJasperPrint(), true);} catch (Exception ex) {if (log.isErrorEnabled()) {}JOptionPane.showMessageDialog(JRViewerToolbar.this, viewerContext.getBundleString(""error.printing""));} finally {btnPrint.setEnabled(true);}}});thread.start();}}"	1
5021	"public class A {@Testpublic void testGetAllAuthorities1() {SearchControls con1 = new SearchControls();con1.setReturningAttributes(new String[] {""cn""});LdapSearchParamsFactory paramsFactory =new LdapSearchParamsFactoryImpl(""ou=roles"", ""(objectClass=organizationalRole)"", con1);Transformer one = new SearchResultToAttrValueList(""cn"");Transformer two = new StringToGrantedAuthority();Transformer[] transformers = {one, two};Transformer transformer = new ChainedTransformer(transformers);LdapSearch rolesSearch = new GenericLdapSearch(getContextSource(), paramsFactory, transformer);DefaultLdapUserRoleListService userRoleListService = getDefaultLdapUserRoleListService();userRoleListService.setAllAuthoritiesSearch(rolesSearch);List res = userRoleListService.getAllRoles();assertTrue(res.contains(""ROLE_CTO""));assertTrue(res.contains(""ROLE_CEO""));if (logger.isDebugEnabled()) {}}}"	1
5022	public class A {private static boolean isFieldQueried(Path field, ValueComparisonExpression q, Path context) {return isFieldQueried(field, q.getField(), context);}}	1
5023	public class A {protected Map<KexProposalOption, String> setNegotiationResult(Map<KexProposalOption, String> guess) {synchronized (negotiationResult) {if (!negotiationResult.isEmpty()) {negotiationResult.clear();}negotiationResult.putAll(guess);}if (log.isDebugEnabled()) {}return guess;}}	2
5024	"public class A {@SuppressWarnings(""unchecked"")public void setModuleService(List<Object> params) {String classString = (String) params.get(0);Object classInstance = params.get(1);if (classString == null || classInstance == null) {throw new APIException(""service.unable.find"", (Object[]) null);}Class cls = null;try {if (!useSystemClassLoader) {cls = OpenmrsClassLoader.getInstance().loadClass(classString);if (cls != null && log.isDebugEnabled()) {try {} catch (Exception e) {}}} else if (useSystemClassLoader) {try {cls = Class.forName(classString);if (log.isDebugEnabled()) {}} catch (Exception e) {}}} catch (ClassNotFoundException e) {throw new APIException(""service.unable.set"", new Object[] {classString}, e);}setService(cls, classInstance);if (OpenmrsService.class.isAssignableFrom(classInstance.getClass())) {moduleOpenmrsServices.put(classString, (OpenmrsService) classInstance);runOpenmrsServiceOnStartup((OpenmrsService) classInstance, classString);}}}"	3
5025	public class A {synchronized void maybeSeekUnvalidated(TopicPartition tp, FetchPosition position, OffsetResetStrategy requestedResetStrategy) {TopicPartitionState state = assignedStateOrNull(tp);if (state == null) {} else if (!state.awaitingReset()) {} else if (requestedResetStrategy != state.resetStrategy) {} else {state.seekUnvalidated(position);}}}	4
5026	public class A {public void stop() {if (!mStarted) {return;}mStarted = false;for (AlluxioURI syncPoint : mSyncPathList) {try {stopSyncInternal(syncPoint);} catch (InvalidPathException e) {return;}}}}	1
5027	"public class A {public void setUserDnTemplate(String template) throws IllegalArgumentException {if (!StringUtils.hasText(template)) {String msg = ""User DN template cannot be null or empty."";throw new IllegalArgumentException(msg);}int index = template.indexOf(USERDN_SUBSTITUTION_TOKEN);if (index < 0) {String msg =""User DN template must contain the '""+ USERDN_SUBSTITUTION_TOKEN+ ""' replacement token to understand where to ""+ ""insert the runtime authentication principal."";throw new IllegalArgumentException(msg);}String prefix = template.substring(0, index);String suffix = template.substring(prefix.length() + USERDN_SUBSTITUTION_TOKEN.length());if (log.isDebugEnabled()) {}this.userDnPrefix = prefix;this.userDnSuffix = suffix;}}"	1
5028	"public class A {public synchronized void setException(Throwable exception) {if (lastResultReceived) {return;}if (logger.isDebugEnabled()) {}synchronized (this.msg) {if (!this.sc.getTransientFlag(Command.RESPONDED)) {alreadySendException.set(true);try {if (!headerSent) {sendHeader();}String exceptionMessage =exception.getMessage() != null? exception.getMessage(): ""Exception occurred during function execution"";if (logger.isDebugEnabled()) {}writeFunctionExceptionResponse(msg, exceptionMessage, exception);this.lastResultReceived = true;} catch (IOException ignoreAsSocketIsClosed) {}}}}}"	3
5029	public class A {public void appendError(final FlatPushMessageInformation pushMessageInformation,final Variant variant,final String errorMessage) {final VariantErrorStatus ves =new VariantErrorStatus(pushMessageInformation, variant, errorMessage);pushMessageInformation.getErrors().add(ves);try {flatPushMessageInformationDao.update(pushMessageInformation);} catch (Exception e) {}}}	2
5030	public class A {@Overridepublic void onMessage(final DatanodeDetails datanodeDetails, final EventPublisher publisher) {try {destroyPipelines(datanodeDetails);closeContainers(datanodeDetails, publisher);if (!nodeManager.getNodeStatus(datanodeDetails).isInMaintenance()) {removeContainerReplicas(datanodeDetails);}} catch (NodeNotFoundException ex) {}}}	2
5031	public class A {public static long getDeliveryTag(String experimentID,CuratorFramework curatorClient,String experimentNode,String pickedChild)throws Exception {String deliveryTagPath =experimentNode+ File.separator+ pickedChild+ File.separator+ experimentID+ DELIVERY_TAG_POSTFIX;Stat exists = curatorClient.checkExists().forPath(deliveryTagPath);if (exists == null) {return -1;}return bytesToLong(curatorClient.getData().storingStatIn(exists).forPath(deliveryTagPath));}}	1
5032	public class A {public Multimap<String, AnomalyNotifiedStatus> getSnapshot() {Multimap<String, AnomalyNotifiedStatus> snapshot = HashMultimap.create();if (snapshotString == null || snapshotString.size() == 0) {} else {for (Map.Entry<String, List<String>> entry : snapshotString.entrySet()) {for (String statusString : entry.getValue()) {try {AnomalyNotifiedStatus status =OBJECT_MAPPER.readValue(statusString, AnomalyNotifiedStatus.class);snapshot.put(entry.getKey(), status);} catch (IOException e) {}}}}return snapshot;}}	2
5033	"public class A {public static void main(final String[] args) {final Options options = new Options();final CmdLineParser parser = new CmdLineParser(options);try {parser.parseArgument(args);} catch (final CmdLineException e) {System.err.println(e.getMessage());System.err.println(""java "" + SuggestCreator.class.getCanonicalName() + "" [options...] arguments..."");parser.printUsage(System.err);return;}if (logger.isDebugEnabled()) {try {ManagementFactory.getRuntimeMXBean().getInputArguments().stream()System.getProperties().entrySet().stream()System.getenv().entrySet()} catch (final Exception e) {}}final String httpAddress = System.getProperty(Constants.FESS_ES_HTTP_ADDRESS);if (StringUtil.isNotBlank(httpAddress)) {System.setProperty(FesenClient.HTTP_ADDRESS, httpAddress);}TimeoutTask systemMonitorTask = null;int exitCode;try {SingletonLaContainerFactory.setConfigPath(""app.xml"");SingletonLaContainerFactory.setExternalContext(new GenericExternalContext());SingletonLaContainerFactory.setExternalContextComponentDefRegister(new GenericExternalContextComponentDefRegister());SingletonLaContainerFactory.init();final Thread shutdownCallback =new Thread(""ShutdownHook"") {@Overridepublic void run() {if (logger.isDebugEnabled()) {}destroyContainer();}};Runtime.getRuntime().addShutdownHook(shutdownCallback);systemMonitorTask =TimeoutManager.getInstance().addTimeoutTarget(new SystemMonitorTarget(),ComponentUtil.getFessConfig().getSuggestSystemMonitorIntervalAsInteger(),true);exitCode = process(options);} catch (final ContainerNotAvailableException e) {if (logger.isDebugEnabled()) {} else if (logger.isInfoEnabled()) {}exitCode = Constants.EXIT_FAIL;} catch (final Throwable t) {exitCode = Constants.EXIT_FAIL;} finally {if (systemMonitorTask != null) {systemMonitorTask.cancel();}destroyContainer();}System.exit(exitCode);}}"	9
5034	public class A {private void cancelAllJobs() {JOBS.keySet().forEach(this::cancelJob);}}	1
5035	"public class A {@Secured(ServicesData.ROLE_GET_AGENCIES)@GetMapping(path = RestApi.PATH_REFERENTIAL_ID)public AgencyDto getOne(final @PathVariable(""identifier"") String identifier) {ParameterChecker.checkParameter(""Identifier is mandatory : "", identifier);return agencyExternalService.getOne(identifier);}}"	1
5036	"public class A {private void pushNodeDropDirURLsOntoStack(final FlowObjectStack st) {ReferencedFile refDir = getNodeContainerDirectory();ReferencedFile dropFolder = refDir == null ? null : new ReferencedFile(refDir, DROP_DIR_NAME);if (dropFolder == null) {return;}dropFolder.lock();try {File directory = dropFolder.getFile();if (!directory.exists()) {return;}String[] files = directory.list();if (files != null) {StringBuilder debug =new StringBuilder(""Found "" + files.length + "" node local file(s) to "" + getNameWithID() + "": "");debug.append(Arrays.toString(Arrays.copyOf(files, Math.max(3, files.length))));for (String f : files) {File child = new File(directory, f);try {st.push(new FlowVariable(Scope.Local.getPrefix() + ""(drop) "" + f,child.toURI().toURL().toString(),Scope.Local));} catch (MalformedURLException mue) {}}}} finally {dropFolder.unlock();}}}"	1
5037	"public class A {public AuthorizationPolicy loadPolicyFromVfs() {Path authzPath = getAuthzPath();if (!ioService.exists(authzPath)) {return null;}AuthorizationPolicyBuilder builder = permissionManager.newAuthorizationPolicy();AuthorizationPolicyMarshaller marshaller = new AuthorizationPolicyMarshaller();walkFileTree(authzPath,new SimpleFileVisitor<Path>() {@Overridepublic FileVisitResult visitFile(final Path file, final BasicFileAttributes attrs)throws IOException {try {checkNotNull(""file"", file);checkNotNull(""attrs"", attrs);if (isPolicyFile(file)) {String content = ioService.readAllString(file);NonEscapedProperties props = new NonEscapedProperties();props.load(new StringReader(content));marshaller.read(builder, props);}} catch (final Exception e) {return FileVisitResult.TERMINATE;}return FileVisitResult.CONTINUE;}});return builder.build();}}"	1
5038	"public class A {private SHERPASystemMetadata parseSystemMetadata(JSONObject systemMetadata) {SHERPASystemMetadata metadata = new SHERPASystemMetadata();if (systemMetadata.has(""uri"")) {this.uri = systemMetadata.getString(""uri"");metadata.setUri(this.uri);} else {}if (systemMetadata.has(""id"")) {this.id = systemMetadata.getInt(""id"");metadata.setId(this.id);} else {}if (systemMetadata.has(""date_created"")) {metadata.setDateCreated(systemMetadata.getString(""date_created""));}if (systemMetadata.has(""date_modified"")) {metadata.setDateModified(systemMetadata.getString(""date_modified""));}return metadata;}}"	2
5039	public class A {@Overridepublic boolean isTerminationRequired(WorkloadExecutionStatus status) {if (stopTime != -1) {if (System.currentTimeMillis() >= stopTime) {return true;}}if (stopSampleCount != -1) {if (status.getTotalSamples() >= stopSampleCount) {return true;}}boolean everyNodeHasEmptyTransactions = true;for (NodeId nodeId : status.getNodes()) {if (status.getEmptyTransactions(nodeId) == 0) {everyNodeHasEmptyTransactions = false;break;}}if (everyNodeHasEmptyTransactions) {return true;}return shutdown.get();}}	3
5040	public class A {private static void print(String content) {}}	1
5041	public class A {private Optional<MessageAttachmentMetadata> messageAttachment(Attachment attachment, Map<AttachmentId, AttachmentMetadata> attachmentsById)throws MailboxException {try {AttachmentId attachmentId = AttachmentId.from(attachment.getBlobId().getRawValue());return OptionalUtils.executeIfEmpty(Optional.ofNullable(attachmentsById.get(attachmentId)).map(attachmentMetadata ->MessageAttachmentMetadata.builder().attachment(attachmentMetadata).name(attachment.getName().orElse(null)).cid(attachment.getCid().map(Cid::from).orElse(null)).isInline(attachment.isIsInline()).build()),} catch (IllegalStateException e) {return Optional.empty();}}}	2
5042	public class A {private void updateBrokerState(final BrokerState newState) {brokerState = newState.getCode();heartbeat();}}	1
5043	"public class A {protected boolean restoreLowerBoundIdOrSkipTable(Connection sourceConnect, TableOperationParams operationParams, ShardRecovery recoveryValue)throws SQLException {Objects.requireNonNull(sourceConnect, ""source connection is NULL"");Objects.requireNonNull(operationParams, ""operationParams is NULL"");Objects.requireNonNull(recoveryValue, ""recoveryValue is NULL"");if (recoveryValue.getObjectName() == null || recoveryValue.getObjectName().isEmpty()) {this.lowerBoundIdValue = selectLowerBoundValue(sourceConnect);} else if (recoveryValue.getProcessedObject() != null&& !recoveryValue.getProcessedObject().isEmpty()&& isContain(recoveryValue.getProcessedObject(), currentTableName)) {return true;} else {if (recoveryValue.getObjectName() != null&& recoveryValue.getObjectName().equalsIgnoreCase(currentTableName)&& !isContain(recoveryValue.getProcessedObject(), currentTableName)) {this.lowerBoundIdValue = recoveryValue.getLastColumnValue();} else {this.lowerBoundIdValue = selectLowerBoundValue(sourceConnect);}}return false;}}"	4
5044	public class A {public ConfigurationUtil getConfig(String someId) {ConfigurationUtil util = getConfigByMappedId(someId);if (util != null) {return util;}util = _utilMap.get(someId);return util;}}	2
5045	"public class A {public Map<String, Object> getCommit(String commitId) {try (PreparedStatement query =prepareStatement(""SELECT commits.id, commits.elasticId, commits.refid, commits.timestamp,""+ "" committype.name, creator FROM commits JOIN committype ON commits.committype =""+ "" committype.id WHERE elasticId = ?"")) {query.setString(1, commitId);try (ResultSet rs = query.executeQuery()) {if (rs.next()) {Map<String, Object> result = new HashMap<>();String refId =rs.getString(3).isEmpty() || rs.getString(3).equals("""") ? ""master"" : rs.getString(3);result.put(Sjm.SYSMLID, rs.getInt(1));result.put(Sjm.ELASTICID, rs.getString(2));result.put(Sjm.REFID, refId);result.put(Sjm.TIMESTAMP, rs.getTimestamp(4));result.put(""commitType"", rs.getString(5));result.put(Sjm.CREATOR, rs.getString(6));return result;}}} catch (Exception e) {} finally {close();}return null;}}"	1
5046	"public class A {@Overridepublic long purge() throws DatabaseException {try {DeleteResult response = collection.deleteMany(new BasicDBObject());return response.getDeletedCount();} catch (MongoException e) {throw new DatabaseException(""Error while delete documents"", e);}}}"	1
5047	"public class A {private String bratRenderLaterCommand() {return ""Wicket.$('""+ vis.getMarkupId()+ ""').dispatcher.post('current', ""+ ""[""+ toJson(getCollection())+ "", '1234', {}, true]);"";}}"	1
5048	"public class A {private DatanodeDetails initializeDatanodeDetails() throws IOException {String idFilePath = HddsServerUtil.getDatanodeIdFilePath(conf);if (idFilePath == null || idFilePath.isEmpty()) {throw new IllegalArgumentException(ScmConfigKeys.OZONE_SCM_DATANODE_ID_DIR+ "" must be defined. See""+ "" https://wiki.apache.org/hadoop/Ozone#Configuration""+ "" for details on configuring Ozone."");}Preconditions.checkNotNull(idFilePath);File idFile = new File(idFilePath);if (idFile.exists()) {return ContainerUtils.readDatanodeDetailsFrom(idFile);} else {DatanodeDetails details = DatanodeDetails.newBuilder().setUuid(UUID.randomUUID()).build();details.setInitialVersion(DatanodeVersions.CURRENT_VERSION);details.setCurrentVersion(DatanodeVersions.CURRENT_VERSION);return details;}}}"	1
5049	public class A {public void skip(String containerId, Number taskId, String userId) {containerId =context.getContainerId(containerId, new ByTaskIdContainerLocator(taskId.longValue()));userId = getUser(userId);userTaskService.skip(containerId, taskId.longValue(), userId);}}	1
5050	public class A {public void update(Observable o, Object arg) {if (!TaskRequest.class.isInstance(o)) {return;}TaskRequest task = (TaskRequest) o;Map<Integer, Object> res = task.getResults();Object SR = res.get(TaskRequestsConstants.R_SEARCH_RESULTS);if ((SR == null) || (!ArrayList.class.isInstance(SR))) {return;}ArrayList<SearchResult> resultsAll = (ArrayList<SearchResult>) SR;List<SearchResult> results;MessageBuilder builder = new MessageBuilder();MessageI newMessage = null;for (int i = 0; i < resultsAll.size(); i += maxResultsPerMessage) {int size = maxResultsPerMessage;if (i + maxResultsPerMessage > resultsAll.size()) {size = resultsAll.size() - i;}results = resultsAll.subList(i, i + size);try {newMessage =builder.buildQueryResponse(results,(String) task.getParameters().get(TaskRequestsConstants.P_QUERY_NUMBER),this.plugin.getName());} catch (IOException ex) {}if (newMessage != null) {this.plugin.send(newMessage,(String) task.getParameters().get(TaskRequestsConstants.P_REQUESTER_ADDRESS));}}}}	1
5051	"public class A {private Object getObjectOfCorrespondingPrimitiveType(String s, PrimitiveObjectInspector oi)throws IOException {PrimitiveTypeInfo typeInfo = oi.getTypeInfo();if (writeablePrimitives) {Converter c =ObjectInspectorConverters.getConverter(PrimitiveObjectInspectorFactory.javaStringObjectInspector, oi);return c.convert(s);}switch (typeInfo.getPrimitiveCategory()) {case INT:return Integer.valueOf(s);case BYTE:return Byte.valueOf(s);case SHORT:return Short.valueOf(s);case LONG:return Long.valueOf(s);case BOOLEAN:return (s.equalsIgnoreCase(""true""));case FLOAT:return Float.valueOf(s);case DOUBLE:return Double.valueOf(s);case STRING:return s;case BINARY:try {String t = Text.decode(s.getBytes(), 0, s.getBytes().length);return t.getBytes();} catch (CharacterCodingException e) {return null;}case DATE:return Date.valueOf(s);case TIMESTAMP:return Timestamp.valueOf(s);case DECIMAL:return HiveDecimal.create(s);case VARCHAR:return new HiveVarchar(s, ((BaseCharTypeInfo) typeInfo).getLength());case CHAR:return new HiveChar(s, ((BaseCharTypeInfo) typeInfo).getLength());default:throw new IOException(""Could not convert from string to "" + typeInfo.getPrimitiveCategory());}}}"	1
5052	public class A {private RemotingCommand cloneGroupOffset(ChannelHandlerContext ctx, RemotingCommand request)throws RemotingCommandException {final RemotingCommand response = RemotingCommand.createResponseCommand(null);CloneGroupOffsetRequestHeader requestHeader =(CloneGroupOffsetRequestHeader)request.decodeCommandCustomHeader(CloneGroupOffsetRequestHeader.class);Set<String> topics;if (UtilAll.isBlank(requestHeader.getTopic())) {topics =this.brokerController.getConsumerOffsetManager().whichTopicByConsumer(requestHeader.getSrcGroup());} else {topics = new HashSet<String>();topics.add(requestHeader.getTopic());}for (String topic : topics) {TopicConfig topicConfig =this.brokerController.getTopicConfigManager().selectTopicConfig(topic);if (null == topicConfig) {continue;}if (!requestHeader.isOffline()) {SubscriptionData findSubscriptionData =this.brokerController.getConsumerManager().findSubscriptionData(requestHeader.getSrcGroup(), topic);if (this.brokerController.getConsumerManager().findSubscriptionDataCount(requestHeader.getSrcGroup())> 0&& findSubscriptionData == null) {continue;}}this.brokerController.getConsumerOffsetManager().cloneOffset(requestHeader.getSrcGroup(), requestHeader.getDestGroup(), requestHeader.getTopic());}response.setCode(ResponseCode.SUCCESS);response.setRemark(null);return response;}}	2
5053	public class A {@Overridepublic void progress(float percent) {synchronized (this) {try {this.wait(3000);} catch (InterruptedException e) {throw new RuntimeException(e);}}assertTrue(percent >= 0);assertTrue(percent <= 100);adaptee.progress(percent);}}	1
5054	public class A {private List<RunHook> loadHooks(String subdir) {try {File hookDir = Controller.HOOKS_DIR.resolve(subdir).toFile();if (hookDir.exists() && hookDir.isDirectory()) {return Files.list(hookDir.toPath()).map(Path::toFile).filter(file -> !file.isDirectory() && !file.isHidden()).map(file -> new ExecRunHook(file.getName(), file.getAbsolutePath())).collect(Collectors.toList());}} catch (IOException e) {}return Collections.emptyList();}}	1
5055	public class A {public static com.liferay.commerce.product.model.CPDefinitionLinkSoap[] getCPDefinitionLinks(long cpDefinitionId) throws RemoteException {try {java.util.List<com.liferay.commerce.product.model.CPDefinitionLink> returnValue =CPDefinitionLinkServiceUtil.getCPDefinitionLinks(cpDefinitionId);return com.liferay.commerce.product.model.CPDefinitionLinkSoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
5056	public class A {@Overridepublic List<State> queryKeyValue(String key1, Object value1, String key2, Object value2, Set<String> ignored) {if (log.isTraceEnabled()) {}List<State> list = new ArrayList<>();for (State state : states.values()) {String id = (String) state.get(KEY_ID);if (ignored.contains(id)) {continue;}if (!(value1.equals(state.get(key1)) && value2.equals(state.get(key2)))) {continue;}list.add(state);}if (log.isTraceEnabled() && !list.isEmpty()) {}return list;}}	2
5057	"public class A {private synchronized void closeConnectionAndChannel() throws IOException {if (channelPool != null) {try {channelPool.close();channelPool = null;} catch (Exception e) {throw new IOException(""Error closing channelPool"", e);}}if (conn != null) {conn.close(closeTimeout);conn = null;}}}"	1
5058	"public class A {private void enableAndRenderTextures(GL gl, List<FragmentTexture> textures, ShaderProgram shaderProgram) {if (textures != null && textures.size() > 0 && textures.get(0) != null) {FragmentTexture texture = textures.get(0);int glVCB = texture.getGLVertexCoordBufferId();int tId = texture.getGLTextureId();if (glVCB != -1 && tId != -1) {gl.glClientActiveTexture(GL.GL_TEXTURE0);gl.glActiveTexture(GL.GL_TEXTURE0);gl.glEnable(GL.GL_TEXTURE_2D);gl.glEnableClientState(GL.GL_TEXTURE_COORD_ARRAY);gl.glBindBufferARB(GL.GL_ARRAY_BUFFER_ARB, glVCB);gl.glTexCoordPointer(2, GL.GL_FLOAT, 0, 0);gl.glBindTexture(GL.GL_TEXTURE_2D, tId);gl.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_S, GL.GL_CLAMP_TO_EDGE);gl.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_T, GL.GL_CLAMP_TO_EDGE);for (int i = 1; i < textures.size(); i++) {texture = textures.get(i);if (texture != null) {glVCB = texture.getGLVertexCoordBufferId();tId = texture.getGLTextureId();if (glVCB != -1 && tId != -1) {int textureUnitId = JOGLUtils.getTextureUnitConst(i);gl.glClientActiveTexture(textureUnitId);gl.glActiveTexture(textureUnitId);gl.glEnable(GL.GL_TEXTURE_2D);gl.glEnableClientState(GL.GL_TEXTURE_COORD_ARRAY);gl.glBindBufferARB(GL.GL_ARRAY_BUFFER_ARB, glVCB);gl.glTexCoordPointer(2, GL.GL_FLOAT, 0, 0);gl.glBindTexture(GL.GL_TEXTURE_2D, tId);gl.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_S, GL.GL_CLAMP_TO_EDGE);gl.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_T, GL.GL_CLAMP_TO_EDGE);} else {}}}shaderProgram.useProgram(gl);for (int i = 0; i < textures.size(); i++) {if (textures.get(i) != null) {int texSampler = gl.glGetUniformLocation(shaderProgram.getOGLId(), ""tex"" + i);gl.glUniform1i(texSampler, i);}}} else {}}}}"	2
5059	"public class A {private void writeErrorResponse(TransactionContext transactionContext, ByteBuf out) {SoaHeader soaHeader = transactionContext.getHeader();if (soaHeader.getRespCode().isPresent()&& soaHeader.getRespCode().get().equals(SOA_NORMAL_RESP_CODE)) {soaHeader.setRespCode(SoaCode.ContainerStatusError.getCode());soaHeader.setRespMessage(SoaCode.ContainerStatusError.getMsg());}SoaException soaException = transactionContext.soaException();if (soaException == null) {soaException =new SoaException(soaHeader.getRespCode().orElse(SoaCode.ContainerStatusError.getCode()),soaHeader.getRespMessage().orElse(SoaCode.ContainerStatusError.getMsg()));transactionContext.soaException(soaException);}if (out.readableBytes() > 0) {out.clear();}TSoaTransport transport = new TSoaTransport(out);SoaMessageProcessor messageProcessor = new SoaMessageProcessor(transport);try {messageProcessor.writeHeader(transactionContext);messageProcessor.writeMessageEnd();transport.flush();String infoLog =""response[seqId:""+ transactionContext.seqId()+ "", respCode:""+ soaHeader.getRespCode().get()+ ""]:""+ ""service[""+ soaHeader.getServiceName()+ ""]:version[""+ soaHeader.getVersionName()+ ""]:method[""+ soaHeader.getMethodName()+ ""]""+ (soaHeader.getOperatorId().isPresent()? "" operatorId:"" + soaHeader.getOperatorId().get(): """")+ (soaHeader.getUserId().isPresent() ? "" userId:"" + soaHeader.getUserId().get() : """");} catch (Throwable e) {} finally {container.requestCounter().decrementAndGet();MDC.remove(SoaSystemEnvProperties.KEY_LOGGER_SESSION_TID);}}}"	2
5060	"public class A {public static void updateExchangeRate(HttpPrincipal httpPrincipal, long commerceCurrencyId, String exchangeRateProviderKey)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommerceCurrencyServiceUtil.class,""updateExchangeRate"",_updateExchangeRateParameterTypes12);MethodHandler methodHandler =new MethodHandler(methodKey, commerceCurrencyId, exchangeRateProviderKey);try {TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
5061	public class A {private GroupDefinition createGroup(Map.Entry<String, Object> groupNameValue) {GroupDefinition group = new GroupDefinition();group.setName(groupNameValue.getKey());try {if (groupNameValue.getValue() instanceof Map) {Map<String, Object> groupTemplateJsonMap = (Map<String, Object>) groupNameValue.getValue();validateAndFillGroup(group, groupTemplateJsonMap);validateUpdateGroupProperties(group, groupTemplateJsonMap);validateUpdateGroupCapabilities(group, groupTemplateJsonMap);} else {rollbackWithException(ActionStatus.NOT_TOPOLOGY_TOSCA_TEMPLATE);}} catch (ClassCastException e) {rollbackWithException(ActionStatus.INVALID_YAML);}return group;}}	1
5062	public class A {@Testpublic void testSetupWorked() throws IOException {Path[] inputFiles =FileUtil.stat2Paths(getFileSystem().listStatus(input, new OutputLogFilter()));Assert.assertEquals(testWarcs.length, inputFiles.length);}}	1
5063	"public class A {private void clearTaskExecPath() {if (!CommonUtils.isDevelopMode()) {String execLocalPath = taskExecutionContext.getExecutePath();if (StringUtils.isEmpty(execLocalPath)) {return;}if (""/"".equals(execLocalPath)) {return;}try {org.apache.commons.io.FileUtils.deleteDirectory(new File(execLocalPath));} catch (IOException e) {}}}}"	5
5064	"public class A {@GET@Path(""/submitDataVersionToArchive/{id}/{version}"")public Response submitDatasetVersionToArchive(@PathParam(""id"") String dsid, @PathParam(""version"") String versionNumber) {try {AuthenticatedUser au = findAuthenticatedUserOrDie();session.setUser(au);Dataset ds = findDatasetOrDie(dsid);DatasetVersion dv =datasetversionService.findByFriendlyVersionNumber(ds.getId(), versionNumber);if (dv.getArchivalCopyLocation() == null) {String className =settingsService.getValueForKey(SettingsServiceBean.Key.ArchiverClassName);AbstractSubmitToArchiveCommand cmd =ArchiverUtil.createSubmitToArchiveCommand(className, dvRequestService.getDataverseRequest(), dv);if (cmd != null) {new Thread(new Runnable() {public void run() {try {DatasetVersion dv = commandEngine.submit(cmd);if (dv.getArchivalCopyLocation() != null) {} else {logger.severe(""Error submitting version due to conflict/error at Archive"");}} catch (CommandException ex) {logger.log(Level.SEVERE,""Unexpected Exception calling  submit archive command"",ex);}}}).start();return ok(""Archive submission using ""+ cmd.getClass().getCanonicalName()+ "" started. Processing can take significant time for large datasets. View log""+ "" and/or check archive for results."");} else {logger.log(Level.SEVERE, ""Could not find Archiver class: "" + className);return error(Status.INTERNAL_SERVER_ERROR, ""Could not find Archiver class: "" + className);}} else {return error(Status.BAD_REQUEST, ""Version already archived at: "" + dv.getArchivalCopyLocation());}} catch (WrappedResponse e1) {return error(Status.UNAUTHORIZED, ""api key required"");}}}"	1
5065	"public class A {public static void main(String[] args) throws InterruptedException {CouchbaseSampleEntryManager couchbaseSampleEntryManager = new CouchbaseSampleEntryManager();final CouchbaseEntryManager couchbaseEntryManager =couchbaseSampleEntryManager.createCouchbaseEntryManager();int countUsers = 1000000;int threadCount = 200;int threadIterationCount = 10;long totalStart = System.currentTimeMillis();try {ExecutorService executorService =Executors.newFixedThreadPool(threadCount, daemonThreadFactory());for (int i = 0; i < threadCount; i++) {activeCount.incrementAndGet();final int count = i;executorService.execute(new Runnable() {@Overridepublic void run() {long start = System.currentTimeMillis();for (int j = 0; j < threadIterationCount; j++) {long userUid = Math.round(Math.random() * countUsers);String uid = String.format(""user%06d"", userUid);try {Filter filter =Filter.createEqualityFilter(Filter.createLowercaseFilter(""uid""), StringHelper.toLowerCase(uid));List<SimpleUser> foundUsers =couchbaseEntryManager.findEntries(""ou=people,o=gluu"", SimpleUser.class, filter);if (foundUsers.size() > 0) {successResult.incrementAndGet();} else {failedResult.incrementAndGet();}} catch (Throwable e) {errorResult.incrementAndGet();System.out.println(""ERROR !!!, thread: ""+ count+ "", uid: ""+ uid+ "", error:""+ e.getMessage());e.printStackTrace();}}long end = System.currentTimeMillis();long duration = end - start;totalTime.addAndGet(duration);activeCount.decrementAndGet();}});}while (activeCount.get() != 0) {Thread.sleep(1000L);}} finally {couchbaseEntryManager.destroy();}long totalEnd = System.currentTimeMillis();long duration = totalEnd - totalStart;System.out.println(String.format(""successResult: '%d', failedResult: '%d', errorResult: '%d'"",successResult.get(), failedResult.get(), errorResult.get()));}}"	3
5066	public class A {private void executeOperation(Message in) throws Exception {switch (operation) {case ASSIGN_CONTENT:assignContent(in);break;case ASSIGN_EXPRESSION:assignExpression(in);break;case EVAL:eval(in);break;case VOID_EVAL:voidEval(in);break;case PARSE_AND_EVAL:parseAndEval(in);break;default:break;}}}	1
5067	"public class A {public void loadBundle(final String bundleName) {if (awaked) {return;}if (log.isInfoEnabled()) {}if (!NSBundle.loadNibNamed(bundleName, this.id())) {throw new FactoryException(String.format(""Failure loading %s.xib"", bundleName));}if (!awaked) {this.awakeFromNib();}}}"	2
5068	"public class A {private static void addAttachIfNecessary(Config config, Log log) {String srcName = null, trgName = null;String archBits = (SystemUtil.getJREArch() == SystemUtil.ARCH_64) ? ""64"" : ""32"";if (SystemUtil.isWindows()) {trgName = ""attach.dll"";srcName = ""windows"" + archBits + ""/"" + trgName;} else if (SystemUtil.isLinux()) {trgName = ""libattach.so"";srcName = ""linux"" + archBits + ""/"" + trgName;} else if (SystemUtil.isSolaris()) {trgName = ""libattach.so"";srcName = ""solaris"" + archBits + ""/"" + trgName;} else if (SystemUtil.isMacOSX()) {trgName = ""libattach.dylib"";srcName = ""macosx"" + archBits + ""/"" + trgName;}if (srcName != null) {Resource binDir = getBinDirectory(config);Resource trg = binDir.getRealResource(trgName);if (!trg.exists() || trg.length() == 0) {InputStream src = InfoImpl.class.getResourceAsStream(""/resource/bin/"" + srcName);try {IOUtil.copy(src, trg, true);} catch (IOException e) {log.log(Log.LEVEL_INFO, ""Instrumentation"", e);}}SystemUtil.addLibraryPathIfNoExist(binDir, log);}}}"	1
5069	public class A {private void prepareServerNameListLength(ClientEsniInner msg) {msg.setServerNameListLength(msg.getServerNameListBytes().getValue().length);}}	1
5070	public class A {@Overridepublic Integer call() {final AtomicInteger lockCount = new AtomicInteger(0);try {DistributedLockService service = DistributedLockService.getServiceNamed(serviceName);while (!stop_testFairness) {assertThat(service.lock(lock, -1, -1)).isTrue();lockCount.incrementAndGet();service.unlock(lock);}} catch (VirtualMachineError e) {SystemFailure.initiateFailure(e);throw e;} catch (Throwable t) {fail(t.getMessage());} finally {return lockCount.get();}}}	1
5071	"public class A {@Overrideprotected void assertExpectationsGiven(HapiApiSpec spec) throws Throwable {if (expectations.isPresent()) {ContractFunctionResult actual = response.getContractCallLocal().getFunctionResult();if (!loggingOff) {}ErroringAsserts<ContractFunctionResult> asserts = expectations.get().assertsFor(spec);List<Throwable> errors = asserts.errorsIn(actual);rethrowSummaryError(log, ""Bad local call result!"", errors);}}}"	1
5072	"public class A {void addDocuments(Document[] docs) throws IOException {final List<IOException> exceptions = Collections.synchronizedList(new ArrayList<IOException>());final CountDownLatch latch = new CountDownLatch(docs.length);final IndexWriter writer = getIndexWriter();for (final Document doc : docs) {executor.execute(new Runnable() {public void run() {try {Document document = getFinishedDocument(doc);if (log.isDebugEnabled()) {long start = System.nanoTime();writer.addDocument(document);} else {writer.addDocument(document);}} catch (IOException e) {exceptions.add(e);} finally {latch.countDown();}}});}for (; ; ) {try {latch.await();break;} catch (InterruptedException e) {}}invalidateSharedReader();if (!exceptions.isEmpty()) {throw new IOExceptionWithCause(exceptions.size() + "" of "" + docs.length + "" background indexer tasks failed"",exceptions.get(0));}}}"	2
5073	public class A {public T run() throws LdapException {try {return execute();} catch (LdapException e) {if (!isHa()) {throw e;}String host = hosts[currentConnectionIndex];performFailover();host = hosts[currentConnectionIndex];return execute();}}}	2
5074	public class A {@Overridepublic void accept(String propertyName, Object value) {var stateCommand = typeConverter.toStateCommand(value);channelHandler.updateItemState(channel.getUID(), stateCommand);}}	1
5075	public class A {@Overridepublic void saveKeyStore(KeyStore keyStore) throws Exception {File samlKeyStoreFile = new File(getSamlKeyStorePath());samlKeyStoreFile = samlKeyStoreFile.getAbsoluteFile();if (!samlKeyStoreFile.exists()) {if (_log.isInfoEnabled()) {}File parentDir = samlKeyStoreFile.getParentFile();if (!parentDir.exists()) {parentDir.mkdirs();}}monitorFile(samlKeyStoreFile);String samlKeyStorePassword = getSamlKeyStorePassword();try (FileOutputStream fileOutputStream = new FileOutputStream(samlKeyStoreFile)) {_keyStore.store(fileOutputStream, samlKeyStorePassword.toCharArray());}}}	1
5076	"public class A {private boolean download(final File jarFile) throws IOException {final File tempFile = File.createTempFile(""JFlex"", ""zip"");tempFile.deleteOnExit();if (askBeforeDownload) {boolean ok = false;while (!ok) {System.err.print(""Download JFlex 1.4.3? (type 'y' or 'n' and hit enter)"");int read = System.in.read();if (read == 'n') {return false;} else if (read == 'y') {ok = true;}}}copyIntoFileAndCloseStream(new URL(DOWNLOAD_URL).openStream(), tempFile);final ZipFile zipFile = new ZipFile(tempFile);try {final ZipEntry entry = zipFile.getEntry(""jflex/lib/JFlex.jar"");copyIntoFileAndCloseStream(zipFile.getInputStream(entry), jarFile);} finally {zipFile.close();}return true;}}"	2
5077	public class A {public boolean teamExists(Integer teamId) {boolean exists = getHibernateTemplate().get(ProgramTeam.class, teamId) != null;return exists;}}	1
5078	"public class A {public Cookie[] parse(String host, int port, String path, boolean secure, final Header header)throws MalformedCookieException {if (header == null) {throw new IllegalArgumentException(""Header may not be null."");}return parse(host, port, path, secure, header.getValue());}}"	1
5079	"public class A {@Overridepublic void initialize() {config = getConfigAs(LocalFolderWatcherConfiguration.class);updateStatus(ThingStatus.UNKNOWN);if (!Files.isDirectory(Paths.get(config.localDir))) {updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.CONFIGURATION_ERROR,""Local directory is not valid"");return;}try {previousLocalListing = WatcherCommon.initStorage(currentLocalListingFile, config.localDir);} catch (IOException e) {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, e.getMessage());return;}if (config.pollIntervalLocal > 0) {updateStatus(ThingStatus.ONLINE);executionJob =scheduler.scheduleWithFixedDelay(this::refreshFolderInformation,config.pollIntervalLocal,config.pollIntervalLocal,TimeUnit.SECONDS);} else {updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.CONFIGURATION_ERROR,""Polling interval can't be null or negative"");return;}}}"	1
5080	"public class A {@Override@Deprecatedpublic void visit(Iterable<? extends Element> elements, GraphVisitor visitor) {int i = 0;for (Element element : elements) {if (i % 1000000 == 0) {}visitor.visitElement(element);if (element instanceof Vertex) {visitor.visitVertex((Vertex) element);} else if (element instanceof Edge) {visitor.visitEdge((Edge) element);} else {throw new VertexiumException(""Invalid element type to visit: "" + element.getClass().getName());}for (Property property : element.getProperties()) {visitor.visitProperty(element, property);}for (String tableName : element.getExtendedDataTableNames()) {for (ExtendedDataRow extendedDataRow : element.getExtendedData(tableName)) {visitor.visitExtendedDataRow(element, tableName, extendedDataRow);for (Property property : extendedDataRow.getProperties()) {visitor.visitProperty(element, tableName, extendedDataRow, property);}}}i++;}}}"	1
5081	public class A {@Overridepublic void process(InputStream in) throws IOException {TextLineDemarcator demarcator = new TextLineDemarcator(in);SplitInfo splitInfo = null;long startOffset = 0;long start = System.nanoTime();try {if (SplitText.this.headerLineCount > 0) {splitInfo =SplitText.this.computeHeader(demarcator, startOffset, SplitText.this.headerLineCount, null, null);if ((splitInfo != null) && (splitInfo.lineCount < SplitText.this.headerLineCount)) {error.set(true);getLogger()}} else if (SplitText.this.headerMarker != null) {splitInfo =SplitText.this.computeHeader(demarcator,startOffset,Long.MAX_VALUE,SplitText.this.headerMarker.getBytes(StandardCharsets.UTF_8),null);}headerSplitInfoRef.set(splitInfo);} catch (IllegalStateException e) {error.set(true);}if (!error.get()) {if (headerSplitInfoRef.get() != null) {startOffset = headerSplitInfoRef.get().length;}long preAccumulatedLength = startOffset;while ((splitInfo =SplitText.this.nextSplit(demarcator,startOffset,SplitText.this.lineCount,splitInfo,preAccumulatedLength))!= null) {computedSplitsInfo.add(splitInfo);startOffset += splitInfo.length;}long stop = System.nanoTime();if (getLogger().isDebugEnabled()) {}}}}	3
5082	public class A {private void recordAudit(HttpServletRequest httpRequest, String whenISO9601) {final String who = getUserFromRequest(httpRequest);final String fromHost = httpRequest.getRemoteHost();final String fromAddress = httpRequest.getRemoteAddr();final String whatURL = Servlets.getRequestURL(httpRequest);final String whatAddrs = httpRequest.getLocalAddr();GenericAlert.audit(who, fromAddress, fromHost, whatURL, whatAddrs, whenISO9601);}}	1
5083	"public class A {@Path(""/getMetadataShouldSucceed"")@POSTpublic void getMetadataShouldSucceed() {String uri = String.format(URI_FORMAT, SwiftConstants.GET_METADATA);Map<?, ?> metadata =template.requestBodyAndHeader(uri, null, SwiftConstants.CONTAINER_NAME, CONTAINER_NAME, Map.class);assertNotNull(metadata);assertEquals(""2000"", metadata.get(NAME_YEAR));assertEquals(""TestBook"", metadata.get(NAME_BOOK));}}"	1
5084	public class A {@Overridepublic void deserialize(ByteBuffer buffer) {String pathString = readString(buffer);try {path = new PartialPath(pathString);} catch (IllegalPathException e) {}index = buffer.getLong();}}	1
5085	public class A {public void close() throws RemoteException {readRmiStreamAdaptorProxy.close();if (AdaptorConstants.adaptorImpl == AdaptorImplType.socket) {readSocketStreamAdaptorProxy.close();}}}	2
5086	public class A {@Overridepublic boolean isActive() {try {Mongo mongo = this.createNewMongo(getProperties());return mongo != null;} catch (Exception e) {return false;}}}	1
5087	"public class A {public void testGetFile() throws Exception {ByteArrayContainerResponseWriter writer = new ByteArrayContainerResponseWriter();String requestPath = SERVICE_URI + ""item/"" + fileId;ContainerResponse response =launcher.service(HttpMethod.GET, requestPath, BASE_URI, null, null, writer, null);assertEquals(""Error: "" + response.getEntity(), 200, response.getStatus());Item item = (Item) response.getEntity();assertEquals(ItemType.FILE, item.getItemType());assertEquals(fileId, item.getId());assertEquals(filePath, item.getPath());validateLinks(item);}}"	1
5088	public class A {@Overridepublic Map<String, SctId> register(final Set<String> componentIds) {if (CompareUtils.isEmpty(componentIds)) {return Collections.emptyMap();}final Map<String, SctId> sctIds = getSctIds(componentIds);final Map<String, SctId> availableOrReservedSctIds =ImmutableMap.copyOf(Maps.filterValues(sctIds, Predicates.or(SctId::isAvailable, SctId::isReserved)));for (final SctId sctId : availableOrReservedSctIds.values()) {sctId.setStatus(IdentifierStatus.ASSIGNED.getSerializedName());}putSctIds(availableOrReservedSctIds);return ImmutableMap.copyOf(sctIds);}}	1
5089	"public class A {public void setMatchAllMappings(List<String> list) {String[] values;matchAllMap.clear();if (list != null) {for (String mapping : list) {values = mapping.split(""="");if (values.length == 2) {securityLogger.audit(""Adding mapping: {} = {} to matchAllMap."", values[1].trim(), values[0].trim());matchAllMap.put(values[1].trim(), values[0].trim());} else {}}}}}"	1
5090	"public class A {private void processOrderByClause(TermsBuilder termsBuilder,Expression orderByExpression,Expression groupByClause,EntityMetadata entityMetadata) {Expression orderByClause = (OrderByClause) orderByExpression;OrderByItem orderByItems = (OrderByItem) ((OrderByClause) orderByClause).getOrderByItems();if (orderByClause instanceof CollectionExpression|| !(orderByItems.getExpression().toParsedText().equalsIgnoreCase(groupByClause.toParsedText()))) {throw new UnsupportedOperationException(""Order by and group by on different field are not supported simultaneously"");}String ordering = orderByItems.getOrdering().toString();termsBuilder.order(Terms.Order.term(!ordering.equalsIgnoreCase(Expression.DESC)));}}"	1
5091	"public class A {@WithMockUser(username = USERNAME)@SuppressWarnings({""OptionalGetWithoutIsPresent""})@Testvoid testCopyEntityType() {String targetPackageId = ""target2"";addTargetPackage(targetPackageId);ResourceIdentifier id = ResourceIdentifier.create(ResourceType.ENTITY_TYPE, ENTITY_TYPE_A);TestProgress progress = new TestProgress();copyService.copy(singletonList(id), targetPackageId, progress);await().atMost(5, TimeUnit.SECONDS).until(copyJobFinished(progress));waitForWorkToBeFinished(indexService, LOG);Package targetPackage = metadataService.getPackage(targetPackageId).get();List<Package> packages = newArrayList(targetPackage.getChildren());List<EntityType> entityTypes = newArrayList(targetPackage.getEntityTypes());assertEquals(0, packages.size());assertEquals(1, entityTypes.size());EntityType entityTypeACopy = entityTypes.get(0);assertEquals(""EntityType A"", entityTypeACopy.getLabel());assertEquals(ENTITY_TYPE_B, entityTypeA.getAttribute(""xref_attr"").getRefEntity().getId());assertEquals(ENTITY_TYPE_B, entityTypeACopy.getAttribute(""xref_attr"").getRefEntity().getId());assertEquals(1, progress.getProgress());List<Object> entitiesOfA =dataService.findAll(entityTypeACopy.getId()).map(Entity::getIdValue).collect(toList());assertEquals(asList(""0"", ""1"", ""2""), entitiesOfA);cleanupTargetPackage(targetPackageId);}}"	1
5092	public class A {@Overridepublic void destroyFavorite(final long id) {getDispatcher().invokeLater(new AsyncTask(DESTROY_FAVORITE, listeners) {@Overridepublic void invoke(List<TwitterListener> listeners) throws TwitterException {Status status = twitter.destroyFavorite(id);for (TwitterListener listener : listeners) {try {listener.destroyedFavorite(status);} catch (Exception e) {}}}});}}	1
5093	"public class A {@Overridepublic void processMessage(final ObjectMessage message) throws JMSException {String correlationUid = null;String messageType = null;int messagePriority = MessagePriorityEnum.DEFAULT.getPriority();String organisationIdentification = null;String deviceIdentification = null;ResponseMessage responseMessage;ResponseMessageResultType responseMessageResultType = null;OsgpException osgpException = null;try {correlationUid = message.getJMSCorrelationID();messageType = message.getJMSType();messagePriority = message.getJMSPriority();organisationIdentification = message.getStringProperty(Constants.ORGANISATION_IDENTIFICATION);deviceIdentification = message.getStringProperty(Constants.DEVICE_IDENTIFICATION);responseMessage = (ResponseMessage) message.getObject();responseMessageResultType = responseMessage.getResult();osgpException = responseMessage.getOsgpException();} catch (final JMSException e) {LOGGER.debug(""deviceIdentification: {}"", deviceIdentification);return;}try {if (this.isSetTransitionResponseLoggingEnabled) {final CorrelationIds ids =new CorrelationIds(organisationIdentification, deviceIdentification, correlationUid);this.adHocManagementService.handleSetTransitionResponse(ids, messageType, messagePriority, responseMessageResultType, osgpException);} else {final CorrelationIds ids =new CorrelationIds(organisationIdentification, deviceIdentification, correlationUid);this.defaultDeviceResponseService.handleDefaultDeviceResponse(ids, messageType, messagePriority, responseMessageResultType, osgpException);}} catch (final Exception e) {this.handleError(e,correlationUid,organisationIdentification,deviceIdentification,messageType,messagePriority);}}}"	10
5094	"public class A {public SysExportNotiz findById(sernet.gs.reveng.SysExportNotizId id) {try {SysExportNotiz instance =(SysExportNotiz)sessionFactory.getCurrentSession().get(""sernet.gs.reveng.SysExportNotiz"", id);if (instance == null) {} else {}return instance;} catch (RuntimeException re) {throw re;}}}"	4
5095	public class A {@Overridepublic void run(ExternalContext externalContext) {Thread.setDefaultUncaughtExceptionHandler(new SamzaUncaughtExceptionHandler(() -> {System.exit(1);}));ContainerLaunchUtil.run(appDesc, System.getenv(ShellCommandConfig.ENV_CONTAINER_ID), ContainerCfgLoader.jobModel);}}	1
5096	"public class A {@Overridepublic void process(HealthCheckTask task) {List<Instance> ips = task.getCluster().allIPs(false);if (CollectionUtils.isEmpty(ips)) {return;}for (Instance ip : ips) {try {if (ip.isMarked()) {if (SRV_LOG.isDebugEnabled()) {}continue;}if (!ip.markChecking()) {healthCheckCommon.reEvaluateCheckRT(task.getCheckRtNormalized() * 2, task, switchDomain.getMysqlHealthParams());continue;}GlobalExecutor.executeMysqlCheckTask(new MysqlCheckTask(ip, task));MetricsMonitor.getMysqlHealthCheckMonitor().incrementAndGet();} catch (Exception e) {ip.setCheckRt(switchDomain.getMysqlHealthParams().getMax());healthCheckCommon.checkFail(ip, task, ""mysql:error:"" + e.getMessage());healthCheckCommon.reEvaluateCheckRT(switchDomain.getMysqlHealthParams().getMax(),task,switchDomain.getMysqlHealthParams());}}}}"	3
5097	public class A {public void agentLost(Protos.AgentID agentId) {agentAndRackManager.agentLost(agentId);}}	1
5098	"public class A {@Overridepublic synchronized void registerChannelListener(final String channelName, final ChannelListener channelListener) throws KuraException {requireNonNull(channelName, ""Channel name cannot be null"");requireNonNull(channelListener, ""Asset Listener cannot be null"");final Map<String, Channel> channels = this.config.getAssetConfiguration().getAssetChannels();final Channel channel = channels.get(channelName);if (channel == null) {throw new IllegalArgumentException(""Channel not found"");}final ChannelListenerRegistration reg =new ChannelListenerRegistration(channelName, channelListener);if (this.channelListeners.contains(reg)) {return;}this.channelListeners.add(reg);final DriverState state = this.driverState.get();if (state == null) {return;}this.executor.runConfig(() -> state.syncChannelListeners(this.channelListeners, channels));}}"	1
5099	public class A {private @Nullable String getChannelTypeId(ChannelUID channelUID) {Channel channel = thing.getChannel(channelUID);if (channel == null) {return null;}ChannelTypeUID channelTypeUID = channel.getChannelTypeUID();if (channelTypeUID == null) {return null;}String channelTypeId = channelTypeUID.getId();if (channelTypeId == null) {return null;}return channelTypeId;}}	3
5100	"public class A {public void load(String configurationName) {boolean configFound = false;Map<String, String> allConfigNamesItems = ConfigurationUtils.retrieveAllConfigNames(this);for (Entry<String, String> currentConfigNameItem : allConfigNamesItems.entrySet()) {String currentConfigurationName = currentConfigNameItem.getKey();String classLoaderType = currentConfigNameItem.getValue();if (configurationName == null || configurationName.equals(currentConfigurationName)) {configFound = true;ConfigurationException customClassLoaderConfigurationException = null;ClassLoader classLoader = null;try {classLoader = classLoaderManager.get(currentConfigurationName, classLoaderType);if (classLoader == null) continue;} catch (ConfigurationException e) {customClassLoaderConfigurationException = e;if (LOG.isDebugEnabled())}if (LOG.isDebugEnabled())try {loadingConfigs.add(currentConfigurationName);createAndConfigureConfigurationWithClassLoader(classLoader, currentConfigurationName, customClassLoaderConfigurationException);} catch (Exception e) {log(currentConfigurationName,null,""an unhandled exception occurred while loading configuration [""+ currentConfigurationName+ ""]"",MessageKeeperLevel.ERROR,e);} finally {loadingConfigs.remove(currentConfigurationName);}}}generateFlow();if (!configFound && configurationName != null) {log(configurationName,null,configurationName + "" not found in ["" + allConfigNamesItems.keySet().toString() + ""]"",MessageKeeperLevel.ERROR);}}}"	4
5101	public class A {@Overridepublic void process(WatchedEvent watchedEvent) {synchronized (this) {this.watchedEvent = watchedEvent;}}}	1
5102	"public class A {private User getUserBySSO(String token) throws ServletException {try {String response =HttpJsonHelper.requestString(apiEndPoint + ""/internal/sso/server/"" + token,""GET"",null,Pair.of(""clienturl"", URLEncoder.encode(apiEndPoint, ""UTF-8"")));JsonValue value = JsonHelper.parseJson(response);return new UserImpl(value.getElement(""name"").getStringValue(),value.getElement(""id"").getStringValue(),value.getElement(""token"").getStringValue(),Collections.<String>emptySet(),value.getElement(""temporary"").getBooleanValue());} catch (ForbiddenException | UnauthorizedException | ServerException un) {return null;} catch (ConflictException | NotFoundException | IOException | JsonParseException e) {throw new ServletException(e.getMessage(), e);}}}"	1
5103	"public class A {@Overridepublic void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit();WarMetaData warMetaData = deploymentUnit.getAttachment(WarMetaData.ATTACHMENT_KEY);if (warMetaData == null) {return;}JBossWebMetaData webMetaData = warMetaData.getMergedJBossWebMetaData();if (webMetaData == null) {webMetaData = new JBossWebMetaData();warMetaData.setMergedJBossWebMetaData(webMetaData);}LoginConfigMetaData loginConfig = webMetaData.getLoginConfig();try {boolean webRequiresKC =loginConfig != null && ""KEYCLOAK-SAML"".equalsIgnoreCase(loginConfig.getAuthMethod());boolean hasSubsystemConfig = Configuration.INSTANCE.isSecureDeployment(deploymentUnit);if (hasSubsystemConfig || webRequiresKC) {if (hasSubsystemConfig) {addXMLData(getXML(deploymentUnit), warMetaData);if (loginConfig != null) {loginConfig.setAuthMethod(""KEYCLOAK-SAML"");} else {}}addValve(webMetaData);KeycloakLogger.ROOT_LOGGER.deploymentSecured(deploymentUnit.getName());}} catch (Exception e) {throw new DeploymentUnitProcessingException(""Failed to configure KeycloakSamlExtension from subsystem model"", e);}}}"	2
5104	"public class A {@ApiOperation(value = ""get history by profile's id"")@GetMapping(CommonConstants.PATH_LOGBOOK)public LogbookOperationsResponseDto findHistoryById(final @PathVariable String id) {ParameterChecker.checkParameter(""The Identifier is a mandatory parameter: "", id);return service.findHistoryById(buildUiHttpContext(), id);}}"	1
5105	public class A {protected void deleteTestTable(String tableName) {KuduClient client = ikc.getClient();try {client.deleteTable(tableName);} catch (Exception e) {}}}	3
5106	"public class A {protected Future<Message> processRegisterCommandConsumer(final Message request,final ResourceIdentifier targetAddress,final SpanContext spanContext) {final String tenantId = targetAddress.getTenantId();final String deviceId = MessageHelper.getDeviceId(request);final String adapterInstanceId =MessageHelper.getApplicationProperty(request.getApplicationProperties(),MessageHelper.APP_PROPERTY_ADAPTER_INSTANCE_ID,String.class);final Integer lifespanSecondsOrNull =MessageHelper.getApplicationProperty(request.getApplicationProperties(), MessageHelper.APP_PROPERTY_LIFESPAN, Integer.class);final Span span =TracingHelper.buildServerChildSpan(tracer,spanContext,SPAN_NAME_REGISTER_COMMAND_CONSUMER,getClass().getSimpleName()).start();final Future<Message> resultFuture;if (tenantId == null || deviceId == null || adapterInstanceId == null) {TracingHelper.logError(span, ""missing tenant, device and/or adapter instance id"");resultFuture =Future.failedFuture(new ClientErrorException(HttpURLConnection.HTTP_BAD_REQUEST));} else {final Duration lifespan =lifespanSecondsOrNull != null? Duration.ofSeconds(lifespanSecondsOrNull): Duration.ofSeconds(-1);TracingHelper.TAG_TENANT_ID.set(span, tenantId);TracingHelper.TAG_DEVICE_ID.set(span, deviceId);span.setTag(MessageHelper.APP_PROPERTY_ADAPTER_INSTANCE_ID, adapterInstanceId);span.setTag(MessageHelper.APP_PROPERTY_LIFESPAN, lifespan.getSeconds());resultFuture =getService().registerCommandConsumer(tenantId, deviceId, adapterInstanceId, lifespan, span).map(res ->CommandRouterConstants.getAmqpReply(CommandRouterConstants.COMMAND_ROUTER_ENDPOINT, tenantId, request, res));}return finishSpanOnFutureCompletion(span, resultFuture);}}"	1
5107	public class A {@Overridepublic Set<String> queryNames() {long start = System.currentTimeMillis();Set<String> names =withAllReams(realm -> {try {return realm.getDirectory().query(type, null, null, TypeMapping.SearchScope.SUBTREE).stream();} catch (DirectoryException e) {throw new RuntimeException(e);}}).collect(Collectors.toSet());return names;}}	1
5108	public class A {private void createOrUpdateIndexerSearchEnties(SearchCacheEntry searchCacheEntry) {Stopwatch stopwatch = Stopwatch.createStarted();int countEntities = 0;for (IndexerSearchCacheEntry indexerSearchCacheEntry :searchCacheEntry.getIndexerCacheEntries().values()) {for (IndexerSearchResult indexerSearchResult :indexerSearchCacheEntry.getIndexerSearchResults()) {IndexerSearchEntity entity = indexerSearchCacheEntry.getIndexerSearchEntity();if (entity == null) {entity = new IndexerSearchEntity();entity.setIndexerEntity(indexerSearchResult.getIndexer().getIndexerEntity());entity.setSearchEntity(searchCacheEntry.getSearchEntity());entity.setResultsCount(indexerSearchResult.getTotalResults());entity.setSuccessful(indexerSearchResult.isWasSuccessful());indexerSearchCacheEntry.setIndexerSearchEntity(entity);}if (configProvider.getBaseConfig().getMain().isKeepHistory()) {entity = indexerSearchRepository.save(entity);for (SearchResultEntity x : indexerSearchResult.getSearchResultEntities()) {x.setIndexerSearchEntity(entity);}}searchResultRepository.saveAll(indexerSearchResult.getSearchResultEntities());searchCacheEntry.getIndexerCacheEntries().get(indexerSearchResult.getIndexer()).setIndexerSearchEntity(entity);countEntities++;}}}}	1
5109	"public class A {@Overrideprotected Collection<ValidationResult> customValidate(final ValidationContext context) {Collection<ValidationResult> commonValidationResults = super.customValidate(context);if (!commonValidationResults.isEmpty()) {return commonValidationResults;}scriptingComponentHelper.setScriptEngineName(context.getProperty(scriptingComponentHelper.SCRIPT_ENGINE).getValue());scriptingComponentHelper.setScriptPath(context.getProperty(ScriptingComponentUtils.SCRIPT_FILE).evaluateAttributeExpressions().getValue());scriptingComponentHelper.setScriptBody(context.getProperty(ScriptingComponentUtils.SCRIPT_BODY).getValue());String modulePath = context.getProperty(ScriptingComponentUtils.MODULES).getValue();if (!StringUtils.isEmpty(modulePath)) {scriptingComponentHelper.setModules(modulePath.split("",""));} else {scriptingComponentHelper.setModules(new String[0]);}setup();final Processor instance = processor.get();final Collection<ValidationResult> currentValidationResults = validationResults.get();if (currentValidationResults.isEmpty() && instance != null) {try {final Collection<ValidationResult> instanceResults = instance.validate(context);if (instanceResults != null && instanceResults.size() > 0) {return instanceResults;}} catch (final Exception e) {final ComponentLog logger = getLogger();final String message = ""Unable to validate the script Processor: "" + e;final Collection<ValidationResult> results = new HashSet<>();results.add(new ValidationResult.Builder().subject(""Validation"").valid(false).explanation(""An error occurred calling validate in the configured script Processor."").input(context.getProperty(ScriptingComponentUtils.SCRIPT_FILE).getValue()).build());return results;}}return currentValidationResults;}}"	1
5110	"public class A {public static User waitForUserActive(User user, TimeoutBudget budget) throws Exception {var client = Kubernetes.getInstance().getUserClient(user.getMetadata().getNamespace());String name = user.getMetadata().getName();User foundUser = client.withName(name).get();while (budget.timeLeft() >= 0 && !isUserActive(foundUser)) {Thread.sleep(1000);foundUser = client.withName(name).get();}foundUser = client.withName(name).get();if (!isUserActive(foundUser)) {throw new IllegalStateException(String.format(""User %s is not in phase Active within timeout: %s"", name, foundUser));}return foundUser;}}"	2
5111	"public class A {private void checkLengthConsistency() {Document document = getCachedDocument();if (document instanceof DocumentWindow) {return;}if (document != null&& ((PsiDocumentManagerBase) PsiDocumentManager.getInstance(myManager.getProject())).getSynchronizer().isInSynchronization(document)) {return;}List<FileElement> knownTreeRoots = getKnownTreeRoots();if (knownTreeRoots.isEmpty()) return;int fileLength = myContent.getTextLength();for (FileElement fileElement : knownTreeRoots) {int nodeLength = fileElement.getTextLength();if (!isDocumentConsistentWithPsi(fileLength, fileElement, nodeLength)) {PsiUtilCore.ensureValid(fileElement.getPsi());List<Attachment> attachments =ContainerUtil.newArrayList(new Attachment(myVirtualFile.getName(), myContent.getText().toString()),new Attachment(myVirtualFile.getNameWithoutExtension() + "".tree.txt"", fileElement.getText()));if (document != null) {attachments.add(new Attachment(myVirtualFile.getNameWithoutExtension() + "".document.txt"", document.getText()));}}}}}"	1
5112	public class A {private static String resolveLocalHostname() {String localhost;try {localhost = InetAddress.getLocalHost().getCanonicalHostName();} catch (UnknownHostException e) {localhost = LOCALHOST;}return localhost;}}	1
5113	public class A {@Overridepublic void accept(ByteBuffer buffer) {JobId jobId = new JobId(buffer.getLong());ResultSetId rsId = new ResultSetId(buffer.getLong());int partition = buffer.getInt();if (LOGGER.isTraceEnabled()) {}noc = new NetworkOutputChannel(ccb, nBuffers);try {partitionManager.initializeResultPartitionReader(jobId, rsId, partition, noc);} catch (HyracksException e) {noc.abort(AbstractChannelWriteInterface.REMOTE_ERROR_CODE);}}}	2
5114	"public class A {@OverrideString createOid(String... keys) {String oid = ""IG_"";String crfName = keys[0];String itemGroupLabel = keys[1];crfName = truncateToXChars(capitalize(stripNonAlphaNumeric(crfName)), 5);itemGroupLabel = truncateToXChars(capitalize(stripNonAlphaNumeric(itemGroupLabel)), 26);oid = oid + crfName + ""_"" + itemGroupLabel;if (oid.equals(""IG_"") || oid.equals(""IG__"")) {oid = randomizeOid(""IG_"");}return oid;}}"	3
5115	public class A {private boolean isValid(Map<String, Object> config) {Object timeUnit = config.get(TIME_UNIT_CONFIG_KEY);if (timeUnit == null || !SUPPORTED_TIME_UNITS.contains(timeUnit)) {return false;}try {configDescriptionValidator.validate(config, new URI(CONFIG_DESC_URI_KEY));} catch (URISyntaxException | ConfigValidationException e) {return false;}return true;}}	2
5116	"public class A {public static String buildBaseURI(UriInfo uriInfo, HttpHeaders headers) {URI base = uriInfo.getBaseUriBuilder().path(uriInfo.getPath()).build();if (log.isDebugEnabled() && headers != null && headers.getRequestHeaders() != null) {for (String key : headers.getRequestHeaders().keySet()) {for (String h : headers.getRequestHeader(key)) {}}}String scheme = base.getScheme();if (headers != null) {List<String> protos = headers.getRequestHeader(""X-Forwarded-Proto"");if (protos != null && protos.size() >= 1) {scheme = protos.get(0);}}List<String> proxies = (headers == null) ? null : headers.getRequestHeader(""X-Forwarded-Host"");if (proxies == null || proxies.size() < 1) {return base.toASCIIString();} else {try {URI proxy = new URI(""http://"" + proxies.get(0));return new URI(scheme,base.getRawUserInfo(),proxy.getHost(),proxy.getPort(),base.getRawPath(),base.getRawQuery(),base.getRawFragment()).toASCIIString();} catch (URISyntaxException e) {return base.toASCIIString();}}}}"	2
5117	public class A {@Testpublic void testGetByModule() {List<Commit> list = ESSuiteTest.commitDao.getByModule(ESSuiteTest.MODULE_ID_2);for (Commit commit : list) {}assertEquals(2, list.size());}}	2
5118	public class A {private void setClientRecordCipher(Tls13KeySetType keySetType) {tlsContext.setActiveClientKeySetType(keySetType);KeySet clientKeySet = getKeySet(tlsContext, tlsContext.getActiveClientKeySetType());RecordCipher recordCipherClient =RecordCipherFactory.getRecordCipher(tlsContext, clientKeySet, tlsContext.getChooser().getSelectedCipherSuite());tlsContext.getRecordLayer().setRecordCipher(recordCipherClient);if (tlsContext.getChooser().getConnectionEndType() == ConnectionEndType.SERVER) {tlsContext.setReadSequenceNumber(0);tlsContext.getRecordLayer().updateDecryptionCipher();} else {tlsContext.setWriteSequenceNumber(0);tlsContext.getRecordLayer().updateEncryptionCipher();}}}	1
5119	public class A {private void writeSessionIdHit(SSL2ServerHelloMessage message) {appendByte(message.getSessionIdHit().getValue());}}	1
5120	"public class A {private void sendNotification(long entityId, String templateId) {if (templateId == null) return;try {EntityParam recipient = new EntityParam(entityId);String entityName = getEntityLabel(recipient);Map<String, String> params = new HashMap<>();params.put(UserNotificationTemplateDef.USER, entityName == null ? """" : entityName);notificationProducer.sendNotification(recipient, templateId, params, cfg.getDefaultLocale().toString(), null, false);} catch (Exception e) {}}}"	1
5121	public class A {public Object peek() {Object key = null;Object object = null;getInitializationLock().readLock().lock();try {if (this.getPartitionedRegion().isDestroyed()) {throw new BucketRegionQueueUnavailableException();}key = this.eventSeqNumDeque.peekFirst();if (key != null) {boolean setDuplicate = markAsDuplicate.remove(key);object = optimalGet(key);if (object != null) {if (setDuplicate) {if (logger.isDebugEnabled()) {}((GatewaySenderEventImpl) object).setPossibleDuplicate(true);}} else if (!this.getPartitionedRegion().isConflationEnabled()) {if (logger.isDebugEnabled()) {}}this.eventSeqNumDeque.remove(key);}return object;} finally {getInitializationLock().readLock().unlock();}}}	2
5122	"public class A {@Overridepublic List<String> searchIdeas(String instanceCode, Integer status, String text, String category, Integer order)throws ApsSystemException {List<String> list = new ArrayList<String>();try {list = this.getIdeaDAO().searchIdea(instanceCode, status, text, category, order);} catch (Throwable t) {throw new ApsSystemException(""Error in searchIdeas"", t);}return list;}}"	1
5123	public class A {private boolean isTopicOwned(TopicName topicName) {Optional<NamespaceBundle> bundle = getBundleIfPresent(topicName);if (bundle.isPresent()) {return ownershipCache.getOwnedBundle(bundle.get()) != null;} else {getBundleAsync(topicName).thenAccept(bundle2 -> {}).exceptionally(ex -> {return null;});return false;}}}	2
5124	"public class A {@Overridepublic NodeSet eval(final NGramIndexWorker index,final DocumentSet docs,final List<QName> qnames,final NodeSet nodeSet,final int axis,final int expressionId)throws XPathException {boolean startAnchorPresent = false;if (!expressions.isEmpty() && expressions.get(0) instanceof StartAnchor) {startAnchorPresent = true;expressions.remove(0);}Wildcard leadingWildcard = null;if (!expressions.isEmpty() && expressions.get(0) instanceof Wildcard)leadingWildcard = (Wildcard) expressions.remove(0);boolean endAnchorPresent = false;if (!expressions.isEmpty() && expressions.get(expressions.size() - 1) instanceof EndAnchor) {endAnchorPresent = true;expressions.remove(expressions.size() - 1);}Wildcard trailingWildcard = null;if (!expressions.isEmpty() && expressions.get(expressions.size() - 1) instanceof Wildcard)trailingWildcard = (Wildcard) expressions.remove(expressions.size() - 1);while (expressions.size() >= 3) {formEvaluatableTriples(expressionId);}if (expressions.isEmpty()) return new EmptyNodeSet();if (expressions.size() != 1 || !(expressions.get(0) instanceof EvaluatableExpression)) {throw new XPathException(""Could not evaluate wildcarded query."");}NodeSet result =((EvaluatableExpression) expressions.get(0)).eval(index, docs, qnames, nodeSet, axis, expressionId);if (leadingWildcard != null)result = expandMatchesBackward(leadingWildcard, result, expressionId);if (startAnchorPresent) result = NodeSets.getNodesMatchingAtStart(result, expressionId);if (trailingWildcard != null)result = expandMatchesForward(trailingWildcard, result, expressionId);if (endAnchorPresent) result = NodeSets.getNodesMatchingAtEnd(result, expressionId);return result;}}"	2
5125	"public class A {static Optional<EndpointBuilder> lookup(String builder) {try {EndpointBuilder instance;if (builder.contains(""."")) {int separatorIndex = builder.lastIndexOf('.');instance =TYPE_RESOLVER.resolve(builder.substring(0, separatorIndex), builder.substring(separatorIndex + 1));} else {instance = TYPE_RESOLVER.resolve(builder);}return Optional.of(instance);} catch (CitrusRuntimeException e) {}return Optional.empty();}}"	1
5126	"public class A {private static String loadFromSftp(Map<String, Object> config, String fileName) {String remoteDir = MapUtils.getString(config, KEY_REMOTE_DIR);String filePathOnSftp = remoteDir + ""/"" + fileName;String localDirName = Md5Util.getMd5(remoteDir);String localDir = LOCAL_CACHE_DIR + SP + localDirName;localDir = createDir(localDir);String fileLocalPath = localDir + SP + fileName;if (fileExists(fileLocalPath)) {delectFile(fileLocalPath);}SftpHandler handler = null;try {handler = SftpHandler.getInstanceWithRetry(MapUtils.getMap(config, KEY_SFTP_CONF));if (handler.isFileExist(filePathOnSftp)) {handler.downloadFileWithRetry(filePathOnSftp, fileLocalPath);return fileLocalPath;}} catch (Exception e) {throw new RuntimeException(e);} finally {if (handler != null) {handler.close();}}throw new RuntimeException(""File["" + filePathOnSftp + ""] not exist on sftp"");}}"	1
5127	public class A {@Overridepublic String getCanonicalURL(Layout layout, Locale locale) {Optional<ThemeDisplay> themeDisplayOptional = _getThemeDisplayOptional();return themeDisplayOptional.map(themeDisplay -> {try {String canonicalURL =_portal.getCanonicalURL(_getCompleteURL(themeDisplay), themeDisplay, layout, false, false);LayoutSEOLink layoutSEOLink =_layoutSEOLinkManager.getCanonicalLayoutSEOLink(layout,locale,canonicalURL,_portal.getAlternateURLs(canonicalURL, themeDisplay, layout));return layoutSEOLink.getHref();} catch (PortalException portalException) {return StringPool.BLANK;}}).orElse(StringPool.BLANK);}}	1
5128	"public class A {private Map<String, Object> generateAccessToken(String requestBodyUrl, String clientId) {Map<String, Object> accessTokenDetails = Maps.newHashMap();try {String url = System.getenv(DOMAIN_URL) + ""/oauth/token"";Map<String, String> headers = Maps.newHashMap();headers.put(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_FORM_URLENCODED_VALUE);String clientCredentials = null;try {String authString = clientId.concat("":"").concat(oauth2ClientSecret);byte[] authEncBytes = Base64.encodeBase64(authString.getBytes());clientCredentials = ""Basic "" + new String(authEncBytes);} catch (Exception exception) {return response(false, ""Client Validation Failed!!!"");}headers.put(HttpHeaders.AUTHORIZATION, clientCredentials);String accessToken = doHttpPost(url, requestBodyUrl, headers);accessTokenDetails =mapper.readValue(accessToken, new TypeReference<HashMap<String, Object>>() {});if (accessTokenDetails.containsKey(""error_description"")) {return response(false, accessTokenDetails.get(""error_description"").toString());} else {accessTokenDetails.put(""success"", true);accessTokenDetails.put(""message"", ""Authentication Successfull"");}} catch (Exception exception) {return response(false, ""Unexpected Error Occured!!!"");}return accessTokenDetails;}}"	2
5129	public class A {@Overridepublic boolean isFull() {if (offHeapQueue == null) {int remaining = inMemoryQueue.remainingCapacity();return remaining <= 0;}return fileCapacityLatch.isFull();}}	1
5130	public class A {private void waitUntilServerIsInitialized() {int i = 0;for (; i < 60; i++) {if (server.hasInitialized() || shutdown) {return;}try {Thread.sleep(1000);} catch (InterruptedException e) {}}shutdown = true;}}	2
5131	public class A {public MobicentsSipServletMapping findSipServletMappings(SipServletRequest sipServletRequest) {if (logger.isDebugEnabled()) {}for (MobicentsSipServletMapping sipServletMapping : sipServletMappings) {if (sipServletMapping.getMatchingRule().matches(sipServletRequest)) {return sipServletMapping;} else {}}return null;}}	2
5132	"public class A {@Overridepublic ConnectionTestResult runTests(final List<TestType> testTypes) throws JargonException {if (testTypes == null || testTypes.isEmpty()) {throw new IllegalArgumentException(""null or empty testTypes"");}ConnectionTestResult testResult = new ConnectionTestResult();testResult.setConfiguration(connectionTesterConfiguration);testResult.setIrodsAccount(getIrodsAccount());for (TestType testType : testTypes) {List<TestResultEntry> individualTestResults = processTest(testType);testResult.getTestResults().addAll(individualTestResults);}return testResult;}}"	1
5133	public class A {protected void createUser(String username) {UserManager userManager = UserManager.getInstance();try {userManager.getUser(username);} catch (UserNotFoundException unfe) {try {UserManager.getUserProvider().createUser(username, StringUtils.randomString(8), null, null);} catch (UserAlreadyExistsException uaee) {}}}}	1
5134	public class A {public void initScannerCommons() {kuduConsumerExecutor = Executors.newFixedThreadPool(threadPoolExecutorSize);List<KuduPartitionScanAssignmentMeta> allPartitionsThatNeedScan =parentOperator.getPartitionPieAssignment();Collections.sort(allPartitionsThatNeedScan,new Comparator<KuduPartitionScanAssignmentMeta>() {@Overridepublic int compare(KuduPartitionScanAssignmentMeta left, KuduPartitionScanAssignmentMeta right) {return left.getOrdinal() - right.getOrdinal();}});for (int i = 0; i < threadPoolExecutorSize; i++) {connectionPoolForThreads.put(i, apexKuduConnectionInfo.build());}}}	1
5135	"public class A {@Transactionalpublic void createVoucherfromPreApprovedVoucher(final long vouhcerheaderid)throws ApplicationRuntimeException {String voucherStatus = null;try {final List vStatusList =appConfigValuesService.getConfigValuesByModuleAndKey(""EGF"", ""APPROVEDVOUCHERSTATUS"");if (!vStatusList.isEmpty() && vStatusList.size() == 1) {final AppConfigValues appVal = (AppConfigValues) vStatusList.get(0);voucherStatus = appVal.getValue();} else throw new ApplicationRuntimeException(""APPROVEDVOUCHERSTATUS"" + MISSINGMSG);createVoucher.createVoucherFromPreApprovedVoucher(vouhcerheaderid, voucherStatus);} catch (final ApplicationRuntimeException e) {throw new ApplicationRuntimeException(e.getMessage());}}}"	1
5136	"public class A {@Overridepublic Void call() throws Exception {int nodeIdx = restartNodeIdx.getAndIncrement();Thread.currentThread().setName(""restart-thread-"" + nodeIdx);boolean clientMode = clientNode.compareAndSet(false, true);while (U.currentTimeMillis() < stopTime) {if (clientMode) client.set(true);try {Ignite ignite = startGrid(nodeIdx);IgniteCache<Object, Object> cache;if (clientMode && ccfg.getNearConfiguration() != null)cache = ignite.createNearCache(ccfg.getName(), new NearCacheConfiguration<>());else cache = ignite.cache(ccfg.getName());checkGet(cache);IgniteInternalFuture<?> syncFut =((IgniteCacheProxy) cache).context().preloader().syncFuture();while (!syncFut.isDone() && U.currentTimeMillis() < stopTime) checkGet(cache);checkGet(cache);} finally {stopGrid(nodeIdx);}}return null;}}"	1
5137	public class A {@Overridepublic void run() {ServerSocket serverSocket = null;ExecutorService tasks = Executors.newFixedThreadPool(2);try {serverSocket = new ServerSocket(seyrenConfig.getGraphiteCarbonPicklePort());serverSocket.setReuseAddress(true);serverSocket.setReceiveBufferSize(1024 * 1024);while (true) {Socket socket = serverSocket.accept();socket.setKeepAlive(true);socket.setTcpNoDelay(true);socket.setReceiveBufferSize(1024 * 1024);tasks.execute(pickleHandlerFactory.create(socket));}} catch (IOException e) {} finally {if (serverSocket != null) {try {serverSocket.close();} catch (IOException e) {}}}}}	2
5138	public class A {@Overridepublic ZeebeDb openDb() {if (db == null) {db = zeebeDbFactory.createDb(runtimeDirectory.toFile());}return db;}}	1
5139	public class A {private boolean evaluateStatementCondition(AttributeStatement statement, Map<String, Object> context) {Boolean result = null;try {result =(Boolean)MVEL.executeExpression(statement.getCompiledCondition(), context, new HashMap<>());} catch (Exception e) {if (log.isTraceEnabled())return false;}if (result == null) {return false;}if (log.isTraceEnabled()) {}return result.booleanValue();}}	4
5140	"public class A {@Overridepublic void stopContainer() throws RemoteException {try {quantumClock.stopDeamon();registryUpdateDeamon.stopDeamon();dataTransferManagerDTP.stopDataTransferServer();ManagementUtil.unregisterMBean(""Container"");super.unregister();executor.terminate();} catch (RemoteException e) {throw new ServerException(""Cannot stop container"", e);}}}"	2
5141	public class A {@Overrideprotected void doFilterInternal(HttpServletRequest req, HttpServletResponse resp, FilterChain chain)throws IOException, ServletException {String token = CSRFToken.getToken(req);if (token == null) {token = UUID.randomUUID().toString();CSRFToken.setToken(req, token);}resp.setHeader(CSRF_TOKEN_HEADER, token);if (mustCheckCSRF(req)) {ImmutablePair<Boolean, ImmutablePair<Integer, String>> res = checkCSRF(req);if (!res.left) {resp.sendError(res.right.left, res.right.right);return;}}chain.doFilter(req, resp);}}	1
5142	"public class A {public static void main(final String[] args) {EnvironmentInformation.logEnvironmentInfo(LOG, ""Command Line Client"", args);final String configurationDirectory = getConfigurationDirectoryFromEnv();final Configuration configuration =GlobalConfiguration.loadConfiguration(configurationDirectory);final List<CustomCommandLine> customCommandLines =loadCustomCommandLines(configuration, configurationDirectory);int retCode = 31;try {final CliFrontend cli = new CliFrontend(configuration, customCommandLines);SecurityUtils.install(new SecurityConfiguration(cli.configuration));retCode = SecurityUtils.getInstalledContext().runSecured(() -> cli.parseAndRun(args));} catch (Throwable t) {final Throwable strippedThrowable =ExceptionUtils.stripException(t, UndeclaredThrowableException.class);strippedThrowable.printStackTrace();} finally {System.exit(retCode);}}}"	1
5143	public class A {@Overridepublic void run() {try {CLIENT.getService(SyncopeService.class);} catch (Exception e) {}}}	2
5144	public class A {private static boolean isPassthrough(String hcid) {String propertyName;NhincConstants.UDDI_SPEC_VERSION specVersion = getOrganizationSpecVersion(hcid);if (specVersion.equals(NhincConstants.UDDI_SPEC_VERSION.SPEC_2_0)) {propertyName = DOC_QUERY_20_MODE_OUT_PROPNAME;} else {propertyName = DOC_QUERY_30_MODE_OUT_PROPNAME;}String propValue = null;try {propValue = getPropAccessor().getProperty(NhincConstants.GATEWAY_PROPERTY_FILE, propertyName);} catch (PropertyAccessException ex) {}return NullChecker.isNotNullish(propValue);}}	1
5145	public class A {private void processIncomingPacket(CfdpPacket packet) {if (packet instanceof NakPacket) {NakPacket nak = (NakPacket) packet;resendQueue.clear();for (SegmentRequest sr : nak.getSegmentRequests()) {for (long offset = sr.getSegmentStart(); offset < sr.getSegmentEnd(); offset += PDU_SIZE) {long end = Math.min(offset + PDU_SIZE, sr.getSegmentEnd());resendQueue.add(new DataToResend(offset, end));}}} else if (packet instanceof AckPacket) {if (eofSenderFuture == null) {} else {eofSenderFuture.cancel(true);}} else if (packet instanceof FinishedPacket) {processFinishedPacket((FinishedPacket) packet);}}}	2
5146	"public class A {private Object convertAvroUnionToOrientDBField(final String docf,final Schema fieldSchema,final OrientDBMapping.DocumentFieldType storeType,final Object value) {Object result;Schema.Type type0 = fieldSchema.getTypes().get(0).getType();Schema.Type type1 = fieldSchema.getTypes().get(1).getType();if (!type0.equals(type1)&& (type0.equals(Schema.Type.NULL) || type1.equals(Schema.Type.NULL))) {Schema innerSchema = null;if (type0.equals(Schema.Type.NULL)) {innerSchema = fieldSchema.getTypes().get(1);} else {innerSchema = fieldSchema.getTypes().get(0);}result =convertAvroFieldToOrientField(docf, innerSchema, innerSchema.getType(), storeType, value);} else {throw new IllegalStateException(""OrientDBStore only supports Union of two types field."");}return result;}}"	1
5147	public class A {@Overridepublic org.fcrepo.server.types.gen.FieldSearchResult findObjects(org.fcrepo.server.types.gen.ArrayOfString resultFields,java.math.BigInteger maxResults,org.fcrepo.server.types.gen.FieldSearchQuery query) {MessageContext ctx = context.getMessageContext();Context context = ReadOnlyContext.getSoapContext(ctx);assertInitialized();try {String[] resultFieldsArray = resultFields.getItem().toArray(EMPTY_STRING_ARRAY);org.fcrepo.server.search.FieldSearchResult result =m_access.findObjects(context,resultFieldsArray,maxResults.intValue(),TypeUtility.convertGenFieldSearchQueryToFieldSearchQuery(query));return TypeUtility.convertFieldSearchResultToGenFieldSearchResult(result);} catch (Throwable th) {throw CXFUtility.getFault(th);}}}	1
5148	public class A {private final int getAvailablePort() {do {final Integer port = getPort();if (!portAlreadyUsed.contains(port)) {portAlreadyUsed.add(port);return port.intValue();}try {Thread.sleep(WAIT_BETWEEN_TRY);} catch (final InterruptedException e) {SysErrLogger.FAKE_LOGGER.ignoreLog(e);}} while (true);}}	1
5149	public class A {@Overridepublic boolean moveNext() {if (fetchMetrics) {currentRow = filterColumns(virtualMachineMetrics);fetchMetrics = false;return true;} else {close();try {onFinish();} catch (final Exception e) {}fetchMetrics = true;return false;}}}	1
5150	"public class A {private Charset getEncodingParameter(String type, MinaConfiguration configuration) {String encoding = configuration.getEncoding();if (encoding == null) {encoding = Charset.defaultCharset().name();configuration.setEncoding(encoding);}if (!Charset.isSupported(encoding)) {throw new IllegalArgumentException(""The encoding: "" + encoding + "" is not supported"");}return Charset.forName(encoding);}}"	1
5151	public class A {public synchronized void receivedRequest(REQUEST request, Consumer<REQUEST> processingMethod) {final long seqNum = request.getSeqNum();if (nextToProcess == -1) {nextToProcess = seqNum;} else {}requests.putNewRequest(request);processRequestsFromHead(processingMethod);}}	2
5152	"public class A {public void executePatchAAI(String distributionId, String serviceModelInvariantUUID, String distributionStatus)throws Exception {try {WatchdogServiceModVerIdLookup lookup =watchdogModVerIdLookupRepository.findOneByDistributionId(distributionId);String serviceModelVersionId = """";if (lookup != null) {serviceModelVersionId = lookup.getServiceModelVersionId();}if (serviceModelInvariantUUID == null || """".equals(serviceModelVersionId)) {String error =""No Service found with serviceModelInvariantUUID: "" + serviceModelInvariantUUID;throw new Exception(error);}AAIResourceUri aaiUri =AAIUriFactory.createResourceUri(AAIFluentTypeBuilder.serviceDesignAndCreation().model(serviceModelInvariantUUID).modelVer(serviceModelVersionId));aaiUri.depth(Depth.ZERO);Map<String, String> payload = new HashMap<>();payload.put(""distribution-status"", distributionStatus);getAaiClient().update(aaiUri, payload);} catch (Exception e) {throw new Exception(e);}}}"	8
5153	"public class A {@Testpublic void testMessageVisibilityOnReceiveLongPoll()throws PersistenceException, NoSuchAlgorithmException, UnsupportedEncodingException,InterruptedException {try {final String queueUrl = getQueueUrl(1, USR.USER1);Thread.sleep(1000);final ReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest(queueUrl);receiveMessageRequest.setVisibilityTimeout(120);receiveMessageRequest.setMaxNumberOfMessages(10);receiveMessageRequest.setWaitTimeSeconds(20);(new Thread() {public void run() {long ts1 = System.currentTimeMillis();List<Message> messages = cqs1.receiveMessage(receiveMessageRequest).getMessages();assertTrue(""Expected 1 message, instead found "" + messages.size(), messages.size() == 1);long ts2 = System.currentTimeMillis();}}).start();Thread.sleep(100);cqs1.sendMessage(new SendMessageRequest(queueUrl, ""This is my message text. "" + (new Random()).nextInt()));Thread.sleep(100);List<Message> messages = null;long ts = System.currentTimeMillis();for (int i = 0; i < 5; i++) {logger.info(""event=receive"");messages = cqs1.receiveMessage(receiveMessageRequest).getMessages();if (messages.size() > 0) {logger.info(""event=message_found delay="" + (System.currentTimeMillis() - ts));}assertTrue(""Expected 0 messages, instead found "" + messages.size(), messages.size() == 0);}for (int i = 0; i < 5; i++) {messages = cqs1.receiveMessage(receiveMessageRequest).getMessages();if (messages.size() > 0) {return;}}fail(""message not found any more"");} catch (AmazonServiceException ase) {fail(ase.getMessage());}}}"	6
5154	"public class A {void setRedundancyZone(InternalDistributedMember member, String redundancyZone) {if (redundancyZone != null && !redundancyZone.equals("""")) {redundancyZones.put(member, redundancyZone);}if (member != getDistributionManagerId()) {String relationship = areInSameZone(getDistributionManagerId(), member) ? """" : ""not "";}}}"	1
5155	"public class A {@Overridepublic RuleResult execute(Map<String, String> ruleParam, Map<String, String> resourceAttributes) {MDC.put(""executionId"", ruleParam.get(""executionId""));MDC.put(""ruleId"", ruleParam.get(PacmanSdkConstants.RULE_ID));String severity = ruleParam.get(PacmanRuleConstants.SEVERITY);String category = ruleParam.get(PacmanRuleConstants.CATEGORY);String resourceId = resourceAttributes.get(PacmanRuleConstants.RESOURCE_ID).toLowerCase();String pacmanHost = PacmanUtils.getPacmanHost(PacmanRuleConstants.ES_URI);String policyDefinitionName = ruleParam.get(""policyDefinitionName"");String azurePolicyEvaluationResultsURl = ruleParam.get(""azurePolicyEvaluationResults"");Map<String, Object> policyEvaluationResultsMap = new HashMap<>();try {policyEvaluationResultsMap =PacmanUtils.getAzurePolicyEvaluationResults(pacmanHost + azurePolicyEvaluationResultsURl, resourceId, policyDefinitionName);if (!policyEvaluationResultsMap.isEmpty()) {boolean isCompliant = (boolean) policyEvaluationResultsMap.get(""isCompliant"");if (!isCompliant == true) {List<LinkedHashMap<String, Object>> issueList = new ArrayList<>();LinkedHashMap<String, Object> issue = new LinkedHashMap<>();Annotation annotation = null;annotation = Annotation.buildAnnotation(ruleParam, Annotation.Type.ISSUE);annotation.put(PacmanSdkConstants.DESCRIPTION,policyEvaluationResultsMap.get(""policyDescription"").toString());annotation.put(PacmanRuleConstants.SEVERITY, severity);annotation.put(PacmanRuleConstants.CATEGORY, category);annotation.put(PacmanRuleConstants.AZURE_SUBSCRIPTION,resourceAttributes.get(PacmanRuleConstants.AZURE_SUBSCRIPTION));annotation.put(PacmanRuleConstants.AZURE_SUBSCRIPTION_NAME,resourceAttributes.get(PacmanRuleConstants.AZURE_SUBSCRIPTION_NAME));issue.put(""resourceId"", resourceId);issue.put(""policyDescription"", policyEvaluationResultsMap.get(""policyDescription"").toString());issue.put(""policyName"", policyEvaluationResultsMap.get(""policyName"").toString());issueList.add(issue);annotation.put(PacmanRuleConstants.ISSUE_DETAILS, issueList.toString());return new RuleResult(PacmanSdkConstants.STATUS_FAILURE, PacmanRuleConstants.FAILURE_MESSAGE, annotation);}}} catch (Exception exception) {throw new RuleExecutionFailedExeption(exception.getMessage());}return new RuleResult(PacmanSdkConstants.STATUS_SUCCESS, PacmanRuleConstants.SUCCESS_MESSAGE);}}"	4
5156	public class A {@Overrideprotected void removeEntry(String key) {synchronized (this) {StorageEntry entry = (StorageEntry) getL1Cache().getIfPresent(key);if (entry == null) {entry = (StorageEntry) getL2Cache().getIfPresent(key);if (log.isDebugEnabled()) {}getL2Cache().invalidate(key);} else {if (log.isDebugEnabled()) {}getL1Cache().invalidate(key);}if (entry != null) {long entrySize = entry.getSize();if (entrySize > 0) {decrementStorageSize(entrySize);}}}}}	2
5157	public class A {public OperationContext sendLiveIsStopping(final LiveStopping finalMessage) {if (enabled) {return sendReplicatePacket(new ReplicationLiveIsStoppingMessage(finalMessage));}return null;}}	2
5158	public class A {@Testpublic void testContainerCreateDiskFull() throws Exception {long containerSize = (long) StorageUnit.MB.toBytes(100);for (HddsVolume volume : volumeSet.getVolumesList()) {volume.format(UUID.randomUUID().toString());volume.incCommittedBytes(volume.getAvailable() - containerSize);volume.incCommittedBytes(10);}keyValueContainerData =new KeyValueContainerData(99,layout,containerSize,UUID.randomUUID().toString(),datanodeDetails.getUuidString());keyValueContainer = new KeyValueContainer(keyValueContainerData, conf);StorageContainerException e =LambdaTestUtils.intercept(StorageContainerException.class,() -> keyValueContainer.create(volumeSet, volumeChoosingPolicy, clusterId));if (!DISK_OUT_OF_SPACE.equals(e.getResult())) {}assertEquals(DISK_OUT_OF_SPACE, e.getResult());}}	1
5159	public class A {@Overridepublic void process(JCas aJCas) throws AnalysisEngineProcessException {mappingProvider.configure(aJCas.getCas());try {Language lang = Languages.getLanguageForShortCode(aJCas.getDocumentLanguage());Language defaultVariant = lang.getDefaultLanguageVariant();if (defaultVariant != null) {getLogger()lang = defaultVariant;}for (Sentence s : select(aJCas, Sentence.class)) {List<Token> tokens = selectCovered(Token.class, s);List<String> tokenText = toText(tokens);List<AnalyzedTokenReadings> rawTaggedTokens = lang.getTagger().tag(tokenText);AnalyzedSentence as =new AnalyzedSentence(rawTaggedTokens.toArray(new AnalyzedTokenReadings[rawTaggedTokens.size()]));as = lang.getDisambiguator().disambiguate(as);for (int i = 0; i < tokens.size(); i++) {Token token = tokens.get(i);String l = null;if (token.getPos() != null) {l = getByPos(token.getPos(), as.getTokens()[i]);}if (l == null) {l = getMostFrequentLemma(as.getTokens()[i]);}if (sanitize && l != null) {l = sanitizeLemma(token.getText(), l);}if (l == null) {l = token.getText();}Lemma lemma = new Lemma(aJCas, token.getBegin(), token.getEnd());lemma.setValue(l);lemma.addToIndexes();token.setLemma(lemma);}}} catch (IOException e) {throw new AnalysisEngineProcessException(e);}}}	1
5160	"public class A {@Overridepublic List<CommunicationChannel> getCommunicationChannelsForUser(String userId)throws IOException {String url =buildCanvasUrl(String.format(""users/%s/communication_channels"", userId), emptyMap());return getListFromCanvas(url);}}"	1
5161	public class A {private void registerServletDescriptor(ServletDescriptor servletDescriptor) {try {servletDescriptor.register(httpService);} catch (RuntimeException e) {} catch (ServletException e) {} catch (NamespaceException e) {}}}	3
5162	"public class A {@Overridepublic GetDataSystemIdentifierDto getData(final SystemFilterDto systemFilter,final Iec61850Client client,final DeviceConnection connection)throws NodeException {final int logicalDeviceIndex = systemFilter.getId();final List<MeasurementDto> measurements = new ArrayList<>();for (final MeasurementFilterDto filter : systemFilter.getMeasurementFilters()) {final RtuReadCommand<MeasurementDto> command =this.iec61850RtuCommandFactory.getCommand(filter);if (command == null) {LOGGER.warn(""Unsupported data attribute [{}], skip get data for it"", filter.getNode());} else {measurements.add(command.execute(client, connection, DEVICE, logicalDeviceIndex));}}final List<ProfileDto> profiles = new ArrayList<>();for (final ProfileFilterDto filter : systemFilter.getProfileFilters()) {final RtuReadCommand<ProfileDto> command =Iec61850RtuReadProfileCommandFactory.getInstance().getCommand(filter);if (command == null) {} else {profiles.add(command.execute(client, connection, DEVICE, logicalDeviceIndex));}}return new GetDataSystemIdentifierDto(systemFilter.getId(), systemFilter.getSystemType(), measurements, profiles);}}"	2
5163	public class A {public void terminate() {goon = false;if (cf != null) {cf.terminate();}int svs = 0;List<DHTBroadcaster<K>> scopy = null;if (servers != null) {synchronized (servers) {svs = servers.size();scopy = new ArrayList<DHTBroadcaster<K>>(servers);Iterator<DHTBroadcaster<K>> it = scopy.iterator();while (it.hasNext()) {DHTBroadcaster<K> br = it.next();br.goon = false;br.closeChannel();try {int c = 0;while (br.isAlive()) {c++;if (c > 10) {break;}br.interrupt();br.join(50);}if (logger.isDebugEnabled()) {}servers.remove(br);} catch (InterruptedException e) {Thread.currentThread().interrupt();}}servers.clear();}}long enc = DHTTransport.etime - etime;long dec = DHTTransport.dtime - dtime;long encr = DHTTransport.ertime - ertime;long decr = DHTTransport.drtime - drtime;long drest = (encr * dec) / (enc + 1);if (mythread == null) {return;}try {while (mythread.isAlive()) {mythread.interrupt();mythread.join(100);}if (logger.isWarnEnabled()) {}} catch (InterruptedException e) {Thread.currentThread().interrupt();}mythread = null;}}	8
5164	"public class A {protected void execute(Collection<String> sql, Connection conn) throws HibernateException {Statement stmt = null;String lastCmd = null;try {stmt = conn.createStatement();for (String cmd : sql) {if (!Strings.isNullOrEmpty(cmd)) {lastCmd = cmd;stmt.execute(cmd);}}} catch (SQLException ex) {if (lastCmd != null) {throw new ConfigurationError(ex.getMessage() + "". Command: "" + lastCmd, ex);} else {throw new ConfigurationError(ex);}} finally {close(stmt);}}}"	2
5165	"public class A {@Testpublic void testConfiguration() throws Exception {Method[] methods = ActiveMQResourceAdapter.class.getMethods();Map<String, Method> methodList = new HashMap<>();for (Method method : methods) {if (method.getName().startsWith(""set"")) {methodList.put(method.getName(), method);}}DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();DocumentBuilder db = dbf.newDocumentBuilder();InputStream io = new ByteArrayInputStream(rootConfig.getBytes());Document dom = db.parse(new InputSource(io));Element docEle = dom.getDocumentElement();NodeList nl = docEle.getElementsByTagName(""config-property"");for (int i = 0; i < nl.getLength(); i++) {Element el = (Element) nl.item(i);NodeList elementsByTagName = el.getElementsByTagName(""config-property-name"");assertEquals(el.toString(), elementsByTagName.getLength(), 1);Node configPropertyNameNode = elementsByTagName.item(0);String configPropertyName = configPropertyNameNode.getTextContent();Method setter = methodList.remove(""set"" + configPropertyName);assertNotNull(""setter "" + configPropertyName + "" does not exist"", setter);Class c = lookupType(setter);elementsByTagName = el.getElementsByTagName(""config-property-type"");assertEquals(""setter "" + configPropertyName + "" has no type set"", elementsByTagName.getLength(), 1);Node configPropertyTypeNode = elementsByTagName.item(0);String configPropertyTypeName = configPropertyTypeNode.getTextContent();assertEquals(configPropertyTypeName, c.getName());}if (!methodList.isEmpty()) {StringBuffer newConfig = new StringBuffer(commentedOutConfigs);newConfig.append(""\n"");for (Method method : methodList.values()) {newConfig.append(""         \""      <config-property>\"" + \n"");newConfig.append(""         \""         <description>***add***</description>\"" + \n"");newConfig.append(""         \""         <config-property-name>"").append(method.getName().substring(3)).append(""</config-property-name>\"" + \n"");newConfig.append(""         \""         <config-property-type>"").append(lookupType(method).getName()).append(""</config-property-type>\"" + \n"");newConfig.append(""         \""         <config-property-value></config-property-value>\"" + \n"");newConfig.append(""         \""      </config-property>\"" + \n"");}fail(""methods not shown please see previous and add"");}}}"	1
5166	public class A {@Overrideprotected void afterReturning(AopMethodInvocation aopMethodInvocation, Object[] arguments, Object result) throws Throwable {if (result == null) {return;}if (CompanyThreadLocal.isDeleteInProcess() || IndexWriterHelperUtil.isIndexReadOnly()) {if (_log.isDebugEnabled()) {if (CompanyThreadLocal.isDeleteInProcess()) {} else if (IndexWriterHelperUtil.isIndexReadOnly()) {}}return;}IndexableContext indexableContext = aopMethodInvocation.getAdviceMethodContext();String name = indexableContext._name;Indexer<Object> indexer = IndexerRegistryUtil.getIndexer(name);if (indexer == null) {return;}if (IndexWriterHelperUtil.isIndexReadOnly(indexer.getClassName())) {if (_log.isDebugEnabled()) {}return;}int serviceContextIndex = indexableContext._serviceContextIndex;if (serviceContextIndex >= 0) {ServiceContext serviceContext = (ServiceContext) arguments[serviceContextIndex];if ((serviceContext != null) && !serviceContext.isIndexingEnabled()) {return;}}if (indexableContext._indexableType == IndexableType.DELETE) {indexer.delete(result);} else {indexer.reindex(result);}}}	3
5167	public class A {public static QualityInformation getQualityRequirements(Map<String, Object> applicationMap) {Map<String, Object> groupsMap = YAMLoptimizerParser.getGroupMapFromAppMap(applicationMap);List<QualityInformation> qualityOfModules = new ArrayList<QualityInformation>();for (Map.Entry<String, Object> entry : groupsMap.entrySet()) {String potentialGroupName = entry.getKey();if (log.isDebugEnabled()) {}if (YAMLgroupsOptimizerParser.groupHasQoSRequirements(entry.getValue())) {for (String moduleName : YAMLgroupsOptimizerParser.getListOfMemberNames(entry.getValue())) {QualityInformation qosInfoOfGroup =YAMLmodulesOptimizerParser.getQoSRequirementsOfGroup(entry.getValue());if (qosInfoOfGroup != null) {qualityOfModules.add(qosInfoOfGroup);}}}}if (qualityOfModules.size() > 0) {return qualityOfModules.get(0);}return null;}}	3
5168	"public class A {private String getDateBeforeDays(int numberOfDays) {ZonedDateTime dateBeforeTwoDays = ZonedDateTime.now().minus(Duration.ofDays(numberOfDays));String result = DateTimeFormatter.ofPattern(""yyyy-MM-dd"").format(dateBeforeTwoDays);return result;}}"	1
5169	"public class A {@Overridepublic Void call() throws Exception {while (true) {oocEngine.getSuperstepLock().readLock().lock();IOCommand command = oocEngine.getIOScheduler().getNextIOCommand(diskId);if (LOG.isDebugEnabled() && !(command instanceof WaitIOCommand)) {}if (command == null) {oocEngine.getSuperstepLock().readLock().unlock();break;}if (command instanceof WaitIOCommand) {oocEngine.getSuperstepLock().readLock().unlock();}boolean commandExecuted = false;long duration = 0;long bytes;try {long timeInGC = oocEngine.getServiceWorker().getGraphTaskManager().getSuperstepGCTime();long startTime = System.currentTimeMillis();commandExecuted = command.execute();duration = System.currentTimeMillis() - startTime;timeInGC =oocEngine.getServiceWorker().getGraphTaskManager().getSuperstepGCTime() - timeInGC;bytes = command.bytesTransferred();if (LOG.isDebugEnabled() && !(command instanceof WaitIOCommand)) {}} catch (Exception e) {throw new RuntimeException(""call: execution of IO command "" + command + "" failed!"", e);}if (!(command instanceof WaitIOCommand)) {oocEngine.getSuperstepLock().readLock().unlock();if (bytes != 0) {if (command instanceof LoadPartitionIOCommand) {bytesReadPerSuperstep.inc(bytes);histogramLoadSize.update(bytes);} else {bytesWrittenPerSuperstep.inc(bytes);histogramStoreSize.update(bytes);}}}if (commandExecuted && duration > 0) {oocEngine.getIOStatistics().update(command.getType(), command.bytesTransferred(), duration);}oocEngine.getIOScheduler().ioCommandCompleted(command);}if (LOG.isInfoEnabled()) {}return null;}}"	3
5170	public class A {protected void onUnexpectedStatusCode(String urlStr, int statusCode, String contentType, String description) {}}	1
5171	public class A {@Overrideprotected AmazonSQSClient createClient(final ProcessContext context,final AWSCredentialsProvider credentialsProvider,final ClientConfiguration config) {return new AmazonSQSClient(credentialsProvider, config);}}	1
5172	"public class A {@PUT@Consumes({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@Path(""/{id}/unassign-file-policy/{filePolicyUri}"")@CheckPermission(roles = {Role.TENANT_ADMIN},acls = {ACL.OWN, ACL.ALL})public TaskResourceRep unAssignFilePolicy(@PathParam(""id"") URI id, @PathParam(""filePolicyUri"") URI filePolicyUri)throws InternalException {String task = UUID.randomUUID().toString();ArgValidator.checkFieldUriType(id, FileShare.class, ""id"");FileShare fs = queryResource(id);ArgValidator.checkEntity(fs, id, isIdEmbeddedInURL(id));ArgValidator.checkFieldUriType(filePolicyUri, FilePolicy.class, ""filePolicyUri"");ArgValidator.checkUri(filePolicyUri);FilePolicy fp = _permissionsHelper.getObjectById(filePolicyUri, FilePolicy.class);ArgValidator.checkEntityNotNull(fp, filePolicyUri, isIdEmbeddedInURL(filePolicyUri));if (!fs.getFilePolicies().isEmpty()&& !fs.getFilePolicies().contains(filePolicyUri.toString())) {throw APIException.badRequests.cannotFindAssociatedPolicy(filePolicyUri);}StorageSystem device = _dbClient.queryObject(StorageSystem.class, fs.getStorageDevice());FileOrchestrationController controller =getController(FileOrchestrationController.class,FileOrchestrationController.FILE_ORCHESTRATION_DEVICE);Operation op =_dbClient.createTaskOpStatus(FilePolicy.class, fp.getId(), task, ResourceOperationTypeEnum.UNASSIGN_FILE_POLICY);op.setDescription(""Filesystem unassign policy"");Task taskObj = op.getTask(fp.getId());FilePolicyServiceUtils.updateTaskTenant(_dbClient, fp, ""unassign"", taskObj, fs.getTenant().getURI());try {Set<URI> unassignFrom = new HashSet<URI>();unassignFrom.add(id);controller.unassignFilePolicy(filePolicyUri, unassignFrom, task);auditOp(OperationTypeEnum.UNASSIGN_FILE_POLICY,true,""BEGIN"",fp.getId().toString(),fp.getFilePolicyName());} catch (BadRequestException e) {throw e;} catch (Exception e) {throw APIException.badRequests.unableToProcessRequest(e.getMessage());}return toTask(fp, task, op);}}"	5
5173	public class A {private void addKeyFile(String username, String keyPairName, String filePath) {ProviderParams params = providerParamsDao.getByUser(username);params.getKeys().put(keyPairName, filePath);save(params);}}	1
5174	"public class A {@Testpublic void testBasicApi() {LogListener lsnr =LogListener.matches(Pattern.compile(""a[a-z]+"")).andMatches(""Exception message."").andMatches("".java:"").build();log.registerListener(lsnr);assertFalse(lsnr.check());assertTrue(lsnr.check());}}"	2
5175	"public class A {protected IApsEntity doParsing(Element element, Class entityClass, IApsEntityDOM entityDom)throws ApsSystemException {IApsEntity entity = null;try {entity = this.createEntityType(element, entityClass);entity.setEntityDOM(entityDom);this.fillEntityType(entity, element);entity.setDefaultLang(this.getLangManager().getDefaultLang().getCode());} catch (Throwable t) {throw new ApsSystemException(""Configuration error of the Entity Type detected"", t);}return entity;}}"	2
5176	"public class A {@Overridepublic void sendCommand(final BitfinexCommand command) {try {if (command instanceof BitfinexStreamSymbolToChannelIdResolverAware) {final BitfinexStreamSymbolToChannelIdResolverAware aware =(BitfinexStreamSymbolToChannelIdResolverAware) command;aware.setResolver(symbol -> {final Integer channelId = getChannelForSymbol(symbol);if (channelId == null) {throw new IllegalArgumentException(""Unknown symbol: "" + symbol);}return channelId;});}final String json = command.getCommand(this);websocketEndpoint.sendMessage(json);} catch (final BitfinexCommandException e) {}}}"	2
5177	public class A {private void updateMasterClock(FlushRequest request) {if (request.isUpdateClock()) {try {PSAgentContext.get().getMasterClient().updateClock(request.getTaskIndex(), request.getMatrixId(), request.getClock());} catch (ServiceException e) {}}}}	1
5178	"public class A {protected void tryNext(int cmd) throws Exception {ClientSession session = getClientSession();for (boolean debugEnabled = log.isDebugEnabled(); ; debugEnabled = log.isDebugEnabled()) {if (userAuth == null) {if (debugEnabled) {}} else if (!userAuth.process(null)) {if (debugEnabled) {}try {userAuth.destroy();} finally {userAuth = null;}currentMethod++;} else {if (debugEnabled) {}return;}String method = null;for (; currentMethod < clientMethods.size(); currentMethod++) {method = clientMethods.get(currentMethod);if (serverMethods.contains(method)) {break;}}if (currentMethod >= clientMethods.size()) {if (debugEnabled) {}AuthFuture authFuture = Objects.requireNonNull(authFutureHolder.get(), ""No current future"");authFuture.setException(new SshException(SshConstants.SSH2_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE,""No more authentication methods available""));return;}userAuth = UserAuthMethodFactory.createUserAuth(session, authFactories, method);if (userAuth == null) {throw new UnsupportedOperationException(""Failed to find a user-auth factory for method="" + method);}if (debugEnabled) {}userAuth.init(session, service);}}}"	5
5179	"public class A {@SuppressWarnings(""unchecked"")public Module parse(final Element root) {Namespace myNamespace = Namespace.getNamespace(ActivityStreamsModule.URI);ActivityStreamsModule myModule = new ActivityStreamsModuleImpl();SyndEntryImpl atomEntry = new SyndEntryImpl();Element objElement = root.getChild(""object"", myNamespace);List<Element> children = (List<Element>) objElement.getChildren();for (Element child : children) {if (child.getName().equals(""title"")) {atomEntry.setTitle(child.getTextTrim());} else if (child.getName().equals(""content"")) {List<SyndContent> contents = new LinkedList<SyndContent>();SyndContent content = new SyndContentImpl();content.setValue(child.getTextTrim());contents.add(content);atomEntry.setContents(contents);} else if (child.getName().equals(""link"")) {atomEntry.setLink(child.getAttributeValue(""href""));} else if (child.getName().equals(""summary"")) {SyndContent content = new SyndContentImpl();content.setValue(child.getTextTrim());atomEntry.setDescription(content);} else if (child.getName().equals(""object-type"")) {try {String[] objArr = child.getTextTrim().split(""/"");String objStr = objArr[objArr.length - 1].toUpperCase();BaseObjectType.valueOf(objStr);myModule.setObjectType(objStr);} catch (IllegalArgumentException ex) {myModule.setObjectType(""NOTE"");}}}myModule.setAtomEntry(atomEntry);return myModule;}}"	1
5180	"public class A {@Overridepublic void actionPerformed(ActionEvent event) {String[] options =new String[] {""   "" + translator.getTranslation(Tags.YES) + ""   "",""   "" + translator.getTranslation(Tags.NO) + ""   ""};int[] optonsId = new int[] {0, 1};StandalonePluginWorkspace wsAccess =(StandalonePluginWorkspace) PluginWorkspaceProvider.getPluginWorkspace();int response =wsAccess.showConfirmDialog(translator.getTranslation(Tags.DISCARD),translator.getTranslation(Tags.DISCARD_CONFIRMATION_MESSAGE),options,optonsId);if (response == 0) {Set<File> foldersToRefresh = new HashSet<>();Set<File> deletedFilesParentDirs = new HashSet<>();String selectedRepository = OptionsManager.getInstance().getSelectedRepository();List<FileStatus> allSelectedResources = selResProvider.getAllSelectedResources();for (FileStatus file : allSelectedResources) {if (file.getChangeType() == GitChangeType.ADD|| file.getChangeType() == GitChangeType.UNTRACKED) {try {File fileToDiscard = new File(selectedRepository, file.getFileLocation());FileUtils.forceDelete(fileToDiscard);deletedFilesParentDirs.add(fileToDiscard.getParentFile());} catch (IOException e1) {}} else if (file.getChangeType() == GitChangeType.SUBMODULE) {discardSubmodule(file, foldersToRefresh, selectedRepository);}}if (!deletedFilesParentDirs.isEmpty()) {foldersToRefresh.add(FileHelper.getCommonDir(deletedFilesParentDirs));}gitController.asyncDiscard(allSelectedResources);wsAccess.getProjectManager().refreshFolders(foldersToRefresh.toArray(new File[0]));}}}"	1
5181	public class A {@Overridepublic void run() {while (true) {sleep();}}}	2
5182	public class A {@Overridepublic String getTitle() {try {return HtmlUtil.escape(_group.getDescriptiveName(_themeDisplay.getLocale()));} catch (Exception exception) {if (_log.isDebugEnabled()) {}}return _group.getName(_themeDisplay.getLocale());}}	1
5183	public class A {public void migrate() {File migrationFolderFile = getMigrationFolderFile();if (migrationFolderFile == null) {return;}migrateChildren(migrationFolderFile);}}	1
5184	"public class A {public String uploadReportTemplate(MultipartFile file) throws InsightsCustomException {String returnMessage = """";String originalFilename = file.getOriginalFilename();JsonParser jsonParser = new JsonParser();String fileExt = FilenameUtils.getExtension(originalFilename);try {if (fileExt.equalsIgnoreCase(""json"")) {String reportTemplateStr = readFileAndCreateJson(file);JsonObject reportTemplateJson = jsonParser.parse(reportTemplateStr).getAsJsonObject();int reportId = saveTemplateReport(reportTemplateJson);returnMessage = ""Report Template Id created "" + reportId;} else {throw new InsightsCustomException(""Invalid Report Template file format."");}} catch (Exception ex) {throw new InsightsCustomException(ex.getMessage());}return returnMessage;}}"	2
5185	public class A {private static void handleIOException(Message msg, ServerConnection serverConnection, Exception e) {CachedRegionHelper crHelper = serverConnection.getCachedRegionHelper();boolean potentialModification = serverConnection.getPotentialModification();if (!crHelper.isShutdown() && serverConnection.isOpen()) {if (!SUPPRESS_IO_EXCEPTION_LOGGING) {if (potentialModification) {int transId = msg != null ? msg.getTransactionId() : Integer.MIN_VALUE;} else {}}}serverConnection.setFlagProcessMessagesAsFalse();serverConnection.setClientDisconnectedException(e);}}	2
5186	public class A {public void activateVfModule(BuildingBlockExecution execution) {GeneralBuildingBlock gBBInput = execution.getGeneralBuildingBlock();RequestContext requestContext = gBBInput.getRequestContext();ServiceInstance serviceInstance = null;GenericVnf vnf = null;VfModule vfModule = null;try {serviceInstance = extractPojosForBB.extractByKey(execution, ResourceKey.SERVICE_INSTANCE_ID);vnf = extractPojosForBB.extractByKey(execution, ResourceKey.GENERIC_VNF_ID);vfModule = extractPojosForBB.extractByKey(execution, ResourceKey.VF_MODULE_ID);Customer customer = gBBInput.getCustomer();CloudRegion cloudRegion = gBBInput.getCloudRegion();SDNCRequest sdncRequest = new SDNCRequest();GenericResourceApiVfModuleOperationInformation req =sdncVfModuleResources.activateVfModule(vfModule,vnf,serviceInstance,customer,cloudRegion,requestContext,buildCallbackURI(sdncRequest));sdncRequest.setSDNCPayload(req);sdncRequest.setTopology(SDNCTopology.VFMODULE);execution.setVariable(SDNC_REQUEST, sdncRequest);} catch (Exception ex) {exceptionUtil.buildAndThrowWorkflowException(execution, 7000, ex);}}}	1
5187	public class A {@Overridepublic boolean accept(String randomValue) {if ((randomValue == null) || randomValue.isEmpty()) {return false;}if (randomValue.charAt(0) != CharPool.SLASH) {randomValue = StringPool.SLASH.concat(randomValue);}if (LayoutImpl.validateFriendlyURL(randomValue) != -1) {return false;}try {LayoutImpl.validateFriendlyURLKeyword(randomValue);return true;} catch (LayoutFriendlyURLException layoutFriendlyURLException) {if (_log.isDebugEnabled()) {}return false;}}}	1
5188	"public class A {public void writeElement(String name) throws IOException {Integer mapping = stringTable.get(name);if (mapping == null) {throw new IOException(""no mapping for '"" + name + ""'"");}writeInt(buf, stringTable.get(name) + 64);}}"	1
5189	public class A {@Overridepublic void start() {synchronized (agentStatusLock) {if (this.agentStatus == AgentStatus.INITIALIZING) {changeStatus(AgentStatus.RUNNING);} else {return;}}this.applicationContext.start();}}	2
5190	"public class A {@Overridepublic String getWorkflowRunReport(int workflowRunSWID) {return """";}}"	1
5191	"public class A {@Overridepublic IResourceStream locate(Class<?> clazz, String path) {String location;if (clazz == AlternativePageFromWebContext.class) {String extension = path.substring(path.lastIndexOf('.') + 1);String simpleFileName = Strings.lastPathComponent(clazz.getName(), '.');location = ""/WEB-INF/templates/"" + simpleFileName + ""."" + extension;} else {location = ""/WEB-INF/templates/"" + path;}URL url;try {url = getServletContext().getResource(location);if (url != null) {return new UrlResourceStream(url);}} catch (MalformedURLException e) {throw new WicketRuntimeException(e);}return super.locate(clazz, path);}}"	1
5192	"public class A {private void createClearingRequest(ResourceRequest request, ResourceResponse response)throws PortletException {User user = UserCacheHolder.getUserFromRequest(request);ClearingRequest clearingRequest = null;AddDocumentRequestSummary requestSummary = null;try {JsonNode crNode =OBJECT_MAPPER.readValue(request.getParameter(CLEARING_REQUEST), JsonNode.class);clearingRequest = OBJECT_MAPPER.convertValue(crNode, ClearingRequest.class);clearingRequest.setRequestingUser(user.getEmail());clearingRequest.setClearingState(ClearingRequestState.NEW);LiferayPortletURL projectUrl = createDetailLinkTemplate(request);projectUrl.setParameter(PROJECT_ID, clearingRequest.getProjectId());projectUrl.setParameter(PAGENAME, PAGENAME_DETAIL);ProjectService.Iface client = thriftClients.makeProjectClient();requestSummary = client.createClearingRequest(clearingRequest, user, projectUrl.toString());} catch (IOException | TException e) {response.setProperty(ResourceResponse.HTTP_STATUS_CODE, ""500"");}try {JsonGenerator jsonGenerator = JSON_FACTORY.createGenerator(response.getWriter());jsonGenerator.writeStartObject();jsonGenerator.writeStringField(RESULT, requestSummary.getRequestStatus().toString());if (AddDocumentRequestStatus.FAILURE.equals(requestSummary.getRequestStatus())) {ResourceBundle resourceBundle =ResourceBundleUtil.getBundle(""content.Language"", request.getLocale(), getClass());jsonGenerator.writeStringField(""message"",LanguageUtil.get(resourceBundle, requestSummary.getMessage().replace(' ', '.').toLowerCase()));} else {jsonGenerator.writeStringField(CLEARING_REQUEST_ID, requestSummary.getId());}jsonGenerator.writeEndObject();jsonGenerator.close();} catch (IOException e) {response.setProperty(ResourceResponse.HTTP_STATUS_CODE, ""500"");}}}"	2
5193	public class A {public void addLifeCycle(ComponentPlugin plugin) {ChromatticLifeCycle lifeCycle = (ChromatticLifeCycle) plugin;try {lifeCycle.manager = this;lifeCycle.start();lifeCycles.put(lifeCycle.getDomainName(), lifeCycle);} catch (Exception e) {}}}	1
5194	"public class A {public void setAsText(String text) throws IllegalArgumentException {ConceptService cs = Context.getConceptService();if (StringUtils.hasText(text)) {try {setValue(cs.getConceptSource(Integer.valueOf(text)));} catch (Exception ex) {ConceptSource conceptSource = cs.getConceptSourceByUuid(text);setValue(conceptSource);if (conceptSource == null) {throw new IllegalArgumentException(""ConceptSource not found: "" + text, ex);}}} else {setValue(null);}}}"	2
5195	public class A {private void getTableLineage(ASTNode queryNode) {ASTNode fromNode = (ASTNode) queryNode.getFirstChildWithType(HiveParser.TOK_FROM);ASTNode insertNode = (ASTNode) queryNode.getFirstChildWithType(HiveParser.TOK_INSERT);ASTNode insertDestinationNode =(ASTNode) insertNode.getFirstChildWithType(HiveParser.TOK_DESTINATION);if (insertDestinationNode == null)insertDestinationNode =(ASTNode) insertNode.getFirstChildWithType(HiveParser.TOK_INSERT_INTO);ASTNode nextToDestinationNode = (ASTNode) insertDestinationNode.getChild(0);ASTNode selectNode = (ASTNode) insertNode.getFirstChildWithType(HiveParser.TOK_SELECT);if (selectNode == null)selectNode = (ASTNode) insertNode.getFirstChildWithType(HiveParser.TOK_SELECTDI);ASTNode nextNodeOfFrom = (ASTNode) fromNode.getChild(0);if (nextNodeOfFrom.getType() == HiveParser.TOK_SUBQUERY) handleTokSubQuery(nextNodeOfFrom);else if (nextNodeOfFrom.getType() == HiveParser.TOK_TABREF) handleTokTabRef(nextNodeOfFrom);else if (nextNodeOfFrom.getType() == HiveParser.TOK_JOIN|| nextNodeOfFrom.getType() == HiveParser.TOK_LEFTOUTERJOIN|| nextNodeOfFrom.getType() == HiveParser.TOK_RIGHTOUTERJOIN|| nextNodeOfFrom.getType() == HiveParser.TOK_FULLOUTERJOIN|| nextNodeOfFrom.getType() == HiveParser.TOK_LEFTSEMIJOIN|| nextNodeOfFrom.getType() == HiveParser.TOK_UNIQUEJOIN) handleTokJoin(nextNodeOfFrom);if (nextToDestinationNode.getType() == HiveParser.TOK_DIR) handleTokDir(queryNode);else if (nextToDestinationNode.getType() == HiveParser.TOK_TAB)handleTokTab(nextToDestinationNode);for (int j = 0; j < selectNode.getChildCount(); j++) {ASTNode nodeSelExpr = (ASTNode) selectNode.getChild(j);if (nodeSelExpr.getChild(0).getType() == HiveParser.TOK_FUNCTION)handleTokFunction(nodeSelExpr);else if (nodeSelExpr.getChild(0).getType() == HiveParser.TOK_ALLCOLREF)handleTokAllColRef((ASTNode) nodeSelExpr.getChild(0));else handleTokTabOrColOrElse(nodeSelExpr);}}}	3
5196	"public class A {public String getSerialNumber() throws KuraException {synchronized (this.atLock) {if (this.serialNumber == null) {byte[] reply;CommConnection commAtConnection = openSerialPort(getAtPort());if (!isAtReachable(commAtConnection)) {closeSerialPort(commAtConnection);throw new KuraException(KuraErrorCode.NOT_CONNECTED,MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG + TelitHe910.class.getName());}try {reply =commAtConnection.sendCommand(TelitModemAtCommands.getSerialNumber.getCommand().getBytes(), 1000, 100);} catch (IOException e) {closeSerialPort(commAtConnection);throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);}closeSerialPort(commAtConnection);if (reply != null) {String serialNum = getResponseString(reply);if (serialNum != null && !serialNum.isEmpty()) {if (serialNum.startsWith(""#CGSN:"")) {serialNum = serialNum.substring(""#CGSN:"".length()).trim();}this.serialNumber = serialNum;}}}}return this.serialNumber;}}"	1
5197	"public class A {public void processChallenge(final String challenge) throws MalformedChallengeException {super.processChallenge(challenge);if (getParameter(""realm"") == null) {throw new MalformedChallengeException(""missing realm in challange"");}if (getParameter(""nonce"") == null) {throw new MalformedChallengeException(""missing nonce in challange"");}boolean unsupportedQop = false;String qop = getParameter(""qop"");if (qop != null) {StringTokenizer tok = new StringTokenizer(qop, "","");while (tok.hasMoreTokens()) {String variant = tok.nextToken().trim();if (variant.equals(""auth"")) {qopVariant = QOP_AUTH;break;} else if (variant.equals(""auth-int"")) {qopVariant = QOP_AUTH_INT;} else {unsupportedQop = true;}}}if (unsupportedQop && (qopVariant == QOP_MISSING)) {throw new MalformedChallengeException(""None of the qop methods is supported"");}cnonce = createCnonce();this.complete = true;}}"	1
5198	"public class A {@Overridepublic void process(SequencingObject sequencingObject) {if (sequencingObject.getQcEntries() != null) {sequencingObject.getQcEntries().stream().filter(q -> q instanceof CoverageQCEntry).forEach(q -> qcEntryRepository.delete(q));}try {long totalBases =sequencingObject.getFiles().stream().mapToLong(f -> {AnalysisFastQC fastqc = analysisRepository.findFastqcAnalysisForSequenceFile(f);if (fastqc != null) {return fastqc.getTotalBases();}throw new EntityNotFoundException(""No fastqc results for file"");}).sum();CoverageQCEntry coverageQCEntry = new CoverageQCEntry(sequencingObject, totalBases);qcEntryRepository.save(coverageQCEntry);} catch (EntityNotFoundException e) {}}}"	2
5199	"public class A {void putStart(final String workId) {final WebTarget remoteWebResource = locatorClient.target(serverUrl + ""/event/start/"" + workId);try {final Response response =remoteWebResource.request(MediaType.TEXT_PLAIN).post(Entity.text(""""));checkResponseStatus(response);} catch (final Exception c) {}}}"	1
5200	public class A {@Overridepublic void checkAndUpdateDescriptionOnCollection(final String collectionAbsolutePath, final IRODSTagValue irodsDescriptionValue)throws JargonException {IRODSTagValue currentIrodsDescriptionValue =getDescriptionOnCollectionForLoggedInUser(collectionAbsolutePath);if (currentIrodsDescriptionValue == null) {if (!irodsDescriptionValue.getTagData().isEmpty()) {addDescriptionToCollection(collectionAbsolutePath, irodsDescriptionValue);}return;}if (irodsDescriptionValue == null || irodsDescriptionValue.getTagData().isEmpty()) {deleteDescriptionFromCollection(collectionAbsolutePath, currentIrodsDescriptionValue);return;}if (irodsDescriptionValue.getTagData().equals(currentIrodsDescriptionValue.getTagData())) {return;}deleteDescriptionFromCollection(collectionAbsolutePath, currentIrodsDescriptionValue);addDescriptionToCollection(collectionAbsolutePath, irodsDescriptionValue);}}	4
5201	public class A {@Overridepublic void start(StartContext context) throws StartException {Class<?> componentClass;String className = _model.get(CommonAttributes.IMPLCLASS).asString();try {componentClass =Module.loadClassFromCallerModuleLoader(ModuleIdentifier.fromString(_moduleId), className);try {_component = (Component) componentClass.newInstance();ModelNode properties =_model.hasDefined(CommonAttributes.PROPERTIES)? _model.get(CommonAttributes.PROPERTIES): null;_component.init(createEnvironmentConfig(properties));_component.addResourceDependency(_resourceAdapterRepository.getValue());} catch (InstantiationException ie) {ExtensionLogger.ROOT_LOGGER.unableToInstantiateClass(className, ie);} catch (IllegalAccessException iae) {ExtensionLogger.ROOT_LOGGER.unableToAccessConstructor(className, iae);}} catch (ClassNotFoundException cnfe) {ExtensionLogger.ROOT_LOGGER.unableToLoadClass(className, cnfe);} catch (ModuleLoadException mle) {ExtensionLogger.ROOT_LOGGER.unableToLoadModule(_moduleId, mle);}}}	1
5202	"public class A {@SuppressWarnings({""rawtypes"", ""unchecked""})@Overridepublic void prepare(Map stormConf, TopologyContext context, OutputCollector collector) {super.prepare(stormConf, context, collector);partitioner = new URLPartitioner();partitioner.configure(stormConf);this.eventCounter = context.registerMetric(""counter"", new MultiCountMetric(), 10);tableName = ConfUtils.getString(stormConf, Constants.SQL_STATUS_TABLE_PARAM_NAME, ""urls"");batchMaxSize = ConfUtils.getInt(stormConf, Constants.SQL_UPDATE_BATCH_SIZE_PARAM_NAME, 1000);try {connection = SQLUtil.getConnection(stormConf);} catch (SQLException ex) {throw new RuntimeException(ex);}String query =tableName+ "" (url, status, nextfetchdate, metadata, bucket, host)""+ "" values (?, ?, ?, ?, ?, ?)"";updateQuery = ""REPLACE INTO "" + query;insertQuery = ""INSERT IGNORE INTO "" + query;try {insertPreparedStmt = connection.prepareStatement(insertQuery);} catch (SQLException e) {}ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();executor.scheduleAtFixedRate(() -> {try {checkExecuteBatch();} catch (SQLException ex) {throw new RuntimeException(ex);}},0,1,TimeUnit.SECONDS);}}"	3
5203	public class A {@Overridepublic void find(PackageScanFilter test, String packageName, Set<Class<?>> classes) {packageName = packageName.replace('.', '/');int classesSize = classes.size();loadImplementationsInBundle(test, packageName, classes);if (classes.size() == classesSize) {for (ClassLoader classLoader : super.getClassLoaders()) {if (!isOsgiClassloader(classLoader)) {find(test, packageName, classLoader, classes);}}}}}	1
5204	"public class A {@Overridepublic void handleChannelData(final String action, final JSONArray message)throws BitfinexClientException {if (message.toString().contains(""ERROR"")) {}final ChannelCallbackHandler handler = channelHandler.get(action);if (handler == null) {return;}try {handler.handleChannelData(action, message);} catch (final BitfinexClientException e) {}}}"	3
5205	public class A {public static com.liferay.commerce.price.list.model.CommercePriceListChannelRelSoapaddCommercePriceListChannelRel(long commercePriceListId,long commerceChannelId,int order,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.commerce.price.list.model.CommercePriceListChannelRel returnValue =CommercePriceListChannelRelServiceUtil.addCommercePriceListChannelRel(commercePriceListId, commerceChannelId, order, serviceContext);return com.liferay.commerce.price.list.model.CommercePriceListChannelRelSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	1
5206	"public class A {public int saveContentDefinition(JsonObject contentJson) throws InsightsCustomException {InsightsContentConfig contentConfig = new InsightsContentConfig();Gson gson = new Gson();int kpiId = contentJson.get(""kpiId"").getAsInt();int contentId = contentJson.get(""contentId"").getAsInt();try {InsightsContentConfig existingContentConfig = reportConfigDAL.getContentConfig(contentId);if (existingContentConfig == null) {boolean contentisActive = contentJson.get(""isActive"").getAsBoolean();String contentName = contentJson.get(""contentName"").getAsString();String contentString = gson.toJson(contentJson);contentConfig.setContentId(contentId);InsightsKPIConfig kpiConfig = reportConfigDAL.getKPIConfig(kpiId);String contentCategory = kpiConfig.getCategory();contentConfig.setKpiConfig(kpiConfig);contentConfig.setActive(contentisActive);contentConfig.setContentJson(contentString);contentConfig.setContentName(contentName);contentConfig.setCategory(contentCategory);reportConfigDAL.saveContentConfig(contentConfig);}} catch (Exception e) {}return contentId;}}"	1
5207	"public class A {@Overridepublic void run() {try {boolean interrupted = false;while (true) {Message message = this.receiver.receive();if (null == message) {interrupted = true;break;} else if (processReceivedMessage(message)) {break;}}if (!interrupted) {stopClientSync();}} catch (JMSException e) {throw new RuntimeException(""JMSException : Error while listening to messages"", e);} catch (IOException e) {throw new RuntimeException(""IOException : Error while writing message to file\"""", e);}}}"	2
5208	public class A {@Overridepublic void run() {eventHandler.handleEvent(new TimerEvent(customResourceUid, TimerEventSource.this));}}	1
5209	"public class A {private Future<WriteSummary> writeData(final DataWriter writer, final long length)throws Exception {return EXECUTOR.submit(new Callable<WriteSummary>() {@Overridepublic WriteSummary call() throws IOException {try {long checksum = 0;long remaining = length;while (remaining > 0) {int bytesToWrite = (int) Math.min(remaining, CHUNK_SIZE);byte[] data = new byte[bytesToWrite];RANDOM.nextBytes(data);ByteBuf buf = Unpooled.wrappedBuffer(data);try {writer.writeChunk(buf);} catch (Exception e) {fail(e.getMessage());throw e;}remaining -= bytesToWrite;for (int i = 0; i < data.length; i++) {checksum += BufferUtils.byteToInt(data[i]);}}return new WriteSummary(length, checksum);} catch (Throwable throwable) {fail(""Failed to write file."" + throwable.getMessage());throw throwable;}}});}}"	1
5210	"public class A {public ProjectInstance createProject(String projectName,String owner,String description,LinkedHashMap<String, String> overrideProps)throws IOException {try (AutoLock lock = prjMapLock.lockForWrite()) {ProjectInstance currentProject = getProject(projectName);if (currentProject == null) {currentProject =ProjectInstance.create(projectName, owner, description, overrideProps, null, null);} else {throw new IllegalStateException(""The project named "" + projectName + ""already exists"");}checkOverrideProps(currentProject);return save(currentProject);}}}"	1
5211	public class A {private List<SyndEntry> getEntries(List<String> contentsId,String lang,String feedLink,HttpServletRequest req,HttpServletResponse resp)throws ApsSystemException {List<SyndEntry> entries = new ArrayList<SyndEntry>();Iterator<String> idIterator = contentsId.iterator();while (idIterator.hasNext()) {String id = (String) idIterator.next();ContentRecordVO currentContent = this.getContentManager().loadContentVO(id);RssContentMapping mapping =(RssContentMapping) this.getContentMapping().get(currentContent.getTypeCode());if (null == mapping) {continue;}entries.add(this.createEntry(currentContent, lang, feedLink, req, resp));}return entries;}}	1
5212	public class A {@Overridepublic Event next() {Event event;if (nextEvent != null) {event = nextEvent;nextEvent = null;} else if (textUnitsIterator.hasNext()) {event = new Event(EventType.TEXT_UNIT, getNextTextUnit());} else {event = new Event(EventType.END_DOCUMENT);finished = true;}return event;}}	3
5213	"public class A {@Testpublic void testUserHostAndPortSerialization() throws Exception {String result =checkSerializesAs(UserAndHostAndPort.fromParts(""testHostUser"", ""1.2.3.4"", 22), null);Assert.assertFalse(result.contains(""error""), ""Shouldn't have had an error, instead got: "" + result);Assert.assertEquals(Strings.collapseWhitespace(result, """"),""{\""user\"":\""testHostUser\"",\""hostAndPort\"":{\""host\"":\""1.2.3.4\"",\""port\"":22,\""hasBracketlessColons\"":false}}"");}}"	1
5214	"public class A {@Overridepublic Buffer receive(int id) throws IOException {Session session = getClientSession();Duration idleTimeout = CoreModuleProperties.IDLE_TIMEOUT.getRequired(session);if (GenericUtils.isNegativeOrNull(idleTimeout)) {idleTimeout = CoreModuleProperties.IDLE_TIMEOUT.getRequiredDefault();}Instant now = Instant.now();Instant waitEnd = now.plus(idleTimeout);boolean traceEnabled = log.isTraceEnabled();for (int count = 1; ; count++) {if (isClosing() || (!isOpen())) {throw new SshException(""Channel is being closed"");}if (now.compareTo(waitEnd) > 0) {throw new SshException(""Timeout expired while waiting for id="" + id);}Buffer buffer = receive(id, Duration.between(now, waitEnd));if (buffer != null) {return buffer;}now = Instant.now();if (traceEnabled) {}}}}"	1
5215	"public class A {public List findByExample(CmZosState instance) {try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.CmZosState"").add(Example.create(instance)).list();return results;} catch (RuntimeException re) {throw re;}}}"	3
5216	public class A {public void processClaimedUser(ShadowUser shadowUser, RequestContext context) {String orgId = getOrgId(shadowUser, context);Map<String, Object> esUser =(Map<String, Object>)ElasticSearchHelper.getResponseFromFuture(elasticSearchService.getDataByIdentifier(ProjectUtil.EsType.user.getTypeName(), shadowUser.getUserId(), context));String userId = (String) esUser.get(JsonKey.ID);String rootOrgId = (String) esUser.get(JsonKey.ROOT_ORG_ID);int flagsValue =null != esUser.get(JsonKey.FLAGS_VALUE) ? (int) esUser.get(JsonKey.FLAGS_VALUE) : 0;if (!((String) esUser.get(JsonKey.FIRST_NAME)).equalsIgnoreCase(shadowUser.getName())|| ((int) esUser.get(JsonKey.STATUS)) != shadowUser.getUserStatus()) {updateUserInUserTable(flagsValue, shadowUser.getUserId(), rootOrgId, shadowUser, context);if (shadowUser.getUserStatus() == ProjectUtil.Status.INACTIVE.getValue()) {deactivateUserFromKC(userId, context);}}deleteUserFromOrganisations(shadowUser,rootOrgId,(List<Map<String, Object>>) esUser.get(JsonKey.ORGANISATIONS),context);if (StringUtils.isNotBlank(orgId) && !getOrganisationIds(esUser).contains(orgId)) {registerUserToOrg(userId, orgId, context);}syncUserToES(userId, context);updateUserInShadowDb(userId, shadowUser, ClaimStatus.CLAIMED.getValue(), null, context);}}	3
5217	public class A {private void pauseJob(String group, String name) throws SchedulerException {if (StringUtils.isEmpty(group) || StringUtils.isEmpty(name)) {return;}Scheduler scheduler = factory.getScheduler();JobKey jobKey = new JobKey(name, group);if (!scheduler.checkExists(jobKey)) {throw new GriffinException.NotFoundException(JOB_KEY_DOES_NOT_EXIST);}scheduler.pauseJob(jobKey);}}	1
5218	public class A {@Overridepublic void processMessage(final ObjectMessage message) {MessageMetadata messageMetadata;String publicKey;try {messageMetadata = MessageMetadata.fromMessage(message);publicKey = (String) message.getObject();} catch (final JMSException e) {return;}try {this.printDomainInfo(messageMetadata.getMessageType(),messageMetadata.getDomain(),messageMetadata.getDomainVersion());this.deviceManagementService.updateKey(messageMetadata, this.responseMessageSender, publicKey);} catch (final RuntimeException e) {this.handleError(e, messageMetadata);}}}	2
5219	"public class A {private String callMvn(String _digest) {if (mvnResponse == null) {int sc = -1;String uri = null;try {final CloseableHttpClient httpclient = HttpClients.createDefault();uri =""http://search.maven.org/solrsearch/select?q=1:<SHA1>&rows=20&wt=json"".replaceAll(""<SHA1>"", _digest);final HttpGet method = new HttpGet(uri);if (ConnectionUtil.getProxyConfig() != null)method.setConfig(ConnectionUtil.getProxyConfig());final CloseableHttpResponse response = httpclient.execute(method);try {sc = response.getStatusLine().getStatusCode();HttpEntity entity = response.getEntity();if (sc == HttpStatus.SC_OK && entity != null) {mvnResponse = ConnectionUtil.readInputStream(entity.getContent());}} finally {response.close();}} catch (ClientProtocolException e) {} catch (Exception e) {}}return mvnResponse;}}"	2
5220	"public class A {private void generateCaKeyAndCert(Subject subject, Map<String, String> keyData, Map<String, String> certData) {try {File keyFile = File.createTempFile(""tls"", subject.commonName() + ""-key"");try {File certFile = File.createTempFile(""tls"", subject.commonName() + ""-cert"");try {File trustStoreFile = File.createTempFile(""tls"", subject.commonName() + ""-truststore"");String trustStorePassword;if (certData.containsKey(CA_STORE)) {Files.write(trustStoreFile.toPath(), Base64.getDecoder().decode(certData.get(CA_STORE)));trustStorePassword =new String(Base64.getDecoder().decode(certData.get(CA_STORE_PASSWORD)),StandardCharsets.US_ASCII);} else {trustStorePassword = passwordGenerator.generate();}try {certManager.generateSelfSignedCert(keyFile, certFile, subject, validityDays);certManager.addCertToTrustStore(certFile, CA_CRT, trustStoreFile, trustStorePassword);CertAndKey ca =new CertAndKey(Files.readAllBytes(keyFile.toPath()),Files.readAllBytes(certFile.toPath()),Files.readAllBytes(trustStoreFile.toPath()),null,trustStorePassword);certData.put(CA_CRT, ca.certAsBase64String());keyData.put(CA_KEY, ca.keyAsBase64String());certData.put(CA_STORE, ca.trustStoreAsBase64String());certData.put(CA_STORE_PASSWORD, ca.storePasswordAsBase64String());} finally {delete(trustStoreFile);}} finally {delete(certFile);}} finally {delete(keyFile);}} catch (IOException | CertificateException | KeyStoreException | NoSuchAlgorithmException e) {throw new RuntimeException(e);}}}"	1
5221	"public class A {public void execute() throws IOException {Set<Map<String, String>> resultSet = match(this.matchThreshold, this.scoreJena);for (Map<String, String> entry : resultSet) {String sInputURI = entry.get(""sInputURI"");String sVivoURI = entry.get(""sVivoURI"");String score = entry.get(""score"");}if (this.clearLiterals) {clearTypesAndLiterals(resultSet);}if (this.renameRes) {rename(resultSet);}if (this.linkProps != null) {for (String vivoToInput : this.linkProps.keySet()) {link(resultSet, vivoToInput, this.linkProps.get(vivoToInput));}}if (this.outputJena != null) {this.outputJena.getJenaModel().add(outputMatches(resultSet).getJenaModel());this.outputJena.sync();}this.inputJena.sync();}}"	6
5222	public class A {@Overridepublic void close() {if (conn != null) {try {conn.close();} catch (SQLException e) {} finally {conn = null;}}}}	1
5223	"public class A {public static void main(String[] args) {LoggingFactory.init(Level.INFO);try {Webcam webcamx = (Webcam) Runtime.start(""webcam"", ""Webcam"");webcamx.capture(""/dev/video0"", ""jpg"", 30, 640, 480, 0.5);WebGui webgui = (WebGui) Runtime.create(""webgui"", ""WebGui"");webgui.autoStartBrowser(false);webgui.startService();} catch (Exception e) {}}}"	1
5224	"public class A {@VisibleForTestingvoid deleteSecurityGroup(String region, String group) {checkNotNull(emptyToNull(region), ""region must be defined"");checkNotNull(emptyToNull(group), ""group must be defined"");String groupName = namingConvention.create().sharedNameForGroup(group);if (client.getSecurityGroupServices().describeSecurityGroupsInRegion(region, groupName).size()> 0) {client.getSecurityGroupServices().deleteSecurityGroupInRegion(region, groupName);securityGroupMap.invalidate(new RegionNameAndIngressRules(region, groupName, null, false));}}}"	2
5225	public class A {@Overridepublic void setWorkingDirectory(Path path) {if (path.isAbsolute()) {mWorkingDir = path;} else {mWorkingDir = new Path(mWorkingDir, path);}}}	1
5226	"public class A {@Testpublic void testMultiMapSerialization() throws Exception {Multimap<String, Integer> m = MultimapBuilder.hashKeys().arrayListValues().build();m.put(""bob"", 24);m.put(""bob"", 25);String result = checkSerializesAs(m, null);Assert.assertFalse(result.contains(""error""), ""Shouldn't have had an error, instead got: "" + result);Assert.assertEquals(Strings.collapseWhitespace(result, """"), ""{\""bob\"":[24,25]}"");}}"	1
5227	public class A {private void login(Configuration configuration) throws IOException {if (configuration.get(STORM_KEYTAB_FILE_KEY) == null) {configuration.set(STORM_KEYTAB_FILE_KEY, hdfsKeyTab);}if (configuration.get(STORM_USER_NAME_KEY) == null) {configuration.set(STORM_USER_NAME_KEY, hdfsPrincipal);}SecurityUtil.login(configuration, STORM_KEYTAB_FILE_KEY, STORM_USER_NAME_KEY);}}	1
5228	public class A {public void remove() {ALL_LOADERS.remove(this);try {super.close();} catch (IOException e) {}}}	1
5229	public class A {private OAuth2AccessTokenEntity fetchValidRegistrationToken(OAuth2Authentication auth, ClientDetailsEntity client) {OAuth2AuthenticationDetails details = (OAuth2AuthenticationDetails) auth.getDetails();OAuth2AccessTokenEntity token = tokenService.readAccessToken(details.getTokenValue());if (config.getRegTokenLifeTime() != null) {try {Date validToDate =new Date(System.currentTimeMillis() - config.getRegTokenLifeTime() * 1000);if (token.getJwt().getJWTClaimsSet().getIssueTime().before(validToDate)) {tokenService.revokeAccessToken(token);OAuth2AccessTokenEntity newToken = connectTokenService.createResourceAccessToken(client);tokenService.saveAccessToken(newToken);return newToken;} else {return token;}} catch (ParseException e) {return token;}} else {return token;}}}	2
5230	public class A {private static <T extends DataObject> boolean write(final DataBroker mountpoint,@Nonnull final Map<InstanceIdentifier<T>, T> data,byte retryCounter) {Preconditions.checkNotNull(mountpoint);Preconditions.checkNotNull(data);Preconditions.checkArgument(!data.isEmpty());final ReadWriteTransaction rwTx = mountpoint.newReadWriteTransaction();try {data.forEach((k, v) -> rwTx.put(LogicalDatastoreType.CONFIGURATION, k, v, true));final CheckedFuture<Void, TransactionCommitFailedException> futureTask = rwTx.submit();futureTask.get();return true;} catch (Exception e) {if (retryCounter > 0) {return write(mountpoint, data, --retryCounter);} else {return false;}}}}	4
5231	"public class A {private void validateExchange(final PkiMessage<?> req, final CertRep res)throws TransactionException {if (!res.getTransactionId().equals(req.getTransactionId())) {throw new TransactionException(""Transaction ID Mismatch"");} else {}if (!res.getRecipientNonce().equals(req.getSenderNonce())) {throw new InvalidNonceException(req.getSenderNonce(), res.getRecipientNonce());} else {}if (res.getSenderNonce() == null) {return;}if (QUEUE.contains(res.getSenderNonce())) {throw new InvalidNonceException(res.getSenderNonce());} else {QUEUE.add(res.getSenderNonce());}}}"	6
5232	public class A {public ManagedConnectionFactory getManagedConnectionFactory() {return this.managedConnectionFactory;}}	1
5233	public class A {private void sentOfflineMessage(ChannelHandlerContext ctx, Session session, DashBoard dashBoard, Device device) {boolean isHardwareConnected = session.isHardwareConnected(dashBoard.id, device.id);if (!isHardwareConnected) {device.disconnected();}if (!dashBoard.isActive) {return;}Notification notification = dashBoard.getNotificationWidget();if (notification != null && notification.notifyWhenOffline) {sendPushNotification(ctx, session, notification, dashBoard, device);} else if (!dashBoard.isNotificationsOff) {session.sendOfflineMessageToApps(dashBoard.id, device.id);}}}	1
5234	public class A {public ClientResponse run() {String relativeURL =RangerRESTUtils.REST_URL_GET_SECURE_SERVICE_TAGS_IF_UPDATED + serviceNameUrlParam;ClientResponse clientResp = null;try {clientResp = restClient.get(relativeURL, queryParams);} catch (Exception e) {}return clientResp;}}	1
5235	public class A {public String read(final String key) {KV kv = client.getKVClient();ByteSequence storeKey = Optional.ofNullable(key).map(ByteSequence::fromString).orElse(null);GetResponse response = null;try {response = kv.get(storeKey).get();} catch (InterruptedException | ExecutionException e) {}if (response == null) {return null;}Node info = response.getKvs().stream().map(EtcdClient::kv2NodeInfo).findFirst().orElse(null);assert info != null;return info.getValue();}}	2
5236	"public class A {@Transactional(propagation = Propagation.REQUIRES_NEW)@Override@SuppressWarnings(""unchecked"")public Pair<UserUR, List<PropagationStatus>> update(final UserUR userUR,final ProvisioningReport result,final Boolean enabled,final Set<String> excludedResources,final boolean nullPriorityAsync,final String updater,final String context) {PollingConsumer pollingConsumer = getConsumer(""direct:updateInPullPort"");Map<String, Object> props = new HashMap<>();props.put(""key"", userUR.getKey());props.put(""result"", result);props.put(""enabled"", enabled);props.put(""excludedResources"", excludedResources);props.put(""nullPriorityAsync"", nullPriorityAsync);props.put(""updater"", updater);props.put(""context"", context);sendMessage(""direct:updateUserInPull"", userUR, props);Exchange exchange = pollingConsumer.receive();Exception ex = (Exception) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);if (ex != null) {result.setStatus(ProvisioningReport.Status.FAILURE);result.setMessage(""Update failed, trying to pull status anyway (if configured)\n"" + ex.getMessage());UserWorkflowResult<Pair<UserUR, Boolean>> updated =new UserWorkflowResult<>(Pair.of(userUR, false),new PropagationByResource<>(),new PropagationByResource<>(),new HashSet<>());sendMessage(""direct:userInPull"", updated, props);exchange = pollingConsumer.receive();}return exchange.getIn().getBody(Pair.class);}}"	1
5237	public class A {private void doInsertInstances(String role,String dcId,String clusterId,String shardId,List<Pair<String, Integer>> redisAddresses)throws ResourceNotFoundException, DalException {DcClusterShardTbl dcClusterShardTbl = dcClusterShardService.find(dcId, clusterId, shardId);if (dcClusterShardTbl == null) {throw new ResourceNotFoundException(dcId, clusterId, shardId);}List<RedisTbl> redisTbls =doFindAllByDcClusterShardId(dcClusterShardTbl.getDcClusterShardId(), XPipeConsoleConstant.ROLE_REDIS);List<Pair<String, Integer>> toAdd = sub(redisAddresses, redisTbls);insertInstancesToDb(dcClusterShardTbl.getDcClusterShardId(), role, toAdd.toArray(new Pair[0]));}}	1
5238	public class A {protected void setBypass(boolean from, int day, int month) throws InterruptedException {BypassDate bypassDate = new BypassDate(day, month);try {this.writeValue(from? HeliosEasyControlsBindingConstants.BYPASS_FROM_DAY: HeliosEasyControlsBindingConstants.BYPASS_TO_DAY,Integer.toString(bypassDate.getDay()));this.writeValue(from? HeliosEasyControlsBindingConstants.BYPASS_FROM_MONTH: HeliosEasyControlsBindingConstants.BYPASS_TO_MONTH,Integer.toString(bypassDate.getMonth()));} catch (HeliosException e) {}}}	1
5239	public class A {@Overridepublic void run() {try {io();} catch (IOException e) {throw Throwables.propagate(e);}}}	1
5240	public class A {@Overrideprotected void sendWriteBuffer(int commandId, SocketAddress address, ByteBuffer writeBuffer, boolean redelivery)throws IOException {if (dropCommandStrategy.shouldDropCommand(commandId, address, redelivery)) {writeBuffer.flip();getReplayBuffer().addBuffer(commandId, writeBuffer);} else {super.sendWriteBuffer(commandId, address, writeBuffer, redelivery);}}}	1
5241	"public class A {@PostConstructpublic void initialise() {service =serviceLocator.builder(VehicleStateStatelessAsync.class, ""io.joynr.examples.statelessasync.carsim"").withUseCase(""jee-consumer-test"").build();}}"	2
5242	public class A {@Transactional(readOnly = false)public int undoSoftDeleteOnCascade(int id, Set<CardType> types, Set<EventType> filteredEvents) {return queries.undoSoftDeleteOnCascade(id, toStringList(types), toStringList(filteredEvents));}}	1
5243	"public class A {@Overridepublic long next() {SB sb = new SB();sb.a(""[op=next"" + "", grpId="" + grp.groupId() + "", partId="" + partId + "", before="" + toString());try {return delegate.next();} finally {}}}"	1
5244	public class A {public synchronized void bindHook(ServiceReference<DeploymentHook> hook) {final Object rawHookId = hook.getProperty(ConfigurationService.KURA_SERVICE_PID);if (!(rawHookId instanceof String)) {return;}final String hookId = (String) rawHookId;if (registeredHooks.containsKey(hookId)) {return;}this.registeredHooks.put(hookId, getBundleContext().getService(hook));updateAssociations();}}	3
5245	public class A {private void logFailedCheck(Result result) {switch (result.getStatus()) {case UNHEALTHY:if (result.getError().isPresent()) {} else {}break;case DEGRADED:if (result.getError().isPresent()) {} else {}break;case HEALTHY:break;}}}	4
5246	public class A {private void memberOffline(InternalDistributedMember distributedMember, PersistentMemberID persistentID) {if (logger.isDebugEnabled(LogMarker.PERSIST_ADVISOR_VERBOSE)) {}synchronized (lock) {boolean foundMember = recoveredMembers.remove(persistentID);foundMember |= equalMembers.remove(persistentID);foundMember |= getPersistedMembers().contains(persistentID);if (shouldUpdatePersistentView && online) {try {if (persistentMemberView.getOfflineAndEqualMembers().contains(persistentID)) {return;}if (foundMember) {if (PersistenceObserverHolder.getInstance().memberOffline(regionPath, persistentID)) {persistentMemberView.memberOffline(persistentID);}PersistenceObserverHolder.getInstance().afterPersistedOffline(regionPath, persistentID);}} catch (DiskAccessException e) {}}notifyListenersMemberOffline(distributedMember, persistentID);}}}	2
5247	"public class A {@Testpublic void testUpdateParagraphConfig() throws IOException {Note note = null;try {note = TestUtils.getInstance(Notebook.class).createNote(""note1"", anonymous);String noteId = note.getId();Paragraph p = note.addNewParagraph(AuthenticationInfo.ANONYMOUS);assertNull(p.getConfig().get(""colWidth""));String paragraphId = p.getId();String jsonRequest = ""{\""colWidth\"": 6.0}"";CloseableHttpResponse put =httpPut(""/notebook/"" + noteId + ""/paragraph/"" + paragraphId + ""/config"", jsonRequest);assertThat(""test testUpdateParagraphConfig:"", put, isAllowed());Map<String, Object> resp =gson.fromJson(EntityUtils.toString(put.getEntity(), StandardCharsets.UTF_8),new TypeToken<Map<String, Object>>() {}.getType());Map<String, Object> respBody = (Map<String, Object>) resp.get(""body"");Map<String, Object> config = (Map<String, Object>) respBody.get(""config"");put.close();assertEquals(config.get(""colWidth""), 6.0);note = TestUtils.getInstance(Notebook.class).getNote(noteId);assertEquals(note.getParagraph(paragraphId).getConfig().get(""colWidth""), 6.0);} finally {if (null != note) {TestUtils.getInstance(Notebook.class).removeNote(note, anonymous);}}}}"	1
5248	"public class A {private void cleanupTemporaryFile(String temporaryFile) {Script.runSimpleBashScript(""rm -f "" + temporaryFile);}}"	1
5249	public class A {@DB@Overridepublic void removeDhcpServiceInSubnet(final Nic nic) {final Network network = _networksDao.findById(nic.getNetworkId());final DhcpServiceProvider dhcpServiceProvider = getDhcpServiceProvider(network);try {final NicIpAliasVO ipAlias =_nicIpAliasDao.findByGatewayAndNetworkIdAndState(nic.getIPv4Gateway(), network.getId(), NicIpAlias.State.active);if (ipAlias != null) {ipAlias.setState(NicIpAlias.State.revoked);Transaction.execute(new TransactionCallbackNoReturn() {@Overridepublic void doInTransactionWithoutResult(final TransactionStatus status) {_nicIpAliasDao.update(ipAlias.getId(), ipAlias);final IPAddressVO aliasIpaddressVo =_publicIpAddressDao.findByIpAndSourceNetworkId(ipAlias.getNetworkId(), ipAlias.getIp4Address());_publicIpAddressDao.unassignIpAddress(aliasIpaddressVo.getId());}});if (!dhcpServiceProvider.removeDhcpSupportForSubnet(network)) {}}} catch (final ResourceUnavailableException e) {}}}	2
5250	"public class A {@Path(""/deploy/status/{id}/list"")@GETpublic Response deployStatus(@PathParam(""id"") String id) {try {String url = getTDMURL() + ""/api/bundle/deploy/status/"" + id + ""/list"";String json = _remoteConnectionService.getContent(url);return Response.ok(json).build();} catch (Exception e) {return Response.serverError().build();}}}"	2
5251	"public class A {private void waitUntilOrFailure(State state)throws ActionException, UserAccessPointException_Exception {State lastState = State.ACCEPTED;while (true) {ReservationResponse reservation = getReservation();if (!(reservation.getState().equals(lastState))) {lastState = reservation.getState();}switch (reservation.getState()) {case CANCELLED:if (state.equals(CANCELLED)) {return;} else {throw new ActionException(""Reservation cancelled: "" + reservation.getMessage());}case FAILED:throw new ActionException(""Reservation failed: "" + reservation.getMessage());default:break;}if (reservation.getState().ordinal() >= state.ordinal()) {return;}try {Thread.currentThread().sleep(500);} catch (InterruptedException e) {throw new ActionException(""Reservation was interrupted"", e);}}}}"	2
5252	"public class A {@Overridepublic TransactionalDataSource createOrUpdateShard(Long shardId, DbVersion dbVersion) {Objects.requireNonNull(dbVersion, ""dbVersion is null"");long start = System.currentTimeMillis();waitAvailability();if (connectedShardDataSourceMap.containsKey(shardId)) {TransactionalDataSource dataSource = connectedShardDataSourceMap.get(shardId);dataSource.update(dbVersion);return dataSource;} else {return createShardDatasource(shardId, dbVersion);}}}"	1
5253	public class A {@Testpublic void replicationOverflowTest() throws Exception {int repeatCount = 20;long index = 0L;List<ByteBuffer> messages = MessageUtils.build(10240, 1024);ByteBuffer replicationMessages =ByteBuffer.allocate(messages.stream().mapToInt(Buffer::remaining).sum());for (int i = 0; i < repeatCount; i++) {replicationMessages.clear();for (ByteBuffer byteBuffer : messages) {MessageParser.setShort(byteBuffer, MessageParser.PARTITION, partitions[0]);MessageParser.setInt(byteBuffer, MessageParser.TERM, 0);MessageParser.setInt(byteBuffer,MessageParser.STORAGE_TIMESTAMP,(int)(SystemClock.now()- MessageParser.getLong(byteBuffer, MessageParser.CLIENT_TIMESTAMP)));MessageParser.setLong(byteBuffer, MessageParser.INDEX, index++);replicationMessages.put(byteBuffer);byteBuffer.clear();}replicationMessages.flip();store.disable();boolean repeat = true;while (repeat)try {store.appendEntryBuffer(replicationMessages);repeat = false;} catch (TimeoutException ignored) {}}}}	1
5254	public class A {@Overridepublic void assign(byte[] regionName)throws MasterNotRunningException, ZooKeeperConnectionException, IOException {}}	1
5255	"public class A {@Overridepublic List<Device> getAllDevices() throws DeviceManagementException {List<Device> devices;try {if (log.isDebugEnabled()) {}devices = deviceTypeDAO.getDeviceTypeDAO().getAllDevices();} catch (DeviceMgtPluginException e) {String msg = ""Error while fetching all ${rootArtifactId} devices."";throw new DeviceManagementException(msg, e);}return devices;}}"	2
5256	public class A {@AfterClasspublic static void finalization() {balancer.stop();server.destroy();executor.shutdownNow();monitorExecutor.shutdownNow();balancer.stop();}}	4
5257	"public class A {public void parseStatus(int bus, int address, int value) throws java.io.IOException {java.util.List<SystemConnectionMemo> list = InstanceManager.getList(SystemConnectionMemo.class);SystemConnectionMemo memo;try {memo = list.get(bus - 1);} catch (java.lang.IndexOutOfBoundsException obe) {output.write(""412 ERROR wrong value\n\r"".getBytes());return;}String sensorName = memo.getSystemPrefix() + ""S"" + address;this.initSensor(sensorName);if (value == 0) {if (log.isDebugEnabled()) {}setSensorInactive(sensorName);} else if (value == 1) {if (log.isDebugEnabled()) {}setSensorActive(sensorName);}}}"	3
5258	"public class A {@POST(path = ""/backend/admin/users/update"", permission = ""admin:edit:user"")String updateUser(@BindRequest UserConfigDto userConfigDto) throws Exception {UserConfig existingUserConfig = configRepository.getUserConfig(userConfigDto.username());if (existingUserConfig == null) {throw new UserNotFoundException();}UserConfig userConfig = userConfigDto.convert(existingUserConfig);String version = userConfigDto.version().get();try {configRepository.updateUserConfig(userConfig, version);} catch (DuplicateUsernameException e) {throw new JsonServiceException(CONFLICT, ""username"");}return getUserConfigInternal(userConfig.username());}}"	1
5259	"public class A {public final void openModule(WorkbenchModule module) {if (!modules.contains(module)) {throw new IllegalArgumentException(""Module has not been loaded yet"");}activeModule.setValue(module);}}"	1
5260	public class A {@Overridepublic boolean addConditional(String systemName, Conditional conditional) {Conditional chkDuplicate = _conditionalMap.putIfAbsent(systemName, conditional);if (chkDuplicate == null) {return (true);}return (false);}}	1
5261	public class A {@Overridepublic void reactivate(String orcid, String primaryEmail, Reactivation reactivation) {ArrayList<String> emailsToNotify = new ArrayList<String>();transactionTemplate.execute(new TransactionCallback<Boolean>() {@Overridepublic Boolean doInTransaction(TransactionStatus status) {String primaryEmailTrim = primaryEmail.trim();emailManager.reactivatePrimaryEmail(orcid, primaryEmailTrim);if (reactivation == null) {emailManager.clearEmailsAfterReactivation(orcid);} else {if (reactivation.getEmailsAdditional() != null&& !reactivation.getEmailsAdditional().isEmpty()) {for (Text additionalEmail : reactivation.getEmailsAdditional()) {if (!PojoUtil.isEmpty(additionalEmail)) {String email = additionalEmail.getValue().trim();boolean isNewEmailOrShouldNotify =emailManager.reactivateOrCreate(orcid,email,reactivation.getActivitiesVisibilityDefault().getVisibility());if (isNewEmailOrShouldNotify) {emailsToNotify.add(email);}}}}emailManager.clearEmailsAfterReactivation(orcid);}ProfileEntity profileEntity = profileDao.find(orcid);profileEntity.setDeactivationDate(null);profileEntity.setClaimed(true);profileEntity.setIndexingStatus(IndexingStatus.PENDING);if (reactivation != null) {profileEntity.setEncryptedPassword(encryptionManager.hashForInternalUse(reactivation.getPassword().getValue()));profileEntity.setActivitiesVisibilityDefault(reactivation.getActivitiesVisibilityDefault().getVisibility().name());}profileDao.merge(profileEntity);if (reactivation != null) {Name name = recordNameManagerReadOnlyV3.getRecordName(orcid);if (reactivation.getGivenNames() != null)name.setGivenNames(new GivenNames(reactivation.getGivenNames().getValue()));if (reactivation.getFamilyNames() != null)name.setFamilyName(new FamilyName(reactivation.getFamilyNames().getValue()));recordNameManagerV3.updateRecordName(orcid, name);}return true;}});if (!emailsToNotify.isEmpty()) {for (String emailToNotify : emailsToNotify) {notificationManager.sendVerificationEmail(orcid, emailToNotify);}}}}	3
5262	public class A {protected void startServingRPCServer() {try {stopRejectingRpcServer();GrpcServerBuilder serverBuilder =GrpcServerBuilder.forAddress(GrpcServerAddress.create(mRpcConnectAddress.getHostName(), mRpcBindAddress),ServerConfiguration.global(),ServerUserState.global());registerServices(serverBuilder, mJobMaster.getServices());serverBuilder.addService(alluxio.grpc.ServiceType.JOURNAL_MASTER_CLIENT_SERVICE,new GrpcService(new JournalMasterClientServiceHandler(new DefaultJournalMaster(JournalDomain.JOB_MASTER, mJournalSystem))));mGrpcServer = serverBuilder.build().start();mGrpcServer.awaitTermination();} catch (IOException e) {throw new RuntimeException(e);}}}	2
5263	public class A {@Overridepublic ClientResponse invoke(Invocation clientInvocation) {final HttpUriRequest request = getUriHttpRequest((ClientInvocation) clientInvocation);writeOutBoundHeaders(((ClientInvocation) clientInvocation).getHeaders(), request);try {final CloseableHttpResponse response;final HttpClientContext context;if (VitamRestEasyConfiguration.CACHE_ENABLED.isTrue(config)) {context = HttpCacheContext.create();} else {context = HttpClientContext.create();}response = httpClient.execute(getHost(request), request, context);if (VitamRestEasyConfiguration.CACHE_ENABLED.isTrue(config)) {CacheResponseStatus responseStatus = ((HttpCacheContext) context).getCacheResponseStatus();switch (responseStatus) {case CACHE_HIT:break;case CACHE_MODULE_RESPONSE:break;case CACHE_MISS:break;case VALIDATED:break;}}final Response.StatusType status =Response.Status.fromStatusCode(response.getStatusLine().getStatusCode());final ClientResponse responseContext =new ClientResponse(((ClientInvocation) clientInvocation).getClientConfiguration(),RESTEasyTracingLogger.empty()) {InputStream stream = getNativeInputStream(response);{setEntity(stream);}@Overrideprotected InputStream getInputStream() {return stream;}@Overrideprotected void setInputStream(InputStream is) {stream = is;}@Overridepublic void releaseConnection() throws IOException {releaseConnection(true);}@Overridepublic void releaseConnection(boolean consumeInputStream) throws IOException {try {if (consumeInputStream) {while (stream.read() > 0) {}}stream.close();} finally {StreamUtils.closeSilently(response.getEntity().getContent());}response.close();}};responseContext.setProperties(((ClientInvocation) clientInvocation).getMutableProperties());responseContext.setStatus(status.getStatusCode());responseContext.setHeaders(extractHeaders(response));responseContext.setClientConfiguration(((ClientInvocation) clientInvocation).getClientConfiguration());return responseContext;} catch (final Exception e) {throw new ProcessingException(e);}}}	4
5264	public class A {@Overridepublic void entryAdded(EntryEvent<Long, Whiteboards> event) {onlineWbs.put(event.getKey(), event.getValue());}}	1
5265	public class A {private void deviceDisconnect(DeviceConnection conn) {try {if (conn.getSerialOut() != null) {conn.getSerialOut().close();}if (conn.getSerialIn() != null) {conn.getSerialIn().close();}if (conn.getSocket() != null) {conn.getSocket().close();}} catch (IOException e) {}conn.reset();}}	2
5266	"public class A {@Overridepublic void run() {try {new ExtGithub(this.farm).value().repos().get(new Coordinates.Simple(""zerocracy/farm"")).json();this.output.set(""OK"");} catch (final IOException err) {this.output.set(err.getMessage());}}}"	1
5267	public class A {public Struct keyFromColumnData(Object[] columnData) {if (LOGGER.isTraceEnabled()) {}return columnData == null ? null : keyGenerator.generateValue(columnData);}}	1
5268	"public class A {@Testpublic void testFindUsersByBadHeaderValueThenReturnBadRequest() {final HttpHeaders headers = new HttpHeaders();headers.add(CommonConstants.X_TENANT_ID_HEADER, ""%ds#</><!-sdq"");super.performGet(""/archive"",ImmutableMap.of(""page"", 1, ""size"", 20, ""orderBy"", ""id""),headers,status().isBadRequest());}}"	1
5269	"public class A {@Overridepublic void sendPushMessage(Variant variant,Collection<String> tokens,UnifiedPushMessage pushMessage,String pushMessageInformationId,NotificationSenderCallback callback) {if (tokens.isEmpty()) {return;}final List<String> pushTargets = new ArrayList<>(tokens);final AndroidVariant androidVariant = (AndroidVariant) variant;Builder fcmBuilder = new Message.Builder();org.jboss.aerogear.unifiedpush.message.Message message = pushMessage.getMessage();fcmBuilder.addData(""alert"", message.getAlert());fcmBuilder.addData(""sound"", message.getSound());fcmBuilder.addData(""badge"", String.valueOf(message.getBadge()));fcmBuilder.priority(message.getPriority() == Priority.HIGH ? Message.Priority.HIGH : Message.Priority.NORMAL);int ttl = pushMessage.getConfig().getTimeToLive();if (ttl != -1) {fcmBuilder.timeToLive(ttl);}message.getUserData().keySet().forEach(key -> fcmBuilder.addData(key, String.valueOf(message.getUserData().get(key))));fcmBuilder.addData(InternalUnifiedPushMessage.PUSH_MESSAGE_ID, pushMessageInformationId);Message fcmMessage = fcmBuilder.build();try {final ConfigurableFCMSender sender = new ConfigurableFCMSender(androidVariant.getGoogleKey());PrometheusExporter.instance().increasetotalPushAndroidRequests();processFCM(androidVariant, pushTargets, fcmMessage, sender);callback.onSuccess();} catch (Exception e) {callback.onError(String.format(""Error sending payload to FCM server: %s"", e.getMessage()));}}}"	2
5270	"public class A {protected void stop() {new Thread(() -> {for (; ; ) {SCBEngine.getInstance().destroy();if (ITBootListener.isDone()&& SCBStatus.DOWN.equals(SCBEngine.getInstance().getStatus())) {break;}ITUtils.forceWait(TimeUnit.SECONDS, 1);}System.exit(0);},""it-stop"").start();}}"	1
5271	public class A {@Override@Afterpublic void after() {try {runTestAsSubject(new TestOperation() {@Overridepublic void runTestAsSubject() throws Exception {Set<TSentryRole> tRoles = client.listAllRoles(ADMIN_USER, COMPONENT);for (TSentryRole tRole : tRoles) {client.dropRole(ADMIN_USER, tRole.getRoleName(), COMPONENT);}if (client != null) {client.close();}}});} catch (Exception e) {} finally {policyFilePath.delete();}}}	1
5272	public class A {public static Process exec(String... cmd) throws IOException {Process p = java.lang.Runtime.getRuntime().exec(cmd);return p;}}	1
5273	public class A {private boolean isDependencySatisfied(final PropertyDescriptor propertyDescriptor,final Function<String, PropertyDescriptor> propertyDescriptorLookup,final Set<String> propertiesSeen) {final Set<PropertyDependency> dependencies = propertyDescriptor.getDependencies();if (dependencies.isEmpty()) {return true;}final boolean added = propertiesSeen.add(propertyDescriptor.getName());if (!added) {return false;}try {for (final PropertyDependency dependency : dependencies) {final String dependencyName = dependency.getPropertyName();final PropertyDescriptor dependencyDescriptor =propertyDescriptorLookup.apply(dependencyName);if (dependencyDescriptor == null) {return false;}final PropertyConfiguration dependencyConfiguration = properties.get(dependencyDescriptor);if (dependencyConfiguration == null) {return false;}final String dependencyValue = dependencyConfiguration.getEffectiveValue(parameterLookup);if (dependencyValue == null) {return false;}final boolean transitiveDependencySatisfied =isDependencySatisfied(dependencyDescriptor, propertyDescriptorLookup, propertiesSeen);if (!transitiveDependencySatisfied) {return false;}final Set<String> dependentValues = dependency.getDependentValues();if (dependentValues != null && !dependentValues.contains(dependencyValue)) {return false;}}return true;} finally {propertiesSeen.remove(propertyDescriptor.getName());}}}	8
5274	public class A {private void removeEventServiceSubscription() {if (filterlessSubscriptionId != null && subscribeClientFactory != null) {CswSubscribe cswSubscribe =subscribeClientFactory.getClientForSystemSubject(getSystemSubject());try {cswSubscribe.deleteRecordsSubscription(filterlessSubscriptionId);} catch (CswException e) {}filterlessSubscriptionId = null;}}}	1
5275	"public class A {@Overridepublic List<String> searchIdeaInstances(Collection<String> groupNames, String code) {List<String> ideainstancesId = new ArrayList<String>();Connection conn = null;PreparedStatement stat = null;ResultSet res = null;if ((null == groupNames || groupNames.isEmpty()) && StringUtils.isBlank(code)) {ideainstancesId = this.loadIdeaInstances();return ideainstancesId;}try {conn = this.getConnection();StringBuffer sbBuffer = new StringBuffer();Iterator<String> it = groupNames.iterator();boolean appendWhere = true;String q = SEARCH_IDEAINSTANCES_ID;if (!groupNames.isEmpty()) {q =q.replace(""#JOIN_GROUP#"", ""INNER JOIN jpcollaboration_ideainstance_group g ON i.code=g.code"");sbBuffer.append(appendWhere ? "" WHERE "" : "" AND "");appendWhere = false;sbBuffer.append(""("");boolean appendOr = false;while (it.hasNext()) {String gname = it.next();if (appendOr) sbBuffer.append("" OR "");sbBuffer.append(""g.groupname=?"").append("" "");appendOr = true;}sbBuffer.append("")"");q = q.replace(""#GROUP_CODES#"", sbBuffer.toString());} else {q = q.replace(""#GROUP_CODES#"", "" "");q = q.replace(""#JOIN_GROUP#"", "" "");}if (StringUtils.isNotBlank(code)) {sbBuffer = new StringBuffer();sbBuffer.append(appendWhere ? "" WHERE "" : "" AND "");appendWhere = false;sbBuffer.append(""i.code like ? "");q = q.replace(""#CODE_NAME#"", sbBuffer.toString());} else {q = q.replace(""#CODE_NAME#"", "" "");}stat = conn.prepareStatement(q);int index = 1;if (!groupNames.isEmpty()) {it = groupNames.iterator();while (it.hasNext()) {String group = it.next();stat.setString(index++, group);}}if (StringUtils.isNotBlank(code)) {stat.setString(index++, ""%"" + code + ""%"");}res = stat.executeQuery();while (res.next()) {String codeValue = res.getString(""code"");ideainstancesId.add(codeValue);}} catch (Throwable t) {throw new RuntimeException(""error in searchIdeaInstances"", t);} finally {closeDaoResources(res, stat, conn);}return ideainstancesId;}}"	1
5276	"public class A {public String createSecurityGroup(String clusterName, String groupName, Nova nova, Set<String> ports) {String securityGroupUniqueName = NovaSetting.NOVA_UNIQUE_GROUP_NAME(clusterName, groupName);SecGroupExtension group =this.novaContext.getCompute().securityGroups().create(securityGroupUniqueName,String.format(""Security group for hops cluster %s, node group %s"", clusterName, groupName));if (!TESTING) {for (String port : ports) {Integer portNumber;IPProtocol ipProtocol;if (port.contains(""/"")) {String[] s = port.split(""/"");portNumber = Integer.valueOf(s[0]);ipProtocol = IPProtocol.valueOf(s[1]);} else {portNumber = Integer.valueOf(port);ipProtocol = IPProtocol.TCP;}SecGroupExtension.Rule rule =this.novaContext.getCompute().securityGroups().createRule(Builders.secGroupRule().parentGroupId(group.getId()).protocol(IPProtocol.TCP).cidr(""0.0.0.0/0"").range(portNumber, portNumber).build());}} else {SecGroupExtension.Rule rule =this.novaContext.getCompute().securityGroups().createRule(Builders.secGroupRule().parentGroupId(group.getId()).protocol(IPProtocol.TCP).cidr(""0.0.0.0/0"").range(1, 65535).build());}return group.getId();}}"	4
5277	"public class A {@Testpublic void testAggregateProcessInstancesEmpty() throws Exception {String xml1 = read(this.getClass().getResourceAsStream(""/jaxb/process-instance-empty.xml""));String xml2 = read(this.getClass().getResourceAsStream(""/jaxb/process-instance-empty.xml""));JaxbXMLResponseAggregator aggregate = new JaxbXMLResponseAggregator();List<String> data = new ArrayList<>();data.add(xml1);data.add(xml2);String result = aggregate.aggregate(data);Document xml = toXml(result);assertNotNull(xml);NodeList processes = xml.getElementsByTagName(""process-instance-list"");assertNotNull(processes);assertEquals(1, processes.getLength());NodeList processInstances = xml.getElementsByTagName(""process-instance"");assertNotNull(processInstances);assertEquals(0, processInstances.getLength());}}"	1
5278	"public class A {@Overridepublic Page<ConfigInfo> findAllConfigInfo(final int pageNo, final int pageSize, final String tenant) {String tenantTmp = StringUtils.isBlank(tenant) ? StringUtils.EMPTY : tenant;String sqlCountRows = ""SELECT COUNT(*) FROM config_info"";String sqlFetchRows ="" SELECT t.id,data_id,group_id,tenant_id,app_name,content,md5 ""+ "" FROM (  SELECT id FROM config_info WHERE tenant_id like ? ORDER BY id LIMIT ?,? )""+ "" g, config_info t  WHERE g.id = t.id "";PaginationHelper<ConfigInfo> helper = createPaginationHelper();try {return helper.fetchPageLimit(sqlCountRows,sqlFetchRows,new Object[] {generateLikeArgument(tenantTmp), (pageNo - 1) * pageSize, pageSize},pageNo,pageSize,CONFIG_INFO_ROW_MAPPER);} catch (CannotGetJdbcConnectionException e) {throw e;}}}"	1
5279	"public class A {public void doSendServiceCheck(String serviceCheckName, String status, String message, String[] tags) {String tagString = """";if (tags != null && tags.length > 0) {tagString = ""["" + StringUtils.join("","", tags) + ""]"";}Map<String, Object> sc = new HashMap<String, Object>();sc.put(""name"", serviceCheckName);sc.put(""status"", status);sc.put(""message"", message);sc.put(""tags"", tags);serviceChecks.add(sc);}}"	1
5280	"public class A {public static com.liferay.commerce.product.model.CPTaxCategory getCPTaxCategory(HttpPrincipal httpPrincipal, long cpTaxCategoryId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CPTaxCategoryServiceUtil.class, ""getCPTaxCategory"", _getCPTaxCategoryParameterTypes8);MethodHandler methodHandler = new MethodHandler(methodKey, cpTaxCategoryId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.product.model.CPTaxCategory) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
5281	public class A {public void onClusterChange() {ILogger logger = loggingService.getLogger(HazelcastInstance.class);dispose(onClusterChangeDisposables);clusterService.reset();partitionService.reset();connectionManager.reset();}}	1
5282	"public class A {public static void load() {String fileName = System.getProperty(""test.properties"");if (fileName == null) {return;}try (InputStream stream = new FileInputStream(fileName)) {properties.load(stream);System.getProperties().putAll(properties);} catch (FileNotFoundException e) {fail(""The given test properties file does not exist"");} catch (IOException e) {fail(""Unable to read the test properties file"");}}}"	3
5283	public class A {public void expireTimerTasks(long currentTick) {removeIf(timerFuture -> {if (timerFuture.status == HashedWheelTimerFuture.CANCELED) {return true;}if (timerFuture.status != HashedWheelTimerFuture.WAITING) {return true;}if (timerFuture.totalTicks <= currentTick) {if (timerFuture.totalTicks < currentTick) {}try {runTask(timerFuture);} catch (Exception ignore) {} finally {timerFuture.status = HashedWheelTimerFuture.FINISHED;}return true;}return false;});}}	2
5284	"public class A {private void autoStart() throws TException {String[] servicesToSchedule = ScheduleConstants.autostartServices;for (String serviceName : servicesToSchedule) {String cleanServiceName = serviceName.trim();if (!"""".equals(cleanServiceName)) {handler.scheduleService(cleanServiceName);}}}}"	2
5285	"public class A {public static com.liferay.commerce.product.model.CommerceChannel fetchCommerceChannel(HttpPrincipal httpPrincipal, long commerceChannelId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommerceChannelServiceUtil.class,""fetchCommerceChannel"",_fetchCommerceChannelParameterTypes3);MethodHandler methodHandler = new MethodHandler(methodKey, commerceChannelId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.product.model.CommerceChannel) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	1
5286	public class A {public void setAttributeMappings(List<String> attributeMappingsList) {if (attributeMappingsList != null) {mappingEntries.clear();attributeMappingsList.stream().filter(StringUtils::isNotEmpty).map(this::jsonToMap).filter(this::validAttributeMapping).forEach(map ->addAttributeMapping((String) map.get(ATTRIBUTE_NAME),(String) map.get(FEATURE_NAME),(String) map.get(TEMPLATE)));}}}	1
5287	public class A {@Overridepublic void operationComplete(int rc, AuthToken newam) {if (rc != BKException.Code.OK) {channel.close();return;}AuthMessage message =AuthMessage.newBuilder().setAuthPluginName(req.authMessage.getAuthPluginName()).setPayload(ByteString.copyFrom(newam.getData())).build();channel.writeAndFlush(new BookieProtocol.AuthResponse(req.getProtocolVersion(), message));}}	1
5288	public class A {@Overridepublic long push() throws IOException {try {final FileSystem fileSystem = zip.getFileSystem(configuration);long size = 0L;final byte[] buffer = new byte[1 << 13];progressable.progress();try (ZipInputStream in = new ZipInputStream(fileSystem.open(zip, 1 << 13))) {for (ZipEntry entry = in.getNextEntry(); entry != null; entry = in.getNextEntry()) {final String fileName = entry.getName();final String outputPath = new File(outDir, fileName).getAbsolutePath();CompressionUtils.validateZipOutputFile(zip.getName(), new File(outputPath), outDir);try (final OutputStream out =new BufferedOutputStream(new FileOutputStream(outputPath))) {for (int len = in.read(buffer); len >= 0; len = in.read(buffer)) {progressable.progress();if (len == 0) {continue;}size += len;out.write(buffer, 0, len);}out.flush();}}}progressable.progress();return size;} catch (IOException | RuntimeException exception) {throw exception;}}}	1
5289	public class A {@Overridepublic void release() {try {autoPingManager.release();bookmarkManager.release();mediaFileManager.release();fileContentManager.release();pingTargetManager.release();pingQueueManager.release();pluginManager.release();threadManager.release();userManager.release();weblogManager.release();} catch (Exception e) {}}}	1
5290	public class A {@Overridepublic boolean isSatisified() throws Exception {boolean result = false;BrokerView view = broker.getAdminView();if (view != null) {ObjectName[] subs = broker.getAdminView().getInactiveDurableTopicSubscribers();if (subs != null) {if (expectedCount == subs.length) {result = true;}}}return result;}}	1
5291	public class A {@ExceptionHandler(InvalidSearchParamException.class)@ResponseStatus(value = HttpStatus.BAD_REQUEST)public ViewObjectErrorResponse invalidSearchParamExceptionHandler(InvalidSearchParamException ex) {return new ViewObjectErrorResponse(ErrorCode.SEARCH_ERROR, ex.getMessage());}}	1
5292	public class A {public void attachClean(TmpItvSel instance) {try {sessionFactory.getCurrentSession().lock(instance, LockMode.NONE);} catch (RuntimeException re) {throw re;}}}	3
5293	"public class A {@Overridepublic MigrationPublishResult doMigrationPublish(String clusterName, String shardName, String primaryDcName, InetSocketAddress newMaster)throws OuterClientException {String startTime = DateTimeUtils.currentTimeAsString();MigrationPublishResult res =new MigrationPublishResult(""default-addr"", clusterName, primaryDcName, Arrays.asList(newMaster));String endTime = DateTimeUtils.currentTimeAsString();res.setSuccess(true);res.setMessage(""default-success"");res.setStartTime(startTime);res.setEndTime(endTime);return res;}}"	1
5294	"public class A {public String toJsonString() {try {return mapper.writeValueAsString(mapper.createObjectNode().put(""message"", getMessage()));} catch (JsonProcessingException e) {throw new RuntimeException(e);}}}"	1
5295	public class A {private void writePSKIdentityHintLength(PskEcDheServerKeyExchangeMessage msg) {appendInt(msg.getIdentityHintLength().getValue(), HandshakeByteLength.PSK_IDENTITY_LENGTH);}}	1
5296	public class A {public GenericEntity getSession(String token, String id) {try {return this.createEntityFromAPI(getApiUrl() + SESSION_URL + id, token);} catch (JsonSyntaxException e) {return new GenericEntity();}}}	1
5297	"public class A {@ApiOperation(value = ""get history by user's id"")@GetMapping(CommonConstants.PATH_LOGBOOK)public LogbookOperationsResponseDto findHistoryById(final @PathVariable String id) {SanityChecker.check(id);return service.findHistoryById(buildUiHttpContext(), id);}}"	1
5298	"public class A {private void processRestMethodReturnValue(Class<?> returnType, Operation operation, String returnDescription)throws MojoExecutionException {exampleClassNames.add(returnType.getSimpleName());operation.response(200,new Response().description(returnDescription == null ? ""Success"" : returnDescription).schema(new RefProperty(getXmlType(returnType).name().trim())));if (modelErrorClass != null) {operation.defaultResponse(new Response().description(""General Error"").schema(new RefProperty(getXmlType(modelErrorClass).name().trim())));}}}"	1
5299	public class A {private String getHostForIp(String ip) {try {return InetAddress.getByName(ip).getCanonicalHostName();} catch (UnknownHostException ex) {return ip;}}}	1
5300	public class A {public JFrame getFrame() {if (frame == null) {if (SwingUtilities.isEventDispatchThread()) {createFrame();} else {try {SwingUtilities.invokeAndWait(this::createFrame);} catch (InterruptedException | InvocationTargetException ex) {}}}return frame;}}	3
5301	"public class A {public void testDatasourceUpdate() throws Exception {TestContext context = new TestContext();Map<String, String> overlay = context.getUniqueOverlay();String filePath =TestContext.overlayParametersOverTemplate(TestContext.CLUSTER_TEMPLATE, overlay);context.setCluster(filePath);Assert.assertEquals(TestContext.executeWithURL(""entity -submit -type cluster -file "" + filePath), 0);String dsName = ""datasource-test-1"";overlay.put(DATASOURCE_NAME_KEY, dsName);filePath = TestContext.overlayParametersOverTemplate(TestContext.DATASOURCE_TEMPLATE1, overlay);Assert.assertEquals(TestContext.executeWithURL(""entity -submit -type datasource -file "" + filePath), 0);filePath = TestContext.overlayParametersOverTemplate(TestContext.FEED_TEMPLATE3, overlay);Assert.assertEquals(0, TestContext.executeWithURL(""entity -submitAndSchedule -type feed -file "" + filePath));overlay.put(DATASOURCE_NAME_KEY, dsName);filePath = TestContext.overlayParametersOverTemplate(TestContext.DATASOURCE_TEMPLATE5, overlay);Assert.assertEquals(0, TestContext.executeWithURL(""entity -update -type datasource -file "" + filePath));}}"	4
5302	"public class A {@SuppressFBWarnings(value = ""UPM_UNCALLED_PRIVATE_METHOD"",justification = ""https://github.com/spotbugs/spotbugs/issues/811"")private SshFutureListener<AuthFuture> newAuthSshFutureListener(final ClientSession session) {final PublicKey serverKey = session.getServerKey();return new SshFutureListener<AuthFuture>() {@Overridepublic void operationComplete(final AuthFuture authFuture) {if (authFuture.isSuccess()) {onSuccess();} else if (authFuture.isFailure()) {onFailure(authFuture.getException());} else if (authFuture.isCanceled()) {onCanceled();}authFuture.removeListener(this);}private void onSuccess() {}private void onFailure(final Throwable throwable) {recorder.reportFailedAuth(serverKey);session.close(true);}private void onCanceled() {session.close(true);}};}}"	3
5303	"public class A {public synchronized void destroy(NodeState state) throws ItemStateException {if (!initialized) {throw new IllegalStateException(""not initialized"");}try {executeStmt(nodeStateDeleteSQL, new Object[] {state.getNodeId().toString()});} catch (Exception e) {String msg = ""failed to delete node state: "" + state.getNodeId();throw new ItemStateException(msg, e);}}}"	1
5304	"public class A {@Overridepublic String toParamName(String name) {name = camelize(toVarName(name), true);if (isReservedWord(name)) {name = name + ""_"";}return name;}}"	1
5305	"public class A {@Testpublic void testLogin() throws Exception {final SslContextFactory sslContextFactory = new SslContextFactory.Client();sslContextFactory.setSslContext(new SSLContextParameters().createSSLContext(new DefaultCamelContext()));final SalesforceHttpClient httpClient = new SalesforceHttpClient(sslContextFactory);httpClient.setConnectTimeout(TIMEOUT);final SalesforceSession session =new SalesforceSession(new DefaultCamelContext(), httpClient, TIMEOUT, LoginConfigHelper.getLoginConfig());session.addListener(this);httpClient.setSession(session);httpClient.start();try {String loginToken = session.login(session.getAccessToken());assertTrue(onLoginTriggered, ""SalesforceSessionListener onLogin NOT called"");onLoginTriggered = false;loginToken = session.login(loginToken);assertTrue(onLogoutTriggered, ""SalesforceSessionListener onLogout NOT called"");assertTrue(onLoginTriggered, ""SalesforceSessionListener onLogin NOT called"");} finally {session.logout();}}}"	2
5306	"public class A {@Overridepublic List<String> getDescriptionsFromPage(Document page) {List<String> urls = new ArrayList<>();Elements urlElements = page.select(""figure.t-image > b > u > a"");for (Element e : urlElements) {urls.add(urlBase + e.select(""a"").first().attr(""href""));}return urls;}}"	1
5307	public class A {private Set<ProtectionSystem> getProtectionSystemsForStoragePool(StoragePool storagePool, VirtualArray vArray, boolean isRpVplex) {Set<ProtectionSystem> protectionSystems =ConnectivityUtil.getProtectionSystemsForStoragePool(dbClient, storagePool, vArray.getId(), isRpVplex);if (protectionSystems.isEmpty()) {}return protectionSystems;}}	1
5308	public class A {@Overridepublic void run() {running = true;while (running) {try {Thread.sleep(2000);FileIO.toFile(filename, CodecUtils.toJson(positions).getBytes());} catch (Exception e) {}}worker = null;}}	2
5309	"public class A {private Transcoding getTranscoding(MediaFile mediaFile, Player player, String preferredTargetFormat, boolean hls) {if (hls) {return new Transcoding(null,""hls"",mediaFile.getFormat(),""ts"",settingsService.getHlsCommand(),null,null,true);}if (FORMAT_RAW.equals(preferredTargetFormat)) {return null;}List<Transcoding> applicableTranscodings = new LinkedList<>();String suffix = mediaFile.getFormat();List<Transcoding> transcodingsForPlayer = getTranscodingsForPlayer(player);for (Transcoding transcoding : transcodingsForPlayer) {if (mediaFile.isVideo()&& StringUtils.equalsIgnoreCase(preferredTargetFormat, transcoding.getTargetFormat())) {if (LOG.isDebugEnabled()) {}return transcoding;}Arrays.stream(transcoding.getSourceFormatsAsArray()).filter(sourceFormat -> sourceFormat.equalsIgnoreCase(suffix)).filter(sourceFormat -> isTranscodingInstalled(transcoding)).forEach(s -> applicableTranscodings.add(transcoding));}if (applicableTranscodings.isEmpty()) {return null;}for (Transcoding transcoding : applicableTranscodings) {if (transcoding.getTargetFormat().equalsIgnoreCase(preferredTargetFormat)) {return transcoding;}}return applicableTranscodings.get(0);}}"	1
5310	public class A {@Overridepublic void updateServerURI(String uri) {if (!runsAsApplication) {ClientPropertyPlaceholderConfigurer.setRemoteServerMode(uri);try {ServiceFactory.openCommandService();} catch (MalformedURLException e) {throw new IllegalStateException(e);}state = ServiceFactory.getClientWorkObjects();VeriniceContext.setState(state);context.registerService(ICommandService.class.getName(),VeriniceContext.get(VeriniceContext.COMMAND_SERVICE),null);context.registerService(IObjectModelService.class.getName(),VeriniceContext.get(VeriniceContext.OBJECT_MODEL_SERVICE),null);}}}	1
5311	"public class A {@Overridepublic CompletableFuture<Tuple2<List<String>, ExecutionInfo>> getListJSONAsyncWithStats() {final RuntimeEngine rte = getRte();final CassandraOptions options = getOptions();final StatementWrapper statementWrapper = getInternalBoundStatementWrapper();if (LOGGER.isTraceEnabled()) {}CompletableFuture<ResultSet> futureRS = rte.execute(statementWrapper);return futureRS.thenApply(options::resultSetAsyncListener).thenApply(x ->statementWrapper.logReturnResults(x, options.computeMaxDisplayedResults(rte.configContext))).thenApply(statementWrapper::logTrace).thenApply(resultSet ->Tuple2.of(IntStream.range(0, resultSet.getAvailableWithoutFetching()).mapToObj(index -> resultSet.one().getString(""[json]"")).collect(Collectors.toList()),resultSet.getExecutionInfo()));}}"	1
5312	"public class A {@Testpublic void testQuery() throws Exception {com.google.api.services.calendar.model.FreeBusyRequest request = new FreeBusyRequest();List<FreeBusyRequestItem> items = new ArrayList<>();items.add(new FreeBusyRequestItem().setId(getCalendar().getId()));request.setItems(items);request.setTimeMin(DateTime.parseRfc3339(""2014-11-10T20:45:30-00:00""));request.setTimeMax(DateTime.parseRfc3339(""2014-11-10T21:45:30-00:00""));final com.google.api.services.calendar.model.FreeBusyResponse result =requestBody(""direct://QUERY"", request);assertNotNull(result, ""query result"");}}"	1
5313	public class A {protected void processAffinityGroup(AffinityGroupVMMapVO vmGroupMapping, DeploymentPlan plan, VirtualMachine vm) {AffinityGroupVO group = _affinityGroupDao.findById(vmGroupMapping.getAffinityGroupId());List<Long> groupVMIds = _affinityGroupVMMapDao.listVmIdsByAffinityGroup(group.getId());groupVMIds.remove(vm.getId());List<Long> preferredHosts = getPreferredHostsFromGroupVMIds(groupVMIds);plan.setPreferredHosts(preferredHosts);}}	1
5314	public class A {@Overridepublic void execute()throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException,ConcurrentOperationException, ResourceAllocationException, NetworkRuleConflictException {try {BaremetalRctResponse rsp = vlanMgr.addRct(this);this.setResponseObject(rsp);} catch (Exception e) {throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, e.getMessage());}}}	1
5315	public class A {public void stop() {setShuttingDownStatus(true);try {Thread.sleep(5000);} catch (Exception e) {}_helixManager.disconnect();_serverInstance.shutDown();}}	1
5316	public class A {private void unlock(String requestId, String name, long start) {long duration = System.currentTimeMillis() - start;if (duration > 1000) {} else {}ReentrantLock lock = requestLocks.computeIfAbsent(requestId, r -> new ReentrantLock());lock.unlock();}}	2
5317	public class A {private static void verifyDirsForNewEnvironment(List<File> missedCookieDirs)throws InvalidCookieException {List<File> nonEmptyDirs = new ArrayList<>();for (File dir : missedCookieDirs) {String[] content = dir.list();if (content != null && content.length != 0) {nonEmptyDirs.add(dir);}}if (!nonEmptyDirs.isEmpty()) {throw new InvalidCookieException();}}}	1
5318	"public class A {public static void copyInputStreamToOutputStream(InputStream in, OutputStream out) {ArgumentNotValid.checkNotNull(in, ""InputStream in"");ArgumentNotValid.checkNotNull(out, ""OutputStream out"");try {try {if (in instanceof FileInputStream && out instanceof FileOutputStream) {FileChannel inChannel = ((FileInputStream) in).getChannel();FileChannel outChannel = ((FileOutputStream) out).getChannel();long transferred = 0;final long fileLength = inChannel.size();do {transferred +=inChannel.transferTo(transferred,Math.min(Constants.IO_CHUNK_SIZE, fileLength - transferred),outChannel);} while (transferred < fileLength);} else {byte[] buf = new byte[Constants.IO_BUFFER_SIZE];int bytesRead;while ((bytesRead = in.read(buf)) != -1) {out.write(buf, 0, bytesRead);}}out.flush();} finally {in.close();}} catch (IOException e) {String errMsg = ""Trouble copying inputstream "" + in + "" to outputstream "" + out;throw new IOFailure(errMsg, e);}}}"	1
5319	"public class A {@Overridepublic void setContent(InputStream inputStream) throws IOException {ObjectUtil.checkNotNull(inputStream, ""inputStream"");if (file != null) {delete();}file = tempFile();RandomAccessFile accessFile = new RandomAccessFile(file, ""rw"");int written = 0;try {accessFile.setLength(0);FileChannel localfileChannel = accessFile.getChannel();byte[] bytes = new byte[4096 * 4];ByteBuffer byteBuffer = ByteBuffer.wrap(bytes);int read = inputStream.read(bytes);while (read > 0) {byteBuffer.position(read).flip();written += localfileChannel.write(byteBuffer);checkSize(written);read = inputStream.read(bytes);}localfileChannel.force(false);} finally {accessFile.close();}size = written;if (definedSize > 0 && definedSize < size) {if (!file.delete()) {}file = null;throw new IOException(""Out of size: "" + size + "" > "" + definedSize);}isRenamed = true;setCompleted();}}"	1
5320	"public class A {@Overridepublic void loadFromXml(Element x) {super.loadFromXml(x);try {VALUE value =TypeCastUtility.castValue(XmlUtility.getObjectAttribute(x, ""value""), getHolderType());setValue(value);} catch (Exception e) {}}}"	1
5321	public class A {@Overridepublic URL evaluate(FunctionArgs args, EvaluationContext context) {final String urlString = String.valueOf(urlParam.required(args, context));try {return new URL(urlString);} catch (IllegalArgumentException e) {final Optional<String> defaultUrl = defaultParam.optional(args, context);if (!defaultUrl.isPresent()) {return null;}try {return new URL(defaultUrl.get());} catch (IllegalArgumentException e1) {throw Throwables.propagate(e1);}}}}	2
5322	"public class A {protected org.hibernate.search.jpa.FullTextQuery prepareQuery(final QueryParser inQueryParser, final String nativeSearchString) {Query luceneQuery;try {luceneQuery = inQueryParser.parse(nativeSearchString);} catch (ParseException e) {String message = ""Unable to parse query: '"" + nativeSearchString + ""'"";throw new RuntimeException(message);}if (log.isInfoEnabled()) {}FullTextEntityManager ftem = getFullTextEntityManager();ProjectionFullTextQuery projectionFullTextQuery =new ProjectionFullTextQuery(ftem.createFullTextQuery(luceneQuery, resultTypes));List<String> parameters = buildFieldList();projectionFullTextQuery.setProjection(parameters.toArray(new String[parameters.size()]));projectionFullTextQuery.setResultTransformer(resultTransformer);return projectionFullTextQuery;}}"	4
5323	"public class A {@Overridepublic synchronized void run() {session.getConnection().fail(new ActiveMQNotConnectedException(""oops""));cancel();executed = true;}}"	2
5324	public class A {private String find(File[] jarFiles, final JarDescription jarDescription) {final String jarName = jarDescription.getJarName();final Pattern pattern = jarDescription.getVersionPattern();final List<File> jarFIleList = findFileByPattern(jarFiles, pattern);if (jarFIleList.isEmpty()) {return null;}if (jarFIleList.size() == 1) {final File file = jarFIleList.get(0);return FileUtils.toCanonicalPath(file);}return null;}}	3
5325	"public class A {@BeforeEachpublic void setUp() throws Exception {TestUtils.setupWeblogger();try {testUser = TestUtils.setupUser(""wtTestUser"");testWeblog = TestUtils.setupWeblog(""wtTestWeblog"", testUser);TestUtils.endSession(true);} catch (Exception ex) {throw new Exception(""Test setup failed"", ex);}testCommonPing = new PingTarget();testCommonPing.setName(""testCommonPing"");testCommonPing.setPingUrl(""http://localhost/testCommonPing"");}}"	1
5326	public class A {public void waitForProgress(int minEmits, int expectedExecutors, String componentName, int maxWaitSec) throws TException {for (int i = 0; i < (maxWaitSec + 1) / 2; ++i) {long emitCount = getAllTimeEmittedCount(componentName);long executorCount = getComponentExecutorCount(componentName);if (emitCount >= minEmits && executorCount == expectedExecutors) {break;}TimeUtil.sleepSec(2);}}}	3
5327	"public class A {private Blob copyObjectToDestination(GCSPath sourcePath, GCSPath destPath, boolean overwrite) {Blob sourceBlob;try {sourceBlob = storage.get(sourcePath.getBucket(), sourcePath.getName());if (sourceBlob == null) {throw new RuntimeException(String.format(""Object %s. not found"", sourcePath.getUri())+ ""Ensure you entered the correct path."");}} catch (StorageException e) {throw new RuntimeException(String.format(""Unable to access source bucket %s. "", sourcePath.getBucket())+ ""Ensure you entered the correct bucket path."",e);}boolean destinationObjectExists = false;String destinationPath = String.format(""%s%s"", destPath.getName(), sourcePath.getName());if (storage.get(BlobId.of(destPath.getBucket(), destinationPath)) != null) {destinationObjectExists = true;}final BlobId destination =BlobId.of(destPath.getBucket(), append(destPath.getName(), sourcePath.getName()));if (!overwrite && destinationObjectExists) {throw new IllegalArgumentException(String.format(""%s already exists."", toPath(destination)));}Blob copied;try {CopyWriter copyWriter = sourceBlob.copyTo(destination);copied = copyWriter.getResult();} catch (StorageException e) {throw new RuntimeException(String.format(""Unable to access source bucket %s. "", destPath.getBucket())+ ""Ensure you entered the correct bucket path."",e);}return copied;}}"	2
5328	public class A {@Overridepublic Optional<MetacardValidationReport> validateMetacard(Metacard metacard) {try {return Optional.of(generateReport(metacard));} catch (ValidationExceptionImpl e) {return Optional.empty();}}}	1
5329	public class A {void removedEmptyNestedGroups(NavGroup navGroup, List<String> itemsToRemove) {filteringGroups(navGroup.getChildren()).forEach(group -> removedEmptyNestedGroups(group, itemsToRemove));if (navGroup.getChildren().isEmpty()) {itemsToRemove.add(navGroup.getId());}}}	1
5330	"public class A {private void readBufferAndLogMetrics(final Operation currentOp, final ByteBuffer rbuf, final MemcachedNode node)throws IOException {currentOp.readFromBuffer(rbuf);if (currentOp.getState() == OperationState.COMPLETE) {getLogger()Operation op = node.removeCurrentReadOp();assert op == currentOp : ""Expected to pop "" + currentOp + "" got "" + op;if (op.hasErrored()) {metrics.markMeter(OVERALL_RESPONSE_FAIL_METRIC);} else {metrics.markMeter(OVERALL_RESPONSE_SUCC_METRIC);}} else if (currentOp.getState() == OperationState.RETRY) {handleRetryInformation(currentOp.getErrorMsg());((VBucketAware) currentOp).addNotMyVbucketNode(currentOp.getHandlingNode());Operation op = node.removeCurrentReadOp();assert op == currentOp : ""Expected to pop "" + currentOp + "" got "" + op;retryOperation(currentOp);metrics.markMeter(OVERALL_RESPONSE_RETRY_METRIC);}}}"	2
5331	"public class A {private void showCheckoutConflictsNotification(List<String> conflictingPaths) {Platform.runLater(() -> {EventHandler handler = event -> quickStashSave();this.notificationPaneController.addNotification(""You can't switch to that branch because there would be a merge conflict. ""+ ""Stash your changes or resolve conflicts first."",""stash"",handler);});}}"	1
5332	"public class A {@Overridepublic void processRecord(ARCRecord sar, OutputStream os) {Map<String, String> fieldsread = new HashMap<String, String>();fieldsread.put(""A"", sar.getMetaData().getUrl());fieldsread.put(""e"", sar.getMetaData().getIp());fieldsread.put(""b"", sar.getMetaData().getDate());fieldsread.put(""m"", sar.getMetaData().getMimetype());fieldsread.put(""n"", Long.toString(sar.getMetaData().getLength()));fieldsread.put(""v"", Long.toString(sar.getMetaData().getOffset()));fieldsread.put(""g"", sar.getMetaData().getArcFile().getName());if (includeChecksum) {InputStream instream = sar;fieldsread.put(""c"", ChecksumCalculator.calculateMd5(instream));}printFields(fieldsread, os);}}"	1
5333	"public class A {@GET@Path(""/duplicateCheck"")@SubmarineApipublic Response duplicateCheck(@QueryParam(""tableName"") String tableName,@QueryParam(""fieldName"") String fieldName,@QueryParam(""fieldVal"") String fieldVal,@QueryParam(""equalFieldName"") String equalFieldName,@QueryParam(""equalFieldVal"") String equalFieldVal,@QueryParam(""dataId"") String dataId) {SqlSession sqlSession = MyBatisUtil.getSqlSession();SystemMapper systemMapper = sqlSession.getMapper(SystemMapper.class);Long count = 0L;try {Map<String, Object> params = new HashMap<>();params.put(""tableName"", tableName);params.put(""fieldName"", fieldName);params.put(""fieldVal"", fieldVal);params.put(""equalFieldName"", equalFieldName);params.put(""equalFieldVal"", equalFieldVal);params.put(""dataId"", dataId);count = systemMapper.duplicateCheck(params);} catch (Exception e) {} finally {sqlSession.close();}if (count == null || count == 0) {return new JsonResponse.Builder<>(Response.Status.OK).message(""This value is available!"").success(true).build();} else {return new JsonResponse.Builder<>(Response.Status.OK).message(""This value already exists is not available!"").success(false).build();}}}"	4
5334	"public class A {protected Integer resolveMoveThreadCount(String moveThreadCount) {int availableProcessorCount = getAvailableProcessors();Integer resolvedMoveThreadCount;if (moveThreadCount == null || moveThreadCount.equals(SolverConfig.MOVE_THREAD_COUNT_NONE)) {return null;} else if (moveThreadCount.equals(SolverConfig.MOVE_THREAD_COUNT_AUTO)) {resolvedMoveThreadCount = (availableProcessorCount - 2);if (resolvedMoveThreadCount <= 1) {return null;}} else {resolvedMoveThreadCount =ConfigUtils.resolvePoolSize(""moveThreadCount"",moveThreadCount,SolverConfig.MOVE_THREAD_COUNT_NONE,SolverConfig.MOVE_THREAD_COUNT_AUTO);}if (resolvedMoveThreadCount < 1) {throw new IllegalArgumentException(""The moveThreadCount (""+ moveThreadCount+ "") resulted in a resolvedMoveThreadCount (""+ resolvedMoveThreadCount+ "") that is lower than 1."");}if (resolvedMoveThreadCount > availableProcessorCount) {}return resolvedMoveThreadCount;}}"	1
5335	public class A {private TransactionBatch nextTxnBatch(final RecordWriter recordWriter)throws InterruptedException, TxnBatchException {TransactionBatch batch = null;try {batch =timedCall(new CallRunner1<TransactionBatch>() {@Overridepublic TransactionBatch call() throws InterruptedException, StreamingException {return connection.fetchTransactionBatch(txnsPerBatch, recordWriter);}});} catch (Exception e) {throw new TxnBatchException(endPoint, e);}return batch;}}	2
5336	public class A {@Overridepublic void processMessage(Chat chat, Message message) {try {String body = message.getBody();if (Validator.isNull(body)) {return;}String from = message.getFrom();if (StringUtil.equalsIgnoreCase(JabberUtil.getResource(from), _chatGroupServiceConfiguration.jabberResource())) {return;}long fromUserId =UserLocalServiceUtil.getUserIdByScreenName(_companyId, JabberUtil.getScreenName(from));EntryLocalServiceUtil.addEntry(fromUserId, _userId, body);} catch (Exception exception) {}}}	1
5337	"public class A {public LensRDDResult getRDD(QueryHandle queryHandle) throws LensException {QueryStatus status = getClient().getQueryStatus(queryHandle);if (!status.finished() && !status.isResultSetAvailable()) {throw new LensException(queryHandle.getHandleId() + "" query not finished or result unavailable"");}LensClient.LensClientResultSetWithStats result = getClient().getAsyncResults(queryHandle);if (result.getResultSet() == null) {throw new LensException(""Result set not available for query "" + queryHandle.getHandleId());}LensClientResultSet resultSet = result.getResultSet();QueryResultSetMetadata metadata = result.getResultSet().getResultSetMetadata();if (!(resultSet.getResult() instanceof PersistentQueryResult)) {throw new LensException(""RDDs only supported for persistent result sets"");}PersistentQueryResult persistentQueryResult = (PersistentQueryResult) resultSet.getResult();String tempTableName;try {tempTableName = createTempMetastoreTable(persistentQueryResult.getPersistedURI(), metadata);} catch (HiveException e) {throw new LensException(""Error creating temp table from result set"", e);}JavaPairRDD<WritableComparable, HCatRecord> rdd = null;try {rdd =HiveTableRDD.createHiveTableRDD(sparkContext,HIVE_CONF,""default"",tempTableName,TEMP_TABLE_PART_COL + ""='"" + TEMP_TABLE_PART_VAL + ""'"");} catch (IOException e) {throw new LensException(""Error creating RDD for table "" + tempTableName, e);}return new LensRDDResult(rdd.map(new HCatRecordToObjectListMapper()).rdd(), queryHandle, tempTableName);}}"	1
5338	"public class A {private Future<HttpServer> bindSecureHttpServer(final Router router) {if (isSecurePortEnabled()) {final Promise<HttpServer> result = Promise.promise();final String bindAddress = server == null ? getConfig().getBindAddress() : ""?"";if (server == null) {server = vertx.createHttpServer(getHttpServerOptions());}server.requestHandler(router).listen(bindAttempt -> {if (bindAttempt.succeeded()) {if (getPort() == getPortDefaultValue()) {} else {}result.complete(bindAttempt.result());} else {result.fail(bindAttempt.cause());}});return result.future();} else {return Future.succeededFuture();}}}"	3
5339	"public class A {@Overridepublic boolean init(final String destination) {if (initialized.compareAndSet(false, true)) {this.destination = destination;this.memoryTableMeta = new MemoryTableMeta();if (snapshotInterval > 0) {scheduleSnapshotFuture =scheduler.scheduleWithFixedDelay(() -> {boolean applyResult = false;try {MDC.put(""destination"", destination);applyResult = applySnapshotToDB(lastPosition, false);} catch (Throwable e) {}try {MDC.put(""destination"", destination);if (applyResult) {snapshotExpire((int) TimeUnit.HOURS.toSeconds(snapshotExpire));}} catch (Throwable e) {}},snapshotInterval,snapshotInterval,TimeUnit.HOURS);}}return true;}}"	2
5340	public class A {@Overridepublic Optional<ConfigTable> readConfig(Set<String> keys) {ConfigTable table = new ConfigTable();try {ConfigurationRequest.Builder builder =ConfigurationRequest.newBuilder().setClusterName(settings.getClusterName());if (uuid != null) {builder.setUuid(uuid);}ConfigurationResponse response = stub.call(builder.build());String responseUuid = response.getUuid();if (responseUuid != null && Objects.equals(uuid, responseUuid)) {return Optional.empty();}response.getConfigTableList().forEach(config -> {final String name = config.getName();if (keys.contains(name)) {table.add(new ConfigTable.ConfigItem(name, config.getValue()));}});this.uuid = responseUuid;} catch (Exception e) {}return Optional.of(table);}}	1
5341	"public class A {@Testpublic void testRangeOpsInDiffSubTree() throws Exception {String city = TestCities.rome.name();String query =""(""+ CityField.NUM.name()+ LTE_OP+ ""100""+ AND_OP+ CityField.CITY.name()+ EQ_OP+ ""'""+ city+ ""')""+ AND_OP+ CityField.NUM.name()+ GTE_OP+ ""100"";String expected =CityField.NUM.name()+ LTE_OP+ ""'+cE1'""+ JEXL_AND_OP+ CityField.CITY.name()+ EQ_OP+ ""'""+ city+ ""'""+ JEXL_AND_OP+ CityField.NUM.name()+ GTE_OP+ ""'+cE1'"";String plan = getPlan(query, true, true);assertPlanEquals(expected, plan);expected =CityField.NUM.name()+ LTE_OP+ ""'+cE1'""+ JEXL_AND_OP+ CityField.CITY.name()+ EQ_OP+ ""'""+ city+ ""'""+ JEXL_AND_OP+ CityField.NUM.name()+ GTE_OP+ ""'+cE1'"";plan = getPlan(query, true, false);assertPlanEquals(expected, plan);expected =CityField.NUM.name()+ LTE_OP+ ""'+cE1'""+ JEXL_AND_OP+ CityField.CITY.name()+ EQ_OP+ ""'""+ city+ ""'""+ JEXL_AND_OP+ CityField.NUM.name()+ GTE_OP+ ""'+cE1'"";plan = getPlan(query, false, true);assertPlanEquals(expected, plan);expected = query;runTest(query, expected);}}"	1

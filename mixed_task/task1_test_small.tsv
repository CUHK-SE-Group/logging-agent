	code	label
0	"public class A {public void init(CamelContext camelContext) {if (!camelContext.hasService(this)) {try {LOG.debug(""Initializing XRay tracer"");camelContext.addService(this, true, true);} catch (Exception e) {throw RuntimeCamelException.wrapRuntimeCamelException(e);}}}}"	No
1	"public class A {@Overrideprotected Iterator<SimpleFeature> openIterator() {try {return openIterator(getQueryConstraints());} catch (TransformException | FactoryException e) {LOGGER.warn(""Unable to transform geometry"", e);}return featureCursor;}}"	No
2	public class A {protected void handleRemoteDisconnect(final ProtonConnection con) {con.disconnect();publishConnectionClosedEvent(con);}}	Yes
3	"public class A {@Overridepublic Map<K, ICacheElement<K, V>> getMultiple(final Set<K> keys) {log.info(""get ["" + keys + ""]"");return getMultipleSetupMap.get(keys);}}"	No
4	"public class A {private static Function2<String, Resource> resourceFromLocation(ApplicationContext applicationContext, boolean throwErrorIfNotReadable) {return location -> {String resolvedLocation =applicationContext.getEnvironment().resolveRequiredPlaceholders(location);if (applicationContext.getResource(resolvedLocation).isReadable()) {LOGGER.debug(""Configuration {} detected and added"", location);return applicationContext.getResource(resolvedLocation);} else if (throwErrorIfNotReadable) {throw new IllegalStateException(String.format(""Configuration %s does not exist or is not readable"", location));} else {LOGGER.warn(""Configuration {} not readable; ignored"", location);return null;}};}}"	No
5	"public class A {protected void processInput(CharBuffer oldCharBuffer, Writer writer) throws Exception {int length =KMPSearch.search(oldCharBuffer,_MARKER_INPUT_OPEN.length + 1,_MARKER_INPUT_CLOSE,_MARKER_INPUT_CLOSE_NEXTS);if (length == -1) {if (_log.isWarnEnabled()) {_log.warn(""Missing />"");}outputOpenTag(oldCharBuffer, writer, _MARKER_INPUT_OPEN);return;}length += _MARKER_INPUT_CLOSE.length();String content = extractContent(oldCharBuffer, length);writer.write(content);skipWhiteSpace(oldCharBuffer, writer, true);}}"	No
6	public class A {public void testForMemoryLeaks() throws Exception {final long differenceMemoryCache = thrashCache();assertTrue(differenceMemoryCache < 500000);}}	Yes
7	"public class A {@SuppressWarnings(""unchecked"")private Map<String, String> login(String authKey, String endpoint) {String[] credentials = authKey.split("":"");if (credentials.length != 2) {return Collections.emptyMap();}PostMethod post = new PostMethod(endpoint);post.addRequestHeader(""Origin"", ""http://localhost"");post.addParameter(new NameValuePair(""userName"", credentials[0]));post.addParameter(new NameValuePair(""password"", credentials[1]));try {int code = client.executeMethod(post);if (code == HttpStatus.SC_OK) {String content = post.getResponseBodyAsString();Map<String, Object> resp =gson.fromJson(content, new TypeToken<Map<String, Object>>() {}.getType());LOG.info(""Received from Zeppelin LoginRestApi : "" + content);return (Map<String, String>) resp.get(""body"");} else {LOG.error(""Failed Zeppelin login {}, status code {}"", endpoint, code);return Collections.emptyMap();}} catch (IOException e) {return Collections.emptyMap();}}}"	Yes
8	"public class A {@Test(timeout = 60000)public void testPresettledReceiverReadsAllMessages() throws Exception {final int MSG_COUNT = 100;sendMessages(getQueueName(), MSG_COUNT);AmqpClient client = createAmqpClient();AmqpConnection connection = addConnection(client.connect());AmqpSession session = connection.createSession();AmqpReceiver receiver = session.createReceiver(getQueueName(), null, false, true);final Queue queueView = getProxyToQueue(getQueueName());assertEquals(MSG_COUNT, queueView.getMessageCount());receiver.flow(MSG_COUNT);for (int i = 0; i < MSG_COUNT; ++i) {assertNotNull(receiver.receive(5, TimeUnit.SECONDS));}receiver.close();instanceLog.debug(""Message Count after all consumed: "" + queueView.getMessageCount());receiver = session.createReceiver(getQueueName());receiver.flow(1);AmqpMessage received = receiver.receive(5, TimeUnit.SECONDS);if (received != null) {}assertNull(received);assertEquals(0, queueView.getMessageCount());connection.close();}}"	Yes
9	"public class A {protected URL findResource(final String name, final ModuleClassLoader requestor, Set<String> seenModules) {if (log.isTraceEnabled() && name != null && name.contains(""starter"")) {if (seenModules != null) {}for (URL url : getURLs()) {}}if ((seenModules != null) && seenModules.contains(getModule().getModuleId())) {return null;}URL result = super.findResource(name);if (result != null) {if (isResourceVisible(name, result, requestor)) {return result;}return null;}if (seenModules == null) {seenModules = new HashSet<String>();}seenModules.add(getModule().getModuleId());if (requiredModules != null) {for (Module publicImport : requiredModules) {if (seenModules.contains(publicImport.getModuleId())) continue;ModuleClassLoader mcl = ModuleFactory.getModuleClassLoader(publicImport);if (mcl != null) {result = mcl.findResource(name, requestor, seenModules);}if (result != null) {return result;}}}for (Module publicImport : awareOfModules) {if (seenModules.contains(publicImport.getModuleId())) {continue;}ModuleClassLoader mcl = ModuleFactory.getModuleClassLoader(publicImport);if (mcl != null) {result = mcl.findResource(name, requestor, seenModules);}if (result != null) {return result;}}return result;}}"	Yes
10	"public class A {@Overridepublic Boolean apply(Object param) {counter++;if (counter == 2) return success;jobCtx.holdcc(4000);try {jobCtx.holdcc();} catch (IllegalStateException ignored) {success = true;log.info(""Second holdcc() threw IllegalStateException as expected."");} finally {new Timer().schedule(new TimerTask() {@Overridepublic void run() {jobCtx.callcc();}},1000);}return false;}}"	No
11	"public class A {public static void cleanup(Log log, java.io.Closeable... closeables) {for (java.io.Closeable c : closeables) {if (c != null) {try {c.close();} catch (IOException e) {if (log != null && log.isDebugEnabled()) {log.debug(""Exception in closing "" + c, e);}}}}}}"	No
12	"public class A {public static void updateFileEntryType(HttpPrincipal httpPrincipal,long fileEntryTypeId,java.util.Map<java.util.Locale, String> nameMap,java.util.Map<java.util.Locale, String> descriptionMap,long[] ddmStructureIds,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DLFileEntryTypeServiceUtil.class,""updateFileEntryType"",_updateFileEntryTypeParameterTypes16);MethodHandler methodHandler =new MethodHandler(methodKey, fileEntryTypeId, nameMap, descriptionMap, ddmStructureIds, serviceContext);try {TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
13	"public class A {public void analyseAnnotationConstant(List<ModifierContext> modifierList,TypeTypeContext typeType,VariableDeclaratorsContext variableDeclarators) {try {this.isLocalVariable = false;this.visibility = VisibilitySet.PUBLIC.toString();this.isFinal = true;this.hasClassScope = true;dispatchAnnotationsOfMember(modifierList, belongsToClass);this.declareType = determineTypeOfTypeType(typeType, belongsToClass);determine_name(variableDeclarators);} catch (Exception e) {logger.warn("" Exception while processing: ""+ belongsToClass+ "" Line: ""+ typeType.start.getLine()+ "" ""+ e.getMessage());}}}"	No
14	"public class A {private void infolog(String msg) {logger.info(msg);processingLog += msg + "".\n"";}}"	No
15	public class A {public RestTemplate getRestTemplate(String requesterWebID) {RestTemplate restTemplate;try {restTemplate = getRestTemplateForReadingLinkedData(requesterWebID);} catch (Exception e) {throw new RuntimeException(e);}return restTemplate;}}	Yes
16	"public class A {public void load() {mimeTypesMap = new HashMap<>();try {JsonNode jsonNode =MAPPER.readTree(IOUtils.toString(getClass().getResourceAsStream(""/MIMETypes.json"")));for (JsonNode node : jsonNode) {JsonNode type = node.path(""name"");JsonNode ext = node.path(""extension"");if (!type.isMissingNode()) {mimeTypesMap.put(type.asText(), ext.isMissingNode() ? """" : ext.asText());}}mimeTypesMap = Collections.unmodifiableMap(mimeTypesMap);mimeTypes = new ArrayList<>(mimeTypesMap.keySet());Collections.sort(mimeTypes);mimeTypes = Collections.unmodifiableList(mimeTypes);} catch (Exception e) {LOG.error(""Error reading file MIMETypes from resources"", e);}}}"	Yes
17	public class A {private boolean finalizeParentTemplate(DatadiskTO dataDiskTemplate,VMTemplateVO templateVO,TemplateInfo parentTemplate,DataStore imageStore,int diskCount)throws ExecutionException, InterruptedException, CloudRuntimeException {TemplateInfo templateInfo = imageFactory.getTemplate(templateVO.getId(), imageStore);AsyncCallFuture<TemplateApiResult> templateFuture =createDatadiskTemplateAsync(parentTemplate,templateInfo,dataDiskTemplate.getPath(),dataDiskTemplate.getDiskId(),dataDiskTemplate.getFileSize(),dataDiskTemplate.isBootable());TemplateApiResult result = null;result = templateFuture.get();if (!result.isSuccess()) {cleanupDatadiskTemplates(templateInfo);}return result.isSuccess();}}	Yes
18	"public class A {public static com.liferay.fragment.model.FragmentComposition deleteFragmentComposition(HttpPrincipal httpPrincipal, long fragmentCompositionId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(FragmentCompositionServiceUtil.class,""deleteFragmentComposition"",_deleteFragmentCompositionParameterTypes1);MethodHandler methodHandler = new MethodHandler(methodKey, fragmentCompositionId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.fragment.model.FragmentComposition) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
19	"public class A {public int runAll() {int retVal = EXIT_SUCCESS;for (WorkflowConfiguration config : m_workflows) {LOGGER.info(""===== Executing workflow "" + config.inputWorkflow + "" ====="");int rv = runOne(config);if (rv != EXIT_SUCCESS) {retVal = rv;if (m_stopOnError) {break;}} else {}}return retVal;}}"	Yes
20	public class A {private CloseableIteration<? extends BindingSet, QueryEvaluationException> evaluateInternal(TupleExpr tupleExpr, Dataset dataset, BindingSet bindings, boolean includeInferred)throws SailException {tupleExpr = tupleExpr.clone();if (!(tupleExpr instanceof QueryRoot)) {tupleExpr = new QueryRoot(tupleExpr);}new BindingAssigner().optimize(tupleExpr, dataset, bindings);List<SearchQueryEvaluator> queries = new ArrayList<>();for (SearchQueryInterpreter interpreter : sail.getSearchQueryInterpreters()) {interpreter.process(tupleExpr, bindings, queries);}if (!queries.isEmpty()) {evaluateLuceneQueries(queries);}if (sail.getEvaluationMode() == TupleFunctionEvaluationMode.TRIPLE_SOURCE) {ValueFactory vf = sail.getValueFactory();EvaluationStrategy strategy =new TupleFunctionEvaluationStrategy(new SailTripleSource(this, includeInferred, vf),dataset,sail.getFederatedServiceResolver(),sail.getTupleFunctionRegistry());new BindingAssigner().optimize(tupleExpr, dataset, bindings);new ConstantOptimizer(strategy).optimize(tupleExpr, dataset, bindings);new CompareOptimizer().optimize(tupleExpr, dataset, bindings);new ConjunctiveConstraintSplitter().optimize(tupleExpr, dataset, bindings);new DisjunctiveConstraintOptimizer().optimize(tupleExpr, dataset, bindings);new SameTermFilterOptimizer().optimize(tupleExpr, dataset, bindings);new QueryModelNormalizer().optimize(tupleExpr, dataset, bindings);new QueryJoinOptimizer(new TupleFunctionEvaluationStatistics()).optimize(tupleExpr, dataset, bindings);new IterativeEvaluationOptimizer().optimize(tupleExpr, dataset, bindings);new FilterOptimizer().optimize(tupleExpr, dataset, bindings);new OrderLimitOptimizer().optimize(tupleExpr, dataset, bindings);try {return strategy.evaluate(tupleExpr, bindings);} catch (QueryEvaluationException e) {throw new SailException(e);}} else {return super.evaluate(tupleExpr, dataset, bindings, includeInferred);}}}	Yes
21	"public class A {private void complete(Session session) {assert head == tail;log.trace(""#{} queue {} completed"", session.uniqueId(), var);reset(session);if (onCompletion != null) {onCompletion.run(session);}}}"	No
22	public class A {@Overridepublic void process(final FilterChain chain, final Request request, final Response response) {long tm = System.currentTimeMillis();try {Session s = sessionManager.open();chain.process(request, response);} finally {sessionManager.close();}tm = System.currentTimeMillis() - tm;}}	Yes
23	public class A {@Overridepublic void doStopSelfTest(final OslpEnvelope oslpRequest,final DeviceRequest deviceRequest,final DeviceResponseHandler deviceResponseHandler,final String ipAddress)throws IOException {this.saveOslpRequestLogEntry(deviceRequest, oslpRequest);final OslpResponseHandler oslpResponseHandler =new OslpResponseHandler() {@Overridepublic void handleResponse(final OslpEnvelope response) {OslpDeviceService.this.handleOslpResponseStopSelfTest(deviceRequest, response, deviceResponseHandler);}@Overridepublic void handleException(final Throwable t) {OslpDeviceService.this.handleException(t, deviceRequest, deviceResponseHandler);}};this.sendMessage(ipAddress, oslpRequest, oslpResponseHandler, deviceRequest);}}	Yes
24	public class A {public static void generateUDTAtRuntime(final Session session, AbstractUDTClassProperty<?> udtClassProperty) {if (LOGGER.isDebugEnabled()) {}udtClassProperty.componentsProperty.stream().flatMap(x -> x.getUDTClassProperties().stream()).forEach(x -> generateUDTAtRuntime(session, x));final String udtKeyspace =udtClassProperty.staticKeyspace.orElseGet(session::getLoggedKeyspace);final SchemaContext schemaContext = new SchemaContext(udtKeyspace, true, true);final String udtSchema = udtClassProperty.generateSchema(schemaContext);if (ACHILLES_DML_LOGGER.isDebugEnabled()) {}final ResultSet resultSet = session.execute(udtSchema);resultSet.getExecutionInfo().isSchemaInAgreement();}}	Yes
25	"public class A {@Overridepublic FragmentEntryLink findByUUID_G(String uuid, long groupId) throws NoSuchEntryLinkException {FragmentEntryLink fragmentEntryLink = fetchByUUID_G(uuid, groupId);if (fragmentEntryLink == null) {StringBundler sb = new StringBundler(6);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""uuid="");sb.append(uuid);sb.append("", groupId="");sb.append(groupId);sb.append(""}"");if (_log.isDebugEnabled()) {_log.debug(sb.toString());}throw new NoSuchEntryLinkException(sb.toString());}return fragmentEntryLink;}}"	No
26	"public class A {private MessageCheckpoint loadMessageCheckpoint() {final Snapshot<MessageCheckpoint> snapshot = messageCheckpointStore.latestSnapshot();if (snapshot == null) {LOG.info(""no message log replay snapshot, return empty state."");return new MessageCheckpoint(-1, new HashMap<>());} else {return snapshot.getData();}}}"	No
27	public class A {@Overridepublic ProjectVersion getVersion() {String historyVersion = getHistoryVersion();if (historyVersion == null) {if (designFolderName != null) {try {return createProjectVersion(designRepository.check(designFolderName));} catch (IOException e) {log.error(e.getMessage(), e);}}return null;}return super.getVersion();}}	No
28	"public class A {private void writeMessageLength(SSL2ServerHelloMessage message) {if (message.getPaddingLength().getValue() != 0) {throw new UnsupportedOperationException(""Long record headers are not supported"");}appendInt(message.getMessageLength().getValue(), SSL2ByteLength.LENGTH);LOGGER.debug(""MessageLength: "" + message.getMessageLength().getValue());}}"	No
29	"public class A {public void runRepeatedly(int numIterations) {RebalanceStrategy strategy =new AutoRebalanceStrategy(RESOURCE_NAME, _partitions, _states, _maxPerNode);ZNRecord initialResult =strategy.computePartitionAssignment(_allNodes, _liveNodes, _currentMapping, null);_currentMapping = getMapping(initialResult.getListFields());getRunResult(_currentMapping, initialResult.getListFields());for (int i = 0; i < numIterations; i++) {logger.info(""~~~~ Iteration "" + i + "" ~~~~~"");ZNRecord znRecord = runOnceRandomly();if (znRecord != null) {final Map<String, List<String>> listResult = znRecord.getListFields();final Map<String, Map<String, String>> mapResult = getMapping(listResult);getRunResult(mapResult, listResult);_currentMapping = mapResult;}}}}"	Yes
30	public class A {public List<Asset> findAll(Long repositoryId, String path, Boolean deleted, Boolean virtual, Long branchId) {Specification<Asset> assetSpecifications =distinct(ifParamNotNull(repositoryIdEquals(repositoryId))).and(ifParamNotNull(pathEquals(path))).and(ifParamNotNull(deletedEquals(deleted))).and(ifParamNotNull(virtualEquals(virtual))).and(ifParamNotNull(branchId(branchId, deleted)));List<Asset> all = assetRepository.findAll(assetSpecifications);return all;}}	Yes
31	"public class A {@WebMethod@POST@Path(""/hash"")public ServiceResult getRoomHash(@WebParam(name = ""sid"") @QueryParam(""sid"") String sid,@WebParam(name = ""user"") @FormParam(""user"") ExternalUserDTO user,@WebParam(name = ""options"") @FormParam(""options"") RoomOptionsDTO options)throws ServiceException {return performCall(sid,User.Right.SOAP,sd -> {if (Strings.isEmpty(user.getExternalId()) || Strings.isEmpty(user.getExternalType())) {return new ServiceResult(""externalId and/or externalType are not set"", Type.ERROR);}RemoteSessionObject remoteSessionObject = new RemoteSessionObject(user);log.debug(remoteSessionObject.toString());String xmlString = remoteSessionObject.toString();String hash = soapDao.addSOAPLogin(sid, options);if (hash != null) {if (options.isAllowSameURLMultipleTimes()) {sd.setPermanent(true);}sd.setXml(xmlString);sd = sessionDao.update(sd);return new ServiceResult(hash, Type.SUCCESS);}return UNKNOWN;});}}"	Yes
32	"public class A {private void acquireLockAndWait() {if (context.getLock() == null) {Map<String, Pair<String, String>> exclusiveLocks = getExclusiveLocks();if (exclusiveLocks != null) {EngineLock lock = new EngineLock(exclusiveLocks, null);log.info(""Before acquiring and wait lock '{}'"", lock);lockManager.acquireLockWait(lock);context.withLock(lock);log.info(""Lock-wait acquired to object '{}'"", lock);}}}}"	No
33	public class A {@Overridepublic RequestResponse updateManagementContract(VitamContext vitamContext, String id, JsonNode queryDsl)throws AccessExternalClientException {VitamRequestBuilder request =put().withPath(UPDATE_MANAGEMENT_CONTRACT + id).withHeaders(vitamContext.getHeaders()).withBody(queryDsl).withJson();try (Response response = make(request)) {check(response);return RequestResponse.parseFromResponse(response);} catch (VitamClientInternalException e) {throw new AccessExternalClientException(e);} catch (AdminExternalClientException e) {return e.getVitamError();}}}	Yes
34	public class A {public void run() {try {for (LatencyAwareHClientPool pool : allPools) {pool.clear();}} catch (Exception e) {}}}	Yes
35	"public class A {private void writeExtensions(CertificatePair pair) {appendBytes(pair.getExtensions().getValue());LOGGER.debug(""Extensions: "" + ArrayConverter.bytesToHexString(pair.getExtensions().getValue()));}}"	No
36	"public class A {public void deactivateVfModule(BuildingBlockExecution execution) {try {GeneralBuildingBlock gBBInput = execution.getGeneralBuildingBlock();RequestContext requestContext = gBBInput.getRequestContext();ServiceInstance serviceInstance =extractPojosForBB.extractByKey(execution, ResourceKey.SERVICE_INSTANCE_ID);GenericVnf vnf = extractPojosForBB.extractByKey(execution, ResourceKey.GENERIC_VNF_ID);VfModule vfModule = extractPojosForBB.extractByKey(execution, ResourceKey.VF_MODULE_ID);Customer customer = gBBInput.getCustomer();CloudRegion cloudRegion = gBBInput.getCloudRegion();SDNCRequest sdncRequest = new SDNCRequest();GenericResourceApiVfModuleOperationInformation req =sdncVfModuleResources.deactivateVfModule(vfModule,vnf,serviceInstance,customer,cloudRegion,requestContext,buildCallbackURI(sdncRequest));sdncRequest.setSDNCPayload(req);sdncRequest.setTopology(SDNCTopology.VFMODULE);execution.setVariable(SDNC_REQUEST, sdncRequest);} catch (Exception ex) {logger.error(""Exception occurred in SDNCDeactivateTasks deactivateVfModule"", ex);exceptionUtil.buildAndThrowWorkflowException(execution, 7000, ex);}}}"	No
37	"public class A {void reorderPolicyEvaluators() {if (LOG.isDebugEnabled()) {LOG.debug(""==> reorderEvaluators()"");}if (policyResourceTrie == null) {policyEvaluators = getReorderedPolicyEvaluators(policyEvaluators);}if (dataMaskResourceTrie == null) {dataMaskPolicyEvaluators = getReorderedPolicyEvaluators(dataMaskPolicyEvaluators);}if (rowFilterResourceTrie == null) {rowFilterPolicyEvaluators = getReorderedPolicyEvaluators(rowFilterPolicyEvaluators);}if (LOG.isDebugEnabled()) {LOG.debug(""<== reorderEvaluators()"");}}}"	No
38	"public class A {public static <K, V> ICacheElement<K, V> getDeSerializedCacheElement(final ICacheElementSerialized<K, V> serialized, final IElementSerializer elementSerializer)throws IOException, ClassNotFoundException {if (serialized == null) {return null;}V deSerializedValue = null;if (elementSerializer == null) {throw new IOException(""Could not de-serialize object. The ElementSerializer is null."");}try {deSerializedValue = elementSerializer.deSerialize(serialized.getSerializedValue(), null);} catch (final ClassNotFoundException | IOException e) {log.error(""Problem de-serializing object."", e);throw e;}final ICacheElement<K, V> deSerialized =new CacheElement<>(serialized.getCacheName(), serialized.getKey(), deSerializedValue);deSerialized.setElementAttributes(serialized.getElementAttributes());return deSerialized;}}"	No
39	public class A {@Overridepublic void entryModified(ModifyOperationContext modifyContext) {List<Modification> mods = modifyContext.getModItems();synchronized (this) {for (Modification m : mods) {try {Attribute at = m.getAttribute();if (at.isInstanceOf(replLogMaxIdleAT)) {ReplicaEventLog log = getEventLog(modifyContext);if (log != null) {int maxIdlePeriod = Integer.parseInt(m.getAttribute().getString());log.setMaxIdlePeriod(maxIdlePeriod);}} else if (at.isInstanceOf(replLogPurgeThresholdCountAT)) {ReplicaEventLog log = getEventLog(modifyContext);if (log != null) {int purgeThreshold = Integer.parseInt(m.getAttribute().getString());log.setPurgeThresholdCount(purgeThreshold);}}} catch (LdapInvalidAttributeValueException e) {}}}}}	Yes
40	public class A {public void close() {running.set(false);receiver.interrupt();connection.close();}}	Yes
41	public class A {@Testpublic void testDb2TableCreation() {FhirSchemaGenerator gen = new FhirSchemaGenerator(ADMIN_SCHEMA_NAME, SCHEMA_NAME, false);PhysicalDataModel model = new PhysicalDataModel();gen.buildSchema(model);PrintTarget tgt = new PrintTarget(null, logger.isLoggable(Level.FINE));Db2Adapter adapter = new Db2Adapter(tgt);model.apply(adapter);}}	Yes
42	public class A {@Overridepublic void startApplication(String applicationName) {logger.debug(Messages.STARTING_APPLICATION_0, applicationName);delegate.startApplication(applicationName);}}	No
43	"public class A {@Path(""/getAllShouldSucceed"")@POSTpublic void getAllShouldSucceed() {LOG.debug(""Calling OpenstackNeutronNetworkResource.getAllShouldSucceed()"");String uri = String.format(URI_FORMAT, OpenstackConstants.GET_ALL);Network[] networks = template.requestBody(uri, null, Network[].class);assertNotNull(networks);assertEquals(1, networks.length);assertEquals(NETWORK_NAME, networks[0].getName());assertNotNull(networks[0].getSubnets());assertEquals(1, networks[0].getSubnets().size());assertEquals(""0c4faf33-8c23-4dc9-8bf5-30dd1ab452f9"", networks[0].getSubnets().get(0));assertEquals(""73f6f1ac-5e58-4801-88c3-7e12c6ddfb39"", networks[0].getId());assertEquals(NetworkType.VXLAN, networks[0].getNetworkType());}}"	No
44	"public class A {@SuppressFBWarnings(""DM_EXIT"")public static void main(String[] args) {final SplashScreen splash = SplashScreen.getSplashScreen();if (splash != null) {splash.createGraphics();splash.update();}int code;long lastLaunch = 0L;do {code = new Launch().run();if (System.currentTimeMillis() - lastLaunch < RELAUNCH_EXCLUSION_WINDOW_MILLIS) {break;} else if (code == 2) {} else {if (code != 0) {logErrorFile();}if (code != 0 && ourRestart) {LOGGER.info(""Unexpected exit. Restarting..."");} else {break;}}lastLaunch = System.currentTimeMillis();} while (true);System.exit(code);}}"	Yes
45	public class A {@Overridepublic JainMgcpResponseEvent decodeResponse(byte[] data, SplitDetails[] msg, Integer txID, ReturnCode returnCode) throws ParseException {response = new NotificationRequestResponse(source != null ? source : stack, returnCode);response.setTransactionHandle(txID);try {(new ResponseContentHandle()).parse(data, msg);} catch (IOException e) {}return response;}}	Yes
46	"public class A {public void kinit(String user) throws Exception {UserGroupInformation.loginUserFromKeytab(user, KEYTAB_LOCATION + ""/"" + user + "".keytab"");}}"	Yes
47	"public class A {@Overridepublic void onError(SubscriptionException error) {logger.info(name.getMethodName() + "" - callback - error"");subscribeBroadcastWithSingleStructParameterCallbackResult = false;subscribeBroadcastWithSingleStructParameterCallbackDone = true;}}"	No
48	"public class A {private void changeTrackPosition(long positionOffsetInMs) throws SpeakerException {long currentPosition = speaker.getPlayState().getPositionInMs();logger.debug(""Jumping from old track position {} ms to new position {} ms"",currentPosition,currentPosition + positionOffsetInMs);speaker.setPosition(currentPosition + positionOffsetInMs);}}"	No
49	"public class A {private void createUnusedTextFieldMaster(HashSet<String> usedFunctions) {UnoDictionary<XComponent> masters =UnoDictionary.create(UNO.XTextFieldsSupplier(model.doc).getTextFieldMasters(), XComponent.class);String prefix = ""com.sun.star.text.FieldMaster.User."";for (Entry<String, XComponent> master : masters.entrySet()) {if (master == null || !master.getKey().startsWith(prefix)) {continue;}String varName = master.getKey().substring(prefix.length());String trafoName = TextDocumentModel.getFunctionNameForUserFieldName(varName);if (trafoName != null && !usedFunctions.contains(trafoName)) {try {master.getValue().dispose();} catch (java.lang.Exception e) {}}}}}"	Yes
50	public class A {private RegistryConfig readRegConfig(String parentAppName, String artifactName) {RegistryConfig regConfig = null;try {CarbonAppPersistenceManager capm = new CarbonAppPersistenceManager(getAxisConfig());regConfig =capm.loadRegistryConfig(AppDeployerConstants.APPLICATIONS+ parentAppName+ AppDeployerConstants.APP_DEPENDENCIES+ artifactName);} catch (Exception e) {}return regConfig;}}	Yes
51	"public class A {protected CheckSshAnswer execute(CheckSshCommand cmd) {String vmName = cmd.getName();String privateIp = cmd.getIp();int cmdPort = cmd.getPort();if (s_logger.isDebugEnabled()) {s_logger.debug(""Ping command port, "" + privateIp + "":"" + cmdPort);}try {String result = connect(cmd.getName(), privateIp, cmdPort);if (result != null) {s_logger.error(""Can not ping System vm "" + vmName + ""due to:"" + result);return new CheckSshAnswer(cmd, ""Can not ping System vm "" + vmName + ""due to:"" + result);}} catch (Exception e) {s_logger.error(""Can not ping System vm "" + vmName + ""due to exception"");return new CheckSshAnswer(cmd, e);}if (s_logger.isDebugEnabled()) {s_logger.debug(""Ping command port succeeded for vm "" + vmName);}if (VirtualMachineName.isValidRouterName(vmName)) {if (s_logger.isDebugEnabled()) {s_logger.debug(""Execute network usage setup command on "" + vmName);}networkUsage(privateIp, ""create"", null);}return new CheckSshAnswer(cmd);}}"	No
52	"public class A {@Overridepublic void actionPerformed(ActionEvent event) {Object o = event.getSource();OpenCVFilterSURF sf = (OpenCVFilterSURF) boundFilter.filter;if (o == objectFilename) {String val = ((JTextField) o).getText();sf.loadObjectImageFilename(val);} else {log.warn(""Inknown object invoked in surf filter ui"");}}}"	No
53	public class A {public void close() {try {data.close();} catch (Exception e) {}try {writeTask.cancel(true);} catch (Exception e) {}}}	Yes
54	"public class A {@Overridepublic void run() {try {resetSnapshotStats();lastFlushTime = Time.currentElapsedTime();while (true) {ServerMetrics.getMetrics().SYNC_PROCESSOR_QUEUE_SIZE.add(queuedRequests.size());long pollTime = Math.min(zks.getMaxWriteQueuePollTime(), getRemainingDelay());Request si = queuedRequests.poll(pollTime, TimeUnit.MILLISECONDS);if (si == null) {flush();si = queuedRequests.take();}if (si == REQUEST_OF_DEATH) {break;}long startProcessTime = Time.currentElapsedTime();ServerMetrics.getMetrics().SYNC_PROCESSOR_QUEUE_TIME.add(startProcessTime - si.syncQueueStartTime);if (!si.isThrottled() && zks.getZKDatabase().append(si)) {if (shouldSnapshot()) {resetSnapshotStats();zks.getZKDatabase().rollLog();if (!snapThreadMutex.tryAcquire()) {} else {new ZooKeeperThread(""Snapshot Thread"") {public void run() {try {zks.takeSnapshot();} catch (Exception e) {} finally {snapThreadMutex.release();}}}.start();}}} else if (toFlush.isEmpty()) {if (nextProcessor != null) {nextProcessor.processRequest(si);if (nextProcessor instanceof Flushable) {((Flushable) nextProcessor).flush();}}continue;}toFlush.add(si);if (shouldFlush()) {flush();}ServerMetrics.getMetrics().SYNC_PROCESS_TIME.add(Time.currentElapsedTime() - startProcessTime);}} catch (Throwable t) {handleException(this.getName(), t);}}}"	Yes
55	public class A {public void action(AuthenticatorContainer authenticatorContainer) throws DecoderException {TLV tlv = authenticatorContainer.getCurrentTLV();if (tlv.getLength() == 0) {LOG.error(I18n.err(I18n.ERR_01308_ZERO_LENGTH_TLV));throw new DecoderException(I18n.err(I18n.ERR_01309_EMPTY_TLV));}Authenticator authenticator = new Authenticator();authenticatorContainer.setAuthenticator(authenticator);if (IS_DEBUG) {}}}	Yes
56	"public class A {@Overridepublic void execute() throws IOException, HomematicClientException {VirtualDatapointHandler virtualDatapointHandler =ignoreVirtualDatapoints ? null : getVirtualDatapointHandler(dp, newValue);if (virtualDatapointHandler != null) {logger.debug(""Handling virtual datapoint '{}' on gateway with id '{}'"", dp.getName(), id);virtualDatapointHandler.handleCommand(gateway, dp, dpConfig, newValue);} else if (dp.isScript()) {if (MiscUtils.isTrueValue(newValue)) {executeScript(dp);}} else if (dp.isVariable()) {setVariable(dp, newValue);} else {getRpcClient(dp.getChannel().getDevice().getHmInterface()).setDatapointValue(dp, newValue, rxMode);}dp.setValue(newValue);if (MiscUtils.isTrueValue(newValue)&& (dp.isPressDatapoint() || dp.isScript() || dp.isActionType())) {disableDatapoint(dp, DEFAULT_DISABLE_DELAY);}}}"	Yes
57	"public class A {@Testpublic void testOKPKOnFact() throws Exception {context.checking(new Expectations() {{one(conn).getMetaData();will(returnValue(meta));allowing(meta).getPrimaryKeys(null, null, ""sales_fact_1997"");will(returnValue(rsSalesFact1997PrimaryKeys));one(rsSalesFact1997PrimaryKeys).next();will(returnValue(false));allowing(meta).getPrimaryKeys(with(any(String.class)), with(any(String.class)), with(any(String.class)));}});List<ValidationMessage> messages = bean.validateCube(schema, getCubeByName(""Sales""), conn);assertTrue(isMessagePresent(messages, ERROR, ""sales_fact_1997"", ""primary key""));if (logger.isDebugEnabled()) {}}}"	Yes
58	"public class A {@Overridepublic boolean execute(Context context) throws Exception {boolean result = ERROR;Monitor monitor = MonitorFactory.start(COMMAND);ActionReporter reporter = ActionReporter.Factory.getInstance();try {SharedData shared = (SharedData) context.get(SHARED_DATA);if (shared == null) {return ERROR;}saveData(context);reporter.addObjectReport(context,""merged"",OBJECT_TYPE.CONNECTION_LINK,""connection links"",OBJECT_STATE.OK,IO_TYPE.OUTPUT);reporter.addObjectReport(context,""merged"",OBJECT_TYPE.ACCESS_POINT,""access points"",OBJECT_STATE.OK,IO_TYPE.OUTPUT);reporter.addObjectReport(context, ""merged"", OBJECT_TYPE.STOP_AREA, ""stop areas"", OBJECT_STATE.OK, IO_TYPE.OUTPUT);reporter.setStatToObjectReport(context,""merged"",OBJECT_TYPE.CONNECTION_LINK,OBJECT_TYPE.CONNECTION_LINK,shared.connectionLinks.getItems().size());reporter.setStatToObjectReport(context,""merged"",OBJECT_TYPE.ACCESS_POINT,OBJECT_TYPE.ACCESS_POINT,shared.accessPoints.getItems().size());reporter.setStatToObjectReport(context,""merged"",OBJECT_TYPE.STOP_AREA,OBJECT_TYPE.STOP_AREA,shared.physicalStops.getItems().size()+ shared.commercialStops.getItems().size()+ shared.getStopPlaces().getItems().size());result = SUCCESS;} catch (Exception e) {} finally {}return result;}}"	Yes
59	public class A {public List<HintApplication> getHints() {List<HintApplication> hints = new ArrayList<>();if (mn.visibleAnnotations != null) {for (AnnotationNode an : mn.visibleAnnotations) {Type annotationType = typeSystem.Lresolve(an.desc, true);if (annotationType == null) {} else {Stack<Type> s = new Stack<>();annotationType.collectHints(an, hints, new HashSet<>(), s);}}}return hints.size() == 0 ? Collections.emptyList() : hints;}}	Yes
60	"public class A {public static void main(String[] args) {SpringApplication.run(SpringLoggerApplication.class, args);logger.info(""Starting my application with {} arguments."", args.length);}}"	Yes
61	"public class A {@Overridepublic int ignite(String host,int port,SslStores sslStores,int maxThreads,int minThreads,int threadIdleTimeoutMillis)throws ContainerInitializationException {Timer.start(""SPARK_EMBEDDED_IGNITE"");log.info(""Starting Spark server, ignoring port and host"");if (sparkFilter == null) {sparkFilter =new MatcherFilter(applicationRoutes,staticFilesConfiguration,exceptionMapper,true,hasMultipleHandler);}sparkFilter.init(null);Timer.stop(""SPARK_EMBEDDED_IGNITE"");return port;}}"	No
62	public class A {public static com.liferay.commerce.price.list.model.CommercePriceListSoapfetchCatalogBaseCommercePriceListByType(long groupId, String type) throws RemoteException {try {com.liferay.commerce.price.list.model.CommercePriceList returnValue =CommercePriceListServiceUtil.fetchCatalogBaseCommercePriceListByType(groupId, type);return com.liferay.commerce.price.list.model.CommercePriceListSoap.toSoapModel(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
63	"public class A {@Overridepublic Object visit(Before filter, Object data) {LOGGER.trace(""ENTERING: Before filter"");buildTemporalSearch(filter,data,literal -> {final Date date = extractDate(literal);if (date != null) {Date start = new Date(0L);return new DateRange(start, date);} else {LOGGER.debug(""Unable to extract date from Before filter {}. Ignoring filter."", literal);return null;}});return super.visit(filter, data);}}"	Yes
64	"public class A {@Overrideprotected void setup() throws IOException {configuration = HBaseConfiguration.create();String connectionClass = System.getProperty(""google.bigtable.connection.impl"");if (connectionClass != null) {configuration.set(""hbase.client.connection.impl"", connectionClass);}String asyncConnectionClass = System.getProperty(""google.bigtable.async.connection.impl"");if (asyncConnectionClass != null) {configuration.set(""hbase.client.async.connection.impl"", asyncConnectionClass);}String registryClass = System.getProperty(""google.bigtable.registry.impl"");if (registryClass != null) {configuration.set(""hbase.client.registry.impl"", registryClass);}for (Entry<Object, Object> entry : System.getProperties().entrySet()) {if (KEYS.contains(entry.getKey())) {configuration.set(entry.getKey().toString(), entry.getValue().toString());}}configuration.setIfUnset(""google.bigtable.snapshot.default.ttl.secs"",String.valueOf(TimeUnit.HOURS.toSeconds(6) + 1));ListeningExecutorService executor = MoreExecutors.listeningDecorator(getExecutor());try (Connection connection = ConnectionFactory.createConnection(configuration);Admin admin = connection.getAdmin()) {List<ListenableFuture<?>> futures = new ArrayList<>();String stalePrefix =SharedTestEnvRule.newTimePrefix(TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())- TimeUnit.HOURS.toSeconds(6));for (final TableName tableName :admin.listTableNames(Pattern.compile(SharedTestEnvRule.PREFIX + "".*""))) {if (tableName.getNameAsString().compareTo(stalePrefix) > 0) {continue;}futures.add(executor.submit(new Runnable() {@Overridepublic void run() {try {admin.deleteTable(tableName);} catch (IOException e) {e.printStackTrace();}}}));}Futures.allAsList(futures).get(2, TimeUnit.MINUTES);} catch (InterruptedException e) {Thread.currentThread().interrupt();throw new IOException(""Interrupted while deleting tables"", e);} catch (ExecutionException | TimeoutException e) {throw new IOException(""Exception while deleting tables"", e);}}}"	Yes
65	"public class A {private Document getXMLStatusFile(Board board) {DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();DocumentBuilder dBuilder = null;try {dBuilder = dbFactory.newDocumentBuilder();} catch (ParserConfigurationException ex) {}Document doc = null;String statusFileURL = null;try {statusFileURL =""http://""+ board.getIpAddress()+ "":""+ Integer.toString(board.getPort())+ ""/""+ GET_SENSORS_URL;doc = dBuilder.parse(new URL(statusFileURL).openStream());doc.getDocumentElement().normalize();} catch (ConnectException connEx) {disconnect();this.stop();this.setDescription(""Connection timed out, no reply from the board at "" + statusFileURL);} catch (SAXException ex) {disconnect();this.stop();} catch (Exception ex) {disconnect();this.stop();setDescription(""Unable to connect to "" + statusFileURL);}return doc;}}"	Yes
66	"public class A {public void flush() {release(true);resetHitCounter();log.debug(this.getName() + "" flushed."");}}"	No
67	"public class A {private List<Iterator<DataRow>> mergePartitions(final List<AbstractTableSorter> columnPartitions,final ExecutionMonitor exec,final int chunkCount)throws CanceledExecutionException {LOGGER.debug(""Merging tables"");final List<Iterator<DataRow>> partitionRowIterators = new ArrayList<>();final int numberOfNecessaryContainers = chunkCount * m_sortDescriptions.length;final Iterator<AbstractTableSorter> i = columnPartitions.iterator();if (numberOfNecessaryContainers > m_maxOpenContainers && chunkCount > 1) {int tmp = numberOfNecessaryContainers;final int numExcessContainers = numberOfNecessaryContainers - m_maxOpenContainers;final double numExcessPartitions = numExcessContainers / chunkCount;final double numPartitionsToMergeSeparately =numExcessPartitions + Math.ceil(numExcessPartitions / (chunkCount - 1));int index = 0;while (tmp > m_maxOpenContainers && i.hasNext()) {partitionRowIterators.add(i.next().mergeChunks(exec.createSubProgress(index / numPartitionsToMergeSeparately), true));index++;tmp = tmp - chunkCount + 1;}}exec.setProgress(1, ""Merging Done."");while (i.hasNext()) {partitionRowIterators.add(i.next().mergeChunks(exec.createSubProgress(0), false));}return partitionRowIterators;}}"	No
68	public class A {@Overridepublic void onEvent(SdpPortManagerEvent event) {if (event.getEventType().equals(SdpPortManagerEvent.ANSWER_GENERATED)) {if (event.isSuccessful()) {final byte[] sdp = event.getMediaServerSdp();try {((ApplicationContextImpl) _remoteParticipant.getApplicationContext()).getRemoteCommunication().joinAnswer(_remoteParticipant.getId(), _localParticipant.getRemoteAddress(), sdp);} catch (final Exception e) {notifyRemote = false;done(Cause.ERROR, e);}} else {Exception ex = new NegotiateException(event);notifyRemote = true;done(Cause.ERROR, ex);}} else {Exception ex = new NegotiateException(event);notifyRemote = true;done(Cause.ERROR, ex);}}}	Yes
69	"public class A {public Integer decommission() throws IOException {final Logger logger = cmdLogger;final Integer port = getCurrentPort(logger);if (port == null) {return 15;}final File lockFile = getLockFile(logger);if (!lockFile.exists()) {lockFile.createNewFile();}final Properties nifiProps = loadProperties(logger);final String secretKey = nifiProps.getProperty(""secret.key"");final String pid = nifiProps.getProperty(PID_KEY);final File statusFile = getStatusFile(logger);final File pidFile = getPidFile(logger);try (final Socket socket = new Socket()) {socket.setSoTimeout(10000);socket.connect(new InetSocketAddress(""localhost"", port));socket.setSoTimeout(0);final OutputStream out = socket.getOutputStream();out.write((DECOMMISSION_CMD + "" "" + secretKey + ""\n"").getBytes(StandardCharsets.UTF_8));out.flush();socket.shutdownOutput();final String response = readResponse(socket.getInputStream());if (DECOMMISSION_CMD.equals(response)) {if (pid != null) {waitForShutdown(pid, logger, statusFile, pidFile);}return null;} else {return 18;}} finally {if (lockFile.exists() && !lockFile.delete()) {}}}}"	Yes
70	public class A {@Overridepublic List<ReceiptDetail> reconstructReceiptDetail(final String billReferenceNumber,final BigDecimal actualAmountPaid,final List<ReceiptDetail> receiptDetailList) {final Long billID = Long.valueOf(billReferenceNumber);final List<EgBillDetails> billDetails = new ArrayList<>(0);final EgBill bill = applicationBpaBillService.updateBillWithLatest(billID);final CollectionApportioner apportioner = new CollectionApportioner();billDetails.addAll(bill.getEgBillDetails());return apportioner.reConstruct(actualAmountPaid, billDetails, functionDAO, chartOfAccountsDAO);}}	Yes
71	public class A {protected void logOrgExtChanges(OrgExt orgExt, EditOrgDetailsFormBean formBean, MultipartFile logo) {AdminLogType type = AdminLogType.ORG_ATTRIBUTE_CHANGED;String id = orgExt.getId();try {if (logo != null&& orgExt.getLogo() != null&& !orgExt.getLogo().equals(transformLogoFileToBase64(logo))) {logUtils.createAndLogDetails(id, Org.JSON_LOGO, null, null, type);}} catch (IOException e) {}if (!orgExt.getDescription().equals(formBean.getDescription())) {logUtils.createAndLogDetails(id, Org.JSON_DESCRIPTION, orgExt.getDescription(), formBean.getDescription(), type);}if (!orgExt.getUrl().equals(formBean.getUrl())) {logUtils.createAndLogDetails(id, Org.JSON_URL, orgExt.getUrl(), formBean.getUrl(), type);}if (!orgExt.getAddress().equals(formBean.getAddress())) {logUtils.createAndLogDetails(id, OrgExt.JSON_ADDRESS, orgExt.getAddress(), formBean.getAddress(), type);}}}	Yes
72	"public class A {private void computeConfigLoadStatus(String sourceName, Throwable throwable) {int status = throwable != null ? 1 : 0;Integer status0 = configSourceStatusMap.put(sourceName, status);if (status0 == null || (status0 ^ status) == 1) {if (status == 1) {} else {LOGGER.debug(""[loadConfig][{}] Loaded config properties"", sourceName);}}}}"	Yes
73	public class A {public DialPlanExtension buildDialPlanExtension(final String extension) {DialPlanExtension dialPlan = null;try {dialPlan = new DialPlanExtension(extension);} catch (final IllegalArgumentException e) {logger.error(e, e);}return dialPlan;}}	No
74	public class A {public static Network copy(Network network, NetworkFactory networkFactory, ExecutorService executor) {Objects.requireNonNull(network);Objects.requireNonNull(networkFactory);Objects.requireNonNull(executor);PipedOutputStream pos = new PipedOutputStream();try (InputStream is = new PipedInputStream(pos)) {executor.execute(() -> {try {write(network, pos);} catch (Exception t) {} finally {try {pos.close();} catch (IOException e) {LOGGER.error(e.toString(), e);}}});return read(is, new ImportOptions(), null, networkFactory);} catch (IOException e) {throw new UncheckedIOException(e);}}}	Yes
75	"public class A {public boolean clientExists(Integer demographicNo) {boolean exists = getHibernateTemplate().get(Demographic.class, demographicNo) != null;log.debug(""exists: "" + exists);return exists;}}"	No
76	"public class A {protected void onPageBiggerThanMaxSize(String urlStr, long pageSize) {logger.warn(""Skipping a URL: {} which was bigger ( {} ) than max allowed size"", urlStr, pageSize);}}"	No
77	"public class A {public void checkExpectedGeneratedResources() {try {if (shouldOverrideExpectedTestFiles()) {logger.info(""Override expected test files (instead of checking)"");try {FileUtils.deleteDirectory(getExpectedResourcesTestDir());FileUtils.copyDirectory(targetTestDir, getExpectedResourcesTestDir());} catch (IOException io) {throw new RuntimeException(io);}}checkDirectoriesContainSameContent(getExpectedResourcesTestDir(), targetTestDir);} catch (DifferentDirectoryContentException e) {String msg =""Generated resources do not match the expected resource (Use""+ "" -DoverrideExpectedTestFiles=true to run test and override expected test files""+ "" instead of doing this check)"";logger.debug(msg, e);Assert.fail(msg + ""\n"" + e.getMessage());}}}"	No
78	"public class A {private FutureCallback<ResultSet> getSyncCallback(RequestContext context) {return new FutureCallback<ResultSet>() {@Overridepublic void onSuccess(ResultSet result) {Map<String, String> columnMap = CassandraUtil.fetchColumnsMapping(result);try {Iterator<Row> resultIterator = result.iterator();while (resultIterator.hasNext()) {Row row = resultIterator.next();Map<String, Object> doc = syncDataForEachRow(row, columnMap);ShadowUser singleShadowUser = mapper.convertValue(doc, ShadowUser.class);processSingleShadowUser(singleShadowUser, context);}} catch (Exception e) {logger.error(context,""ShadowUserProcessor:getSyncCallback:SUCCESS:ERROR OCCURRED WHILE GETTING SYNC""+ "" CALLBACKS"",e);}}@Overridepublic void onFailure(Throwable t) {}};}}"	Yes
79	public class A {@Overridepublic void beginWindow(long windowId) {currentWindowId = windowId;store.beginTransaction();}}	Yes
80	public class A {protected void loadMethods() {methods = new ConcurrentHashMap<Method, Method>();Method[] methods = getClass().getMethods();for (Method method : methods) {if (method.getAnnotation(MethodWrapper.class) != null) {try {Method m = wrapee.getMethod(method.getName(), method.getParameterTypes());this.methods.put(m, method);} catch (NoSuchMethodException e) {}}}}}	Yes
81	"public class A {@Path(""/entity/{entityId}/groups"")@GETpublic String getGroups(@PathParam(""entityId"") String entityId, @QueryParam(""identityType"") String idType)throws EngineException, JsonProcessingException {log.debug(""getGroups query for "" + entityId);Map<String, GroupMembership> groups = identitiesMan.getGroups(getEP(entityId, idType));return mapper.writeValueAsString(groups.keySet());}}"	No
82	"public class A {public void deregisterStreamConsumer(final String stream)throws InterruptedException, ExecutionException {int attempt = 1;String streamConsumerArn = getStreamConsumerArn(stream);deregistrationBackoff(configuration, backoff, attempt++);Optional<DescribeStreamConsumerResponse> response = describeStreamConsumer(streamConsumerArn);if (response.isPresent() && response.get().consumerDescription().consumerStatus() != DELETING) {invokeIgnoringResourceInUse(() -> kinesisProxyV2Interface.deregisterStreamConsumer(streamConsumerArn));}waitForConsumerToDeregister(response.orElse(null), streamConsumerArn, attempt);LOG.debug(""Deregistered stream consumer - {}"", streamConsumerArn);}}"	Yes
83	"public class A {@Overridepublic List<PartitionGroup> findPartitionGroupLeaderBroker(String topic, String namespace) {try {List<TopicPartitionGroup> topicPartitionGroups =partitionGroupServerService.findByTopic(topic, namespace);if (null == topicPartitionGroups) {throw new IllegalArgumentException(""topic partition group is null"");}if (topicPartitionGroups.isEmpty()) {return Collections.EMPTY_LIST;}return findPartitionGroupLeaderBroker(topicPartitionGroups);} catch (Exception e) {throw new ServiceException(ServiceException.INTERNAL_SERVER_ERROR, e.getMessage(), e);}}}"	Yes
84	"public class A {public final void failedJob(Job<?> job, JobEndStatus endStatus) {this.profile.end();removeJobTempData();if (this.task.getStatus() == TaskState.CANCELED) {JOB_LOGGER.debug(""Ignoring notification for cancelled job "" + job.getJobId());} else {if (this.isCancelling()) {JOB_LOGGER.debug(""Received a notification for cancelled job "" + job.getJobId());doOutputTransfers(job);notifyError();} else {int jobId = job.getJobId();JOB_LOGGER.error(""Received a notification for job "" + jobId + "" with state FAILED"");JOB_LOGGER.error(""Job ""+ job.getJobId()+ "", running Task ""+ this.task.getId()+ "" on worker ""+ this.getAssignedResource().getName()+ "", has failed."");ErrorManager.warn(""Job ""+ job.getJobId()+ "", running Task ""+ this.task.getId()+ "" on worker ""+ this.getAssignedResource().getName()+ "", has failed."");++this.executionErrors;if (this.transferErrors + this.executionErrors < SUBMISSION_CHANCES&& this.task.getOnFailure() == OnFailure.RETRY) {JOB_LOGGER.error(""Resubmitting job to the same worker."");job.setHistory(JobHistory.RESUBMITTED);this.profile.start();JobDispatcher.dispatch(job);} else {if (this.task.getOnFailure() == OnFailure.IGNORE) {doOutputTransfers(job);}notifyError();}}}}}"	Yes
85	"public class A {public ExpirationConfiguration loadExpirationConfiguration() {ExpirationConfiguration result;LOG.debug(""begin loadExpirationConfiguration()"");final String propertyDir = PropertyAccessor.getInstance().getPropertyFileLocation();LOG.debug(""Property Directory: "" + propertyDir);result = loadExpirationConfiguration(propertyDir, FTA_CONFIG_FILE);return result;}}"	No
86	"public class A {protected void registerQueue(UpnpEntryQueue queue) {if (currentQueue.equals(queue)) {return;}logger.debug(""Registering queue on renderer {}"", thing.getLabel());registeredQueue = true;currentQueue = queue;currentQueue.setRepeat(repeat);currentQueue.setShuffle(shuffle);if (playingQueue) {nextEntry = currentQueue.get(currentQueue.nextIndex());UpnpEntry next = nextEntry;if ((next != null) && !onlyplayone) {setNextURI(next.getRes(), UpnpXMLParser.compileMetadataString(next));}} else {resetToStartQueue();}}}"	Yes
87	public class A {public static String print(Node n, String encoding) {if (n == null) {return null;}try {Document document = null;if (n instanceof Document) {document = (Document) n;} else {document = n.getOwnerDocument();}StringWriter stringOut = new StringWriter();DOMImplementationLS domImpl = (DOMImplementationLS) document.getImplementation();LSSerializer lsSerializer = domImpl.createLSSerializer();lsSerializer.getDomConfig().setParameter(XML_DECLARATION, false);LSOutput lsout = domImpl.createLSOutput();lsout.setEncoding(encoding);lsout.setCharacterStream(stringOut);if (n.getNodeType() == Node.ATTRIBUTE_NODE && n.hasChildNodes()) {n = n.getFirstChild();}lsSerializer.write(n, lsout);return stringOut.toString();} catch (DOMException | LSException e) {}return null;}}	Yes
88	"public class A {@Testpublic void testCreateGRETunnelTemplate() {template = ""/VM_files/createTunnel.vm"";String message = callGRETunnelVelocity(template, newParamsGRETunnelService());Assert.assertNotNull(message);}}"	Yes
89	"public class A {public void sendFeatureList(List<Feature> featureList, String action) throws ArcgisException {Map<String, String> params = new LinkedHashMap<String, String>();params.put(OUT_SPATIAL_REFERENCE_PARAM, DEFAULT_SPATIAL_REFERENCE);if (getCredential() != null && !"""".equals(getCredential().getToken())) {params.put(TOKEN_PARAM, getCredential().getToken());}params.put(ROLLBACK_ON_FAILURE_PARAM, ""true"");Map<String, String> bodyParams = new LinkedHashMap<String, String>();bodyParams.put(FEATURES_PARAM, featureListToStrArray(featureList));bodyParams.put(OUTPUT_FORMAT_PARAM, DEFAULT_OUTPUT_FORMAT);String fullUrl = serviceUrl.toString();if (!fullUrl.endsWith(""/"" + action)) {fullUrl += ""/"" + action;}HttpResponse response = httpPost(fullUrl, params, bodyParams);checkResponse(response);}}"	Yes
90	"public class A {@Overridepublic Object getValueAt(int rowIndex, int columnIndex) {SRU sru = sruManager.getSRUsAsList()[rowIndex];switch (columnIndex) {case 0:return Formatter.formatString(sru.getName());case 1:return sru.getType();case 2:return calculate.get(rowIndex);default:return new String("""");}}}"	Yes
91	"public class A {@Overridepublic void onSuccess(RetryContext context) {if (logger.isDebugEnabled()) {logger.debug(""Successfully connected to "" + context.getDescription());}fireConnectNotification(CONNECTION_CONNECTED, context.getDescription(), context);}}"	No
92	"public class A {@Overridepublic void run() {try {produceMessage(session, destination);} catch (JMSException e) {LOG.info(""got send exception: "", e);}sendDoneLatch.countDown();}}"	Yes
93	"public class A {public User login(String userOrEmail, String userpass) throws OmException {List<User> users =em.createNamedQuery(""getUserByLoginOrEmail"", User.class).setParameter(""userOrEmail"", userOrEmail).setParameter(""type"", Type.USER).getResultList();log.debug(""login:: {} users were found"", users.size());if (users.isEmpty()) {log.debug(""No users was found: {}"", userOrEmail);return null;}User u = users.get(0);if (!verifyPassword(u.getId(), userpass)) {return null;}if (!AuthLevelUtil.hasLoginLevel(u.getRights())) {log.debug(""Not activated: {}"", u);throw new OmException(""error.notactivated"");}log.debug(""login user groups {}"", u.getGroupUsers());if (u.getGroupUsers().isEmpty()) {log.debug(""No Group assigned: {}"", u);throw new OmException(""error.nogroup"");}u.setLastlogin(new Date());return update(u, u.getId());}}"	Yes
94	"public class A {protected static String getResourceBaseName(Resource resource) {try {File resourceFile = resource.getFile();if ((resourceFile != null) && (resource instanceof JarFileResource)) {resourceFile = ((JarFileResource) resource).getJarFile();}if (resourceFile != null) {return resourceFile.getName();}} catch (IOException e) {if (LOG.isDebugEnabled()) {}}URI uri = resource.getURI();if (uri == null) {if (LOG.isDebugEnabled()) {LOG.debug(""Resource has no URI reference: {}"", resource);}return """";}return URIUtil.getUriLastPathSegment(uri);}}"	Yes
95	"public class A {private void createTestRole(String user, String roleName) throws Exception {Connection conn = context.createConnection(user);Statement stmt = conn.createStatement();try {exec(stmt, ""DROP ROLE "" + roleName);} catch (Exception ex) {LOGGER.info(""test role doesn't exist, but it's ok"");} finally {exec(stmt, ""CREATE ROLE "" + roleName);}if (stmt != null) {stmt.close();}if (conn != null) {conn.close();}}}"	No
96	"public class A {@SuppressWarnings(""ThrowableResultOfMethodCallIgnored"")@Overridepublic void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {if (cause instanceof ClosedChannelException) {LOG.warn(""ClosedChannelException caught. Cause: "", cause);return;}LOG.warn(""Unexpected exception. Closing channel {}"", ctx.channel(), cause);ctx.channel().close();}}"	No
97	"public class A {public void splitPathListAndApplyPolicy(String allPathForAclCreation,Configuration conf,FileSystem fileSystem,String groupList,String hdfs_permission)throws IOException {String[] allKyloIntermediatePath = allPathForAclCreation.split("","");for (int pathCounter = 0; pathCounter < allKyloIntermediatePath.length; pathCounter++) {try {individualIntermediatePathApplyPolicy(conf, fileSystem, allKyloIntermediatePath[pathCounter], groupList, hdfs_permission);} catch (IOException e) {log.error(""Unable to iterate on HDFS directories "" + e.getMessage());throw new IOException(e);}}}}"	No
98	public class A {private void determineRecordResources(final GDMModel gdmModel,final org.dswarm.graph.json.Model realModel,final DataModel finalDataModel) {if (finalDataModel.getSchema() != null) {if (finalDataModel.getSchema().getRecordClass() != null) {gdmModel.setRecordURIs(realModel.getResourceURIs());}}}}	Yes
99	"public class A {private JsonObject fetchYarnAuditJson(Dependency dependency, boolean skipDevDependencies)throws AnalysisException {final File folder = dependency.getActualFile().getParentFile();if (!folder.isDirectory()) {throw new AnalysisException(String.format(""%s should have been a directory."", folder.getAbsolutePath()));}try {final List<String> args = new ArrayList<>();args.add(getYarn());args.add(""audit"");args.add(""--offline"");if (skipDevDependencies) {args.add(""--groups"");args.add(""dependencies"");}args.add(""--json"");args.add(""--verbose"");final ProcessBuilder builder = new ProcessBuilder(args);builder.directory(folder);final Process process = builder.start();try (ProcessReader processReader = new ProcessReader(process)) {processReader.readAll();final String errOutput = processReader.getError();if (!StringUtils.isBlank(errOutput) && !EXPECTED_ERROR.equals(errOutput)) {}final String verboseJson =Arrays.stream(processReader.getOutput().split(""\n"")).filter(line -> line.contains(""Audit Request"")).findFirst().get();String auditRequest;try (JsonReader reader =Json.createReader(IOUtils.toInputStream(verboseJson, StandardCharsets.UTF_8))) {final JsonObject jsonObject = reader.readObject();auditRequest = jsonObject.getString(""data"");auditRequest = auditRequest.substring(15);}return Json.createReader(IOUtils.toInputStream(auditRequest, StandardCharsets.UTF_8)).readObject();} catch (InterruptedException ex) {Thread.currentThread().interrupt();throw new AnalysisException(""Yarn audit process was interrupted."", ex);}} catch (IOException ioe) {throw new AnalysisException(""yarn audit failure; this error can be ignored if you are not analyzing projects with a""+ "" yarn lockfile."",ioe);}}}"	Yes
100	"public class A {private Boolean setEFSTag(final String resourceId, final Map<String, Object> clientMap, Map<String, String> pacTag) {com.amazonaws.services.elasticfilesystem.model.Tag tag =new com.amazonaws.services.elasticfilesystem.model.Tag();for (Map.Entry<String, String> tags : pacTag.entrySet()) {tag.setKey(tags.getKey());tag.setValue(tags.getValue());}AmazonElasticFileSystem fileSystem = (AmazonElasticFileSystem) clientMap.get(""client"");com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest createTagsRequest =new com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest();createTagsRequest.setFileSystemId(resourceId);createTagsRequest.setTags(Arrays.asList(tag));try {fileSystem.createTags(createTagsRequest);return Boolean.TRUE;} catch (AmazonServiceException ase) {logger.error(""error tagging efs - > "" + resourceId, ase);throw ase;}}}"	No
101	"public class A {public void uploadListener(FileUploadEvent event) {try {ProjectFile file = new ProjectFile(event.getUploadedFile());uploadedFiles.add(file);String fileName = file.getName();setFileName(fileName);if (fileName.contains(""."")) {if (!FileTypeHelper.isPossibleOpenAPIFile(fileName)) {setProjectName(fileName.substring(0, fileName.lastIndexOf('.')));} else {setProjectName("""");}if (FileTypeHelper.isZipFile(fileName)) {Charset charset = zipCharsetDetector.detectCharset(new ZipFromProjectFile(file));if (charset == null) {log.warn(""Cannot detect a charset for the zip file"");charset = StandardCharsets.UTF_8;}ProjectDescriptor projectDescriptor =ZipProjectDescriptorExtractor.getProjectDescriptorOrNull(file, zipFilter, charset);if (projectDescriptor != null) {setProjectName(projectDescriptor.getName());}setCreateProjectComment(getDesignRepoComments().createProject(getProjectName()));}} else {setProjectName(fileName);}} catch (IOException e) {WebStudioUtils.addErrorMessage(""Error occurred during uploading file."", e.getMessage());}}}"	Yes
102	"public class A {public void start(String ip, int port, String keyspace, int dataTableDaysTimeArea, int slotSecondsTimeArea)throws Exception {if (this.started) {throw new Exception(""DBOperations already started"");}this.dataTableDaysTimeArea = dataTableDaysTimeArea;this.slotSecondsTimeArea = slotSecondsTimeArea;Builder builder = Cluster.builder();builder.withPort(port);builder.addContactPoint(ip);this.cluster = builder.build();Metadata metadata = cluster.getMetadata();for (Host host : metadata.getAllHosts()) {}session = cluster.connect();session.execute(""USE \"""" + keyspace + ""\"""");this.started = true;}}"	Yes
103	public class A {private void addAlgorithm(File processDescriptionFile) {ProcessDescriptionType pd = this.loadProcessDescription(processDescriptionFile);String processID = pd.getIdentifier().getStringValue();this.registeredProcessDescriptions.put(processID, pd);ToolParameter[] params = this.loadParameters(pd);this.registeredAlgorithmParameters.put(processID, params);if (!pd.validate()) {this.registeredProcessDescriptions.remove(processID);this.registeredAlgorithmParameters.remove(processID);}}}	Yes
104	"public class A {private SequenceContainer readSequenceContainer(SpaceSystem spaceSystem)throws XMLStreamException {log.trace(XTCE_SEQUENCE_CONTAINER);checkStartElementPreconditions();String value = readMandatoryAttribute(""name"", xmlEvent.asStartElement());SequenceContainer seqContainer = new SequenceContainer(value);seqContainer.setShortDescription(readAttribute(""shortDescription"", xmlEvent.asStartElement(), null));while (true) {xmlEvent = xmlEventReader.nextEvent();if (isNamedItemProperty()) {readNamedItemProperty(seqContainer);} else if (isStartElementWithName(XTCE_ENTRY_LIST)) {readEntryList(spaceSystem, seqContainer, null);} else if (isStartElementWithName(XTCE_BASE_CONTAINER)) {readBaseContainer(spaceSystem, seqContainer);} else if (isStartElementWithName(XTCE_DEFAULT_RATE_IN_STREAM)) {seqContainer.setRateInStream(readRateInStream(spaceSystem));} else if (isStartElementWithName(XTCE_BINARY_ENCODING)) {BinaryDataEncoding.Builder bde = readBinaryDataEncoding(spaceSystem);seqContainer.setSizeInBits(bde.getSizeInBits());} else if (isEndElementWithName(XTCE_SEQUENCE_CONTAINER)) {return seqContainer;} else {logUnknown();}}}}"	No
105	"public class A {public void persist(CachedRunningQuery crq, String owner) {synchronized (this) {this.cachedRunningQueryCache.remove(owner + ""-"" + crq.getQueryId());this.cachedRunningQueryCache.remove(owner + ""-"" + crq.getAlias());this.cachedRunningQueryCache.remove(owner + ""-"" + crq.getView());this.cachedRunningQueryCache.put(owner + ""-"" + crq.getQueryId(), crq);this.cachedRunningQueryCache.put(owner + ""-"" + crq.getAlias(), crq);this.cachedRunningQueryCache.put(owner + ""-"" + crq.getView(), crq);log.debug(""persisting cachedRunningQuery ""+ crq.getQueryId()+ "" to database with status ""+ crq.getStatus());crq.saveToDatabase(ctx.getCallerPrincipal(), metricFactory);}}}"	Yes
106	public class A {@Overridepublic Socket createSocket(final InetAddress address, final int port, final InetAddress localAddr, final int localPort)throws IOException {if (address instanceof Inet6Address) {final NetworkInterface network = this.findIPv6Interface((Inet6Address) address);if (null == network) {return delegate.createSocket(address, port, localAddr, localPort);}return delegate.createSocket(this.getByAddressForInterface(network, address), port, localAddr, localPort);}if (log.isDebugEnabled()) {}return delegate.createSocket(address, port, localAddr, localPort);}}	Yes
107	public class A {void notifyRemoval(Identifiable identifiable) {for (NetworkListener listener : listeners) {try {listener.onRemoval(identifiable);} catch (Throwable t) {}}}}	Yes
108	public class A {static synchronized ThreadPoolExecutor getExecutor(ThreadPoolBuilder builder, Map<String, Object> poolCache) {ThreadPoolExecutor pool = (ThreadPoolExecutor) poolCache.get(builder.getName());if (pool == null || pool.isTerminating() || pool.isShutdown()) {pool = getDefaultExecutor(builder);poolCache.put(builder.getName(), pool);}((ShutdownOnUnusedThreadPoolExecutor) pool).addReference();return pool;}}	Yes
109	"public class A {private <T> ServiceResponse<T> executePatch(ServiceRequest request, boolean isChangeSet) {ServiceResponse<T> response = new ServiceResponse<>();PersistenceManager pm = null;try {if (request.getUrlPath() == null || request.getUrlPath().equals(""/"")) {return errorResponse(response, 400, ""PATCH only allowed on Entities."");}pm = getPm();if (isChangeSet) {return handleChangeSet(pm, request, response);}return handlePatch(pm, request, response);} catch (IncompleteEntityException | IOException | RuntimeException exc) {if (pm != null) {pm.rollbackAndClose();}return errorResponse(response, 500, ""Failed to store data."");} finally {maybeRollbackAndClose();}}}"	Yes
110	"public class A {private Map<Interval, Int2ObjectMap<List<File>>> fetchSegmentFiles(TaskToolbox toolbox, Map<Interval, Int2ObjectMap<List<P>>> intervalToBuckets)throws IOException {final File tempDir = toolbox.getIndexingTmpDir();FileUtils.deleteQuietly(tempDir);FileUtils.forceMkdir(tempDir);final Map<Interval, Int2ObjectMap<List<File>>> intervalToUnzippedFiles = new HashMap<>();for (Entry<Interval, Int2ObjectMap<List<P>>> entryPerInterval : intervalToBuckets.entrySet()) {final Interval interval = entryPerInterval.getKey();for (Int2ObjectMap.Entry<List<P>> entryPerBucketId :entryPerInterval.getValue().int2ObjectEntrySet()) {final int bucketId = entryPerBucketId.getIntKey();final File partitionDir =FileUtils.getFile(tempDir,interval.getStart().toString(),interval.getEnd().toString(),Integer.toString(bucketId));FileUtils.forceMkdir(partitionDir);for (P location : entryPerBucketId.getValue()) {final File zippedFile =toolbox.getShuffleClient().fetchSegmentFile(partitionDir, supervisorTaskId, location);try {final File unzippedDir =new File(partitionDir, StringUtils.format(""unzipped_%s"", location.getSubTaskId()));FileUtils.forceMkdir(unzippedDir);CompressionUtils.unzip(zippedFile, unzippedDir);intervalToUnzippedFiles.computeIfAbsent(interval, k -> new Int2ObjectOpenHashMap<>()).computeIfAbsent(bucketId, k -> new ArrayList<>()).add(unzippedDir);} finally {if (!zippedFile.delete()) {LOG.warn(""Failed to delete temp file[%s]"", zippedFile);}}}}}return intervalToUnzippedFiles;}}"	No
111	"public class A {public static File extractFile(String fileName, String targetInfix, TokenResolver tokenResolver)throws IOException {InputStream in = Externalization.class.getClassLoader().getResourceAsStream(fileName);if (in == null) return null;File target = getTempFile(fileName.replace(""."", ""_"" + targetInfix + "".""));log.info(""Extracting "" + fileName + "" to "" + target);Reader reader = new TokenReplacingReader(new InputStreamReader(in), tokenResolver);FileWriter writer = new FileWriter(target);copyAndClose(reader, writer);return target;}}"	No
112	public class A {private static ConfigCenterConfigurationSource createConfigCenterConfigurationSource(Configuration localConfiguration) {ConfigCenterConfigurationSource configCenterConfigurationSource =ConfigCenterConfigurationSourceLoader.getConfigCenterConfigurationSource(localConfiguration);if (null == configCenterConfigurationSource) {return null;}return configCenterConfigurationSource;}}	Yes
113	"public class A {@Overridepublic Future<ModelNode> deploy(final ModelNode operation, ExecutorService executorService) {ready = true;logger.info(""Ready to deploy"");synchronized (lock) {return delegate.deploy(operation, null);}}}"	Yes
114	public class A {@Overridepublic void addOrder(Transaction transaction, ColoredCoinsBidOrderPlacement attachment) {final BidOrder order = new BidOrder(transaction, attachment, blockchain.getHeight());bidOrderTable.insert(order);}}	Yes
115	"public class A {private OrderNumberGenerator getOrderNumberGenerator() {if (orderNumberGenerator == null) {String generatorBeanId =Context.getAdministrationService().getGlobalProperty(OpenmrsConstants.GP_ORDER_NUMBER_GENERATOR_BEAN_ID);if (StringUtils.hasText(generatorBeanId)) {orderNumberGenerator =Context.getRegisteredComponent(generatorBeanId, OrderNumberGenerator.class);} else {orderNumberGenerator = this;log.info(""Setting default order number generator"");}}return orderNumberGenerator;}}"	Yes
116	"public class A {public void run(final SyncTaskChain chain) {if (isCancelled()) {callNext(chain);return;}try {getTask().run(() -> {try {done();} finally {callNext(chain);}});} catch (Throwable t) {try {if (!(t instanceof OperationFailureException)) {_logger.warn(String.format(""unhandled exception happened when calling %s"", task.getClass().getName()),t);}done();} finally {callNext(chain);}}}}"	No
117	"public class A {@Testpublic void testAsyncCallUseProperAssignedExecutor() throws Exception {URL wsdl = getClass().getResource(""/wsdl/hello_world.wsdl"");assertNotNull(wsdl);SOAPService service = new SOAPService(wsdl, serviceName);class TestExecutor implements Executor {private AtomicInteger count = new AtomicInteger();public void execute(Runnable command) {int c = count.incrementAndGet();command.run();}public int getCount() {return count.get();}}Executor executor = new TestExecutor();service.setExecutor(executor);assertNotNull(service);assertSame(executor, service.getExecutor());assertEquals(((TestExecutor) executor).getCount(), 0);Greeter greeter = service.getPort(portName, Greeter.class);updateAddressPort(greeter, PORT);List<Response<GreetMeResponse>> responses = new ArrayList<>();for (int i = 0; i < 5; i++) {responses.add(greeter.greetMeAsync(""asyn call"" + i));}for (Response<GreetMeResponse> resp : responses) {resp.get();}assertEquals(5, ((TestExecutor) executor).getCount());}}"	Yes
118	"public class A {@Overridepublic String addNzb(byte[] content, String title, String category) throws DownloaderException {logger.debug(""Adding NZB for {} to NZB with category {}"", title, category);try {return callAppend(BaseEncoding.base64().encode(content), title, category);} catch (Throwable throwable) {logger.info(""Error while trying to add link {} for NZB \""{}\"" to NZBGet queue: {}"",content,title,throwable.getMessage());if (throwable.getMessage() != null) {throw new DownloaderException(""Error while adding NZB to NZBGet: "" + throwable.getMessage());}throw new DownloaderException(""Unknown error while adding NZB to NZBGet"");}}}"	No
119	public class A {@Overridepublic void setResponseString(String responseString) {waitResponseOpen();synchronized (response) {response.setString(responseString);response.notifyAll();}}}	Yes
120	"public class A {public SearchResult<Series> getByQuery(SeriesSearchQuery query) throws SearchIndexException {logger.debug(""Searching index using series query '{}'"", query);final SearchRequest searchRequest = getSearchRequest(query, new SeriesQueryBuilder(query));try {final Unmarshaller unmarshaller = Series.createUnmarshaller();return executeQuery(query,searchRequest,metadata -> {try {return SeriesIndexUtils.toSeries(metadata, unmarshaller);} catch (IOException e) {return chuck(e);}});} catch (Throwable t) {throw new SearchIndexException(""Error querying series index"", t);}}}"	No
121	"public class A {private void run() {try {final ServerSocket serverSocket = new ServerSocket(StructrLicenseManager.ServerPort);serverSocket.setReuseAddress(true);while (true) {try (final Socket socket = serverSocket.accept()) {final InputStream is = socket.getInputStream();final int bufSize = 4096;socket.setSoTimeout(2000);final byte[] sessionKey = blockCipher.doFinal(IOUtils.readFully(is, 256));final byte[] ivSpec = blockCipher.doFinal(IOUtils.readFully(is, 256));final byte[] buf = new byte[bufSize];int count = 0;streamCipher.init(Cipher.DECRYPT_MODE,new SecretKeySpec(sessionKey, ""AES""),new IvParameterSpec(ivSpec));try {count = is.read(buf, 0, bufSize);} catch (IOException ioex) {}final byte[] decrypted = streamCipher.doFinal(buf, 0, count);final String data = new String(decrypted, ""utf-8"");final List<Pair> pairs =split(data).stream().map(StructrLicenseVerifier::keyValue).collect(Collectors.toList());final Map<String, String> map =pairs.stream().filter(Objects::nonNull).collect(Collectors.toMap(Pair::getLeft, Pair::getRight));if (isValid(map)) {final String name = (String) map.get(StructrLicenseManager.NameKey);final byte[] response = name.getBytes(""utf-8"");socket.getOutputStream().write(sign(response));socket.getOutputStream().flush();} else {logger.info(""License verification failed."");}socket.getOutputStream().close();} catch (Throwable t) {}}} catch (Throwable t) {}}}"	Yes
122	public class A {@Overridepublic void ack(Tuple input) {if (!ackingEnabled) {return;}long ackValue = ((TupleImpl) input).getAckVal();Map<Long, Long> anchorsToIds = input.getMessageId().getAnchorsToIds();for (Map.Entry<Long, Long> entry : anchorsToIds.entrySet()) {task.sendUnanchored(Acker.ACKER_ACK_STREAM_ID,new Values(entry.getKey(), Utils.bitXor(entry.getValue(), ackValue)),executor.getExecutorTransfer(),executor.getPendingEmits());}long delta = tupleTimeDelta((TupleImpl) input);if (isDebug) {}if (!task.getUserContext().getHooks().isEmpty()) {BoltAckInfo boltAckInfo = new BoltAckInfo(input, taskId, delta);boltAckInfo.applyOn(task.getUserContext());}if (delta >= 0) {executor.getStats().boltAckedTuple(input.getSourceComponent(), input.getSourceStreamId(), delta);task.getTaskMetrics().boltAckedTuple(input.getSourceComponent(), input.getSourceStreamId(), delta);}}}	Yes
123	"public class A {@Overridepublic void start(int port, int backlog, int listenThreadCount, int handleThreadCount, boolean forceExit) {EventLoopGroup bossGroup = new NioEventLoopGroup(listenThreadCount);EventLoopGroup workerGroup = new NioEventLoopGroup(handleThreadCount);server = new ServerBootstrap();server.group(bossGroup, workerGroup).channel(NioServerSocketChannel.class).localAddress(port).option(ChannelOption.SO_BACKLOG, backlog).childHandler(new HttpServerInitializer(this));try {this.host = NetworkHelper.getLocalIP();this.port = port;server.bind().sync();if (log.isTraceEnable()) {}} catch (Exception e) {log.err(this,""HttpServiceComponent["" + this.cName + ""] for feature["" + this.feature + ""] starts FAIL."",e);if (forceExit == true) {System.exit(-1);}}}}"	Yes
124	"public class A {public void start() {if (authzPaths != null || authzPermissions != null) {boolean success = false;try {success = update();} catch (Exception ex) {success = false;LOG.warn(""Failed to do initial update, will retry in [{}]ms, error: "",new Object[] {retryWaitMillisec, ex.getMessage(), ex});}if (!success) {waitUntil = System.currentTimeMillis() + retryWaitMillisec;}executor =Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {@Overridepublic Thread newThread(Runnable r) {Thread t = new Thread(r, SentryAuthorizationInfo.class.getName() + ""-refresher"");t.setDaemon(true);return t;}});executor.scheduleWithFixedDelay(this, refreshIntervalMillisec, refreshIntervalMillisec, TimeUnit.MILLISECONDS);}}}"	No
125	"public class A {@VisibleForTestingpublic Pair<String, TTransport> getAnyTransport(List<ThriftTransportKey> servers, boolean preferCachedConnection) throws TTransportException {servers = new ArrayList<>(servers);if (preferCachedConnection) {HashSet<ThriftTransportKey> serversSet = new HashSet<>(servers);ConnectionPool pool = getConnectionPool();serversSet.retainAll(pool.getThriftTransportKeys());if (!serversSet.isEmpty()) {ArrayList<ThriftTransportKey> cachedServers = new ArrayList<>(serversSet);Collections.shuffle(cachedServers, random);for (ThriftTransportKey ttk : cachedServers) {CachedConnection connection = pool.reserveAny(ttk);if (connection != null) {final String serverAddr = ttk.getServer().toString();log.trace(""Using existing connection to {}"", serverAddr);return new Pair<>(serverAddr, connection.transport);}}}}ConnectionPool pool = getConnectionPool();int retryCount = 0;while (!servers.isEmpty() && retryCount < 10) {int index = random.nextInt(servers.size());ThriftTransportKey ttk = servers.get(index);if (preferCachedConnection) {CachedConnection connection = pool.reserveAnyIfPresent(ttk);if (connection != null) {return new Pair<>(ttk.getServer().toString(), connection.transport);}}try {return new Pair<>(ttk.getServer().toString(), createNewTransport(ttk));} catch (TTransportException tte) {log.debug(""Failed to connect to {}"", servers.get(index), tte);servers.remove(index);retryCount++;}}throw new TTransportException(""Failed to connect to a server"");}}"	No
126	"public class A {private void flushBuffer(final boolean scheduled) {if (_queue.isEmpty()) {return;}if (!scheduled) {if (_queue.size() < _maxBatchSize) {logger.debug(""Batch ignored, flush operation not scheduled and queue is not full"");return;}}final List<BatchEntry<?, O>> entries = new ArrayList<>(_maxBatchSize);final int batchSize = _queue.drainTo(entries);if (batchSize == 0) {logger.debug(""Batch ignored, no elements left in queue"");return;}final int batchNumber = _batchNo.incrementAndGet();final Object[] input = new Object[batchSize];for (int i = 0; i < batchSize; i++) {input[i] = entries.get(i).getInput();}final BatchSource<I> source = new ArrayBatchSource<>(input);final BatchEntryBatchSink<O> sink = new BatchEntryBatchSink<>(entries);_transformation.map(source, sink);logger.info(""Batch #{} - Finished"", batchNumber, batchSize);}}"	Yes
127	"public class A {@Overridepublic JPACommit getLastCommit(Map<String, Object> param) throws EDBException {synchronized (entityManager) {LOGGER.debug(""Get last commit which are given to a param map with {} elements"", param.size());CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();CriteriaQuery<JPACommit> query = criteriaBuilder.createQuery(JPACommit.class);Root<JPACommit> from = query.from(JPACommit.class);query.select(from);Predicate[] predicates = analyzeParamMap(criteriaBuilder, from, param);query.where(criteriaBuilder.and(predicates));query.orderBy(criteriaBuilder.desc(from.get(""timestamp"")));TypedQuery<JPACommit> typedQuery = entityManager.createQuery(query).setMaxResults(1);try {return typedQuery.getSingleResult();} catch (NoResultException ex) {throw new EDBException(""there was no Object found with the given query parameters"", ex);}}}}"	No
128	"public class A {public void tryMkDir(final Path dir) throws IOException {callHdfsOperation(new HdfsOperation<Void>() {@Overridepublic Void call() throws IOException {if (!fs.exists(dir)) {fs.mkdirs(dir);LOGGER.info(""Create dir {} in hdfs"", dir);}if (fs.getFileStatus(dir).isFile()) {throw new IOException(dir.toString()+ "" is file instead of directory, please remove ""+ ""it or specify another directory"");}fs.mkdirs(dir);return null;}});}}"	No
129	"public class A {@Testvoid testXml() throws Exception {List<CamelEndpointDetails> endpoints = new ArrayList<>();InputStream is =new FileInputStream(""src/test/resources/org/apache/camel/parser/xml/mycamel-onexception.xml"");String fqn = ""src/test/resources/org/apache/camel/parser/xml/mycamel-onexception.xml"";String baseDir = ""src/test/resources"";XmlRouteParser.parseXmlRouteEndpoints(is, baseDir, fqn, endpoints);for (CamelEndpointDetails detail : endpoints) {LOG.info(detail.getEndpointUri());}assertEquals(""log:all"", endpoints.get(0).getEndpointUri());assertEquals(""mock:dead"", endpoints.get(1).getEndpointUri());assertEquals(""log:done"", endpoints.get(2).getEndpointUri());assertEquals(""stream:in?promptMessage=Enter something:"", endpoints.get(3).getEndpointUri());assertEquals(""stream:out"", endpoints.get(4).getEndpointUri());}}"	No
130	"public class A {@Overridepublic void getNext(JCas aJCas) throws IOException, CollectionException {Resource res = nextFile();initCas(aJCas, res);InputStream is = null;try {is = CompressionUtils.getInputStream(res.getLocation(), res.getInputStream());XMLInputFactory xmlInputFactory = XMLInputFactory.newInstance();XMLEventReader xmlEventReaderBasic = xmlInputFactory.createXMLEventReader(is);JAXBContext contextBasic = JAXBContext.newInstance(XcesBodyBasic.class);Unmarshaller unmarshallerBasic = contextBasic.createUnmarshaller();unmarshallerBasic.setEventHandler(new ValidationEventHandler() {@Overridepublic boolean handleEvent(ValidationEvent event) {throw new RuntimeException(event.getMessage(), event.getLinkedException());}});JCasBuilder jb = new JCasBuilder(aJCas);XMLEvent eBasic = null;while ((eBasic = xmlEventReaderBasic.peek()) != null) {if (isStartElement(eBasic, ""body"")) {try {XcesBodyBasic parasBasic =(XcesBodyBasic)unmarshallerBasic.unmarshal(xmlEventReaderBasic, XcesBodyBasic.class).getValue();readPara(jb, parasBasic);} catch (RuntimeException ex) {getLogger().warn(""Input is not in basic xces format."");}} else {xmlEventReaderBasic.next();}}jb.close();} catch (XMLStreamException ex1) {throw new IOException(ex1);} catch (JAXBException e1) {throw new IOException(e1);} finally {closeQuietly(is);}}}"	No
131	"public class A {public void permissionDenied(final SessionId session) {invalidateSessionCookiesIfNeeded();if (session == null) {authenticationFailedSessionInvalid();return;}String baseRedirectUri = session.getSessionAttributes().get(AuthorizeRequestParam.REDIRECT_URI);String state = session.getSessionAttributes().get(AuthorizeRequestParam.STATE);ResponseMode responseMode =ResponseMode.fromString(session.getSessionAttributes().get(AuthorizeRequestParam.RESPONSE_MODE));List<ResponseType> responseType =ResponseType.fromString(session.getSessionAttributes().get(AuthorizeRequestParam.RESPONSE_TYPE), "" "");RedirectUri redirectUri = new RedirectUri(baseRedirectUri, responseType, responseMode);redirectUri.parseQueryString(errorResponseFactory.getErrorAsQueryString(AuthorizeErrorResponseType.ACCESS_DENIED, state));Map<String, String> sessionAttribute =requestParameterService.getAllowedParameters(session.getSessionAttributes());if (sessionAttribute.containsKey(AuthorizeRequestParam.AUTH_REQ_ID)) {String authReqId = sessionAttribute.get(AuthorizeRequestParam.AUTH_REQ_ID);CibaRequestCacheControl request = cibaRequestService.getCibaRequest(authReqId);if (request != null && request.getClient() != null) {if (request.getStatus() == CibaRequestStatus.PENDING) {cibaRequestService.removeCibaRequest(authReqId);}switch (request.getClient().getBackchannelTokenDeliveryMode()) {case POLL:request.setStatus(CibaRequestStatus.DENIED);request.setTokensDelivered(false);cibaRequestService.update(request);break;case PING:request.setStatus(CibaRequestStatus.DENIED);request.setTokensDelivered(false);cibaRequestService.update(request);cibaPingCallbackService.pingCallback(request.getAuthReqId(),request.getClient().getBackchannelClientNotificationEndpoint(),request.getClientNotificationToken());break;case PUSH:cibaPushErrorService.pushError(request.getAuthReqId(),request.getClient().getBackchannelClientNotificationEndpoint(),request.getClientNotificationToken(),PushErrorResponseType.ACCESS_DENIED,""The end-user denied the authorization request."");break;}}}if (sessionAttribute.containsKey(DeviceAuthorizationService.SESSION_USER_CODE)) {processDeviceAuthDeniedResponse(sessionAttribute);}facesService.redirectToExternalURL(redirectUri.toString());}}"	Yes
132	"public class A {@Overridepublic void actionPerformed(ActionEvent ev) {logger.debug(""Edit tools"");boolean ok = toolsDialog.showDialog(config, true);if (!ok) {return;}}}"	No
133	"public class A {public static java.util.List<com.liferay.layout.page.template.model.LayoutPageTemplateEntry>getLayoutPageTemplateEntries(HttpPrincipal httpPrincipal,long groupId,int type,int status,int start,int end,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.layout.page.template.model.LayoutPageTemplateEntry>orderByComparator) {try {MethodKey methodKey =new MethodKey(LayoutPageTemplateEntryServiceUtil.class,""getLayoutPageTemplateEntries"",_getLayoutPageTemplateEntriesParameterTypes12);MethodHandler methodHandler =new MethodHandler(methodKey, groupId, type, status, start, end, orderByComparator);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<com.liferay.layout.page.template.model.LayoutPageTemplateEntry>)returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
134	"public class A {public void addAttachment(BasicIssue basicIssue, File snapshot) {if (snapshot != null) {LOG.info(""Attaching Jira {} with snapshot"", basicIssue.getKey());Issue issue = restClient.getIssueClient().getIssue(basicIssue.getKey()).claim();restClient.getIssueClient().addAttachments(issue.getAttachmentsUri(), snapshot).claim();}}}"	No
135	"public class A {@RequestMapping(""/adminStudies/deleteComprehensionQuestion.do"")public void deleteComprehensionTestQuestion(HttpServletRequest request, HttpServletResponse response) {logger.entry(""begin deleteComprehensionTestQuestion()"");JSONObject jsonobject = new JSONObject();PrintWriter out = null;String message = FdahpStudyDesignerConstants.FAILURE;try {SessionObject sesObj =(SessionObject)request.getSession().getAttribute(FdahpStudyDesignerConstants.SESSION_OBJECT);if (sesObj != null) {String comprehensionQuestionId =FdahpStudyDesignerUtil.isEmpty(request.getParameter(FdahpStudyDesignerConstants.COMPREHENSION_QUESTION_ID))? """": request.getParameter(FdahpStudyDesignerConstants.COMPREHENSION_QUESTION_ID);String studyId =FdahpStudyDesignerUtil.isEmpty(request.getParameter(FdahpStudyDesignerConstants.STUDY_ID))? """": request.getParameter(FdahpStudyDesignerConstants.STUDY_ID);if (StringUtils.isNotEmpty(comprehensionQuestionId) && StringUtils.isNotEmpty(studyId)) {message =studyService.deleteComprehensionTestQuestion(Integer.valueOf(comprehensionQuestionId), Integer.valueOf(studyId), sesObj);}}jsonobject.put(FdahpStudyDesignerConstants.MESSAGE, message);response.setContentType(FdahpStudyDesignerConstants.APPLICATION_JSON);out = response.getWriter();out.print(jsonobject);} catch (Exception e) {}logger.exit(""deleteComprehensionTestQuestion() - Ends"");}}"	Yes
136	"public class A {@GET@Path(""/info"")public Response getNotebookInfo() {File notebookJson = new File(""notebook/note.json"");BufferedReader bufferedReader = null;StringBuilder stringBuilder = new StringBuilder();try {bufferedReader = new BufferedReader(new FileReader(notebookJson));String line;while ((line = bufferedReader.readLine()) != null) {stringBuilder.append(line);}} catch (Exception e) {return new JsonResponse<>(Response.Status.INTERNAL_SERVER_ERROR,e.getMessage(),ExceptionUtils.getStackTrace(e)).build();}return Response.status(Response.Status.OK).entity(stringBuilder.toString()).build();}}"	Yes
137	"public class A {@Overridepublic void afterPropertiesSet() throws Exception {loadPlugins();startPlugins();AbstractAutowireCapableBeanFactory beanFactory =(AbstractAutowireCapableBeanFactory) applicationContext.getAutowireCapableBeanFactory();ExtensionsInjector extensionsInjector = new ExtensionsInjector(this, beanFactory);extensionsInjector.injectExtensions();for (PluginWrapper plugin : getStartedPlugins()) {Class pluginClass = plugin.getPlugin().getClass();LOG.info(""Found plugin: {}"", plugin.getDescriptor().getPluginId());GenericApplicationContext pluginContext =(GenericApplicationContext) ((Plugin) plugin.getPlugin()).getApplicationContext();pluginContext.setParent(applicationContext);}}}"	No
138	"public class A {@Overridepublic void handleResponse(final DeviceResponse deviceResponse) {if (((EmptyDeviceResponse) deviceResponse).getStatus().equals(DeviceMessageStatus.OK)) {LOGGER.info(""setLight() successful for device : {}"", deviceResponse.getDeviceIdentification());} else {PublicLightingSetLightRequestMessageProcessor.this.handleEmptyDeviceResponse(deviceResponse,PublicLightingSetLightRequestMessageProcessor.this.responseMessageSender,domain,domainVersion,messageType,retryCount);}}}"	No
139	"public class A {@Overridepublic Object up(Event evt) {switch (evt.getType()) {case Event.MSG:Message msg = (Message) evt.getArg();WorkerHeader header = (WorkerHeader) msg.getHeader(PROTOCOL_ID);if (header != null && header.getIndex() < 0) {log.trace(""Message "" + msg.getSrc() + "" -> "" + msg.getDest() + "" with workerIndex -1"");} else if (header != null && allowedWorkers != null) {if (!allowedWorkers.contains(header.getIndex())) {return null;}}}return up_prot.up(evt);}}"	Yes
140	"public class A {private void pluginRegistered(ServiceReference srefPlugin) {PluginInfo pluginInfo;Plugin daoPlugin = pluginRefToPluginDAO(srefPlugin);if (daoPlugin != null) {pluginInfo = createInstalledPI(srefPlugin, daoPlugin);} else {pluginInfo = createRegisteredPI(srefPlugin);}if (pluginInfo == null) {logger.error(""Upon plug-in service registration - "" + "" can not create a PluginInfo object!"");} else {registeredPlugins.put(pluginInfo.getHashcode(), pluginInfo);logger.info(""Plug-in service ("" + pluginInfo.getPluginName() + "")"" + "" was registered."");}}}"	No
141	"public class A {public void acceptReducedValues(DataInput reducedValuesInput) throws IOException {int numReducers = reducedValuesInput.readInt();for (int i = 0; i < numReducers; i++) {String name = reducedValuesInput.readUTF();GlobalCommType type = GlobalCommType.values()[reducedValuesInput.readByte()];if (type != GlobalCommType.REDUCED_VALUE) {throw new IllegalStateException(""SendReducedToMasterRequest received "" + type);}Reducer<Object, Writable> reducer = reducerMap.get(name);if (reducer == null) {throw new IllegalStateException(""acceptReducedValues: ""+ ""Master received reduced value which isn't registered: ""+ name);}Writable valueToReduce = reducer.createInitialValue();valueToReduce.readFields(reducedValuesInput);if (reducer.getCurrentValue() != null) {reducer.reduceMerge(valueToReduce);} else {reducer.setCurrentValue(valueToReduce);}progressable.progress();}if (LOG.isDebugEnabled()) {LOG.debug(""acceptReducedValues: Accepted one set with "" + numReducers + "" aggregated values"");}}}"	No
142	public class A {@Overridepublic Map<K, ICacheElement<K, V>> getMatching(final String pattern) throws IOException {for (final RemoteCacheNoWait<K, V> nw : noWaits) {try {return nw.getMatching(pattern);} catch (final IOException ex) {}}return Collections.emptyMap();}}	Yes
143	"public class A {private void checkToSendTaskFinishedMail(SingularityTaskId taskId) {Optional<SingularityRequestWithState> requestWithState =requestManager.getRequest(taskId.getRequestId());Optional<SingularityTaskHistory> taskHistory = taskManager.getTaskHistory(taskId);if (!taskHistory.isPresent()) {taskHistory = historyManager.getTaskHistory(taskId.getId());}ShouldSendMailState shouldSendState =shouldSendTaskFinishedMail(taskId, requestWithState, taskHistory);if (shouldSendState == ShouldSendMailState.WAIT) {return;}try {mailer.sendTaskCompletedMail(taskHistory.get(), requestWithState.get().getRequest());} catch (Throwable t) {} finally {SingularityDeleteResult result = taskManager.deleteFinishedTaskMailQueue(taskId);LOG.debug(""Task {} mail sent with status {} (delete result {})"", taskId, shouldSendState, result);}}}"	Yes
144	"public class A {public void updateRegisteredDeployments(@Observes SystemRepositoryChangedEvent changedEvent) {Collection<ConfigGroup> deployments =configurationService.getConfiguration(ConfigType.DEPLOYMENT);if (deployments != null) {List<String> processedDeployments = new ArrayList<String>();for (ConfigGroup deploymentConfig : deployments) {String name = deploymentConfig.getName();if (!this.registeredDeployments.containsKey(name)) {try {logger.debug(""New deployment {} has been discovered and will be deployed"", name);DeploymentConfig deployment = deploymentFactory.newDeployment(deploymentConfig);addedDeploymentEvent.fire(new DeploymentConfigChangedEvent(deployment.getDeploymentUnit()));registeredDeployments.put(deployment.getIdentifier(), deployment);logger.debug(""Deployment {} deployed successfully"", name);} catch (RuntimeException e) {logger.warn(""Deployment {} failed to deploy due to {}"", name, e.getMessage(), e);}}processedDeployments.add(name);}Set<String> registeredDeploymedIds = registeredDeployments.keySet();for (String identifier : registeredDeploymedIds) {if (!processedDeployments.contains(identifier)) {try {DeploymentConfig deployment = registeredDeployments.remove(identifier);removedDeploymentEvent.fire(new DeploymentConfigChangedEvent(deployment.getDeploymentUnit()));logger.debug(""Deployment {} undeployed successfully"", identifier);} catch (RuntimeException e) {logger.warn(""Undeployment {} failed to deploy due to {}"", identifier, e.getMessage(), e);}}}}}}"	Yes
145	public class A {public void stopCounting() {runCounting = false;stopLogReport();}}	Yes
146	"public class A {@Overridepublic void importData(JsonReader reader) throws IOException {logger.info(""Reading configuration for 1.2"");reader.beginObject();while (reader.hasNext()) {JsonToken tok = reader.peek();switch (tok) {case NAME:String name = reader.nextName();if (name.equals(CLIENTS)) {readClients(reader);} else if (name.equals(GRANTS)) {readGrants(reader);} else if (name.equals(WHITELISTEDSITES)) {readWhitelistedSites(reader);} else if (name.equals(BLACKLISTEDSITES)) {readBlacklistedSites(reader);} else if (name.equals(AUTHENTICATIONHOLDERS)) {readAuthenticationHolders(reader);} else if (name.equals(ACCESSTOKENS)) {readAccessTokens(reader);} else if (name.equals(REFRESHTOKENS)) {readRefreshTokens(reader);} else if (name.equals(SYSTEMSCOPES)) {readSystemScopes(reader);} else {for (MITREidDataServiceExtension extension : extensions) {if (extension.supportsVersion(THIS_VERSION)) {extension.importExtensionData(name, reader);break;}}reader.skipValue();}break;case END_OBJECT:reader.endObject();continue;default:reader.skipValue();continue;}}fixObjectReferences();for (MITREidDataServiceExtension extension : extensions) {if (extension.supportsVersion(THIS_VERSION)) {extension.fixExtensionObjectReferences(maps);break;}}maps.clearAll();}}"	Yes
147	"public class A {public void addHandler(JettyHandler handler) {LOGGER.info(""Bind handler {} into jetty server {}:{}"",handler.getClass().getSimpleName(),jettyServerConfig.getHost(),jettyServerConfig.getPort());ServletHolder servletHolder = new ServletHolder();servletHolder.setServlet(handler);servletContextHandler.addServlet(servletHolder, handler.pathSpec());}}"	No
148	"public class A {@Testpublic void testManyFiles() throws Exception {Session s = conn.createSession(true, Session.SESSION_TRANSACTED);Queue jmsQueue = s.createQueue(address.toString());MessageProducer p = s.createProducer(jmsQueue);p.setDeliveryMode(DeliveryMode.PERSISTENT);conn.start();for (int i = 0; i < 1000; i++) {p.send(s.createTextMessage(""payload""));server.getStorageManager().getMessageJournal().forceMoveNextFile();}s.commit();Assert.assertTrue(server.getStorageManager().getJournalSequentialFileFactory().getCriticalAnalyzer().getNumberOfComponents()< 10);log.debug(""Number of components:""+ server.getStorageManager().getJournalSequentialFileFactory().getCriticalAnalyzer().getNumberOfComponents());}}"	No
149	public class A {public Double dot(Matrix m) {if (numRows != m.numRows || numCols != m.numCols) {return 0.0;}double sum = 0;for (int r = 0; r < numRows; r++)for (int c = 0; c < numCols; c++) sum += this.elements[r][c] * m.elements[r][c];return sum;}}	Yes
150	"public class A {@Overridepublic void init(SortedKeyValueIterator<Key, Value> source,Map<String, String> options,IteratorEnvironment env)throws IOException {if (log.isTraceEnabled()) {log.trace(""AncestorQueryIterator init()"");}super.init(source, options, env);this.mustUseFieldIndex = true;fieldIndexKeyDataTypeFilter =parseIndexFilteringChain(new SourcedOptions<>(source, env, options));disableIndexOnlyDocuments = false;}}"	No
151	"public class A {private void renewToken() throws VaultException {Vault vault = this.vault;if (vault == null) {return;}try {AuthResponse response = vault.auth().renewSelf();long ttl = response.getAuthLeaseDuration();if (LOGGER.isDebugEnabled()) {LOGGER.debug(""Token was successfully renewed (new TTL = {} seconds), response: {}"",ttl,bodyAsString(response.getRestResponse()));}if (response.isAuthRenewable()) {if (ttl > 1) {long delay = TimeUnit.SECONDS.toMillis(suggestedRefreshInterval(ttl));timer.schedule(new RenewTokenTask(), delay);} else {LOGGER.warn(""Token TTL ({}) is not enough for scheduling"", ttl);vault = recreateVault(vault);}} else {LOGGER.warn(""Vault token is not renewable now"");}} catch (VaultException e) {if (e.getHttpStatusCode() == STATUS_CODE_FORBIDDEN) {LOGGER.warn(""Could not renew the Vault token"", e);vault = recreateVault(vault);}}}}"	No
152	"public class A {@Overridepublic void cleanup() {try {lookup.close();} catch (Exception e) {LOG.error(""Unable to cleanup access tracker"", e);}}}"	No
153	public class A {@Overrideprotected void doStop() throws Exception {super.doStop();if (configuration.isWebhookAutoRegister() && delegateEndpoint != null) {delegateEndpoint.unregisterWebhook();}ServiceHelper.stopService(delegateEndpoint);}}	Yes
154	"public class A {@SuppressWarnings(""checkstyle:IllegalCatch"")@SuppressFBWarnings(value = ""NP_NULL_PARAM_DEREF"", justification = ""Unrecognised NullableDecl"")@Overridepublic Optional<String> invokeRpc(final String uriPath, final Optional<String> input)throws OperationFailedException {requireNonNull(uriPath, ""uriPath can't be null"");final String actualInput = input.isPresent() ? input.get() : null;LOG.debug(""invokeRpc: uriPath: {}, input: {}"", uriPath, actualInput);String output = null;try {NormalizedNodeContext outputContext;if (actualInput != null) {final InputStream entityStream =new ByteArrayInputStream(actualInput.getBytes(StandardCharsets.UTF_8));final NormalizedNodeContext inputContext =JsonNormalizedNodeBodyReader.readFrom(uriPath, entityStream, true, controllerContext);LOG.debug(""Parsed YangInstanceIdentifier: {}"",inputContext.getInstanceIdentifierContext().getInstanceIdentifier());LOG.debug(""Parsed NormalizedNode: {}"", inputContext.getData());outputContext = restconfService.invokeRpc(uriPath, inputContext, null);} else {outputContext = restconfService.invokeRpc(uriPath, null, null);}if (outputContext.getData() != null) {output = toJson(outputContext);}} catch (final RuntimeException | IOException e) {propagateExceptionAs(uriPath, e, ""RPC"");}return Optional.ofNullable(output);}}"	No
155	"public class A {private void insertObservations()throws UnsupportedEncodingException, IOException, XmlException, OwsExceptionReport {ExecutorService threadPool =Executors.newFixedThreadPool(5, new GroupedAndNamedThreadFactory(""52n-sample-data-insert-observations""));for (File observationFile : getFilesBySuffix(OBS_XML_FILE_ENDING)) {threadPool.submit(new InsertObservationTask(observationFile));}try {threadPool.shutdown();while (!threadPool.isTerminated()) {Thread.sleep(THREADPOOL_SLEEP_BETWEEN_CHECKS);}} catch (InterruptedException e) {}exceptions.throwIfNotEmpty();}}"	Yes
156	public class A {protected void doClean(Exchange exchange, String operation) throws Exception {Set<String> result = null;try {if (ObjectHelper.isNotEmpty(endpoint.getBranchName())) {git.checkout().setCreateBranch(false).setName(endpoint.getBranchName()).call();}result = git.clean().setCleanDirectories(true).call();} catch (Exception e) {throw e;}updateExchange(exchange, result);}}	Yes
157	public class A {protected void failRevertFileVersion(String version) throws PortalException {try {revertFileVersion(version, null);Assert.fail();} catch (InvalidFileVersionException invalidFileVersionException) {if (_log.isDebugEnabled()) {_log.debug(invalidFileVersionException, invalidFileVersionException);}}}}	No
158	"public class A {@Overridepublic NSDictionary objectForKey(final String key) {final NSObject value = dict.objectForKey(key);if (null == value) {return null;}if (value instanceof NSDictionary) {return (NSDictionary) value;}log.warn(String.format(""Unexpected value type for serialized key %s"", key));return null;}}"	No
159	public class A {@Overridepublic void checkServerTrusted(final X509Certificate[] chain, final String authType)throws CertificateException {CertificateException certEx = null;for (X509ExtendedTrustManager tm : trustManagers) {try {tm.checkServerTrusted(chain, authType);if (trustStrategy == Strategy.ANY) {return;}} catch (CertificateException e) {if (trustStrategy == Strategy.ALL) {throw e;}if (certEx == null) {certEx = e;}}}if (certEx != null) {throw certEx;}}}	Yes
160	"public class A {@Overridepublic RSAPrivateKey decodePrivateKey(SessionContext session,String keyType,FilePasswordProvider passwordProvider,InputStream keyData)throws IOException, GeneralSecurityException {if (!KeyPairProvider.SSH_RSA.equals(keyType)) {throw new InvalidKeySpecException(""Unexpected key type: "" + keyType);}BigInteger n = KeyEntryResolver.decodeBigInt(keyData);BigInteger e = KeyEntryResolver.decodeBigInt(keyData);if (!Objects.equals(e, DEFAULT_PUBLIC_EXPONENT)) {}BigInteger d = KeyEntryResolver.decodeBigInt(keyData);BigInteger inverseQmodP = KeyEntryResolver.decodeBigInt(keyData);Objects.requireNonNull(inverseQmodP, ""Missing iqmodp"");BigInteger p = KeyEntryResolver.decodeBigInt(keyData);BigInteger q = KeyEntryResolver.decodeBigInt(keyData);BigInteger modulus = p.multiply(q);if (!Objects.equals(n, modulus)) {log.warn(""decodePrivateKey({}) mismatched modulus values: encoded={}, calculated={}"",keyType,n,modulus);}try {return generatePrivateKey(new RSAPrivateCrtKeySpec(n,e,d,p,q,d.mod(p.subtract(BigInteger.ONE)),d.mod(q.subtract(BigInteger.ONE)),inverseQmodP));} finally {d = null;inverseQmodP = null;p = null;q = null;}}}"	Yes
161	"public class A {public static int install(ResourceUtils resolver,Map<String, ?> props,SshMachineLocation machine,String urlToInstall,String target,int numAttempts) {if (resolver == null) resolver = ResourceUtils.create(machine);Exception lastError = null;int retriesRemaining = numAttempts;int attemptNum = 0;do {attemptNum++;try {Tasks.setBlockingDetails(""Installing "" + urlToInstall + "" at "" + machine);return machine.installTo(resolver, props, urlToInstall, target);} catch (Exception e) {Exceptions.propagateIfFatal(e);lastError = e;String stack = StackTraceSimplifier.toString(e);if (stack.contains(""net.schmizz.sshj.sftp.RemoteFile.write"")) {log.warn(""Failed to transfer ""+ urlToInstall+ "" to ""+ machine+ "", retryable error, attempt ""+ attemptNum+ ""/""+ numAttempts+ "": ""+ e);continue;}log.warn(""Failed to transfer ""+ urlToInstall+ "" to ""+ machine+ "", not a retryable error so failing: ""+ e);throw Exceptions.propagate(e);} finally {Tasks.resetBlockingDetails();}} while (retriesRemaining-- > 0);throw Exceptions.propagate(lastError);}}"	No
162	"public class A {private void logDebug(OAuth2TokenResponse response) {if (!LOGGER.isDebugEnabled()) {return;}try {DecodedJwt decodedJwt = response.getDecodedAccessToken();LOGGER.debug(""Access token: {}"", decodedJwt);} catch (IllegalArgumentException e) {LOGGER.debug(""Access token can not be logged. {}"", e.getMessage());}}}"	No
163	public class A {@Overrideprotected void run() throws Exception {while (isRunning()) {if (!connected) {connect();}if (!connected) {continue;}try {byte[] p = queue.poll(1, TimeUnit.SECONDS);if (p != null) {socket.getOutputStream().write(p);}} catch (IOException e1) {connect();}try {if (socket.getInputStream().available() > 0) {SimulatorCcsdsPacket tc = readPacket(inputStream);if (tc != null) {simulator.processTc(tc);} else {connected = false;}}} catch (IOException e1) {connect();}}}}	Yes
164	"public class A {@Overridepublic void rollback(Xid xid) throws XAException {if (this.xid == null || !this.xid.equals(xid)) {throw newXAException(XAER_INVAL, ""Invalid Xid"");}this.xid = null;try {owner.connection.rollback();} catch (SQLException e) {throw newXAException(XAER_RMERR, ""Cannot rollback"", e);} finally {try {owner.connection.setAutoCommit(true);} catch (SQLException e) {}}}}"	Yes
165	"public class A {public Set<Artifact> resolveArtifacts(Set<String> coords) {Set<Artifact> result = new LinkedHashSet<>();for (String coord : coords) {Artifact artifact = resolveArtifact(coord);if (artifact != null) {result.add(artifact);}}LOG.trace(""resolveArtifacts({}) returns {}"", coords, result);return result;}}"	No
166	"public class A {private List<Triple<String, Date, Boolean>> getInstallations() {List<Triple<String, Date, Boolean>> wmInstallations = new ArrayList<>();try {XStringSubstitution xSS =UNO.XStringSubstitution(UnoComponent.createComponentWithContext(UnoComponent.CSS_UTIL_PATH_SUBSTITUTION));String myPath = xSS.substituteVariables(""$(user)/uno_packages/cache/uno_packages/"", true);String oooPath =xSS.substituteVariables(""$(inst)/share/uno_packages/cache/uno_packages/"", true);String oooPathNew =xSS.substituteVariables(""$(brandbaseurl)/share/uno_packages/cache/uno_packages/"", true);if (myPath == null || oooPath == null) {return wmInstallations;}findWollMuxInstallations(wmInstallations, myPath, false);findWollMuxInstallations(wmInstallations, oooPath, true);if (oooPathNew != null) {findWollMuxInstallations(wmInstallations, oooPathNew, true);}} catch (NoSuchElementException e) {}return wmInstallations;}}"	Yes
167	"public class A {private PoxPayloadOut createIntakeInstance(String entryNumber, String entryDate, String depositor)throws Exception {IntakesCommon intake = new IntakesCommon();intake.setEntryNumber(entryNumber);intake.setEntryDate(entryDate);DepositorGroupList depositorGroupList = new DepositorGroupList();List<DepositorGroup> depositorGroups = depositorGroupList.getDepositorGroup();DepositorGroup depositorGroup = new DepositorGroup();depositorGroup.setDepositor(depositor);depositorGroups.add(depositorGroup);intake.setDepositorGroupList(depositorGroupList);PoxPayloadOut multipart = new PoxPayloadOut(IntakeClient.SERVICE_PAYLOAD_NAME);PayloadOutputPart commonPart = multipart.addPart(intake, MediaType.APPLICATION_XML_TYPE);commonPart.setLabel(new IntakeClient().getCommonPartName());if (logger.isDebugEnabled()) {logger.debug(""to be created, intake common"");logger.debug(objectAsXmlString(intake, IntakesCommon.class));}return multipart;}}"	No
168	"public class A {public MbZielobjTypTxt findById(sernet.gs.reveng.MbZielobjTypTxtId id) {log.debug(""getting MbZielobjTypTxt instance with id: "" + id);try {MbZielobjTypTxt instance =(MbZielobjTypTxt)sessionFactory.getCurrentSession().get(""sernet.gs.reveng.MbZielobjTypTxt"", id);if (instance == null) {log.debug(""get successful, no instance found"");} else {log.debug(""get successful, instance found"");}return instance;} catch (RuntimeException re) {log.error(""get failed"", re);throw re;}}}"	No
169	public class A {public static PublicKey loadPublicKeyFromPem(String publicPart, String algorithm) {try {var reader = new StringReader(publicPart);var readerPem = new PemReader(reader);var obj = readerPem.readPemObject();readerPem.close();return KeyFactory.getInstance(algorithm).generatePublic(new X509EncodedKeySpec(obj.getContent()));} catch (InvalidKeySpecException | NoSuchAlgorithmException | IOException e) {return null;}}}	Yes
170	"public class A {@Path(""/entity/{entityId}/credential/{credential}/status/{status}"")@PUTpublic void setCredentialStatus(@PathParam(""entityId"") String entityId,@PathParam(""credential"") String credential,@QueryParam(""identityType"") String idType,@PathParam(""status"") String status)throws EngineException, JsonProcessingException {log.info(""setCredential {} status for {} to {}"", credential, entityId, status);LocalCredentialState desiredCredentialState = LocalCredentialState.valueOf(status);entityCredMan.setEntityCredentialStatus(getEP(entityId, idType), credential, desiredCredentialState);}}"	No
171	"public class A {@Testpublic void testBbox1() {Document doc =getAsDOM(""wfs?request=GetFeature&version=1.1.0&typename=gsml:MappedFeature&srsName=EPSG:4979&bbox=-200,-200,0,200,200,50"");assertXpathCount(0, ""//gsml:MappedFeature[@gml:id='gsml.mappedfeature.mf1']"", doc);assertXpathCount(1, ""//gsml:MappedFeature[@gml:id='gsml.mappedfeature.mf2']"", doc);assertXpathCount(1, ""//gsml:MappedFeature[@gml:id='gsml.mappedfeature.mf3']"", doc);assertXpathCount(0, ""//gsml:MappedFeature[@gml:id='gsml.mappedfeature.mf4']"", doc);assertXpathEvaluatesTo(""167.9388 -29.0434 7"",""//gsml:MappedFeature[@gml:id='gsml.mappedfeature.mf2']/gsml:shape/gml:Point/gml:pos"",doc);assertXpathEvaluatesTo(""3"",""//gsml:MappedFeature[@gml:id='gsml.mappedfeature.mf2']/gsml:shape/gml:Point/@srsDimension"",doc);assertXpathEvaluatesTo(""http://www.opengis.net/gml/srs/epsg.xml#4979"",""//gsml:MappedFeature[@gml:id='gsml.mappedfeature.mf2']/gsml:shape/gml:Point/@srsName"",doc);}}"	Yes
172	"public class A {private ServerConnector createHttpConnector(Config config) {LOG.info(""Setting up HTTP connector for web server"");final ServerConnector httpConnector =new ServerConnector(jettyServer, new HttpConnectionFactory(baseHttpConfig()));httpConnector.setPort(config.getInt(DrillOnYarnConfig.HTTP_PORT));return httpConnector;}}"	No
173	"public class A {@Overridepublic FileStatus[] listStatus(Path f) throws FileNotFoundException, IOException {LOG.debug(""List status of {}"", f.toString());return listStatus(f, null);}}"	No
174	"public class A {@Overridepublic Object addingBundle(Bundle bundle, BundleEvent event) {LOGGER.trace(""checking whether Bundle {} is a domain"", bundle);Dictionary<String, String> headers = bundle.getHeaders();String name = headers.get(Constants.DOMAIN_NAME_HEADER);if (name == null) {LOGGER.trace(""Bundle {} is not a domain, ignoring"", bundle);return null;}return registerDomainProvider(bundle, name);}}"	No
175	"public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;removeGroupComputePrefs_result result = new removeGroupComputePrefs_result();if (e instanceof org.apache.airavata.model.error.InvalidRequestException) {result.ire = (org.apache.airavata.model.error.InvalidRequestException) e;result.setIreIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataClientException) {result.ace = (org.apache.airavata.model.error.AiravataClientException) e;result.setAceIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataSystemException) {result.ase = (org.apache.airavata.model.error.AiravataSystemException) e;result.setAseIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AuthorizationException) {result.ae = (org.apache.airavata.model.error.AuthorizationException) e;result.setAeIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {_LOGGER.error(""Exception writing to internal frame buffer"", ex);fb.close();}}}"	Yes
176	"public class A {private ArrayList<GeocodedAddress> getGeocodedAddresses(String url) {ArrayList<GeocodedAddress> geocodedAddresses = new ArrayList<>();String json = """";try {json = UrlRequest.getResponseFromUrl(url);if (json != null) {JsonNode jsonNode = objectMapper.readTree(json);String status = jsonNode.get(""info"").get(""statuscode"").asText();if (status != ""0"") {logger.debug(""MapQuest statuscode: "" + status);logger.error(""MapQuest messages "" + jsonNode.get(""info"").get(""messages""));return geocodedAddresses;}JsonNode jsonResults = jsonNode.get(""results"");int numResults = jsonResults.size();for (int j = 0; j < numResults; j++) {try {JsonNode location = jsonResults.get(j).get(""locations"").get(0);geocodedAddresses.add(getGeocodedAddressFromLocationNode(location));} catch (Exception ex) {logger.warn(""Error retrieving GeocodedAddress from MapQuest response "" + json, ex);geocodedAddresses.add(new GeocodedAddress());}}}return geocodedAddresses;} catch (MalformedURLException ex) {logger.error(""Malformed MapQuest url!"", ex);} catch (UnsupportedEncodingException ex) {logger.error(""UTF-8 Unsupported?!"", ex);} catch (IOException ex) {logger.error(""Error opening API resource! "" + ex.toString() + "" Response: "" + json);} catch (NullPointerException ex) {logger.error(""MapQuest response was not formatted correctly. Response: "" + json, ex);} catch (Exception ex) {logger.error("""" + ex);}return geocodedAddresses;}}"	No
177	"public class A {private void detectConflictingRoutes(Map<RouteMatcher, MethodInfo> matchers) {if (matchers.isEmpty()) {return;}Set<LinkedHashSet<RouteMatcher>> groups = new HashSet<>();for (Iterator<Entry<RouteMatcher, MethodInfo>> iterator = matchers.entrySet().iterator();iterator.hasNext(); ) {Entry<RouteMatcher, MethodInfo> entry = iterator.next();LinkedHashSet<RouteMatcher> group = new LinkedHashSet<>();group.add(entry.getKey());matchers.entrySet().stream().filter(e -> {if (e.getKey().equals(entry.getKey())) {return false;}if (e.getValue().equals(entry.getValue())) {return false;}if (e.getKey().getOrder() != entry.getKey().getOrder()) {return false;}return canMatchSameRequest(entry.getKey(), e.getKey());}).map(Entry::getKey).forEach(group::add);groups.add(group);}boolean conflictExists = false;for (Set<RouteMatcher> group : groups) {if (group.size() > 1) {Iterator<RouteMatcher> it = group.iterator();RouteMatcher firstMatcher = it.next();MethodInfo firstMethod = matchers.get(firstMatcher);conflictExists = true;StringBuilder conflictingRoutes = new StringBuilder();while (it.hasNext()) {RouteMatcher rm = it.next();MethodInfo method = matchers.get(rm);conflictingRoutes.append(""\n\t- "").append(method.declaringClass().name().toString()).append(""#"").append(method.name()).append(""()"");}LOGGER.warnf(""Route %s#%s() can match the same request and has the same order [%s] as:%s"",firstMethod.declaringClass().name(),firstMethod.name(),firstMatcher.getOrder(),conflictingRoutes);}}if (conflictExists) {}}}"	Yes
178	"public class A {private boolean parseStandardNoSeparator(boolean isLatitude, String locStr) {boolean isLikelyValue = false;String toParse = locStr;if (toParse.length() > 5) {if (toParse.contains(""."")) {toParse = toParse.split(""\\."")[0];}try {if (isLatitude) {int locValue = Integer.parseInt(toParse.substring(0, 2));if (locValue >= 0&& locValue <= 90&& validateMinSecValue(toParse.substring(2, 4))&& validateMinSecValue(toParse.substring(4, 6))) {isLikelyValue = true;myConfidence = 1.0f;}} else {int locValue = -1;String minStr = null;String secStr = null;if (toParse.length() == 6) {locValue = Integer.parseInt(toParse.substring(0, 2));minStr = toParse.substring(2, 3);secStr = toParse.substring(4);} else if (toParse.length() == 7) {locValue = Integer.parseInt(toParse.substring(0, 3));minStr = toParse.substring(3, 5);secStr = toParse.substring(5);}if (locValue >= 0&& locValue <= 180&& validateMinSecValue(minStr)&& validateMinSecValue(secStr)) {isLikelyValue = true;myConfidence = 1.0f;}}} catch (NumberFormatException e) {if (LOGGER.isDebugEnabled()) {}} catch (PatternSyntaxException e) {if (LOGGER.isDebugEnabled()) {}}}return isLikelyValue;}}"	Yes
179	"public class A {private ArrayList<BufferedImage> getImages(String channelId) {ArrayList<BufferedImage> images = new ArrayList<>();Integer numberOfImages = config.montageNumImages;if (numberOfImages != null) {for (int imageNumber = 1; imageNumber <= numberOfImages; imageNumber++) {logger.trace(""Downloading montage image {} for channel '{}'"", imageNumber, channelId);DoorbirdImage historyImage =CHANNEL_DOORBELL_IMAGE_MONTAGE.equals(channelId)? api.downloadDoorbellHistoryImage(String.valueOf(imageNumber)): api.downloadMotionHistoryImage(String.valueOf(imageNumber));if (historyImage != null) {RawType image = historyImage.getImage();if (image != null) {try {BufferedImage i = ImageIO.read(new ByteArrayInputStream(image.getBytes()));images.add(i);} catch (IOException e) {logger.debug(""IOException creating BufferedImage from downloaded image: {}"", e.getMessage());}}}}if (images.size() < numberOfImages) {logger.debug(""Some images could not be downloaded: wanted={}, actual={}"",numberOfImages,images.size());}}return images;}}"	No
180	"public class A {private static void initialize() {try {URL.setURLStreamHandlerFactory(new FsUrlStreamHandlerFactory());} catch (final Error factoryError) {String type = """";Field f = null;try {f = URL.class.getDeclaredField(""factory"");} catch (final NoSuchFieldException e) {throw (factoryError);}f.setAccessible(true);Object o;try {o = f.get(null);} catch (final IllegalAccessException e) {throw (factoryError);}if (o instanceof FsUrlStreamHandlerFactory) {return;} else {type = o.getClass().getCanonicalName();}LOGGER.error(""URL.setURLStreamHandlerFactory() can only be called once per JVM instance, and currently""+ "" something has set it to: ""+ type);throw (factoryError);}}}"	Yes
181	public class A {@Overridepublic boolean isEmpty() {return atomContainerCount == 0;}}	Yes
182	public class A {@Overridepublic synchronized void triggerTimeout(final long timeout, final boolean causedBySession) {final Future<?> f = sessionFuture.get();if (f != null && !f.isDone()) {if (closeReason.compareAndSet(null, causedBySession ? CloseReason.SESSION_TIMEOUT : CloseReason.REQUEST_TIMEOUT)) {actualTimeoutLengthWhenClosed = timeout;if (causedBySession || !sessionIdOnRequest) cancel(true);else {if (sessionThread != null) {sessionThread.interrupt();} else {}}}}}}	Yes
183	"public class A {@Overrideprotected void onStop() {LOG.info(""Twilight plugin stopped "");setPollingWait(-1);}}"	No
184	"public class A {@Testpublic void testExecuteFailure() throws Exception {String command = getJavaCommand() + "" org.springframework.batch.sample.tasklet.UnknownClass"";tasklet.setCommand(command);tasklet.setTimeout(200L);tasklet.afterPropertiesSet();try {StepContribution contribution = stepExecution.createStepContribution();RepeatStatus exitStatus = tasklet.execute(contribution, null);assertEquals(RepeatStatus.FINISHED, exitStatus);assertEquals(ExitStatus.FAILED, contribution.getExitStatus());} catch (RuntimeException e) {assertEquals(""Execution of system command did not finish within the timeout"", e.getMessage());}}}"	Yes
185	"public class A {@Overridepublic void run() {try {logger.info(""Processing schedule MatchManagerTask...""+ matchManager.processEvent(null, IMatchManager.Event.SCHEDULED_EVENT));} catch (MatchManagerException e) {logger.error(""Error while processing scheduled MatchManager scheduled task.."");logger.error(""error"", e);}}}"	No
186	public class A {@Overridepublic void onClick(final AjaxRequestTarget target, final RemediationTO ignore) {try {RemediationRestClient.delete(model.getObject().getKey());SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));target.add(container);} catch (SyncopeClientException e) {SyncopeConsoleSession.get().onException(e);}((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);}}	Yes
187	"public class A {public void runIteration(Configuration conf,Path corpusInput,Path modelInput,Path modelOutput,int iterationNumber,int maxIterations,int numReduceTasks)throws IOException, ClassNotFoundException, InterruptedException {String jobName =String.format(""Iteration %d of %d, input path: %s"", iterationNumber, maxIterations, modelInput);log.info(""About to run: {}"", jobName);Job job =prepareJob(corpusInput,modelOutput,CachingCVB0Mapper.class,IntWritable.class,VectorWritable.class,VectorSumReducer.class,IntWritable.class,VectorWritable.class);job.setCombinerClass(VectorSumReducer.class);job.setNumReduceTasks(numReduceTasks);job.setJobName(jobName);setModelPaths(job, modelInput);HadoopUtil.delete(conf, modelOutput);if (!job.waitForCompletion(true)) {throw new InterruptedException(String.format(""Failed to complete iteration %d stage 1"", iterationNumber));}}}"	No
188	"public class A {@Beforepublic void setUp() throws Exception {log.debug("""");wiser = startWiser(smtpPort);setDriver(new ChromeDriver());getDriver().manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);getDriver().manage().window().setSize(new Dimension(1024, 900));}}"	Yes
189	"public class A {public Optional<QoSInterDirectPingMeasurement> getInterDirectPingMeasurementByMeasurement(final QoSInterDirectMeasurement measurement) {if (measurement == null) {throw new InvalidParameterException(""QoSIntraMeasurement"" + NULL_ERROR_MESSAGE);}try {return qoSInterDirectMeasurementPingRepository.findByMeasurement(measurement);} catch (final Exception ex) {throw new ArrowheadException(CoreCommonConstants.DATABASE_OPERATION_EXCEPTION_MSG);}}}"	Yes
190	"public class A {@Overridepublic void release() {ITransactionMember[] a;synchronized (m_memberMapLock) {a = getMembersNoLocking();m_memberMap.clear();}for (ITransactionMember mem : a) {try {LOG.debug(""release of transaction member '{}'. "", mem);mem.release();} catch (Throwable t) {LOG.error(""release member {}"", mem, t);}}}}"	No
191	"public class A {@SuppressWarnings({""unchecked""})private List<Object[]> getIdSizeList() {return (List<Object[]>)getDaoFactory().getDAO(Attachment.class).executeCallback(new HibernateCallback() {@Overridepublic Object doInHibernate(Session session)throws HibernateException, SQLException {if (log.isDebugEnabled()) {log.debug(""Configured Hibernate Dialect:\t"" + getHibernateDialect());}String sql = determineDialectSpecificQueryText(getHibernateDialect());return getFilesizeDataFromDB(session, sql);}private Object getFilesizeDataFromDB(Session session, String sql)throws SQLException {if (!sql.isEmpty()) {if (!isOracle()) {return session.createSQLQuery(sql).list();} else {return handleOracleDB(session, sql);}} else {return new ArrayList<Object[]>(0);}}private Object handleOracleDB(Session session, String sql) throws SQLException {session.createSQLQuery(sql).executeUpdate();Object retVal = null;long start_time = System.currentTimeMillis();final long MAX_DURATION = 180000;while (retVal == null&& ((System.currentTimeMillis() - start_time) < MAX_DURATION)) {try {retVal =session.createSQLQuery(""select dbid, dbms_lob.getlength(obj) from ""+ ORACLE_TEMP_TABLE_NAME).list();} catch (Exception e) {}}if (System.currentTimeMillis() - start_time > MAX_DURATION) {throw new SQLException(""Oracle DB takes to long to answer"");}return retVal;}});}}"	Yes
192	"public class A {private String typeParser(FieldType fieldType, String fieldName, Object fieldValue, String sql) {switch (fieldType) {case STRING:sql += fieldName + "" = "" + ""'"" + fieldValue + ""'"";break;case DATETIME:sql += fieldName + "" = "" + ""'"" + new DateTimeColumnParser().getValue(fieldValue) + ""'"";break;case INT32:case INT64:case FLOAT32:case FLOAT64:case BIG_INTEGER:sql += fieldName + "" = "" + fieldValue;break;default:log.error(""fieldType {} is illegal."", fieldType.toString());}return sql;}}"	No
193	"public class A {protected void writeCommand(byte[] message) throws SonyProjectorException {logger.debug(""writeCommand: {}"", HexUtils.bytesToHex(message));if (simu) {return;}OutputStream dataOut = this.dataOut;if (dataOut == null) {throw new SonyProjectorException(""writeCommand failed: output stream is null"");}try {dataOut.write(message);dataOut.flush();} catch (IOException e) {logger.debug(""writeCommand failed: {}"", e.getMessage());throw new SonyProjectorException(""writeCommand failed: "" + e.getMessage());}}}"	No
194	"public class A {NbtAddress[] getAllByName(Name name, InetAddress addr) throws UnknownHostException {int n;Configuration config = this.transportContext.getConfig();NameQueryRequest request = new NameQueryRequest(config, name);NameQueryResponse response = new NameQueryResponse(config);request.addr = addr != null ? addr : getWINSAddress();request.isBroadcast = request.addr == null;if (request.isBroadcast) {request.addr = this.baddr;n = config.getNetbiosRetryCount();} else {request.isBroadcast = false;n = 1;}do {try {send(request, response, config.getNetbiosRetryTimeout());} catch (InterruptedIOException ioe) {if (log.isTraceEnabled()) {log.trace(""Failed to send nameservice request for "" + name.name, ioe);}throw new UnknownHostException(name.name);} catch (IOException ioe) {log.info(""Failed to send nameservice request for "" + name.name, ioe);throw new UnknownHostException(name.name);}if (response.received && response.resultCode == 0) {return response.addrEntry;}} while (--n > 0 && request.isBroadcast);throw new UnknownHostException(name.name);}}"	No
195	public class A {@Overridepublic void onComplete(AsyncEvent asyncEvent) {if (Log.isTraceEnabled()) {}synchronized (connectionQueue) {connectionQueue.remove(connection);lastActivity = Instant.now();}SessionEventDispatcher.dispatchEvent(HttpSession.this, SessionEventDispatcher.EventType.connection_closed, connection, context);}}	Yes
196	"public class A {@Overridepublic void process(ClusterEvent event) {LOG.info(""START TaskPersistDataStage.process()"");long startTime = System.currentTimeMillis();WorkflowControllerDataProvider cache =event.getAttribute(AttributeName.ControllerDataProvider.name());HelixManager manager = event.getAttribute(AttributeName.helixmanager.name());cache.getTaskDataCache().persistDataChanges(manager.getHelixDataAccessor());long endTime = System.currentTimeMillis();}}"	Yes
197	"public class A {protected void configureProfile() {String profileFilename;FileUtil.createDirectory(FileUtil.getPreferencesPath());File profileFile;profileFilename = getConfigFileName().replaceFirst("".xml"", "".properties"");if (!new File(profileFilename).isAbsolute()) {profileFile = new File(FileUtil.getPreferencesPath() + profileFilename);} else {profileFile = new File(profileFilename);}ProfileManager.getDefault().setConfigFile(profileFile);if (System.getProperties().containsKey(ProfileManager.SYSTEM_PROPERTY)) {ProfileManager.getDefault().setActiveProfile(System.getProperty(ProfileManager.SYSTEM_PROPERTY));}if (!profileFile.exists()) {try {if (ProfileManager.getDefault().migrateToProfiles(getConfigFileName())) {log.info(Bundle.getMessage(""ConfigMigratedToProfile""));}} catch (IOException | IllegalArgumentException ex) {log.error(""Profiles not configurable. Using fallback per-application configuration. Error: {}"",ex.getMessage());}}try {if (ProfileManager.getStartingProfile() != null) {System.setProperty(""org.jmri.Apps.configFilename"", Profile.CONFIG_FILENAME);Profile profile = ProfileManager.getDefault().getActiveProfile();if (profile != null) {log.info(""Starting with profile {}"", profile.getId());} else {}} else {log.error(""Specify profile to use as command line argument."");}} catch (IOException ex) {log.info(""Profiles not configurable. Using fallback per-application configuration. Error: {}"",ex.getMessage());}}}"	Yes
198	public class A {private void log(String string) {Log.info(string);System.out.println(string);}}	No
199	public class A {public void attachClean(StgMBstnStatus instance) {try {sessionFactory.getCurrentSession().lock(instance, LockMode.NONE);} catch (RuntimeException re) {throw re;}}}	Yes
200	"public class A {private @Nullable DSMRConnectorErrorEvent open(DSMRSerialSettings portSettings, SerialPortIdentifier portIdentifier) {DSMRConnectorErrorEvent errorEvent = null;try {logger.trace(""Opening port {}"", serialPortName);SerialPort oldSerialPort = serialPortReference.get();SerialPort serialPort =portIdentifier.open(DSMRBindingConstants.DSMR_PORT_NAME, SERIAL_PORT_READ_TIMEOUT_MILLISECONDS);serialPort.setSerialPortParams(portSettings.getBaudrate(),portSettings.getDataBits(),portSettings.getStopbits(),portSettings.getParity());logger.trace(""SerialPort opened successful on {}"", serialPortName);open(serialPort.getInputStream());serialPort.addEventListener(this);serialPort.notifyOnDataAvailable(true);serialPort.notifyOnBreakInterrupt(true);serialPort.notifyOnFramingError(true);serialPort.notifyOnOverrunError(true);serialPort.notifyOnParityError(true);try {serialPort.enableReceiveThreshold(SERIAL_TIMEOUT_MILLISECONDS);} catch (UnsupportedCommOperationException e) {logger.debug(""Enable receive threshold is unsupported"");}try {serialPort.enableReceiveTimeout(SERIAL_TIMEOUT_MILLISECONDS);} catch (UnsupportedCommOperationException e) {logger.debug(""Enable receive timeout is unsupported"");}serialPort.setRTS(true);if (!serialPortReference.compareAndSet(oldSerialPort, serialPort)) {logger.warn(""Possible bug because a new serial port value was set during opening new port."");errorEvent = DSMRConnectorErrorEvent.INTERNAL_ERROR;}} catch (IOException ioe) {logger.debug(""Failed to get inputstream for serialPort"", ioe);errorEvent = DSMRConnectorErrorEvent.READ_ERROR;} catch (TooManyListenersException tmle) {errorEvent = DSMRConnectorErrorEvent.INTERNAL_ERROR;} catch (PortInUseException piue) {logger.debug(""Port already in use: {}"", serialPortName, piue);errorEvent = DSMRConnectorErrorEvent.IN_USE;} catch (UnsupportedCommOperationException ucoe) {logger.debug(""Port does not support requested port settings (invalid dsmr:portsettings parameter?):""+ "" {}"",serialPortName,ucoe);errorEvent = DSMRConnectorErrorEvent.NOT_COMPATIBLE;}return errorEvent;}}"	Yes
201	"public class A {@Overridepublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)throws IOException, ServletException {final HttpServletRequest req = (HttpServletRequest) request;final long startTime = currentTimeProvider.get();try {chain.doFilter(request, response);} finally {final long elapsedNS = currentTimeProvider.get() - startTime;final long elapsedMS = NANOSECONDS.toMillis(elapsedNS);if (elapsedNS >= threshold) {logger.warn(""Slow request: {} {} ({}ms)"", req.getMethod(), getFullUrl(req), elapsedMS);}}}}"	No
202	public class A {@Overridepublic Template getWsagObject(String serializedData) throws ParserException {Template template = null;try {template = mapper.readValue(serializedData, Template.class);} catch (JsonProcessingException e) {throw new ParserException(e);} catch (Throwable e) {throw new ParserException(e);}return template;}}	Yes
203	"public class A {public static com.liferay.portal.reports.engine.console.model.Source addSource(HttpPrincipal httpPrincipal,long groupId,java.util.Map<java.util.Locale, String> nameMap,String driverClassName,String driverUrl,String driverUserName,String driverPassword,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(SourceServiceUtil.class, ""addSource"", _addSourceParameterTypes0);MethodHandler methodHandler =new MethodHandler(methodKey,groupId,nameMap,driverClassName,driverUrl,driverUserName,driverPassword,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.reports.engine.console.model.Source) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
204	"public class A {protected boolean processInOnly(final Exchange exchange, final AsyncCallback callback) {final org.apache.camel.Message in = exchange.getIn();String destinationName = in.getHeader(SjmsConstants.JMS_DESTINATION_NAME, String.class);if (destinationName != null) {in.removeHeader(SjmsConstants.JMS_DESTINATION_NAME);}if (destinationName == null) {destinationName = endpoint.getDestinationName();}final String to = destinationName;MessageCreator messageCreator =new MessageCreator() {public Message createMessage(Session session) throws JMSException {Message answer = endpoint.getBinding().makeJmsMessage(exchange, in, session, null);Object jmsReplyTo = JmsMessageHelper.getJMSReplyTo(answer);if (endpoint.isDisableReplyTo()) {JmsMessageHelper.setJMSReplyTo(answer, null);} else {if (jmsReplyTo == null) {jmsReplyTo = exchange.getIn().getHeader(""JMSReplyTo"", String.class);if (jmsReplyTo == null) {jmsReplyTo = endpoint.getReplyTo();}}}if (jmsReplyTo != null&& !(endpoint.isPreserveMessageQos() || endpoint.isExplicitQosEnabled())) {if (LOG.isDebugEnabled()) {LOG.debug(""Disabling JMSReplyTo: {} for destination: {}. Use preserveMessageQos=true to""+ "" force Camel to keep the JMSReplyTo on endpoint: {}"",new Object[] {jmsReplyTo, to, endpoint});}jmsReplyTo = null;}if (jmsReplyTo instanceof String) {String replyTo = (String) jmsReplyTo;jmsReplyTo = resolveOrCreateDestination(replyTo, session);}Destination replyTo = null;String replyToOverride = endpoint.getReplyToOverride();if (replyToOverride != null) {replyTo = resolveOrCreateDestination(replyToOverride, session);} else if (jmsReplyTo != null) {replyTo = (Destination) jmsReplyTo;}if (replyTo != null) {LOG.debug(""Using JMSReplyTo destination: {}"", replyTo);JmsMessageHelper.setJMSReplyTo(answer, replyTo);} else {JmsMessageHelper.setJMSReplyTo(answer, null);}LOG.trace(""Created javax.jms.Message: {}"", answer);return answer;}};try {doSend(exchange, false, destinationName, messageCreator);} catch (Exception e) {exchange.setException(e);callback.done(true);return true;}setMessageId(exchange);callback.done(true);return true;}}"	Yes
205	"public class A {public void addSpatialFilter(String geometryWkt, Double inputRadius, String linearUnit, String spatialType) {Filter filter = null;try {if (geometryWkt == null || geometryWkt.isEmpty()) {return;}SpatialFilter spatialFilter = new SpatialFilter(geometryWkt);if (spatialType.equals(""CONTAINS"")) {filter = FILTER_FACTORY.within(Metacard.ANY_GEO, spatialFilter.getGeometry());} else if (spatialType.equals(""OVERLAPS"")) {filter = FILTER_FACTORY.intersects(Metacard.ANY_GEO, spatialFilter.getGeometry());} else if (spatialType.equals(""NEAREST_NEIGHBOR"")) {filter =FILTER_FACTORY.beyond(Metacard.ANY_GEO, spatialFilter.getGeometry(), 0.0, UomOgcMapping.METRE.name());} else if (spatialType.equals(""POINT_RADIUS"")) {Double normalizedRadius = convertRadius(linearUnit, inputRadius);filter =FILTER_FACTORY.dwithin(Metacard.ANY_GEO,spatialFilter.getGeometry(),normalizedRadius,UomOgcMapping.METRE.name());} else {return;}} catch (IllegalArgumentException e) {LOGGER.debug(""Invalid spatial query type specified.  Will not apply spatial filter."");return;}if (filter != null) {filters.add(filter);}}}"	No
206	"public class A {@Overridepublic List<AssetEntry> getInfoList(InfoListProviderContext infoListProviderContext, Pagination pagination, Sort sort) {AssetEntryQuery assetEntryQuery =getAssetEntryQuery(infoListProviderContext, ""ratings"", ""DESC"", pagination);try {return _assetEntryService.getEntries(assetEntryQuery);} catch (Exception exception) {_log.error(""Unable to get asset entries"", exception);}return Collections.emptyList();}}"	No
207	"public class A {private MCRILogicalStructMapTypeProvider getTypeProvider() {try {return MCRConfiguration2.<MCRDefaultLogicalStructMapTypeProvider>getClass(""MCR.Component.MetsMods.LogicalStructMapTypeProvider"").orElse(MCRDefaultLogicalStructMapTypeProvider.class).getDeclaredConstructor().newInstance();} catch (Exception e) {return new MCRDefaultLogicalStructMapTypeProvider();}}}"	Yes
208	public class A {@Overridepublic OutputStream append(String path) throws IOException {return updateFile(path, true);}}	Yes
209	"public class A {@Overridepublic void sendMessage(Message message, Role role) throws MessageException {log.debug(""Sending message to role "" + role);log.debug(""User Service : "" + Context.getUserService());List<Role> roles = new ArrayList<>();roles.add(role);Collection<User> users = Context.getUserService().getUsers(null, roles, false);log.debug(""Sending message "" + message + "" to "" + users);Context.getMessageService().sendMessage(message, users);}}"	No
210	"public class A {@Overridepublic void post(LogRecord event) {AppendLogResult<ScheduleIndex> result = facade.appendScheduleLog(event);int code = result.getCode();if (MessageProducerCode.SUCCESS != code) {throw new AppendException(""appendScheduleLogError"");}iterateCallback.apply(result.getAdditional());}}"	Yes
211	"public class A {@Test(groups = {""wso2.cep""},description = ""Testing the order: ExP, EP, ER, ES-1, ES-2"",dependsOnMethods = {""removeArtifactsTestScenario2""})public void addArtifactsTestScenario3() throws Exception {log.info(""=======================Testing the order: ExP, EP, ER, ES-1, ES-2=======================""+ "" "");eventStreamCount = eventStreamManagerAdminServiceClient.getEventStreamCount();eventReceiverCount = eventReceiverAdminServiceClient.getActiveEventReceiverCount();eventPublisherCount = eventPublisherAdminServiceClient.getActiveEventPublisherCount();executionPlanCount =eventProcessorAdminServiceClient.getActiveExecutionPlanConfigurationCount();log.info(""=======================Adding an execution plan ======================= "");String executionPlan = getExecutionPlanFromFile(""DeployArtifactsTestCase"", ""testPlan.siddhiql"");eventProcessorAdminServiceClient.addExecutionPlan(executionPlan);Assert.assertEquals(eventProcessorAdminServiceClient.getActiveExecutionPlanConfigurationCount(),executionPlanCount);String eventReceiverConfig =getXMLArtifactConfiguration(""DeployArtifactsTestCase"", ""PizzaOrder.xml"");eventReceiverAdminServiceClient.addEventReceiverConfiguration(eventReceiverConfig);Assert.assertEquals(eventReceiverAdminServiceClient.getActiveEventReceiverCount(), eventReceiverCount);String eventPublisherConfig =getXMLArtifactConfiguration(""DeployArtifactsTestCase"", ""PizzaDeliveryNotification.xml"");eventPublisherAdminServiceClient.addEventPublisherConfiguration(eventPublisherConfig);Assert.assertEquals(eventPublisherAdminServiceClient.getActiveEventPublisherCount(), eventPublisherCount);log.info(""=======================Adding a stream definition===================="");String pizzaStreamDefinition =getJSONArtifactConfiguration(""DeployArtifactsTestCase"", ""org.wso2.sample.pizza.order_1.0.0.json"");eventStreamManagerAdminServiceClient.addEventStreamAsString(pizzaStreamDefinition);Assert.assertEquals(eventStreamManagerAdminServiceClient.getEventStreamCount(), ++eventStreamCount);String outStreamDefinition =getJSONArtifactConfiguration(""DeployArtifactsTestCase"", ""outStream_1.0.0.json"");eventStreamManagerAdminServiceClient.addEventStreamAsString(outStreamDefinition);Assert.assertEquals(eventStreamManagerAdminServiceClient.getEventStreamCount(), ++eventStreamCount);Thread.sleep(1000);Assert.assertEquals(eventProcessorAdminServiceClient.getActiveExecutionPlanConfigurationCount(),++executionPlanCount);Assert.assertEquals(eventReceiverAdminServiceClient.getActiveEventReceiverCount(), ++eventReceiverCount);Assert.assertEquals(eventPublisherAdminServiceClient.getActiveEventPublisherCount(), ++eventPublisherCount);}}"	Yes
212	"public class A {@PostConstructprotected synchronized void init() {if (mangoProperties != null && mangoProperties.getBoolean(""properties.reloading"", true)) {Path path = mangoProperties.getEnvPropertiesPath();Path parent = path.getParent();try {if (Files.isDirectory(parent)) {this.watchService = parent.getFileSystem().newWatchService();parent.register(watchService,StandardWatchEventKinds.ENTRY_CREATE,StandardWatchEventKinds.ENTRY_MODIFY);this.scheduledTask =scheduledExecutorService.scheduleWithFixedDelay(this::doCheck, 10, 10, TimeUnit.SECONDS);}} catch (IOException e) {}}}}"	Yes
213	public class A {@VisibleForTestingio.prometheus.client.Gauge.Child gaugeFrom(Gauge gauge) {return new io.prometheus.client.Gauge.Child() {@Overridepublic double get() {final Object value = gauge.getValue();if (value == null) {return 0;}if (value instanceof Double) {return (double) value;}if (value instanceof Number) {return ((Number) value).doubleValue();}if (value instanceof Boolean) {return ((Boolean) value) ? 1 : 0;}return 0;}};}}	Yes
214	"public class A {private void offloadNode() throws InterruptedException {while (true) {final Future<Void> future =clusterCoordinator.requestNodeOffload(localNodeIdentifier, OffloadCode.OFFLOADED, ""Node is being decommissioned"");try {future.get();break;} catch (final ExecutionException e) {final Throwable cause = e.getCause();logger.error(""Failed when attempting to disconnect node from cluster"", cause);}}waitForState(new HashSet<>(Arrays.asList(NodeConnectionState.OFFLOADING, NodeConnectionState.OFFLOADED)));}}"	Yes
215	"public class A {@RuleAction(label = ""get the ring time limit"", description = ""Get the value of RING_TIME_LIMIT."")public @ActionOutput(name = ""getRingTimeLimit"", type = ""java.lang.String"") StringgetRingTimeLimit() {if (handler != null) {return handler.actionGetRingTimeLimit();} else {return """";}}}"	Yes
216	public class A {@Overridepublic void run() {emgrFactory.runInTrans(emgr -> {final EntityManager em = emgr.getEntityManager();final Set<String> alreadyReindexed = new HashSet<>();final List<Entry> entryList = map.get(obj.getClass());reindexDependents(em, obj, entryList, alreadyReindexed);final int size = alreadyReindexed.size();if (size >= 10) {}return null;});}}	Yes
217	public class A {public static void printAST(ASTNode node) {try {printAST(getHiveTokenMapping(), node, 0, 0);} catch (Exception e) {}System.out.println();}}	Yes
218	public class A {@BeforeMethod(alwaysRun = true)public void setUp() throws Exception {startTime = TimeUtil.getTimeWrtSystemTime(0);endTime = TimeUtil.addMinsToTime(startTime, 20);bundles[0] = BundleUtil.readELBundle();bundles[0] = new Bundle(bundles[0], cluster);bundles[0].generateUniqueBundle(this);bundles[0].setProcessWorkflow(aggregateWorkflowDir);bundles[0].setProcessValidity(startTime, endTime);bundles[0].setProcessPeriodicity(5, Frequency.TimeUnit.minutes);bundles[0].setOutputFeedPeriodicity(5, Frequency.TimeUnit.minutes);clusterName = Util.readEntityName(bundles[0].getDataSets().get(0));}}	Yes
219	"public class A {@Overridepublic void setup(ProfilerPluginSetupContext context) {if (context == null) {return;}final ElasticsearchPluginConfig elasticsearchPluginConfig =new ElasticsearchPluginConfig(context.getConfig());if (logger.isInfoEnabled()) {logger.info(""ElasticsearchPlugin config:{}"", elasticsearchPluginConfig);}if (!elasticsearchPluginConfig.isEnabled()) {return;}addElasticsearchInterceptors();addElasticsearchExecutorInterceptors();this.addParallelElasticsearchInterceptors();}}"	No
220	"public class A {public void waitForIO() throws HyracksDataException {logManager.log(waitLog);synchronized (this) {while (numActiveIOOps > 0) {try {wait();} catch (InterruptedException e) {Thread.currentThread().interrupt();throw HyracksDataException.create(e);}}if (numActiveIOOps < 0) {if (LOGGER.isErrorEnabled()) {LOGGER.error(""Number of IO operations cannot be negative for dataset: "" + this);}throw new IllegalStateException(""Number of IO operations cannot be negative"");}}}}"	No
221	"public class A {@Nullable@Overridepublic DeviceStateData apply(@Nullable List<T> data) {try {long lastActivityTime = getEntryValue(data, LAST_ACTIVITY_TIME, 0L);long inactivityAlarmTime = getEntryValue(data, INACTIVITY_ALARM_TIME, 0L);long inactivityTimeout =getEntryValue(data, INACTIVITY_TIMEOUT, TimeUnit.SECONDS.toMillis(defaultInactivityTimeoutInSec));boolean active = System.currentTimeMillis() < lastActivityTime + inactivityTimeout;DeviceState deviceState =DeviceState.builder().active(active).lastConnectTime(getEntryValue(data, LAST_CONNECT_TIME, 0L)).lastDisconnectTime(getEntryValue(data, LAST_DISCONNECT_TIME, 0L)).lastActivityTime(lastActivityTime).lastInactivityAlarmTime(inactivityAlarmTime).inactivityTimeout(inactivityTimeout).build();TbMsgMetaData md = new TbMsgMetaData();md.putValue(""deviceName"", device.getName());md.putValue(""deviceType"", device.getType());return DeviceStateData.builder().customerId(device.getCustomerId()).tenantId(device.getTenantId()).deviceId(device.getId()).deviceCreationTime(device.getCreatedTime()).metaData(md).state(deviceState).build();} catch (Exception e) {throw new RuntimeException(e);}}}"	Yes
222	"public class A {private static <T, ID> void addCreateSchemaStatements(DatabaseType databaseType,String schemaName,List<String> statements,List<String> queriesAfter,boolean ifNotExists,boolean logDetails) {StringBuilder sb = new StringBuilder(256);if (logDetails) {}sb.append(""CREATE SCHEMA "");if (ifNotExists && databaseType.isCreateIfNotExistsSupported()) {sb.append(""IF NOT EXISTS "");}databaseType.appendEscapedEntityName(sb, schemaName);databaseType.appendCreateSchemaSuffix(sb);statements.add(sb.toString());}}"	Yes
223	"public class A {@Overrideprotected void reduce(Text t, Iterable<VertexWritable> vertices, Context context)throws IOException, InterruptedException {Configuration conf = context.getConfiguration();log.debug(""{}"", t);boolean zero = false;int i = -1;int j = -1;double k = 0;int count = 0;for (VertexWritable v : vertices) {count++;if (v.getType().equals(conf.get(EigencutsKeys.AFFINITY_PATH))) {i = v.getRow();j = v.getCol();k = v.getValue();} else if (v.getValue() != 0.0) {zero = true;}}if (count == 2) {VertexWritable vw = new VertexWritable(i, j, k, ""unimportant"");context.write(new Text(String.valueOf(i)), vw);return;}VertexWritable outI = new VertexWritable();VertexWritable outJ = new VertexWritable();if (zero) {context.getCounter(CUTSCOUNTER.NUM_CUTS).increment(1);outI.setCol(i);outJ.setCol(j);VertexWritable zeroI = new VertexWritable();VertexWritable zeroJ = new VertexWritable();zeroI.setCol(j);zeroI.setValue(0);zeroJ.setCol(i);zeroJ.setValue(0);zeroI.setType(""unimportant"");zeroJ.setType(""unimportant"");context.write(new Text(String.valueOf(i)), zeroI);context.write(new Text(String.valueOf(j)), zeroJ);} else {outI.setCol(j);outJ.setCol(i);}outI.setValue(k);outJ.setValue(k);outI.setType(""unimportant"");outJ.setType(""unimportant"");context.write(new Text(String.valueOf(i)), outI);context.write(new Text(String.valueOf(j)), outJ);}}"	No
224	public class A {@Testpublic void rtreeTwoDimensionsInt() throws Exception {if (LOGGER.isInfoEnabled()) {}ISerializerDeserializer[] fieldSerdes = {IntegerSerializerDeserializer.INSTANCE,IntegerSerializerDeserializer.INSTANCE,IntegerSerializerDeserializer.INSTANCE,IntegerSerializerDeserializer.INSTANCE,IntegerSerializerDeserializer.INSTANCE};int numKeys = 4;IPrimitiveValueProviderFactory[] valueProviderFactories =RTreeUtils.createPrimitiveValueProviderFactories(numKeys, IntegerPointable.FACTORY);ITupleReference key = TupleUtils.createIntegerTuple(-1000, -1000, 1000, 1000);runTest(fieldSerdes, valueProviderFactories, numKeys, key, RTreePolicyType.RTREE);}}	Yes
225	public class A {private void closeZooKeeper(ZooKeeper zooKeeper) {try {zooKeeper.close();} catch (InterruptedException e) {Thread.currentThread().interrupt();}}}	Yes
226	"public class A {public void load() {loadFunctions(parentClassLoader, empty());if (loadCustomerUdfs) {try {if (!pluginDir.exists() && !pluginDir.isDirectory()) {return;}Files.find(pluginDir.toPath(), 1, (path, attributes) -> path.toString().endsWith("".jar"")).map(path -> UdfClassLoader.newClassLoader(path, parentClassLoader, blacklist)).forEach(classLoader -> loadFunctions(classLoader, Optional.of(classLoader.getJarPath())));} catch (final IOException e) {LOGGER.error(""Failed to load UDFs from location {}"", pluginDir, e);}}}}"	Yes
227	"public class A {private void writeErrorResponse(TransactionContext transactionContext, Application application, ByteBuf out) {SoaHeader soaHeader = transactionContext.getHeader();SoaException soaException = transactionContext.soaException();if (soaException == null) {soaException =new SoaException(soaHeader.getRespCode().get(),soaHeader.getRespMessage().orElse(SoaCode.ServerUnKnown.getMsg()));transactionContext.soaException(soaException);}if (out.readableBytes() > 0) {out.clear();}TSoaTransport transport = new TSoaTransport(out);SoaMessageProcessor messageProcessor = new SoaMessageProcessor(transport);try {messageProcessor.writeHeader(transactionContext);messageProcessor.writeMessageEnd();transport.flush();MdcCtxInfoUtil.putMdcToAppClassLoader(application.getAppClasssLoader(),SoaSystemEnvProperties.KEY_LOGGER_SESSION_TID,transactionContext.sessionTid().map(DapengUtil::longToHexStr).orElse(""0""));String infoLog =""response[seqId:""+ transactionContext.seqId()+ "", respCode:""+ soaHeader.getRespCode().get()+ ""]:""+ ""service[""+ soaHeader.getServiceName()+ ""]:version[""+ soaHeader.getVersionName()+ ""]:method[""+ soaHeader.getMethodName()+ ""]""+ (soaHeader.getOperatorId().isPresent()? "" operatorId:"" + soaHeader.getOperatorId().get(): """")+ (soaHeader.getUserId().isPresent() ? "" userId:"" + soaHeader.getUserId().get() : """");if (DapengUtil.isDapengCoreException(soaException)) {} else {}if (LOGGER.isDebugEnabled()) {}} catch (Throwable e) {} finally {container.requestCounter().decrementAndGet();MdcCtxInfoUtil.removeMdcToAppClassLoader(application.getAppClasssLoader(), SoaSystemEnvProperties.KEY_LOGGER_SESSION_TID);MDC.remove(SoaSystemEnvProperties.KEY_LOGGER_SESSION_TID);}}}"	Yes
228	"public class A {private synchronized CswSubscription deleteCswSubscription(String subscriptionId)throws CswException {String methodName = ""deleteCswSubscription"";LogSanitizer logSanitizedId = LogSanitizer.sanitize(subscriptionId);if (StringUtils.isEmpty(subscriptionId)) {throw new CswException(""Unable to delete subscription because subscription ID is null or empty"");}CswSubscription subscription = getSubscription(subscriptionId);try {LOGGER.debug(""Removing (unregistering) subscription: {}"", logSanitizedId);ServiceRegistration sr = registeredSubscriptions.remove(subscriptionId);if (sr != null) {sr.unregister();} else {}Configuration subscriptionConfig = getSubscriptionConfiguration(subscriptionId);try {if (subscriptionConfig != null) {subscriptionConfig.delete();} else {}} catch (IOException e) {}} catch (Exception e) {}return subscription;}}"	Yes
229	"public class A {public void routine(String schemaName,String routineName,String language,Routine.CallingConvention callingConvention) {LOG.trace(""routine: {}.{} "", schemaName, routineName);Routine routine = Routine.create(ais, schemaName, routineName, language, callingConvention);}}"	No
230	public class A {@Overridepublic void esbJobFactoryAdded(TalendESBJobFactory esbJobFactory, String name) {MultiThreadedOperation op =new MultiThreadedOperation(esbJobFactory, name, endpointRegistry, executorService);operations.put(name, op);if (esbJobFactory instanceof TalendESBJob) {((TalendESBJob) esbJobFactory).setEndpointRegistry(endpointRegistry);}}}	Yes
231	"public class A {protected void cleanUnusedHBaseTables() throws IOException {if (""hbase"".equals(config.getStorageUrl().getScheme())&& !"""".equals(config.getMetadataUrl().getScheme())) {final int deleteTimeoutMin = 2;try {Class hbaseCleanUpUtil =Class.forName(""org.apache.kylin.rest.job.StorageCleanJobHbaseUtil"");Method cleanUnusedHBaseTables =hbaseCleanUpUtil.getDeclaredMethod(""cleanUnusedHBaseTables"", boolean.class, int.class, int.class);hbaseGarbageTables =(List<String>)cleanUnusedHBaseTables.invoke(hbaseCleanUpUtil, delete, deleteTimeoutMin, threadsNum);} catch (Throwable e) {logger.error(""Error during HBase clean up"", e);}}}}"	No
232	"public class A {public static void printSkipNotice(String fixtureId, File fixtureFile) {try {log.info(""Skipping ""+ fixtureId+ "" tests. Fixture file ""+ fixtureFile.getCanonicalPath()+ "" not found."");} catch (Exception e) {}}}"	Yes
233	"public class A {protected static void clearReferences() {Enumeration<Driver> drivers = DriverManager.getDrivers();while (drivers.hasMoreElements()) {Driver driver = drivers.nextElement();if (driver.getClass().getClassLoader() == getInstance()) {try {DriverManager.deregisterDriver(driver);} catch (SQLException e) {log.warn(""SQL driver deregistration failed"", e);}}}for (WeakReference<Class<?>> refClazz : getInstance().cachedClasses.values()) {if (refClazz == null) {continue;}Class<?> clazz = refClazz.get();if (clazz != null && clazz.getName().contains(""openmrs"")) {try {Field[] fields = clazz.getDeclaredFields();for (int i = 0; i < fields.length; i++) {Field field = fields[i];int mods = field.getModifiers();if (field.getType().isPrimitive() || (field.getName().indexOf(""$"") != -1)) {continue;}if (Modifier.isStatic(mods)) {try {if (clazz.equals(OpenmrsClassLoader.class) && ""log"".equals(field.getName())) {continue;}field.setAccessible(true);if (Modifier.isFinal(mods)) {if (!(field.getType().getName().startsWith(""javax.""))) {nullInstance(field.get(null));}} else {field.set(null, null);if (log.isDebugEnabled()) {}}} catch (Exception t) {if (log.isDebugEnabled()) {log.debug(""Could not set field ""+ field.getName()+ "" to null in class ""+ clazz.getName(),t);}}}}} catch (Exception t) {if (log.isDebugEnabled()) {log.debug(""Could not clean fields for class "" + clazz.getName(), t);}}}}OpenmrsClassLoader.log = null;getInstance().cachedClasses.clear();}}"	Yes
234	"public class A {@Overrideprotected void doWork(int count) throws Exception {ClientMessage m = this.consumer.receive(1000);logger.debug(""consumer "" + id + "" got m: "" + m);if (m != null) {receivedMessages.add(m);m.acknowledge();session.commit();logger.debug("" consumer ""+ id+ "" acked ""+ m.getClass().getName()+ ""now total received: ""+ receivedMessages.size());}}}"	No
235	"public class A {@RequestMapping(value = ""/all"", method = RequestMethod.GET)public List<ModuleTypeDto> getModuleTypes() {List<ModuleType> moduleTypes = moduleTypeService.findModuleTypes();List<ModuleTypeDto> moduleTypeDtos =moduleTypeToModuleTypeDtoConverter.convertToList(moduleTypes);return moduleTypeDtos;}}"	Yes
236	public class A {@Overridepublic void updateSensorState(FullSensor sensor, StateUpdate stateUpdate) {if (hueBridge != null) {hueBridge.setSensorState(sensor, stateUpdate).thenAccept(result -> {try {hueBridge.handleErrors(result);} catch (Exception e) {handleSensorUpdateException(sensor, e);}}).exceptionally(e -> {handleSensorUpdateException(sensor, e);return null;});} else {}}}	Yes
237	public class A {@Overridepublic void paint(Graphics2D g2d) {super.paint(g2d);if (LOGGER.isTraceEnabled()) {for (TimelineLayer layer : myLayers) {long t0 = System.nanoTime();layer.paint(g2d);}} else {for (TimelineLayer layer : myLayers) {layer.paint(g2d);}}}}	Yes
238	"public class A {@Overrideprotected void jumpToItem(int itemIndex) throws Exception {if (driverSupportsAbsolute) {try {rs.absolute(itemIndex);} catch (SQLException e) {log.warn(""The JDBC driver does not appear to support ResultSet.absolute(). Consider""+ "" reverting to the default behavior setting the driverSupportsAbsolute to false"",e);moveCursorToRow(itemIndex);}} else {moveCursorToRow(itemIndex);}}}"	No
239	"public class A {@Overridepublic void destroy() throws ResourceException {if (logger.isTraceEnabled()) {ActiveMQRALogger.LOGGER.trace(""destroy()"");}if (isDestroyed.get() || connection == null) {return;}isDestroyed.set(true);try {connection.setExceptionListener(null);} catch (JMSException e) {logger.debug(""Error unsetting the exception listener "" + this, e);}connection.signalStopToAllSessions();try {if (connectionFactory != null) {ra.closeConnectionFactory(mcf.getProperties());}} catch (Exception e) {logger.debug(e.getMessage(), e);}destroyHandles();try {try {connection.close();if (nonXAsession != null) {nonXAsession.close();}if (xaSession != null) {xaSession.close();}} catch (JMSException e) {ActiveMQRALogger.LOGGER.debug(""Error closing session "" + this, e);}} catch (Throwable e) {throw new ResourceException(""Could not properly close the session and connection"", e);}}}"	No
240	"public class A {public CompletableFuture<Void> checkAndReconnect(Throwable t) {LOG.error(""Exception calling mesos ({} so far)"", failedMesosCalls.incrementAndGet(), t);String message = t.getMessage();if (t instanceof Mesos4xxException && message.contains(""403"")) {return CompletableFuture.runAsync(() -> scheduler.onUncaughtException(new PrematureChannelClosureException()),executorService);}return CompletableFuture.completedFuture(null);}}"	No
241	"public class A {@Testpublic void testOperationWithProfiledDatatypeParam() {IParser p = ourCtx.newXmlParser();Parameters outParams = new Parameters();outParams.addParameter().setValue(new StringType(""STRINGVALOUT1""));outParams.addParameter().setValue(new StringType(""STRINGVALOUT2""));final String respString = p.encodeResourceToString(outParams);ourResponseContentType = Constants.CT_FHIR_XML + ""; charset=UTF-8"";ourResponseBody = respString;IGenericClient client = ourCtx.newRestfulGenericClient(""http://localhost:"" + ourPort + ""/fhir"");client.operation().onInstance(new IdType(""http://foo/Patient/1"")).named(""validate-code"").withParameter(Parameters.class, ""code"", new CodeType(""8495-4"")).andParameter(""system"", new UriType(""http://loinc.org"")).useHttpGet().execute();assertEquals(""http://localhost:""+ ourPort+ ""/fhir/Patient/1/$validate-code?code=8495-4&system=http%3A%2F%2Floinc.org"",ourRequestUri);client.operation().onInstance(new IdType(""http://foo/Patient/1"")).named(""validate-code"").withParameter(Parameters.class, ""code"", new CodeType(""8495-4"")).andParameter(""system"", new UriType(""http://loinc.org"")).encodedXml().execute();assertEquals(""http://localhost:"" + ourPort + ""/fhir/Patient/1/$validate-code"", ourRequestUri);assertEquals(""<Parameters xmlns=\""http://hl7.org/fhir\""><parameter><name value=\""code\""/><valueCode""+ "" value=\""8495-4\""/></parameter><parameter><name value=\""system\""/><valueUri""+ "" value=\""http://loinc.org\""/></parameter></Parameters>"",ourRequestBodyString);}}"	Yes
242	public class A {@Overrideprotected void afterTest() throws Exception {super.afterTest();setOut(sysOut);resetTestOut();}}	Yes
243	public class A {public void stopContext() {if (_context != null && _publisher != null) {try {_publisher.destroy(_context);} catch (Exception e) {LOGGER.error(e);}}}}	No
244	public class A {public void moveEyelids(double eyelidleftPos, double eyelidrightPos) {if (head != null) {head.moveEyelidsTo(eyelidleftPos, eyelidrightPos);} else {}}}	Yes
245	"public class A {public String getStatisticsType(Integer statisticTypeId, List<StatisticImageListDto> statisticImageList) throws DAOException {LOGGER.entry(""begin getStatisticsType()"");String statisticType = """";try {if ((statisticImageList != null) && !statisticImageList.isEmpty()) {for (StatisticImageListDto statistic : statisticImageList) {if (statisticTypeId.intValue() == statistic.getStatisticImageId().intValue()) {statisticType = statistic.getValue();break;}}}} catch (Exception e) {}LOGGER.exit(""getStatisticsType() :: Ends"");return statisticType;}}"	Yes
246	"public class A {@Overridepublic void abortJob(JobContext jobContext, State state) throws IOException {if (outputMap.isEmpty()) {return;}if (LOG.isDebugEnabled()) {LOG.debug(MessageFormat.format(""Start Direct I/O output job abort: job={0} ({1}), state={2}"",jobContext.getJobID(), jobContext.getJobName(), state));}long t0 = System.currentTimeMillis();if (state == State.FAILED) {doCleanupJob(jobContext);}if (LOG.isInfoEnabled()) {long t1 = System.currentTimeMillis();}}}"	Yes
247	"public class A {@Testpublic void testSMILESFileWithSpacesAndTabs() throws Exception {String filename = ""data/smiles/tabs.smi"";InputStream ins = this.getClass().getClassLoader().getResourceAsStream(filename);IteratingSMILESReader reader =new IteratingSMILESReader(ins, DefaultChemObjectBuilder.getInstance());int molCount = 0;while (reader.hasNext()) {Object object = reader.next();Assert.assertNotNull(object);assertTrue(object instanceof IAtomContainer);molCount++;}Assert.assertEquals(5, molCount);reader.close();}}"	Yes
248	public class A {private Properties loadRawGitProperties(String loc) {Properties p = new Properties();try (InputStream in = getClass().getResourceAsStream(loc)) {p.load(in);} catch (Exception e) {}return p;}}	Yes
249	"public class A {@Overrideprotected Void doInBackground() throws Exception {ExecutorService executor = null;try {Set<String> control = new HashSet<>();executor = Executors.newWorkStealingPool();CompletionService<Void> completionService = new ExecutorCompletionService<>(executor);List<Runnable> runnables = new ArrayList<>();for (String queryName : queries) {for (String start : origin) {for (String end : destiny) {String id =Arrays.asList(start, end).stream().sorted().collect(Collectors.joining(""_""))+ ""_""+ queryName;if (control.add(id) && !start.equals(end)) {SearchLinkRunnable subWorker = new SearchLinkRunnable(this, queryName, start, end);runnables.add(subWorker);total++;}}}}app.setStatus(Messages.getString(""GraphAnalysis.LinksSearching"", found));for (Runnable runnable : runnables) {completionService.submit(runnable, null);}while (done < total) {completionService.take();}} catch (Exception e) {} finally {if (executor != null) {executor.shutdown();}}return null;}}"	Yes
250	"public class A {@Overridepublic Date getAlertSystemRecoverTime() {try {return configDao.getByKey(KEY_ALERT_SYSTEM_ON).getUntil();} catch (DalException e) {logger.error(""[getAlertSystemRecovertIME]"", e);return null;}}}"	No
251	"public class A {private void setUpKubernetes() {System.setProperty(""kubernetes.auth.tryKubeConfig"", ""false"");log.info(""Creating k8s namespace: {}"", testNamespace);k8s = StyxScheduler.getKubernetesClient(schedulerConfig, ""default"");k8s.namespaces().createNew().withNewMetadata().withName(testNamespace).endMetadata().done();}}"	No
252	"public class A {@UsedAsLiferayActionpublic void unscheduleAllServices(ActionRequest request, ActionResponse response)throws PortletException, IOException {try {User user = UserCacheHolder.getUserFromRequest(request);RequestStatus requestStatus =new ThriftClients().makeScheduleClient().unscheduleAllServices(user);setSessionMessage(request, requestStatus, ""Every task"", ""unschedule"");} catch (TException e) {}}}"	Yes
253	"public class A {@Overridepublic void sessionDestroyed(HttpSessionEvent se) {LOG.debug(""Removing session {} from SSO client session store"", se.getSession().getId());ServletContext servletContext = se.getSession().getServletContext();SessionStore sessionStore = getInstance(SessionStore.class, servletContext);if (sessionStore == null) {} else {SsoClientPrincipal principal = (SsoClientPrincipal) se.getSession().getAttribute(""principal"");if (principal != null) {ServerClient client = getInstance(ServerClient.class, servletContext);if (client != null) {client.unregisterClient(principal.getToken(), principal.getClientUrl());}}sessionStore.removeSessionById(se.getSession().getId());}}}"	Yes
254	"public class A {protected Set<String> invokeMBean() {Set<String> list = new HashSet<>();try {@SuppressWarnings(""unchecked"")List<Map<String, Object>> containers =(List<Map<String, Object>>)mBeanServer.invoke(fabricMBean,""containers"",new Object[] {Arrays.asList(""localHostname"", ""localIp"", ""manualIp"", ""publicHostname"", ""publicIp"")},new String[] {List.class.getName()});LOG.debug(""Returned containers from MBean: {}"", containers);for (Map<String, Object> container : containers) {for (Object value : container.values()) {if (value != null && Strings.isNotBlank(value.toString())) {list.add(value.toString());}}}LOG.debug(""Extracted allowlist: {}"", list);} catch (InstanceNotFoundException | MBeanException | ReflectionException e) {}return list;}}"	Yes
255	public class A {private void prepareSalt(PasswordSaltExtensionMessage msg) {msg.setSalt(chooser.getConfig().getDefaultServerPWDSalt());}}	Yes
256	public class A {@Overrideprotected final void dispatchWriteEvent(SelectionKey key) {Session session = (Session) key.attachment();if (session != null) {((NioSession) session).onEvent(EventType.WRITEABLE, key.selector());} else {}}}	Yes
257	public class A {public synchronized void writeConfigurationFile(Path xmlFilePath) {xmlDatenSchreiben(xmlFilePath);}}	Yes
258	"public class A {private boolean isReachableAndValidHueBridge(BridgeJsonParameters bridge) {String host = bridge.getInternalIpAddress();String id = bridge.getId();String description;if (host == null) {logger.debug(""Bridge not discovered: ip is null"");return false;}if (id == null) {logger.debug(""Bridge not discovered: id is null"");return false;}if (id.length() < 10) {logger.debug(""Bridge not discovered: id {} is shorter then 10."", id);return false;}if (!id.substring(6, 10).equals(BRIDGE_INDICATOR)) {logger.debug(""Bridge not discovered: id {} does not contain bridge indicator {} or its at the wrong""+ "" position."",id,BRIDGE_INDICATOR);return false;}try {description = doGetRequest(DESC_URL_PATTERN.replace(""HOST"", host));} catch (IOException e) {logger.debug(""Bridge not discovered: Failure accessing description file for ip: {}"", host);return false;}if (!description.contains(MODEL_NAME_PHILIPS_HUE)) {return false;}return true;}}"	Yes
259	"public class A {public void addDomain(final String domainId, final RepositoryFile child) {final Map<String, RepositoryFile> details = getDetails(domainId, true);if (details.get(DOMAIN_ID_KEY) != null) {log.warn(""Adding domain when one already exists"");}details.put(DOMAIN_ID_KEY, child);}}"	No
260	"public class A {private Object getSingleton(final Method method) throws IllegalArgumentException {final Class<?> typeRef = method.getReturnType();final Singleton singleton = method.getAnnotation(Singleton.class);final URI uri = buildEntitySetURI(singleton.name(), service).build();final EntityUUID uuid = new EntityUUID(uri, typeRef);LOG.debug(""Ask for singleton '{}'"", typeRef.getSimpleName());EntityInvocationHandler handler = getContext().entityContext().getEntity(uuid);if (handler == null) {final ClientEntity entity =getClient().getObjectFactory().newEntity(new FullQualifiedName(typeRef.getAnnotation(Namespace.class).value(),ClassUtils.getEntityTypeName(typeRef)));handler = EntityInvocationHandler.getInstance(entity, uri, uri, typeRef, service);} else if (isDeleted(handler)) {handler = null;}return handler == null? null: Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(), new Class<?>[] {typeRef}, handler);}}"	Yes
261	"public class A {protected CloseableHttpResponse postOverHttp(Object dataToPost, String pathSuffix) {CloseableHttpResponse httpResponse = null;HttpPost httpPostRequest;httpPostRequest = new HttpPost(fluxEndpoint + pathSuffix);try {final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();objectMapper.writeValue(byteArrayOutputStream, dataToPost);httpPostRequest.setEntity(new ByteArrayEntity(byteArrayOutputStream.toByteArray(), ContentType.APPLICATION_JSON));httpResponse = closeableHttpClient.execute(httpPostRequest);final int statusCode = httpResponse.getStatusLine().getStatusCode();if (statusCode >= Response.Status.OK.getStatusCode()&& statusCode < Response.Status.MOVED_PERMANENTLY.getStatusCode()) {metricRegistry.meter(new StringBuilder().append(""stateMachines.forwardToOrchestrator.2xx"").toString()).mark();} else {if (statusCode >= Response.Status.BAD_REQUEST.getStatusCode()&& statusCode < Response.Status.INTERNAL_SERVER_ERROR.getStatusCode()) {metricRegistry.meter(new StringBuilder().append(""stateMachines.forwardToOrchestrator.4xx"").toString()).mark();} else if (statusCode >= Response.Status.INTERNAL_SERVER_ERROR.getStatusCode()&& statusCode < Response.Status.HTTP_VERSION_NOT_SUPPORTED.getStatusCode()) {metricRegistry.meter(new StringBuilder().append(""stateMachines.forwardToOrchestrator.5xx"").toString()).mark();}HttpClientUtils.closeQuietly(httpResponse);throw new RuntimeCommunicationException(""Did not receive a valid response from Flux core"");}} catch (IOException e) {HttpClientUtils.closeQuietly(httpResponse);throw new RuntimeCommunicationException(""Could not communicate with Flux runtime: "" + fluxEndpoint);}return httpResponse;}}"	Yes
262	"public class A {protected void synchronizePage(int page, int pageSize) {Events events =eventService.getAnonymousEventsForSync(pageSize, skipChangedBefore, psdesWithSkipSyncTrue);filterOutDataValuesMarkedWithSkipSynchronizationFlag(events);log.info(String.format(""Synchronizing page %d with page size %d"", page, pageSize));if (log.isDebugEnabled()) {log.debug(""Events that are going to be synchronized are: "" + events);}if (sendSyncRequest(events)) {List<String> eventsUIDs =events.getEvents().stream().map(Event::getEvent).collect(Collectors.toList());eventService.updateEventsSyncTimestamp(eventsUIDs, new Date(clock.getStartTime()));} else {syncResult = false;}}}"	Yes
263	"public class A {@Testpublic void testWithGeometryCollection()throws CatalogTransformerException, IOException, ParseException {Date now = new Date();MetacardImpl metacard = new MetacardImpl();metacard.setLocation(""GEOMETRYCOLLECTION(POINT(4 6),LINESTRING(4 6,7 10))"");setupBasicMetacard(now, metacard);GeoJsonMetacardTransformer transformer = new GeoJsonMetacardTransformer();BinaryContent content = transformer.transform(metacard, null);assertEquals(content.getMimeTypeValue(), GeoJsonMetacardTransformer.DEFAULT_MIME_TYPE.getBaseType());String jsonText = new String(content.getByteArray());LOGGER.debug(jsonText);Object object = PARSER.parse(jsonText);JSONObject obj2 = (JSONObject) object;Map geometryMap = (Map) obj2.get(""geometry"");assertThat(geometryMap.get(CompositeGeometry.TYPE_KEY).toString(), is(GeometryCollection.TYPE));assertThat(geometryMap.get(CompositeGeometry.GEOMETRIES_KEY), notNullValue());verifyBasicMetacardJson(now, obj2);}}"	No
264	"public class A {public static ResponseEntity<Object> httpResponseForInternalServerError() {logger.entry(""AppUtil - httpResponseForInternalServerError() :: starts"");ErrorBean errorBean = null;try {errorBean =new ErrorBean().setCode(ErrorCode.EC_500.code()).setMessage(ErrorCode.EC_500.errorMessage());} catch (Exception e) {}logger.exit(""AppUtil - httpResponseForInternalServerError() :: ends"");return new ResponseEntity<>(errorBean, HttpStatus.INTERNAL_SERVER_ERROR);}}"	Yes
265	"public class A {private void doTestDeadlock(boolean near0, boolean near1) throws Exception {IgniteCache<Integer, Integer> cache0 = null;IgniteCache<Integer, Integer> cache1 = null;try {cache0 = getCache(ignite(0), ""cache0"", near0);cache1 = getCache(ignite(0), ""cache1"", near1);awaitPartitionMapExchange();final CyclicBarrier barrier = new CyclicBarrier(2);final AtomicInteger threadCnt = new AtomicInteger();final AtomicBoolean deadlock = new AtomicBoolean();IgniteInternalFuture<Long> fut =GridTestUtils.runMultiThreadedAsync(new Runnable() {@Overridepublic void run() {int threadNum = threadCnt.getAndIncrement();Ignite ignite = ignite(0);IgniteCache<Integer, Integer> cache1 =ignite.cache(""cache"" + (threadNum == 0 ? 0 : 1));IgniteCache<Integer, Integer> cache2 =ignite.cache(""cache"" + (threadNum == 0 ? 1 : 0));try (Transaction tx =ignite.transactions().txStart(PESSIMISTIC, REPEATABLE_READ, 500, 0)) {int key1 = primaryKey(cache1);cache1.put(key1, 0);barrier.await();int key2 = primaryKey(cache2);log.info("">>> Performs put [node=""+ ((IgniteKernal) ignite).localNode()+ "", tx=""+ tx+ "", key=""+ key2+ "", cache=""+ cache2.getName()+ ']');cache2.put(key2, 1);tx.commit();} catch (Throwable e) {if (hasCause(e, TransactionTimeoutException.class)&& hasCause(e, TransactionDeadlockException.class)) {if (deadlock.compareAndSet(false, true))}}}},2,""tx-thread"");fut.get();assertTrue(deadlock.get());for (int i = 0; i < NODES_CNT; i++) {Ignite ignite = ignite(i);IgniteTxManager txMgr = ((IgniteKernal) ignite).context().cache().context().tm();Collection<IgniteInternalFuture<?>> futs = txMgr.deadlockDetectionFutures();assertTrue(futs.isEmpty());}} finally {if (cache0 != null) cache0.destroy();if (cache1 != null) cache1.destroy();}}}"	Yes
266	"public class A {@Overridepublic Iterator iterator() {final App app = StructrApp.getInstance(fs.getSecurityContext());final List<StructrPath> nodes = new LinkedList<>();try (final Tx tx = app.tx()) {for (final SchemaMethod schemaMethod : schemaNode.getProperty(SchemaNode.schemaMethods)) {String name = schemaMethod.getProperty(SchemaMethod.virtualFileName);if (name == null) {name = schemaMethod.getName();}nodes.add(new StructrSchemaMethodPath(fs, StructrSchemaMethodsPath.this, schemaNode, name));}tx.success();} catch (FrameworkException fex) {logger.warn("""", fex);}return nodes.iterator();}}"	No
267	"public class A {public static Optional<Geometry> wktToGeometry(String wkt, WKTReader wktReader) {try {return Optional.of(wktReader.read(wkt));} catch (ParseException e) {LOGGER.debug(""unable to convert WKT to a Geometry object: wkt={}"", wkt, e);}return Optional.empty();}}"	No
268	"public class A {public void waitElement(Integer index) {final String locator = getLocatorWithParameters(getElementMap().locator()[index].toString());final By by = ByConverter.convert(getElementMap().locatorType(), locator);final long startedTime = GregorianCalendar.getInstance().getTimeInMillis();Date startWaitTotal = GregorianCalendar.getInstance().getTime();while (true) {try {waitThreadSleep(BehaveConfig.getRunner_ScreenMinWait());getDriver().manage().timeouts().implicitlyWait(getImplicitlyWaitTimeoutInMilliseconds(), TimeUnit.MILLISECONDS);waitLoading();Date endLoading = GregorianCalendar.getInstance().getTime();Long diffLoading = endLoading.getTime() - startWaitTotal.getTime();logStatistics(""O tempo para esperar o LOADING foi de ["" + diffLoading + ""ms]"");getDriver().manage().timeouts().implicitlyWait(getImplicitlyWaitTimeoutInMilliseconds(), TimeUnit.MILLISECONDS);waitClickable(by);Date endClickable = GregorianCalendar.getInstance().getTime();Long diffClickable = endClickable.getTime() - endLoading.getTime();Long diffTotal = endClickable.getTime() - startWaitTotal.getTime();logStatistics(""O tempo para esperar o CLICKABLE foi de [""+ diffClickable+ ""ms] e total foi de [""+ diffTotal+ ""ms]"");getDriver().manage().timeouts().implicitlyWait(getImplicitlyWaitTimeoutInMilliseconds(), TimeUnit.MILLISECONDS);waitVisibility(by);Date endVisibility = GregorianCalendar.getInstance().getTime();Long diffVisibility = endVisibility.getTime() - endClickable.getTime();diffTotal = endVisibility.getTime() - startWaitTotal.getTime();logStatistics(""O tempo para esperar o VISIBILITY foi de [""+ diffVisibility+ ""ms] e total foi de [""+ diffTotal+ ""ms]"");break;} catch (Exception e) {} finally {getDriver().manage().timeouts().implicitlyWait(BehaveConfig.getRunner_ScreenMaxWait(), TimeUnit.MILLISECONDS);if (GregorianCalendar.getInstance().getTimeInMillis() - startedTime> BehaveConfig.getRunner_ScreenMaxWait()) {throw new BehaveException(message.getString(""exception-element-not-found"", getElementMap().name()));}}}}}"	Yes
269	"public class A {@Overridepublic void clearExpiredSites() {logger.debug(""Clearing expired approved sites"");Collection<ApprovedSite> expiredSites = getExpired();if (expiredSites.size() > 0) {logger.info(""Found "" + expiredSites.size() + "" expired approved sites."");}if (expiredSites != null) {for (ApprovedSite expired : expiredSites) {remove(expired);}}}}"	No
270	public class A {@Overridepublic void removeTaskManager(InstanceID instanceId) {Preconditions.checkNotNull(instanceId);final FineGrainedTaskManagerRegistration taskManager =Preconditions.checkNotNull(taskManagerRegistrations.remove(instanceId));totalRegisteredResource = totalRegisteredResource.subtract(taskManager.getTotalResource());for (AllocationID allocationId : taskManager.getAllocatedSlots().keySet()) {slots.remove(allocationId);}}}	Yes
271	"public class A {@Overridepublic void createFolder(ITransaction transaction, String folderUri) {folderUri = removeTrailingSlash(folderUri);int ind = folderUri.lastIndexOf('/');String parentUri = folderUri.substring(0, ind + 1);String resourceName = folderUri.substring(ind + 1);try {logger.debug(""WebDAV create folder at: "" + parentUri);ResolvedRequest resolvedParent = resolveRequest(parentUri);logger.debug(""WebDAV create folder at: "" + resolvedParent);if (resolvedParent.getPath() == null) {if (resolvedParent.getRepositoryName() == null) {throw new WebdavException(WebdavI18n.cannotCreateRepository.text(resourceName));}if (resolvedParent.getWorkspaceName() != null) {resolvedParent = resolvedParent.withPath(""/"");} else {I18n msg = WebdavI18n.cannotCreateWorkspaceInRepository;throw new WebdavException(msg.text(resourceName, resolvedParent.getRepositoryName()));}}Node parentNode = nodeFor(transaction, resolvedParent);contentMapper.createFolder(parentNode, resourceName);} catch (RepositoryException re) {throw translate(re);}}}"	No
272	"public class A {public synchronized void unbindHook(ServiceReference<DeploymentHook> hook) {final Object rawHookId = hook.getProperty(ConfigurationService.KURA_SERVICE_PID);if (!(rawHookId instanceof String)) {return;}final String hookId = (String) rawHookId;final DeploymentHook removedHook = this.registeredHooks.remove(hookId);updateAssociations();if (removedHook != null) {getBundleContext().ungetService(hook);logger.info(""Hook unregistered: {}"", hookId);}}}"	No
273	"public class A {@Testpublic void testProperties() throws Exception {Logger logger = LogManager.getLogger(""test"");File file = new File(""target/temp.A1"");assertTrue(""File A1 was not created"", file.exists());assertTrue(""File A1 is empty"", file.length() > 0);file = new File(""target/temp.A2"");assertTrue(""File A2 was not created"", file.exists());assertTrue(""File A2 is empty"", file.length() > 0);}}"	Yes
274	public class A {private void addStandbySession(Session session,InetSocketAddress mainNodeAddress,InetSocketAddress lastResolvedMainAddr,InetSocketAddressWrapper addrWrapper) {InetSocketAddress remoteSocketAddress = session.getRemoteSocketAddress();if (lastResolvedMainAddr != null && !lastResolvedMainAddr.equals(remoteSocketAddress)) {List<Session> sessions = standbySessionMap.remove(lastResolvedMainAddr);if (sessions != null) {for (Session s : sessions) {((MemcachedSession) s).setAllowReconnect(false);s.close();}}addrWrapper.setResolvedMainNodeSocketAddress(remoteSocketAddress);}List<Session> sessions = this.standbySessionMap.get(mainNodeAddress);if (sessions == null) {sessions = new CopyOnWriteArrayList<Session>();List<Session> oldSessions = this.standbySessionMap.putIfAbsent(mainNodeAddress, sessions);if (null != oldSessions) {sessions = oldSessions;}}sessions.add(session);}}	Yes
275	"public class A {public String getReplicationConnectionURI() {try {return getConfigConnectionURI(replicationMysql);} catch (URISyntaxException e) {throw new RuntimeException(""Unable to generate bootstrap's replication jdbc connection URI"", e);}}}"	Yes
276	public class A {public static com.liferay.commerce.model.CommerceOrderItemSoap updateCommerceOrderItemUnitPrice(long commerceOrderItemId, int quantity, java.math.BigDecimal unitPrice)throws RemoteException {try {com.liferay.commerce.model.CommerceOrderItem returnValue =CommerceOrderItemServiceUtil.updateCommerceOrderItemUnitPrice(commerceOrderItemId, quantity, unitPrice);return com.liferay.commerce.model.CommerceOrderItemSoap.toSoapModel(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
277	"public class A {@Overridepublic void setServiceDef(RangerServiceDef serviceDef) {if (isInitialized) {LOG.warn(""RangerDefaultPolicyResourceMatcher is already initialized. init() must be done again""+ "" after updating serviceDef"");}this.serviceDef = serviceDef;}}"	No
278	"public class A {protected Properties createUserFilterProperties() throws ApsSystemException {String filterKey = this.getUserFilterKey();if (null == filterKey) {return null;}Properties properties = new Properties();try {if (filterKey.equals(UserFilterOptionBean.KEY_FULLTEXT)) {properties.put(UserFilterOptionBean.PARAM_KEY, filterKey);properties.put(UserFilterOptionBean.PARAM_IS_ATTRIBUTE_FILTER, String.valueOf(false));} else if (filterKey.equals(UserFilterOptionBean.KEY_CATEGORY)) {properties.put(UserFilterOptionBean.PARAM_KEY, filterKey);properties.put(UserFilterOptionBean.PARAM_IS_ATTRIBUTE_FILTER, String.valueOf(false));if (null != this.getUserFilterCategoryCode()&& this.getUserFilterCategoryCode().trim().length() > 0) {properties.put(UserFilterOptionBean.PARAM_CATEGORY_CODE, this.getUserFilterCategoryCode());}} else if (filterKey.startsWith(UserFilterOptionBean.TYPE_ATTRIBUTE + ""_"")) {properties.put(UserFilterOptionBean.PARAM_KEY,filterKey.substring((UserFilterOptionBean.TYPE_ATTRIBUTE + ""_"").length()));properties.put(UserFilterOptionBean.PARAM_IS_ATTRIBUTE_FILTER, String.valueOf(true));}if (properties.isEmpty()) {return null;}} catch (Throwable t) {throw new ApsSystemException(""Error creating user filter"", t);}return properties;}}"	Yes
279	"public class A {private Position toPosition(double x, double y, String fromSrsId, String toSrsId) {try {DirectPosition src = new DirectPosition2D(x, y);MathTransform transform = getOrCreateTransform(fromSrsId, toSrsId);if (transform == null) {LOG.error(String.format(""Cannot find transform from %s to %s"", fromSrsId, toSrsId));return new DirectPosition2D(0, 0);}DirectPosition directPosition = transform.transform(src, null);return directPosition;} catch (Throwable t) {LOG.error(""Error converting: x="" + x + "" y="" + y + "" srs="" + fromSrsId, t);return new DirectPosition2D(0, 0);}}}"	No
280	"public class A {@Overridepublic void run(MessageReply reply) {if (!reply.isSuccess()) {}completion.fail(operr(""Failed because management node restarted.""));}}"	Yes
281	"public class A {private long getBundleTime(Bundle bundle) {long bundleTime = JitterClock.globalTime();if (timeField != null) {ValueObject vo = timeField.getField().getValue(bundle);if (vo == null) {log.debug(""missing time {} in [{}] --> {}"", timeField.getField(), bundle.getCount(), bundle);} else {bundleTime = timeField.toUnix(vo);}}return bundleTime;}}"	No
282	"public class A {@Overridepublic synchronized void xaSuspend() throws Exception {if (logger.isTraceEnabled()) {logger.trace(""xasuspend on "" + this.tx);}if (tx == null) {final String msg = ""Cannot suspend, session is not doing work in a transaction "";throw new ActiveMQXAException(XAException.XAER_PROTO, msg);} else {if (tx.getState() == Transaction.State.SUSPENDED) {final String msg = ""Cannot suspend, transaction is already suspended "" + tx.getXid();throw new ActiveMQXAException(XAException.XAER_PROTO, msg);} else {tx.suspend();tx = null;}}}}"	No
283	public class A {private boolean hasPropagateRepoPermission(String repo) {if (!accessEvaluator.isAllowedPropagationRepo(repo)) {InApplicationMonitor.getInstance().incrementCounter(APPMON_ACCESS_PREVENTION);return false;}return true;}}	Yes
284	"public class A {private void commitOffsets() {try {consumer.commitSync(offsets);} catch (Exception e) {logger.info(""Error committing offsets."", e);} finally {logger.trace(""About to clear offsets map."");offsets.clear();}}}"	No
285	"public class A {public static PlanInstance createPlanInstance(final Csar csar,final QName serviceTemplateId,final long serviceTemplateInstanceId,final QName planId,final String operationName,final String correlationId,final String chorCorrelationId,final String choreographyPartners,final Object input)throws CorrelationIdAlreadySetException {if (Objects.isNull(planId)) {LOG.error(""Plan ID is null! Unable to create PlanInstance!"");return null;}final TPlan storedPlan;try {storedPlan = ToscaEngine.resolvePlanReference(csar, planId);} catch (NotFoundException e) {LOG.error(""Plan with ID {} does not exist in CSAR {}!"", planId, csar.id().csarName());return null;}final PlanInstance plan = new PlanInstance();plan.setCorrelationId(correlationId);plan.setChoreographyCorrelationId(chorCorrelationId);plan.setChoreographyPartners(choreographyPartners);plan.setLanguage(PlanLanguage.fromString(storedPlan.getPlanLanguage()));plan.setType(PlanType.fromString(storedPlan.getPlanType()));plan.setState(PlanInstanceState.RUNNING);plan.setTemplateId(planId);final Optional<PlanInstance> planOptional =planRepo.findAll().stream().filter(p -> p.getCorrelationId().equals(correlationId)).findFirst();if (planOptional.isPresent()) {throw new CorrelationIdAlreadySetException(""Plan instance with correlation ID "" + correlationId + "" is already existing."");}Map<String, String> inputMap = new HashMap<>();if (input instanceof HashMap) {inputMap = (HashMap<String, String>) input;}for (final TParameter param : storedPlan.getInputParameters().getInputParameter()) {new PlanInstanceInput(param.getName(), inputMap.getOrDefault(param.getName(), """"), param.getType()).setPlanInstance(plan);}stiRepo.find(serviceTemplateInstanceId).ifPresent(serviceTemplateInstance -> plan.setServiceTemplateInstance(serviceTemplateInstance));planRepo.add(plan);return plan;}}"	No
286	public class A {private Either<Boolean, ResponseFormat> extractHeatParameters(ArtifactDefinition artifactInfo) {if (artifactInfo.getPayloadData() != null) {String heatDecodedPayload = new String(Base64.decodeBase64(artifactInfo.getPayloadData()));Either<List<HeatParameterDefinition>, ResultStatusEnum> heatParameters =ImportUtils.getHeatParamsWithoutImplicitTypes(heatDecodedPayload, artifactInfo.getArtifactType());if (heatParameters.isRight()&& (heatParameters.right().value() != ResultStatusEnum.ELEMENT_NOT_FOUND)) {ResponseFormat responseFormat =componentsUtils.getResponseFormat(ActionStatus.INVALID_DEPLOYMENT_ARTIFACT_HEAT, artifactInfo.getArtifactType());return Either.right(responseFormat);} else if (heatParameters.isLeft() && heatParameters.left().value() != null) {artifactInfo.setListHeatParameters(heatParameters.left().value());}}return Either.left(true);}}	Yes
287	"public class A {public String getTextContent(String path)throws RemoteException, ResourceAdminServiceExceptionException {String content = null;try {content = resourceAdminServiceStub.getTextContent(path);} catch (RemoteException e) {log.error(""Unable get content : "" + e.getMessage());throw new RemoteException(""Restore version error : "", e);} catch (ResourceAdminServiceExceptionException e) {log.error(""GetTextContent Error : "" + e.getMessage());throw new ResourceAdminServiceExceptionException(""GetTextContent Error :  "", e);}return content;}}"	No
288	"public class A {public StgNmbZusatz merge(StgNmbZusatz detachedInstance) {log.debug(""merging StgNmbZusatz instance"");try {StgNmbZusatz result =(StgNmbZusatz) sessionFactory.getCurrentSession().merge(detachedInstance);log.debug(""merge successful"");return result;} catch (RuntimeException re) {throw re;}}}"	Yes
289	"public class A {private void createTemplateFromRootVolume(final CreateTemplateFromVmRootVolumeMsg msg, final SyncTaskChain chain) {boolean callNext = true;try {refreshVO();ErrorCode allowed = validateOperationByState(msg, self.getState(), SysErrors.OPERATION_ERROR);if (allowed != null) {bus.replyErrorByMessageType(msg, allowed);return;}final CreateTemplateFromVmRootVolumeReply reply = new CreateTemplateFromVmRootVolumeReply();CreateTemplateFromVolumeOnPrimaryStorageMsg cmsg =new CreateTemplateFromVolumeOnPrimaryStorageMsg();cmsg.setVolumeInventory(msg.getRootVolumeInventory());cmsg.setBackupStorageUuid(msg.getBackupStorageUuid());cmsg.setImageInventory(msg.getImageInventory());bus.makeTargetServiceIdByResourceUuid(cmsg,PrimaryStorageConstant.SERVICE_ID,msg.getRootVolumeInventory().getPrimaryStorageUuid());bus.send(cmsg,new CloudBusCallBack(chain) {private void fail(ErrorCode errorCode) {reply.setError(operr(errorCode,""failed to create template from root volume[uuid:%s] on primary""+ "" storage[uuid:%s]"",msg.getRootVolumeInventory().getUuid(),msg.getRootVolumeInventory().getPrimaryStorageUuid()));bus.reply(msg, reply);}@Overridepublic void run(MessageReply r) {if (!r.isSuccess()) {fail(r.getError());} else {CreateTemplateFromVolumeOnPrimaryStorageReply creply =(CreateTemplateFromVolumeOnPrimaryStorageReply) r;reply.setInstallPath(creply.getTemplateBackupStorageInstallPath());reply.setFormat(creply.getFormat());bus.reply(msg, reply);}chain.next();}});callNext = false;} finally {if (callNext) {chain.next();}}}}"	Yes
290	"public class A {@Overrideprotected void afterStart(ClusterActionEvent event) throws IOException {ClusterSpec clusterSpec = event.getClusterSpec();Cluster cluster = event.getCluster();Configuration config = getConfiguration(clusterSpec, SOLR_DEFAULT_CONFIG);int jettyPort = config.getInt(SOLR_JETTY_PORT);LOG.info(""Solr Hosts: {}"", getHosts(cluster.getInstancesMatching(role(SOLR_ROLE)), jettyPort));}}"	Yes
291	public class A {public final void searchUpdate() {final UpdaterConfig config = new UpdaterConfig();if (!config.enabled) {return;}final long currentTime = new Date().getTime();if (lastCheck + CHECK_DELAY > currentTime) {return;}lastCheck = currentTime;Bukkit.getScheduler().runTaskAsynchronously(BetonQuest.getInstance(),() -> {searchUpdateTask(config);if (latest.getValue() != null) {LOG.info(null, getUpdateNotification(config));if (config.automatic) {update(Bukkit.getConsoleSender());}}});}}	No
292	public class A {@Testpublic void logInfo_shouldLogInfo() {verify(mockLogger, times(1)).logIfEnabled(LOGGER_NAME, INFO, null, MESSAGE);}}	Yes
293	"public class A {public boolean SaveVectorImageAsLocalFile(JavaPairRDD<Integer, String> distributedImage, String outputPath, ImageType imageType)throws Exception {logger.info(""[Sedona-Viz][SaveVectormageAsLocalFile][Start]"");JavaRDD<String> distributedVectorImageNoKey =distributedImage.map(new Function<Tuple2<Integer, String>, String>() {@Overridepublic String call(Tuple2<Integer, String> vectorObject) throws Exception {return vectorObject._2();}});this.SaveVectorImageAsLocalFile(distributedVectorImageNoKey.collect(), outputPath, imageType);logger.info(""[Sedona-Viz][SaveVectormageAsLocalFile][Stop]"");return true;}}"	No
294	"public class A {protected void writeDigestFile(TaskCache taskCache, String digest) {Task task = taskCache.getTask();Logger logger = task.getLogger();File digestFile = new File(taskCache.getCacheDir(), DIGEST_FILE_NAME);try {Files.write(digestFile.toPath(), digest.getBytes(StandardCharsets.UTF_8));if (logger.isInfoEnabled()) {}} catch (IOException ioException) {throw new GradleException(""Unable to write digest file"", ioException);}}}"	Yes
295	"public class A {@Overridepublic void doWork() throws IOException {mqConsumer.processMessage(new RabbitMQConsumer.MessageListener() {@Overridepublic boolean onMessage(String message) throws Exception {@SuppressWarnings(""unchecked"")Map<String, Object> msgMap =(HashMap<String, Object>)(new Gson()).fromJson(message, new TypeToken<HashMap<String, Object>>() {}.getType());boolean finished = (Boolean) msgMap.get(Constants.FINISH_FIELD);if (finished) {success = (Boolean) msgMap.get(Constants.SUCCEED_FIELD);if (!success) {errorMessage = (String) msgMap.get(Constants.ERROR_MSG_FIELD);}}if (!success && messageHandler != null) {double progress = (Double) msgMap.get(Constants.PROGRESS_FIELD) / 100;messageHandler.setProgress(progress);}if (messageHandler != null) {messageHandler.onMessage(msgMap);}return !finished;}});}}"	Yes
296	public class A {@Testpublic void testNullFactory() throws Exception {factory = null;startGrids();for (final Integer key : keys()) {eternal(key);}}}	Yes
297	"public class A {@RuleAction(label = ""@text/sendMessageToDeviceActionLabel"",description = ""@text/sendMessageToDeviceActionDescription"")public @ActionOutput(name = ""sent"",label = ""@text/sendMessageActionOutputLabel"",description = ""@text/sendMessageActionOutputDescription"",type = ""java.lang.Boolean"") Boolean sendMessageToDevice(@ActionInput(name = ""device"",label = ""@text/sendMessageActionInputDeviceLabel"",description = ""@text/sendMessageActionInputDeviceDescription"",type = ""java.lang.String"",required = true)String device,@ActionInput(name = ""message"",label = ""@text/sendMessageActionInputMessageLabel"",description = ""@text/sendMessageActionInputMessageDescription"",type = ""java.lang.String"",required = true)String message,@ActionInput(name = ""title"",label = ""@text/sendMessageActionInputTitleLabel"",description = ""@text/sendMessageActionInputTitleDescription"",type = ""java.lang.String"",defaultValue = DEFAULT_TITLE)@NullableString title) {logger.trace(""ThingAction 'sendMessageToDevice' called with value(s): device='{}', message='{}',""+ "" title='{}'"",device,message,title);if (device == null) {throw new IllegalArgumentException(""Skip sending message as 'device' is null."");}return send(getDefaultPushoverMessageBuilder(message).withDevice(device), title);}}"	No
298	public class A {@Overridepublic PatchStatus applyPatch(TypeDefPatch patch) throws AtlasBaseException {String typeName = patch.getTypeName();AtlasBaseTypeDef typeDef = typeRegistry.getTypeDefByName(typeName);PatchStatus ret;if (typeDef == null) {throw new AtlasBaseException(AtlasErrorCode.PATCH_FOR_UNKNOWN_TYPE, patch.getAction(), typeName);}if (isPatchApplicable(patch, typeDef)) {if (typeDef.getClass().equals(AtlasEntityDef.class)) {AtlasEntityDef updatedDef = new AtlasEntityDef((AtlasEntityDef) typeDef);addOrUpdateAttributes(updatedDef, patch.getAttributeDefs());updatedDef.setTypeVersion(patch.getUpdateToVersion());typeDefStore.updateEntityDefByName(typeName, updatedDef);ret = APPLIED;} else if (typeDef.getClass().equals(AtlasClassificationDef.class)) {AtlasClassificationDef updatedDef =new AtlasClassificationDef((AtlasClassificationDef) typeDef);addOrUpdateAttributes(updatedDef, patch.getAttributeDefs());updatedDef.setTypeVersion(patch.getUpdateToVersion());typeDefStore.updateClassificationDefByName(typeName, updatedDef);ret = APPLIED;} else if (typeDef.getClass().equals(AtlasStructDef.class)) {AtlasStructDef updatedDef = new AtlasStructDef((AtlasStructDef) typeDef);addOrUpdateAttributes(updatedDef, patch.getAttributeDefs());updatedDef.setTypeVersion(patch.getUpdateToVersion());typeDefStore.updateStructDefByName(typeName, updatedDef);ret = APPLIED;} else {throw new AtlasBaseException(AtlasErrorCode.PATCH_NOT_APPLICABLE_FOR_TYPE,patch.getAction(),typeDef.getClass().getSimpleName());}} else {ret = SKIPPED;}return ret;}}	Yes
299	"public class A {@Testpublic void testContainerSpecSerialization() {final ContainerSpec spec = new ContainerSpec();spec.setId(""id"");spec.setContainerName(""name"");spec.setStatus(KieContainerStatus.STARTED);spec.setReleasedId(new ReleaseId(""groupId"", ""artifactId"", ""1.0""));final ProcessConfig processConfig =new ProcessConfig(""runtimeStrategy"", ""kBase"", ""kSession"", ""mergeMode"");spec.addConfig(Capability.PROCESS, processConfig);final RuleConfig ruleConfig = new RuleConfig(1L, KieScannerStatus.SCANNING);spec.addConfig(Capability.RULE, ruleConfig);final String specContent = WebSocketUtils.marshal(spec);LOGGER.info(""JSON content\n{}"", specContent);final ContainerSpec specResult = WebSocketUtils.unmarshal(specContent, ContainerSpec.class);assertNotNull(specResult);assertEquals(spec, specResult);assertEquals(spec.getId(), specResult.getId());assertEquals(spec.getStatus(), specResult.getStatus());assertEquals(spec.getContainerName(), specResult.getContainerName());assertEquals(spec.getReleasedId(), specResult.getReleasedId());assertNotNull(specResult.getConfigs());assertEquals(spec.getConfigs().size(), specResult.getConfigs().size());final ContainerConfig processConfigResult = specResult.getConfigs().get(Capability.PROCESS);assertNotNull(processConfigResult);assertTrue(processConfigResult instanceof ProcessConfig);assertEquals(processConfig, processConfigResult);final ContainerConfig ruleConfigResult = specResult.getConfigs().get(Capability.RULE);assertNotNull(ruleConfigResult);assertTrue(ruleConfigResult instanceof RuleConfig);assertEquals(ruleConfig, ruleConfigResult);}}"	No
300	"public class A {public void persist(StgSysExportItv transientInstance) {log.debug(""persisting StgSysExportItv instance"");try {sessionFactory.getCurrentSession().persist(transientInstance);} catch (RuntimeException re) {throw re;}}}"	Yes
301	"public class A {private static Date parseDate(String dateString) {if (dateString != null) {try {Instant instant = parseInstant(dateString);return Date.from(instant);} catch (DateTimeParseException e) {LOGGER.warn(MessageFormat.format(""Could not parse date string: \""{0}\"""", dateString), e);}}return null;}}"	No
302	"public class A {public FileTransformStats generateDomain(DatasourceDTO datasourceDto) throws Exception {checkPermissions();synchronized (lock) {ModelInfo modelInfo = datasourceDto.getCsvModelInfo();IPentahoSession pentahoSession = null;try {pentahoSession = PentahoSessionHolder.getSession();KettleSystemListener.environmentInit(pentahoSession);String statsKey =FileTransformStats.class.getSimpleName()+ ""_""+ modelInfo.getFileInfo().getTmpFilename();FileTransformStats stats = new FileTransformStats();pentahoSession.setAttribute(statsKey, stats);CsvTransformGenerator csvTransformGenerator =new CsvTransformGenerator(modelInfo, AgileHelper.getDatabaseMeta());csvTransformGenerator.setTransformStats(stats);try {csvTransformGenerator.dropTable(modelInfo.getStageTableName());} catch (CsvTransformGeneratorException e) {logger.info(""Could not drop table before staging"");}csvTransformGenerator.createOrModifyTable(pentahoSession);csvTransformGenerator.loadTable(false, pentahoSession, true);ArrayList<String> combinedErrors = new ArrayList<String>(modelInfo.getCsvInputErrors());combinedErrors.addAll(modelInfo.getTableOutputErrors());if (stats.getErrors() != null && stats.getErrors().size() > 0) {stats.getErrors().addAll(combinedErrors);} else {stats.setErrors(combinedErrors);}while (!stats.isRowsFinished()) {Thread.sleep(200);}modelerWorkspace.setDomain(modelerService.generateCSVDomain(modelInfo));modelerWorkspace.getWorkspaceHelper().autoModelFlat(modelerWorkspace);modelerWorkspace.getWorkspaceHelper().autoModelRelationalFlat(modelerWorkspace);modelerWorkspace.setModelName(modelInfo.getDatasourceName());modelerWorkspace.getWorkspaceHelper().populateDomain(modelerWorkspace);Domain workspaceDomain = modelerWorkspace.getDomain();XStream xstream = new XStream();String serializedDto = xstream.toXML(datasourceDto);workspaceDomain.getLogicalModels().get(0).setProperty(""datasourceModel"", serializedDto);workspaceDomain.getLogicalModels().get(0).setProperty(""DatasourceType"", ""CSV"");prepareForSerialization(workspaceDomain);modelerService.serializeModels(workspaceDomain, modelerWorkspace.getModelName());stats.setDomain(modelerWorkspace.getDomain());return stats;} catch (Exception e) {logger.error(e.getMessage());throw e;} finally {if (pentahoSession != null) {pentahoSession.destroy();}}}}}"	No
303	"public class A {@Overridepublic Void call() throws Exception {Thread.currentThread().setName(""restart-thread"");U.sleep(random(5000, 10_000));log.info(""Stopping node "" + GRIDS_COUNT);stopGrid(GRIDS_COUNT);IgniteEx ig0 = grid(0);ig0.cluster().setBaselineTopology(baselineNodes(ig0.cluster().forServers().nodes()));while (!stop.get()) {CyclicBarrier barrier = cmp.get();if (barrier != null) {log.info(""Wait data check."");barrier.await(60_000, TimeUnit.MILLISECONDS);}}return null;}}"	Yes
304	"public class A {@Overridepublic void receivedValue(Destination type, String dataId, Object object, List<DataRequest> achievedRequests) {if (type == Transfer.Destination.OBJECT) {WORKER_LOGGER.info(""Received data "" + dataId + "" with associated object "" + object);this.dataManager.storeValue(dataId, object);} else {String nameId = (new File(dataId)).getName();WORKER_LOGGER.info(""Received data "" + nameId + "" with path "" + dataId);this.dataManager.storeFile(nameId, dataId);}for (DataRequest dr : achievedRequests) {WorkerDataRequest wdr = (WorkerDataRequest) dr;wdr.getListener().fetchedValue(dataId);if (NIOTracer.extraeEnabled()) {NIOTracer.emitDataTransferEvent(NIOTracer.TRANSFER_END);}if (WORKER_LOGGER_DEBUG) {WORKER_LOGGER.debug(""Pending parameters: ""+ ((MultiOperationFetchListener) wdr.getListener()).getMissingOperations());}}}}"	No
305	"public class A {private Component getAndValidateOriginComponentOfComponentInstance(Component containerComponent, ComponentInstance componentInstance) {ComponentTypeEnum componentType =getComponentTypeByParentComponentType(containerComponent.getComponentType());Component component;Either<Component, StorageOperationStatus> getComponentRes =toscaOperationFacade.getToscaFullElement(componentInstance.getComponentUid());if (getComponentRes.isRight()) {log.debug(""Failed to get the component with id {} for component instance {} creation. "",componentInstance.getComponentUid(),componentInstance.getName());ActionStatus actionStatus =componentsUtils.convertFromStorageResponse(getComponentRes.right().value(), componentType);throw new ByActionStatusComponentException(actionStatus, Constants.EMPTY_STRING);}component = getComponentRes.left().value();LifecycleStateEnum resourceCurrState = component.getLifecycleState();if (resourceCurrState == LifecycleStateEnum.NOT_CERTIFIED_CHECKOUT) {ActionStatus actionStatus = ActionStatus.CONTAINER_CANNOT_CONTAIN_COMPONENT_IN_STATE;throw new ByActionStatusComponentException(actionStatus,containerComponent.getComponentType().toString(),resourceCurrState.toString());}if (Boolean.TRUE.equals(component.isArchived())) {ActionStatus actionStatus = ActionStatus.COMPONENT_IS_ARCHIVED;throw new ByActionStatusComponentException(actionStatus, component.getName());}final Map<String, InterfaceDefinition> componentInterfaces = component.getInterfaces();if (MapUtils.isNotEmpty(componentInterfaces)) {componentInterfaces.forEach(componentInstance::addInterface);}return component;}}"	No
306	"public class A {@Overrideprotected void doSubmit(final AjaxRequestTarget target) {try {UserSelfRestClient.changePassword(passwordField.getModelObject());SyncopeEnduserSession.get().invalidate();final PageParameters parameters = new PageParameters();parameters.add(Constants.NOTIFICATION_MSG_PARAM, getString(""self.pwd.change.success""));setResponsePage(getApplication().getHomePage(), parameters);setResponsePage(getApplication().getHomePage(), parameters);} catch (Exception e) {LOG.error(""While changing password for {}"",SyncopeEnduserSession.get().getSelfTO().getUsername(),e);SyncopeEnduserSession.get().onException(e);notificationPanel.refresh(target);}}}"	No
307	public class A {public static IActionSet getConnectionsActionSetService(String name, String version)throws ActivatorException {try {return (IActionSet)getServiceFromRegistry(context, createFilterConnectionsActionSet(name, version));} catch (InvalidSyntaxException e) {throw new ActivatorException(e);}}}	Yes
308	public class A {@Overridepublic List<SecurityRuleInstance> getAllSecurityRules(Order order, SystemUser systemUser)throws FogbowException {LOGGER.debug(String.format(Messages.Log.MAPPING_USER_OP_S, GET_ALL_SECURITY_RULES_OPERATION, order));CloudUser cloudUser = this.mapperPlugin.map(systemUser);LOGGER.debug(String.format(Messages.Log.MAPPED_USER_S, cloudUser));List<SecurityRuleInstance> securityRuleInstances = null;String auditableResponse = null;try {securityRuleInstances = doGetAllSecurityRules(order, cloudUser);auditableResponse = securityRuleInstances.toString();} catch (Throwable e) {auditableResponse = e.getClass().getName();throw e;} finally {auditRequest(Operation.GET_ALL, order.getType(), systemUser, auditableResponse);}return securityRuleInstances;}}	Yes
309	public class A {private Map<Tuple<ActivityFacility, Double>, Map<String, Double>>sortMeasurePointsByYAndXCoord() {Map<Double, List<Double>> coordMap = new TreeMap<>();List<Double> yValues = new LinkedList<>();for (Tuple<ActivityFacility, Double> tuple : accessibilitiesMap.keySet()) {ActivityFacility activityFacility = tuple.getFirst();double y = activityFacility.getCoord().getY();if (!yValues.contains(y)) {yValues.add(y);}}yValues.sort(Comparator.naturalOrder());for (double yGiven : yValues) {List<Double> xValues = new LinkedList<>();for (Tuple<ActivityFacility, Double> tuple : accessibilitiesMap.keySet()) {ActivityFacility activityFacility = tuple.getFirst();double y = activityFacility.getCoord().getY();if (y == yGiven) {double x = activityFacility.getCoord().getX();if (!xValues.contains(x)) {xValues.add(x);}}}xValues.sort(Comparator.naturalOrder());coordMap.put(yGiven, xValues);}Map<Tuple<ActivityFacility, Double>, Map<String, Double>> accessibilitiesMap2 =new LinkedHashMap<>();for (double y : coordMap.keySet()) {for (double x : coordMap.get(y)) {for (Tuple<ActivityFacility, Double> tuple : accessibilitiesMap.keySet()) {Coord coord = tuple.getFirst().getCoord();if (coord.getX() == x && coord.getY() == y) {accessibilitiesMap2.put(tuple, accessibilitiesMap.get(tuple));}}}}return accessibilitiesMap2;}}	Yes
310	"public class A {@SuppressWarnings(""unchecked"")public static <M extends Message> M parseFrom(Class<M> protoClass, byte[] messageBytes) {try {Method parseFrom = protoClass.getMethod(""parseFrom"", new Class[] {byte[].class});return (M) parseFrom.invoke(null, new Object[] {messageBytes});} catch (NoSuchMethodException e) {throw new IllegalArgumentException(e);} catch (IllegalAccessException e) {throw new IllegalArgumentException(e);} catch (InvocationTargetException e) {}return null;}}"	Yes
311	public class A {private String _getRootAttributeValue(String xml, String name, String defaultValue) {if (!Validator.isXml(xml)) {return defaultValue;}String value = null;XMLStreamReader xmlStreamReader = null;ClassLoader portalClassLoader = PortalClassLoaderUtil.getClassLoader();Thread currentThread = Thread.currentThread();ClassLoader contextClassLoader = currentThread.getContextClassLoader();try {if (contextClassLoader != portalClassLoader) {currentThread.setContextClassLoader(portalClassLoader);}XMLInputFactory xmlInputFactory = SecureXMLFactoryProviderUtil.newXMLInputFactory();xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml));if (xmlStreamReader.hasNext()) {xmlStreamReader.nextTag();value = xmlStreamReader.getAttributeValue(null, name);}} catch (Exception exception) {if (_log.isWarnEnabled()) {}} finally {if (contextClassLoader != portalClassLoader) {currentThread.setContextClassLoader(contextClassLoader);}if (xmlStreamReader != null) {try {xmlStreamReader.close();} catch (Exception exception) {if (_log.isDebugEnabled()) {}}}}if (Validator.isNull(value)) {value = defaultValue;}return value;}}	Yes
312	"public class A {@Overridepublic <T extends DomainObject> T fromOid(Object oid) {OgmOID internalId = (OgmOID) oid;if (logger.isTraceEnabled()) {logger.trace(""fromOid("" + internalId + "")"");}return (T)transactionManager.getEntityManager().find(internalId.getObjClass(), internalId.getPrimaryKey());}}"	No
313	"public class A {@Overridevoid perform() throws IOException {TableDescriptor selected = selectTable(enabledTables);if (selected == null) {return;}Admin admin = connection.getAdmin();TableName tableName = selected.getTableName();try (Table table = connection.getTable(tableName)) {ArrayList<RegionInfo> regionInfos =new ArrayList<>(admin.getRegions(selected.getTableName()));int numRegions = regionInfos.size();int average_rows = 1;int numRows = average_rows * numRegions;for (int i = 0; i < numRows; i++) {byte[] rowKey = Bytes.toBytes(""row-"" + String.format(""%010d"", RandomUtils.nextInt()));ColumnFamilyDescriptor cfd = selectFamily(selected);if (cfd == null) {return;}byte[] family = cfd.getName();byte[] qualifier = Bytes.toBytes(""col-"" + RandomUtils.nextInt() % 10);byte[] value = Bytes.toBytes(""val-"" + RandomStringUtils.randomAlphanumeric(10));Put put = new Put(rowKey);put.addColumn(family, qualifier, value);table.put(put);}TableDescriptor freshTableDesc = admin.getDescriptor(tableName);Assert.assertTrue(""After insert, Table: "" + tableName + "" in not enabled"", admin.isTableEnabled(tableName));enabledTables.put(tableName, freshTableDesc);} catch (Exception e) {throw e;} finally {admin.close();}}}"	Yes
314	"public class A {private void bindUser(String dn, char[] password) throws AuthenticationException {Hashtable<String, String> env = new Hashtable<>();env.put(Context.INITIAL_CONTEXT_FACTORY, ""com.sun.jndi.ldap.LdapCtxFactory"");env.put(Context.PROVIDER_URL, providerUrl);env.put(""com.sun.jndi.ldap.connect.pool"", ""true"");env.put(Context.SECURITY_AUTHENTICATION, ""simple"");env.put(Context.SECURITY_PRINCIPAL, dn);env.put(Context.SECURITY_CREDENTIALS, new String(password));if (tls) {env.put(Context.SECURITY_PROTOCOL, ""ssl"");}try {DirContext ctx = new InitialDirContext(env);ctx.close();} catch (javax.naming.AuthenticationException e) {throw new AuthenticationException(""Invalid password"");} catch (NamingException e) {throw new AuthenticationException(e);}}}"	Yes
315	"public class A {private Boolean meetsConditions(Session session, PlanDefinition.PlanDefinitionActionComponent action) {for (PlanDefinition.PlanDefinitionActionConditionComponent condition : action.getCondition()) {if (condition.hasDescription()) {logger.info(""Resolving condition with description: "" + condition.getDescription());}if (condition.getKind() == PlanDefinition.ActionConditionKind.APPLICABILITY) {if (!condition.getLanguage().equals(""text/cql"")) {continue;}if (!condition.hasExpression()) {throw new RuntimeException(""Missing condition expression"");}String cql = condition.getExpression();Object result =executionProvider.evaluateInContext(session.getPlanDefinition(), cql, session.getPatientId());if (result == null) {return false;}if (!(result instanceof Boolean)) {continue;}if (!(Boolean) result) {return false;}}}return true;}}"	Yes
316	"public class A {@Operation(name = ""$refresh-generated-content"", type = Measure.class)public MethodOutcome refreshGeneratedContent(HttpServletRequest theRequest, RequestDetails theRequestDetails, @IdParam IdType theId) {Measure theResource = this.measureResourceProvider.getDao().read(theId);theResource.getRelatedArtifact().removeIf(relatedArtifact ->relatedArtifact.getType().equals(RelatedArtifact.RelatedArtifactType.DEPENDSON));CqfMeasure cqfMeasure =this.dataRequirementsProvider.createCqfMeasure(theResource, this.libraryResolutionProvider);if (!cqfMeasure.getRelatedArtifact().isEmpty()) {for (RelatedArtifact relatedArtifact : cqfMeasure.getRelatedArtifact()) {boolean artifactExists = false;for (RelatedArtifact resourceArtifact : theResource.getRelatedArtifact()) {if (resourceArtifact.equalsDeep(relatedArtifact)) {artifactExists = true;break;}}if (!artifactExists) {theResource.addRelatedArtifact(relatedArtifact.copy());}}}try {Narrative n =this.narrativeProvider.getNarrative(this.measureResourceProvider.getContext(), cqfMeasure);theResource.setText(n.copy());} catch (Exception e) {}return this.measureResourceProvider.update(theRequest,theResource,theId,theRequestDetails.getConditionalUrl(RestOperationTypeEnum.UPDATE),theRequestDetails);}}"	Yes
317	"public class A {@Testpublic void badInputZipStrFile() throws Exception {File destFile = new File(destDir, ""badInputStrFile.zip"");try {try {ZipUtil.zip((String[]) null, destFile, true, 0);Assert.fail(""Zip should fail when input String array is null"");} catch (IllegalArgumentException e) {}try {ZipUtil.zip(new String[] {srcFile.getCanonicalPath(), null, nestedSrcFile.getCanonicalPath()},destFile,true,ZipUtil.NO_COMPRESSION);Assert.fail(""Zip should fail when any input filename is null"");} catch (IllegalArgumentException e) {}try {ZipUtil.zip(new String[] {srcFile.getCanonicalPath(),dummieFile.getCanonicalPath(),nestedSrcFile.getCanonicalPath()},destFile,true,ZipUtil.NO_COMPRESSION);Assert.fail(""Zip should fail when any input filename does not exist"");} catch (FileNotFoundException e) {}try {ZipUtil.zip(new String[] {srcFile.getCanonicalPath(), nestedSrcFile.getCanonicalPath()},(File) null,true,ZipUtil.NO_COMPRESSION);Assert.fail(""Zip should fail when destination File is null"");} catch (IllegalArgumentException e) {}try {ZipUtil.zip(new String[] {srcFile.getCanonicalPath(), nestedSrcFile.getCanonicalPath()},sampleZip,true,ZipUtil.NO_COMPRESSION);Assert.fail(""Zip should fail when destination file already exists"");} catch (IllegalArgumentException e) {}try {ZipUtil.zip(new String[] {srcFile.getCanonicalPath(), nestedSrcFile.getCanonicalPath()},dummieFile,true,ZipUtil.NO_COMPRESSION);Assert.fail(""Zip should fail when the destination File does not represent a zip file"");} catch (IllegalArgumentException e) {}} catch (Exception e) {Assert.fail(""Another exception was expected, but got ""+ e.getClass().getName()+ "" instead: ""+ e.getMessage());}}}"	Yes
318	"public class A {public ASTNode readMathML(String mathML, TreeNodeChangeListener listener)throws XMLStreamException {if (logger.isDebugEnabled()) {logger.debug(""SBMLReader.readMathML called"");}Object object = readXMLFromString(mathML, listener);if (object != null && object instanceof Constraint) {ASTNode math = ((Constraint) object).getMath();if (math != null) {cleanTreeNode(math);return math;}}return null;}}"	No
319	"public class A {public void saveProgramAccess(ProgramAccess pa) {if (pa == null) {throw new IllegalArgumentException();}getHibernateTemplate().saveOrUpdate(pa);programAccessListByProgramIdCache.remove(pa.getProgramId());if (log.isDebugEnabled()) {log.debug(""saveProgramAccess:"" + pa.getId());}}}"	No
320	"public class A {@OnScheduledpublic final void createClient(ProcessContext context) throws IOException {if (mongoClient != null) {closeClient();}getLogger().info(""Creating MongoClient"");final SSLContextService sslService =context.getProperty(SSL_CONTEXT_SERVICE).asControllerService(SSLContextService.class);final String rawClientAuth = context.getProperty(CLIENT_AUTH).getValue();final SSLContext sslContext;if (sslService != null) {final SSLContextService.ClientAuth clientAuth;if (StringUtils.isBlank(rawClientAuth)) {clientAuth = SSLContextService.ClientAuth.REQUIRED;} else {try {clientAuth = SSLContextService.ClientAuth.valueOf(rawClientAuth);} catch (final IllegalArgumentException iae) {throw new ProviderCreationException(String.format(""Unrecognized client auth '%s'. Possible values are [%s]"",rawClientAuth, StringUtils.join(SslContextFactory.ClientAuth.values(), "", "")));}}sslContext = sslService.createSSLContext(clientAuth);} else {sslContext = null;}try {final String uri = context.getProperty(URI).getValue();if (sslContext == null) {mongoClient = new MongoClient(new MongoClientURI(uri));} else {mongoClient = new MongoClient(new MongoClientURI(uri, getClientOptions(sslContext)));}} catch (Exception e) {getLogger()throw e;}}}"	Yes
321	"public class A {public void setMaxTuples(int maxNumbers) {LOG.debug(""setting max tuples to {}"", maxNumbers);this.maxTuples = maxNumbers;}}"	No
322	"public class A {@Overridepublic void run() {int retries = 0;while (retries++ < 20 && totalCount != expect) {try {QueueBrowser browser = createBrowser(broker, dest);int count = browseMessages(browser, broker);if (consume) {if (count != 0) {MessageConsumer consumer = createSyncConsumer(broker, dest);totalCount += count;for (int i = 0; i < count; i++) {ActiveMQTextMessage message = (ActiveMQTextMessage) consumer.receive(1000);if (message == null) break;LOG.info(broker+ "" consumer: ""+ message.getText()+ "" ""+ message.getDestination()+ "" ""+ message.getMessageId()+ "" ""+ Arrays.toString(message.getBrokerPath()));}}} else {totalCount = count;}LOG.info(""browser '"" + broker + ""' browsed "" + totalCount);Thread.sleep(1000);} catch (Exception e) {LOG.info(""Exception browsing "" + e, e);} finally {try {if (browser != null) {browser.close();}if (consumer != null) {consumer.close();}} catch (Exception e) {LOG.info(""Exception closing browser "" + e, e);}}}}}"	No
323	public class A {protected void postCommit(Xid arg0) {}}	Yes
324	"public class A {@Overrideprotected void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse)throws Exception {long newFolderId = ParamUtil.getLong(actionRequest, ""newFolderId"");long[] folderIds = ParamUtil.getLongValues(actionRequest, ""rowIdsJournalFolder"");ServiceContext serviceContext =ServiceContextFactory.getInstance(JournalArticle.class.getName(), actionRequest);for (long folderId : folderIds) {_journalFolderService.moveFolder(folderId, newFolderId, serviceContext);}List<String> invalidArticleIds = new ArrayList<>();ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY);String[] articleIds = ParamUtil.getStringValues(actionRequest, ""rowIdsJournalArticle"");for (String articleId : articleIds) {try {_journalArticleService.moveArticle(themeDisplay.getScopeGroupId(),HtmlUtil.unescape(articleId),newFolderId,serviceContext);} catch (InvalidDDMStructureException invalidDDMStructureException) {if (_log.isWarnEnabled()) {_log.warn(invalidDDMStructureException.getMessage());}invalidArticleIds.add(articleId);}}if (!invalidArticleIds.isEmpty()) {StringBundler sb = new StringBundler(4);sb.append(""Folder "");sb.append(newFolderId);sb.append("" does not allow the structures for articles: "");sb.append(StringUtil.merge(invalidArticleIds));throw new InvalidDDMStructureException(sb.toString());}}}"	No
325	"public class A {@Overridepublic IRODSRuleExecResult executeRuleFromParts(final String ruleBody,final List<String> inputParameters,final List<String> outputParameters)throws JargonException {if (ruleBody == null || ruleBody.isEmpty()) {throw new IllegalArgumentException(""null or empty ruleBody"");}if (inputParameters == null) {throw new IllegalArgumentException(""null inputParameters"");}if (outputParameters == null) {throw new IllegalArgumentException(""null outputParameters"");}log.info(""ruleBody:{}"", ruleBody);log.info(""inputParameters:{}"", inputParameters);String ruleAsString = buildRuleStringFromParts(ruleBody, inputParameters, outputParameters);RuleProcessingAO ruleProcessingAO =irodsAccessObjectFactory.getRuleProcessingAO(getIrodsAccount());RuleInvocationConfiguration ruleInvocationConfiguration =RuleInvocationConfiguration.instanceWithDefaultAutoSettings(irodsAccessObjectFactory.getJargonProperties());log.info(""getting ready to submit rule:{}"", ruleAsString);return ruleProcessingAO.executeRule(ruleAsString, null, ruleInvocationConfiguration);}}"	Yes
326	"public class A {@Overridepublic void process(final Exchange exchange) throws Exception {Snmp snmp = null;TransportMapping<? extends Address> transport = null;try {if (""tcp"".equals(this.endpoint.getProtocol())) {transport = new DefaultTcpTransportMapping();} else if (""udp"".equals(this.endpoint.getProtocol())) {transport = new DefaultUdpTransportMapping();} else {throw new IllegalArgumentException(""Unknown protocol: "" + this.endpoint.getProtocol());}snmp = new Snmp(transport);snmp.listen();if (this.actionType == SnmpActionType.GET_NEXT) {List<SnmpMessage> smLst = new ArrayList<>();for (OID oid : this.endpoint.getOids()) {this.pdu.clear();this.pdu.add(new VariableBinding(oid));boolean matched = true;while (matched) {ResponseEvent responseEvent = snmp.send(this.pdu, this.target);if (responseEvent == null || responseEvent.getResponse() == null) {break;}PDU response = responseEvent.getResponse();String nextOid = null;Vector<? extends VariableBinding> variableBindings = response.getVariableBindings();for (int i = 0; i < variableBindings.size(); i++) {VariableBinding variableBinding = variableBindings.elementAt(i);nextOid = variableBinding.getOid().toDottedString();if (!nextOid.startsWith(oid.toDottedString())) {matched = false;break;}}if (!matched) {break;}this.pdu.clear();pdu.add(new VariableBinding(new OID(nextOid)));smLst.add(new SnmpMessage(getEndpoint().getCamelContext(), response));}}exchange.getIn().setBody(smLst);} else {ResponseEvent responseEvent = snmp.send(this.pdu, this.target);if (responseEvent.getResponse() != null) {exchange.getIn().setBody(new SnmpMessage(getEndpoint().getCamelContext(), responseEvent.getResponse()));} else {throw new TimeoutException(""SNMP Producer Timeout"");}}} finally {try {transport.close();} catch (Exception e) {}try {snmp.close();} catch (Exception e) {}}}}"	Yes
327	"public class A {protected String extractCategoryFormValues() {String selectedNode = this.getSelectedNode();try {Category category = this.getCategory(selectedNode);if (null == category) {this.addActionError(this.getText(""error.category.selectCategory""));return ""categoryTree"";}this.setParentCategoryCode(category.getParentCode());this.setCategoryCode(category.getCode());this.setTitles(category.getTitles());} catch (Throwable t) {return FAILURE;}return SUCCESS;}}"	Yes
328	"public class A {public static <T> T get(Class<T> interfaceClass,final IPentahoSession session,final Map<String, String> properties) {try {if (!aggObjectFactory.objectDefined(interfaceClass)) {Logger.warn(PentahoSystem.class.getName(),Messages.getInstance().getErrorString(""PentahoSystem.WARN_OBJECT_NOT_CONFIGURED"", interfaceClass.getSimpleName()));return null;}IPentahoSession curSession = (session == null) ? PentahoSessionHolder.getSession() : session;return aggObjectFactory.get(interfaceClass, curSession, properties);} catch (ObjectFactoryException e) {Logger.debug(PentahoSystem.class.getName(),Messages.getInstance().getErrorString(""PentahoSystem.ERROR_0026_COULD_NOT_RETRIEVE_CONFIGURED_OBJECT"",interfaceClass.getSimpleName()),e);return null;}}}"	No
329	"public class A {private boolean initializePruningDebug(HttpResponder responder) {if (!pruneEnable) {responder.sendString(HttpResponseStatus.BAD_REQUEST, ""Invalid List Pruning is not enabled."");return false;}synchronized (this) {if (pruningDebug != null) {return true;}Configuration configuration = new Configuration();configuration.clear();copyConf(configuration, hConf);copyConf(configuration, cConf);try {@SuppressWarnings(""unchecked"")Class<? extends InvalidListPruningDebug> clazz =(Class<? extends InvalidListPruningDebug>)getClass().getClassLoader().loadClass(PRUNING_TOOL_CLASS_NAME);this.pruningDebug = clazz.newInstance();pruningDebug.initialize(configuration);} catch (Exception e) {LOG.error(""Not able to instantiate pruning debug class"", e);responder.sendString(HttpResponseStatus.INTERNAL_SERVER_ERROR,""Cannot instantiate the pruning debug tool: "" + e.getMessage());pruningDebug = null;return false;}return true;}}}"	No
330	public class A {@Overridepublic boolean advance() throws IOException {if (isDone) {return false;}ImmutableBytesWritable startKey = this.currentRangeStartKey;ImmutableBytesWritable hash = this.currentHash;isDone = !readNextKey();currentRangeHash = RangeHash.of(startKey, currentRangeStartKey, hash);return true;}}	Yes
331	public class A {synchronized boolean removeKey(Integer keyId) {requireNonNull(keyId);return allKeys.remove(keyId) != null;}}	Yes
332	public class A {@Overridepublic void update(ActionDesignTrace actionDesignTrace) {String updateStatement = updateStatement(actionDesignTrace);getMetadataRepository().executeUpdate(updateStatement);}}	Yes
333	"public class A {@Testpublic void testDeserializeVectorUsingPolicy() throws Exception {Vector<Object> vector = new Vector<Object>();vector.add(""pi"");vector.add(Integer.valueOf(314159));vector.add(new Vector<String>());vector.add(Boolean.FALSE);final JmsDefaultDeserializationPolicy policy = new JmsDefaultDeserializationPolicy();ByteArrayInputStream input = new ByteArrayInputStream(serializeObject(vector));TrustedClassFilter filter =new TrustedClassFilter() {@Overridepublic boolean isTrusted(Class<?> clazz) {return policy.isTrustedType(new JmsQueue(), clazz);}};ClassLoadingAwareObjectInputStream reader =new ClassLoadingAwareObjectInputStream(input, filter);Object result = null;try {result = reader.readObject();} catch (Exception ex) {fail(""Should no throw any errors"");} finally {reader.close();}assertNotNull(result);assertTrue(result instanceof Vector);assertEquals(4, ((Vector<?>) result).size());}}"	Yes
334	"public class A {@Overridepublic void userEventTriggered(ChannelHandlerContext ctx, Object evt) {if (evt instanceof IdleStateEvent) {IdleStateEvent idleStateEvent = (IdleStateEvent) evt;if (idleStateEvent.state() == IdleState.READER_IDLE) {if (LOGGER.isInfoEnabled()) {LOGGER.info(""channel {} read idle."", ctx.channel());}try {String serverAddress = NetUtil.toStringAddress(ctx.channel().remoteAddress());clientChannelManager.invalidateObject(serverAddress, ctx.channel());} catch (Exception exx) {LOGGER.error(exx.getMessage());} finally {clientChannelManager.releaseChannel(ctx.channel(), getAddressFromContext(ctx));}}if (idleStateEvent == IdleStateEvent.WRITER_IDLE_STATE_EVENT) {try {if (LOGGER.isDebugEnabled()) {LOGGER.debug(""will send ping msg,channel {}"", ctx.channel());}AbstractNettyRemotingClient.this.sendAsyncRequest(ctx.channel(), HeartbeatMessage.PING);} catch (Throwable throwable) {}}}}}"	Yes
335	"public class A {@Overrideprotected void configureSSLContext(SSLContext context) throws GeneralSecurityException {LOG.trace(""Configuring client-side SSLContext parameters on SSLContext [{}]..."", context);if (this.getSessionTimeout() != null) {LOG.info(""Configuring client-side SSLContext session timeout on SSLContext [{}] to [{}]."",context,this.getSessionTimeout());this.configureSessionContext(context.getClientSessionContext(), this.getSessionTimeout());}}}"	Yes
336	"public class A {private void loadTrustedMaps(QueryResultListener.Feed dataFeed) {log.info(""Loading of trusted entities from Sesame"");String filePath =System.getProperty(""kim.home.dir"", ""."") + EntityPriority.PRIORITY_CONF_FILE.substring(1);existsClassPriority = (new File(filePath)).exists();if (existsClassPriority) {try {entPrior = new EntityPriority();entPrior.init();existsClassPriority = existsClassPriority && entPrior.getFilterLookups();} catch (Exception e) {entPrior = null;}}EntitiesQueryListener entityListener = new TrustedEntitiesListener(entPrior);if (log.isDebugEnabled()) {entityListener = StatisticListener.wrap(entityListener, ""Thrusted Entities"");}try {dataFeed.feedTo(entityListener);} catch (KIMQueryException e) {log.error(""Loading failed."", e);throw new KIMRuntimeException(""The loading failed."", e);} finally {log.info(""The loading from Sesame finished"");}}}"	Yes
337	public class A {private static void setTrustManager(TLSClientParameters tlsClientParameters) {try {TrustManagerFactory trustFactory = getInstance().trustFactory;if (trustFactory != null) {TrustManager[] trustManager = trustFactory.getTrustManagers();if (trustManager != null) {tlsClientParameters.setTrustManagers(trustManager);}} else {}} catch (IllegalStateException e) {}}}	Yes
338	public class A {@Overridepublic void writeFinished(Connection c, Transfer t) {this.agent.releaseSendSlot(c);}}	Yes
339	"public class A {protected GuiFragment buildGuiFragmentFromRes(ResultSet res) {GuiFragment guiFragment = null;try {guiFragment = new GuiFragment();guiFragment.setCode(res.getString(""code""));guiFragment.setWidgetTypeCode(res.getString(""widgettypecode""));guiFragment.setPluginCode(res.getString(""plugincode""));guiFragment.setGui(res.getString(""gui""));guiFragment.setDefaultGui(res.getString(""defaultgui""));Integer locked = res.getInt(""locked"");guiFragment.setLocked(null != locked && locked.intValue() == 1);} catch (Throwable t) {logger.error(""Error in buildGuiFragmentFromRes"", t);}return guiFragment;}}"	No
340	"public class A {public static VocabularyCandidates findVocabulariesForUrl(String resourceId, Function<String, List<Vocabulary>> searchInPersistence)throws URISyntaxException {final String searchString = new URI(resourceId.replace("" "", ""%20"")).getHost();final List<Vocabulary> searchedVocabularies = searchInPersistence.apply(searchString);final List<Vocabulary> candidates;if (searchedVocabularies == null) {candidates = Collections.emptyList();} else {candidates =searchedVocabularies.stream().filter(vocabulary -> vocabularyMatchesUri(resourceId, vocabulary)).collect(Collectors.toList());}if (candidates.isEmpty()) {LOGGER.info(""No vocabularies found for uri {}"", resourceId);}if (candidates.size() > 1 && LOGGER.isWarnEnabled()) {}return new VocabularyCandidates(candidates);}}"	Yes
341	"public class A {@Overrideprotected void setup(Context context) throws IOException, InterruptedException {String multipleOutputStr = context.getConfiguration().get(PROPERTY_MULTIPLEOUTPUTS);Preconditions.checkArgument(StringUtils.isNotBlank(multipleOutputStr),""required parameter '%s' is missing!"",PROPERTY_MULTIPLEOUTPUTS);this.mos = instantiateMultipleOutputs(context);this.mimeTypeToPortNameMap = new HashMap<CharSequence, String>();String[] portNames =StringUtils.split(context.getConfiguration().get(PROPERTY_MULTIPLEOUTPUTS));for (String portName : portNames) {String currentMimeTypePropName = PROPERTY_PREFIX_MIMETYPES_CSV + portName;if (context.getConfiguration().get(currentMimeTypePropName) != null) {String[] currentPortMimeTypes =StringUtils.split(context.getConfiguration().get(currentMimeTypePropName),WorkflowRuntimeParameters.DEFAULT_CSV_DELIMITER);for (String currentPortMimeType : currentPortMimeTypes) {if (!currentPortMimeType.isEmpty()&& !WorkflowRuntimeParameters.UNDEFINED_NONEMPTY_VALUE.equals(currentPortMimeType)) {this.mimeTypeToPortNameMap.put(currentPortMimeType.toLowerCase(), portName);}}} else {}}}}"	Yes
342	"public class A {public Study updateStudyDiseaseTraitByAccessionId(String trait, String accessionId) {Study study =this.getStudyByAccessionId(accessionId).orElseThrow(() -> new ResourceNotFoundException(""Study"", accessionId));DiseaseTrait diseaseTrait =Optional.ofNullable(diseaseTraitRepository.findByTraitIgnoreCase(trait)).orElseThrow(() -> new ResourceNotFoundException(""Disease Trait"", trait));study.setDiseaseTrait(diseaseTrait);studyRepository.save(study);log.info(""Study with accession Id: {} found and updated"", accessionId);return study;}}"	No
343	"public class A {@Test@Ignorepublic final void testSendProcessConfigurationRequest() {ActiveRequestSenderTest.testType = TestType.CONFIG;LOGGER.debug(""Starting "" + ActiveRequestSenderTest.testType.getName());ProcessConfiguration processConfiguration = new ProcessConfiguration();processConfiguration.setProcessName(PROCESS_NAME);processConfiguration.setprocessPIK(PROCESS_PIK);ProcessConfigurationHolder.setInstance(processConfiguration);ProcessConfigurationResponse processConfigurationResponse =this.activeRequestSender.sendProcessConfigurationRequest(PROCESS_NAME);compareConfiguration(processConfigurationResponse);}}"	No
344	"public class A {private CompletableFuture<AsyncBiFunctionService.WithSerdes<String, String, Integer>>createKafkaStreams(Config config, Properties kafkaProperties, String storeTopic, String storeName) {log.info(""Creating Kafka Streams, store name: {}"", storeName);long timeoutMillis = config.get(Config.STALE_RESULT_TIMEOUT_MS);ForeachActionDispatcher<String, Integer> dispatcher = new ForeachActionDispatcher<>();WaitForResultService serviceImpl = new WaitForResultService(timeoutMillis, dispatcher);closeables.add(serviceImpl);AtomicBoolean done = new AtomicBoolean(false);CompletableFuture<AsyncBiFunctionService.WithSerdes<String, String, Integer>> cf =new CompletableFuture<>();KafkaStreams.StateListener listener =(newState, oldState) -> {if (newState == KafkaStreams.State.RUNNING && !done.getAndSet(true)) {cf.completeAsync(() -> serviceImpl);}if (newState == KafkaStreams.State.ERROR) {cf.completeExceptionally(new IllegalStateException(""KafkaStreams error""));}};Properties streamsProperties = new Properties();streamsProperties.putAll(kafkaProperties);Object rf = kafkaProperties.get(StreamsConfig.REPLICATION_FACTOR_CONFIG);if (rf == null) {streamsProperties.put(StreamsConfig.REPLICATION_FACTOR_CONFIG, ""-1"");}Topology topology =new TopicStoreTopologyProvider(storeTopic, storeName, streamsProperties, dispatcher).get();streams = new KafkaStreams(topology, streamsProperties);streams.setStateListener(listener);streams.setGlobalStateRestoreListener(new LoggingStateRestoreListener());closeables.add(streams);streams.start();return cf;}}"	No
345	"public class A {@Overridepublic void mouseClicked(MouseEvent mouseEvent) {JList theList = (JList) mouseEvent.getSource();if (mouseEvent.getClickCount() == 2) {int index = theList.locationToIndex(mouseEvent.getPoint());if (index >= 0) {Object o = theList.getModel().getElementAt(index);log.info(""Double-clicked on: {} Toggling filter enabled."", o);send(""toggleFilter"", o.toString());}}}}"	No
346	"public class A {@Overridepublic boolean updateServiceProperties(Map<String, String> properties) {EntityManager em = getEntityManager(getManagementAppId());Query q = Query.fromQL(""select *"");Results results = null;try {results = em.searchCollection(em.getApplicationRef(), ""propertymaps"", q);} catch (Exception ex) {return false;}org.apache.usergrid.persistence.Entity propsEntity = null;if (!results.isEmpty()) {propsEntity = results.getEntity();} else {propsEntity = EntityFactory.newEntity(UUIDUtils.newTimeUUID(), ""propertymap"");}for (String key : properties.keySet()) {propsEntity.setProperty(key, properties.get(key).toString());}try {em.update(propsEntity);} catch (Exception ex) {logger.error(""Error updating service properties"", ex);return false;}return true;}}"	Yes
347	"public class A {public CubeInstance createCubeAndDesc(String cubeName, String projectName, CubeDesc desc)throws IOException {if (getCubeManager().getCube(cubeName) != null) {throw new InternalErrorException(""The cube named "" + cubeName + "" already exists"");}String owner = SecurityContextHolder.getContext().getAuthentication().getName();CubeDesc createdDesc = null;CubeInstance createdCube = null;boolean isNew = false;if (getCubeDescManager().getCubeDesc(desc.getName()) == null) {createdDesc = getCubeDescManager().createCubeDesc(desc);isNew = true;} else {createdDesc = getCubeDescManager().updateCubeDesc(desc);}if (!createdDesc.getError().isEmpty()) {if (isNew) {getCubeDescManager().removeCubeDesc(createdDesc);}throw new InternalErrorException(createdDesc.getError().get(0));}try {int cuboidCount = CuboidCLI.simulateCuboidGeneration(createdDesc);logger.info(""New cube "" + cubeName + "" has "" + cuboidCount + "" cuboids"");} catch (Exception e) {getCubeDescManager().removeCubeDesc(createdDesc);throw new InternalErrorException(""Failed to deal with the request."", e);}createdCube = getCubeManager().createCube(cubeName, projectName, createdDesc, owner);accessService.init(createdCube, AclPermission.ADMINISTRATION);ProjectInstance project = getProjectManager().getProject(projectName);accessService.inherit(createdCube, project);return createdCube;}}"	No
348	"public class A {private void initThemeResolver(ApplicationContext context) {try {this.themeResolver = context.getBean(THEME_RESOLVER_BEAN_NAME, ThemeResolver.class);if (logger.isDebugEnabled()) {logger.debug(""Using ThemeResolver ["" + this.themeResolver + ""]"");}} catch (NoSuchBeanDefinitionException ex) {this.themeResolver = getDefaultStrategy(context, ThemeResolver.class);if (logger.isDebugEnabled()) {logger.debug(""Unable to locate ThemeResolver with name '""+ THEME_RESOLVER_BEAN_NAME+ ""': using default [""+ this.themeResolver+ ""]"");}}}}"	No
349	"public class A {private double addNetworkDelays(Solution bestSol,Topology topology,double[] numVisitsModule,SuitableOptions cloudCharacteristics) {double networkDelay = 0.0;for (int i = 0; i < topology.size(); i++) {TopologyElement element = topology.getElementIndex(i);double sumOfDelaysSingleModule = 0.0;for (TopologyElementCalled elementCalled : element) {sumOfDelaysSingleModule +=elementCalled.getProbCall()* latencyBetweenElements(bestSol,element.getName(),elementCalled.getElement().getName(),cloudCharacteristics);}log.trace(""calculated network delay for module {} in solution {} is (numVisitsModule[i] *""+ "" sumOfDelaysSingleModule): {}"",i,bestSol.toString(),numVisitsModule[i] * sumOfDelaysSingleModule);networkDelay += numVisitsModule[i] * sumOfDelaysSingleModule;}return networkDelay;}}"	No
350	"public class A {public static <T extends Entity<T>> void deleteAll(BaseDao<T> doa)throws ServiceFailureException {boolean more = true;int count = 0;while (more) {EntityList<T> entities = doa.query().list();if (entities.getCount() > 0) {LOGGER.debug(""{} to go."", entities.getCount());} else {more = false;}for (T entity : entities) {doa.delete(entity);count++;}}LOGGER.debug(""Deleted {} using {}."", count, doa.getClass().getName());}}"	No
351	"public class A {public int assertStatusCode(Response res, String testName) {int statusCode = res.getStatus();logger.debug(testName + "": status = "" + statusCode);Assert.assertTrue(testRequestType.isValidStatusCode(statusCode),invalidStatusCodeMessage(testRequestType, statusCode));Assert.assertEquals(statusCode, testExpectedStatusCode);return statusCode;}}"	No
352	public class A {public void createSessionIdCookie(SessionId sessionId, boolean isUma) {try {final Object response = externalContext.getResponse();final Object request = externalContext.getRequest();if (response instanceof HttpServletResponse && request instanceof HttpServletRequest) {final HttpServletResponse httpResponse = (HttpServletResponse) response;final HttpServletRequest httpRequest = (HttpServletRequest) request;createSessionIdCookie(sessionId, httpRequest, httpResponse, isUma);}} catch (Exception e) {}}}	Yes
353	public class A {@Overridepublic void callCrawlerService() {getCrawlerService().crawlSite(getAudit(), getUrl());}}	Yes
354	public class A {private void decodeSelfContained(Segment<ByteBuf> segment, List<Object> out) {ByteBuf payload = segment.payload;int frameCount = 0;do {Frame frame = frameCodec.decode(payload);out.add(frame);frameCount += 1;} while (payload.isReadable());payload.release();}}	Yes
355	public class A {public static com.liferay.calendar.model.CalendarResourceSoap[] search(long companyId,long[] groupIds,long[] classNameIds,String code,String name,String description,boolean active,boolean andOperator,int start,int end,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.calendar.model.CalendarResource>orderByComparator)throws RemoteException {try {java.util.List<com.liferay.calendar.model.CalendarResource> returnValue =CalendarResourceServiceUtil.search(companyId,groupIds,classNameIds,code,name,description,active,andOperator,start,end,orderByComparator);return com.liferay.calendar.model.CalendarResourceSoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
356	"public class A {private PropertyConverter createConverter(SecurityContext securityContext, GraphObject entity) {try {return (PropertyConverter<?, T>) constructor.newInstance(securityContext, entity);} catch (Throwable t) {logger.error(""Unable to instantiate converter of type {} for key {}"",new Object[] {constructor.getClass().getName(), dbName});}return null;}}"	No
357	"public class A {@Overridepublic void encode(Object value, OutputStream outputStream) throws IOException {if (converter == null) {converter = ConvertToIndexedRecord.getConverter((T) value);}IndexedRecord ir = converter.convertToAvro((T) value);if (internalAvroCoder == null) {Schema s = converter.getSchema();avroSchemaHolder.put(s);@SuppressWarnings(""unchecked"")AvroCoder<IndexedRecord> tCoder =(AvroCoder<IndexedRecord>)(AvroCoder<? extends IndexedRecord>) AvroCoder.of(ir.getSchema());internalAvroCoder = tCoder;}LOG.debug(""Internal AvroCoder's schema is {}"", internalAvroCoder.getSchema());internalAvroCoder.encode(convertToAvro(value), outputStream);}}"	Yes
358	"public class A {@Overridepublic ConnectorPageSource createPageSource(ConnectorTransactionHandle transaction,ConnectorSession session,ConnectorSplit split,ConnectorTableHandle table,List<ColumnHandle> columns,DynamicFilter dynamicFilter) {log.debug(""createPageSource(transaction=%s, session=%s, split=%s, table=%s, columns=%s)"",transaction, session, split, table, columns);BigQuerySplit bigQuerySplit = (BigQuerySplit) split;checkArgument(bigQuerySplit.getColumns().isEmpty() || bigQuerySplit.getColumns().equals(columns),""Requested columns %s do not match list in split %s"",columns,bigQuerySplit.getColumns());if (bigQuerySplit.representsEmptyProjection()) {return new BigQueryEmptyProjectionPageSource(bigQuerySplit.getEmptyRowsToGenerate());}List<BigQueryColumnHandle> bigQueryColumnHandles =columns.stream().map(BigQueryColumnHandle.class::cast).collect(toImmutableList());return new BigQueryResultPageSource(bigQueryStorageClientFactory, maxReadRowsRetries, bigQuerySplit, bigQueryColumnHandles);}}"	No
359	"public class A {@Overridepublic ReturnValue update_processing_status(int processingID, ProcessingStatus status) {if (status == null) {return new ReturnValue(null, ""Processing.Status argument cannot be null"", ReturnValue.INVALIDARGUMENT);}StringBuilder sql = new StringBuilder();try {sql.append(""UPDATE processing SET status = "");sql.append(""'"").append(status.name()).append(""'"");sql.append("", update_tstmp='"").append(new Timestamp(System.currentTimeMillis())).append(""' "");sql.append("" WHERE processing_id = "").append(processingID);executeUpdate(sql.toString());} catch (SQLException e) {return new ReturnValue(null,""Could not execute one of the SQL commands: ""+ sql.toString()+ ""\nException: ""+ e.getMessage(),ReturnValue.SQLQUERYFAILED);}return new ReturnValue();}}"	Yes
360	public class A {@JmsListener(destination = MetadataTopics.FEED_INIT_STATUS_CHANGE,containerFactory = JmsConstants.TOPIC_LISTENER_CONTAINER_FACTORY)public void receiveEvent(FeedInitializationChangeEvent event) {if (this.metadataRecorders.isEmpty()) {} else {this.metadataRecorders.forEach(r -> r.initializationStatusChanged(event.getFeedId(), event.getStatus()));}}}	Yes
361	"public class A {private void logError(Path path, IOException e) {if (logToStdErr) {System.err.println(""Unexpected file visiting failure: "" + path);e.printStackTrace();} else {}}}"	Yes
362	"public class A {@Overridepublic void doConfigure(ServiceProfile<?> profile) throws InterruptedException, IOException {LOG.debug(""Configuring file sessions: {}"", profile.getPrefix());directory = prepareDirectory(profile);}}"	Yes
363	"public class A {@Overridepublic MLModel call() throws Exception {FileSystem fs = modelPath.getFileSystem(new HiveConf());if (!fs.exists(modelPath)) {throw new IOException(""Model path not found "" + modelPath.toString());}ObjectInputStream ois = null;try {ois = new ObjectInputStream(fs.open(modelPath));MLModel model = (MLModel) ois.readObject();log.info(""Loaded model {} from location {}"", model.getId(), modelPath);return model;} catch (ClassNotFoundException e) {throw new IOException(e);} finally {IOUtils.closeQuietly(ois);}}}"	No
364	"public class A {public List<ViewResult.Row> getDBViewQueryResult(String id, String docEntityType) {List<ViewResult.Row> rows =db.queryView(new ViewQuery().viewName(CASE_ID_VIEW_NAME).designDocId(""_design/"" + docEntityType).key(id).queryParam(ID_FIELD_ON_ENTITY, id).includeDocs(true)).getRows();return rows;}}"	Yes
365	"public class A {@Overridepublic void beforeDocumentChange(DocumentEvent e) {if (myDuringOnesideDocumentModification) return;if (myChangedBlockData == null) {LOG.warn(""oneside beforeDocumentChange - myChangedBlockData == null"");return;}try {myDuringTwosideDocumentModification = true;Document twosideDocument = getDocument(myMasterSide);LineCol onesideStartPosition = LineCol.fromOffset(myDocument, e.getOffset());LineCol onesideEndPosition = LineCol.fromOffset(myDocument, e.getOffset() + e.getOldLength());int line1 = onesideStartPosition.line;int line2 = onesideEndPosition.line + 1;int shift = DiffUtil.countLinesShift(e);int twosideStartLine = transferLineFromOnesideStrict(myMasterSide, onesideStartPosition.line);int twosideEndLine = transferLineFromOnesideStrict(myMasterSide, onesideEndPosition.line);if (twosideStartLine == -1 || twosideEndLine == -1) {logDebugInfo(e, onesideStartPosition, onesideEndPosition, twosideStartLine, twosideEndLine);markSuppressEditorTyping();return;}int twosideStartOffset =twosideDocument.getLineStartOffset(twosideStartLine) + onesideStartPosition.column;int twosideEndOffset =twosideDocument.getLineStartOffset(twosideEndLine) + onesideEndPosition.column;twosideDocument.replaceString(twosideStartOffset, twosideEndOffset, e.getNewFragment());for (UnifiedDiffChange change : myChangedBlockData.getDiffChanges()) {change.processChange(line1, line2, shift);}LineNumberConvertor lineNumberConvertor = myChangedBlockData.getLineNumberConvertor();lineNumberConvertor.handleOnesideChange(line1, line2, shift, myMasterSide);} finally {markStateIsOutOfDate();scheduleRediff();myDuringTwosideDocumentModification = false;}}}"	No
366	"public class A {private Optional<TaskCleanupType> getCleanupType(SingularityTaskId taskId, String statusMessage) {try {String[] cleanupTypeString = statusMessage.split(""\\s+"");if (cleanupTypeString.length > 0) {return Optional.of(TaskCleanupType.valueOf(cleanupTypeString[0]));}} catch (Throwable t) {LOG.info(""Could not parse cleanup type from {} for {}"", statusMessage, taskId);}return Optional.empty();}}"	No
367	"public class A {@Overridepublic void init(FilterConfig filterConfig) throws ServletException {ServletContext context = filterConfig.getServletContext();Object attribute = context.getAttribute(TAG_CORE_SETTINGS);if (!(attribute instanceof CoreSettings)) {throw new IllegalArgumentException(""Could not load core settings."");}CoreSettings coreSettings = (CoreSettings) attribute;Settings authSettings = coreSettings.getAuthSettings();roleMappings = AuthUtils.loadRoleMapping(authSettings);final boolean anonRead = authSettings.getBoolean(TAG_AUTH_ALLOW_ANON_READ, CoreSettings.class);roleMappersByPath.put(""/Data"", method -> Role.ADMIN);roleMappersByPath.put(""/keyc"", method -> Role.ADMIN);final Utils.MethodRoleMapper roleMapperSta =(HttpMethod method) -> {switch (method) {case DELETE:return Role.DELETE;case GET:if (anonRead) {return Role.NONE;}return Role.READ;case HEAD:return Role.NONE;case PATCH:return Role.UPDATE;case POST:return Role.CREATE;case PUT:return Role.UPDATE;case OPTIONS:return Role.NONE;default:return Role.ERROR;}};roleMappersByPath.put(""/v1.0"", roleMapperSta);roleMappersByPath.put(""/v1.1"", roleMapperSta);try {deploymentContext = new AdapterDeploymentContext(Utils.resolveDeployment(coreSettings));} catch (RuntimeException exc) {LOGGER.error(""Failed to initialise Keycloak. There is a problem with the configuration."");throw new IllegalArgumentException(""Exception initialising keycloak."", exc);}nodesRegistrationManagement = new NodesRegistrationManagement();sessionCleaner =new UserSessionManagement() {@Overridepublic void logoutAll() {idMapper.clear();}@Overridepublic void logoutHttpSessions(List<String> ids) {LOGGER.debug(""Logging out Http Sessions"");for (String id : ids) {LOGGER.debug(""Removed session: {}"", id);idMapper.removeSession(id);}}};}}"	Yes
368	public class A {public static void annotationMockSupportSetup(Class<?> testClass, String methodName, ActivitiMockSupport mockSupport) {Method method = null;try {method = testClass.getMethod(methodName, (Class<?>[]) null);} catch (Exception e) {return;}handleMockServiceTaskAnnotation(mockSupport, method);handleMockServiceTasksAnnotation(mockSupport, method);handleNoOpServiceTasksAnnotation(mockSupport, method);}}	Yes
369	public class A {@Overridepublic void onWarning(String message) {if (loggingInitialized.get()) {} else {warnings.add(message);}}}	Yes
370	public class A {public static SortedKeyValueIterator<Key, Value> loadIterators(SortedKeyValueIterator<Key, Value> source, IterLoad iterLoad) throws IOException {SortedKeyValueIterator<Key, Value> prev = source;try {for (IterInfo iterInfo : iterLoad.iters) {Class<SortedKeyValueIterator<Key, Value>> clazz = null;if (iterLoad.classCache != null) {clazz = iterLoad.classCache.get(iterInfo.className);if (clazz == null) {clazz = loadClass(iterLoad.useAccumuloClassLoader, iterLoad.context, iterInfo);iterLoad.classCache.put(iterInfo.className, clazz);}} else {clazz = loadClass(iterLoad.useAccumuloClassLoader, iterLoad.context, iterInfo);}SortedKeyValueIterator<Key, Value> skvi = clazz.getDeclaredConstructor().newInstance();Map<String, String> options = iterLoad.iterOpts.get(iterInfo.iterName);if (options == null) options = Collections.emptyMap();skvi.init(prev, options, iterLoad.iteratorEnvironment);prev = skvi;}} catch (ReflectiveOperationException e) {throw new RuntimeException(e);}return prev;}}	Yes
371	"public class A {public void execute() throws IOException, InterruptedException {if (checkTaskState()) {return;}preLoadOnWorkerObservers();GiraphTimerContext superstepTimerContext = superstepTimer.time();finishedSuperstepStats = serviceWorker.setup();superstepTimerContext.stop();if (collectInputSuperstepStats(finishedSuperstepStats)) {return;}prepareGraphStateAndWorkerContext();List<PartitionStats> partitionStatsList = new ArrayList<PartitionStats>();int numComputeThreads = conf.getNumComputeThreads();while (!finishedSuperstepStats.allVerticesHalted()) {final long superstep = serviceWorker.getSuperstep();superstepTimerContext = getTimerForThisSuperstep(superstep);GraphState graphState =new GraphState(superstep,finishedSuperstepStats.getVertexCount(),finishedSuperstepStats.getEdgeCount(),context);Collection<? extends PartitionOwner> masterAssignedPartitionOwners =serviceWorker.startSuperstep();if (LOG.isDebugEnabled()) {LOG.debug(""execute: "" + MemoryUtils.getRuntimeMemoryStats());}context.progress();serviceWorker.exchangeVertexPartitions(masterAssignedPartitionOwners);context.progress();boolean hasBeenRestarted = checkSuperstepRestarted(superstep);GlobalStats globalStats = serviceWorker.getGlobalStats();if (hasBeenRestarted) {graphState =new GraphState(superstep,finishedSuperstepStats.getVertexCount(),finishedSuperstepStats.getEdgeCount(),context);} else if (storeCheckpoint(globalStats.getCheckpointStatus())) {break;}serviceWorker.getServerData().prepareResolveMutations();context.progress();prepareForSuperstep(graphState);context.progress();MessageStore<I, Writable> messageStore =serviceWorker.getServerData().getCurrentMessageStore();int numPartitions = serviceWorker.getPartitionStore().getNumPartitions();int numThreads = Math.min(numComputeThreads, numPartitions);if (LOG.isInfoEnabled()) {}partitionStatsList.clear();if (numPartitions > 0) {processGraphPartitions(context, partitionStatsList, graphState, messageStore, numThreads);}finishedSuperstepStats =completeSuperstepAndCollectStats(partitionStatsList, superstepTimerContext);}if (LOG.isInfoEnabled()) {LOG.info(""execute: BSP application done (global vertices marked done)"");}updateSuperstepGraphState();postApplication();}}"	Yes
372	"public class A {@Asynchronouspublic void processMetadataValidationTimerEvent(@Observes @Scheduled EntityIdMonitoringEvent entityIdMonitoringEvent) {if (this.isActive.get()) {return;}if (!this.isActive.compareAndSet(false, true)) {return;}try {process();} catch (Throwable ex) {log.error(""Exception happened while monitoring EntityId"", ex);} finally {this.isActive.set(false);}}}"	No
373	"public class A {private void handleCommandPlaylistRestore() {if (!playlistName.isEmpty()) {CompletableFuture<Boolean> browsing = isBrowsing;try {if (browsing != null) {browsing.get(config.responseTimeout, TimeUnit.MILLISECONDS);}} catch (InterruptedException | ExecutionException | TimeoutException e) {logger.debug(""Exception, previous server on {} query interrupted or timed out, restoring playlist""+ "" anyway"",thing.getLabel());}UpnpEntryQueue queue = new UpnpEntryQueue();queue.restoreQueue(playlistName, config.udn, bindingConfig.path);updateTitleSelection(queue.getEntryList());String parentId;UpnpEntry current = queue.get(0);if (current != null) {parentId = current.getParentId();UpnpEntry entry = parentMap.get(parentId);if (entry != null) {currentEntry = entry;} else {currentEntry = new UpnpEntry(parentId, parentId, DIRECTORY_ROOT, ""object.container"");}} else {parentId = DIRECTORY_ROOT;currentEntry = ROOT_ENTRY;}logger.debug(""Restoring playlist to node {} on server {}"", parentId, thing.getLabel());}}}"	No
374	public class A {private void updatePeerReviewOrgReferences(OrgEntity orgToReference, List<Long> orgIds) {List<PeerReviewEntity> peerReviews = peerReviewDao.getPeerReviewsReferencingOrgs(orgIds);peerReviews.forEach(p -> {p.setOrg(orgToReference);if (!dryRun) {peerReviewDao.merge(p);}});}}	Yes
375	"public class A {@Testpublic void TestCreateDupGenericVnfFailure_1002() {new MockAAIGenericVnfSearch(wireMockServer);MockAAICreateGenericVnf(wireMockServer);MockAAIVfModulePUT(wireMockServer, true);Map<String, Object> variables = new HashMap<>();variables.put(""mso-request-id"", UUID.randomUUID().toString());variables.put(""isDebugLogEnabled"", ""true"");variables.put(""isVidRequest"", ""false"");variables.put(""vnfName"", ""STMTN5MMSC21"");variables.put(""serviceId"", ""00000000-0000-0000-0000-000000000000"");variables.put(""personaModelId"", ""973ed047-d251-4fb9-bf1a-65b8949e0a73"");variables.put(""personaModelVersion"", ""1.0"");variables.put(""vfModuleName"", ""STMTN5MMSC21-MMSC::module-0-0"");variables.put(""vfModuleModelName"", ""MMSC::module-0"");String processId = invokeSubProcess(""CreateAAIVfModule"", variables);WorkflowException exception =BPMNUtil.getRawVariable(processEngine, ""CreateAAIVfModule"", ""WorkflowException"", processId);Assert.assertEquals(1002, exception.getErrorCode());Assert.assertEquals(true,exception.getErrorMessage().contains(""Invalid request for new Generic VNF which already exists""));}}"	Yes
376	public class A {public synchronized void setMaxActive(int maxActive) {if (maxActive != this.maxActive) {maxActiveSemaphore = makeSemaphore(maxActive);this.maxActive = maxActive;}}}	Yes
377	"public class A {public void onStartElement(String namespace,String localName,String prefix,Attributes attributes,DeserializationContext context)throws SAXException {if (log.isDebugEnabled()) {}if (context.isNil(attributes)) {return;}setValue(new HashMap());if (log.isDebugEnabled()) {log.debug(""Exit: MapDeserializer::startElement()"");}}}"	Yes
378	public class A {@Overridepublic void publishApi(Api api, IAsyncResultHandler<Void> handler) {super.publishApi(api, handler);proxy.publishApi(api);}}	Yes
379	"public class A {private void notifyFailure(Stream stream, FailureFrame frame, Callback callback) {Listener listener = this.listener;if (listener != null) {try {listener.onFailure(stream, frame.getError(), frame.getReason(), frame.getFailure(), callback);} catch (Throwable x) {LOG.info(""Failure while notifying listener {}"", listener, x);callback.failed(x);}} else {callback.succeeded();}}}"	No
380	public class A {@Overrideprotected void doResume() throws Exception {if (!initialized) {doStart();} else {if (listenerContainer != null) {startListenerContainer();} else {}}}}	Yes
381	public class A {@Overridepublic void doExceptionCaughtListeners(final long sessionId, final Throwable cause) {runManagementTask(new Runnable() {@Overridepublic void run() {try {final String exceptionMessage = Utils.getCauseString(cause);List<ServiceManagementListener> serviceListeners = getManagementListeners();for (final ServiceManagementListener listener : serviceListeners) {listener.doExceptionCaught(DefaultServiceManagementBean.this, sessionId, exceptionMessage);}markChanged();} catch (Exception ex) {}}});}}	Yes
382	public class A {protected MsoException runtimeExceptionToMsoException(RuntimeException e, String context) {MsoAdapterException me = new MsoAdapterException(e.getMessage(), e);me.addContext(context);me.setCategory(MsoExceptionCategory.INTERNAL);return me;}}	Yes
383	"public class A {public void initialize() throws FalconException {String serviceClassNames =StartupProperties.get().getProperty(""application.services"", ""org.apache.falcon.entity.store.ConfigurationStore"");for (String serviceClassName : serviceClassNames.split("","")) {serviceClassName = serviceClassName.trim();if (serviceClassName.isEmpty()) {continue;}FalconService service = ReflectionUtils.getInstanceByClassName(serviceClassName);services.register(service);try {service.init();} catch (Throwable t) {LOG.error(""Failed to initialize service {}"", serviceClassName, t);throw new FalconException(t);}LOG.info(""Service initialized: {}"", serviceClassName);}}}"	Yes
384	"public class A {public Policy resolvePolicy(Policy policy, String ref, Class<? extends Policy> type) {if (policy != null) {return policy;}if (org.apache.camel.util.ObjectHelper.isNotEmpty(ref)) {return mandatoryLookup(ref, Policy.class);}Policy answer = null;if (type != null) {Map<String, ?> types = findByTypeWithName(type);if (types.size() == 1) {Object found = types.values().iterator().next();if (type.isInstance(found)) {return type.cast(found);}}}if (type == TransactedPolicy.class) {answer = lookup(PROPAGATION_REQUIRED, TransactedPolicy.class);}if (answer == null && type == TransactedPolicy.class) {Class<?> tmClazz =camelContext.getClassResolver().resolveClass(""org.springframework.transaction.PlatformTransactionManager"");if (tmClazz != null) {Map<String, ?> maps = findByTypeWithName(tmClazz);if (maps.size() == 1) {Object transactionManager = maps.values().iterator().next();LOG.debug(""One instance of PlatformTransactionManager found in registry: {}"",transactionManager);Class<?> txClazz =camelContext.getClassResolver().resolveClass(""org.apache.camel.spring.spi.SpringTransactionPolicy"");if (txClazz != null) {LOG.debug(""Creating a new temporary SpringTransactionPolicy using the""+ "" PlatformTransactionManager: {}"",transactionManager);TransactedPolicy txPolicy =org.apache.camel.support.ObjectHelper.newInstance(txClazz, TransactedPolicy.class);Method method;try {method = txClazz.getMethod(""setTransactionManager"", tmClazz);} catch (NoSuchMethodException e) {throw new RuntimeCamelException(""Cannot get method setTransactionManager(PlatformTransactionManager) on class: ""+ txClazz);}org.apache.camel.support.ObjectHelper.invokeMethod(method, txPolicy, transactionManager);return txPolicy;} else {throw new RuntimeCamelException(""Cannot create a transacted policy as camel-spring.jar is not on the classpath!"");}} else {if (maps.isEmpty()) {throw new NoSuchBeanException(null, ""PlatformTransactionManager"");} else {throw new IllegalArgumentException(""Found ""+ maps.size()+ "" PlatformTransactionManager in registry. Cannot determine which one to use.""+ "" Please configure a TransactionTemplate on the transacted policy."");}}}}return answer;}}"	No
385	"public class A {public CalendarEventSet getEvents(CalendarConfiguration calendarConfiguration, Interval interval, PortletRequest request)throws CalendarException {String url = this.urlCreator.constructUrl(calendarConfiguration, interval, request);log.debug(""generated url: "" + url);String intermediateCacheKey =cacheKeyGenerator.getKey(calendarConfiguration, interval, request, cacheKeyPrefix.concat(""."").concat(url));T calendar;Element cachedCalendar = this.cache.get(intermediateCacheKey);if (cachedCalendar == null) {Credentials credentials = credentialsExtractor.getCredentials(request);InputStream stream = retrieveCalendarHttp(url, credentials);try {calendar = (T) contentProcessor.getIntermediateCalendar(interval, stream);} catch (CalendarException e) {log.error(""Calendar parsing exception: ""+ e.getCause().getMessage()+ "" from calendar at ""+ url);throw e;}cachedCalendar = new Element(intermediateCacheKey, calendar);this.cache.put(cachedCalendar);if (log.isDebugEnabled()) {log.debug(""Storing calendar cache, key:"" + intermediateCacheKey);}} else {if (log.isDebugEnabled()) {log.debug(""Retrieving calendar from cache, key:"" + intermediateCacheKey);}calendar = (T) cachedCalendar.getObjectValue();}String processorCacheKey = getIntervalSpecificCacheKey(intermediateCacheKey, interval);CalendarEventSet eventSet;Element cachedElement = this.cache.get(processorCacheKey);if (cachedElement == null) {Set<VEvent> events = contentProcessor.getEvents(interval, calendar);int timeToLiveInSeconds = -1;long currentTime = System.currentTimeMillis();if (cachedCalendar.getExpirationTime() > currentTime) {long timeToLiveInMilliseconds = cachedCalendar.getExpirationTime() - currentTime;timeToLiveInSeconds = (int) timeToLiveInMilliseconds / 1000;}eventSet =insertCalendarEventSetIntoCache(this.cache,processorCacheKey,events,timeToLiveInSeconds > 0 ? timeToLiveInSeconds : -1);} else {if (log.isDebugEnabled()) {log.debug(""Retrieving calendar event set from cache, key:"" + processorCacheKey);}eventSet = (CalendarEventSet) cachedElement.getObjectValue();}return eventSet;}}"	Yes
386	"public class A {private void processCMessage(CMessage cMessage) {DeviceConfiguration c = null;for (DeviceConfiguration conf : configurations) {if (conf.getSerialNumber().equalsIgnoreCase(cMessage.getSerialNumber())) {c = conf;break;}}if (c == null) {configurations.add(DeviceConfiguration.create(cMessage));} else {c.setValues(cMessage);Device di = getDevice(cMessage.getSerialNumber());if (di != null) {di.setProperties(cMessage.getProperties());}}if (exclusive) {for (DeviceStatusListener deviceStatusListener : deviceStatusListeners) {try {Device di = getDevice(cMessage.getSerialNumber());if (di != null) {deviceStatusListener.onDeviceConfigUpdate(getThing(), di);}} catch (NullPointerException e) {logger.debug(""Unexpected NPE cought. Please report stacktrace"", e);} catch (Exception e) {unregisterDeviceStatusListener(deviceStatusListener);}}}}}"	Yes
387	"public class A {@Overridepublic IRODSFile getTrashHomeForLoggedInUser() throws JargonException {log.info(""getTrashHomeForLoggedInUser())"");log.info(""for user:{}"", getIRODSAccount());String trashHomePath =MiscIRODSUtils.buildTrashHome(getIRODSAccount().getUserName(), getIRODSAccount().getZone());log.info(""getting file at:{}"", trashHomePath);IRODSFile trashFile =getIRODSAccessObjectFactory().getIRODSFileFactory(getIRODSAccount()).instanceIRODSFile(trashHomePath);return trashFile;}}"	No
388	"public class A {@Overridepublic synchronized void individualAcknowledge(Transaction tx, final long messageID)throws Exception {if (browseOnly) {return;}boolean startedTransaction = false;if (logger.isTraceEnabled()) {logger.trace(""individualACK messageID="" + messageID);}if (tx == null) {if (logger.isTraceEnabled()) {logger.trace(""individualACK starting new TX"");}startedTransaction = true;tx = new TransactionImpl(storageManager);}try {MessageReference ref;ref = removeReferenceByID(messageID);if (logger.isTraceEnabled()) {logger.trace(""ACKing ref "" + ref + "" on tx= "" + tx + "", consumer="" + this);}if (ref == null) {ActiveMQIllegalStateException ils =ActiveMQMessageBundle.BUNDLE.consumerNoReference(id, messageID, messageQueue.getName());tx.markAsRollbackOnly(ils);throw ils;}ref.acknowledge(tx, this);acks++;if (startedTransaction) {tx.commit();}} catch (ActiveMQException e) {if (startedTransaction) {tx.rollback();} else if (tx != null) {tx.markAsRollbackOnly(e);}throw e;} catch (Throwable e) {ActiveMQServerLogger.LOGGER.errorAckingMessage((Exception) e);ActiveMQIllegalStateException hqex = new ActiveMQIllegalStateException(e.getMessage());if (startedTransaction) {tx.rollback();} else if (tx != null) {tx.markAsRollbackOnly(hqex);}throw hqex;}}}"	No
389	public class A {public static NotebookAuthorization getInstance() {if (instance == null) {init(ZeppelinConfiguration.create());}return instance;}}	Yes
390	"public class A {public static <O extends ObjectType> PrismObject<O> reconstructObject(Class<O> type, String oid, String eventIdentifier, Task task, OperationResult result) {try {MidPointApplication application = (MidPointApplication) MidPointApplication.get();return application.getAuditService().reconstructObject(type, oid, eventIdentifier, task, result);} catch (Exception ex) {LOGGER.debug(""Error occurred while reconsructing the object, "" + ex.getMessage());}return null;}}"	No
391	"public class A {protected Pattern createNonProxyPattern(String nonProxyHosts) {if (nonProxyHosts == null || nonProxyHosts.isEmpty()) return null;nonProxyHosts = nonProxyHosts.replaceAll(""\\."", ""\\\\."").replaceAll(""\\*"", "".*?"");nonProxyHosts = ""("" + nonProxyHosts.replaceAll(""\\|"", "")|("") + "")"";try {return Pattern.compile(nonProxyHosts);} catch (Exception e) {return null;}}}"	Yes
392	"public class A {@Overridepublic void call(final Object... args) {logger.debug(""Listener: Disconnected from the ambient weather service)"");handleError(Socket.EVENT_DISCONNECT, args);isConnected = false;}}"	No
393	public class A {@ClientCacheEntryExpiredpublic void expired(ClientCacheEntryExpiredEvent e) {for (ExpiredListener listener : expired) {try {listener.expired(e.getKey(), null);} catch (Exception ex) {}}}}	Yes
394	"public class A {@Overridepublic Set<String> getRoles(String username) throws AccountException {if (logger.isDebugEnabled()) {logger.debug(""getRoleSets using rolesQuery: "" + rolesQuery + "", username: "" + username);}Set<String> roles = new LinkedHashSet<String>();Connection conn = null;PreparedStatement ps = null;ResultSet rs = null;try {conn = getConnection();if (logger.isDebugEnabled()) {}ps = conn.prepareStatement(rolesQuery);try {ps.setString(1, username);} catch (ArrayIndexOutOfBoundsException ignore) {}rs = ps.executeQuery();if (rs.next() == false) {if (logger.isDebugEnabled()) {logger.debug(""No roles found"");}return roles;}do {String roleName = rs.getString(1);roles.add(roleName);} while (rs.next());} catch (SQLException ex) {AccountException ae = new AccountException(""Query failed"");ae.initCause(ex);throw ae;} catch (Exception e) {AccountException ae = new AccountException(""unknown exception"");ae.initCause(e);throw ae;} finally {if (rs != null) {try {rs.close();} catch (SQLException e) {}}if (ps != null) {try {ps.close();} catch (SQLException e) {}}if (conn != null) {try {conn.close();} catch (Exception ex) {}}}return roles;}}"	Yes
395	public class A {@Overridepublic boolean saveAddress(AddressType address) throws LoadTestDataException {SaveAddressRequestMessageType request = new SaveAddressRequestMessageType();request.setConfigAssertion(buildConfigAssertion());request.setAddress(address);try {LoadTestDataSimpleResponseMessageType response =(LoadTestDataSimpleResponseMessageType)invokeClientPort(AdminWSConstants.ADMIN_LTD_SAVEADDRESS, request);logDebug(AdminWSConstants.ADMIN_LTD_SAVEADDRESS, response.isStatus(), response.getMessage());return response.isStatus();} catch (Exception e) {}return false;}}	Yes
396	public class A {public static com.liferay.commerce.inventory.model.CommerceInventoryWarehouseItemSoapaddCommerceInventoryWarehouseItem(long userId, long commerceInventoryWarehouseId, String sku, int quantity)throws RemoteException {try {com.liferay.commerce.inventory.model.CommerceInventoryWarehouseItem returnValue =CommerceInventoryWarehouseItemServiceUtil.addCommerceInventoryWarehouseItem(userId, commerceInventoryWarehouseId, sku, quantity);return com.liferay.commerce.inventory.model.CommerceInventoryWarehouseItemSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
397	public class A {@Overridepublic void handleMessage(SoapMessage message) throws Fault {try {MDCSetup mdcSetup = new MDCSetup();Exception ex = message.getContent(Exception.class);if (ex == null) {MDC.put(ONAPLogConstants.MDCs.RESPONSE_STATUS_CODE,ONAPLogConstants.ResponseStatus.COMPLETE.toString());} else {int responseCode = 0;responseCode = (int) message.get(Message.RESPONSE_CODE);if (responseCode != 0)MDC.put(ONAPLogConstants.MDCs.RESPONSE_CODE, String.valueOf(responseCode));else MDC.put(ONAPLogConstants.MDCs.RESPONSE_CODE, _500);MDC.put(ONAPLogConstants.MDCs.RESPONSE_STATUS_CODE,ONAPLogConstants.ResponseStatus.ERROR.toString());}mdcSetup.setLogTimestamp();mdcSetup.setElapsedTime();} catch (Exception e) {}}}	Yes
398	"public class A {@Overridepublic void onActivityTestGPRSRequest(ActivityTestGPRSRequest ind) {this.logger.debug(""ActivityTestGPRSRequest"");TestEvent te =TestEvent.createReceivedEvent(EventType.ActivityTestGPRSRequest, ind, sequence++);this.observerdEvents.add(te);}}"	No
399	"public class A {@Testpublic void testSendSlowClientSuccess() throws Exception {try (SiteToSiteClient client =getDefaultBuilder().idleExpiration(1000, TimeUnit.MILLISECONDS).portName(""input-running"").build()) {final Transaction transaction = client.createTransaction(TransferDirection.SEND);assertNotNull(transaction);serverChecksum = ""3882825556"";for (int i = 0; i < 3; i++) {DataPacket packet =new DataPacketBuilder().contents(""Example contents from client."").attr(""Client attr 1"", ""Client attr 1 value"").attr(""Client attr 2"", ""Client attr 2 value"").build();transaction.send(packet);long written =((Peer) transaction.getCommunicant()).getCommunicationsSession().getBytesWritten();logger.info(""{} bytes have been written."", written);Thread.sleep(50);}transaction.confirm();transaction.complete();}}}"	No
400	"public class A {public List<UUID> testEntityCollections(UUID applicationId,UUID entityId,String entityType,String collectionName,int expectedCount)throws Exception {logger.info(""----------------------------------------------------"");EntityManager em = setup.getEmf().getEntityManager(applicationId);Entity en = em.get(new SimpleEntityRef(entityType, entityId));int i = 0;Results entities = em.getCollection(en, collectionName, null, 100, Level.IDS, false);for (UUID id : entities.getIds()) {logger.info((i++) + "" "" + id.toString());}logger.info(""----------------------------------------------------"");assertEquals(""Expected "" + expectedCount + "" connections"",expectedCount,entities.getIds() != null ? entities.getIds().size() : 0);return entities.getIds();}}"	Yes
401	public class A {public void run() {synchronized (this) {if (retryTimer.isPresent()) {retryTimer = Optional.empty();} else {return;}}cancelToResume();}}	Yes
402	"public class A {@Overridepublic void work() {openUserSession();List<Blob> blobList = new ArrayList<>();DownloadService downloadService = Framework.getService(DownloadService.class);for (String docId : docIds) {DocumentRef docRef = new IdRef(docId);if (!session.exists(docRef)) {if (log.isDebugEnabled()) {}continue;}DocumentModel doc = session.getDocument(docRef);Blob blob = downloadService.resolveBlob(doc);if (blob == null) {log.trace(""Not able to resolve blob"");continue;} else if (!downloadService.checkPermission(doc, null, blob, ""download"", Collections.emptyMap())) {if (log.isDebugEnabled()) {}continue;}blobList.add(blob);}if (blobList.isEmpty()) {log.debug(""No blob to be zipped"");updateAndCompleteStoreEntry(Collections.emptyList());return;}Blob blob;String finalFilename = StringUtils.isNotBlank(this.filename) ? this.filename : this.id;try {blob = BlobUtils.zip(blobList, finalFilename);} catch (IOException e) {TransientStore ts = getTransientStore();ts.putParameter(key, DownloadService.TRANSIENT_STORE_PARAM_ERROR, e.getMessage());throw new NuxeoException(""Exception while zipping blob list"", e);}updateAndCompleteStoreEntry(Collections.singletonList(blob));}}"	Yes
403	"public class A {public static void deleteKeycloak(String namespace) {LOGGER.info(""Teardown Keycloak in namespace: {}"", namespace);Exec.exec(true, ""/bin/bash"", PATH_TO_KEYCLOAK_TEARDOWN_SCRIPT, namespace);}}"	No
404	"public class A {@Overridepublic Map<String, Metric> getMetrics() {final Map<String, Metric> gauges = new HashMap<>();for (String pool : POOLS) {for (int i = 0; i < ATTRIBUTES.length; i++) {final String attribute = ATTRIBUTES[i];final String name = NAMES[i];try {final ObjectName on = new ObjectName(""java.nio:type=BufferPool,name="" + pool);mBeanServer.getMBeanInfo(on);gauges.put(name(pool, name), new JmxAttributeGauge(mBeanServer, on, attribute));} catch (JMException ignored) {LOGGER.debug(""Unable to load buffer pool MBeans, possibly running on Java 6"");}}}return Collections.unmodifiableMap(gauges);}}"	No
405	"public class A {@Overridepublic Answer execute(final OvsDestroyBridgeCommand command, final CitrixResourceBase citrixResourceBase) {try {final Connection conn = citrixResourceBase.getConnection();final Network nw =citrixResourceBase.findOrCreateTunnelNetwork(conn, command.getBridgeName());citrixResourceBase.cleanUpTmpDomVif(conn, nw);citrixResourceBase.destroyTunnelNetwork(conn, nw, command.getHostId());s_logger.debug(""OVS Bridge destroyed"");return new Answer(command, true, null);} catch (final Exception e) {s_logger.warn(""caught execption when destroying ovs bridge"", e);return new Answer(command, false, e.getMessage());}}}"	No
406	"public class A {public static void updateJobCredentialProviders(Configuration jobConf) {if (jobConf == null) {return;}String jobKeyStoreLocation =jobConf.get(HiveConf.ConfVars.HIVE_SERVER2_JOB_CREDENTIAL_PROVIDER_PATH.varname);String oldKeyStoreLocation = jobConf.get(Constants.HADOOP_CREDENTIAL_PROVIDER_PATH_CONFIG);if (StringUtils.isNotBlank(jobKeyStoreLocation)) {jobConf.set(Constants.HADOOP_CREDENTIAL_PROVIDER_PATH_CONFIG, jobKeyStoreLocation);LOG.debug(""Setting job conf credstore location to ""+ jobKeyStoreLocation+ "" previous location was ""+ oldKeyStoreLocation);}String credstorePassword = getJobCredentialProviderPassword(jobConf);if (credstorePassword != null) {String execEngine = jobConf.get(ConfVars.HIVE_EXECUTION_ENGINE.varname);if (""mr"".equalsIgnoreCase(execEngine)) {Collection<String> redactedProperties =jobConf.getStringCollection(MRJobConfig.MR_JOB_REDACTED_PROPERTIES);Stream.of(JobConf.MAPRED_MAP_TASK_ENV,JobConf.MAPRED_REDUCE_TASK_ENV,MRJobConfig.MR_AM_ADMIN_USER_ENV).forEach(property -> {addKeyValuePair(jobConf,property,Constants.HADOOP_CREDENTIAL_PASSWORD_ENVVAR,credstorePassword);redactedProperties.add(property);});jobConf.set(MRJobConfig.MR_JOB_REDACTED_PROPERTIES, StringUtils.join(redactedProperties, COMMA));}}}}"	No
407	public class A {private void onReceiveServerStopInstanceReq(ServerStopInstanceReq req) {TaskTracker taskTracker = TaskTrackerPool.getTaskTrackerPool(req.getInstanceId());if (taskTracker == null) {return;}taskTracker.destroy();}}	Yes
408	"public class A {@Overridepublic UpdatePkgLocalizationResult updatePkgLocalization(UpdatePkgLocalizationRequest updatePkgLocalizationRequest) {Preconditions.checkArgument(null != updatePkgLocalizationRequest);Preconditions.checkArgument(!Strings.isNullOrEmpty(updatePkgLocalizationRequest.pkgName),""the package name must be supplied"");final ObjectContext context = serverRuntime.newContext();Pkg pkg = getPkg(context, updatePkgLocalizationRequest.pkgName);User authUser = obtainAuthenticatedUser(context);if (!permissionEvaluator.hasPermission(SecurityContextHolder.getContext().getAuthentication(),pkg,Permission.PKG_EDITLOCALIZATION)) {throw new AccessDeniedException(""unable to edit the package localization for ["" + pkg + ""]"");}for (org.haiku.haikudepotserver.api1.model.pkg.PkgLocalization requestPkgVersionLocalization :updatePkgLocalizationRequest.pkgLocalizations) {NaturalLanguage naturalLanguage =getNaturalLanguage(context, requestPkgVersionLocalization.naturalLanguageCode);pkgLocalizationService.updatePkgLocalization(context,pkg.getPkgSupplement(),naturalLanguage,requestPkgVersionLocalization.title,requestPkgVersionLocalization.summary,requestPkgVersionLocalization.description);}context.commitChanges();return new UpdatePkgLocalizationResult();}}"	Yes
409	"public class A {@SuppressWarnings(""deprecation"")@SneakyThrows(InterruptedException.class)protected void initialize(AbstractConfiguration<?> conf,StatsLogger statsLogger,RetryPolicy zkRetryPolicy,Optional<Object> optionalCtx)throws MetadataException {this.conf = conf;this.acls = ZkUtils.getACLs(conf);if (optionalCtx.isPresent() && optionalCtx.get() instanceof ZooKeeper) {this.ledgersRootPath = conf.getZkLedgersRootPath();log.info(""Initialize zookeeper metadata driver with external zookeeper client : ledgersRootPath =""+ "" {}."",ledgersRootPath);this.zk = (ZooKeeper) (optionalCtx.get());this.ownZKHandle = false;} else {final String metadataServiceUriStr;try {metadataServiceUriStr = conf.getMetadataServiceUri();} catch (ConfigurationException e) {log.error(""Failed to retrieve metadata service uri from configuration"", e);throw new MetadataException(Code.INVALID_METADATA_SERVICE_URI, e);}URI metadataServiceUri = URI.create(metadataServiceUriStr);this.ledgersRootPath = metadataServiceUri.getPath();final String bookieRegistrationPath = ledgersRootPath + ""/"" + AVAILABLE_NODE;final String bookieReadonlyRegistrationPath = bookieRegistrationPath + ""/"" + READONLY;final String zkServers;try {zkServers = getZKServersFromServiceUri(metadataServiceUri);} catch (IllegalArgumentException ex) {throw new MetadataException(Code.INVALID_METADATA_SERVICE_URI, ex);}log.info(""Initialize zookeeper metadata driver at metadata service uri {} :""+ "" zkServers = {}, ledgersRootPath = {}."",metadataServiceUriStr,zkServers,ledgersRootPath);try {this.zk =ZooKeeperClient.newBuilder().connectString(zkServers).sessionTimeoutMs(conf.getZkTimeout()).operationRetryPolicy(zkRetryPolicy).requestRateLimit(conf.getZkRequestRateLimit()).statsLogger(statsLogger).build();if (null == zk.exists(bookieReadonlyRegistrationPath, false)) {try {zk.create(bookieReadonlyRegistrationPath, EMPTY_BYTE_ARRAY, acls, CreateMode.PERSISTENT);} catch (KeeperException.NodeExistsException e) {} catch (KeeperException.NoNodeException e) {}}} catch (IOException | KeeperException e) {log.error(""Failed to create zookeeper client to {}"", zkServers, e);MetadataException me =new MetadataException(Code.METADATA_SERVICE_ERROR,""Failed to create zookeeper client to "" + zkServers,e);me.fillInStackTrace();throw me;}this.ownZKHandle = true;}this.layoutManager = new ZkLayoutManager(zk, ledgersRootPath, acls);}}"	No
410	"public class A {private static KapuaMessage<?, ?> convertToKapuaMessage(Class<? extends DeviceMessage<?, ?>> deviceMessageType,Class<? extends KapuaMessage<?, ?>> kapuaMessageType,byte[] messageBody,String jmsTopic,Date queuedOn,String clientId)throws KapuaException {Translator<JmsMessage, DeviceMessage<?, ?>> translatorFromJms =Translator.getTranslatorFor(JmsMessage.class, deviceMessageType);DeviceMessage<?, ?> deviceMessage =translatorFromJms.translate(new JmsMessage(new JmsTopic(jmsTopic), queuedOn, new JmsPayload(messageBody)));Translator<DeviceMessage<?, ?>, KapuaMessage<?, ?>> translatorToKapua =Translator.getTranslatorFor(deviceMessageType, kapuaMessageType);KapuaMessage<?, ?> message = translatorToKapua.translate(deviceMessage);if (StringUtils.isEmpty(message.getClientId())) {logger.debug(""Updating client id since the received value is null (new value {})"", clientId);message.setClientId(clientId);}return message;}}"	No
411	"public class A {@Testpublic void testStartNodes() throws Exception {for (int i = 0; i < ITERATIONS; i++) {try {log.info(""Iteration: "" + (i + 1) + '/' + ITERATIONS);doTest();} finally {stopAllGrids(true);}}}}"	No
412	"public class A {private void jsonWriteTo(OutputStream out) throws IOException {if (out != null) {Gson gson = new Gson();ArrayList<HashMap<String, Object>> jsonTuples = new ArrayList<HashMap<String, Object>>();for (Object[] tuple : buffer.second) {HashMap<String, Object> tupleMap = new HashMap<String, Object>();for (int i = 0; i < buffer.first.size(); ++i) {tupleMap.put(buffer.first.get(i)[0], tuple[i]);}jsonTuples.add(tupleMap);}out.write(gson.toJson(jsonTuples).getBytes());}log.debug(""Ending Producing Stream Data Thread ..."");}}"	Yes
413	public class A {public SysImport merge(SysImport detachedInstance) {try {SysImport result = (SysImport) sessionFactory.getCurrentSession().merge(detachedInstance);return result;} catch (RuntimeException re) {throw re;}}}	Yes
414	public class A {@Overridepublic void run() {try {generateJobs(new Date());} catch (Exception e) {}}}	Yes
415	"public class A {public static void main(String[] args) throws IOException {Options options = createOptions();CommandLineParser parser = new DefaultParser();HelpFormatter formatter = new HelpFormatter();File inputFile = null;File outputFile = null;Model verdictDataModel = null;VDMInstrumentor threat_instrumentor = null;try {CommandLine cmdLine = parser.parse(options, args);if (cmdLine.hasOption(""i"")) {String inputPath = cmdLine.getOptionValue(""i"");inputFile = new File(inputPath);verdictDataModel = VdmTranslator.unmarshalFromXml(inputFile);threat_instrumentor = new VDMInstrumentor(verdictDataModel);}if (cmdLine.hasOption(""o"")) {String outputPath = cmdLine.getOptionValue(""o"");outputFile = new File(outputPath);threat_instrumentor.instrument(verdictDataModel, cmdLine);VdmTranslator.marshalToXml(verdictDataModel, outputFile);}} catch (ParseException exp) {LOGGER.error(""Error:"");formatter.printHelp(""VERDICT-Instrumentor"", options);System.exit(-1);}}}"	Yes
416	"public class A {@Overridepublic void exceptionCaught(IoSession session, Throwable cause) throws Exception {if (session.isClosing() && cause instanceof ClosedChannelException) {if (logger.isDebugEnabled()) {}} else {LoggingUtils.log(session, logger, ""Unexpected exception in broadcast service handler"", cause);}}}"	Yes
417	public class A {private void doHeuristicCompletionWithRestart(final boolean isCommit) throws Exception {Configuration configuration = createDefaultInVMConfig().setJMXManagementEnabled(true);ActiveMQServer server = createServer(true, configuration);server.setMBeanServer(mbeanServer);server.start();Xid xid = newXID();ClientSessionFactory sf = createSessionFactory(locator);ClientSession session = sf.createSession(true, false, false);session.createQueue(new QueueConfiguration(ADDRESS));session.start(xid, XAResource.TMNOFLAGS);ClientProducer producer = session.createProducer(ADDRESS);ClientMessage msg = session.createMessage(true);msg.getBodyBuffer().writeString(body);producer.send(msg);session.end(xid, XAResource.TMSUCCESS);session.prepare(xid);session.close();ActiveMQServerControl jmxServer =ManagementControlHelper.createActiveMQServerControl(mbeanServer);String[] preparedTransactions = jmxServer.listPreparedTransactions();Assert.assertEquals(1, preparedTransactions.length);instanceLog.debug(preparedTransactions[0]);if (isCommit) {jmxServer.commitPreparedTransaction(XidImpl.toBase64String(xid));} else {jmxServer.rollbackPreparedTransaction(XidImpl.toBase64String(xid));}preparedTransactions = jmxServer.listPreparedTransactions();Assert.assertEquals(0, preparedTransactions.length);if (isCommit) {assertMessageInQueueThenReceiveAndCheckContent(server, sf);}Assert.assertEquals(0, getMessageCount(((Queue) server.getPostOffice().getBinding(ADDRESS).getBindable())));server.stop();server.start();jmxServer = ManagementControlHelper.createActiveMQServerControl(mbeanServer);if (isCommit) {String[] listHeuristicCommittedTransactions = jmxServer.listHeuristicCommittedTransactions();Assert.assertEquals(1, listHeuristicCommittedTransactions.length);} else {String[] listHeuristicRolledBackTransactions =jmxServer.listHeuristicRolledBackTransactions();Assert.assertEquals(1, listHeuristicRolledBackTransactions.length);instanceLog.debug(listHeuristicRolledBackTransactions[0]);}}}	Yes
418	"public class A {public String download() {this.bundleResponse = bundleRequestService.lookupValidationRequest(getId());_log.info(""download="" + this.downloadFilename + "" and id="" + id);if (this.bundleResponse != null) {this.downloadInputStream =new NYCFileUtils().read(this.bundleResponse.getTmpDirectory() + File.separator + this.downloadFilename);return ""download"";}_log.error(""bundleResponse not found for id="" + id);return ""error"";}}"	No
419	public class A {private void cleanupWorkspace(URI... workspaceURIs) {for (URI url : workspaceURIs) {try {workspace.delete(url);} catch (Exception e) {}}}}	Yes
420	"public class A {private void dumpAvailableConsumers() {Map<String, KnownRepositoryContentConsumer> availableConsumers = getConsumers();for (Map.Entry<String, KnownRepositoryContentConsumer> entry : availableConsumers.entrySet()) {String consumerHint = entry.getKey();RepositoryContentConsumer consumer = entry.getValue();LOGGER.info(""  {} : {} ({})"", consumerHint, consumer.getDescription(), consumer.getClass().getName());}}}"	Yes
421	public class A {@Overridepublic void writeAndFlush(ByteBuf output) throws IOException {checkConnected(output);channel.writeAndFlush(output, channel.voidPromise());}}	Yes
422	"public class A {@Overridepublic void publish(Object payload, DynamicOptions dynamicOptions, KafkaSinkState kafkaSinkState)throws ConnectionUnavailableException {String key = keyOption.getValue(dynamicOptions);Object payloadToSend = null;try {if (payload instanceof String) {if (!isBinaryMessage) {StringBuilder strPayload = new StringBuilder();strPayload.append(sequenceId).append(SEQ_NO_HEADER_FIELD_SEPERATOR).append(kafkaSinkState.lastSentSequenceNo).append(SEQ_NO_HEADER_DELIMITER).append(payload.toString());payloadToSend = strPayload.toString();kafkaSinkState.lastSentSequenceNo.incrementAndGet();} else {byte[] byteEvents = payload.toString().getBytes(""UTF-8"");payloadToSend = getSequencedBinaryPayloadToSend(byteEvents, kafkaSinkState);kafkaSinkState.lastSentSequenceNo.incrementAndGet();}} else {byte[] byteEvents = ((ByteBuffer) payload).array();payloadToSend = getSequencedBinaryPayloadToSend(byteEvents, kafkaSinkState);kafkaSinkState.lastSentSequenceNo.incrementAndGet();}} catch (UnsupportedEncodingException e) {LOG.error(""Error while converting the received string payload to byte[]."", e);}for (Producer producer : producers) {try {producer.send(new ProducerRecord<>(topic, partitionNo, key, payloadToSend));} catch (Exception e) {}}}}"	Yes
423	"public class A {protected Function<InternalEvent, InternalEvent> doBefore(SourceInterceptor interceptor, Component component, Map<String, String> dslParameters) {return event -> {final InternalEvent eventWithResolvedParams =addResolvedParameters(event, component, dslParameters);DefaultInterceptionEvent interceptionEvent =new DefaultInterceptionEvent(eventWithResolvedParams);LOGGER.debug(""Calling before() for '{}' in processor '{}'..."",interceptor,component.getLocation().getLocation());try {Thread currentThread = currentThread();ClassLoader originalTCCL = currentThread.getContextClassLoader();ClassLoader ctxClassLoader = interceptor.getClass().getClassLoader();setContextClassLoader(currentThread, originalTCCL, ctxClassLoader);try {interceptor.beforeCallback(component.getLocation(),getResolvedParams(eventWithResolvedParams),interceptionEvent);} finally {setContextClassLoader(currentThread, ctxClassLoader, originalTCCL);}return interceptionEvent.resolve();} catch (Exception e) {throw propagate(new MessagingException(interceptionEvent.resolve(), e.getCause(), component));}};}}"	No
424	"public class A {@Overridepublic int doStartTag() throws JspException {if (attachment == null) {LOGGER.error(""No attachment given!"");return SKIP_BODY;}if (attachment.getAttachmentType() != AttachmentType.CLEARING_REPORT&& attachment.getAttachmentType() != AttachmentType.COMPONENT_LICENSE_INFO_XML) {LOGGER.error(""Invalid attachment type: ""+ attachment.getAttachmentType()+ "". Expected CLEARING_REPORT(""+ AttachmentType.CLEARING_REPORT.getValue()+ "") or COMPONENT_LICENSE_INFO_XML(""+ AttachmentType.COMPONENT_LICENSE_INFO_XML.getValue()+ ""."");return SKIP_BODY;}if (attachment.getCheckStatus() != CheckStatus.ACCEPTED) {return SKIP_BODY;}return super.doStartTag();}}"	Yes
425	"public class A {public void loadBundles(Map<String, Bundle> bundlesByLocation) {for (String loc : bundleLocations) {if (bundlesByLocation.containsKey(loc)) {if (bundlesByLocation.get(loc).getState() == Bundle.ACTIVE) {bundles.add(bundleToBundleInfo(bundlesByLocation.get(loc)));} else {LOGGER.debug(""Unable to find bundle {} of app {} in system."", loc, name);}}}}}"	No
426	"public class A {private void removeNode(final Node node) {Futures.addCallback(resolveDisconnectedNode(node),new FutureCallback<Boolean>() {@Overridepublic void onSuccess(@Nullable Boolean result) {if (Boolean.TRUE.equals(result)) {LOG.info(""Node {} has been removed"", node.getNodeId().getValue());} else {}}@Overridepublic void onFailure(@Nullable Throwable throwable) {LOG.warn(""Exception thrown when removing node... {}"", throwable);}},MoreExecutors.directExecutor());}}"	Yes
427	"public class A {public boolean canReuse(ActionForm form) {if (form != null) {if (this.getDynamic()) {String className = ((DynaBean) form).getDynaClass().getName();if (className.equals(this.getName())) {return (true);}} else {try {Class formClass = form.getClass();if (form instanceof BeanValidatorForm) {BeanValidatorForm beanValidatorForm = (BeanValidatorForm) form;if (beanValidatorForm.getInstance() instanceof DynaBean) {String formName = beanValidatorForm.getStrutsConfigFormName();if (getName().equals(formName)) {log.debug(""Can reuse existing instance (BeanValidatorForm)"");return true;} else {return false;}}formClass = beanValidatorForm.getInstance().getClass();}Class configClass = ClassUtils.getApplicationClass(this.getType());if (configClass.isAssignableFrom(formClass)) {log.debug(""Can reuse existing instance (non-dynamic)"");return (true);}} catch (Exception e) {}}}return false;}}"	Yes
428	"public class A {@Override@SuppressWarnings(""unchecked"")public ResidueSolvablePolynomial<C> parse(Reader r) {GenPolynomialTokenizer pt = new GenPolynomialTokenizer(this, r);ResidueSolvablePolynomial<C> p = null;try {GenSolvablePolynomial<SolvableResidue<C>> s = pt.nextSolvablePolynomial();p = new ResidueSolvablePolynomial<C>(this, s);} catch (IOException e) {p = ZERO;}return p;}}"	Yes
429	public class A {public void removeTenant(String tenantId) {tenantIds.remove(tenantId);}}	Yes
430	"public class A {public void abort(AbortReason abortReason, Optional<Throwable> throwable) {if (!aborting.getAndSet(true)) {try {sendAbortNotification(abortReason, throwable);SingularityLifecycleManaged lifecycle =injector.getInstance(SingularityLifecycleManaged.class);SingularityPreJettyLifecycle preJettyLifecycle =injector.getInstance(SingularityPreJettyLifecycle.class);try {preJettyLifecycle.stop();lifecycle.stop();} catch (Throwable t) {LOG.error(""While shutting down"", t);}flushLogs();} finally {exit();}}}}"	No
431	"public class A {private void write(final Collection<Long> items) {if (items.isEmpty()) {state.update(c -> c.remove(key));} else {state.update(b -> b.put(key, items.stream().map(String::valueOf)));}var value = state.getValue(key).orElse(""nothing"");LOGGER.trace(""'{}' wrote '{}'."", key, value);}}"	No
432	"public class A {@Overridepublic CEFParserResult evaluate(FunctionArgs args, EvaluationContext context) {final String cef = valueParam.required(args, context);final boolean useFullNames = useFullNamesParam.optional(args, context).orElse(false);final CEFParser parser = CEFParserFactory.create();if (cef == null || cef.isEmpty()) {LOG.debug(""NULL or empty parameter passed to CEF parser function. Not evaluating."");return null;}LOG.debug(""Running CEF parser for [{}]."", cef);final MappedMessage message;try (Timer.Context timer = parseTime.time()) {message = new MappedMessage(parser.parse(cef.trim()), useFullNames);} catch (Exception e) {return null;}final Map<String, Object> fields = new HashMap<>();fields.put(""cef_version"", message.cefVersion());fields.put(""device_vendor"", message.deviceVendor());fields.put(""device_product"", message.deviceProduct());fields.put(""device_version"", message.deviceVersion());fields.put(""device_event_class_id"", message.deviceEventClassId());fields.put(""name"", message.name());fields.put(""severity"", message.severity());fields.putAll(message.mappedExtensions());return new CEFParserResult(fields);}}"	Yes
433	"public class A {private List<Record> transformRecords(Dataset dataset, Collection<Record> records, String xsltUrl)throws XsltSetupException {final XsltTransformer transformer;final EuropeanaIdCreator europeanIdCreator;try {final TransformationParameters transformationParameters =new TransformationParameters(dataset);transformer =new XsltTransformer(xsltUrl,transformationParameters.getDatasetName(),transformationParameters.getEdmCountry(),transformationParameters.getEdmLanguage());europeanIdCreator = new EuropeanaIdCreator();} catch (TransformationException e) {throw new XsltSetupException(""Could not setup XSL transformation."", e);} catch (EuropeanaIdException e) {throw new XsltSetupException(CommonStringValues.EUROPEANA_ID_CREATOR_INITIALIZATION_FAILED, e);}return records.stream().map(record -> {try {EuropeanaGeneratedIdsMap europeanaGeneratedIdsMap =europeanIdCreator.constructEuropeanaId(record.getXmlRecord(), dataset.getDatasetId());return new Record(record.getEcloudId(),transformer.transform(record.getXmlRecord().getBytes(StandardCharsets.UTF_8),europeanaGeneratedIdsMap).toString());} catch (TransformationException e) {LOGGER.info(""Record from list failed transformation"", e);return new Record(record.getEcloudId(), e.getMessage());} catch (EuropeanaIdException e) {LOGGER.info(CommonStringValues.EUROPEANA_ID_CREATOR_INITIALIZATION_FAILED, e);return new Record(record.getEcloudId(), e.getMessage());}}).collect(Collectors.toList());}}"	No
434	public class A {@Overridepublic void onClick(final AjaxRequestTarget target, final PrivilegeTO ignore) {try {application.getPrivileges().remove(model.getObject());ApplicationRestClient.update(application);SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));customActionOnFinishCallback(target);} catch (SyncopeClientException e) {SyncopeConsoleSession.get().onException(e);}((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);}}	Yes
435	"public class A {@Overridepublic void onNext(RaftClientReplyProto proto) {final long callId = proto.getRpcReply().getCallId();try {final RaftClientReply reply = ClientProtoUtils.toRaftClientReply(proto);LOG.trace(""{}: receive {}"", getName(), reply);final NotLeaderException nle = reply.getNotLeaderException();if (nle != null) {completeReplyExceptionally(nle, NotLeaderException.class.getName());return;}final LeaderNotReadyException lnre = reply.getLeaderNotReadyException();if (lnre != null) {completeReplyExceptionally(lnre, LeaderNotReadyException.class.getName());return;}handleReplyFuture(callId, f -> f.complete(reply));} catch (Exception e) {handleReplyFuture(callId, f -> f.completeExceptionally(e));}}}"	No
436	"public class A {@Overridepublic List<RecommendedItem> recommend(long userID, int howMany, IDRescorer rescorer)throws TasteException {Preconditions.checkArgument(howMany >= 1, ""howMany must be at least 1"");log.debug(""Recommending items for user ID '{}'"", userID);long[] theNeighborhood = neighborhood.getUserNeighborhood(userID);if (theNeighborhood.length == 0) {return Collections.emptyList();}FastIDSet allItemIDs = getAllOtherItems(theNeighborhood, userID);TopItems.Estimator<Long> estimator = new Estimator(userID, theNeighborhood);List<RecommendedItem> topItems =TopItems.getTopItems(howMany, allItemIDs.iterator(), rescorer, estimator);log.debug(""Recommendations are: {}"", topItems);return topItems;}}"	No
437	"public class A {public MessageResponse handleMissingPayload(final URI affectedResource, final URI issuerConnector, final URI messageId) {if (log.isDebugEnabled()) {log.debug(""Missing resource in payload. [resource=({}), issuer=({}), "" + ""messageId=({})]"",affectedResource,issuerConnector,messageId);}return ErrorResponse.withDefaultHeader(RejectionReason.BAD_PARAMETERS,""Missing resource in payload."",connectorService.getConnectorId(),connectorService.getOutboundModelVersion());}}"	No
438	public class A {private Map<String, Long> getTopicOffsets(List<String> topics) {ArrayList<HostAndPort> nodes = new ArrayList<>(config.getNodes());Collections.shuffle(nodes);SimpleConsumer simpleConsumer = consumerManager.getConsumer(nodes.get(0));TopicMetadataRequest topicMetadataRequest = new TopicMetadataRequest(topics);TopicMetadataResponse topicMetadataResponse = simpleConsumer.send(topicMetadataRequest);ImmutableMap.Builder<String, Long> builder = ImmutableMap.builder();for (TopicMetadata metadata : topicMetadataResponse.topicsMetadata()) {for (PartitionMetadata part : metadata.partitionsMetadata()) {Broker leader = part.leader();if (leader == null) {} else {HostAndPort leaderHost = HostAndPort.fromParts(leader.host(), leader.port());SimpleConsumer leaderConsumer = consumerManager.getConsumer(leaderHost);long offset = findAllOffsets(leaderConsumer, metadata.topic(), part.partitionId())[0];builder.put(metadata.topic(), offset);}}}return builder.build();}}	Yes
439	"public class A {@Overridepublic void activate(ComponentContext cc) {super.activate(cc);properties = cc.getProperties();if (properties != null) {String commandString = (String) properties.get(COMMANDS_ALLOWED_PROPERTY);if (StringUtils.isNotBlank(commandString)) {for (String command : commandString.split(""\\s+"")) allowedCommands.add(command);}}this.bundleContext = cc.getBundleContext();}}"	Yes
440	"public class A {@Overridepublic synchronized void onLeaderElection() {LOG.info(""This node elected Active Cluster Coordinator"");bulletinRepository.addBulletin(BulletinFactory.createBulletin(""Cluster Coordinator"",Severity.INFO.name(),participantId + "" has been elected the Cluster Coordinator""));FlowController.this.heartbeatMonitor.purgeHeartbeats();}}"	No
441	"public class A {public ValidationResult testGetDriveUser() {ValidationResultMutable vr =new ValidationResultMutable(Result.OK, messages.getMessage(""message.connectionSuccessful""));ExecutorService executor = Executors.newSingleThreadExecutor();Future<String> future =executor.submit(new Callable() {public String call() throws Exception {User u = getDriveService().about().get().setFields(""user"").execute().getUser();return u.toPrettyString();}});try {String user = future.get(30, java.util.concurrent.TimeUnit.SECONDS);LOG.debug(""[testGetDriveUser] Testing User properties: {}."", user);} catch (ExecutionException ee) {vr.setStatus(Result.ERROR).setMessage(messages.getMessage(""error.testConnection.failure"", ee.getMessage()));LOG.error(""[testGetDriveUser] Execution error: {}."", ee.getMessage());} catch (TimeoutException | InterruptedException e) {vr.setStatus(Result.ERROR).setMessage(messages.getMessage(""error.testConnection.timeout""));LOG.error(""[testGetDriveUser] Operation Timeout."");}executor.shutdownNow();return vr;}}"	No
442	public class A {public boolean login(String username) {try {LoginContext context = new SecondaryLoginContext();((WaspSession) Session.get()).login(context);continueToOriginalDestination();setResponsePage(Application.get().getHomePage());return true;} catch (LoginException e) {log.error(e.getMessage(), e);}return false;}}	No
443	"public class A {@Overridepublic void showTree(String prefix) {LOGGER.debug(prefix + ""Operator: MProjectionOperator"");_docIdSetPlanNode.showTree(prefix + ""    "");int i = 0;for (String column : _dataSourcePlanNodeMap.keySet()) {_dataSourcePlanNodeMap.get(column).showTree(prefix + ""    "");i++;}}}"	Yes
444	"public class A {@Overridepublic void userQuitTournamentSubTables(UUID userId) {for (TableController controller : getControllers()) {if (controller.getTable() != null) {if (controller.getTable().isTournamentSubTable()) {controller.leaveTable(userId);}} else {logger.error(""TableManagerImpl.userQuitTournamentSubTables table == null - userId "" + userId);}}}}"	No
445	"public class A {@Testpublic void testI01RexCompat() {setup(VehicleType.ELECTRIC_REX.toString(), false);String content = FileReader.readFileInString(""src/test/resources/api/vehicle/vehicle-ccm.json"");VehicleAttributesContainer vac =Converter.getGson().fromJson(content, VehicleAttributesContainer.class);assertTrue(testVehicle(Converter.transformLegacyStatus(vac),STATUS_ELECTRIC + DOORS + RANGE_HYBRID + SERVICE_AVAILABLE + CHECK_AVAILABLE + POSITION,Optional.empty()));}}"	Yes
446	public class A {public Map<String, Object> parseMap(String field) {Map<String, Object> metadata = null;try {JsonNode jsonNode = MAPPER.readValue(field, JsonNode.class);metadata = MAPPER.convertValue(jsonNode, Map.class);} catch (Exception ex) {}return metadata;}}	Yes
447	public class A {private void bindCustomPorts(@Nonnull BuiltInServer server) {if (myApplication.isUnitTestMode()) {return;}for (CustomPortServerManager customPortServerManager :CustomPortServerManager.EP_NAME.getExtensionList()) {try {new SubServer(customPortServerManager, server).bind(customPortServerManager.getPort());} catch (Throwable e) {}}}}	Yes
448	public class A {public static boolean syncWorkflowState(ServiceContext<PoxPayloadIn, PoxPayloadOut> ctx,AuthorityResource authorityResource,String sasWorkflowState,String localParentCsid,String localItemCsid,DocumentModel localItemDocModel)throws Exception {String localItemWorkflowState = localItemDocModel.getCurrentLifeCycleState();List<String> transitionList =AuthorityServiceUtils.getTransitionList(sasWorkflowState, localItemWorkflowState);if (!transitionList.isEmpty()) {try {for (String transition : transitionList) {authorityResource.updateItemWorkflowWithTransition(ctx,localParentCsid,localItemCsid,transition,AuthorityServiceUtils.DONT_UPDATE_REV,AuthorityServiceUtils.DONT_ROLLBACK_ON_EXCEPTION);}} catch (DocumentReferenceException de) {localItemDocModel.refresh();AuthorityServiceUtils.setAuthorityItemDeprecated(ctx, authorityResource, localParentCsid, localItemCsid, localItemDocModel);}}return true;}}	Yes
449	"public class A {@Overridepublic BpmWidgetInfo getBpmWidgetInfo(int id) throws ApsSystemException {BpmWidgetInfo bpmWidgetInfo = null;try {bpmWidgetInfo = this.getBpmWidgetInfoDAO().loadBpmWidgetInfo(id);} catch (Throwable t) {throw new ApsSystemException(""Error loading bpmWidgetInfo with id: "" + id, t);}return bpmWidgetInfo;}}"	Yes
450	"public class A {public List<CertificateDTO> getEntitlementCertificates(@Verify(Consumer.class) String consumerUuid, String serials) {Principal principal = ResteasyContext.getContextData(Principal.class);if (principal instanceof ConsumerPrincipal) {ConsumerPrincipal p = (ConsumerPrincipal) principal;consumerCurator.updateLastCheckin(p.getConsumer());}Consumer consumer = consumerCurator.verifyAndLookupConsumer(consumerUuid);ConsumerType ctype = this.consumerTypeCurator.getConsumerType(consumer);revokeOnGuestMigration(consumer);poolManager.regenerateDirtyEntitlements(consumer);Set<Long> serialSet = this.extractSerials(serials);List<CertificateDTO> returnCerts = new LinkedList<>();List<EntitlementCertificate> allCerts = entCertService.listForConsumer(consumer);for (EntitlementCertificate cert : allCerts) {if (serialSet.isEmpty() || serialSet.contains(cert.getSerial().getId())) {returnCerts.add(translator.translate(cert, CertificateDTO.class));}}try {Certificate cert = this.contentAccessManager.getCertificate(consumer);if (cert != null) {returnCerts.add(translator.translate(cert, CertificateDTO.class));}} catch (IOException ioe) {throw new BadRequestException(i18n.tr(""Cannot retrieve content access certificate""), ioe);} catch (GeneralSecurityException gse) {throw new BadRequestException(i18n.tr(""Cannot retrieve content access certificate""), gse);}return returnCerts;}}"	Yes
451	public class A {public static void main(String[] args) throws IOException {Collection c = new SimpleXMLCollection();while (c.nextDocument()) {Document d = c.getDocument();if (logger.isInfoEnabled()) {}if (logger.isInfoEnabled()) {while (!d.endOfDocument()) {System.out.println(d.getNextTerm());}}}c.close();}}	Yes
452	"public class A {@Overridepublic void generateJson(String prefix, PrintWriter pw, VWorkspace vWorkspace) {JSONObject outputObject = new JSONObject();try {outputObject.put(JsonKeys.updateType.name(), ""PublishPresetUpdate"");outputObject.put(JsonKeys.fileUrl.name(),contextParameters.getParameterValue(ContextParameter.JSON_PUBLISH_RELATIVE_DIR)+ jsonFileName);outputObject.put(JsonKeys.worksheetId.name(), wsht.getId());pw.println(outputObject.toString(4));} catch (JSONException e) {}}}"	Yes
453	"public class A {protected void stopIptablesImpl(final SshMachineLocation machine) {log.info(""Stopping iptables for {} at {}"", entity(), machine);List<String> cmds = ImmutableList.<String>of();Task<Integer> checkFirewall = checkLocationFirewall(machine);if (checkFirewall.getUnchecked() == 0) {cmds =ImmutableList.of(IptablesCommands.firewalldServiceStop(), IptablesCommands.firewalldServiceStatus());} else {cmds =ImmutableList.of(IptablesCommands.iptablesServiceStop(), IptablesCommands.iptablesServiceStatus());}subTaskHelperAllowingNonZeroExitCode(""execute stop iptables"", machine, cmds.toArray(new String[cmds.size()]));}}"	No
454	"public class A {@Overridepublic XAResource[] getXAResources(ActivationSpec[] specs) {logger.debug(""Returning XAResource [null]..."");return null;}}"	No
455	"public class A {@SuppressWarnings(""unchecked"")public static <T> T invokeWithDefault(@Nullable Method method, Object obj, T defaultValue, @Nullable Object... args) {if (method == null) {return defaultValue;}try {Object value = method.invoke(obj, args);if (value == null) {return defaultValue;}return (T) value;} catch (Throwable t) {logger.warn(""error calling {}.{}()"", method.getDeclaringClass().getName(), method.getName(), t);return defaultValue;}}}"	No
456	public class A {public boolean before(Locale locale, String filename) throws Exception {Locale.setDefault(locale);InputStream is = getClass().getClassLoader().getResourceAsStream(filename);if (is == null) {return false;}properties.load(is);return getExpectedNumberOfMethods() == properties.size();}}	Yes
457	"public class A {@Transactional(rollbackFor = ArrowheadException.class)public ChoreographerWorklog createWorklog(final String message, final String exception) {try {if (Utilities.isEmpty(message)) {throw new InvalidParameterException(""Message is null or blank."");}return choreographerWorklogRepository.saveAndFlush(new ChoreographerWorklog(message, exception));} catch (InvalidParameterException ex) {throw ex;} catch (final Exception ex) {throw new ArrowheadException(CoreCommonConstants.DATABASE_OPERATION_EXCEPTION_MSG);}}}"	Yes
458	"public class A {public static void indexStream(Indexer index, String url) throws IOException, GerbilException {Set<String> downloads = getDownloadsOfUrl(url, DOWNLOAD_SUFFIX);String fileName = UUID.randomUUID().toString();SameAsCollectorStreamFile sink = new SameAsCollectorStreamFile(fileName);for (String download : downloads) {File current = null;try {current = downloadUrl(new URL(download));try (InputStream fi = Files.newInputStream(current.toPath());InputStream bi = new BufferedInputStream(fi);InputStream bzip2is = new BZip2CompressorInputStream(bi)) {indexStream(index, bzip2is, sink);}} catch (Exception e) {e.printStackTrace();} finally {if (current != null) current.delete();}}sink.close();File sorted = new File(sink.getFile().getName() + ""_sorted"");ExternalSort.mergeSortedFiles(ExternalSort.sortInBatch(sink.getFile()), sorted);indexSortedFile(index, sorted.getAbsolutePath());sink.getFile().delete();}}"	Yes
459	public class A {private Iterator<IEntryPacket> getNextTieredBatch() {UidQueryPacket template =((TieredSpaceIteratorResult) _iteratorResult).buildQueryPacket(_spaceProxy, _batchSize, _queryResultType);if (template == null) return null;template.setProjectionTemplate(_queryPacket.getProjectionTemplate());try {Object[] entries =_spaceProxy.readMultiple(template, _txn, template.getMultipleUIDs().length, _readModifiers);if (_logger.isDebugEnabled()) {}return ArrayIterator.wrap(entries);} catch (RemoteException | UnusableEntryException | TransactionException e) {processNextBatchFailure(e);}return null;}}	Yes
460	"public class A {@Override@SuppressWarnings(""unchecked"")public <S extends T> S getByKey(final KEY key, final Class<S> typeRef)throws IllegalArgumentException {if (key == null) {throw new IllegalArgumentException(""Null key"");}final EntityUUID uuid = new EntityUUID(this.baseURI, typeRef, key);EntityInvocationHandler handler = getContext().entityContext().getEntity(uuid);if (handler == null) {final ClientEntity entity =getClient().getObjectFactory().newEntity(new FullQualifiedName(typeRef.getAnnotation(Namespace.class).value(),ClassUtils.getEntityTypeName(typeRef)));handler = EntityInvocationHandler.getInstance(key, entity, this.baseURI, typeRef, service);}if (isDeleted(handler)) {return null;} else {handler.clearQueryOptions();return (S)Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(), new Class<?>[] {typeRef}, handler);}}}"	Yes
461	"public class A {public boolean activityTabIsSelected() {return getDriver().findElements(By.cssSelector(""#activity.is-active"")).size() > 0;}}"	Yes
462	public class A {@Overridepublic boolean isValidName(String name) {if (Validator.isNull(name)) {return false;}String[] charactersBlacklist = {};try {JournalServiceConfiguration journalServiceConfiguration =_configurationProvider.getCompanyConfiguration(JournalServiceConfiguration.class, CompanyThreadLocal.getCompanyId());charactersBlacklist = journalServiceConfiguration.charactersblacklist();} catch (Exception exception) {_log.error(exception, exception);}for (String blacklistChar : charactersBlacklist) {blacklistChar = StringEscapeUtils.unescapeJava(blacklistChar);if (name.contains(blacklistChar)) {return false;}}return true;}}	No
463	"public class A {public void pauseQueue(String queueName) throws TimeoutException {doOperation(""queue."" + queueName, ""pause"");}}"	Yes
464	public class A {@Overridepublic void output(LocalDocument document) {}}	Yes
465	"public class A {public static void changeCharsetToUtf(JdbcConnection jdbcCon)throws DatabaseException, SQLException {Statement stmt = jdbcCon.createStatement();String dbName = jdbcCon.getCatalog();String sql =String.format(""ALTER DATABASE `%s` CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;"", dbName);int result = stmt.executeUpdate(sql);}}"	Yes
466	"public class A {public void sendMessage(Message message, User user) throws MessageException {log.debug(""Sending message to user "" + user);String address = user.getUserProperty(OpenmrsConstants.USER_PROPERTY_NOTIFICATION_ADDRESS);if (address != null) {message.addRecipient(address);}Context.getMessageService().sendMessage(message);}}"	No
467	"public class A {private void setSystemProxy() {try {URI serverUri = new URI(getPreferences().getString(PreferenceConstants.VNSERVER_URI));IProxyService proxyService = getProxyService();IProxyData[] proxyDataForHost = proxyService.select(serverUri);if (proxyDataForHost == null || proxyDataForHost.length == 0) {clearSystemProxy();} else {setSystemProxy(proxyDataForHost);}} catch (Exception t) {LOG.error(""Error while setting proxy."", t);}}}"	No
468	public class A {public static int getShippingCommerceAddressesCount(long companyId, String className, long classPK, String keywords) throws RemoteException {try {int returnValue =CommerceAddressServiceUtil.getShippingCommerceAddressesCount(companyId, className, classPK, keywords);return returnValue;} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
469	"public class A {@Overridepublic void close() {if (!transaction.isOpen()) {} else if (ownTransaction) {if (isSuccess.isPresent()) {if (isSuccess.get()) {transaction.commit();} else {transaction.rollback();}} else {transaction.rollback();if (requireCommit) {LOG.error(""Transaction was not closed, rolling back. Please add an explicit rollback so that we""+ "" know this was not a missing success()"");}}}}}"	Yes
470	public class A {protected ValidationResult validatePropertyNames(final SchemaElementDefinition elementDef) {final ValidationResult result = new ValidationResult();for (final String property : elementDef.getProperties()) {if (ReservedPropertyNames.contains(property)) {}}return result;}}	Yes
471	"public class A {@Overridepublic void create(String testName) throws Exception {setupCreate();AccountValue av = accValues.get(""acc-role-user1"");AccountRole accRole = createAccountRoleInstance(av, roleValues.values(), true, true);AccountRoleClient client = new AccountRoleClient();Response res = client.create(av.getAccountId(), accRole);try {assertStatusCode(res, testName);knownResourceId = av.getAccountId();if (logger.isDebugEnabled()) {}} finally {if (res != null) {res.close();}}}}"	Yes
472	"public class A {@RequestMapping(value = {ControllerConstants.Paths.ADMIN_INDEX, ControllerConstants.Paths.ADMIN_ROOT},method = RequestMethod.GET)public ModelAndView get() {boolean warn = false;Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();if (principal instanceof AdministratorUserPrinciple) {AdministratorUserPrinciple administratorUserPrinciple =(AdministratorUserPrinciple) principal;if (administratorUserPrinciple.isDefaultAdmin()) {warn = true;}}Map<String, String> metadata = new HashMap<>(MetaDataHandler.Metadata.values().length);try {for (MetaDataHandler.Metadata m : MetaDataHandler.Metadata.values()) {metadata.put(m.name(), getMetaDataHandler().get(m));}} catch (ConfigurationError ex) {LOG.error(""Error reading metadata properties"", ex);}Map<String, Object> model = new HashMap<>(2);model.put(""metadata"", metadata);model.put(""warning"", warn);return new ModelAndView(ControllerConstants.Views.ADMIN_INDEX, model);}}"	No
473	public class A {private void disposeEncoder(IoSession session) {ProtocolEncoder encoder = (ProtocolEncoder) session.removeAttribute(ENCODER);if (encoder == null) {return;}try {encoder.dispose(session);} catch (Throwable t) {}}}	Yes
474	"public class A {public List<ActivityFrequencyScheduleBean> getQuestionnaireFrequencyDetailsForOneTime(QuestionnairesDto questionaire, List<ActivityFrequencyScheduleBean> runDetailsBean)throws DAOException {LOGGER.entry(""begin getQuestionnaireFrequencyDetailsForOneTime()"");try {if (questionaire != null) {ActivityFrequencyScheduleBean oneTimeBean = new ActivityFrequencyScheduleBean();oneTimeBean.setStartTime(StudyMetaDataUtil.getFormattedDateTimeZone(questionaire.getStudyLifetimeStart(),StudyMetaDataConstants.SDF_DATE_PATTERN,StudyMetaDataConstants.SDF_DATE_TIME_TIMEZONE_MILLISECONDS_PATTERN));oneTimeBean.setEndTime(StudyMetaDataUtil.getFormattedDateTimeZone(questionaire.getStudyLifetimeEnd(),StudyMetaDataConstants.SDF_DATE_PATTERN,StudyMetaDataConstants.SDF_DATE_TIME_TIMEZONE_MILLISECONDS_PATTERN));runDetailsBean.add(oneTimeBean);}} catch (Exception e) {}LOGGER.exit(""getQuestionnaireFrequencyDetailsForOneTime() :: Ends"");return runDetailsBean;}}"	Yes
475	"public class A {@Testpublic void testTraceWithNArguments() {buf.setLength(0);final VitamUILogger logger = VitamUILoggerFactory.getInstance(VitamUITraceLoggerTest.class);final String message = ""message"";final String format = message + "" {} {} {}"";final Integer object1 = 1;final Integer object2 = 2;final Integer object3 = 3;logger.trace(format, object1, object2, object3);assertTrue(""Log message should be written."", buf.length() > 0);assertTrue(""Log message should be written."", buf.lastIndexOf(message) > 0);assertTrue(""Log message should be written."",buf.lastIndexOf(message+ "" ""+ object1.toString()+ "" ""+ object2.toString()+ "" ""+ object3.toString())> 0);}}"	No
476	"public class A {@Overridepublic void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e) throws Exception {LOG.debug(""Channel connected {}"", e);}}"	No
477	"public class A {@Overridepublic void execute(Template.Fragment frag, Writer out) throws IOException {String curVal = frag.execute();LOGGER.debug(""[lastVal={}, curVal={}]"", lastVal, curVal);if (curVal != null && !curVal.equals(lastVal)) {out.write(curVal);lastVal = curVal;}}}"	No
478	public class A {public void cut() {try {((XulWindow) this.getXulDomContainer().getDocumentRoot().getRootElement()).cut();paste.setDisabled(false);} catch (XulException e) {logger.error(e.getMessage(), e);}}}	No
479	"public class A {@Overridepublic void setServletContext(ServletContext servletContext) {if (servletContext != null) {String user = servletContext.getInitParameter(""s3.user"");if (user != null) {setUser(user);}String password = servletContext.getInitParameter(""s3.password"");if (password != null) {setPassword(password);}String bucketName = servletContext.getInitParameter(""s3.config.bucketName"");if (bucketName != null) {setBucketName(bucketName);} else {}}}}"	Yes
480	"public class A {private static synchronized void overrideInstance(ApplicationWarnings springInstance) {if (instance != null) {List<String> warnings = instance.getWarnings();springInstance.addWarnings(warnings);if (!warnings.isEmpty()) {LOG.debug(""appending ["" + warnings.size() + ""] warning(s)"");}}instance = springInstance;}}"	No
481	"public class A {@Overridepublic List<String> searchGroups(FieldSearchFilter[] filters) {List<String> groupsNames = null;try {groupsNames = super.searchId(filters);} catch (Throwable t) {logger.error(""error in search groups"", t);throw new RuntimeException(""error in search groups"", t);}return groupsNames;}}"	No
482	"public class A {void authenticationError(ChannelHandlerContext ctx, int errorCode) {LOG.error(""Error processing auth message, erroring connection {}"", errorCode);ctx.fireExceptionCaught(new AuthenticationException(""Auth failed with error "" + errorCode));}}"	No
483	"public class A {@VisibleForTestingprotected void timeoutPendingSlotRequest(SlotRequestId slotRequestId) {final PendingRequest pendingRequest = removePendingRequest(slotRequestId);if (pendingRequest != null) {pendingRequest.getAllocatedSlotFuture().completeExceptionally(new TimeoutException(""Pending slot request timed out in SlotPool.""));}}}"	Yes
484	public class A {public static void process(ServiceMeshMetric.Builder data) {try (HistogramMetrics.Timer ignored = MESH_ANALYSIS_METRICS.createTimer()) {if (data.getSourceServiceName() != null) {data.setSourceServiceName(NAME_LENGTH_CONTROL.formatServiceName(data.getSourceServiceName()));}if (data.getSourceServiceInstance() != null) {data.setSourceServiceInstance(NAME_LENGTH_CONTROL.formatInstanceName(data.getSourceServiceInstance()));}if (data.getDestServiceName() != null) {data.setDestServiceName(NAME_LENGTH_CONTROL.formatServiceName(data.getDestServiceName()));}if (data.getDestServiceInstance() != null) {data.setDestServiceInstance(NAME_LENGTH_CONTROL.formatInstanceName(data.getDestServiceInstance()));}if (data.getEndpoint() != null) {data.setEndpoint(NAME_LENGTH_CONTROL.formatEndpointName(data.getDestServiceName(), data.getEndpoint()));}if (data.getInternalErrorCode() == null) {data.setInternalErrorCode(Const.EMPTY_STRING);}doDispatch(data);} catch (Exception e) {MESH_ERROR_METRICS.inc();log.error(e.getMessage(), e);}}}	No
485	"public class A {private void executeProcesses() {ThreadContext.put(""module"", ""orchestra"");try {Assertion.check().isNotNull(nodId, ""Node not already registered"");executeToDo();nodeManager.updateHeartbeat(nodId);handleDeadNodeProcesses();} catch (final Throwable t) {if (t instanceof InterruptedException) {throw t;}} finally {ThreadContext.remove(""module"");}}}"	Yes
486	"public class A {public static String getCalendarBookingsRSS(HttpPrincipal httpPrincipal,long calendarId,long startTime,long endTime,int max,String type,double version,String displayStyle,com.liferay.portal.kernel.theme.ThemeDisplay themeDisplay)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CalendarBookingServiceUtil.class,""getCalendarBookingsRSS"",_getCalendarBookingsRSSParameterTypes14);MethodHandler methodHandler =new MethodHandler(methodKey,calendarId,startTime,endTime,max,type,version,displayStyle,themeDisplay);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (String) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
487	"public class A {public void setup(SourceResolver resolver, Map objectmodel, String src, Parameters parameters)throws ProcessingException, SAXException, IOException {this.resolver = resolver;setFailSafe(parameters.getParameterAsBoolean(""failsafe"", false));Store store = null;try {this.grammar = src;this.grammarSource = resolver.resolveURI(this.grammar);store = (Store) this.manager.lookup(Store.TRANSIENT_STORE);ParserAutomatonEntry entry = (ParserAutomatonEntry) store.get(this.grammarSource.getURI());if ((entry == null)|| (entry.getValidity() == null)|| ((entry.getValidity().isValid(this.grammarSource.getValidity())) <= 0)) {this.logger.info(""(Re)building the automaton from '"" + this.grammarSource.getURI() + ""'"");if (this.grammarSource.getInputStream() == null)throw new ProcessingException(""Source '"" + this.grammarSource.getURI() + ""' not found"");GrammarFactory factory = new GrammarFactory();SourceUtil.toSAX(this.manager, this.grammarSource, null, factory);Grammar grammar = factory.getGrammar();if (grammar == null)throw new ProcessingException(""Error while reading the grammar from "" + src);ParserAutomatonBuilder builder = new ParserAutomatonBuilder(grammar);ParserAutomaton automaton = builder.getParserAutomaton();setParserAutomaton(builder.getParserAutomaton());store.store(this.grammarSource.getURI(),new ParserAutomatonEntry(automaton, this.grammarSource.getValidity()));} else {setParserAutomaton(entry.getParserAutomaton());}} catch (SourceException se) {throw new ProcessingException(""Error during resolving of '"" + src + ""'."", se);} catch (ServiceException se) {throw new ProcessingException(""Could not lookup for service"", se);} finally {if (store != null) this.manager.release(store);}}}"	Yes
488	"public class A {@Overrideprotected IgniteInternalFuture createAndRunConcurrentAction(final AtomicBoolean finished, final long endTime) {return GridTestUtils.runAsync(new Callable() {@Overridepublic Object call() throws Exception {Thread.currentThread().setName(""restart-thread"");U.sleep(15_000);ThreadLocalRandom tlr = ThreadLocalRandom.current();int idx = tlr.nextInt(1, GRIDS_COUNT);log.info(""Stopping node "" + idx);stopGrid(idx);IgniteEx ig0 = grid(0);ig0.cluster().setBaselineTopology(baselineNodes(ig0.cluster().forServers().nodes()));U.sleep(3_000);return null;}});}}"	No
489	public class A {private void sendMessage(final DistributionAutomationRequestMessage requestMessage) {this.jmsTemplate.send(new MessageCreator() {@Overridepublic Message createMessage(final Session session) throws JMSException {final ObjectMessage objectMessage =session.createObjectMessage(requestMessage.getRequest());objectMessage.setJMSCorrelationID(requestMessage.getCorrelationUid());objectMessage.setJMSType(requestMessage.getMessageType().name());objectMessage.setStringProperty(Constants.ORGANISATION_IDENTIFICATION,requestMessage.getOrganisationIdentification());objectMessage.setStringProperty(Constants.DEVICE_IDENTIFICATION, requestMessage.getDeviceIdentification());return objectMessage;}});}}	Yes
490	"public class A {private void assertDisabledDeduction(Safeguard safeguard, BpRequirement requirement)throws CommandException {assertEquals(""Must be option 'no'."", ImplementationStatus.NO, requirement.getImplementationStatus());if (LOG.isDebugEnabled()) {}safeguard = updateSafeguard(safeguard, ImplementationStatus.PARTIALLY);assertEquals(""Must be option 'partially'."",ImplementationStatus.PARTIALLY,requirement.getImplementationStatus());if (LOG.isDebugEnabled()) {LOG.debug(""Switch deduction off for the requirement."");}requirement.setPropertyValue(requirement.getTypeId() + IMPLEMENTATION_DEDUCE, ""0"");requirement.setImplementationStatus(ImplementationStatus.YES);UpdateElement<BpRequirement> command1 = new UpdateElement<>(requirement, true, null);commandService.executeCommand(command1);requirement = command1.getElement();if (LOG.isDebugEnabled()) {}safeguard = updateSafeguard(safeguard, ImplementationStatus.NO);assertEquals(""Must be option 'yes'."", ImplementationStatus.YES, requirement.getImplementationStatus());}}"	Yes
491	public class A {@Overridepublic void getOAuthAccessTokenAsync(final String oauthVerifier) {getDispatcher().invokeLater(new AsyncTask(OAUTH_ACCESS_TOKEN, listeners) {@Overridepublic void invoke(List<TwitterListener> listeners) throws TwitterException {AccessToken token = twitter.getOAuthAccessToken(oauthVerifier);for (TwitterListener listener : listeners) {try {listener.gotOAuthAccessToken(token);} catch (Exception e) {}}}});}}	Yes
492	"public class A {void parseAndDispatchEvents() {try {String line = null;while ((line = reader.readLine()) != null) {onLineReceived(line);}silentlyCloseReader();logger.debug(""SSE stream ended. Closing stream."");onStreamClosedCallback.accept(null);} catch (IOException exception) {silentlyCloseReader();if (!(exception.getCause() instanceof MieleWebserviceDisconnectSseException)) {logger.warn(""SSE connection failed unexpectedly: {}"", exception.getMessage());onStreamClosedCallback.accept(exception.getCause());}}logger.debug(""SSE stream closed."");}}"	No
493	"public class A {@Overridepublic boolean updateIndexMapping(String indexName, final Map<String, Object> mapping)throws IOException {indexName = formatIndexName(indexName);PutMappingRequest putMappingRequest = new PutMappingRequest(indexName);Gson gson = new Gson();putMappingRequest.source(gson.toJson(mapping), XContentType.JSON);putMappingRequest.type(""_doc"");AcknowledgedResponse response =client.indices().putMapping(putMappingRequest, RequestOptions.DEFAULT);return response.isAcknowledged();}}"	Yes
494	"public class A {@Overridepublic void close() throws IOException {wasClosed = true;while (thread.isAlive()) {thread.interrupt();try {thread.join();} catch (InterruptedException e) {if (!thread.isAlive()) {Thread.currentThread().interrupt();}LOG.debug(taskName + "" interrupted while waiting for the writer thread to die"", e);}}if (thrown != null) {throw new IOException(thrown);}}}"	No
495	public class A {private boolean isNamingReadiness(HttpServletRequest request) {try {apiCommands.metrics(request);return true;} catch (Exception e) {}return false;}}	Yes
496	"public class A {private static Index indexJar(JarFile file) throws IOException {Indexer indexer = new Indexer();Enumeration<JarEntry> e = file.entries();boolean multiRelease = JarFiles.isMultiRelease(file);while (e.hasMoreElements()) {JarEntry entry = e.nextElement();if (entry.getName().endsWith("".class"")) {if (multiRelease && entry.getName().startsWith(META_INF_VERSIONS)) {String part = entry.getName().substring(META_INF_VERSIONS.length());int slash = part.indexOf(""/"");if (slash != -1) {try {int ver = Integer.parseInt(part.substring(0, slash));if (ver <= JAVA_VERSION) {try (InputStream inputStream = file.getInputStream(entry)) {indexer.index(inputStream);}}} catch (NumberFormatException ex) {log.debug(""Failed to parse META-INF/versions entry"", ex);}}} else {try (InputStream inputStream = file.getInputStream(entry)) {indexer.index(inputStream);}}}}return indexer.complete();}}"	No
497	public class A {@Overridepublic boolean delete() {try {return this._storageAdaptor.deleteStoragePool(this);} catch (Exception e) {}return false;}}	Yes
498	"public class A {public void updated(Map<String, Object> properties) {synchronized (updateLock) {this.properties.clear();HashMap<String, Object> decryptedPropertiesMap = new HashMap<>();for (Map.Entry<String, Object> entry : properties.entrySet()) {String key = entry.getKey();Object value = entry.getValue();if (key.equals(MQTT_PASSWORD_PROP_NAME)) {try {Password decryptedPassword =new Password(this.cryptoService.decryptAes(((String) value).toCharArray()));decryptedPropertiesMap.put(key, decryptedPassword);} catch (Exception e) {logger.info(""Password is not encrypted"");decryptedPropertiesMap.put(key, new Password((String) value));}} else {decryptedPropertiesMap.put(key, value);}}this.properties.putAll(decryptedPropertiesMap);}update();}}"	Yes
499	public class A {private void updateContextWithTime(WorkflowExecutionContext context) {try {InstancesResult result =WorkflowEngineFactory.getWorkflowEngine().getJobDetails(context.getClusterName(), context.getWorkflowId());Date startTime = result.getInstances()[0].startTime;Date endTime = result.getInstances()[0].endTime;Date now = new Date();if (startTime == null) {startTime = now;}if (endTime == null) {endTime = now;}context.setValue(WorkflowExecutionArgs.WF_START_TIME, Long.toString(startTime.getTime()));context.setValue(WorkflowExecutionArgs.WF_END_TIME, Long.toString(endTime.getTime()));} catch (FalconException e) {}}}	Yes
500	"public class A {public void start() {JSONObject jObjResult = null;String scalejsonChk = """";String awsServerChk = """";int iSetCount = 0;Map<String, Object> scaleCommon = new HashMap<String, Object>();Map<String, Object> param = new HashMap<String, Object>();context = new ClassPathXmlApplicationContext(new String[] {""context-tcontrol.xml""});ScaleServiceImpl service = (ScaleServiceImpl) context.getBean(""ScaleService"");try {jObjResult = service.scaleAwsConnect(null, ""scaleAwsChk"", 0, client, is, os);if (jObjResult != null) {String resultCode = (String) jObjResult.get(ProtocolID.RESULT_CODE);if (resultCode.equals(""0"")) {scalejsonChk = (String) jObjResult.get(ProtocolID.RESULT_SUB_DATA);}}if (scalejsonChk != null) {scalejsonChk = scalejsonChk.trim();if (scalejsonChk.contains(""/usr/bin/aws"")) {awsServerChk = ""Y"";} else {awsServerChk = ""N"";}} else {awsServerChk = ""N"";}iSetCount = scaleAwsAutoSetChk();String strAutoScaleTime = """";if (""Y"".equals(awsServerChk)) {service.insertScaleServer();if (iSetCount > 0) {strAutoScaleTime =FileUtil.getPropertyValue(""context.properties"", ""agent.scale_auto_exe_time"");JobDetail jobMons =newJob(DXTcontrolScaleChogihwa.class).withIdentity(""jobName"", ""group1"").build();CronTrigger triggerMons =newTrigger().withIdentity(""trggerName"", ""group1"").withSchedule(cronSchedule(strAutoScaleTime)).build();scheduler.scheduleJob(jobMons, triggerMons);scheduler.start();strAutoScaleTime =FileUtil.getPropertyValue(""context.properties"", ""agent.scale_auto_reset_time"");param.put(""db_svr_id"", service.dbServerInfoSet());scaleCommon = service.selectAutoScaleComCngInfo(param);if (scaleCommon != null) {if (scaleCommon.get(""auto_run_cycle"") != null) {int auto_run_cycle_num =Integer.parseInt(scaleCommon.get(""auto_run_cycle"").toString());if (auto_run_cycle_num > 0) {strAutoScaleTime = ""0 0/"" + auto_run_cycle_num + "" * 1/1 * ? *"";}}}socketLogger.info(""DXTcontrolScaleAwsExecute.strAutoScaleTime4 : "" + strAutoScaleTime);JobDetail jobScale =newJob(DXTcontrolScaleExecute.class).withIdentity(""jobName"", ""group2"").build();CronTrigger triggerScale =newTrigger().withIdentity(""trggerName"", ""group2"").withSchedule(cronSchedule(strAutoScaleTime)).build();scheduler.scheduleJob(jobScale, triggerScale);scheduler.start();}}} catch (Exception e) {e.printStackTrace();}}}"	No
501	"public class A {private void tryToStoreInSent(UserDataRequest udr, SendEmail email, InputStream emailStream) {try {emailStream.reset();mailboxService.storeInSent(udr, multipleTimesReadable(emailStream, email.getMimeMessage().getCharset()));} catch (CollectionNotFoundException e) {logger.warn(""Cannot store an email in the Sent folder, the collection was not found: {}"",e.getMessage());} catch (Throwable t) {}}}"	Yes
502	"public class A {public void onError(Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TBase msg;unloadApplication_result result = new unloadApplication_result();{msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =(org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);return;} catch (Exception ex) {LOGGER.error(""Exception writing to internal frame buffer"", ex);}fb.close();}}"	No
503	"public class A {public static boolean npmVersionsMatch(String current, String next) {String left = current;String right = next;if (left == null || right == null) {return false;}if (left.equals(right) || ""*"".equals(left) || ""*"".equals(right)) {return true;}if (left.contains("" "")) {if (right.contains("" "")) {return false;}if (!right.matches(""^\\d.*$"")) {right = stripLeadingNonNumeric(right);if (right == null) {return false;}}try {final Semver v = new Semver(right, SemverType.NPM);return v.satisfies(left);} catch (SemverException ex) {}} else {if (!left.matches(""^\\d.*$"")) {left = stripLeadingNonNumeric(left);if (left == null || left.isEmpty()) {return false;}}try {Semver v = new Semver(left, SemverType.NPM);if (!right.isEmpty() && v.satisfies(right)) {return true;}if (!right.contains("" "")) {left = current;right = stripLeadingNonNumeric(right);if (right != null) {v = new Semver(right, SemverType.NPM);return v.satisfies(left);}}} catch (SemverException ex) {} catch (NullPointerException ex) {}}return false;}}"	Yes
504	public class A {public static int calculateSizeOfValue(Object value) {if (value instanceof String) {return ((String) value).length();} else if (value instanceof Boolean) {return 4;} else if (value instanceof Number || value instanceof Date) {return 8;} else if (value instanceof Collection) {return calculateSizeOfCollection((Collection<?>) value);} else if (value instanceof Map) {return calculateSizeOfMap((Map<?, ?>) value);} else {return 100;}}}	Yes
505	"public class A {private void configureParagraph(Paragraph p, Map<String, Object> newConfig, String user) {if (newConfig == null || newConfig.isEmpty()) {LOGGER.warn(""{} is trying to update paragraph {} of note {} with empty config"",user,p.getId(),p.getNote().getId());throw new BadRequestException(""paragraph config cannot be empty"");}Map<String, Object> origConfig = p.getConfig();for (final Map.Entry<String, Object> entry : newConfig.entrySet()) {origConfig.put(entry.getKey(), entry.getValue());}p.setConfig(origConfig);}}"	Yes
506	"public class A {private boolean isOverSize(String group, String tenant, int currentSize, int maxSize, boolean hasTenant) {if (currentSize > maxSize) {if (hasTenant) {LOGGER.warn(""[capacityManagement] tenant content is over maxSize, tenant: {}, maxSize: {},""+ "" currentSize: {}"",tenant,maxSize,currentSize);} else {LOGGER.warn(""[capacityManagement] group content is over maxSize, group: {}, maxSize: {},""+ "" currentSize: {}"",group,maxSize,currentSize);}return true;}return false;}}"	No
507	"public class A {private void reconnect(final long initialReconnectDelay) {if (connectLock.tryLock()) {try {Runnable r =new Runnable() {public void run() {boolean reconnected = false;LOG.info(""Schedule reconnect after {} millis"", initialReconnectDelay);try {Thread.sleep(initialReconnectDelay);} catch (InterruptedException e) {}int attempt = 0;while (!(isStopping() || isStopped())&& (session == null || session.getSessionState().equals(SessionState.CLOSED))&& attempt < configuration.getMaxReconnect()) {try {attempt++;session = createSession();reconnected = true;} catch (IOException e) {LOG.warn(""Failed to reconnect to {}"", getEndpoint().getConnectionString());closeSession();try {Thread.sleep(configuration.getReconnectDelay());} catch (InterruptedException ee) {}}}if (reconnected) {}}};Thread t = new Thread(r);t.start();t.join();} catch (InterruptedException e) {} finally {connectLock.unlock();}}}}"	Yes
508	"public class A {private void listen() {SocketAddress sockAddr = ds.getLocalSocketAddress();Connection.LOG.info(""Start UDP listener on {}"", sockAddr);byte[] data = new byte[MAX_PACKAGE_LEN];try {while (!ds.isClosed()) {DatagramPacket dp = new DatagramPacket(data, MAX_PACKAGE_LEN);ds.receive(dp);InetAddress senderAddr = dp.getAddress();if (conn.isBlackListed(dp.getAddress())) {Connection.LOG.info(""Ignore UDP datagram package received from blacklisted {}"", senderAddr);} else {Connection.LOG.info(""Received UDP datagram package from {}"", senderAddr);try {handler.onReceive(conn, dp);} catch (Throwable e) {Connection.LOG.warn(""Exception processing UDP received from {}:"", senderAddr, e);}}}} catch (Throwable e) {if (!ds.isClosed()) Connection.LOG.error(""Exception on listing on {}:"", sockAddr, e);}Connection.LOG.info(""Stop UDP listener on {}"", sockAddr);}}"	Yes
509	"public class A {public Jedis getJedisResource() {Jedis subscriberJedis = null;if (isPoolSetup()) {try {subscriberJedis = JedisConnectionObject.pool.getResource();connectionSetup = true;} catch (Exception e) {subscriberJedis = null;connectionSetup = false;logger.error(""Fatal error! Could not get a resource from the pool."");}if (subscriberJedis != null) {allotedJedis.put(subscriberJedis, false);return subscriberJedis;}}return null;}}"	Yes
510	"public class A {@Overrideprotected void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse)throws Exception {try {long groupId = ParamUtil.getLong(actionRequest, ""groupId"");long classNameId = ParamUtil.getLong(actionRequest, ""classNameId"");String className = _portal.getClassName(classNameId);long classPK = ParamUtil.getLong(actionRequest, ""classPK"");InfoItemReference infoItemReference = new InfoItemReference(className, classPK);InfoItemObjectProvider<Object> infoItemObjectProvider =_infoItemServiceTracker.getFirstInfoItemService(InfoItemObjectProvider.class, infoItemReference.getClassName());InfoItemFieldValues infoItemFieldValues =InfoItemFieldValues.builder().infoItemReference(infoItemReference).infoFieldValues(_getInfoFieldValues(actionRequest, className, infoItemObjectProvider.getInfoItem(classPK))).build();ServiceContext serviceContext = ServiceContextFactory.getInstance(actionRequest);_translationEntryService.addOrUpdateTranslationEntry(groupId,_getTargetLanguageId(actionRequest),infoItemReference,infoItemFieldValues,serviceContext);} catch (Exception exception) {_log.error(exception, exception);SessionErrors.add(actionRequest, exception.getClass(), exception);actionResponse.setRenderParameter(""mvcRenderCommandName"", ""/translation/translate"");}}}"	No
511	"public class A {@Path(""/list"")@GET@Produces(MediaType.APPLICATION_JSON)@Operation(summary = ""Get all phasing only entities by using first/last index"",description = ""Get all phasing only entities by using first/last index"",tags = {""accounts""},responses = {@ApiResponse(responseCode = ""200"",description = ""Successful execution"",content =@Content(mediaType = ""application/json"",schema = @Schema(implementation = AccountControlPhasingResponse.class)))})@PermitAllpublic Response getAllPhasingOnlyControls(@Parameter(description =""A zero-based index to the first, last asset ID to retrieve (optional)."",schema = @Schema(implementation = FirstLastIndexBeanParam.class))@BeanParamFirstLastIndexBeanParam indexBeanParam) {ResponseBuilder response = ResponseBuilder.startTiming();indexBeanParam.adjustIndexes(maxAPIFetchRecords);AccountControlPhasingResponse dto = new AccountControlPhasingResponse();dto.phasingOnlyControls =accountControlPhasingService.getAllStream(indexBeanParam.getFirstIndex(), indexBeanParam.getLastIndex()).map(item -> accountControlPhasingConverter.convert(item)).collect(Collectors.toList());return response.bind(dto).build();}}"	Yes
512	public class A {@Activatepublic void activate() {ScriptStandaloneSetup.doSetup(scriptServiceUtil, this);}}	Yes
513	"public class A {@Overridepublic Exchange receiveNoWait(Endpoint endpoint) {if (camelContext.isStopped()) {throw new RejectedExecutionException(""CamelContext is stopped"");}LOG.debug(""<<<< {}"", endpoint);PollingConsumer consumer = null;try {consumer = acquirePollingConsumer(endpoint);return consumer.receiveNoWait();} finally {if (consumer != null) {releasePollingConsumer(endpoint, consumer);}}}}"	No
514	"public class A {@Overridepublic IOpenField getField(String fname) {try {return getField(fname, true);} catch (AmbiguousFieldException e) {LOG.debug(""Ignored error: "", e);return null;}}}"	No
515	public class A {private void executeBatch() throws SQLException, IOException, InterruptedException {if (records.isEmpty()) {return;}if (connection == null) {connection = dataSource.getConnection();connection.setAutoCommit(false);preparedStatement = connection.prepareStatement(spec.getStatement().get());}Sleeper sleeper = Sleeper.DEFAULT;BackOff backoff = retryBackOff.backoff();while (true) {try (PreparedStatement preparedStatement =connection.prepareStatement(spec.getStatement().get())) {try {for (T record : records) {processRecord(record, preparedStatement);}preparedStatement.executeBatch();connection.commit();break;} catch (SQLException exception) {if (!spec.getRetryStrategy().apply(exception)) {throw exception;}preparedStatement.clearBatch();connection.rollback();if (!BackOffUtils.next(sleeper, backoff)) {throw exception;}}}}records.clear();}}	Yes
516	public class A {@Overridepublic void publish(java.util.logging.LogRecord record) {if (record == null) return;Logger log4jLog = getLog4jLogger(record);Level level = toLevel(record.getLevel());String msg = julFormatter.formatMessage(record);Throwable thrown = record.getThrown();if (log4jLog instanceof ExtendedLogger) {try {((ExtendedLogger) log4jLog).logIfEnabled(FQCN, level, null, msg, thrown);} catch (NoClassDefFoundError e) {log4jLog.log(level, msg, thrown);}} else log4jLog.log(level, msg, thrown);}}	Yes
517	"public class A {private void initWebKeys(Conf conf) {final String jwksUri = conf.getDynamic().getJwksUri();if (jwksUri.startsWith(conf.getDynamic().getIssuer())) {if (conf.getWebKeys() != null) {jwks = conf.getWebKeys();} else {generateWebKeys();}return;}final JSONObject keys = JwtUtil.getJSONWebKeys(jwksUri);log.trace(""Downloaded external keys from "" + jwksUri + "", keys: "" + keys);final JSONWebKeySet keySet = JSONWebKeySet.fromJSONObject(keys);jwks = new WebKeysConfiguration();jwks.setKeys(keySet.getKeys());}}"	No
518	"public class A {@Testpublic void testBoard()throws IOException, DeploymentException, InterruptedException, ExecutionException {URI restUri = URI.create(""http://localhost:"" + server.port() + ""/rest/board"");for (String message : messages) {restClient.post().uri(restUri).submit(message).thenAccept(it -> assertThat(it.status(), is(Http.Status.NO_CONTENT_204))).toCompletableFuture().get();}URI websocketUri = URI.create(""ws://localhost:"" + server.port() + ""/websocket/board"");CountDownLatch messageLatch = new CountDownLatch(messages.length);ClientEndpointConfig config = ClientEndpointConfig.Builder.create().build();websocketClient.connectToServer(new Endpoint() {@Overridepublic void onOpen(Session session, EndpointConfig EndpointConfig) {try {session.addMessageHandler(new MessageHandler.Whole<String>() {@Overridepublic void onMessage(String message) {LOGGER.info(""Client OnMessage called '"" + message + ""'"");messageLatch.countDown();if (messageLatch.getCount() == 0) {try {session.close();} catch (IOException e) {fail(""Unexpected exception "" + e);}}}});session.getBasicRemote().sendText(""SEND"");} catch (IOException e) {fail(""Unexpected exception "" + e);}}@Overridepublic void onClose(Session session, CloseReason closeReason) {LOGGER.info(""Client OnClose called '"" + closeReason + ""'"");}@Overridepublic void onError(Session session, Throwable thr) {LOGGER.info(""Client OnError called '"" + thr + ""'"");}},config,websocketUri);messageLatch.await(1000000, TimeUnit.SECONDS);}}"	Yes
519	public class A {public boolean containsUndeclaredUnits() {if (isSetRefId()) {CallableSBase reference = getReferenceInstance();if (reference != null && reference instanceof QuantityWithUnit) {return !((QuantityWithUnit) reference).isSetUnits();} else {return true;}}return false;}}	Yes
520	"public class A {@Testpublic void playerAutoTerminationTest() throws Exception {String id = uploadFile(new File(""test-files/sample.txt""));log.debug(""File uploaded"");RepositoryHttpPlayer player =getRepository().findRepositoryItemById(id).createRepositoryHttpPlayer();player.setAutoTerminationTimeout(1000);RestTemplate template = getRestTemplate();assertEquals(HttpStatus.OK, template.getForEntity(player.getURL(), byte[].class).getStatusCode());Thread.sleep(300);assertEquals(HttpStatus.OK, template.getForEntity(player.getURL(), byte[].class).getStatusCode());log.debug(""Request 2 Passed"");Thread.sleep(1500);assertEquals(HttpStatus.NOT_FOUND, template.getForEntity(player.getURL(), byte[].class).getStatusCode());}}"	Yes
521	public class A {@Overridepublic void unscheduleRunOnceJob(String subject, String externalId) {if (LOGGER.isDebugEnabled()) {}JobId jobId = new RunOnceJobId(subject, externalId);logObjectIfNotNull(jobId);unscheduleJob(jobId.value());}}	Yes
522	"public class A {void removeLocalArtifacts(Set<Artifact> artifacts) {if (localRepo != null) {Iterator<Artifact> it = artifacts.iterator();while (it.hasNext()) {Artifact artifact = it.next();if (getFileInLocalRepo(artifact.getFile()) != null) {LOG.trace(""Removing artifact {}"", artifact);it.remove();}}}}}"	No
523	"public class A {@Overridepublic void open() {String serviceEndpoint = getProperty(SPARQL_SERVICE_ENDPOINT);boolean replaceURIs =getProperty(SPARQL_REPLACE_URIS) != null && getProperty(SPARQL_REPLACE_URIS).equals(""true"");boolean removeDatatypes =getProperty(SPARQL_REMOVE_DATATYPES) != null&& getProperty(SPARQL_REMOVE_DATATYPES).equals(""true"");String engineType = getProperty(SPARQL_ENGINE_TYPE);if (SparqlEngineType.JENA.toString().equals(engineType)) {engine = new JenaInterpreter(serviceEndpoint, replaceURIs, removeDatatypes);}}}"	Yes
524	"public class A {public boolean datenLesen(Path xmlFilePath) {boolean ret = false;if (Files.exists(xmlFilePath)) {DatenPset datenPset = null;XMLStreamReader parser = null;try (InputStream is = Files.newInputStream(xmlFilePath);InputStreamReader in = new InputStreamReader(is, StandardCharsets.UTF_8)) {parser = inFactory.createXMLStreamReader(in);while (parser.hasNext()) {final int event = parser.next();if (event == XMLStreamConstants.START_ELEMENT) {switch (parser.getLocalName()) {case MVConfig.SYSTEM -> readSystemConfiguration(parser);case DatenPset.TAG -> {datenPset = new DatenPset();if (get(parser, DatenPset.TAG, DatenPset.XML_NAMES, datenPset.arr)) {Daten.listePset.add(datenPset);}}case DatenProg.TAG -> {DatenProg datenProg = new DatenProg();if (get(parser, DatenProg.TAG, DatenProg.XML_NAMES, datenProg.arr)) {if (datenPset != null) {datenPset.addProg(datenProg);}}}case ReplaceList.REPLACELIST -> readReplacementList(parser);case DatenAbo.TAG -> readAboEntry(parser);case DatenDownload.TAG -> readDownloadEntry(parser);case BlacklistRule.TAG -> readBlacklist(parser);case DatenMediaPath.TAG -> readMediaPath(parser);}}}ret = true;} catch (Exception ex) {ret = false;logger.error(""datenLesen"", ex);} finally {if (parser != null) {try {parser.close();} catch (XMLStreamException ignored) {}}}sortLists();MVConfig.loadSystemParameter();}return ret;}}"	No
525	"public class A {public void deleteEverything(SqlSession session) {Collection<String> ops = new TreeSet<>(db.getMyBatisConfiguration().getMappedStatementNames());for (String name : ops) if (name.startsWith(""deletedb-"")) session.update(name);for (String name : ops) if (name.startsWith(""resetIndex-"")) session.update(name);log.info(""Database contents was completely deleted"");createRootGroup(session);}}"	Yes
526	"public class A {private synchronized void monitorConnection() {if (future == null || future.isDone() || future.isCancelled()) {log.info(""Scheduling connection retries."");future = executorService.scheduleAtFixedRate(this, 1, monitorInterval, TimeUnit.MILLISECONDS);} else {}}}"	Yes
527	"public class A {@Overridepublic void open() {try {Class.forName(IGNITE_JDBC_DRIVER_NAME);} catch (ClassNotFoundException e) {logger.error(""Can't find Ignite JDBC driver"", e);connEx = e;return;}try {logger.info(""connect to "" + getProperty(IGNITE_JDBC_URL));conn = DriverManager.getConnection(getProperty(IGNITE_JDBC_URL));connEx = null;logger.info(""Successfully created JDBC connection"");} catch (Exception e) {logger.error(""Can't open connection: "", e);connEx = e;}}}"	No
528	"public class A {@Overridepublic void setServletContext(ServletContext servletContext) {if (servletContext != null) {String user = servletContext.getInitParameter(""s3.user"");_log.info(""servlet context provided s3.user="" + user);if (user != null) {setUser(user);}String password = servletContext.getInitParameter(""s3.password"");if (password != null) {setPassword(password);}String bucketName = servletContext.getInitParameter(""s3.bundle.bucketName"");if (bucketName != null) {_log.info(""servlet context provided bucketName="" + bucketName);setBucketName(bucketName);} else {_log.info(""servlet context missing bucketName, using "" + getBucketName());}}}}"	No
529	"public class A {@Overrideprotected void configure(HttpSecurity http) throws Exception {RESTRequestParameterProcessingFilter restAuthenticationFilter =new RESTRequestParameterProcessingFilter();restAuthenticationFilter.setAuthenticationManager(authenticationManagerBean());restAuthenticationFilter.setSecurityService(securityService);restAuthenticationFilter.setEventPublisher(eventPublisher);http =http.addFilterBefore(restAuthenticationFilter, UsernamePasswordAuthenticationFilter.class);String rememberMeKey = settingsService.getRememberMeKey();boolean development = SettingsService.isDevelopmentMode();if (StringUtils.isBlank(rememberMeKey) && !development) {LOG.debug(""Generating a new ephemeral 'remember me' key in a secure way."");rememberMeKey = generateRememberMeKey();} else if (StringUtils.isBlank(rememberMeKey) && development) {rememberMeKey = DEVELOPMENT_REMEMBER_ME_KEY;} else {}http.csrf().requireCsrfProtectionMatcher(csrfSecurityRequestMatcher).and().headers().frameOptions().sameOrigin().and().authorizeRequests().antMatchers(""/recover*"",""/accessDenied*"",""/style/**"",""/icons/**"",""/flash/**"",""/script/**"",""/sonos/**"",""/login"",""/error"").permitAll().antMatchers(""/personalSettings*"",""/passwordSettings*"",""/playerSettings*"",""/shareSettings*"",""/passwordSettings*"").hasRole(""SETTINGS"").antMatchers(""/generalSettings*"",""/advancedSettings*"",""/userSettings*"",""/internalhelp*"",""/musicFolderSettings*"",""/databaseSettings*"",""/transcodeSettings*"",""/rest/startScan*"").hasRole(""ADMIN"").antMatchers(""/deletePlaylist*"", ""/savePlaylist*"").hasRole(""PLAYLIST"").antMatchers(""/download*"").hasRole(""DOWNLOAD"").antMatchers(""/upload*"").hasRole(""UPLOAD"").antMatchers(""/createShare*"").hasRole(""SHARE"").antMatchers(""/changeCoverArt*"", ""/editTags*"").hasRole(""COVERART"").antMatchers(""/setMusicFileInfo*"").hasRole(""COMMENT"").antMatchers(""/podcastReceiverAdmin*"").hasRole(""PODCAST"").antMatchers(""/**"").hasRole(""USER"").anyRequest().authenticated().and().formLogin().loginPage(""/login"").permitAll().defaultSuccessUrl(""/index"", true).failureUrl(FAILURE_URL).usernameParameter(""j_username"").passwordParameter(""j_password"").and().logout().logoutRequestMatcher(new AntPathRequestMatcher(""/logout"", ""GET"")).logoutSuccessUrl(""/login?logout"").and().rememberMe().key(rememberMeKey);}}"	Yes
530	"public class A {private AtlasEdge updateEdge(AtlasAttributeDef attributeDef,Object value,AtlasEdge currentEdge,final AtlasVertex entityVertex)throws AtlasBaseException {if (LOG.isDebugEnabled()) {LOG.debug(""Updating entity reference {} for reference attribute {}"", attributeDef.getName());}AtlasVertex currentVertex = currentEdge.getInVertex();String currentEntityId = getIdFromVertex(currentVertex);String newEntityId = getIdFromVertex(entityVertex);AtlasEdge newEdge = currentEdge;if (!currentEntityId.equals(newEntityId) && entityVertex != null) {try {newEdge =graphHelper.getOrCreateEdge(currentEdge.getOutVertex(), entityVertex, currentEdge.getLabel());} catch (RepositoryException e) {throw new AtlasBaseException(AtlasErrorCode.INTERNAL_ERROR, e);}}return newEdge;}}"	No
531	"public class A {@RequestMapping(method = RequestMethod.GET, value = ""/secure/vcpeNetwork/isIPFree"")public @ResponseBody String isIPFree(String vcpeId, String router, String ip, Model model, Locale locale) {Boolean isFree = false;try {isFree = vcpeNetworkBO.isIPFree(vcpeId, router, ip);} catch (RestServiceException e) {model.addAttribute(""errorMsg"", messageSource.getMessage(""vcpenetwork.check.ip.message.error"", null, locale));}return isFree.toString();}}"	Yes
532	"public class A {public void stop() {if (shutdownExecutorOnStop) {executor.shutdown();}try {report();} catch (Exception e) {LOG.warn(""Final reporting of metrics failed."", e);}if (shutdownExecutorOnStop) {try {if (!executor.awaitTermination(1, TimeUnit.SECONDS)) {executor.shutdownNow();if (!executor.awaitTermination(1, TimeUnit.SECONDS)) {LOG.warn(""ScheduledExecutorService did not terminate."");}}} catch (InterruptedException ie) {executor.shutdownNow();Thread.currentThread().interrupt();}} else {cancelScheduledFuture();}}}"	No
533	"public class A {@Deprecatedpublic String getFinancialYearId(String estDate) {logger.info(""Obtained session"");String result = """";Query query =getCurrentSession().createQuery(""select cfinancialyear.id from CFinancialYear cfinancialyear where""+ "" cfinancialyear.startingDate <= to_date('""+ estDate+ ""','dd/MM/yyyy') and cfinancialyear.endingDate >= to_date('""+ estDate+ ""','dd/MM/yyyy') "");ArrayList list = (ArrayList) query.list();if (list.size() > 0) result = list.get(0).toString();return result;}}"	No
534	public class A {@Overridepublic void update(final Collection<ProvenanceEventRecord> newEvents, final long totalHits) {boolean queryComplete = false;writeLock.lock();try {if (isFinished()) {return;}this.matchingRecords.addAll(newEvents);hitCount += totalHits;if (matchingRecords.size() > query.getMaxResults()) {final Iterator<ProvenanceEventRecord> itr = matchingRecords.iterator();for (int i = 0; i < query.getMaxResults(); i++) {itr.next();}while (itr.hasNext()) {itr.next();itr.remove();}}numCompletedSteps++;updateExpiration();if (numCompletedSteps >= numSteps || this.matchingRecords.size() >= query.getMaxResults()) {final long searchNanos = System.nanoTime() - creationNanos;queryTime = TimeUnit.MILLISECONDS.convert(searchNanos, TimeUnit.NANOSECONDS);queryComplete = true;if (numCompletedSteps >= numSteps) {} else {}}} finally {writeLock.unlock();}if (queryComplete) {synchronized (completionMonitor) {completionMonitor.notifyAll();}}}}	Yes
535	public class A {@Overridepublic void onMessage(Message<Long> message) {if (!message.getMessageObject().equals(received)) {failures++;}if (received % 10000 == 0) {}received++;}}	Yes
536	"public class A {public void taskFailed(TaskGroup tg) {logger.info(""Task failed callback for taskId: "" + tg.getTaskId());lock.lock();try {this.failedTaskGroups.add(tg);if (--this.currentlyRunningCount == 0) {this.runningCondition.signalAll();}} finally {lock.unlock();}}}"	No
537	public class A {public List<String> validatePartitioners(String[] tableNames, Job job) {ArrayList<String> validTableNames = new ArrayList<>();for (String tableName : tableNames) {if (hasPartitionerOverride(new Text(tableName))) {try {Partitioner<BulkIngestKey, Value> partitionerForTable =cachePartitioner(new Text(tableName));initializeJob(job, partitionerForTable);validTableNames.add(tableName);} catch (Exception e) {lazyInitializeDefaultPartitioner(job);}} else {lazyInitializeDefaultPartitioner(job);}}return validTableNames;}}	Yes
538	"public class A {private static AuthConfig getAuthConfigFromEC2InstanceRole(KitLogger log) throws IOException {log.debug(""No user and password set for ECR, checking EC2 instance role"");try (CloseableHttpClient client = HttpClients.custom().useSystemProperties().build()) {RequestConfig conf =RequestConfig.custom().setConnectionRequestTimeout(1000).setConnectTimeout(1000).setSocketTimeout(1000).build();HttpGet request =new HttpGet(""http://169.254.169.254/latest/meta-data/iam/security-credentials"");request.setConfig(conf);String instanceRole;try (CloseableHttpResponse response = client.execute(request)) {if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {log.debug(""No instance role found, return code was %d"",response.getStatusLine().getStatusCode());return null;}try (InputStream is = response.getEntity().getContent()) {instanceRole = IOUtils.toString(is, StandardCharsets.UTF_8);}}log.debug(""Found instance role %s, getting temporary security credentials"", instanceRole);request =new HttpGet(""http://169.254.169.254/latest/meta-data/iam/security-credentials/""+ UrlEscapers.urlPathSegmentEscaper().escape(instanceRole));request.setConfig(conf);try (CloseableHttpResponse response = client.execute(request)) {if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {log.debug(""No security credential found, return code was %d"",response.getStatusLine().getStatusCode());return null;}try (Reader r =new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8)) {JsonObject securityCredentials = new Gson().fromJson(r, JsonObject.class);String user = securityCredentials.getAsJsonPrimitive(""AccessKeyId"").getAsString();String password = securityCredentials.getAsJsonPrimitive(""SecretAccessKey"").getAsString();String token = securityCredentials.getAsJsonPrimitive(""Token"").getAsString();log.debug(""Received temporary access key %s..."", user.substring(0, 8));return new AuthConfig(user, password, ""none"", token);}}}}}"	No
539	public class A {public static com.liferay.portal.kernel.model.EmailAddressSoap[] getEmailAddresses(String className, long classPK) throws RemoteException {try {java.util.List<com.liferay.portal.kernel.model.EmailAddress> returnValue =EmailAddressServiceUtil.getEmailAddresses(className, classPK);return com.liferay.portal.kernel.model.EmailAddressSoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
540	"public class A {private static void convertTieLine(UcteNetwork ucteNetwork, MergedXnode mergedXnode, UcteExporterContext context) {Line line = mergedXnode.getExtendable();convertXNode(ucteNetwork, mergedXnode, context);UcteElementId ucteElementId1 =context.getNamingStrategy().getUcteElementId(mergedXnode.getLine1Name());String elementName1 = line.getProperty(ELEMENT_NAME_PROPERTY_KEY + ""_1"", null);UcteElementStatus status1 =line instanceof TieLine? getStatusHalf((TieLine) line, Branch.Side.ONE): getStatus(line, Branch.Side.ONE);UcteLine ucteLine1 =new UcteLine(ucteElementId1,status1,(float) line.getR() * mergedXnode.getRdp(),(float) line.getX() * mergedXnode.getXdp(),(float) line.getB1(),(int) line.getCurrentLimits1().getPermanentLimit(),elementName1);ucteNetwork.addLine(ucteLine1);UcteElementId ucteElementId2 =context.getNamingStrategy().getUcteElementId(mergedXnode.getLine2Name());String elementName2 = line.getProperty(ELEMENT_NAME_PROPERTY_KEY + ""_2"", null);UcteElementStatus status2 =line instanceof TieLine? getStatusHalf((TieLine) line, Branch.Side.TWO): getStatus(line, Branch.Side.TWO);UcteLine ucteLine2 =new UcteLine(ucteElementId2,status2,(float) line.getR() * (1.0f - mergedXnode.getRdp()),(float) line.getX() * (1.0f - mergedXnode.getXdp()),(float) line.getB2(),(int) line.getCurrentLimits2().getPermanentLimit(),elementName2);ucteNetwork.addLine(ucteLine2);}}"	Yes
541	"public class A {private static void onDocumentRemoved(CoreSession coreSession,RelationManager relationManager,QuoteServiceConfig config,DocumentModel docMessage)throws ClientException {Resource documentRes = relationManager.getResource(config.documentNamespace, docMessage, null);if (documentRes == null) {return;}Statement pattern = new StatementImpl(null, null, documentRes);List<Statement> statementList = relationManager.getStatements(config.graphName, pattern);for (Statement stmt : statementList) {QNameResource resource = (QNameResource) stmt.getSubject();String commentId = resource.getLocalName();DocumentModel docModel =(DocumentModel)relationManager.getResourceRepresentation(config.commentNamespace, resource, null);if (docModel != null) {try {coreSession.removeDocument(docModel.getRef());} catch (Exception e) {log.error(""quote removal failed"", e);}} else {log.warn(""quote/comment not found: id="" + commentId);}}coreSession.save();relationManager.remove(config.graphName, statementList);}}"	Yes
542	public class A {public String setDefaultWidgets() {Page page = null;try {page = (Page) this.getPage(this.getPageCode());PageModel model = page.getMetadata().getModel();Widget[] defaultWidgets = model.getDefaultWidget();if (null == defaultWidgets) {return SUCCESS;}Widget[] widgets = new Widget[defaultWidgets.length];for (int i = 0; i < defaultWidgets.length; i++) {Widget defaultWidget = defaultWidgets[i];if (null != defaultWidget) {if (null == defaultWidget.getType()) {continue;}widgets[i] = defaultWidget;}}page.setWidgets(widgets);this.getPageManager().updatePage(page);} catch (Throwable t) {return FAILURE;}return SUCCESS;}}	Yes
543	"public class A {@Overridepublic FeedMessage getModel() {FeedMessage cachedAlerts = _cache.getAlerts(getAgencyIdHashKey());if (cachedAlerts != null) {return cachedAlerts;} else {FeedMessage.Builder feedMessage = createFeedWithDefaultHeader(null);List<String> agencyIds = new ArrayList<String>();if (agencyId != null) {agencyIds.add(agencyId);} else {Map<String, List<CoordinateBounds>> agencies =_transitDataService.getAgencyIdsWithCoverageArea();agencyIds.addAll(agencies.keySet());}for (String agencyId : agencyIds) {ListBean<ServiceAlertBean> serviceAlertBeans =_transitDataService.getAllServiceAlertsForAgencyId(agencyId);for (ServiceAlertBean serviceAlert : serviceAlertBeans.getList()) {try {if (matchesFilter(serviceAlert)) {Alert.Builder alert = Alert.newBuilder();fillAlertHeader(alert, serviceAlert.getSummaries());fillAlertDescriptions(alert, serviceAlert.getDescriptions());if (!alert.hasDescriptionText()) {_log.info(""copying header text of "" + alert.getHeaderText().getTranslation(0));alert.setDescriptionText(alert.getHeaderText());}fillActiveWindows(alert, serviceAlert.getActiveWindows());fillSituationAffects(alert, serviceAlert.getAllAffects());FeedEntity.Builder feedEntity = FeedEntity.newBuilder();feedEntity.setAlert(alert);feedEntity.setId(id(agencyId, serviceAlert.getId()));feedMessage.addEntity(feedEntity);}} catch (Exception e) {_log.error(""Unable to process service alert"", e);}}}FeedMessage builtFeedMessage = feedMessage.build();_cache.putAlerts(getAgencyIdHashKey(), builtFeedMessage);return builtFeedMessage;}}}"	No
544	"public class A {public static ArrayList<String> loadSystemData(String system) {Path datapath =Paths.get(""./src/main/resources/QALD6MultilingualLogs/multilingual_"" + system + "".html"");ArrayList<String> result = Lists.newArrayList();try {String loadedData = Files.lines(datapath).collect(Collectors.joining());Document doc = Jsoup.parse(loadedData);Element table = doc.select(""table"").get(5);Elements tableRows = table.select(""tr"");for (Element row : tableRows) {Elements tableEntry = row.select(""td"");result.add(tableEntry.get(3).ownText());}result.remove(0);return result;} catch (IOException e) {e.printStackTrace();log.debug(""loading failed."");return result;}}}"	No
545	public class A {@Overridepublic PollsQuestion findByPrimaryKey(Serializable primaryKey) throws NoSuchQuestionException {PollsQuestion pollsQuestion = fetchByPrimaryKey(primaryKey);if (pollsQuestion == null) {if (_log.isDebugEnabled()) {_log.debug(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}throw new NoSuchQuestionException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return pollsQuestion;}}	No
546	"public class A {private boolean connect(String address, int port) {try {socket = TimedSocket.getSocket(address, port, SOCKET_TIMEOUT);socket.setSoTimeout(SOCKET_TIMEOUT);BufferedOutputStream buffOut = new BufferedOutputStream(socket.getOutputStream());outputStream = new DataOutputStream(buffOut);return true;} catch (IOException e) {Freedomotic.logger.severe(""Unable to connect to host "" + address + "" on port "" + port);return false;}}}"	Yes
547	"public class A {@Overridepublic void delete(Table hTable, Object rowKey, String colFamily, String colName) {try {byte[] rowBytes = HBaseUtils.getBytes(rowKey);Delete delete = new Delete(rowBytes);hTable.delete(delete);} catch (IOException e) {throw new PersistenceException(""Could not perform delete. Caused by: "", e);}}}"	Yes
548	"public class A {protected MediaPackageElement retractElement(String channelId, MediaPackage mediapackage, MediaPackageElement element)throws DistributionException {notNull(mediapackage, ""mediapackage"");notNull(element, ""element"");notNull(channelId, ""channelId"");String mediapackageId = mediapackage.getIdentifier().toString();String elementId = element.getIdentifier();try {final File elementFile = getDistributionFile(channelId, mediapackage, element);final File mediapackageDir = getMediaPackageDirectory(channelId, mediapackage);if (!elementFile.exists()) {return element;}if (!FileUtils.deleteQuietly(elementFile.getParentFile())) {}if (mediapackageDir.isDirectory() && mediapackageDir.list().length == 0) {FileSupport.delete(mediapackageDir);}return element;} catch (Exception e) {if (e instanceof DistributionException) {throw (DistributionException) e;} else {throw new DistributionException(e);}}}}"	Yes
549	public class A {public void warnIfPartitionerMismatch(Class<? extends IPartitioner> expectedPartitioner) {String mismatchedPartitioner = getMismatchedPartitioner(expectedPartitioner);if (mismatchedPartitioner != null) {LoggerFactory.getLogger(CassandraKeyspace.class)}}}	Yes
550	public class A {@Overridepublic void fireBeforeRefreshStart(boolean asynchronous) {if (myRefreshCount++ == 0) {for (final VirtualFileManagerListener listener : myVirtualFileManagerListeners) {try {listener.beforeRefreshStart(asynchronous);} catch (Exception e) {}}}}}	Yes
551	"public class A {private void dispatchInternal(UniformPair<EventBean[]> events) {if (statementResultNaturalStrategy != null) {statementResultNaturalStrategy.execute(events);}EventBean[] newEventArr = events != null ? events.getFirst() : null;EventBean[] oldEventArr = events != null ? events.getSecond() : null;for (UpdateListener listener : statementListenerSet.getListeners()) {try {listener.update(newEventArr, oldEventArr, epStatement, runtime);} catch (Throwable t) {String message =""Unexpected exception invoking listener update method on listener class '""+ listener.getClass().getSimpleName()+ ""' : ""+ t.getClass().getSimpleName()+ "" : ""+ t.getMessage();log.error(message, t);}}}}"	No
552	public class A {@Overridepublic void handleUpdate(LutronCommandType type, String... parameters) {try {if (type == LutronCommandType.MODE&& parameters.length > 1&& ModeCommand.ACTION_STEP.toString().equals(parameters[0])) {Long step = Long.valueOf(parameters[1]);if (getThing().getStatus() == ThingStatus.UNKNOWN) {updateStatus(ThingStatus.ONLINE);startPolling();}updateState(CHANNEL_STEP, new DecimalType(step.longValue()));} else {}} catch (NumberFormatException e) {}}}	Yes
553	"public class A {public static void main(String args[]) {JMeterUtils.loadJMeterProperties(""jmeter.properties"");String dataset =JMeterUtils.getPropDefault(""jmeterPlugin.sts.datasetDirectory"", HttpSimpleTableControl.DEFAULT_DATA_DIR);int port =JMeterUtils.getPropDefault(""jmeterPlugin.sts.port"", HttpSimpleTableControl.DEFAULT_PORT);boolean timestamp =JMeterUtils.getPropDefault(""jmeterPlugin.sts.addTimestamp"", HttpSimpleTableControl.DEFAULT_TIMESTAMP);Configurator.setLevel(log.getName(), Level.INFO);String loglevelStr =JMeterUtils.getPropDefault(""loglevel"", HttpSimpleTableControl.DEFAULT_LOG_LEVEL);System.out.println(""loglevel="" + loglevelStr);Configurator.setRootLevel(Level.toLevel(loglevelStr));Configurator.setLevel(log.getName(), Level.toLevel(loglevelStr));bStartFromMain = true;HttpSimpleTableServer serv = new HttpSimpleTableServer(port, timestamp, dataset);log.info(""SERVER_PORT : "" + port);ServerRunner.executeInstance(serv);}}"	Yes
554	"public class A {@Overridepublic void start(final Map<String, String> properties) {logger.info(""Starting Source Task with properties {}"",StatelessKafkaConnectorUtil.getLoggableProperties(properties));final String timeout =properties.getOrDefault(StatelessKafkaConnectorUtil.DATAFLOW_TIMEOUT,StatelessKafkaConnectorUtil.DEFAULT_DATAFLOW_TIMEOUT);timeoutMillis = (long) FormatUtils.getPreciseTimeDuration(timeout, TimeUnit.MILLISECONDS);topicName = properties.get(StatelessNiFiSourceConnector.TOPIC_NAME);topicNameAttribute = properties.get(StatelessNiFiSourceConnector.TOPIC_NAME_ATTRIBUTE);keyAttributeName = properties.get(StatelessNiFiSourceConnector.KEY_ATTRIBUTE);if (topicName == null && topicNameAttribute == null) {throw new ConfigException(""Either the topic.name or topic.name.attribute configuration must be specified"");}final String headerRegex = properties.get(StatelessNiFiSourceConnector.HEADER_REGEX);headerAttributeNamePattern = headerRegex == null ? null : Pattern.compile(headerRegex);dataflow = StatelessKafkaConnectorUtil.createDataflow(properties);dataflow.initialize();dataflowName = properties.get(StatelessKafkaConnectorUtil.DATAFLOW_NAME);outputPortName = properties.get(StatelessNiFiSourceConnector.OUTPUT_PORT_NAME);if (outputPortName == null) {final Set<String> outputPorts = dataflow.getOutputPortNames();if (outputPorts.isEmpty()) {throw new ConfigException(""The dataflow specified for <""+ dataflowName+ ""> does not have an Output Port at the root level. Dataflows used for a Kafka""+ "" Connect Source Task must have at least one Output Port at the root level."");}if (outputPorts.size() > 1) {throw new ConfigException(""The dataflow specified for <""+ dataflowName+ ""> has multiple Output Ports at the root level (""+ outputPorts.toString()+ ""). The ""+ StatelessNiFiSourceConnector.OUTPUT_PORT_NAME+ "" property must be set to indicate which of these Ports Kafka records should be""+ "" retrieved from."");}outputPortName = outputPorts.iterator().next();}final String taskIndex = properties.get(STATE_MAP_KEY);localStatePartitionMap.put(STATE_MAP_KEY, taskIndex);final Map<String, String> localStateMap =(Map<String, String>) (Map) context.offsetStorageReader().offset(localStatePartitionMap);final Map<String, String> clusterStateMap =(Map<String, String>) (Map) context.offsetStorageReader().offset(clusterStatePartitionMap);dataflow.setComponentStates(localStateMap, Scope.LOCAL);dataflow.setComponentStates(clusterStateMap, Scope.CLUSTER);}}"	No
555	"public class A {@Overridepublic List<String> getMatches(final String query, final int rows, final int start) {String url = composeURL(TERM_SEARCH_QUERY_SCRIPT, TERM_SEARCH_PARAM_NAME, query, rows, start);List<String> result = new ArrayList<String>();try {Document response = readXML(url);NodeList nodes = response.getElementsByTagName(""IdList"");if (nodes.getLength() > 0) {nodes = nodes.item(0).getChildNodes();for (int i = 0; i < nodes.getLength(); ++i) {Node n = nodes.item(i);if (n.getNodeType() == Node.ELEMENT_NODE && n.getNodeName().equals(""Id"")) {result.add(n.getTextContent());}}}} catch (Exception ex) {}return result;}}"	Yes
556	"public class A {protected void doCreateDeployment(Exchange exchange, String operation) throws Exception {Deployment deployment = null;String deploymentName =exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_DEPLOYMENT_NAME, String.class);String namespaceName =exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME, String.class);DeploymentSpec deSpec =exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_DEPLOYMENT_SPEC, DeploymentSpec.class);if (ObjectHelper.isEmpty(deploymentName)) {throw new IllegalArgumentException(""Create a specific Deployment require specify a pod name"");}if (ObjectHelper.isEmpty(namespaceName)) {LOG.error(""Create a specific Deployment require specify a namespace name"");throw new IllegalArgumentException(""Create a specific Deployment require specify a namespace name"");}if (ObjectHelper.isEmpty(deSpec)) {throw new IllegalArgumentException(""Create a specific Deployment require specify a Deployment spec bean"");}Map<String, String> labels =exchange.getIn().getHeader(KubernetesConstants.KUBERNETES_DEPLOYMENTS_LABELS, Map.class);Deployment deploymentCreating =new DeploymentBuilder().withNewMetadata().withName(deploymentName).withLabels(labels).endMetadata().withSpec(deSpec).build();deployment =getEndpoint().getKubernetesClient().apps().deployments().inNamespace(namespaceName).create(deploymentCreating);MessageHelper.copyHeaders(exchange.getIn(), exchange.getOut(), true);exchange.getOut().setBody(deployment);}}"	Yes
557	"public class A {@BeforeClasspublic void setup() throws Exception {logger.info(""Setup begin: "" + this.getClass().getSimpleName());String dataPath = rootPath + ""/src/test/resources/alldatatype.csv"";CarbonProperties.getInstance().addProperty(CarbonCommonConstants.CARBON_WRITTEN_BY_APPNAME, ""HetuTest"");CarbonProperties.getInstance().addProperty(CarbonCommonConstants.MAX_QUERY_EXECUTION_TIME, ""0"");CarbonProperties.getInstance().addProperty(CarbonCommonConstants.CARBON_SEGMENT_LOCK_FILES_PRESERVE_HOURS, ""0"");CarbonProperties.getInstance().addProperty(CarbonCommonConstants.CARBON_INVISIBLE_SEGMENTS_PRESERVE_COUNT, ""1"");Map<String, String> map = new HashMap<String, String>();map.put(""hive.metastore"", ""file"");map.put(""hive.allow-drop-table"", ""true"");map.put(""hive.metastore.catalog.dir"", ""file://"" + storePath + ""/hive.store"");map.put(""carbondata.store-location"", ""file://"" + carbonStoreLocation);map.put(""carbondata.minor-vacuum-seg-count"", ""4"");map.put(""carbondata.major-vacuum-seg-size"", ""1"");if (!FileFactory.isFileExist(storePath + ""/carbon.store"")) {FileFactory.mkdirs(storePath + ""/carbon.store"");}hetuServer.startServer(""testdb"", map);hetuServer.execute(""drop table if exists testdb.testtable"");hetuServer.execute(""drop table if exists testdb.testtable2"");hetuServer.execute(""drop table if exists testdb.testtable3"");hetuServer.execute(""drop table if exists testdb.testtable4"");hetuServer.execute(""drop schema if exists testdb"");hetuServer.execute(""drop schema if exists default"");hetuServer.execute(""create schema testdb"");hetuServer.execute(""create schema default"");hetuServer.execute(""create table testdb.testtable(ID int, date date, country varchar, name varchar, phonetype""+ "" varchar, serialname varchar,salary double, bonus decimal(10,4), monthlyBonus""+ "" decimal(18,4), dob timestamp, shortField smallint, iscurrentemployee boolean)""+ "" with(format='CARBON') "");InsertIntoTableFromCSV(dataPath);String columnNames =""ID,date,country,name,phonetype,serialname,salary,bonus,""+ ""monthlyBonus,dob,shortField,isCurrentEmployee"";logger.info(""CarbonStore created at location : "" + storePath);}}"	No
558	"public class A {public static com.liferay.portal.kernel.model.User updateIncompleteUser(HttpPrincipal httpPrincipal,long companyId,boolean autoPassword,String password1,String password2,boolean autoScreenName,String screenName,String emailAddress,long facebookId,String openId,java.util.Locale locale,String firstName,String middleName,String lastName,long prefixId,long suffixId,boolean male,int birthdayMonth,int birthdayDay,int birthdayYear,String jobTitle,boolean updateUserInformation,boolean sendEmail,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(UserServiceUtil.class, ""updateIncompleteUser"", _updateIncompleteUserParameterTypes60);MethodHandler methodHandler =new MethodHandler(methodKey,companyId,autoPassword,password1,password2,autoScreenName,screenName,emailAddress,facebookId,openId,locale,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,jobTitle,updateUserInformation,sendEmail,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.User) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
559	public class A {@Overridepublic PortablePipelineResult run(Pipeline pipeline, JobInfo jobInfo) throws Exception {PortablePipelineOptions pipelineOptions =PipelineOptionsTranslation.fromProto(jobInfo.pipelineOptions()).as(PortablePipelineOptions.class);final String jobName = jobInfo.jobName();File outputFile = new File(checkArgumentNotNull(pipelineOptions.getOutputExecutablePath()));outputStream =new JarOutputStream(new FileOutputStream(outputFile), createManifest(mainClass, jobName));outputChannel = Channels.newChannel(outputStream);PortablePipelineJarUtils.writeDefaultJobName(outputStream, jobName);copyResourcesFromJar(new JarFile(mainClass.getProtectionDomain().getCodeSource().getLocation().getPath()));writeAsJson(PipelineOptionsTranslation.toProto(pipelineOptions),PortablePipelineJarUtils.getPipelineOptionsUri(jobName));Pipeline pipelineWithClasspathArtifacts = writeArtifacts(pipeline, jobName);writeAsJson(pipelineWithClasspathArtifacts, PortablePipelineJarUtils.getPipelineUri(jobName));outputChannel.close();return new JarCreatorPipelineResult();}}	Yes
560	"public class A {private void handleResolveOptions(String tenantId, String triggerId, boolean checkIfAllResolved) {if (definitionsService == null || alertsEngine == null) {log.debug(""definitionsService or alertsEngine are not defined. Only valid for testing."");return;}try {Trigger trigger = definitionsService.getTrigger(tenantId, triggerId);if (null == trigger) {return;}boolean setEnabled = trigger.isAutoEnable() && !trigger.isEnabled();boolean setFiring = trigger.isAutoResolve();if (setFiring) {Trigger loadedTrigger = alertsEngine.getLoadedTrigger(trigger);if (null != loadedTrigger && Mode.FIRING == loadedTrigger.getMode()) {if (log.isDebugEnabled()) {log.debug(""Ignoring setFiring, loaded Trigger already in firing mode ""+ loadedTrigger.toString());}setFiring = false;}}if (!(setEnabled || setFiring)) {return;}boolean allResolved = true;if (checkIfAllResolved) {AlertsCriteria ac = new AlertsCriteria();ac.setTriggerId(triggerId);ac.setStatusSet(EnumSet.complementOf(EnumSet.of(Status.RESOLVED)));Page<Alert> unresolvedAlerts =getAlerts(tenantId, ac, new Pager(0, 1, Order.unspecified()));allResolved = unresolvedAlerts.isEmpty();}if (!allResolved) {log.debugf(""Ignoring resolveOptions, not all Alerts for Trigger %s are resolved"",trigger.toString());return;}if (setEnabled) {trigger.setEnabled(true);definitionsService.updateTrigger(tenantId, trigger);} else {alertsEngine.reloadTrigger(tenantId, triggerId);}} catch (Exception e) {log.errorDatabaseException(e.getMessage());}}}"	No
561	public class A {@Overridepublic void onFailure(final Throwable throwable) {sender.tell(new Failure(throwable), getSelf());}}	Yes
562	"public class A {@Watched(prefix = ""schema"")public Id removeVertexLabel(Id id) {SchemaCallable callable = new VertexLabelRemoveCallable();VertexLabel schema = this.getVertexLabel(id);return asyncRun(this.graph(), schema, callable);}}"	Yes
563	"public class A {@Overridepublic void adjustTLSExtensionContext(SignedCertificateTimestampExtensionMessage message) {if (message.getExtensionLength().getValue() > 65535) {LOGGER.warn(""The SingedCertificateTimestamp length shouldn't exceed 2 bytes as defined in RFC 6962. ""+ ""Length was ""+ message.getExtensionLength().getValue());}context.setSignedCertificateTimestamp(message.getSignedTimestamp().getValue());}}"	Yes
564	"public class A {@Overridepublic Image getDefaultUserMalePortrait() {if (_defaultUserMalePortrait != null) {return _defaultUserMalePortrait;}ClassLoader classLoader = ImageToolImpl.class.getClassLoader();try {InputStream inputStream =classLoader.getResourceAsStream(PropsUtil.get(PropsKeys.IMAGE_DEFAULT_USER_MALE_PORTRAIT));if (inputStream == null) {}_defaultUserMalePortrait = getImage(inputStream);} catch (Exception exception) {_log.error(""Unable to configure the default user male portrait: "" + exception.getMessage());}return _defaultUserMalePortrait;}}"	Yes
565	"public class A {@Overridepublic Note get(String noteId, AuthenticationInfo subject) throws IOException {if (StringUtils.isBlank(noteId) || !isSubjectValid(subject)) {return EMPTY_NOTE;}String token = getUserToken(subject.getUser());String response = restApiClient.get(token, noteId);Note note = Note.fromJson(response);if (note == null) {return EMPTY_NOTE;}LOG.info(""ZeppelinHub REST API get note {} "", noteId);return note;}}"	No
566	"public class A {private Trace createTrace(final Object target, final Object[] args) {final Method methodInvoked = (Method) args[2];final StringBuilder methodNameBuilder = new StringBuilder();if (methodInvoked != null) {try {final Class<?> declaringClass = methodInvoked.getDeclaringClass();if (declaringClass != null) {methodNameBuilder.append(declaringClass.getCanonicalName());methodNameBuilder.append('.');}methodNameBuilder.append(methodInvoked.getName());} catch (final Exception exception) {logger.error(""An error occurred while fetching method details"", exception);}}final Trace trace = traceContext.newTraceObject();final Connection connection = RemotingContext.getConnection();final String remoteAddress = JbossUtility.fetchRemoteAddress(connection);if (trace.canSampled()) {final SpanRecorder recorder = trace.getSpanRecorder();recordRootSpan(recorder, methodNameBuilder.toString(), remoteAddress);if (isDebug) {}} else {if (isDebug) {}}return trace;}}"	Yes
567	"public class A {@PreAuthorize(""hasRole('"" + IdRepoEntitlement.KEYMASTER + ""')"")@Transactional(readOnly = true)public void exportInternalStorageContent(final OutputStream os) {try {exporter.export(AuthContextUtils.getDomain(),os,uwfAdapter.getPrefix(),gwfAdapter.getPrefix(),awfAdapter.getPrefix());LOG.debug(""Internal storage content successfully exported"");} catch (Exception e) {LOG.error(""While exporting internal storage content"", e);}}}"	No
568	public class A {@Overridepublic void close() {super.close();ServerSocketChannel serverChannel = _acceptChannel;_acceptChannel = null;if (serverChannel != null) {removeBean(serverChannel);if (serverChannel.isOpen()) {try {serverChannel.close();} catch (IOException e) {}}}_localPort = -2;}}	Yes
569	"public class A {private void createVertexCompositeIndexWithSystemProperty(AtlasGraphManagement management,Class propertyClass,AtlasPropertyKey propertyKey,final String systemPropertyKey,AtlasCardinality cardinality,boolean isUnique) {if (LOG.isDebugEnabled()) {LOG.debug(""Creating composite index for property {} of type {} and {}"",propertyKey.getName(),propertyClass.getName(),systemPropertyKey);}AtlasPropertyKey typePropertyKey = management.getPropertyKey(systemPropertyKey);if (typePropertyKey == null) {typePropertyKey = management.makePropertyKey(systemPropertyKey, String.class, cardinality);}final String indexName = propertyKey.getName() + systemPropertyKey;AtlasGraphIndex existingIndex = management.getGraphIndex(indexName);if (existingIndex == null) {List<AtlasPropertyKey> keys = new ArrayList<>(2);keys.add(typePropertyKey);keys.add(propertyKey);management.createVertexCompositeIndex(indexName, isUnique, keys);}}}"	Yes
570	"public class A {private static Option<String> getMetadataValue(HoodieTableMetaClient metaClient, String extraMetadataKey, HoodieInstant instant) {try {LOG.info(""reading checkpoint info for:"" + instant + "" key: "" + extraMetadataKey);HoodieCommitMetadata commitMetadata =HoodieCommitMetadata.fromBytes(metaClient.getCommitsTimeline().getInstantDetails(instant).get(),HoodieCommitMetadata.class);return Option.ofNullable(commitMetadata.getExtraMetadata().get(extraMetadataKey));} catch (IOException e) {throw new HoodieIOException(""Unable to parse instant metadata "" + instant, e);}}}"	No
571	"public class A {@Overridepublic void close() throws IOException {LOG.info(""Terminating Persistence Processor..."");disruptor.halt();disruptor.shutdown();disruptorExec.shutdownNow();try {disruptorExec.awaitTermination(3, SECONDS);} catch (InterruptedException e) {Thread.currentThread().interrupt();}LOG.info(""Persistence Processor terminated"");}}"	Yes
572	"public class A {protected synchronized void update(final Map<String, Object> properties) {logger.debug(""Updating GPIO Driver..."");logger.debug(""Updating GPIO Driver... Done"");}}"	No
573	"public class A {private void deleteUserConfigRecord(String username, Connection conn) {PreparedStatement stat = null;try {stat = conn.prepareStatement(DELETE_CONFIG);stat.setString(1, username);stat.executeUpdate();} catch (Throwable t) {_logger.error(""Error deleting user config record by id {}"", username, t);throw new RuntimeException(""Error deleting user config record by id "" + username, t);} finally {this.closeDaoResources(null, stat);}}}"	No
574	"public class A {public static com.liferay.portal.kernel.model.EmailAddress getEmailAddress(HttpPrincipal httpPrincipal, long emailAddressId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(EmailAddressServiceUtil.class, ""getEmailAddress"", _getEmailAddressParameterTypes3);MethodHandler methodHandler = new MethodHandler(methodKey, emailAddressId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.EmailAddress) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
575	"public class A {public ArrayList<ServiceInfo> getServices(Properties properties) throws ApiException {ArrayList<ServiceInfo> services = new ArrayList<ServiceInfo>();try {String defaultLangCode = this.getLangManager().getDefaultLang().getCode();String langCode = properties.getProperty(SystemConstants.API_LANG_CODE_PARAMETER);String tagParamValue = properties.getProperty(""tag"");langCode =(null != langCode && null != this.getLangManager().getLang(langCode))? langCode: defaultLangCode;Map<String, ApiService> masterServices =this.getApiCatalogManager().getServices(tagParamValue);Iterator<ApiService> iter = masterServices.values().iterator();while (iter.hasNext()) {ApiService service = (ApiService) iter.next();if (service.isActive()&& !service.isHidden()&& this.checkServiceAuthorization(service, properties, false)) {ServiceInfo smallService = this.createServiceInfo(service, langCode, defaultLangCode);services.add(smallService);}}BeanComparator comparator = new BeanComparator(""description"");Collections.sort(services, comparator);} catch (Throwable t) {throw new ApiException(IApiErrorCodes.SERVER_ERROR, ""Internal error"");}return services;}}"	Yes
576	"public class A {private String insertConfirmationToken(String state, int confirmationValidity)throws EngineException {Date createDate = new Date();Calendar cl = Calendar.getInstance();cl.setTime(createDate);cl.add(Calendar.MINUTE, confirmationValidity);Date expires = cl.getTime();String token = UUID.randomUUID().toString();try {tokensMan.addToken(CONFIRMATION_TOKEN_TYPE,token,state.getBytes(StandardCharsets.UTF_8),createDate,expires);} catch (Exception e) {log.error(""Cannot add token to db"", e);throw e;}return token;}}"	No
577	"public class A {private void processReadRequest(final BookieProtocol.ReadRequest r, final Channel c) {ExecutorService fenceThreadPool =null == highPriorityThreadPool ? null : highPriorityThreadPool.chooseThread(c);ReadEntryProcessor read =ReadEntryProcessor.create(r, c, this, fenceThreadPool, throttleReadResponses);final OrderedExecutor threadPool;if (r.isHighPriority() || r.isFencing()) {threadPool = highPriorityThreadPool;} else {threadPool = readThreadPool;}if (null == threadPool) {read.run();} else {try {threadPool.executeOrdered(r.getLedgerId(), read);} catch (RejectedExecutionException e) {if (LOG.isDebugEnabled()) {LOG.debug(""Failed to process request to read entry at {}:{}. Too many pending requests"",r.ledgerId,r.entryId);}read.sendResponse(BookieProtocol.ETOOMANYREQUESTS,ResponseBuilder.buildErrorResponse(BookieProtocol.ETOOMANYREQUESTS, r),requestStats.getReadRequestStats());}}}}"	No
578	"public class A {public Broker installPlugin(Broker broker) throws Exception {logger.info(""Installing Kapua application broker plugin..."");try {return new KapuaApplicationBrokerFilter(broker);} catch (Exception e) {logger.error(""Error in plugin installation."", e);throw new SecurityException(e);}}}"	No
579	"public class A {@Overridepublic boolean consumeAll() {assertLocked();Throwable x = UNCONSUMED_CONTENT_EXCEPTION;if (LOG.isDebugEnabled()) {x = new IOException(""Unconsumed content"");LOG.debug(""consumeAll {}"", this, x);}failCurrentContent(x);boolean atEof = _httpChannel.failAllContent(x);if (LOG.isDebugEnabled())return atEof;}}"	Yes
580	"public class A {protected void printConvenienceMethodTableValuedFunctionAsField(JavaWriter out, TableDefinition function, boolean parametersAsField, String methodName) {if (function.getParameters().size() > 254) {return;}if (function.getParameters().isEmpty())if (parametersAsField) return;else if (scala) return;final String className = out.ref(getStrategy().getFullJavaClassName(function));final String functionIdentifier = getStrategy().getFullJavaIdentifier(function);if (!printDeprecationIfUnknownTypes(out, function.getParameters()))out.javadoc(""Get <code>%s</code> as a table."", function.getQualifiedOutputName());if (scala) out.print(""%sdef %s("", visibility(), methodName);else if (kotlin) out.print(""%sfun %s("", visibility(), methodName);else out.print(""%sstatic %s %s("", visibility(), className, methodName);if (!function.getParameters().isEmpty()) out.println();printParameterDeclarations(out, function.getParameters(), parametersAsField, ""  "");if (scala || kotlin) {out.println(""): %s = %s.call("", className, functionIdentifier);} else {out.println("") {"");out.println(""return %s.call("", functionIdentifier);}forEach(function.getParameters(),(parameter, separator) -> {out.println(""%s%s"", getStrategy().getJavaMemberName(parameter), separator);});if (scala || kotlin) out.println("")"");else out.println("");"").println(""}"");}}"	Yes
581	"public class A {@Overridepublic void filter(ContainerRequestContext requestContext) {if (pathFilter.test(requestContext.getUriInfo().getPath())) {return;}String auth = requestContext.getHeaderString(HttpHeaders.AUTHORIZATION);if (auth != null && auth.startsWith(BEARER_PREFIX)) {String token = auth.substring(BEARER_PREFIX.length());TokenReview tokenReview = authApi.performTokenReview(token);if (tokenReview.isAuthenticated()) {requestContext.setSecurityContext(new RbacSecurityContext(tokenReview, authApi, requestContext.getUriInfo()));} else {throw Exceptions.notAuthorizedException();}} else if (request != null&& request.isSSL()&& findUserName(apiHeaderConfig, requestContext) != null) {HttpConnection connection = request.connection();String userName = findUserName(apiHeaderConfig, requestContext);Set<String> groups = findGroups(apiHeaderConfig, requestContext);Map<String, List<String>> extras = findExtra(apiHeaderConfig, requestContext);try {connection.peerCertificateChain();requestContext.setSecurityContext(new RbacSecurityContext(new TokenReview(userName, """", groups, extras, true),authApi,requestContext.getUriInfo()));} catch (SSLPeerUnverifiedException e) {requestContext.setSecurityContext(new RbacSecurityContext(new TokenReview(""system:anonymous"", """", null, null, false),authApi,requestContext.getUriInfo()));}} else {requestContext.setSecurityContext(new RbacSecurityContext(new TokenReview(""system:anonymous"", """", null, null, false),authApi,requestContext.getUriInfo()));}}}"	Yes
582	"public class A {private void setSelectedKBItem(KBHandle value, Item<LinkWithRoleModel> aItem, AnnotationFeature linkedAnnotationFeature) {if (aItem.getModelObject().targetAddr != -1) {try {CAS cas = actionHandler.getEditorCas();FeatureStructure selectedFS = selectFsByAddr(cas, aItem.getModelObject().targetAddr);WebAnnoCasUtil.setFeature(selectedFS, linkedAnnotationFeature, value != null ? value.getIdentifier() : value);LOG.info(""change the value"");qualifierModel.detach();actionHandler.actionCreateOrUpdate(RequestCycle.get().find(AjaxRequestTarget.class).get(), cas);} catch (Exception e) {error(""Error: "" + e.getMessage());}}}}"	Yes
583	"public class A {protected void prepareEmbeddedWebApplicationContext(ServletContext servletContext) {Object rootContext =servletContext.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);if (rootContext != null) {if (rootContext == this) {throw new IllegalStateException(""Cannot initialize context because there is already a root application context present""+ "" - check whether you have multiple ServletContextInitializers!"");}return;}Log logger = LogFactory.getLog(ContextLoader.class);servletContext.log(""Initializing Spring embedded WebApplicationContext"");try {servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this);if (logger.isDebugEnabled()) {logger.debug(""Published root WebApplicationContext as ServletContext attribute with name [""+ WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE+ ""]"");}setServletContext(servletContext);if (logger.isInfoEnabled()) {long elapsedTime = System.currentTimeMillis() - getStartupDate();logger.info(""Root WebApplicationContext: initialization completed in "" + elapsedTime + "" ms"");}} catch (RuntimeException ex) {logger.error(""Context initialization failed"", ex);servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);throw ex;} catch (Error ex) {logger.error(""Context initialization failed"", ex);servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);throw ex;}}}"	No
584	public class A {@Activateprotected void activate(BundleContext bundleContext) {_bundleContext = bundleContext;if (_log.isInfoEnabled()) {}for (RemoteAppEntry remoteAppEntry :remoteAppEntryLocalService.getRemoteAppEntries(QueryUtil.ALL_POS, QueryUtil.ALL_POS)) {registerPortlet(remoteAppEntry);}}}	Yes
585	public class A {@Overridepublic T get(K key, String[] fields) throws GoraException {try {if (fields == null) return infinispanClient.get(key);InfinispanQuery<K, T> query = new InfinispanQuery<K, T>(this);query.setKey(key);query.setFields(fields);query.build();Result<K, T> result = query.execute();result.next();return result.get();} catch (Exception e) {throw new GoraException(e);}}}	Yes
586	"public class A {void tryToSendFailSafeNotification() {try {if (failSafeEmail != null) {consoleWriter.a(""Send email notification to: "").fg(Ansi.Color.CYAN).a(failSafeEmail).println();Shell shell = new Shell();shell.exec(buildFailSafeMailCommand());}} catch (Throwable t) {String cantSendEmailMsg =""Can't send fail safe email: "" + t.getMessage() + ""\n"" + ExceptionUtils.getStackTrace(t);consoleWriter.newLine().fg(Ansi.Color.RED).a(cantSendEmailMsg).println(2);logger.error(""Unexpected error"", t);}}}"	No
587	"public class A {@Overridepublic JsonObject getLeaderBoard(String usecase) throws InsightsCustomException {try {AutoMLConfig mlConfig = autoMLConfigDAL.getMLConfigByUsecase(usecase);String modelId = mlConfig.getModelId();return h2oApiCommunicator.getLeaderBoard(modelId);} catch (Exception e) {throw new InsightsCustomException(""Error getting leaderboard: "" + usecase);}}}"	Yes
588	"public class A {private @Nullable String getIPv4inSubnet(String ipAddress, String subnetMask) {try {final Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();while (interfaces.hasMoreElements()) {final NetworkInterface current = interfaces.nextElement();if (!current.isUp()|| current.isLoopback()|| current.isVirtual()|| current.isPointToPoint()) {continue;}for (InterfaceAddress ifAddr : current.getInterfaceAddresses()) {InetAddress addr = ifAddr.getAddress();if (addr.isLoopbackAddress() || (addr instanceof Inet6Address)) {continue;}String ipv4AddressOnInterface = addr.getHostAddress();String subnetStringOnInterface =getIpv4NetAddress(ipv4AddressOnInterface, ifAddr.getNetworkPrefixLength())+ ""/""+ String.valueOf(ifAddr.getNetworkPrefixLength());String configuredSubnetString =getIpv4NetAddress(ipAddress, Short.parseShort(subnetMask)) + ""/"" + subnetMask;if (subnetStringOnInterface.equals(configuredSubnetString)) {return ipv4AddressOnInterface;}}}} catch (SocketException ex) {}return null;}}"	Yes
589	"public class A {@Overridepublic void run() {String line;try {while (isRunning) {line = inputReader.readLine();if (line == null) {throw new IOException(""Got EOF on port "" + port);}propagateLine(line);}} catch (IOException ex) {if (isRunning) {closeConnection();notifyAbort(ex.getMessage());}} finally {}}}"	Yes
590	"public class A {public static HttpResponse retryGetRequestUntilDeployed(String requestUrl, Map<String, String> headers) throws IOException, InterruptedException {HttpResponse response;int retryCount = 0;do {response = HttpsClientRequest.doGet(requestUrl, headers);retryCount++;} while (response != null&& response.getResponseCode() == 404&& response.getResponseMessage().contains(""Not Found"")&& retry(retryCount));return response;}}"	Yes
591	"public class A {public byte[] getResponseBody() throws IOException {if (this.responseBody == null) {InputStream instream = getResponseBodyAsStream();if (instream != null) {long contentLength = getResponseContentLength();if (contentLength > Integer.MAX_VALUE) {throw new IOException(""Content too large to be buffered: "" + contentLength + "" bytes"");}int limit =getParams().getIntParameter(HttpMethodParams.BUFFER_WARN_TRIGGER_LIMIT, 1024 * 1024);if ((contentLength == -1) || (contentLength > limit)) {}ByteArrayOutputStream outstream =new ByteArrayOutputStream(contentLength > 0 ? (int) contentLength : DEFAULT_INITIAL_BUFFER_SIZE);byte[] buffer = new byte[4096];int len;while ((len = instream.read(buffer)) > 0) {outstream.write(buffer, 0, len);}outstream.close();setResponseStream(null);this.responseBody = outstream.toByteArray();}}return this.responseBody;}}"	Yes
592	public class A {@Overridepublic Message getCommittedMessage(TopicPartition topicPartition) throws Exception {SimpleConsumer consumer = null;try {long committedOffset = mZookeeperConnector.getCommittedOffsetCount(topicPartition) - 1;if (committedOffset < 0) {return null;}consumer = createConsumer(topicPartition);if (consumer == null) {return null;}return getMessage(topicPartition, committedOffset, consumer);} catch (MessageDoesNotExistException e) {return null;} finally {if (consumer != null) {consumer.close();}}}}	Yes
593	"public class A {Set<String> getAccessTypes(RangerServiceDef serviceDef) {if (LOG.isDebugEnabled()) {LOG.debug(""==> RangerValidator.getAccessTypes("" + serviceDef + "")"");}Set<String> accessTypes = new HashSet<>();if (serviceDef == null) {LOG.warn(""serviceDef passed in was null!"");} else if (CollectionUtils.isEmpty(serviceDef.getAccessTypes())) {LOG.warn(""AccessTypeDef collection on serviceDef was null!"");} else {for (RangerAccessTypeDef accessTypeDef : serviceDef.getAccessTypes()) {if (accessTypeDef == null) {LOG.warn(""Access type def was null!"");} else {String accessType = accessTypeDef.getName();if (StringUtils.isBlank(accessType)) {LOG.warn(""Access type def name was null/empty/blank!"");} else {accessTypes.add(accessType);}}}}if (LOG.isDebugEnabled()) {}return accessTypes;}}"	Yes
594	"public class A {@Overridepublic void adjustInContext(TlsContext context, ConnectionEndType ownerOfKey) {LOGGER.debug(""Adjusting EC public key in context"");if (null == ownerOfKey) {throw new IllegalArgumentException(""Owner of Key "" + ownerOfKey + "" is not supported"");} else {switch (ownerOfKey) {case CLIENT:context.setClientEcPublicKey(point);if (group != null) {context.setEcCertificateCurve(group);}break;case SERVER:context.setServerEcPublicKey(point);if (group != null) {context.setEcCertificateCurve(group);}break;default:throw new IllegalArgumentException(""Owner of Key "" + ownerOfKey + "" is not supported"");}}}}"	No
595	"public class A {@Overridepublic void start(Promise<Void> startPromise) {HttpServer httpServer = vertx.createHttpServer(serverOptions);httpServer.requestHandler(httpServerRequest -> httpServerRequest.response().end(""OK""));httpServer.listen(result -> {if (result.succeeded()) {log.info(""HealthServer started"");startPromise.complete();} else {log.error(""Error starting HealthServer"");startPromise.fail(result.cause());}});}}"	No
596	"public class A {@GET@Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@Path(""/{id}/protection/full-copies/copy-sets"")@CheckPermission(roles = {Role.SYSTEM_MONITOR, Role.TENANT_ADMIN},acls = {ACL.ANY})public VolumeGroupCopySetList getVolumeGroupFullCopySets(@PathParam(""id"") final URI volumeGroupId) {ArgValidator.checkFieldUriType(volumeGroupId, VolumeGroup.class, ""id"");final VolumeGroup volumeGroup = (VolumeGroup) queryResource(volumeGroupId);List<Volume> volumes = ControllerUtils.getVolumeGroupVolumes(_dbClient, volumeGroup);VolumeGroupCopySetList fullCopySets = new VolumeGroupCopySetList();for (Volume volume : volumes) {StringSet fullCopyIds = volume.getFullCopies();if (fullCopyIds != null) {for (String fullCopyId : fullCopyIds) {Volume fullCopyVolume = _dbClient.queryObject(Volume.class, URI.create(fullCopyId));if (fullCopyVolume == null || fullCopyVolume.getInactive()) {continue;}String setName = fullCopyVolume.getFullCopySetName();if (NullColumnValueGetter.isNullValue(setName)) {log.warn(String.format(""skipping volume %s becuase fullCopySetName is null"",fullCopyVolume.getLabel()));continue;}fullCopySets.getCopySets().add(setName);}}}return fullCopySets;}}"	Yes
597	public class A {private Date _readDate(String text) {if (Validator.isNotNull(text)) {DateFormat dateFormat =DateFormatFactoryUtil.getSimpleDateFormat(Time.RFC822_FORMAT, LocaleUtil.US);try {return dateFormat.parse(text);} catch (Exception exception) {if (_log.isWarnEnabled()) {}}}return new Date();}}	Yes
598	"public class A {private void createBackupArchiveBundle() {File file = new File(ARTIFACTS_BUNDLE_BACKUP_FILE_PATH);DeploymentGroupClient deploymentGroupClient = this.i3sClient.deploymentGroup();ResourceCollection<DeploymentGroup> deploymentGroups = deploymentGroupClient.getAll();String deploymentGrpUri = deploymentGroups.get(0).getUri();TaskResource task =this.artifactsBundleClient.createBackupArchiveBundle(file, deploymentGrpUri);LOGGER.info(""Task object returned to client: {}"", task.toJsonString());}}"	No
599	"public class A {@Testpublic void testInvokeNormal() {NormalClass method = Container.getComp(NormalClass.class);String result = method.test();LOG.info(result);assertEquals(""RESULT"", result);}}"	No
600	"public class A {private void setJsonTimeseries(JsonObject obj, String target, Pair<ZonedDateTime, ZonedDateTime> timeRange) {List<TimeValues> timeValues = databaseConnectService.querySeries(target, timeRange);logger.info(""query size: {}"", timeValues.size());JsonArray dataPoints = new JsonArray();for (TimeValues tv : timeValues) {long time = tv.getTime();Object value = tv.getValue();JsonArray jsonArray = new JsonArray();jsonArray.add(GSON.toJsonTree(value));jsonArray.add(time);dataPoints.add(jsonArray);}obj.add(""datapoints"", dataPoints);}}"	No
601	"public class A {@Overridepublic String getKeyId(JSONWebKeySet jsonWebKeySet, Algorithm algorithm, Use use)throws Exception {try {if (algorithm == null || AlgorithmFamily.HMAC.equals(algorithm.getFamily())) {return null;}final AppConfiguration appConfiguration = configurationFactory.getAppConfiguration();if (appConfiguration.getKeySignWithSameKeyButDiffAlg()) {LOG.trace(""Getting key by use: "" + use);for (JSONWebKey key : jsonWebKeySet.getKeys()) {if (use != null && use == key.getUse()) {LOG.trace(""Found "" + key.getKid() + "", use: "" + use);return key.getKid();}}}final String staticKid = appConfiguration.getStaticKid();if (StringUtils.isNotBlank(staticKid)) {return staticKid;}final String kid = cryptoProvider.getKeyId(jsonWebKeySet, algorithm, use);if (!cryptoProvider.getKeys().contains(kid) && configurationFactory.reloadConfFromLdap()) {return cryptoProvider.getKeyId(jsonWebKeySet, algorithm, use);}return kid;} catch (KeyStoreException e) {LOG.trace(""Try to re-load configuration due to keystore exception (it can be rotated)."");if (configurationFactory.reloadConfFromLdap()) {return cryptoProvider.getKeyId(jsonWebKeySet, algorithm, use);}}return null;}}"	Yes
602	"public class A {@ApiOperation(value = ""Initiate the start of one or more plans."",tags = {CoreCommonConstants.SWAGGER_TAG_MGMT})@ApiResponses(value = {@ApiResponse(code = HttpStatus.SC_CREATED, message = START_SESSION_HTTP_200_MESSAGE),@ApiResponse(code = HttpStatus.SC_BAD_REQUEST, message = START_PLAN_HTTP_400_MESSAGE),@ApiResponse(code = HttpStatus.SC_UNAUTHORIZED,message = CoreCommonConstants.SWAGGER_HTTP_401_MESSAGE),@ApiResponse(code = HttpStatus.SC_INTERNAL_SERVER_ERROR,message = CoreCommonConstants.SWAGGER_HTTP_500_MESSAGE)})@PostMapping(path = START_SESSION_MGMT_URI,consumes = MediaType.APPLICATION_JSON_VALUE,produces = MediaType.APPLICATION_JSON_VALUE)@ResponseStatus(value = org.springframework.http.HttpStatus.CREATED)@ResponseBodypublic void startPlan(@RequestBody final List<ChoreographerRunPlanRequestDTO> requests) {for (final ChoreographerRunPlanRequestDTO request : requests) {logger.debug(""startPlan started..."");ChoreographerSession session = choreographerDBService.initiateSession(request.getId());logger.debug(""Sending a message to start-session."");jmsTemplate.convertAndSend(""start-session"", new ChoreographerStartSessionDTO(session.getId(), request.getId()));}}}"	No
603	"public class A {public void doModify(RunData data, Context context) {SessionState state =((JetspeedRunData) data).getPortletSessionState(((JetspeedRunData) data).getJs_peid());String id = data.getParameters().getString(""id"");state.removeAttribute(""user"");state.removeAttribute(""newuser"");try {UserEdit user = userDirectoryService.editUser(id);state.setAttribute(""user"", user);state.setAttribute(""mode"", ""edit"");} catch (UserNotDefinedException e) {Object[] params = new Object[] {id};addAlert(state, rb.getFormattedMessage(""useact.use_notfou"", params));state.removeAttribute(""mode"");} catch (UserPermissionException e) {addAlert(state, rb.getFormattedMessage(""useact.youdonot1"", new Object[] {id}));state.removeAttribute(""mode"");} catch (UserLockedException e) {addAlert(state, rb.getFormattedMessage(""useact.somels"", new Object[] {id}));state.removeAttribute(""mode"");}}}"	Yes
604	public class A {@Overrideprotected void doInAfterTrace(SpanEventRecorder recorder,Object target,Object[] args,Object result,Throwable throwable) {recorder.recordApi(methodDescriptor);recorder.recordException(throwable);if (isAsynchronousInvocation(target, args, result, throwable)) {final AsyncContext asyncContext = recorder.recordNextAsyncContext();((AsyncContextAccessor) result)._$PINPOINT$_setAsyncContext(asyncContext);if (isDebug) {}}}}	Yes
605	"public class A {private String getParagraphStyleName() {String paraStyleName = """";try {paraStyleName =AnyConverter.toString(Utils.getProperty(textRange, UnoProperty.PARA_STYLE_NAME));} catch (IllegalArgumentException e) {}return paraStyleName;}}"	Yes
606	public class A {@Overridepublic void run() {try {for (int i = 0; i < COUNT; i++) {blockingQueue.take();}} catch (InterruptedException e) {throw new RuntimeException(e);}}}	Yes
607	public class A {public synchronized void stopLoadBalancing() {if (stopped) {return;}stopped = true;partitionReadLock.lock();try {rebalancingPartition.stop();for (final QueuePartition queuePartition : queuePartitions) {queuePartition.stop();}} finally {partitionReadLock.unlock();}}}	Yes
608	"public class A {@Overridepublic void setJobContextInformation(String jobId, Object object) {runningJobs.put(jobId, (ActorRef) object);LOGGER.debug(""Running jobs: {}"", runningJobs.keySet());}}"	No
609	public class A {public static void deleteCommerceDiscountRule(long commerceDiscountRuleId)throws RemoteException {try {CommerceDiscountRuleServiceUtil.deleteCommerceDiscountRule(commerceDiscountRuleId);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
610	"public class A {public static void main(String[] args) throws UnknownHostException {Environment env = new SpringApplication(DataXAdminApplication.class).run(args).getEnvironment();String envPort = env.getProperty(""server.port"");String envContext = env.getProperty(""server.contextPath"");String port = envPort == null ? ""8080"" : envPort;String context = envContext == null ? """" : envContext;String path = port + """" + context + ""/doc.html"";String externalAPI = InetAddress.getLocalHost().getHostAddress();}}"	Yes
611	"public class A {@Testpublic void shouldReturnEmptyBodyAndStatus404() {String response =given().header(""Accept"", ""application/json"").contentType(ContentType.JSON).port(getHttpPort()).expect().statusCode(Response.Status.NOT_FOUND.getStatusCode()).when().get(BASE_REST_PATH + ""/does-not-exists"").asString();org.junit.Assert.assertTrue(response.isEmpty());}}"	Yes
612	"public class A {public static RandomAccessFile getRandomAccessFile(FileImageOutputStream fstream) {try {Field fRaf = FileImageOutputStream.class.getDeclaredField(""raf"");if (fRaf != null) {fRaf.setAccessible(true);return (RandomAccessFile) fRaf.get(fstream);}} catch (Exception e) {}return null;}}"	Yes
613	"public class A {public static com.liferay.commerce.pricing.model.CommercePriceModifierdeleteCommercePriceModifier(HttpPrincipal httpPrincipal, long commercePriceModifierId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommercePriceModifierServiceUtil.class,""deleteCommercePriceModifier"",_deleteCommercePriceModifierParameterTypes1);MethodHandler methodHandler = new MethodHandler(methodKey, commercePriceModifierId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.pricing.model.CommercePriceModifier) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
614	public class A {protected TsFileIOWriter getOrDefaultTsFileIOWriter(File oldTsFile, long partition) {return partitionWriterMap.computeIfAbsent(partition,k -> {File partitionDir =FSFactoryProducer.getFSFactory().getFile(oldTsFile.getParent() + File.separator + partition);if (!partitionDir.exists()) {partitionDir.mkdirs();}File newFile =FSFactoryProducer.getFSFactory().getFile(partitionDir + File.separator + upgradeTsFileName(oldTsFile.getName()));try {if (newFile.exists()) {Files.delete(newFile.toPath());}if (!newFile.createNewFile()) {}TsFileIOWriter writer = new TsFileIOWriter(newFile);if (oldModification != null) {fileModificationMap.put(writer, new ModificationFile(newFile + ModificationFile.FILE_SUFFIX));}return writer;} catch (IOException e) {return null;}});}}	Yes
615	"public class A {private static NtlmChallenge interrogate(CIFSContext tf, Address addr) throws SmbException {UniAddress dc = new UniAddress(addr);try (SmbTransportInternal trans =tf.getTransportPool().getSmbTransport(tf,dc,0,false,tf.hasDefaultCredentials() && tf.getConfig().isIpcSigningEnforced()).unwrap(SmbTransportInternal.class)) {if (!tf.hasDefaultCredentials()) {trans.ensureConnected();} else {try (SmbSessionInternal ssn =trans.getSmbSession(tf.withDefaultCredentials()).unwrap(SmbSessionInternal.class)) {ssn.treeConnectLogon();}}return new NtlmChallenge(trans.getServerEncryptionKey(), dc);} catch (SmbException e) {throw e;} catch (IOException e) {throw new SmbException(""Connection failed"", e);}}}"	Yes
616	"public class A {@Overridepublic void operationComplete(CloseFuture future) {if (session.getStatus() == INFO_SWITCHING_PROTOCOLS) {ProxyUpgradeHandler handler = new ProxyUpgradeHandler(attachedSession.getParent());session.suspendRead();if (LOGGER.isDebugEnabled()) {LOGGER.debug(String.format(""http.proxy service is upgrading session %s"", session));}session.upgrade(handler);}}}"	No
617	public class A {private void initializeStorage() throws InvalidAlgorithmParameterException {mac = storage.get(STORAGE_MAC);final @Nullable Object saltConfig = storage.get(STORAGE_SALT);final @Nullable Object privateKeyConfig = storage.get(STORAGE_PRIVATE_KEY);if (mac == null) {mac = HomekitServer.generateMac();storage.put(STORAGE_MAC, mac);}if (saltConfig == null) {salt = HomekitServer.generateSalt();storage.put(STORAGE_SALT, salt.toString());} else {salt = new BigInteger(saltConfig.toString());}if (privateKeyConfig == null) {privateKey = HomekitServer.generateKey();storage.put(STORAGE_PRIVATE_KEY, Base64.getEncoder().encodeToString(privateKey));} else {privateKey = Base64.getDecoder().decode(privateKeyConfig.toString());}}}	Yes
618	"public class A {private void loadLicenses(String versionHome) {LOGGER.info(MessageFormat.format(""Loading licenses into version home: {0}"", versionHome));String licensesSource = repository + File.separator + ""licenses"";String licensesTarget = versionHome + File.separator + ""licenses"";FolderTools.copyFromFolderToFolder(licensesSource, licensesTarget, true);String licensesReportSource =repository+ File.separator+ ""core""+ File.separator+ ""java""+ File.separator+ ""iesi-core""+ File.separator+ ""target""+ File.separator+ ""site"";String licensesReportTarget =versionHome + File.separator + ""licenses"" + File.separator + ""core"";FolderTools.copyFromFolderToFolder(licensesReportSource, licensesReportTarget, true);}}"	No
619	"public class A {@Overridepublic ListenableFuture<Image> createImage(ImageTemplate template) {checkState(template instanceof CloneImageTemplate,"" openstack-nova only supports creating images through cloning."");CloneImageTemplate cloneTemplate = (CloneImageTemplate) template;RegionAndId sourceImageRegionAndId =RegionAndId.fromSlashEncoded(cloneTemplate.getSourceNodeId());String newImageId =novaApi.getServerApi(sourceImageRegionAndId.getRegion()).createImageFromServer(cloneTemplate.getName(), sourceImageRegionAndId.getId());final RegionAndId targetImageRegionAndId =RegionAndId.fromRegionAndId(sourceImageRegionAndId.getRegion(), newImageId);logger.info("">> Registered new Image %s, waiting for it to become available."", newImageId);final AtomicReference<Image> image =Atomics.newReference(new ImageBuilder().location(find(locations.get(), idEquals(targetImageRegionAndId.getRegion()))).id(targetImageRegionAndId.slashEncode()).providerId(targetImageRegionAndId.getId()).description(cloneTemplate.getName()).operatingSystem(OperatingSystem.builder().description(cloneTemplate.getName()).build()).status(Image.Status.PENDING).build());return userExecutor.submit(new Callable<Image>() {@Overridepublic Image call() throws Exception {if (imageAvailablePredicate.apply(image)) return image.get();throw new UncheckedTimeoutException(""Image was not created within the time limit: "" + image.get());}});}}"	No
620	"public class A {public static boolean tryParse(String serializedDistinctContinuationToken,Utils.ValueHolder<DistinctContinuationToken> outDistinctContinuationToken) {boolean parsed;try {DistinctContinuationToken distinctContinuationToken =new DistinctContinuationToken(serializedDistinctContinuationToken);distinctContinuationToken.getSourceToken();distinctContinuationToken.getLastHash();outDistinctContinuationToken.v = distinctContinuationToken;parsed = true;} catch (Exception ex) {logger.debug(""Received exception {} when trying to parse: {}"",ex.getMessage(),serializedDistinctContinuationToken);parsed = false;outDistinctContinuationToken.v = null;}return parsed;}}"	No
621	"public class A {private void checkRackAfterAgentLoss(SingularityAgent lostAgent) {List<SingularityAgent> agents = agentManager.getObjectsFiltered(MachineState.ACTIVE);int numInRack = 0;for (SingularityAgent agent : agents) {if (agent.getRackId().equals(lostAgent.getRackId())) {numInRack++;}}LOG.info(""Found {} agents left in rack {}"", numInRack, lostAgent.getRackId());if (numInRack == 0) {rackManager.changeState(lostAgent.getRackId(), MachineState.DEAD, Optional.empty(), Optional.empty());}}}"	No
622	public class A {@Overrideprotected readres NFSPROC_READ_2(readargs params) {final readres ret = new readres();try {final NFSFile f = pathManager.getNFSFileByHandle(params.file);final int offset = params.offset;final int count = Math.min(nfs_prot.NFS_MAXDATA, params.count);ret.reply = new readokres();ret.reply.data = new byte[count];if (LOG.isDebugEnabled())ret.reply.attributes = f.getAttributes();if (f.getFile().isDirectory()) {ret.status = nfsstat.NFSERR_ISDIR;return ret;}try {final FileChannel c = f.getChannel(false);final ByteBuffer b = ByteBuffer.wrap(ret.reply.data);int total = 0;int read = 0;do {read = c.read(b, offset + total);total += read;} while (read > 0 && total < count);} catch (final SecurityException e) {ret.status = nfsstat.NFSERR_ACCES;} catch (final IOException e) {ret.status = nfsstat.NFSERR_IO;}} catch (final StaleHandleException e1) {ret.status = nfsstat.NFSERR_STALE;} catch (final FileNotFoundException e) {ret.status = nfsstat.NFSERR_NOENT;}return ret;}}	Yes
623	"public class A {@Testpublic void testAtmostOnce2() throws Exception {try {HBaseTestHelper.clearHBase();TestHBasePutOperator thop = new TestHBasePutOperator();thop.getStore().setTableName(""table1"");thop.getStore().setZookeeperQuorum(""127.0.0.1"");thop.getStore().setZookeeperClientPort(2181);HBaseTuple t1 = new HBaseTuple();t1.setColFamily(""colfam0"");t1.setColName(""street"");t1.setRow(""row1"");t1.setColValue(""ts"");HBaseTuple t2 = new HBaseTuple();t2.setColFamily(""colfam0"");t2.setColName(""city"");t2.setRow(""row2"");t2.setColValue(""tc"");thop.beginWindow(0);thop.input.process(t1);AttributeMap.DefaultAttributeMap attributeMap = new AttributeMap.DefaultAttributeMap();attributeMap.put(OperatorContext.PROCESSING_MODE, ProcessingMode.AT_MOST_ONCE);thop.setup(mockOperatorContext(0, attributeMap));thop.input.process(t2);thop.endWindow();HBaseTuple tuple;HBaseTuple tuple2;tuple = HBaseTestHelper.getHBaseTuple(""row1"", ""colfam0"", ""street"");tuple2 = HBaseTestHelper.getHBaseTuple(""row2"", ""colfam0"", ""city"");Assert.assertNull(""Tuple"", tuple);Assert.assertNotNull(""Tuple2"", tuple2);Assert.assertEquals(""Tuple row"", tuple2.getRow(), ""row2"");Assert.assertEquals(""Tuple column family"", tuple2.getColFamily(), ""colfam0"");Assert.assertEquals(""Tuple column name"", tuple2.getColName(), ""city"");Assert.assertEquals(""Tuple column value"", tuple2.getColValue(), ""tc"");} catch (IOException e) {}}}"	Yes
624	"public class A {@Overridepublic List<String> find(String database) {String hostListString = configManager.getConfig(buildKey(database));if (hostListString == null) {try {configManager.createConfig(ZK_PROJECT, buildKey(database), database);} catch (Throwable t) {} finally {hostListString = """";}}return parseHostList(hostListString);}}"	Yes
625	"public class A {@Overrideprotected void postProcessRequest(boolean isGet,HttpServletRequest httpReq,HttpServletResponse httpResp,String samlRequest,String relayState)throws IOException {try {SAMLBindings binding = isGet ? SAMLBindings.HTTP_REDIRECT : SAMLBindings.HTTP_POST;LogoutRequestDocument reqDoc = LogoutRequestDocument.Factory.parse(samlRequest);SAMLVerifiableElement verifiableMessage =binding == SAMLBindings.HTTP_REDIRECT? new RedirectedMessage(httpReq.getQueryString()): new XMLExpandedMessage(reqDoc, reqDoc.getLogoutRequest());SAMLMessage<LogoutRequestDocument> requestMessage =new SAMLMessage<>(verifiableMessage, relayState, binding, reqDoc);logoutProcessor.handleAsyncLogoutFromSAML(requestMessage, httpResp);} catch (XmlException e) {log.warn(""Got a request to the SAML Single Logout endpoint, ""+ ""with invalid request (XML is broken)"",e);httpResp.sendError(HttpServletResponse.SC_BAD_REQUEST, ""Invalid SLO request (XML is malformed)"");return;} catch (EopException e) {}}}"	No
626	"public class A {public void connect(CometdProducerConsumer prodcon) throws Exception {Server server = null;CometdEndpoint endpoint = prodcon.getEndpoint();String connectorKey =endpoint.getProtocol() + "":"" + endpoint.getUri().getHost() + "":"" + endpoint.getPort();synchronized (connectors) {ConnectorRef connectorRef = connectors.get(connectorKey);if (connectorRef == null) {ServerConnector connector;server = createServer();if (""cometds"".equals(endpoint.getProtocol())) {connector = getSslSocketConnector(server);} else {connector = new ServerConnector(server);}connector.setPort(endpoint.getPort());connector.setHost(endpoint.getUri().getHost());if (""localhost"".equalsIgnoreCase(endpoint.getUri().getHost())) {}server.addConnector(connector);CometDServlet servlet = createServletForConnector(server, connector, endpoint);connectorRef = new ConnectorRef(connector, servlet, server);server.start();connectors.put(connectorKey, connectorRef);} else {connectorRef.increment();}BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux();if (securityPolicy != null) {bayeux.setSecurityPolicy(securityPolicy);}if (extensions != null) {for (BayeuxServer.Extension extension : extensions) {bayeux.addExtension(extension);}}if (serverListeners != null) {for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {bayeux.addListener(serverListener);}}prodcon.setBayeux(bayeux);}}}"	Yes
627	"public class A {protected void execQueryUsingH2(String queryFolder, boolean needSort) throws Exception {List<File> sqlFiles = getFilesFromFolder(new File(queryFolder), "".sql"");for (File sqlFile : sqlFiles) {String queryName = StringUtils.split(sqlFile.getName(), '.')[0];String sql = getTextFromFile(sqlFile);logger.info(""Query Result from H2 - "" + queryName);executeQuery(newH2Connection(), queryName, sql, needSort);}}}"	Yes
628	public class A {protected void writeProtocolVersion() {appendBytes(msg.getProtocolVersion().getValue());}}	Yes
629	"public class A {private void fail(ResponseCallback callback, Throwable failure) {try {callback.onFailure(failure);} catch (Throwable throwable) {LOG.error(""[{}] Unexpected error while failing {}"", logPrefix, callback, throwable);}}}"	No
630	public class A {@Overridepublic Iterable<EntityBody> list(NeutralQuery neutralQuery) {listSecurityCheck(neutralQuery);return listImplementationAfterSecurityChecks(neutralQuery);}}	Yes
631	"public class A {@Overridepublic LoadState load(LevelData data, Path levelPath, String levelId) throws IOException {Path levelDatPath = levelPath.resolve(""level.dat"");Path levelDatOldPath = levelPath.resolve(""level.dat_old"");if (Files.notExists(levelDatPath) && Files.notExists(levelDatOldPath)) {return LoadState.NOT_FOUND;}try {loadData(data, levelDatPath);} catch (IOException e) {log.warn(""Unable to load level.dat file, attempting to load backup."");loadData(data, levelDatOldPath);}return LoadState.LOADED;}}"	No
632	"public class A {private void rebuildCache() {LOG.debug(""Rebuilding cache of capacity for each RS"");this.limitPerRS.clear();this.totalCapacity = 0;if (null == this.cluster) {return;}for (int i = 0; i < this.cluster.numServers; i++) {final ServerName sn = this.cluster.servers[i];final int capacity = this.findLimitForRS(sn);this.totalCapacity += capacity;}overallUsage = (double) this.cluster.numRegions / (double) this.totalCapacity;if (overallUsage >= 1) {}}}"	Yes
633	"public class A {public void close() throws OHException {try {entityManager.close();} catch (IllegalStateException e) {e.printStackTrace();throw new OHException(MessageBundle.getMessage(""angal.sql.problemsoccurredwiththesqlistruction""), e);}}}"	Yes
634	public class A {public static com.liferay.layout.page.template.model.LayoutPageTemplateEntrySoapaddLayoutPageTemplateEntry(long groupId,long layoutPageTemplateCollectionId,long classNameId,long classTypeId,String name,long masterLayoutPlid,int status,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.layout.page.template.model.LayoutPageTemplateEntry returnValue =LayoutPageTemplateEntryServiceUtil.addLayoutPageTemplateEntry(groupId,layoutPageTemplateCollectionId,classNameId,classTypeId,name,masterLayoutPlid,status,serviceContext);return com.liferay.layout.page.template.model.LayoutPageTemplateEntrySoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
635	"public class A {private @Nullable Map<String, Object> normalizeConfiguration(@Nullable Map<String, Object> properties, String serviceId) {if (properties == null || properties.isEmpty()) {return properties;}ConfigurableServiceDTO service = getServiceById(serviceId);if (service == null) {return properties;}URI uri;try {uri = new URI(service.configDescriptionURI);} catch (URISyntaxException e) {logger.warn(""Not a valid URI: {}"", service.configDescriptionURI);return properties;}ConfigDescription configDesc = configDescRegistry.getConfigDescription(uri);if (configDesc == null) {return properties;}return ConfigUtil.normalizeTypes(properties, List.of(configDesc));}}"	No
636	"public class A {@Test(enabled = false)public void testSqoopImportUsingDefaultCredential() throws Exception {TestContext context = new TestContext();Map<String, String> overlay = context.getUniqueOverlay();String filePath =TestContext.overlayParametersOverTemplate(TestContext.CLUSTER_TEMPLATE, overlay);context.setCluster(filePath);Assert.assertEquals(TestContext.executeWithURL(""entity -submit -type cluster -file "" + filePath), 0);String dsName = ""datasource-test-4"";overlay.put(DATASOURCE_NAME_KEY, dsName);filePath = TestContext.overlayParametersOverTemplate(TestContext.DATASOURCE_TEMPLATE4, overlay);Assert.assertEquals(TestContext.executeWithURL(""entity -submit -type datasource -file "" + filePath), 0);filePath = TestContext.overlayParametersOverTemplate(TestContext.FEED_TEMPLATE3, overlay);LOG.info(""Submit import feed with datasource {} via entity -submitAndSchedule -type feed -file {}"",dsName,filePath);Assert.assertEquals(0, TestContext.executeWithURL(""entity -submitAndSchedule -type feed -file "" + filePath));}}"	Yes
637	"public class A {@Overridepublic void onFailure(Throwable arg0) {LOG.error(""Failure reading ActionDefinition {}"", id.getValue());}}"	No
638	public class A {private void updateSelectedObject(OWLObject selObj) {selectedObject = selObj;updateLastSelection();fireSelectionChanged();}}	Yes
639	"public class A {protected void cleanupOrigin(Repository repository) {try {Git git =((JGitPathImpl) pathUtil.convert(repository.getDefaultBranch().get().getPath())).getFileSystem().getGit();new RemoveRemote(git, ""origin"", REMOTE_ORIGIN_REF).execute();} catch (GitException e) {log.warn(""Error cleaning up origin for repository '{}': {}"", repository.getAlias(), e);}}}"	No
640	"public class A {@Overridepublic HarvestStatus getStatusInfo(HarvestStatusQuery query) {PreparedStatement s = null;Connection c = HarvestDBConnection.get();try {long totalRowsCount = 0;final HarvestStatusQueryBuilder harvestStatusQueryBuilder = buildSqlQuery(query, true);log.debug(""Unpopulated query is {}."", harvestStatusQueryBuilder);s = harvestStatusQueryBuilder.getPopulatedStatement(c);log.debug(""Query is {}."", s);ResultSet res = s.executeQuery();res.next();totalRowsCount = res.getLong(1);s = buildSqlQuery(query, false).getPopulatedStatement(c);res = s.executeQuery();List<JobStatusInfo> jobs = makeJobStatusInfoListFromResultset(res);return new HarvestStatus(totalRowsCount, jobs);} catch (SQLException e) {String message =""SQL error asking for job status list in database""+ ""\n""+ ExceptionUtils.getSQLExceptionCause(e);throw new IOFailure(message, e);} finally {HarvestDBConnection.release(c);}}}"	Yes
641	"public class A {public String fetchContent(URL url, boolean useProxy, String userKey, String passwordKey)throws DownloadFailedException, TooManyRequestsException, ResourceNotFoundException {InputStream in = null;try (HttpResourceConnection conn =new HttpResourceConnection(settings, useProxy, userKey, passwordKey);ByteArrayOutputStream out = new ByteArrayOutputStream()) {in = conn.fetch(url);IOUtils.copy(in, out);return out.toString(UTF8);} catch (IOException ex) {final String msg =format(""Download failed, unable to retrieve '%s'; %s"", url.toString(), ex.getMessage());throw new DownloadFailedException(msg, ex);} finally {if (in != null) {try {in.close();} catch (IOException ex) {}}}}}"	Yes
642	"public class A {@Overridepublic void execute() {IBaseDao<Configuration, Serializable> confDao = getDaoFactory().getDAO(Configuration.class);List<Configuration> configurationList = confDao.findAll();for (Configuration configurationCurrent : configurationList) {try {CnATreeElement personConfiguration = (CnATreeElement) configurationCurrent.getPerson();if (personConfiguration != null && personConfiguration.getUuid().equals(person.getUuid())) {configuration = configurationCurrent;break;}} catch (Exception e) {log.error(""Error"", e);}}}}"	No
643	"public class A {@Override@EventListenerpublic void onSave(EntityBatchSaveEvent event) {if (isEnabled()) {Stopwatch stopwatch = Stopwatch.createStarted();timer.record(() -> jdbcTemplate.execute(SQL, callback(topicMessages)));log.info(""Finished notifying {} messages in {}"", topicMessages.size(), stopwatch);}}}"	No
644	public class A {@AfterClasspublic static void afterTest() {try {stopKafkaServer();stopZookeeper();} catch (Exception ex) {}}}	Yes
645	public class A {public boolean hasPerfectConfiguration(IAtom atom, IAtomContainer ac) throws CDKException {double bondOrderSum = ac.getBondOrderSum(atom);IBond.Order maxBondOrder = ac.getMaximumBondOrder(atom);IAtomType[] atomTypes = getAtomTypeFactory(atom.getBuilder()).getAtomTypes(atom.getSymbol());if (atomTypes.length == 0) return true;try {} catch (Exception exc) {}for (int f = 0; f < atomTypes.length; f++) {if (bondOrderSum == atomTypes[f].getBondOrderSum()&& maxBondOrder == atomTypes[f].getMaxBondOrder()) {try {} catch (Exception exc) {}return true;}}try {} catch (Exception exc) {}return false;}}	Yes
646	public class A {public void run() {try {while (!stopped_) {select();processAcceptedConnections();processInterestChanges();}for (SelectionKey selectionKey : selector.keys()) {cleanupSelectionKey(selectionKey);}} catch (Throwable t) {} finally {TThreadedSelectorServer.this.stop();}}}	Yes
647	"public class A {public static int getGroupEntriesCount(HttpPrincipal httpPrincipal, long groupId, java.util.Date displayDate, int status) {try {MethodKey methodKey =new MethodKey(BlogsEntryServiceUtil.class,""getGroupEntriesCount"",_getGroupEntriesCountParameterTypes14);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, displayDate, status);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {throw new com.liferay.portal.kernel.exception.SystemException(exception);}return ((Integer) returnObj).intValue();} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
648	"public class A {public String build() {HiveClientMode clientMode =HiveClientMode.valueOf(kylinConfig.getHiveClientMode().toUpperCase(Locale.ROOT));String beelineShell = kylinConfig.getHiveBeelineShell();String beelineParams = kylinConfig.getHiveBeelineParams();if (kylinConfig.getEnableSparkSqlForTableOps()) {clientMode = HiveClientMode.BEELINE;beelineShell = kylinConfig.getSparkSqlBeelineShell();beelineParams = kylinConfig.getSparkSqlBeelineParams();if (StringUtils.isBlank(beelineShell)) {throw new IllegalStateException(""Missing config 'kylin.source.hive.sparksql-beeline-shell', please check""+ "" kylin.properties"");}}StringBuilder buf = new StringBuilder();switch (clientMode) {case CLI:buf.append(""hive -e \"""");for (String statement : statements) {buf.append(statement.replaceAll(""`"", ""\\\\`"")).append(""\n"");}buf.append(""\"""");buf.append(parseProps());break;case BEELINE:String tmpHqlPath = null;StringBuilder hql = new StringBuilder();try {tmpHqlPath = ""/tmp/"" + UUID.randomUUID().toString() + "".hql"";for (String statement : statements) {hql.append(statement.replaceAll(""`"", ""\\\\`""));hql.append(""\n"");}String createFileCmd =String.format(Locale.ROOT, CREATE_HQL_TMP_FILE_TEMPLATE, tmpHqlPath, hql);buf.append(createFileCmd);buf.append(""\n"");buf.append(beelineShell);buf.append("" "");buf.append(beelineParams);buf.append(parseProps());buf.append("" -f "");buf.append(tmpHqlPath);buf.append("";ret_code=$?;rm -f "");buf.append(tmpHqlPath);buf.append("";exit $ret_code"");} finally {if (tmpHqlPath != null && logger.isDebugEnabled()) {}}break;default:throw new IllegalArgumentException(""Hive client cannot be recognized: "" + clientMode);}return buf.toString();}}"	Yes
649	"public class A {@Overridepublic void atBeforeInvoke(Class<?> clazz, String invokeInfo, Object target) {ClassLoader classLoader = clazz.getClassLoader();String[] info = splitInvokeInfo(invokeInfo);String owner = info[0];String methodName = info[1];String methodDesc = info[2];List<AdviceListener> listeners =AdviceListenerManager.queryTraceAdviceListeners(classLoader, clazz.getName(), owner, methodName, methodDesc);if (listeners != null) {for (AdviceListener adviceListener : listeners) {try {if (skipAdviceListener(adviceListener)) {continue;}final InvokeTraceable listener = (InvokeTraceable) adviceListener;listener.invokeBeforeTracing(classLoader, owner, methodName, methodDesc, Integer.parseInt(info[3]));} catch (Throwable e) {logger.error(""class: {}, invokeInfo: {}"", clazz.getName(), invokeInfo, e);}}}}}"	No
650	public class A {public void sleep() throws InterruptedException {long sleepMs = sleepPerConnectionMillis * getConnections();Thread.sleep(sleepMs);}}	Yes
651	"public class A {private static FunctionInvocationWrapper locateFunction(FunctionCatalog functionCatalog, MediaType contentType) {String handlerName = System.getenv(""DEFAULT_HANDLER"");FunctionInvocationWrapper function =functionCatalog.lookup(handlerName, contentType.toString());if (function == null) {handlerName = System.getenv(""_HANDLER"");function = functionCatalog.lookup(handlerName, contentType.toString());}if (function == null) {function = functionCatalog.lookup(null, contentType.toString());}if (function == null) {handlerName = System.getenv(""spring.cloud.function.definition"");function = functionCatalog.lookup(handlerName, contentType.toString());}if (function == null) {function = functionCatalog.lookup(null, contentType.toString());}Assert.notNull(function,""Failed to locate function. Tried locating default function, function by 'DEFAULT_HANDLER',""+ "" '_HANDLER' env variable as well as'spring.cloud.function.definition'. Functions""+ "" available in catalog are: ""+ functionCatalog.getNames(null));if (function != null && logger.isInfoEnabled()) {}return function;}}"	Yes
652	"public class A {@Overridepublic QueryResult fetchResultSet(LensSessionHandle sessionHandle, QueryHandle queryHandle, long startIndex, int fetchSize)throws LensException {try {log.info(""FetchResultSet: session:{} query:{}"", sessionHandle, queryHandle);acquire(sessionHandle);return getResultset(queryHandle).toQueryResult();} finally {release(sessionHandle);}}}"	No
653	public class A {@Overridepublic void save(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy) {try {final XWikiContext context = this.xcontextProvider.get();final BaseObject xobject =patient.getXDocument().getXObject(Patient.CLASS_REFERENCE, true, context);final PatientData<List<VocabularyTerm>> data = patient.getData(getName());if (data == null) {if (PatientWritePolicy.REPLACE.equals(policy)) {getProperties().forEach(p -> xobject.set(p, null, context));}} else {if (!data.isNamed()) {return;}saveQualifiersData(patient, xobject, data, policy, context);}} catch (final Exception ex) {}}}	Yes
654	"public class A {private Field accessTaskResultField() {Field field = null;try {field = TaskRunner.class.getDeclaredField(""result"");field.setAccessible(true);} catch (Exception e) {LOG.fatal(""Can't access to TaskResult at "" + TaskRunner.class.getName() + ""!"");throw new RuntimeException(""Incompatible Hive API found!"", e);}return field;}}"	No
655	"public class A {private WebImage _getWebImage(JSONObject jsonObject) {try {String uuid = jsonObject.getString(""uuid"");long groupId = jsonObject.getLong(""groupId"");if (Validator.isNull(uuid) && (groupId == 0)) {return null;}FileEntry fileEntry = _dlAppService.getFileEntryByUuidAndGroupId(uuid, groupId);WebImage webImage =new WebImage(_dlURLHelper.getDownloadURL(fileEntry, fileEntry.getFileVersion(), null, StringPool.BLANK),new InfoItemReference(FileEntry.class.getName(),new ClassPKInfoItemIdentifier(fileEntry.getFileEntryId())));webImage.setAlt(jsonObject.getString(""alt""));return webImage;} catch (Exception exception) {if (_log.isDebugEnabled()) {_log.debug(exception, exception);}}return null;}}"	No
656	"public class A {@Overridepublic void stop() {try {if (connection != null) {connection.close();log.info(""jdbc sink task connection is closed."");}} catch (Throwable e) {}}}"	Yes
657	public class A {public JSONObject update(JSONObject event, String version) {if (this.version != null && versionComparator.compare(this.version, version) > 0) {return event;} else {this.version = version;}boolean validForCurrentNode;try {validForCurrentNode =Arrays.binarySearch(senseiCore.getPartitions(), shardingStrategy.caculateShard(maxPartition, event))>= 0;} catch (JSONException e) {throw new RuntimeException(e);}for (PluggableSearchEngine pluggableSearchEngine : pluggableEngines) {if (pluggableSearchEngine.acceptEventsForAllPartitions() || validForCurrentNode) {try {event = pluggableSearchEngine.acceptEvent(event, version);} catch (Exception ex) {}}}return event;}}	Yes
658	"public class A {protected int writeResponseXML(WebDAVRequest webDAVRequest, Set<QName> props) throws Exception {WebDAVStorage storage = webDAVRequest.getWebDAVStorage();Document document = SAXReaderUtil.createDocument();Element multistatusElement = SAXReaderUtil.createElement(createQName(""multistatus""));document.setRootElement(multistatusElement);Resource resource = storage.getResource(webDAVRequest);if (resource != null) {long depth = WebDAVUtil.getDepth(webDAVRequest.getHttpServletRequest());addResponse(storage, webDAVRequest, resource, props, multistatusElement, depth);String xml = document.formattedString(StringPool.FOUR_SPACES);if (_log.isDebugEnabled()) {_log.debug(""Response XML\n"" + xml);}int status = WebDAVUtil.SC_MULTI_STATUS;HttpServletResponse httpServletResponse = webDAVRequest.getHttpServletResponse();httpServletResponse.setContentType(ContentTypes.TEXT_XML_UTF8);httpServletResponse.setStatus(status);try {ServletResponseUtil.write(httpServletResponse, xml);httpServletResponse.flushBuffer();} catch (Exception exception) {if (_log.isWarnEnabled()) {_log.warn(exception, exception);}}return status;}if (_log.isDebugEnabled()) {_log.debug(""No resource found for "" + storage.getRootPath() + webDAVRequest.getPath());}return HttpServletResponse.SC_NOT_FOUND;}}"	No
659	"public class A {protected void updateNestedPortletLayoutTypeSettings() throws Exception {try (PreparedStatement preparedStatement =connection.prepareStatement(""select plid, typeSettings from Layout where typeSettings ""+ ""LIKE '%nested-column-ids%'"");ResultSet resultSet = preparedStatement.executeQuery()) {while (resultSet.next()) {long plid = resultSet.getLong(""plid"");String typeSettings = resultSet.getString(""typeSettings"");String oldPortletId = ""_118_INSTANCE_"";String newPortletId = ""_"" + NestedPortletsPortletKeys.NESTED_PORTLETS + ""_INSTANCE_"";String newTypeSettings = StringUtil.replace(typeSettings, oldPortletId, newPortletId);updateLayout(plid, newTypeSettings);}} catch (Exception exception) {if (_log.isWarnEnabled()) {}}}}"	Yes
660	public class A {@Overridepublic boolean isSameFile(FileObject a, FileObject b) {return a.equals(b);}}	Yes
661	"public class A {@Overridepublic void send(final String command, final ProgressListener listener, final TranscriptListener transcript)throws BackgroundException {if (log.isDebugEnabled()) {log.debug(String.format(""Send command %s"", command));}final Session sess;try {sess = session.getClient().startSession();} catch (IOException e) {throw new SFTPExceptionMappingService().map(e);}try {listener.message(command);final Session.Command exec = sess.exec(command);final BufferedReader stdoutReader =new BufferedReader(new InputStreamReader(new StreamGobbler(exec.getInputStream()),Charset.forName(session.getHost().getEncoding())));final BufferedReader stderrReader =new BufferedReader(new InputStreamReader(new StreamGobbler(exec.getErrorStream()),Charset.forName(session.getHost().getEncoding())));try {while (true) {final String line = stdoutReader.readLine();if (null == line) {break;}transcript.log(TranscriptListener.Type.response, line);}final StringBuilder error = new StringBuilder();while (true) {String line = stderrReader.readLine();if (null == line) {break;}transcript.log(TranscriptListener.Type.response, line);if (StringUtils.isNotBlank(error.toString())) {error.append("" "");}error.append(line).append(""."");}if (StringUtils.isNotBlank(error.toString())) {throw new InteroperabilityException(error.toString());} else {if (log.isInfoEnabled()) {}}} finally {IOUtils.closeQuietly(stdoutReader);IOUtils.closeQuietly(stderrReader);}} catch (IOException e) {throw new DefaultIOExceptionMappingService().map(e);}}}"	Yes
662	public class A {protected Folder createFolder(long userId, long groupId, long folderId, String name)throws PortalException {Folder folder = null;try {folder = dlAppLocalService.getFolder(groupId, folderId, name);} catch (NoSuchFolderException noSuchFolderException) {if (_log.isWarnEnabled()) {_log.warn(noSuchFolderException, noSuchFolderException);}folder =dlAppLocalService.addFolder(userId, groupId, folderId, name, StringPool.BLANK, new ServiceContext());}_folderIds.add(folder.getFolderId());return folder;}}	No
663	"public class A {@Overridepublic void write(int address, int value) {PinDefinition pinDef = getPin(address);if (pinDef.getMode() == ""OUTPUT"") {if (value == 0) {writeRegister = directionRegister &= ~(1 << address);} else {writeRegister = directionRegister |= (1 << address);}} else {}writeRegister(writeRegister);pinDef.setValue(value);}}"	Yes
664	"public class A {void cleanupTempResource(BigQueryOptions bqOptions, String stepUuid) throws Exception {Optional<String> queryTempDatasetOpt = Optional.ofNullable(tempDatasetId);TableReference tableToRemove =createTempTableReference(bqOptions.getProject(),BigQueryResourceNaming.createJobIdPrefix(bqOptions.getJobName(), stepUuid, JobType.QUERY),queryTempDatasetOpt);BigQueryServices.DatasetService tableService = bqServices.getDatasetService(bqOptions);tableService.deleteTable(tableToRemove);boolean datasetCreatedByBeam = !queryTempDatasetOpt.isPresent();if (datasetCreatedByBeam) {LOG.info(""Deleting temporary dataset with query results {}"", tableToRemove.getDatasetId());tableService.deleteDataset(tableToRemove.getProjectId(), tableToRemove.getDatasetId());}}}"	Yes
665	"public class A {@Overridepublic boolean isEnabled(long companyId) {try {OpenIdConnectConfiguration openIdConfiguration =_configurationProvider.getConfiguration(OpenIdConnectConfiguration.class,new CompanyServiceSettingsLocator(companyId, OpenIdConnectConstants.SERVICE_NAME));return openIdConfiguration.enabled();} catch (ConfigurationException configurationException) {_log.error(StringBundler.concat(""Unable to get OpenId configuration for company "",companyId,"": "",configurationException.getMessage()),configurationException);}return false;}}"	No
666	"public class A {@Overridepublic void run() {if (!initialized.get()) {throw new IllegalStateException(""SimpleTaskScheduler initialization"" + "" is not yet finished!"");}while (initialized.get()) {Queue<JobInProgress> queue = queueManager.get().findQueue(WAIT_QUEUE);if (null == queue) {throw new NullPointerException(WAIT_QUEUE + "" does not exist."");}JobInProgress job = queue.removeJob();queueManager.get().addJob(PROCESSING_QUEUE, job);schedule(job);}}}"	Yes
667	public class A {private void runCli(final CliArguments arguments, final DataCleanerConfiguration configuration) {int exitCode = 0;try (CliRunner runner = new CliRunner(arguments)) {runner.run(configuration);} catch (final Throwable e) {exitCode = 1;} finally {exitCommandLine(configuration, exitCode);}}}	Yes
668	public class A {@Overridepublic boolean verifyJarSignature(String certificateDirectory, Path jarFilePath) {Set<Certificate> ordinaryCertificates =readCertificates(certificateDirectory, certificateSuffix, certificatePrefixes);for (Certificate certificate : ordinaryCertificates) {try {verifyJarSignature(certificate, jarFilePath);return true;} catch (SecurityException | IOException e) {}}return false;}}	Yes
669	"public class A {@Overridepublic void sessionRemoved(ServerSession session, boolean timedout) {if (LOG.isDebugEnabled()) {LOG.debug(""sessionRemoved: ""+ session.getId()+ "" timedout:""+ timedout+ "" channels: ""+ channelsAsString(session.getSubscriptions()));}}}"	No
670	public class A {@Overridepublic void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {writeJsonResponse(ctx, INTERNAL_SERVER_ERROR, INTERNAL_SERVER_ERROR_RESPONSE);}}	Yes
671	"public class A {private void startDownload() {logger.trace(""starting modem database download"");port.clearModemDB();lastMessageTimestamp = System.currentTimeMillis();messageCount = 0;getFirstLinkRecord();}}"	No
672	"public class A {@Overrideprotected void doStartUp() throws Exception {super.doStartUp();String backfillComplete =TransactionRunners.run(transactionRunner,(TxCallable<String>)context ->AppMetadataStore.create(context).retrieveSubscriberState(getTopicId().getTopic(), BACKFILL_SUBSCRIBER_NAME));if (backfillComplete != null) {LOG.debug(""Plugin metadata back-fill was completed during a previous startup, skipping back-fill""+ "" this time."");didBackfill = true;}}}"	No
673	"public class A {void logIfDeprecatedValue(Configurable obj, ConfigKey<?> key) {if (deprecatedValues.isEmpty()) return;if (val.isPresent()) {LOG.warn(""Ignoring deprecated config value(s) on ""+ obj+ "" because contains value for ""+ ""'""+ key.getName()+ ""', other deprecated name(s) present were: ""+ deprecatedValues.keySet());} else if (deprecatedValues.size() == 1) {LOG.warn(""Using deprecated config value on ""+ obj+ "", should use '""+ key.getName()+ ""', but used ""+ ""'""+ Iterables.getOnlyElement(deprecatedValues.keySet())+ ""'"");} else {LOG.warn(""Using deprecated config value on ""+ obj+ "", should use '""+ key.getName()+ ""', but used ""+ ""'""+ Iterables.get(deprecatedValues.keySet(), 1)+ ""' and ignored values present for other ""+ ""deprecated name(s) ""+ Iterables.skip(deprecatedValues.keySet(), 1));}}}"	No
674	public class A {private void copyURLToFile(final String address, final java.io.File fileOnDisk)throws IOException {try {HttpHelper.streamURLToFile(address, fileOnDisk);} catch (FrameworkException ex) {}}}	Yes
675	"public class A {public void writeBucket(NodeId nodeId, GroupId groupId, Bucket bucket) {Preconditions.checkNotNull(nodeId);Preconditions.checkNotNull(groupId);Preconditions.checkNotNull(bucket);GroupBuilder gb = groupByIid.get(FlowUtils.createGroupPath(nodeId, groupId));if (gb != null) {gb.getBuckets().getBucket().add(bucket);} else {LOG.error(""Group {} on node {} does not exist"", groupId, nodeId);throw new IllegalStateException();}}}"	No
676	"public class A {@Overridepublic void updateFromPageModelChanged(PageModelChangedEvent event) {try {if (event.getOperationCode() != PageModelChangedEvent.UPDATE_OPERATION_CODE) {return;}PageModel model = event.getPageModel();String pageModelCode = (null != model) ? model.getCode() : null;if (null != pageModelCode) {List<?> utilizers = this.getPageModelUtilizers(pageModelCode);if (null != utilizers && utilizers.size() > 0) {this.init();}}} catch (Throwable t) {_logger.error(""Error during refres pages"", t);}}}"	No
677	"public class A {public void setSortByRelevanceFeatureProperty(String relevanceFeatureProperty) {LOGGER.debug(""Setting sortByRelevanceFeatureProperty to: {}"", relevanceFeatureProperty);this.sortByRelevanceFeatureProperty = relevanceFeatureProperty;}}"	No
678	public class A {@Overridepublic OAuth2Application remove(Serializable primaryKey) throws NoSuchOAuth2ApplicationException {Session session = null;try {session = openSession();OAuth2Application oAuth2Application =(OAuth2Application) session.get(OAuth2ApplicationImpl.class, primaryKey);if (oAuth2Application == null) {if (_log.isDebugEnabled()) {_log.debug(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}throw new NoSuchOAuth2ApplicationException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return remove(oAuth2Application);} catch (NoSuchOAuth2ApplicationException noSuchEntityException) {throw noSuchEntityException;} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}}	No
679	"public class A {private void doActions(Collection<Long> ids, DataTypeInfo dataType) {long start = System.nanoTime();List<FeatureAction> featureActions = myRegistry.getEnabled(dataType.getTypeKey());if (!featureActions.isEmpty()) {DataTypeStyleConfig style =myPrefs.getPreferences(StyleManagerController.class).getJAXBObject(StyleManagerConfig.class, ""styleManagerConfig"", new StyleManagerConfig()).getDataTypeStyleByTypeKey(dataType.getTypeKey());synchronized (myTypeKeysAndStyles) {myTypeKeysAndStyles.put(dataType.getTypeKey(), XMLUtilities.jaxbClone(style, DataTypeStyleConfig.class));}Aggregator.process(ids, 100_000, idSubset -> applyActions(featureActions, idSubset, dataType));if (LOGGER.isDebugEnabled()) {long delta = TimeUnit.NANOSECONDS.toMicros(System.nanoTime() - start);LOGGER.debug(""Applied feature actions to "" + ids.size() + "" elements in "" + delta + "" Î¼s"");}}}}"	No
680	"public class A {private boolean shouldSkipUnmanagement(Location loc) {if (loc == null) {log.warn("""" + this + "" call to unmanage null location; skipping"",new IllegalStateException(""source of null unmanagement call to "" + this));return true;}if (!isManaged(loc)) {return true;}return false;}}"	Yes
681	"public class A {public void persist(StgMbZielobjSubtypTxt transientInstance) {log.debug(""persisting StgMbZielobjSubtypTxt instance"");try {sessionFactory.getCurrentSession().persist(transientInstance);} catch (RuntimeException re) {throw re;}}}"	Yes
682	"public class A {private void setClientCache(ClientCache clientCache) {DistributionConfig config;ClusterManagementServiceInfo cmsInfo;List<InetSocketAddress> locators = clientCache.getDefaultPool().getLocators();if (locators.size() == 0) {throw new IllegalStateException(""the client needs to have a client pool connected with a locator."");}config = ((GemFireCacheImpl) clientCache).getSystem().getConfig();TcpClient client =new TcpClient(SocketCreatorFactory.setDistributionConfig(config).getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer(),TcpSocketFactory.DEFAULT);cmsInfo = null;for (InetSocketAddress locator : locators) {try {cmsInfo =(ClusterManagementServiceInfo)client.requestToServer(new HostAndPort(locator.getHostString(), locator.getPort()),new ClusterManagementServiceInfoRequest(),1000,true);if (cmsInfo.isRunning()) {break;}} catch (Exception e) {}}if (cmsInfo == null || !cmsInfo.isRunning()) {throw new IllegalStateException(""Unable to discover a locator that has ClusterManagementService running."");}configureBuilder(config, cmsInfo);}}"	Yes
683	"public class A {@Overridepublic boolean login() throws LoginException {tokenProvider = getTokenProvider();if (tokenProvider == null) {return false;}Credentials credentials = getCredentials();if (credentials instanceof TokenCredentials) {TokenCredentials tc = (TokenCredentials) credentials;TokenAuthentication authentication =new TokenAuthentication(tokenProvider, getLoginModuleMonitor());if (authentication.authenticate(tc)) {tokenCredentials = tc;tokenInfo = authentication.getTokenInfo();principal = authentication.getUserPrincipal();log.debug(""Login: adding login name to shared state."");sharedState.put(SHARED_KEY_LOGIN_NAME, tokenInfo.getUserId());return true;}}return false;}}"	No
684	"public class A {@Overridepublic void apply(IgniteInternalFuture<AffinityTopologyVersion> fut) {if (cctx.kernalContext().isStopping()) return;if (cacheChangeFailureMsgSent) return;FinishState finishState0;synchronized (mux) {finishState0 = finishState;}if (finishState0 == null) {assert (firstDiscoEvt.type() == EVT_NODE_JOINED && firstDiscoEvt.eventNode().isClient()): GridDhtPartitionsExchangeFuture.this;ClusterNode node = cctx.node(nodeId);if (node == null) {if (log.isDebugEnabled()) {log.debug(""No node found for nodeId: ""+ nodeId+ "", handling of single message will be stopped: ""+ msg);}return;}GridDhtPartitionsFullMessage msg =createPartitionsMessage(true, node.version().compareToIgnoreTimestamp(PARTIAL_COUNTERS_MAP_SINCE) >= 0);msg.rebalanced(rebalanced());finishState0 = new FinishState(cctx.localNodeId(), initialVersion(), msg);}sendAllPartitionsToNode(finishState0, msg, nodeId);}}"	No
685	"public class A {private void validateTokensParent(@NotNull Tree tokensParent) throws CommitFailedException {verifyHierarchy(tokensParent.getPath());Tree userTree = tokensParent.getParent();if (!UserConstants.NT_REP_USER.equals(TreeUtil.getPrimaryTypeName(userTree))) {throw constraintViolation(68, ""Invalid location of .tokens node."");}String nt = TreeUtil.getPrimaryTypeName(tokensParent);if (!TOKENS_NT_NAME.equals(nt)) {log.debug(""Unexpected node type of .tokens node {}."", nt);}}}"	No
686	"public class A {public void persist(StgMbBauMasGef transientInstance) {log.debug(""persisting StgMbBauMasGef instance"");try {sessionFactory.getCurrentSession().persist(transientInstance);log.debug(""persist successful"");} catch (RuntimeException re) {log.error(""persist failed"", re);throw re;}}}"	No
687	"public class A {@Overridepublic Class<?>[] classSearch(String packageName, boolean subpackages) throws SystemException {try {String resourceName = packageNameToResourceName(packageName);URL url = classLoader.getResource(resourceName);if (url == null) {JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();JavaFileManager fm =compiler.getStandardFileManager(new DiagnosticCollector<JavaFileObject>(), null, null);Set<JavaFileObject.Kind> kinds =new HashSet<JavaFileObject.Kind>() {{add(JavaFileObject.Kind.CLASS);}};Iterable<JavaFileObject> iterable;List<Class<?>> classes = new ArrayList<>();iterable = fm.list(StandardLocation.PLATFORM_CLASS_PATH, packageName, kinds, subpackages);for (JavaFileObject javaFileObject : iterable) {if (javaFileObject.getKind() == JavaFileObject.Kind.CLASS) {String name = javaFileObject.getName();int start = 0;if (name.lastIndexOf("".jar/"") != -1) {start = name.lastIndexOf("".jar/"") + "".jar/"".length();}String clname = name.substring(start);if (clname.indexOf("".class"") != -1) {int end = clname.indexOf("".class"") + "".class"".length();clname = clname.substring(0, end);}clname = resourceNameToClassName(clname);log.info(clname);classes.add(Class.forName(clname));}}return classes.toArray(new Class<?>[0]);} else {return findClasses(packageName).toArray(new Class<?>[0]);}} catch (Exception e) {throw new SystemException(e);}}}"	No
688	"public class A {public long deserialize(DataTree dt, Map<Long, Integer> sessions) throws IOException {List<File> snapList = findNValidSnapshots(100);if (snapList.size() == 0) {return -1L;}File snap = null;long snapZxid = -1;boolean foundValid = false;for (int i = 0, snapListSize = snapList.size(); i < snapListSize; i++) {snap = snapList.get(i);LOG.info(""Reading snapshot {}"", snap);snapZxid = Util.getZxidFromName(snap.getName(), SNAPSHOT_FILE_PREFIX);try (CheckedInputStream snapIS = SnapStream.getInputStream(snap)) {InputArchive ia = BinaryInputArchive.getArchive(snapIS);deserialize(dt, sessions, ia);SnapStream.checkSealIntegrity(snapIS, ia);if (dt.deserializeZxidDigest(ia, snapZxid)) {SnapStream.checkSealIntegrity(snapIS, ia);}foundValid = true;break;} catch (IOException e) {LOG.warn(""problem reading snap file {}"", snap, e);}}if (!foundValid) {throw new IOException(""Not able to find valid snapshots in "" + snapDir);}dt.lastProcessedZxid = snapZxid;lastSnapshotInfo = new SnapshotInfo(dt.lastProcessedZxid, snap.lastModified() / 1000);if (dt.getDigestFromLoadedSnapshot() != null) {dt.compareSnapshotDigests(dt.lastProcessedZxid);}return dt.lastProcessedZxid;}}"	No
689	"public class A {@Overridepublic void commit() throws SQLException {if (connection != null && !connection.getAutoCommit()) {if (log.isDebugEnabled()) {log.debug(""Committing JDBC Connection ["" + connection + ""]"");}connection.commit();}}}"	No
690	"public class A {protected void dump() {log.info(""Administration: Database dump."");checkAccess();String ts = DateHelper.getTimestampAsFilenameSuffix(new Date());String filename = ""projectforgedump_"" + ts + "".xml.gz"";ByteArrayOutputStream out = new ByteArrayOutputStream();try (GZIPOutputStream gzout = new GZIPOutputStream(out)) {jpaXmlDumpService.dumpToXml(emf, gzout);} catch (IOException ex) {throw new RuntimeIOException(ex);}DownloadUtils.setDownloadTarget(out.toByteArray(), filename);}}"	No
691	public class A {@Overridepublic void process(Exchange exchange) throws Exception {Message in = exchange.getIn();PullRequest pullRequest = (PullRequest) in.getBody();User pullRequestUser = pullRequest.getUser();pullRequest.getTitle();pullRequest.getHtmlUrl();pullRequest.getUser().getLogin();pullRequest.getUser().getHtmlUrl();}}	Yes
692	"public class A {public List<Issue> getIssues(String project, List<String> labels, String reporter, long lookBackMillis) {List<Issue> issues = new ArrayList<>();StringBuilder jiraQuery = new StringBuilder();jiraQuery.append(""project="").append(project);jiraQuery.append("" and "").append(""reporter IN (\"""").append(reporter).append(""\"")"");jiraQuery.append("" and "").append(buildQueryOnLabels(labels));jiraQuery.append("" and "").append(buildQueryOnCreatedBy(lookBackMillis));Iterable<Issue> jiraIssuesIt =restClient.getSearchClient().searchJql(jiraQuery.toString()).claim().getIssues();jiraIssuesIt.forEach(issues::add);return issues;}}"	Yes
693	"public class A {@Overridepublic ActionLogRecordDto removeComment(int recordId, int commentId, UserDetails attribute) {try {if (null == this.getActionLogManager().getActionRecord(recordId)) {logger.warn(""no record found with id {}"", recordId);throw new ResourceNotFoundException(ActivityStreamValidator.ERRCODE_RECORD_NOT_FOUND,""actionLogRecord"",String.valueOf(recordId));}this.getSocialActivityStreamManager().deleteActionCommentRecord(commentId, recordId);ActionLogRecordDto dto =this.getDtoBuilder().toDto(this.getActionLogManager().getActionRecord(recordId),this.getSocialActivityStreamManager().getActionLikeRecords(recordId),this.getSocialActivityStreamManager().getActionCommentRecords(recordId));return dto;} catch (Throwable t) {throw new RestServerError(""error in remove comment"", t);}}}"	Yes
694	"public class A {@Overridepublic InputStream retrieveBlock(String key, long byteRangeStart, long byteRangeEnd)throws IOException {try {GetObjectRequest request = new GetObjectRequest(this.bucketName, key);request.setRange(byteRangeStart, byteRangeEnd);COSObject cosObject = (COSObject) this.callCOSClientWithRetry(request);return cosObject.getObjectContent();} catch (CosServiceException e) {String errMsg =String.format(""Retrieving key [%s] with byteRangeStart [%d] occurs ""+ ""an CosServiceException: [%s]."",key, byteRangeStart, e.toString());LOG.error(errMsg);handleException(new Exception(errMsg), key);return null;} catch (CosClientException e) {String errMsg =String.format(""Retrieving key [%s] with byteRangeStart [%d] "" + ""occurs an exception: [%s]."",key, byteRangeStart, e.toString());LOG.error(""Retrieving COS key: [{}] with byteRangeStart: [{}] "" + ""occurs an exception: [{}]."",key,byteRangeStart,e);handleException(new Exception(errMsg), key);}return null;}}"	No
695	public class A {private Decision checkAppLevelThrottled(String throttleKey, String tier) {Decision decision = dataHolder.isThrottled(throttleKey);return decision;}}	Yes
696	"public class A {@Overridepublic void onNext(final SuspendEvent suspendEvent) {LOG.info(""NoopTask.TaskSuspendHandler.send() invoked."");NoopTask.this.stopTask();}}"	No
697	public class A {@Overridepublic void actionDone() {}}	Yes
698	"public class A {@Overrideprotected boolean operateOnTx(TXId txId, ClusterDistributionManager dm)throws RemoteOperationException {InternalCache cache = dm.getCache();TXManagerImpl txMgr = cache.getTXMgr();if (logger.isDebugEnabled()) {}final TXStateProxy txState = txMgr.getTXState();TXCommitMessage commitMessage = txMgr.getRecentlyCompletedMessage(txId);try {if (commitMessage != null) {if (logger.isDebugEnabled()) {logger.debug(""TX: found a previously committed transaction:{}"", txId);}if (txMgr.isExceptionToken(commitMessage)) {throw txMgr.getExceptionForToken(commitMessage, txId);}} else {if (txState != null) {txState.setCommitOnBehalfOfRemoteStub(true);txMgr.commit();commitMessage = txState.getCommitMessage();}}} finally {txMgr.removeHostedTXState(txId);}TXRemoteCommitReplyMessage.send(getSender(), getProcessorId(), commitMessage, getReplySender(dm));return false;}}"	Yes
699	public class A {private void logAndWait(CompleteUpdate update, CompleteUpdate waitFor) throws OwsExceptionReport {waitFor.waitForCompletion();}}	Yes
700	"public class A {private Boolean checkDetectedLanguageForQuestion(String textualQuestion, String expectedLanguage)throws LangDetectException {ArrayList<String> detectedLanguages;detectedLanguages =(ArrayList<String>) myLanguageDetection.getDetectedLanguages(textualQuestion);String detectedLanguage = detectedLanguages.get(0);String logmessage;for (int i = 0; i < detectedLanguages.size(); i++) {logmessage =String.format(""For '%s' was detected (%d. of %d): %s (expected: %s)"",textualQuestion,i,detectedLanguages.size(),detectedLanguages.get(i),expectedLanguage);if (expectedLanguage == null) {} else if (expectedLanguage.equalsIgnoreCase(detectedLanguage)) {} else {}}if (detectedLanguages.size() == 0) {} else if (detectedLanguages.size() > 1) {logger.warn(""many ({}) languages detected for {}"", detectedLanguages.size(), textualQuestion);} else {}if (detectedLanguage == null) {return null;} else {return expectedLanguage.equalsIgnoreCase(detectedLanguage);}}}"	Yes
701	"public class A {public StgNZielobjektRollen merge(StgNZielobjektRollen detachedInstance) {try {StgNZielobjektRollen result =(StgNZielobjektRollen) sessionFactory.getCurrentSession().merge(detachedInstance);return result;} catch (RuntimeException re) {log.error(""merge failed"", re);throw re;}}}"	Yes
702	public class A {@Overridepublic IBond getBond(IAtom atom1, IAtom atom2) {return super.getBond(atom1, atom2);}}	Yes
703	public class A {public void filterAbstractHttpRequest(SubmitContext context, AbstractHttpRequest<?> wsdlRequest) {if (!wsdlRequest.isStripWhitespaces()) {return;}String content = (String) context.getProperty(BaseHttpRequestTransport.REQUEST_CONTENT);if (content == null) {} else {content = XmlUtils.stripWhitespaces(content);context.setProperty(BaseHttpRequestTransport.REQUEST_CONTENT, content);}}}	Yes
704	public class A {public String getPortletFooterPaths() {UnsyncStringWriter unsyncStringWriter = new UnsyncStringWriter();PipingServletResponse pipingServletResponse =new PipingServletResponse(_httpServletResponse, unsyncStringWriter);for (Portlet portlet : _getPortlets()) {JSONObject jsonObject = JSONFactoryUtil.createJSONObject();try {PortletJSONUtil.populatePortletJSONObject(_httpServletRequest, StringPool.BLANK, portlet, jsonObject);PortletJSONUtil.writeHeaderPaths(pipingServletResponse, jsonObject);} catch (Exception exception) {}}return unsyncStringWriter.toString();}}	Yes
705	public class A {@Overridepublic void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {if (source == null) return;if (((Task<?>) source).isDone() && !((Task<?>) source).isError()) {try {Object nextItem = ((Task<?>) source).get();if (nextItem != null) {context.convertAnother(nextItem);}} catch (InterruptedException e) {throw Exceptions.propagate(e);} catch (ExecutionException e) {}} else {if (!loggedTaskWarning) {loggedTaskWarning = true;}return;}}}	Yes
706	"public class A {@Testpublic void test_02() {Itree intForest = newItree(markers);intForest.build();Markers queries = createRandomLargeMarkers(chromosome, 10000);int i = 0;int totalResults = 0;for (Marker m : queries) {totalResults += compareQuery(m, intForest);Gpr.showMark(i++, 10);}Assert.assertTrue(""Not a signle result found in all queries!"", totalResults > 0);System.err.println("""");}}"	Yes
707	"public class A {@Testpublic void mailTest(TestContext testContext) {this.testContext = testContext;StringBuilder sb = new StringBuilder(""*******************************\n"");for (int i = 0; i < 15; i++) {sb.append(sb);}String message = sb.toString();log.info(""message size is "" + message.length());testException(new MailMessage(""user@example.com"", ""user@example.com"", ""Subject"", message));}}"	No
708	"public class A {public void report(Integer taskid, Communication communication) {if (communication.isFinished()) {return;}if (!tasks.containsKey(taskid)) {LOG.warn(""unexpected: taskid({}) missed."", taskid);tasks.putIfAbsent(taskid, new TaskCommunication(taskid, communication));} else {tasks.get(taskid).report(communication);}}}"	No
709	"public class A {@Overridepublic Set<Future<AnalysisSubmission>> cleanupAnalysisSubmissions() {synchronized (cleanupAnalysesResultsLock) {List<AnalysisSubmission> analysisSubmissions =analysisSubmissionRepository.findByAnalysisState(AnalysisState.COMPLETED, AnalysisCleanedState.NOT_CLEANED);analysisSubmissions.addAll(analysisSubmissionRepository.findByAnalysisState(AnalysisState.ERROR, AnalysisCleanedState.NOT_CLEANED));Set<Future<AnalysisSubmission>> cleanedSubmissions = Sets.newHashSet();for (AnalysisSubmission submission : analysisSubmissions) {if (AnalysisCleanedState.NOT_CLEANED.equals(submission.getAnalysisCleanedState())&& cleanupCondition.shouldCleanupSubmission(submission)) {logger.trace(""Attempting to clean up submission "" + submission);try {Future<AnalysisSubmission> cleanedSubmissionFuture =analysisExecutionService.cleanupSubmission(submission);cleanedSubmissions.add(cleanedSubmissionFuture);} catch (ExecutionManagerException e) {}}}return cleanedSubmissions;}}}"	Yes
710	"public class A {protected void go(String bundleName,int instances,int activityRecoveries,int correlationSets,int faults,int exchanges,int routes,int messsages,int partnerLinks,int scopes,int variables,int events,int largeData)throws Exception {if (server.isDeployed(bundleName)) server.undeployProcess(bundleName);server.deployProcess(bundleName);ProcessDAO process = null;try {initialLargeDataCount = getLargeDataCount(0);sendRequestFile(""http://localhost:8888/processes/FirstProcess/FirstProcess/FirstProcess/Client"",bundleName,""testRequest.soap"");Thread.sleep(2000);LoggerFactory.getLogger(SystemCronCleanupTest.class).debug(""============ASSERT INSTANCE CLEANUP==============="");process =assertInstanceCleanup(instances,activityRecoveries,correlationSets,faults,exchanges,routes,messsages,partnerLinks,scopes,variables,events,largeData);} finally {server.undeployProcess(bundleName);assertProcessCleanup(process);}}}"	No
711	"public class A {private void verbosePrintAllProjects() {if (options.isVerbose()) {Set<? extends ProjectConfigSnapshot> projects = workspaceManager.getProjectConfigs();int maxPrjNameLength =projects.stream().filter(p -> p.getName() != null).mapToInt(p -> p.getName().length()).max().orElse(10);String prjNameWithPadding = ""%-"" + maxPrjNameLength + ""s"";if (!projects.isEmpty()) {Path workspace = options.getDir().toPath();SortedMap<String, String> projectNameList = new TreeMap<>();for (ProjectConfigSnapshot prj : projects) {String prjName = prj.getName() == null ? ""[no_name]"" : prj.getName();String locationStr = null;if (prj.getPath() == null) {locationStr = ""[no_location]"";} else {locationStr = workspace.relativize(URIUtils.toPath(prj.getPath())).toString();if (locationStr.isBlank()) {locationStr = ""."";}}String outputLine = String.format(prjNameWithPadding + "" at %s"", prjName, locationStr);projectNameList.put(locationStr, outputLine);}}}}}"	Yes
712	"public class A {@Testpublic void m_logArtifactsNegativeTest() {LOGGER.info("" Log Artifacts in Experiment Negative test start................................"");List<Artifact> artifacts = new ArrayList<>();Artifact artifact1 =Artifact.newBuilder().setKey(""Google Pay Artifact "" + Calendar.getInstance().getTimeInMillis()).setPath(""This is new added data artifact type in Google Pay artifact"").setArtifactType(ArtifactType.MODEL).build();artifacts.add(artifact1);Artifact artifact2 =Artifact.newBuilder().setKey(""Google Pay Artifact "" + Calendar.getInstance().getTimeInMillis()).setPath(""This is new added data artifact type in Google Pay artifact"").setArtifactType(ArtifactType.DATA).build();artifacts.add(artifact2);LogExperimentArtifacts logArtifactRequest =LogExperimentArtifacts.newBuilder().addAllArtifacts(artifacts).build();try {experimentServiceStub.logArtifacts(logArtifactRequest);fail();} catch (StatusRuntimeException ex) {Status status = Status.fromThrowable(ex);LOGGER.warn(""Error Code : "" + status.getCode() + "" Description : "" + status.getDescription());assertEquals(Status.INVALID_ARGUMENT.getCode(), status.getCode());}logArtifactRequest =LogExperimentArtifacts.newBuilder().setId(""asda"").addAllArtifacts(artifacts).build();try {experimentServiceStub.logArtifacts(logArtifactRequest);fail();} catch (StatusRuntimeException ex) {Status status = Status.fromThrowable(ex);LOGGER.warn(""Error Code : "" + status.getCode() + "" Description : "" + status.getDescription());assertEquals(Status.PERMISSION_DENIED.getCode(), status.getCode());}logArtifactRequest =LogExperimentArtifacts.newBuilder().setId(experiment.getId()).addAllArtifacts(experiment.getArtifactsList()).build();try {experimentServiceStub.logArtifacts(logArtifactRequest);fail();} catch (StatusRuntimeException ex) {Status status = Status.fromThrowable(ex);LOGGER.warn(""Error Code : "" + status.getCode() + "" Description : "" + status.getDescription());assertEquals(Status.ALREADY_EXISTS.getCode(), status.getCode());}LOGGER.info(""Log Artifacts in Experiment tags Negative test stop................................"");}}"	No
713	"public class A {private String _getFieldValuesXMLString(DDMFormInstanceRecord ddmFormInstanceRecord) {try {StringBundler sb = new StringBundler(10);sb.append(""<column><model><model-name>"");sb.append(""com.liferay.dynamic.data.mapping.model.DDMContent"");sb.append(""</model-name>"");DDMFormValuesSerializerSerializeResponse ddmFormValuesSerializerSerializeResponse =_ddmFormValuesSerializer.serialize(DDMFormValuesSerializerSerializeRequest.Builder.newBuilder(ddmFormInstanceRecord.getDDMFormValues()).build());JSONObject dataJSONObject =JSONFactoryUtil.createJSONObject(ddmFormValuesSerializerSerializeResponse.getContent());JSONArray fieldValuesJSONArray = dataJSONObject.getJSONArray(""fieldValues"");fieldValuesJSONArray.forEach(fieldValue -> {JSONObject fieldValueJSONObject = (JSONObject) fieldValue;sb.append(""<column><column-name>"");sb.append(fieldValueJSONObject.get(""name""));sb.append(""</column-name>"");sb.append(""<column-value><![CDATA["");sb.append(fieldValueJSONObject.get(""value""));sb.append(""]]></column-value></column>"");});sb.append(""</model></column>"");return sb.toString();} catch (PortalException portalException) {_log.error(""Unable to get field values from dynamic data mapping form ""+ ""instance record ""+ ddmFormInstanceRecord.getFormInstanceRecordId(),portalException);}return null;}}"	No
714	"public class A {private void dryRunInternal(Cluster cluster, Path buildPath, Boolean skipDryRun)throws FalconException {if (null != skipDryRun && skipDryRun) {LOG.info(""Skipping dryrun as directed by param in cli/RestApi."");return;} else {String skipDryRunStr =RuntimeProperties.get().getProperty(FALCON_SKIP_DRYRUN, ""false"").toLowerCase();if (Boolean.valueOf(skipDryRunStr)) {LOG.info(""Skipping dryrun as directed by Runtime properties."");return;}}BUNDLEAPP bundle = OozieBundleBuilder.unmarshal(cluster, buildPath);OozieClient client = OozieClientFactory.get(cluster.getName());for (COORDINATOR coord : bundle.getCoordinator()) {Properties props = new Properties();props.setProperty(OozieClient.COORDINATOR_APP_PATH, coord.getAppPath());for (Property prop : coord.getConfiguration().getProperty()) {props.setProperty(prop.getName(), prop.getValue());}try {LOG.info(""dryRun with properties {}"", props);client.dryrun(props);} catch (OozieClientException e) {throw new FalconException(e);}}}}"	No
715	public class A {private boolean isAcceptableLibrary(File file, Set<String> pathToClassFiles) {try {if (file.isDirectory()) {for (String criteria : pathToClassFiles) {if (new File(file, criteria).exists()) {return false;}}} else {JarFile jar = null;try {jar = new JarFile(file);for (String criteria : pathToClassFiles) {if (jar.getEntry(criteria) != null) {return false;}}} finally {if (jar != null)try {jar.close();} catch (IOException ignored) {}}}} catch (IOException e) {}return true;}}	Yes
716	"public class A {@Overridepublic void addConfigInfo(final String srcIp,final String srcUser,final ConfigInfo configInfo,final Timestamp time,final Map<String, Object> configAdvanceInfo,final boolean notify) {boolean result =tjt.execute(status -> {try {long configId =addConfigInfoAtomic(-1, srcIp, srcUser, configInfo, time, configAdvanceInfo);String configTags =configAdvanceInfo == null? null: (String) configAdvanceInfo.get(""config_tags"");addConfigTagsRelation(configId,configTags,configInfo.getDataId(),configInfo.getGroup(),configInfo.getTenant());insertConfigHistoryAtomic(0, configInfo, srcIp, srcUser, time, ""I"");} catch (CannotGetJdbcConnectionException e) {throw e;}return Boolean.TRUE;});}}"	Yes
717	"public class A {@Testpublic void serializeWithSingleCustomConnectionTest() {try {WorkflowTrace trace = new WorkflowTrace();AliasedConnection con = new OutboundConnection(""theAlias"", 1111, ""host1111"");trace.addConnection(con);action = new SendAction(new ClientHelloMessage(config));action.setConnectionAlias(con.getAlias());trace.addTlsAction(action);StringWriter sw = new StringWriter();PrintWriter pw = new PrintWriter(sw);pw.println(""<workflowTrace>"");pw.println(""    <OutboundConnection>"");pw.println(""        <alias>theAlias</alias>"");pw.println(""        <port>1111</port>"");pw.println(""        <hostname>host1111</hostname>"");pw.println(""    </OutboundConnection>"");pw.println(""    <Send>"");pw.println(""        <messages>"");pw.println(""            <ClientHello>"");pw.println(""                <extensions>"");pw.println(""                    <ECPointFormat/>"");pw.println(""                    <EllipticCurves/>"");pw.println(""                    <SignatureAndHashAlgorithmsExtension/>"");pw.println(""                    <RenegotiationInfoExtension/>"");pw.println(""                </extensions>"");pw.println(""            </ClientHello>"");pw.println(""        </messages>"");pw.println(""    </Send>"");pw.println(""</workflowTrace>"");pw.close();String expected = sw.toString();DefaultNormalizeFilter.normalizeAndFilter(trace, config);String actual = WorkflowTraceSerializer.write(trace);Assert.assertEquals(expected, actual);} catch (JAXBException | IOException ex) {LOGGER.error(ex.getLocalizedMessage(), ex);Assert.fail();}}}"	No
718	"public class A {public final void logRequest(RoutingContext ctx, String tenant) {Timer.Sample sample = MetricsHelper.getTimerSample();StringBuilder mods = new StringBuilder();if (modList != null && !modList.isEmpty()) {for (ModuleInstance mi : modList) {mods.append("" "").append(mi.getModuleDescriptor().getId());}}if (logger.isInfoEnabled()) {logger.info(""{} REQ {} {} {} {} {}"",reqId,ctx.request().remoteAddress(),tenant,ctx.request().method(),ctx.request().path(),mods);}MetricsHelper.recordCodeExecutionTime(sample, ""ProxyContext.logRequest"");}}"	No
719	"public class A {@Test@Ignorepublic void testInitialization() {final String[] namespaces = {""org.geotools.core"",""org.geotools.resources"",""org.geotools.referencing"",""org.opengis.referencing""};for (String namespace : namespaces) {final Logger logger = Logging.getLogger(namespace);logger.severe(""Don't worry, just a test"");logger.warning(""This is an imaginary warning"");logger.info(""This is a pseudo-information message"");logger.config(""Not really configuring anything..."");logger.fine(""This is a detailed (but useless) message\nWe log this one on two lines!"");logger.finer(""This is a debug message"");}}}"	No
720	"public class A {protected void notifyCache(String action, HugeType type, List<Id> ids) {EventHub eventHub;if (type.isGraph()) {eventHub = this.params.graphEventHub();} else if (type.isSchema()) {eventHub = this.params.schemaEventHub();} else {return;}try {if (ids == null) {eventHub.call(Events.CACHE, action, type);} else {if (ids.size() == 1) {eventHub.call(Events.CACHE, action, type, ids.get(0));} else {eventHub.call(Events.CACHE, action, type, ids.toArray());}}} catch (RejectedExecutionException e) {LOG.warn(""Can't update cache due to EventHub is too busy"");}}}"	No
721	public class A {private static Stream<Arguments> logMethods() {LogMethod debug =new LogMethod() {public void log(Log4jLog logger, String msg) {logger.debug(msg);}public void log(Log4jLog logger, String msg, Throwable cause) {logger.debug(msg, cause);}public void log(Log4jLog logger, String format, Object... arguments) {logger.debug(format, arguments);}};LogMethod info =new LogMethod() {public void log(Log4jLog logger, String msg) {logger.info(msg);}public void log(Log4jLog logger, String msg, Throwable cause) {logger.info(msg, cause);}public void log(Log4jLog logger, String format, Object... arguments) {logger.info(format, arguments);}};LogMethod warn =new LogMethod() {public void log(Log4jLog logger, String msg) {logger.warn(msg);}public void log(Log4jLog logger, String msg, Throwable cause) {logger.warn(msg, cause);}public void log(Log4jLog logger, String format, Object... arguments) {logger.warn(format, arguments);}};LogMethod error =new LogMethod() {public void log(Log4jLog logger, String msg) {logger.error(msg);}public void log(Log4jLog logger, String msg, Throwable cause) {logger.error(msg, cause);}public void log(Log4jLog logger, String format, Object... arguments) {logger.error(format, arguments);}};return Stream.of(Arguments.of(debug, Level.DEBUG),Arguments.of(info, Level.INFO),Arguments.of(warn, Level.WARN),Arguments.of(error, Level.ERROR));}}	No
722	public class A {private static boolean checkLineContingency(Contingency contingency, LineContingency element, Network network) {Line line = network.getLine(element.getId());if (line == null|| (element.getVoltageLevelId() != null&& !(element.getVoltageLevelId().equals(line.getTerminal1().getVoltageLevel().getId())|| element.getVoltageLevelId().equals(line.getTerminal2().getVoltageLevel().getId())))) {return false;}return true;}}	Yes
723	"public class A {private void initDocTypePrefetch(DocumentType docType) {String docTypeName = docType.getName();PrefetchInfo prefetch = docType.getPrefetchInfo();if (prefetch != null) {Set<String> documentTypeFragments = getTypeFragments(docTypeName);for (String fieldName : prefetch.getFields()) {String fragment = fieldFragment.get(fieldName);if (fragment != null) {if (documentTypeFragments.contains(fragment)) {addDocTypePrefetchedFragments(docTypeName, Collections.singleton(fragment));}}}for (String schemaName : prefetch.getSchemas()) {Set<String> fragments = schemaFragments.get(schemaName);if (fragments != null) {addDocTypePrefetchedFragments(docTypeName, fragments);}}}addDocTypePrefetchedFragments(docTypeName, getCommonFragmentsPrefetched());log.debug(""Fragments for type ""+ docTypeName+ "": ""+ getTypeFragments(docTypeName)+ "", prefetch: ""+ getTypePrefetchedFragments(docTypeName));}}"	No
724	"public class A {private AtlasEdge mapStructValue(AttributeMutationContext ctx, EntityMutationContext context)throws AtlasBaseException {if (LOG.isDebugEnabled()) {LOG.debug(""==> mapStructValue({})"", ctx);}AtlasEdge ret = null;if (ctx.getCurrentEdge() != null) {AtlasStruct structVal = null;if (ctx.getValue() instanceof AtlasStruct) {structVal = (AtlasStruct) ctx.getValue();} else if (ctx.getValue() instanceof Map) {structVal =new AtlasStruct(ctx.getAttrType().getTypeName(),(Map) AtlasTypeUtil.toStructAttributes((Map) ctx.getValue()));}if (structVal != null) {updateVertex(structVal, ctx.getCurrentEdge().getInVertex(), context);}ret = ctx.getCurrentEdge();} else if (ctx.getValue() != null) {String edgeLabel = AtlasGraphUtilsV2.getEdgeLabel(ctx.getVertexProperty());AtlasStruct structVal = null;if (ctx.getValue() instanceof AtlasStruct) {structVal = (AtlasStruct) ctx.getValue();} else if (ctx.getValue() instanceof Map) {structVal =new AtlasStruct(ctx.getAttrType().getTypeName(),(Map) AtlasTypeUtil.toStructAttributes((Map) ctx.getValue()));}if (structVal != null) {ret = createVertex(structVal, ctx.getReferringVertex(), edgeLabel, context);}}if (LOG.isDebugEnabled()) {}return ret;}}"	Yes
725	public class A {@Overridepublic void log(String dataSourceName, boolean isForceClosing, long startTimeMilliseconds) {long cost = getElapsedMilliSeconds();}}	Yes
726	public class A {@Overridepublic void configure(@NonNull VocabCache<T> vocabCache,@NonNull WeightLookupTable<T> lookupTable,@NonNull VectorsConfiguration configuration) {this.vocabCache = vocabCache;this.lookupTable = lookupTable;this.configuration = configuration;this.window = configuration.getWindow();this.useAdaGrad = configuration.isUseAdaGrad();this.negative = configuration.getNegative();this.sampling = configuration.getSampling();if (configuration.getNegative() > 0) {if (((InMemoryLookupTable<T>) lookupTable).getSyn1Neg() == null) {((InMemoryLookupTable<T>) lookupTable).setUseHS(configuration.isUseHierarchicSoftmax());((InMemoryLookupTable<T>) lookupTable).setNegative(configuration.getNegative());((InMemoryLookupTable<T>) lookupTable).resetWeights(false);}}this.syn0 = new DeviceLocalNDArray(((InMemoryLookupTable<T>) lookupTable).getSyn0());this.syn1 = new DeviceLocalNDArray(((InMemoryLookupTable<T>) lookupTable).getSyn1());this.syn1Neg = new DeviceLocalNDArray(((InMemoryLookupTable<T>) lookupTable).getSyn1Neg());this.expTable =new DeviceLocalNDArray(Nd4j.create(((InMemoryLookupTable<T>) lookupTable).getExpTable(),new long[] {((InMemoryLookupTable<T>) lookupTable).getExpTable().length},syn0.get().dataType()));this.table = new DeviceLocalNDArray(((InMemoryLookupTable<T>) lookupTable).getTable());this.variableWindows = configuration.getVariableWindows();}}	Yes
727	"public class A {@Overridepublic ArtifactClassesWithMetadata inspectArtifact(Id.Artifact artifactId,File artifactFile,@Nullable ClassLoader parentClassLoader,Set<PluginClass> additionalPlugins)throws IOException, InvalidArtifactException {Path tmpDir =Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR), cConf.get(Constants.AppFabric.TEMP_DIR)).toAbsolutePath();Files.createDirectories(tmpDir);Location artifactLocation = Locations.toLocation(artifactFile);Path stageDir = Files.createTempDirectory(tmpDir, artifactFile.getName());try {File unpackedDir =BundleJarUtil.prepareClassLoaderFolder(artifactLocation, Files.createTempDirectory(stageDir, ""unpacked-"").toFile());try (CloseableClassLoader artifactClassLoader =artifactClassLoaderFactory.createClassLoader(unpackedDir);PluginInstantiator pluginInstantiator =new PluginInstantiator(cConf,parentClassLoader == null ? artifactClassLoader : parentClassLoader,Files.createTempDirectory(stageDir, ""plugins-"").toFile(),false)) {pluginInstantiator.addArtifact(artifactLocation, artifactId.toArtifactId());ArtifactClasses.Builder builder =inspectApplications(artifactId, ArtifactClasses.builder(), artifactLocation, artifactClassLoader);List<MetadataMutation> mutations = new ArrayList<>();inspectPlugins(builder,artifactFile,artifactId.toEntityId(),pluginInstantiator,additionalPlugins,mutations);return new ArtifactClassesWithMetadata(builder.build(), mutations);}} catch (EOFException | ZipException e) {throw new InvalidArtifactException(""Artifact "" + artifactId + "" is not a valid zip file."", e);} finally {try {DirUtils.deleteDirectoryContents(stageDir.toFile());} catch (IOException e) {}}}}"	Yes
728	"public class A {private TeaVMProgressFeedback getResult() {if (cancelRequested) {log.info(""Trying to cancel compilation due to user request"");return TeaVMProgressFeedback.CANCEL;}if (stopped) {return TeaVMProgressFeedback.CANCEL;}try {if (watcher.hasChanges()) {return TeaVMProgressFeedback.CANCEL;}} catch (IOException e) {return TeaVMProgressFeedback.CANCEL;}return TeaVMProgressFeedback.CONTINUE;}}"	Yes
729	"public class A {@Overridepublic PartitionGroup getMetaPartition(String path) {PartitionTable partitionTable = getPartitionTable();if (partitionTable == null) {return null;}try {return partitionTable.partitionByPathTime(new PartialPath(path), 0);} catch (MetadataException e) {LOGGER.error(""The storage group of path {} doesn't exist."", path, e);return new PartitionGroup();}}}"	No
730	"public class A {public static com.liferay.commerce.product.model.CPOption fetchCPOption(HttpPrincipal httpPrincipal, long cpOptionId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CPOptionServiceUtil.class, ""fetchCPOption"", _fetchCPOptionParameterTypes3);MethodHandler methodHandler = new MethodHandler(methodKey, cpOptionId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.product.model.CPOption) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
731	"public class A {public static com.liferay.commerce.account.model.CommerceAccount getPersonalCommerceAccount(HttpPrincipal httpPrincipal, long userId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommerceAccountServiceUtil.class,""getPersonalCommerceAccount"",_getPersonalCommerceAccountParameterTypes6);MethodHandler methodHandler = new MethodHandler(methodKey, userId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.account.model.CommerceAccount) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
732	public class A {@Override@Test(expected = RestoreEntryException.class)public void testTrashParentAndRestoreParentAndBaseModel() throws Exception {try {super.testTrashParentAndRestoreParentAndBaseModel();} catch (com.liferay.trash.kernel.exception.RestoreEntryException restoreEntryException) {if (_log.isDebugEnabled()) {_log.debug(restoreEntryException, restoreEntryException);}throw new RestoreEntryException();}}}	No
733	"public class A {private GeneralisedQueryTree<N> getGeneralisedQueryTreeNotContainingNoSequence(List<GeneralisedQueryTree<N>> queue) {GeneralisedQueryTree<N> genTree;for (int i = 0; i < queue.size(); i++) {genTree = queue.get(i);boolean containsNoSequence = false;for (List<QueryTreeChange> seq : noSequences) {if (genTree.getChanges().containsAll(seq)) {logger.info(""Skipping sequence from queue ""+ genTree.getChanges()+ "" because it contains NO sequence""+ seq);containsNoSequence = true;break;}}if (!containsNoSequence) {return queue.remove(i);}}return queue.remove(0);}}"	No
734	"public class A {public void stop() {log.info(""Stopping task"");try {writer.closeQuietly();} finally {try {if (dialect != null) {dialect.close();}} catch (Throwable t) {log.warn(""Error while closing the {} dialect: "", dialect.name(), t);} finally {dialect = null;}}}}"	No
735	"public class A {@Overridepublic CPDataSourceResult getResult(HttpServletRequest httpServletRequest, int start, int end)throws Exception {CommerceAccount commerceAccount =commerceAccountHelper.getCurrentCommerceAccount(httpServletRequest);if (commerceAccount == null) {return new CPDataSourceResult(Collections.emptyList(), 0);}CPCatalogEntry cpCatalogEntry =(CPCatalogEntry) httpServletRequest.getAttribute(CPWebKeys.CP_CATALOG_ENTRY);if (cpCatalogEntry == null) {return new CPDataSourceResult(Collections.emptyList(), 0);}List<ProductContentCommerceMLRecommendation> productContentCommerceMLRecommendations =_productContentCommerceMLRecommendationManager.getProductContentCommerceMLRecommendations(portal.getCompanyId(httpServletRequest), cpCatalogEntry.getCPDefinitionId());if (productContentCommerceMLRecommendations.isEmpty()) {return new CPDataSourceResult(Collections.emptyList(), 0);}long groupId = portal.getScopeGroupId(httpServletRequest);List<CPCatalogEntry> cpCatalogEntries = new ArrayList<>();List<ProductContentCommerceMLRecommendation> productContentCommerceMLRecommendationList =ListUtil.subList(productContentCommerceMLRecommendations, start, end);for (ProductContentCommerceMLRecommendation productContentCommerceMLRecommendation :productContentCommerceMLRecommendationList) {long recommendedEntryClassPK =productContentCommerceMLRecommendation.getRecommendedEntryClassPK();if (_log.isTraceEnabled()) {StringBundler sb = new StringBundler(6);sb.append(""Recommended item: "");sb.append(recommendedEntryClassPK);sb.append("" rank: "");sb.append(productContentCommerceMLRecommendation.getRank());sb.append("" score: "");sb.append(productContentCommerceMLRecommendation.getScore());}try {CPCatalogEntry recommendedCPCatalogEntry =cpDefinitionHelper.getCPCatalogEntry(commerceAccount.getCommerceAccountId(),groupId,recommendedEntryClassPK,portal.getLocale(httpServletRequest));cpCatalogEntries.add(recommendedCPCatalogEntry);} catch (PortalException portalException) {if (_log.isDebugEnabled()) {}}}return new CPDataSourceResult(cpCatalogEntries, productContentCommerceMLRecommendations.size());}}"	Yes
736	"public class A {@Overridepublic void start() {service.registerAction(getStartOK(),new ProcessService.OutputListener() {@Overridepublic void run(Matcher m) {setServerStarted();service.unregisterAction(getStartOK());service.unregisterAction(getStartError());fireAfterStart();}});service.registerAction(getStartError(),new ProcessService.OutputListener() {@Overridepublic void run(Matcher m) {setServerStopped();service.unregisterAction(getStartOK());service.unregisterAction(getStartError());kill();}});service.registerAction(getStopped(),new ProcessService.OutputListener() {@Overridepublic void run(Matcher m) {setServerStarted();setServerStopped();service.unregisterAction(getStartOK());service.unregisterAction(getStartError());service.unregisterAction(getStopped());fireAfterStop(gracefulStop);}});if (isRunning()) {return;}fireBeforeStart();startInternal();long startTime = TimeService.currentTimeMillis();synchronized (this) {while (!serverStarted) {try {long waitTime = startTime + service.startTimeout - TimeService.currentTimeMillis();if (waitTime <= 0) {throw new IllegalStateException(""Server did not start within timeout"");}wait(waitTime);} catch (InterruptedException e) {throw new IllegalStateException(""Interrupted waiting for server to start"", e);}}}}}"	Yes
737	"public class A {@Overridepublic void destroy() {LOGGER.debug(""Destroying MessageListenerContainerRegistry"");this.messageListenerContainerRegistry.destroy();LOGGER.debug(""Destroying ConnectionFactoryRegistry"");this.connectionFactoryRegistry.destroy();}}"	No
738	"public class A {public void callWorkflowEngine(RequestClientParameter requestClientParameter, String orchestrationUri)throws WorkflowEngineConnectionException {try {camundaClient.post(requestClientParameter, orchestrationUri);} catch (ApiException e) {logger.error(""Error Calling Workflow Engine"", e);throw new WorkflowEngineConnectionException(""Error Calling Workflow Engine"", e);}}}"	No
739	"public class A {public Map<String, Object> createCustomSource(String sourceName) throws Exception {checkStarted();String response =callApi(HttpMethod.POST,""/ws/org/sources/form_create"",""{service_type: \""custom\"", name: \"""" + sourceName + ""\""}"");response =""{""+ ""\""id\"":\""FAKE_ID\"",""+ ""\""acces_token\"":\""FAKE_TOKEN\"",""+ ""\""key\"":\""FAKE_KEY\""""+ ""}"";JsonMapper mapper = JsonMapper.builder().build();Map<String, Object> map = mapper.readValue(response, Map.class);return map;}}"	Yes
740	public class A {@Overridepublic long getLiveLogoId() {long logoId = 0;Group group = null;try {group = getGroup();if (!group.isStagingGroup()) {return logoId;}} catch (Exception exception) {if (_log.isDebugEnabled()) {_log.debug(exception, exception);}return logoId;}Group liveGroup = group.getLiveGroup();LayoutSet liveLayoutSet = null;if (isPrivateLayout()) {liveLayoutSet = liveGroup.getPrivateLayoutSet();} else {liveLayoutSet = liveGroup.getPublicLayoutSet();}return liveLayoutSet.getLogoId();}}	No
741	"public class A {@Then(""^I should receive a notification$"")public void iShouldReceiveANotification() throws Throwable {final Notification notification =this.notificationService.getNotification(MAX_WAIT_FOR_UNKNOWN_NOTIFICATION, TimeUnit.MILLISECONDS);if (notification == null) {Assertions.fail(""Did not receive a notification within the timeout limit of ""+ MAX_WAIT_FOR_UNKNOWN_NOTIFICATION+ "" milliseconds."");}LOGGER.info(""Received notification for correlation UID {} for type {} with result {}."",notification.getCorrelationUid(),notification.getNotificationType(),notification.getResult());ScenarioContext.current().put(PlatformKeys.KEY_CORRELATION_UID, notification.getCorrelationUid());ScenarioContext.current().put(PlatformKeys.KEY_ORGANIZATION_IDENTIFICATION,PlatformDefaults.DEFAULT_ORGANIZATION_IDENTIFICATION);ScenarioContext.current().put(PlatformKeys.KEY_USER_NAME, PlatformDefaults.DEFAULT_USER_NAME);this.notificationService.handleNotification(notification, PlatformDefaults.DEFAULT_ORGANIZATION_IDENTIFICATION);}}"	Yes
742	"public class A {public void updateState(PingSession pingSession,boolean closeState,AgentLifeCycleState agentLifeCycleState,AgentEventType agentEventType) {final Header header = pingSession.getHeader();if (header == null) {logger.warn(""Not found request header"");return;}final long pingTimestamp = System.currentTimeMillis();final long socketId = header.getSocketId();if (socketId == -1) {logger.warn(""SocketId not exist. header:{}"", header);return;}try {final AgentProperty agentProperty =newChannelProperties(header, pingSession.getServiceType());long eventIdentifier =AgentLifeCycleAsyncTaskService.createEventIdentifier((int) socketId, (int) pingSession.nextEventIdAllocator());this.agentLifeCycleAsyncTask.handleLifeCycleEvent(agentProperty, pingTimestamp, agentLifeCycleState, eventIdentifier);this.agentEventAsyncTask.handleEvent(agentProperty, pingTimestamp, agentEventType);} catch (Exception e) {logger.warn(""Failed to update state. closeState:{} lifeCycle={} {}/{}"",closeState,pingSession,agentLifeCycleState,agentEventType,e);}}}"	No
743	public class A {public static void unsetOrganizationUsers(long organizationId, long[] userIds)throws RemoteException {try {UserServiceUtil.unsetOrganizationUsers(organizationId, userIds);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
744	"public class A {public static <T> T getParameter(HttpServletRequest req, String param, Class<? extends T> paramtypes)throws InvalidParamException {String[] values = null;if (paramtypes.isArray() || List.class.isAssignableFrom(paramtypes)) {values = req.getParameterValues(param);} else {String str = req.getParameter(param);if (str != null) {values = new String[1];values[0] = str;}}if (values == null || values.length == 0) {Object value = req.getAttribute(param);if (value == null) {HttpSession session = req.getSession();value = session.getAttribute(param);}if (value == null) {return null;}if (paramtypes.isAssignableFrom(value.getClass())) {return (T) value;} else {if (value instanceof String) {values = new String[1];values[0] = (String) value;return ValueConverter.conv(values, paramtypes);} else if (value instanceof String[]) {return ValueConverter.conv((String[]) value, paramtypes);}if (paramtypes.isAssignableFrom(String.class)) {return (T) value.toString();}MessageResult messageResult = new MessageResult();messageResult.setMessage("""");messageResult.setStatus(HttpStatus.SC_400_BAD_REQUEST);throw new InvalidParamException(messageResult);}} else {return ValueConverter.conv(values, paramtypes);}}}"	Yes
745	"public class A {private String getDatabaseScriptsPath() {DatabaseProductType dbType;String databaseProductName;String databaseScriptsPath = """";try {dbType =JDBCTools.getDatabaseProductType(JDBCTools.CSADMIN_DATASOURCE_NAME, getServiceConfig().getDbCsadminName());databaseProductName = dbType.getName();databaseScriptsPath =getServerRootDir()+ File.separator+ JEEServerDeployment.DATABASE_SCRIPTS_DIR_PATH+ File.separator+ databaseProductName;} catch (Exception e) {}return databaseScriptsPath;}}"	Yes
746	"public class A {private void loadDefaultDisablingCodes(String disablingCodesFileName, Map<String, String> disablingCodes) {try {String xml = this.extractConfigFile(disablingCodesFileName);if (null != xml) {AttributeDisablingCodesDOM dom = new AttributeDisablingCodesDOM();disablingCodes.putAll(dom.extractDisablingCodes(xml, disablingCodesFileName));}} catch (Throwable t) {_logger.error(""Error loading disabling codes from file {}"", disablingCodesFileName, t);}}}"	No
747	public class A {private String mapSoftRefValue(AttributeMutationContext ctx, EntityMutationContext context) {String ret = null;if (ctx.getValue() instanceof AtlasObjectId) {AtlasObjectId objectId = (AtlasObjectId) ctx.getValue();String typeName = objectId.getTypeName();String guid =AtlasTypeUtil.isUnAssignedGuid(objectId.getGuid())? context.getGuidAssignments().get(objectId.getGuid()): objectId.getGuid();ret = AtlasEntityUtil.formatSoftRefValue(typeName, guid);} else {if (ctx.getValue() != null) {}}setAssignedGuid(ctx.getValue(), context);return ret;}}	Yes
748	"public class A {public static void main(String[] args) throws Exception {String webappsPath = args[0];int port = Integer.parseInt(args[1]);File dataDir = Files.createTempDir();dataDir.deleteOnExit();Tomcat tomcat = new Tomcat();tomcat.setBaseDir(dataDir.getAbsolutePath());tomcat.setPort(port);tomcat.getConnector().setAttribute(""maxThreads"", ""1000"");tomcat.addWebapp(""/"", new File(webappsPath).getAbsolutePath());log.info(""-----------------------------------------------------------------"");log.info(""Starting Tomcat port {} dir {}"", port, webappsPath);log.info(""-----------------------------------------------------------------"");tomcat.start();while (true) {Thread.sleep(1000);}}}"	No
749	"public class A {public boolean isNotAnalyzed(String name) {VitamDescriptionType description = vitamDescriptionResolver.resolve(name);if (description != null) {return !description.getType().equals(VitamDescriptionType.VitamType.text);}OntologyModel ontologyModel = ontologyModelsByName.get(name);if (ontologyModel != null) {return !ontologyModel.getType().isAnalyzed();}LOGGER.info(String.format(""By default unknown fields are analyzed so here '%s' is ANALYZED."", name));return false;}}"	No
750	public class A {public static com.liferay.asset.category.property.model.AssetCategoryPropertySoap[]getCategoryPropertyValues(long companyId, String key) throws RemoteException {try {java.util.List<com.liferay.asset.category.property.model.AssetCategoryProperty> returnValue =AssetCategoryPropertyServiceUtil.getCategoryPropertyValues(companyId, key);return com.liferay.asset.category.property.model.AssetCategoryPropertySoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
751	"public class A {int read(boolean log) throws Exception {while (true) {try {int d = getCommunications().read();if (log) {Logger.trace(String.format(""< %02x"", d & 0xff));}return d;} catch (TimeoutException e) {continue;}}}}"	No
752	public class A {public void rollbackOnError(Message message, NotificationContext context, StateTransitionError error) {}}	Yes
753	"public class A {public void flush(final String dsName, final String flushOp, boolean isXA) {String subresource = isXA ? ""xa-data-source"" : ""data-source"";ModelNode operation = new ModelNode();operation.get(ADDRESS).set(RuntimeBaseAddress.get());operation.get(ADDRESS).add(""subsystem"", ""datasources"");operation.get(ADDRESS).add(subresource, dsName);operation.get(OP).set(flushOp);dispatcher.execute(new DMRAction(operation),new LoggingCallback<DMRResponse>() {@Overridepublic void onSuccess(DMRResponse dmrResponse) {ModelNode response = dmrResponse.get();if (response.isFailure()) {Console.error(Console.MESSAGES.failed(Console.MESSAGES.flushConnectionsError(dsName)),response.getFailureDescription());} else {Log.info(""Successfully executed flush operation ':"" + flushOp + ""'"");Console.info(Console.MESSAGES.successful(Console.MESSAGES.flushConnectionsSuccess(dsName)));}}});}}"	No
754	"public class A {@Overrideprotected void onSubtreeModified(DataObjectModification<OfOverlayL3Context> rootNode,InstanceIdentifier<OfOverlayL3Context> rootIdentifier) {Name newPortName = rootNode.getDataAfter().getPortName();Name oldPortName = rootNode.getDataBefore().getPortName();LOG.trace(""on update: \n""+ "" old OfOverlayL3Context: {} \n""+ "" new OfOverlayL3Context: {} \n""+ "" rootIdentifier: {}"",rootNode.getDataBefore(),rootNode.getDataAfter(),rootIdentifier);if (oldPortName == null && newPortName == null) {LOG.debug(""Cannot update location for L3EP {} because port-name is missing."",rootIdentifier.firstKeyOf(EndpointL3.class));return;}if (oldPortName != null && newPortName != null && oldPortName.equals(newPortName)) {LOG.debug(""No need to update location for L3EP {} because port-name {} was not changed."",rootIdentifier.firstKeyOf(EndpointL3.class),oldPortName.getValue());return;}updateLocationBasedOnPortName(newPortName, rootIdentifier);}}"	No
755	"public class A {@Overridepublic OrganizationListType transform(Bundle bundle) throws ExchangeTransformException {try {return buildOrganization(FHIRTransformHelper.extractFhirOrgResourceList(bundle));} catch (Exception ex) {LOG.error(""Transforming FHIR data resulted in exception: {}"", ex.getLocalizedMessage(), ex);throw new ExchangeTransformException(ex);}}}"	No
756	"public class A {@Overridepublic KieApiForm getBpmForm(final Properties properties)throws ApiException, ApsSystemException {KieApiForm form = null;final String configId = properties.getProperty(""configId"");if (null != configId) {int widgetInfoId = Integer.parseInt(configId);final BpmWidgetInfo bpmWidgetInfo = bpmWidgetInfoManager.getBpmWidgetInfo(widgetInfoId);final String information = bpmWidgetInfo.getInformationOnline();if (StringUtils.isNotEmpty(information)) {final ApsProperties config = new ApsProperties();try {config.loadFromXml(information);} catch (IOException e) {logger.error(""Error load configuration  {} "", e.getMessage());}String containerId = config.getProperty(""containerId"");String processId = config.getProperty(""processId"");String sourceId = config.getProperty(""kieSourceId"");String langCode = properties.getProperty(SystemConstants.API_LANG_CODE_PARAMETER);KieBpmConfig bpmConfig = kieFormManager.getKieServerConfigurations().get(sourceId);if (bpmConfig == null) {String msg = String.format(""Kie server configuration '%s' not found"", sourceId);throw new ApiException(IApiErrorCodes.API_VALIDATION_ERROR, msg, Response.Status.CONFLICT);}KieProcessFormQueryResult processForm =this.getKieFormManager().getProcessForm(bpmConfig, containerId, processId);if (null == processForm) {String msg =String.format(""No form found with containerId %s and processId %s does not exist"",containerId, processId);throw new ApiException(IApiErrorCodes.API_VALIDATION_ERROR, msg, Response.Status.CONFLICT);}this.setLabels(processForm, langCode);form =KieApiUtil.createForm(processForm,this.getI18nManager(),langCode,this.getFormOverridesMap(widgetInfoId));form.setProcessId(processId);form.setContainerId(containerId);}}return form;}}"	No
757	public class A {@Overridepublic void spaceRemoved(SpaceLifeCycleEvent event) {}}	Yes
758	"public class A {private void processNode(JsonNode node, String parent) {log.debug(""Processing node ("", node.toString(), "")"");if (node.isArray()) {for (int i = 0; i < node.size(); ++i) {String currentPath = parent + ""["" + i + ""]"";JsonNode childNode = node.get(i);processNode(childNode, currentPath);}} else if (node.isObject()) {for (Iterator<String> i = node.fieldNames(); i.hasNext(); ) {String childFieldName = i.next();JsonNode childNode = node.get(childFieldName);String currentPath = (parent != null ? parent + ""."" + childFieldName : childFieldName);processNode(childNode, currentPath);}} else {String name = parent;Set<String> parameterValues = parameters.get(name);if (parameterValues == null) {parameterValues = new HashSet<String>();}parameterValues.add(node.asText());log.debug(""Adding parameter (name="", name, "",value="", node.asText(), "")"");parameters.put(name, parameterValues);}}}"	No
759	"public class A {private String getLabelName(String configDetails) throws InsightsCustomException {Gson gson = new Gson();JsonElement jelement = gson.fromJson(configDetails.trim(), JsonElement.class);JsonObject json = jelement.getAsJsonObject();List<String> labelDataValue = null;try {String labelData =json.get(""publish"").getAsJsonObject().get(""data"").getAsString().toUpperCase();String labelHealth =json.get(""publish"").getAsJsonObject().get(""health"").getAsString().toUpperCase();if (ValidationUtils.checkLabelNameString(labelData)) {throw new InsightsCustomException(""Invalid data label Name, it should contain only alphanumeric character,underscore &""+ "" dot"");}if (ValidationUtils.checkLabelNameString(labelHealth)) {throw new InsightsCustomException(""Invalid health label Name, it should contain only alphanumeric character,underscore &""+ "" dot"");}labelDataValue = Arrays.asList(labelData.split(MQMessageConstants.ROUTING_KEY_SEPERATOR));} catch (Exception e) {log.error(""Invalid label Name "", e);throw new InsightsCustomException(e.getMessage());}return labelDataValue.get(1);}}"	No
760	public class A {public void releaseMultiUserLock(String firstUser, String secondUser) {Resource resource = Resource.USER_LOCK;firstUser = generateResourceName(resource, firstUser);secondUser = generateResourceName(resource, secondUser);int compare = firstUser.compareTo(secondUser);String temp;if (compare > 0) {temp = secondUser;secondUser = firstUser;firstUser = temp;}if (compare == 0) {manager.writeUnlock(firstUser);} else {manager.writeUnlock(firstUser);manager.writeUnlock(secondUser);}if (LOG.isDebugEnabled()) {}lockSet.set(resource.clearLock(lockSet.get()));}}	Yes
761	"public class A {public void testReceivedMessageNotInFlightAfterScheduledAckFires() throws Exception {connection.setOptimizedAckScheduledAckInterval(TimeUnit.SECONDS.toMillis(10));connection.start();Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);Queue queue = session.createQueue(""test"");MessageProducer producer = session.createProducer(queue);for (int i = 0; i < 10; i++) {producer.send(session.createTextMessage(""Hello"" + i));}MessageConsumer consumer = session.createConsumer(queue);ArtemisBrokerWrapper broker =(ArtemisBrokerWrapper) ArtemisBrokerHelper.getBroker().getBroker();Binding binding = broker.getServer().getPostOffice().getBinding(new SimpleString(""test""));final QueueImpl coreQueue = (QueueImpl) binding.getBindable();assertTrue(""prefetch full"",Wait.waitFor(new Wait.Condition() {@Overridepublic boolean isSatisified() throws Exception {return 10 == coreQueue.getDeliveringCount();}}));for (int i = 0; i < 6; i++) {javax.jms.Message msg = consumer.receive(4000);assertNotNull(msg);assertEquals(""all prefetch is still in flight: "" + i, 10, coreQueue.getDeliveringCount());}for (int i = 6; i < 10; i++) {javax.jms.Message msg = consumer.receive(4000);assertNotNull(msg);assertTrue(""most are acked but 3 remain"",Wait.waitFor(new Wait.Condition() {@Overridepublic boolean isSatisified() throws Exception {return 3 == coreQueue.getDeliveringCount();}}));}assertTrue(""After delay the scheduled ack should ack all inflight."",Wait.waitFor(new Wait.Condition() {@Overridepublic boolean isSatisified() throws Exception {return 0 == coreQueue.getDeliveringCount();}}));}}"	Yes
762	"public class A {@Overridepublic void run() {if (portPublisher == null) {log.info(""here"");}if (portPublisher != null && portPublisher.isConnected()) {connectLight.setIcon(Util.getImageIcon(""green.png""));ports.setEnabled(false);connect.setText(""disconnect"");ports.setSelectedItem(portPublisher.getPortName());} else {connectLight.setIcon(Util.getImageIcon(""red.png""));ports.setEnabled(true);connect.setText(""connect"");}}}"	No
763	public class A {protected void printSummary(Message message, long batchId, int size) {long memsize = 0;for (Entry entry : message.getEntries()) {memsize += entry.getHeader().getEventLength();}String startPosition = null;String endPosition = null;if (!CollectionUtils.isEmpty(message.getEntries())) {startPosition = buildPositionForDump(message.getEntries().get(0));endPosition = buildPositionForDump(message.getEntries().get(message.getEntries().size() - 1));}SimpleDateFormat format = new SimpleDateFormat(DATE_FORMAT);}}	Yes
764	public class A {@Overridepublic VolumeInstance getInstance(VolumeOrder volumeOrder, CloudStackUser cloudStackUser)throws FogbowException {LOGGER.info(String.format(Messages.Log.GETTING_INSTANCE_S, volumeOrder.getInstanceId()));GetVolumeRequest request =new GetVolumeRequest.Builder().id(volumeOrder.getInstanceId()).build(this.cloudStackUrl);return doGetInstance(request, cloudStackUser);}}	No
765	public class A {public static void aggiornaEsecuzione(BDConfigWrapper configWrapper, String codBatch)throws ServiceException {if (GovpayConfig.getInstance().getClusterId() == null) {return;}BatchBD batchBD = null;try {batchBD = new BatchBD(configWrapper);batchBD.setupConnection(configWrapper.getTransactionID());batchBD.setAutoCommit(false);batchBD.enableSelectForUpdate();batchBD.setAtomica(false);Batch batch = getRunningBatch(batchBD, codBatch);if (batch != null && GovpayConfig.getInstance().getClusterId() == batch.getNodo()) {batch.setAggiornamento(new Date());batchBD.update(batch);batchBD.commit();return;}} catch (NotFoundException e) {return;} finally {if (batchBD != null) {try {batchBD.disableSelectForUpdate();} catch (ServiceException e) {}try {batchBD.setAutoCommit(true);} catch (ServiceException e) {}batchBD.closeConnection();}}}}	Yes
766	"public class A {public void focus(String locator) {log.info(""Entering: focus"");try {super.focus(locator);} catch (Throwable t) {try {waitForElementToBeVisible(locator, Constants.DEFAULT_TIMEOUT);} catch (Throwable e) {e.printStackTrace();}super.focus(locator);}}}"	No
767	"public class A {@Overridepublic void loadJarsFromWorkingDirectory() {logger.debug(""Loading jars from Working Directory"");Map<String, DeployedJar> latestVersionOfJarsOnDisk = jarDeployer.getLatestVersionOfJarsOnDisk();try {List<Deployment> deploymentList = new LinkedList<>();for (Map.Entry<String, DeployedJar> entry : latestVersionOfJarsOnDisk.entrySet()) {DeployedJar deployedJar = entry.getValue();jarDeployer.registerNewVersions(entry.getKey(), deployedJar);logger.debug(""Deploying DeployedJar: {} from working directory"", deployedJar);Deployment deployment = createDeployment(deployedJar);deploymentList.add(deployment);deployments.put(deployment.getDeploymentName(), deployment);}for (Deployment deployment : deploymentList) {functionToFileTracker.registerFunctionsFromFile(deployment.getDeploymentName(), deployment.getFile());}} catch (ClassNotFoundException | IOException e) {logger.error(e);throw new RuntimeException(e);} finally {flushCaches();}}}"	No
768	"public class A {@Testpublic void test14ReadRead() {test09WriteCreate();EntityUtils.filterAndCheck(serviceRead.things(), """", THINGS);}}"	Yes
769	public class A {@Overridepublic void deleteInstance(PublicIpOrder publicIpOrder, CloudStackUser cloudStackUser)throws FogbowException {doDeleteInstance(publicIpOrder, cloudStackUser);}}	Yes
770	"public class A {private void connect() {@Nullable OpenThermGatewayConfiguration conf = config;explicitDisconnect = false;if (connecting) {return;}disconnect();if (conf != null) {logger.debug(""Starting OpenTherm Gateway connector"");connector = new OpenThermGatewaySocketConnector(this, conf.ipaddress, conf.port);Thread thread = new Thread(connector, ""OpenTherm Gateway Binding - socket listener thread"");thread.setDaemon(true);thread.start();logger.debug(""OpenTherm Gateway connector started"");}}}"	Yes
771	"public class A {@Overridepublic void onTccTransactionEnded(GrpcTccTransactionEndedEvent request, StreamObserver<GrpcAck> responseObserver) {LOG.info(""Received transaction end event, global tx id: {}"", request.getGlobalTxId());events.offer(request);sleep();responseObserver.onNext(ALLOW);responseObserver.onCompleted();}}"	No
772	"public class A {@Overridepublic void txStarted(String id) {logDebug(""New transaction '{0}' started by ModeShape..."", id);String activeTx = TransactionsHolder.activeTransaction();if (activeTx != null && !activeTx.equals(id)) {}TransactionsHolder.setActiveTxId(id);connectionForActiveTx();}}"	Yes
773	"public class A {@POST@Path(""clearMetadataCache"")@Produces(APPLICATION_JSON)@ApiOperation(value = ""Clear assignments metadata cache..."")@Timedpublic Response clearMetadataCache(@HeaderParam(AUTHORIZATION) @ApiParam(value = EXAMPLE_AUTHORIZATION_HEADER, required = true)final String authorizationHeader) {try {UserInfo.Username userName = authorization.getUser(authorizationHeader);authorization.checkSuperAdmin(userName);boolean result = Boolean.TRUE;try {assignments.clearMetadataCache();} catch (Exception e) {LOGGER.error(""Exception occurred while clearing assignments metadata cache..."", e);result = Boolean.FALSE;}return httpHeader.headers().entity(result).build();} catch (Exception exception) {LOGGER.error(""clearMetadataCache failed with error:"", exception);throw exception;}}}"	No
774	"public class A {private String generateConsumerInfo(final SystemRequestDTO consumer, final CloudRequestDTO consumerCloud) {logger.debug(""generateConsumerInfo started..."");final StringBuilder sb = new StringBuilder(consumer.getSystemName());if (consumerCloud != null) {sb.append(DOT).append(consumerCloud.getName().trim()).append(DOT).append(consumerCloud.getOperator().trim());} else {if (Utilities.isEmpty(ownCloudName)) {initOwnCloudInfo();}sb.append(DOT).append(ownCloudName).append(DOT).append(ownCloudOperator);}return sb.toString().toLowerCase();}}"	No
775	"public class A {public static void main(String[] args) {Main m = new Main();try {m.parseArgs(args);m.configure();long start = System.nanoTime();m.process();long end = System.nanoTime();} catch (Exception x) {logger.log(Level.SEVERE, ""Failed to run"", x);} finally {m.shutdown();System.exit(0);}}}"	Yes
776	public class A {@Overridepublic void end(final Xid xid, final int flags) throws XAException {XAResource xaResource = getDelegate(false);if (ActiveMQXARecoveryLogger.LOGGER.isDebugEnabled()) {}try {xaResource.end(xid, flags);} catch (XAException e) {throw check(e);}}}	Yes
777	"public class A {public ContentRenderizationInfo getBaseRenderizationInfo(PublicContentAuthorizationInfo authInfo,String contentId,long modelId,String langCode,UserDetails currentUser,RequestContext reqCtx) {ContentRenderizationInfo renderInfo = null;try {List<Group> userGroups =(null != currentUser)? this.getAuthorizationManager().getUserGroups(currentUser): new ArrayList<>();if (authInfo.isUserAllowed(userGroups)) {Content contentToRender = this.getContentManager().loadContent(contentId, true);String renderedContent =this.buildRenderedContent(contentToRender, modelId, langCode, reqCtx);if (null != renderedContent && renderedContent.trim().length() > 0) {List<AttributeRole> roles = this.getContentManager().getAttributeRoles();renderInfo =new ContentRenderizationInfo(contentToRender, renderedContent, modelId, langCode, roles);}}} catch (Throwable t) {_logger.error(""Error while rendering content {}"", contentId, t);return null;}return renderInfo;}}"	No
778	"public class A {@Overridepublic List<Map<String, Object>> getQualysDetail(String resourceId) throws DataException {Map<String, Object> mustFilter = new HashMap<>();mustFilter.put(AssetConstants.INSTANCEID_KEYWORD, resourceId);try {return esRepository.getDataFromES(AssetConstants.AWS_EC2,Constants.QUALYS_INFO,mustFilter,null,null,Arrays.asList(""lastVulnScan"", ""totalMemory"", ""account.list.hostAssetAccount.username""),null);} catch (Exception e) {LOGGER.error(""Exception in getQualysDetail "", e);throw new DataException();}}}"	No
779	public class A {public void explicitlyActivate(String profileId) {if (!activatedIds.contains(profileId)) {activatedIds.add(profileId);}}}	Yes
780	"public class A {private void upgrade(UAVHttpMessage data) {Map<String, String> upgradeInfo = data.getRequest();String rootDir = this.getConfigManager().getContext(IConfigurationManager.ROOT);String profileName = this.getConfigManager().getContext(IConfigurationManager.PROFILENAME);String upgrade_profile = null;if (profileName.contains(""pro"")) {upgrade_profile = ""upgrade_pro"";} else if (profileName.contains(""test"")) {upgrade_profile = ""upgrade_test"";} else {upgrade_profile = ""upgrade"";}StringBuffer sbf =new StringBuffer().append(""cd "").append(Paths.get(rootDir, ""bin"").toString());if (JVMToolHelper.isWindows()) {sbf.append("" && wscript start_upgrade.vbs "");} else {sbf.append("" && sh start_upgrade.sh "");}sbf.append(upgrade_profile + "" "");if (JVMToolHelper.isWindows()) {sbf.append(JSONHelper.toString(upgradeInfo).replace(""\"""", ""'""));} else {sbf.append(""\"""" + JSONHelper.toString(upgradeInfo).replace(""\"""", ""'"") + ""\"""");}final String cmd = sbf.toString();if (log.isTraceEnable()) {log.info(this, ""Will execute cmd: "" + cmd);}Thread thread =new Thread(new Runnable() {@Overridepublic void run() {try {if (JVMToolHelper.isWindows()) {RuntimeHelper.exec(5000, ""cmd.exe"", ""/c"", cmd);} else {RuntimeHelper.exec(5000, ""sh"", ""-c"", cmd);}} catch (Exception e) {e.printStackTrace();return;}}});thread.start();data.putResponse(""rs"", ""OK"");}}"	No
781	"public class A {private void createTables(List<String> tableClassNames,ConnectionSource connectionSource,DataSourceInstallationReport schemaReport)throws ApsSystemException {try {List<String> tables = schemaReport.getDataSourceTables().get(this.getDatabaseName());if (null == tables) {tables = new ArrayList<String>();schemaReport.getDataSourceTables().put(this.getDatabaseName(), tables);}for (int i = 0; i < tableClassNames.size(); i++) {String tableClassName = tableClassNames.get(i);Class tableClass =Class.forName(tableClassName, true, Thread.currentThread().getContextClassLoader());String tableName = getTableName(tableClass);if (tables.contains(tableName)) {continue;}try {System.out.println(""|   ( ok )  "" + this.getDatabaseName() + ""."" + tableName);this.createTable(tableClass, connectionSource);tables.add(tableName);} catch (Throwable t) {schemaReport.getDatabaseStatus().put(this.getDatabaseName(), SystemInstallationReport.Status.INCOMPLETE);String message =""Error creating table ""+ this.getDatabaseName()+ ""/""+ tableClassName+ "" - ""+ t.getMessage();_logger.error(""Error creating table {}/{}"", this.getDatabaseName(), tableClassName, t);throw new ApsSystemException(message, t);}}} catch (Throwable t) {schemaReport.getDatabaseStatus().put(this.getDatabaseName(), SystemInstallationReport.Status.INCOMPLETE);_logger.error(""Error on setup Database - {}"", this.getDatabaseName(), t);throw new ApsSystemException(""Error on setup Database"", t);}}}"	No
782	"public class A {protected void start() {if (started) {throw new IllegalStateException(""Filter already started. Make sure to specify just keycloakConfigResolver or""+ "" keycloakConfigFile but not both"");}if (keycloakConfigResolverClass != null) {Class<? extends KeycloakConfigResolver> resolverClass = loadResolverClass();try {KeycloakConfigResolver resolver = resolverClass.newInstance();log.info(""Using "" + resolver + "" to resolve Keycloak configuration on a per-request basis."");this.deploymentContext = new AdapterDeploymentContext(resolver);} catch (Exception e) {throw new RuntimeException(""Unable to instantiate resolver "" + resolverClass);}} else {if (keycloakConfigFile == null) {throw new IllegalArgumentException(""You need to specify either keycloakConfigResolverClass or keycloakConfigFile in""+ "" configuration"");}InputStream is = loadKeycloakConfigFile();KeycloakDeployment kd = KeycloakDeploymentBuilder.build(is);deploymentContext = new AdapterDeploymentContext(kd);}nodesRegistrationManagement = new NodesRegistrationManagement();started = true;}}"	Yes
783	public class A {private void shutdownVm() {VcContext.inVcSessionDo(new VcSession<Void>() {@Overrideprotected Void body() throws Exception {if (vm.isPoweredOn()&& !vm.shutdownGuest(Constants.VM_FAST_SHUTDOWN_WAITING_SEC * 1000)) {vm.powerOff();}return null;}@Overrideprotected boolean isTaskSession() {return true;}});}}	Yes
784	"public class A {private synchronized void checkForUpdates() {if (!forceReload&& (reloadCheckIntervalInMs < 0|| System.currentTimeMillis() < (lastReloadCheck + reloadCheckIntervalInMs))) {LOG.debug(""reload not forced and reload check disabled or check interval not yet elapsed"");return;}lastReloadCheck = System.currentTimeMillis();if (forceReload|| providers.isEmpty()|| providers.stream().anyMatch(ConfigurationProviderState::shouldReload)) {reload();forceReload = false;}}}"	No
785	public class A {public void consume() throws InterruptedException {Item item = queue.take();}}	Yes
786	"public class A {private void setupLoginTty() throws Exception {String setupTtyScriptName =Configuration.getString(Constants.SERENGETI_SETUP_LOGIN_TTY_SCRIPT,Constants.SERENGETI_DEFAULT_SETUP_LOGIN_TTY_SCRIPT);String setupTtyScript = getScriptName(setupTtyScriptName);String cmd = sudoCmd + "" "" + setupTtyScript;String action = ""Setup login tty for "" + nodeIP;SSHUtil sshUtil = new SSHUtil();String errMsg = null;for (int i = 0; i < Constants.SET_PASSWORD_MAX_RETRY_TIMES; i++) {try {if (sshUtil.execCmd(sshUser, privateKeyFile, nodeIP, sshPort, cmd, null, null)) {return;}} catch (JSchException e) {if (errMsg == null) {errMsg = e.getMessage();}}try {Thread.sleep(3000);} catch (InterruptedException e1) {}}throw SetPasswordException.FAIL_TO_SETUP_LOGIN_TTY(nodeIP, errMsg);}}"	Yes
787	"public class A {public void testLoadPolicy() {PolicyFactory factory = PolicyFactory.getInstance();Policies[] policies = PolicyFactory.Policies.values();for (Policies policy : policies) {if (policy.toString().contains(""CADES"") || policy.toString().contains(""PADES"")) {logger.info(factory.loadPolicy(policy).toString());}}}}"	No
788	"public class A {private IncompleteType readArrayParameterType(SpaceSystem spaceSystem) throws XMLStreamException {log.trace(XTCE_ARRAY_PARAMETER_TYPE);StartElement element = checkStartElementPreconditions();String name = readMandatoryAttribute(""name"", element);ArrayParameterType.Builder typeBuilder = new ArrayParameterType.Builder().setName(name);IncompleteType incompleteType = new IncompleteType(spaceSystem, typeBuilder);int dim;if (hasAttribute(""numberOfDimensions"", element)) {dim = readIntAttribute(""numberOfDimensions"", element);typeBuilder.setNumberOfDimensions(dim);} else {dim = -1;}String refName = readMandatoryAttribute(""arrayTypeRef"", xmlEvent.asStartElement());NameReference nr =new NameReference(refName, Type.PARAMETER_TYPE).addResolvedAction(nd -> {typeBuilder.setElementType((ParameterType) nd);});incompleteType.addReference(nr);spaceSystem.addUnresolvedReference(nr);while (true) {xmlEvent = xmlEventReader.nextEvent();if (isNamedItemProperty()) {readNamedItemProperty(typeBuilder);} else if (isStartElementWithName(XTCE_DIMENSION_LIST)) {List<IntegerValue> dimList = readDimensionList(spaceSystem);dim = dimList.size();typeBuilder.setSize(dimList);} else if (isEndElementWithName(XTCE_ARRAY_PARAMETER_TYPE)) {if (dim == -1) {throw new XMLStreamException(""Neither numberOfDimensions (XTCE 1.1) attribute nor ""+ XTCE_DIMENSION_LIST+ "" (XTCE 1.2) element defined for the ArrayParameter ""+ name);}return incompleteType;} else {logUnknown();}}}}"	No
789	"public class A {@SuppressWarnings(""PMD.AvoidCatchingThrowable"")private void exec(final Deck deck) throws IOException {final Collection<String> failure = new LinkedList<>();for (final Agent agent : this.agents) {try {deck.exec(agent);} catch (final Throwable ex) {failure.add(agent.getClass().getSimpleName());}}if (failure.isEmpty()) {deck.events().create(""success"");} else {deck.events().create(String.format(""failed: %s"", failure));}}}"	Yes
790	public class A {@Overrideprotected void entityDeleted(FlowableEngineEntityEvent event) {JobEntity jobEntity = getJobEntity(event);if (jobEntity == null) {return;}if (hasJobEntityExpired(jobEntity)) {LOGGER.info(format(Messages.JOB_WITH_ID_AND_TASK_NAME_EXPIRED,jobEntity.getProcessInstanceId(),jobEntity.getElementName()));}}}	No
791	public class A {@Overridepublic void openEditorFor(Object o) throws PartInitException {TodoViewItem selection = (TodoViewItem) o;CnATreeElement element;try {element =CnAElementHome.getInstance().loadById(MassnahmenUmsetzung.TYPE_ID, selection.getDbId());openEditor(element.getId(), new BSIElementEditorInput(element), BSIElementEditorMultiPage.EDITOR_ID);} catch (CommandException e) {ExceptionUtil.log(e, Messages.EditorFactory_2);}}}	Yes
792	"public class A {@Overrideprotected void jumpToItem(int itemIndex) throws Exception {synchronized (lock) {page = itemIndex / pageSize;current = itemIndex % pageSize;}doJumpToPage(itemIndex);if (logger.isDebugEnabled()) {logger.debug(""Jumping to page "" + getPage() + "" and index "" + current);}}}"	No
793	"public class A {protected boolean checkTrackerOverlaps(MultiQueryTracker tracker) {Lock lock = myLock.readLock();lock.lock();try {List<MultiQueryTracker> list =myFamilyToTrackerMap.get(tracker.getQuery().getDataModelCategory().getFamily());if (CollectionUtilities.hasContent(list)) {if (LOGGER.isTraceEnabled()) {LOGGER.trace(""Checking tracker overlaps for ""+ tracker+ "" for ""+ list.size()+ "" other trackers"");}for (int index = 0; index < list.size(); ++index) {MultiQueryTracker other = list.get(index);if (!other.isDone() && !tracker.equals(other)) {tracker.checkOverlap(other);if (!tracker.hasUnsatisfied()) {if (LOGGER.isTraceEnabled()) {}return true;}} else if (LOGGER.isTraceEnabled()) {LOGGER.trace(""Other tracker is done or equal: "" + other);}}} else {if (LOGGER.isTraceEnabled()) {}}} finally {lock.unlock();}return false;}}"	Yes
794	"public class A {public org.talend.mdm.webservice.WSStringArray getConceptsInDataCluster(org.talend.mdm.webservice.WSGetConceptsInDataCluster arg0) {LOG.info(""Executing operation getConceptsInDataCluster"");System.out.println(arg0);try {org.talend.mdm.webservice.WSStringArray _return = null;return _return;} catch (java.lang.Exception ex) {ex.printStackTrace();throw new RuntimeException(ex);}}}"	No
795	"public class A {@Overridepublic void commence(HttpServletRequest request,HttpServletResponse response,AuthenticationException authException)throws IOException, ServletException {String ajaxRequestHeader = request.getHeader(""X-Requested-With"");response.setHeader(""X-Frame-Options"", ""DENY"");if (""XMLHttpRequest"".equals(ajaxRequestHeader)) {response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);} else {LOG.debug(""redirecting to login page loginPath"" + loginPath);response.sendRedirect(loginPath);}}}"	No
796	public class A {public static WebSocketServer getInstance(final int fallbackPort) {if (instance != null) {return instance;}return createInstance(fallbackPort);}}	Yes
797	"public class A {public <T extends YamcsService> void addGlobalService(String name, Class<T> serviceClass, YConfiguration args)throws ValidationException, InitException {for (ServiceWithConfig otherService : YAMCS.globalServiceList) {if (otherService.getName().equals(name)) {throw new ConfigurationException(String.format(""A service named '%s' already exists"", name));}}ServiceWithConfig swc = createService(null, serviceClass.getName(), name, args, true);swc.service.init(null, name, swc.args);YAMCS.globalServiceList.add(swc);ManagementService managementService = ManagementService.getInstance();managementService.registerService(null, name, swc.service);}}"	Yes
798	public class A {private SimpleFeatureCollection readGmlFile(File file, CoordinateReferenceSystem targetCRS)throws IOException, ProjectionException {try {return readGmlFile(file, targetCRS, Version.GML3);} catch (IOException | RuntimeException e) {}return readGmlFile(file, targetCRS, Version.GML2);}}	Yes
799	"public class A {@Override@Transactionalpublic void deleteAlert(Alert alert) {requireNotDisposed();requireArgument(alert != null, ""Alert cannot be null."");EntityManager em = _emProvider.get();deleteEntity(em, alert);em.flush();}}"	Yes
800	public class A {private ComponentConfiguration getComponentDefinition(String pid) {final Tocd ocd = this.ocds.get(pid);Map<String, Object> defaultProperties = null;if (ocd != null) {try {defaultProperties = ComponentUtil.getDefaultProperties(ocd, this.ctx);} catch (Exception e) {}}return new ComponentConfigurationImpl(pid, ocd, defaultProperties != null ? defaultProperties : new HashMap<>());}}	Yes
801	"public class A {protected String retrieveKieServerId(KieServerState kieServerState) {String kssServerId = null;try {kssServerId = kieServerState.getConfiguration().getConfigItemValue(KIE_SERVER_ID);} catch (Exception e) {}if (kssServerId == null || kssServerId.length() == 0) {throw new IllegalArgumentException(""Invalid KieServerId: Can not be null or empty."");}return kssServerId;}}"	Yes
802	"public class A {private static DockstoreYaml12 convert11To12(final DockstoreYaml11 dockstoreYaml11)throws DockstoreYamlException {final DockstoreYaml12 dockstoreYaml12 = new DockstoreYaml12();dockstoreYaml12.setVersion(Version.ONE_TWO.version);final Service12 service12 = new Service12();try {final YamlService11 service11 = dockstoreYaml11.getService();BeanUtils.copyProperties(service12, service11);final DescriptorLanguageSubclass descriptorLanguageSubclass =DescriptorLanguageSubclass.convertShortNameStringToEnum(service11.getType());service12.setSubclass(descriptorLanguageSubclass);dockstoreYaml12.setService(service12);validate(dockstoreYaml12);return dockstoreYaml12;} catch (UnsupportedOperationException | InvocationTargetException | IllegalAccessException e) {final String msg = ""Error converting ; "" + e.getMessage();LOG.error(msg, e);throw new DockstoreYamlException(msg);}}}"	No
803	public class A {@Overridepublic void dispose() {if (controlApiKeyJob != null && !controlApiKeyJob.isCancelled()) {controlApiKeyJob.cancel(true);controlApiKeyJob = null;}}}	Yes
804	"public class A {void type() {if (verbose) {System.out.print(""\t"");}int numExon = 1;for (Gene g : genome.getGenes()) {CountByType count = new CountByType();for (Transcript tr : g) for (Exon e : tr) count.inc(key(e));int countTr = g.numChilds();for (Transcript tr : g) {for (Exon e : tr) {if (verbose) Gpr.showMark(numExon++, SHOW_EVERY, ""\t"");String eKey = key(e);int countEx = (int) count.get(eKey);if (countEx == countTr) type(e, Exon.ExonSpliceType.RETAINED);else {if (isAlt3ss(e, g)) type(e, Exon.ExonSpliceType.ALTTENATIVE_3SS);else if (isAlt5ss(e, g)) type(e, Exon.ExonSpliceType.ALTTENATIVE_5SS);else if (tr.numChilds() > 1) {if (e.getRank() == 1) type(e, Exon.ExonSpliceType.ALTTENATIVE_PROMOMOTER);else if (e.getRank() == tr.numChilds())type(e, Exon.ExonSpliceType.ALTTENATIVE_POLY_A);else type(e, Exon.ExonSpliceType.SKIPPED);}}}}}if (verbose) {System.err.println("""");System.out.print(""\t"");}numExon = 1;for (Gene g : genome.getGenes()) {for (Transcript tr : g) {if (tr.numChilds() < MAX_EXONS) {for (Exon e : tr) {if (verbose) Gpr.showMark(numExon++, SHOW_EVERY, ""\t"");ExonSpliceType type = typeByExon.get(e);if (type == ExonSpliceType.SKIPPED) {if (isMutEx(e, g)) type(e, Exon.ExonSpliceType.MUTUALLY_EXCLUSIVE);}}} else {System.err.println("""");}}}}}"	Yes
805	"public class A {public Map<String, Object> refreshToken(final String refreshToken) {String requestBodyUrl = StringUtils.EMPTY;try {requestBodyUrl =""grant_type=refresh_token&refresh_token="".concat(URLEncoder.encode(refreshToken, ""UTF-8""));return generateAccessToken(requestBodyUrl, oauth2ClientId);} catch (UnsupportedEncodingException exception) {log.error(""Exception in loginProxy: "" + exception.getMessage());return response(false, ""Unexpected Error Occured!!!"");}}}"	No
806	public class A {@Overrideprotected @Nullable Item toElement(String itemName, PersistedItem persistedItem) {Item item = null;if (GroupItem.TYPE.equals(persistedItem.itemType)) {String baseItemType = persistedItem.baseItemType;if (baseItemType != null) {Item baseItem = createItem(baseItemType, itemName);if (persistedItem.functionName != null) {GroupFunction function = getGroupFunction(persistedItem, baseItem);item = new GroupItem(itemName, baseItem, function);} else {item = new GroupItem(itemName, baseItem, new GroupFunction.Equality());}} else {item = new GroupItem(itemName);}} else {item = createItem(persistedItem.itemType, itemName);}if (item != null && item instanceof GenericItem) {configureItem(persistedItem, (GenericItem) item);}if (item == null) {failedToCreate.put(itemName, persistedItem);}return item;}}	Yes
807	"public class A {protected void assertBroker(InfraConfiguration brokerConfig) {List<Pod> brokerPods = TestUtils.listBrokerPods(kubernetes, exampleAddressSpace);assertEquals(1, brokerPods.size());Pod broker = brokerPods.stream().findFirst().get();ResourceRequirements resources =broker.getSpec().getContainers().stream().filter(container -> container.getName().equals(""broker"")).findFirst().map(Container::getResources).get();assertEquals(new Quantity(brokerConfig.getMemory()),resources.getLimits().get(""memory""),""Broker memory limit incorrect"");assertEquals(new Quantity(brokerConfig.getMemory()),resources.getRequests().get(""memory""),""Broker memory requests incorrect"");if (brokerConfig.getCpu() != null) {assertEquals(new Quantity(brokerConfig.getCpu()),resources.getLimits().get(""cpu""),""Broker cpu limit incorrect"");assertEquals(new Quantity(brokerConfig.getCpu()),resources.getRequests().get(""cpu""),""Broker cpu requests incorrect"");}if (brokerConfig.getBrokerStorage() != null) {PersistentVolumeClaim brokerVolumeClaim = getBrokerPVCData(broker);assertEquals(new Quantity(brokerConfig.getBrokerStorage()),brokerVolumeClaim.getSpec().getResources().getRequests().get(""storage""),""Broker data storage request incorrect"");}if (brokerConfig.getBrokerJavaOpts() != null) {brokerPods.forEach(pod -> {ExecutionResultData result =KubeCMDClient.runOnCluster(""exec"",pod.getMetadata().getName(),""-n"",pod.getMetadata().getNamespace(),""ps"",""auxww"");assertTrue(result.getRetCode(), result.getStdOut());assertTrue(result.getStdOut().contains(brokerConfig.getBrokerJavaOpts()),""Unable to find expected java opts in process argument list: ""+ result.getStdOut());});}if (brokerConfig.getTemplateSpec() != null) {assertTemplateSpec(broker, brokerConfig.getTemplateSpec());}}}"	Yes
808	public class A {public QueryEndpointsResponse queryEndpoints(QueryEndpoints parameters) {return null;}}	Yes
809	"public class A {public static String getLabel(PropertyAccessor accessor, TextProvider textProvider) {String label;if (accessor.isAnnotationPresent(Label.class)) {String text = accessor.getAnnotation(Label.class).value();logger.debug(""Label annotation present with value: {}"", text);label = textProvider.getText(text);} else {label = Util.guessToWords(accessor.getName());}return label;}}"	Yes
810	"public class A {@Overridepublic boolean isValidDocumentIndex(final String indexName, final String id, final String json) {GetRequest getRequest = new GetRequest(indexName, id);GetResponse getResponse;try (final RestHighLevelClient restHighLevelClient =elasticsearchRestHighLevelClientFactory.getRestHighLevelClient()) {getResponse = restHighLevelClient.get(getRequest, RequestOptions.DEFAULT);} catch (final IOException ioException) {throw new ElasticsearchRestClientException(""Caught IOException while attempting to use the ElasticsearchRestHighLevelClient."",ioException);}final String jsonStringFromIndex = getResponse.getSourceAsString();return StringUtils.isNotEmpty(jsonStringFromIndex) && jsonStringFromIndex.equals(json);}}"	Yes
811	"public class A {private void publish(List<MqttMessage> messages, int subscriberQos) throws Exception {Address dest =new AddressBuilder().withNewMetadata().withNamespace(getSharedAddressSpace().getMetadata().getNamespace()).withName(AddressUtils.generateAddressMetadataName(getSharedAddressSpace(), MYTOPIC)).endMetadata().withNewSpec().withType(""topic"").withAddress(MYTOPIC).withPlan(topicPlan()).endSpec().build();resourcesManager.setAddresses(dest);Builder clientBuilder =new MqttClientFactory.Builder().usernameAndPassword(defaultCredentials).mqttConnectionOptions(options -> {options.setConnectionTimeout(options.getConnectionTimeout() * 2);options.setAutomaticReconnect(true);});customizeClient(clientBuilder);try (IMqttClient client = clientBuilder.create()) {client.connect();List<CompletableFuture<MqttMessage>> receiveFutures =MqttUtils.subscribeAndReceiveMessages(client, dest.getSpec().getAddress(), messages.size(), subscriberQos);List<CompletableFuture<Void>> publishFutures =MqttUtils.publish(client, dest.getSpec().getAddress(), messages);int publishCount = MqttUtils.awaitAndReturnCode(publishFutures, 1, TimeUnit.MINUTES);assertThat(""Incorrect count of messages published"", publishCount, is(messages.size()));int receivedCount = MqttUtils.awaitAndReturnCode(receiveFutures, 2, TimeUnit.MINUTES);assertThat(""Incorrect count of messages received"", receivedCount, is(messages.size()));}}}"	Yes
812	public class A {@Overridepublic synchronized void run() {try {syncContext(true);while (true) {processConnectors();this.wait(interval);syncContext(false);}} catch (InterruptedException ex) {}}}	Yes
813	"public class A {@Test@Order(order = 6)public void testCheckUserNotification() throws Exception {NotificationsEntity notification = NotificationsDao.get().selectOnKey(new Long(1));Assert.assertNotNull(notification);Assert.assertEquals(MailLogic.NOTIFY_INSERT_KNOWLEDGE, notification.getTitle());UsersEntity user = UsersDao.get().selectOnUserKey(""integration-test-user-01"");UserNotificationsEntity userNotification =UserNotificationsDao.get().selectOnKey(notification.getNo(), user.getUserId());Assert.assertNotNull(userNotification);user = UsersDao.get().selectOnUserKey(""integration-test-user-03"");userNotification =UserNotificationsDao.get().selectOnKey(notification.getNo(), user.getUserId());Assert.assertNotNull(userNotification);user = UsersDao.get().selectOnUserKey(""integration-test-user-02"");userNotification =UserNotificationsDao.get().selectOnKey(notification.getNo(), user.getUserId());Assert.assertNull(userNotification);int count = MailsDao.get().selectCountAll();Assert.assertEquals(2, count);}}"	Yes
814	"public class A {public void onComplete(java.lang.Boolean o) {deleteUserComputeResourcePreference_result result =new deleteUserComputeResourcePreference_result();result.success = o;result.setSuccessIsSet(true);try {fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);} catch (org.apache.thrift.transport.TTransportException e) {fb.close();} catch (java.lang.Exception e) {_LOGGER.error(""Exception writing to internal frame buffer"", e);onError(e);}}}"	Yes
815	public class A {public Set<ADAPTER_API_LEVEL> getAdapterAPILevelsByServiceName(String serviceName) {Set<ADAPTER_API_LEVEL> apiLevels = null;try {String sHomeCommunityId =PropertyAccessor.getInstance().getProperty(NhincConstants.GATEWAY_PROPERTY_FILE, NhincConstants.HOME_COMMUNITY_ID_PROPERTY);OrganizationType org =InternalExchangeManager.getInstance().getOrganization(sHomeCommunityId);apiLevels = getAPILevelsFromOrganization(org, serviceName);} catch (ExchangeManagerException | PropertyAccessException ex) {}return apiLevels;}}	Yes
816	"public class A {@ApiOperation(value = ""Returns all KIE Server templates"", response = ServerTemplateList.class)@ApiResponses(value = {@ApiResponse(code = 200,message = ""KIE Server templates"",examples =@Example(value = {@ExampleProperty(mediaType = JSON, value = SERVER_TEMPLATE_LIST_JSON),@ExampleProperty(mediaType = XML, value = SERVER_TEMPLATE_LIST_XML)})),@ApiResponse(code = 404, message = ""KIE Server template not found""),@ApiResponse(code = 400, message = ""Controller exception""),@ApiResponse(code = 500, message = ""Unexpected error"")})@GET@Path(""servers"")@Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@Consumes({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})public Response listServerTemplates(@Context HttpHeaders headers) {String contentType = getContentType(headers);try {logger.debug(""Received get server templates"");String response = marshal(contentType, specManagementService.listServerTemplates());return createCorrectVariant(response, headers, Response.Status.OK);} catch (KieServerControllerIllegalArgumentException e) {return createCorrectVariant(e.getMessage(), headers, Response.Status.NOT_FOUND);} catch (KieServerControllerException e) {return createCorrectVariant(REQUEST_FAILED_TOBE_PROCESSED + e.getMessage(), headers, Response.Status.BAD_REQUEST);} catch (Exception e) {logger.error(""Get server templates failed due to {}"", e.getMessage(), e);return createCorrectVariant(""Unknown error "" + e.getMessage(), headers, Response.Status.INTERNAL_SERVER_ERROR);}}}"	Yes
817	public class A {public static synchronized LogicalData getData(String dataId) {LogicalData retVal = DATA.get(dataId);if (retVal == null) {}return retVal;}}	Yes
818	"public class A {private void generateNamespaces(NS_PROJECT project, File outputDir, String basePackage)throws IOException {List<Namespace> usedNamespaces = new ArrayList<>();for (String s : namespaces) {if (""all"".equalsIgnoreCase(s)) {Collections.addAll(usedNamespaces, Namespace.values());break;}Namespace ns = null;if (project == NS_PROJECT.ND4J) {ns = Namespace.fromString(s);if (ns == null) {} else {usedNamespaces.add(ns);}} else {ns = Namespace.fromString(s);if (ns == null) {} else {usedNamespaces.add(ns);}}}int cnt = 0;for (int i = 0; i < usedNamespaces.size(); ++i) {Namespace ns = usedNamespaces.get(i);log.info(""Starting generation of namespace: {}"", ns);String javaClassName =project == NS_PROJECT.ND4J ? ns.javaClassName() : ns.javaSameDiffClassName();NamespaceOps ops = ns.getNamespace();String basePackagePath = basePackage.replace(""."", ""/"") + ""/ops/"";if (StringUtils.isNotEmpty(docsdir)) {DocsGenerator.generateDocs(i, ops, docsdir, basePackage);}if (outputDir != null) {File outputPath = new File(outputDir, basePackagePath + javaClassName + "".java"");if (NS_PROJECT.ND4J == project)Nd4jNamespaceGenerator.generate(ops, null, outputDir, javaClassName, basePackage, docsdir);elseNd4jNamespaceGenerator.generate(ops,null,outputDir,javaClassName,basePackage,""org.nd4j.autodiff.samediff.ops.SDOps"",docsdir);}++cnt;}log.info(""Complete - generated {} namespaces"", cnt);}}"	Yes
819	"public class A {public static List<PrincipalName> cryptoRetrieveX509Sans(List<Certificate> certificates)throws KrbException {List<PrincipalName> principalNames = new ArrayList<>();for (Certificate cert : certificates) {LOG.info(""Looking for SANs in cert: "" + cert.getTBSCertificate().getSubject());}return principalNames;}}"	No
820	"public class A {public BoxFolder copyFolder(String folderId, String destinationFolderId, String newName) {try {LOG.debug(""Copying folder(id={}) to destination_folder(id={}) {}"",folderId,destinationFolderId,newName == null ? """" : "" with new name '"" + newName + ""'"");if (folderId == null) {throw new IllegalArgumentException(""Parameter 'folderId' can not be null"");}if (destinationFolderId == null) {throw new IllegalArgumentException(""Parameter 'destinationFolderId' can not be null"");}BoxFolder folderToCopy = new BoxFolder(boxConnection, folderId);BoxFolder destinationFolder = new BoxFolder(boxConnection, destinationFolderId);if (newName == null) {return folderToCopy.copy(destinationFolder).getResource();} else {return folderToCopy.copy(destinationFolder, newName).getResource();}} catch (BoxAPIException e) {throw new RuntimeException(String.format(""Box API returned the error code %d%n%n%s"", e.getResponseCode(), e.getResponse()),e);}}}"	No
821	"public class A {private static long getMaxLifetimeFromProperty(CacheInfo cacheInfo) {String lifetimeProp = cacheInfo.getParams().get(""back-expiry"");if (lifetimeProp != null) {if (""0"".equals(lifetimeProp)) {return -1L;}long factor = 1;if (lifetimeProp.endsWith(""m"")) {factor = JiveConstants.MINUTE;} else if (lifetimeProp.endsWith(""h"")) {factor = JiveConstants.HOUR;} else if (lifetimeProp.endsWith(""d"")) {factor = JiveConstants.DAY;}try {return Long.parseLong(lifetimeProp.substring(0, lifetimeProp.length() - 1)) * factor;} catch (NumberFormatException nfe) {}}return CacheFactory.DEFAULT_MAX_CACHE_LIFETIME;}}"	Yes
822	public class A {public void startController() {if (!conf.shouldStartController()) {return;}ControllerConf conf = getControllerConf();controllerStarter = new ControllerStarter(conf);controllerStarter.start();}}	Yes
823	"public class A {private void truncate(final int noOfRecordsToKeep) {final String tableName = this.wireRecordStoreOptions.getTableName();final String sqlTableName = this.dbHelper.sanitizeSqlTableAndColumnName(tableName);try {this.dbHelper.withConnection(c -> {final String catalog = c.getCatalog();final DatabaseMetaData dbMetaData = c.getMetaData();try (final ResultSet rsTbls =dbMetaData.getTables(catalog, null, tableName, TABLE_TYPE)) {if (rsTbls.next()) {if (noOfRecordsToKeep == 0) {this.dbHelper.execute(c, MessageFormat.format(SQL_TRUNCATE_TABLE, sqlTableName));} else {logger.info(""Partially emptying table {}"", sqlTableName);this.dbHelper.execute(c,MessageFormat.format(SQL_DELETE_RANGE_TABLE,sqlTableName,Integer.toString(noOfRecordsToKeep)));}}}return (Void) null;});} catch (final SQLException sqlException) {logger.error(""Error in truncating the table {}..."", sqlTableName, sqlException);}}}"	Yes
824	"public class A {@PostConstructprivate void setupDataSources() {for (DataSourceConfigLoader.MongoConfigProperty instance : configLoader.getMongoInstances()) {MongoClientInitializer connection = new MongoClientInitializer(instance.getConnectionUrl());mongoConnections.add(connection);for (DataSourceConfigLoader.DataSourceConfigProperty dsConfig : instance.getSources()) {DataSourceWrapper dsWrapper = new DataSourceWrapper();if (dsConfig.getRecordDbName().isPresent()) {dsWrapper.setRecordDao(new RecordDaoInitializer(connection, dsConfig.getRecordDbName().get()));LOG.info(""Registered RecordDao for data source: {}, record-dbName={}"",dsConfig.getId(),dsConfig.getRecordDbName().get());} else {LOG.info(""No record db configured for data source: {}"", dsConfig.getId());}if (dsConfig.getRedirectDbName().isPresent()) {dsWrapper.setRedirectDb(new RedirectDaoInitializer(connection, dsConfig.getRedirectDbName().get()));LOG.info(""Registered RecordRedirectDao for data source: {}, redirect-dbName={}"",dsConfig.getId(),dsConfig.getRedirectDbName().get());} else {LOG.info(""No redirect db configured for data source: {}"", dsConfig.getId());}if (dsWrapper.isConfigured()) {dataSourceById.put(dsConfig.getId(), dsWrapper);if (StringUtils.isEmpty(defaultDataSourceId)) {defaultDataSourceId = dsConfig.getId();}}}}}}"	No
825	public class A {@Overridepublic void debug(final Object message, final Throwable t) {if (message != null) {getLogger().debug(String.valueOf(message), t);}}}	No
826	public class A {public static void info(Logger logger, String eventName, String format, Object arg) {}}	Yes
827	"public class A {public Object decode(CachedData d) {byte[] data = d.getData();Object rv = null;if ((d.getFlags() & COMPRESSED) != 0) {data = decompress(d.getData());}int flags = d.getFlags() & SPECIAL_MASK;if ((d.getFlags() & SERIALIZED) != 0 && data != null) {rv = deserialize(data);} else if (flags != 0 && data != null) {switch (flags) {case SPECIAL_BOOLEAN:rv = Boolean.valueOf(tu.decodeBoolean(data));break;case SPECIAL_INT:rv = Integer.valueOf(tu.decodeInt(data));break;case SPECIAL_LONG:rv = Long.valueOf(tu.decodeLong(data));break;case SPECIAL_DATE:rv = new Date(tu.decodeLong(data));break;case SPECIAL_BYTE:rv = Byte.valueOf(tu.decodeByte(data));break;case SPECIAL_FLOAT:rv = new Float(Float.intBitsToFloat(tu.decodeInt(data)));break;case SPECIAL_DOUBLE:rv = new Double(Double.longBitsToDouble(tu.decodeLong(data)));break;case SPECIAL_BYTEARRAY:rv = data;break;default:getLogger().warn(""Undecodeable with flags %x"", flags);}} else {rv = decodeString(data);}return rv;}}"	No
828	"public class A {public static long getQueryCount(String jobId, String checkPath) {String queryURL = getQueryURL(jobId, checkPath, defaultOps, defaultOps);HashSet<String> result =new JSONFetcher.SetLoader(queryURL).setContention(alertQueryTimeout, alertQueryRetries, alertQueryMinBackoff, alertQueryMaxBackoff).load();if (result == null || result.isEmpty()) {return 0;} else if (result.size() > 1) {}String raw = result.iterator().next();return Long.parseLong(QUERY_TRIM_PATTERN.matcher(raw).replaceAll(""""));}}"	Yes
829	"public class A {protected static void writeInfo(OutputStream stream, String info) {if (info != null) {try {stream.write(info.getBytes());stream.write("" "".getBytes());} catch (IOException e) {log.error(e, e);}}}}"	No
830	public class A {public void awaitUninterruptibly() {while (true) {try {await();return;} catch (final InterruptedException e) {}}}}	Yes
831	public class A {private void deleteControlFromTreeViewer(RisikoMassnahmenUmsetzung massnahme) {try {GefaehrdungsUmsetzung parent = (GefaehrdungsUmsetzung) massnahme.getParent();if (massnahme instanceof RisikoMassnahmenUmsetzung&& parent instanceof GefaehrdungsUmsetzung) {RemoveMassnahmeFromGefaherdung command =new RemoveMassnahmeFromGefaherdung(parent, massnahme);command = ServiceFactory.lookupCommandService().executeCommand(command);parent = command.getParent();parent.getChildren().remove(massnahme);GefaehrdungsBaumRoot baumElement = (GefaehrdungsBaumRoot) viewerScenario.getInput();baumElement.replaceChild(parent);viewerScenario.refresh();}} catch (Exception e) {LOG.error(e);}}}	No
832	"public class A {@ExceptionHandler(HttpMediaTypeNotAcceptableException.class)@ResponseStatus(value = HttpStatus.BAD_REQUEST)protected ErrorResponse handleHttpMediaTypeNotAcceptableExceptionException(HttpMediaTypeNotAcceptableException ex) {logger.debug(ExceptionUtils.getStackTrace(ex));return new ViewObjectErrorResponse(ErrorCode.INVALID_ARGUMENTS,new InvalidParameterView(""Invalid Media Request Type"",""required type is application/pdf"","""",Objects.toString(ex)));}}"	No
833	"public class A {protected List<KeyMessage<String, String>> startServerProduceConsumeTopics(Config config, DatumGenerator<String, String> datumGenerator, int howMany, int intervalMsec)throws InterruptedException {ProduceData produce =new ProduceData(datumGenerator, getKafkaBrokerPort(), INPUT_TOPIC, howMany, intervalMsec);List<KeyMessage<String, String>> keyMessages;try (CloseableIterator<KeyMessage<String, String>> data =new ConsumeData(UPDATE_TOPIC, getKafkaBrokerPort()).iterator();BatchLayer<?, ?, ?> batchLayer = new BatchLayer<>(config)) {batchLayer.start();sleepSeconds(3);log.info(""Starting consumer thread"");ConsumeTopicRunnable consumeInput = new ConsumeTopicRunnable(data);new Thread(LoggingCallable.log(consumeInput).asRunnable(), ""ConsumeInputThread"").start();consumeInput.awaitRun();log.info(""Producing data"");produce.start();int genIntervalSec = config.getInt(""oryx.batch.streaming.generation-interval-sec"");sleepSeconds(genIntervalSec);keyMessages = consumeInput.getKeyMessages();}return keyMessages;}}"	Yes
834	"public class A {@Overridepublic void heartbeat(JobHeartbeatPRequest request, StreamObserver<JobHeartbeatPResponse> responseObserver) {RpcUtils.call(LOG,(RpcUtils.RpcCallableThrowsIOException<JobHeartbeatPResponse>)() -> {List<TaskInfo> wireTaskInfoList = Lists.newArrayList();for (alluxio.grpc.JobInfo taskInfo : request.getTaskInfosList()) {try {wireTaskInfoList.add(new TaskInfo(taskInfo));} catch (IOException e) {}}JobWorkerHealth jobWorkerHealth = new JobWorkerHealth(request.getJobWorkerHealth());return JobHeartbeatPResponse.newBuilder().addAllCommands(mJobMaster.workerHeartbeat(jobWorkerHealth, wireTaskInfoList)).build();},""heartbeat"",""request=%s"",responseObserver,request);}}"	Yes
835	public class A {private long findInterval(final String dateFormat) {final long max = TimeUnit.DAYS.toMillis(365);final long step = TimeUnit.SECONDS.toMillis(60);try {final SimpleDateFormat format = new SimpleDateFormat(dateFormat);final long initial = format.parse(format.format(3600)).getTime();for (long i = initial; i < max; i += step) {final long current = format.parse(format.format(i)).getTime();if (initial != current) {return i - initial;}}return max;} catch (ParseException pex) {}return max;}}	Yes
836	"public class A {@Overridepublic void onError(Throwable t) {final StatusError statusError = StatusErrors.throwable(t);if (statusError.isSimpleError()) {logger.info(""Failed to ping stream, streamId={}, cause={}"", streamId, statusError.getMessage());} else {logger.info(""Failed to ping stream, streamId={}, cause={}"",streamId,statusError.getMessage(),statusError.getThrowable());}cancelPingScheduler();PingStreamContext.this.reconnector.reconnect();}}"	No
837	"public class A {private void configureTls(NettyServerBuilder builder) throws SSLException, FileNotFoundException {var crt = new File(nodeProperties.nettyTlsCrtPath());if (!crt.exists()) {log.warn(""Specified TLS cert '{}' doesn't exist!"", nodeProperties.nettyTlsCrtPath());throw new FileNotFoundException(nodeProperties.nettyTlsCrtPath());}var key = new File(nodeProperties.nettyTlsKeyPath());if (!key.exists()) {throw new FileNotFoundException(nodeProperties.nettyTlsKeyPath());}var sslContext =GrpcSslContexts.configure(SslContextBuilder.forServer(crt, key)).protocols(SUPPORTED_PROTOCOLS).ciphers(SUPPORTED_CIPHERS, INSTANCE).build();builder.sslContext(sslContext);}}"	Yes
838	"public class A {private void ack(ResponseEvent evt, String answer) {try {Response resp = evt.getResponse();Dialog dlg = evt.getDialog();CSeqHeader cseqHead = (CSeqHeader) resp.getHeader(CSeqHeader.NAME);Request ack = dlg.createAck(cseqHead.getSeqNumber());addSdp(ack, answer);dlg.sendAck(ack);} catch (Exception e) {log.error(""ack {}"", evt, e);}}}"	No
839	"public class A {@Overrideprotected final Future<?> deployVerticles() {return super.deployVerticles().compose(ok -> {@SuppressWarnings(""rawtypes"")final List<Future> futures = new LinkedList<>();for (final Verticle verticle : this.verticles) {final Promise<String> result = Promise.promise();getVertx().deployVerticle(verticle, result);futures.add(result.future());}return CompositeFuture.all(futures);});}}"	Yes
840	"public class A {private void printHist(int[] hist, List<Double> target) {double total = Arrays.stream(hist).sum();for (int i = 0; i < hist.length; i++) {String label = String.valueOf(i + 1);if (i == hist.length - 1) label += ""+"";double current = (hist[i] * 100) / total;String format = String.format(""%.2f"", current);String error = String.format(""%+.2f"", current - target.get(i));log.info(""Size {}: {} = {} % (diff: {}%)"", label, hist[i], format, error);}}}"	No
841	"public class A {@Overridepublic void transform(DDMFormFieldValue ddmFormFieldValue) throws PortalException {Value value = ddmFormFieldValue.getValue();for (Locale locale : value.getAvailableLocales()) {String valueString = value.getString(locale);JSONObject jsonObject = null;try {jsonObject = JSONFactoryUtil.createJSONObject(valueString);} catch (JSONException jsonException) {if (_log.isDebugEnabled()) {}continue;}FileEntry importedFileEntry =fetchImportedFileEntry(_portletDataContext, jsonObject.getLong(""fileEntryId""), jsonObject.getString(""uuid""));if (importedFileEntry == null) {continue;}String fileEntryJSON =toJSON(importedFileEntry, jsonObject.getString(""type""), jsonObject.getString(""alt""));value.addString(locale, fileEntryJSON);StringBundler sb = new StringBundler(4);sb.append(""//dynamic-element[@type='image']"");sb.append(""/dynamic-content[contains(text(),"");sb.append(HtmlUtil.escapeXPathAttribute(valueString));sb.append("")]"");XPath xPath = SAXReaderUtil.createXPath(sb.toString());List<Node> imageNodes = xPath.selectNodes(_document);for (Node imageNode : imageNodes) {Element imageElement = (Element) imageNode;imageElement.clearContent();imageElement.addCDATA(fileEntryJSON);}}}}"	Yes
842	public class A {public long getSize() {return size;}}	Yes
843	"public class A {@Overridepublic void removeRepository(final Space space, final String alias) {spaceConfigStorage.getBatch(space.getName()).run(context -> {final Optional<org.guvnor.structure.organizationalunit.config.RepositoryInfo> config =findRepositoryConfig(space.getName(), alias);try {OrganizationalUnit orgUnit =Optional.ofNullable(organizationalUnitService.getOrganizationalUnit(space.getName())).orElseThrow(() ->new IllegalArgumentException(String.format(""The given space [%s] does not exist."", space.getName())));doRemoveRepository(orgUnit,alias,config,repo -> repositoryRemovedEvent.fire(new RepositoryRemovedEvent(repo)),true);} catch (final Exception e) {logger.error(""Error during remove repository"", e);throw new RuntimeException(e);}return null;});}}"	No
844	public class A {private void initViewResolvers(ApplicationContext context) {this.viewResolvers = null;if (this.detectAllViewResolvers) {Map<String, ViewResolver> matchingBeans =BeanFactoryUtils.beansOfTypeIncludingAncestors(context, ViewResolver.class, true, false);if (!matchingBeans.isEmpty()) {this.viewResolvers = new ArrayList<ViewResolver>(matchingBeans.values());OrderComparator.sort(this.viewResolvers);}} else {try {ViewResolver vr = context.getBean(VIEW_RESOLVER_BEAN_NAME, ViewResolver.class);this.viewResolvers = Collections.singletonList(vr);} catch (NoSuchBeanDefinitionException ex) {}}if (this.viewResolvers == null) {this.viewResolvers = getDefaultStrategies(context, ViewResolver.class);if (logger.isDebugEnabled()) {}}}}	Yes
845	"public class A {private void updatePageMetatataUpdate(String pageCode, Date date, String tablename, Connection conn) throws SQLException {PreparedStatement stat = null;try {String query = ""UPDATE "" + tablename + "" SET updatedat = ? WHERE code = ?"";stat = conn.prepareStatement(query);stat.setTimestamp(1, new Timestamp(date.getTime()));stat.setString(2, pageCode);stat.executeUpdate();} catch (Throwable t) {_logger.error(""Error while updating the page metadata record for table {} and page {}"",PageMetadataDraft.TABLE_NAME,pageCode,t);throw new RuntimeException(""Error while updating the page metadata record for table ""+ PageMetadataDraft.TABLE_NAME+ "" and page ""+ pageCode,t);} finally {closeDaoResources(null, stat);}}}"	No
846	public class A {public void moveActiveInstanceToTerminationPendingInstances(String instanceId) {if (instanceId == null) {return;}synchronized (activeInstances) {Iterator<InstanceContext> iterator = activeInstances.listIterator();while (iterator.hasNext()) {InstanceContext activeInstance = iterator.next();if (activeInstance == null) {iterator.remove();continue;}if (instanceId.equals(activeInstance.getId())) {iterator.remove();this.terminatingPending.add(activeInstance);if (log.isDebugEnabled()) {}break;}}}}}	Yes
847	"public class A {@Testpublic void turnOnLocks() throws IOException {ServiceReference<PaxLoggingService> sr = context.getServiceReference(PaxLoggingService.class);PaxLoggingService paxLogging = context.getService(sr);assertNotNull(paxLogging);final Object[] paxLoggingServiceImpl = new Object[1];Arrays.stream(paxLogging.getClass().getDeclaredFields()).forEach(new FieldConsumer(paxLoggingServiceImpl, paxLogging));assertNull(Helpers.getField(paxLoggingServiceImpl[0], ""m_configLock"", ReadWriteLock.class));LoggerFactory.getLogger(Log4J1LockingConfigurationTest.class).info(""Hello without locking"");Helpers.updateLoggingConfig(context, cm, Helpers.LoggingLibrary.LOG4J1, ""locks"");sr = context.getServiceReference(PaxLoggingService.class);paxLogging = context.getService(sr);assertNotNull(paxLogging);paxLoggingServiceImpl[0] = null;Arrays.stream(paxLogging.getClass().getDeclaredFields()).forEach(new FieldConsumer(paxLoggingServiceImpl, paxLogging));assertNotNull(Helpers.getField(paxLoggingServiceImpl[0], ""m_configLock"", ReadWriteLock.class));LoggerFactory.getLogger(Log4J1LockingConfigurationTest.class).info(""Hello with locking"");List<String> lines = readLines();assertTrue(lines.contains(""[main] INFO org.ops4j.pax.logging.it.Log4J1LockingConfigurationTest - Hello without""+ "" locking""));assertTrue(lines.contains(""[main] INFO org.ops4j.pax.logging.it.Log4J1LockingConfigurationTest - Hello with""+ "" locking""));}}"	No
848	"public class A {@Overridepublic ReturnValue do_run() {try {String timePeriod = null;WorkflowRunStatus status = options.valueOf(statusSpec);if (options.has(""time-period"")) {timePeriod = (String) options.valueOf(""time-period"");}Date firstDate = null, lastDate = null;if (timePeriod != null) {String[] dates = timePeriod.trim().split("":"");SimpleDateFormat localDateFormat = new SimpleDateFormat(""yyyy-MM-dd"");try {firstDate = localDateFormat.parse(dates[0].trim());if (dates.length != 1) {lastDate = localDateFormat.parse(dates[1].trim());}} catch (ParseException ex) {Log.warn(""Date not found. Date must be in format YYYY-MM-DD or YYYY-MM-DD:YYYY-MM-DD."", ex);println(""Incorrect date"");ret = new ReturnValue(ReturnValue.INVALIDPARAMETERS);return ret;}if (lastDate == null) {lastDate = new Date();}}if (options.has(WRSTDERR) && options.has(WRSTDOUT)) {println(""Combination of both stdout and stderr not recognized"");ret.setExitStatus(ReturnValue.INVALIDPARAMETERS);return ret;}if (options.has(""workflow-run-accession"")) {String wra = (String) options.valueOf(""workflow-run-accession"");if (options.has(WRSTDERR)) {reportWorkflowRunStdErrOut(wra, STDERR);} else if (options.has(WRSTDOUT)) {reportWorkflowRunStdErrOut(wra, STDOUT);} else {reportOnWorkflowRun(wra);}} else if (options.has(""workflow-accession"") || options.has(statusSpec)) {String tp = (String) options.valueOf(""workflow-accession"");reportOnWorkflow(tp, status, firstDate, lastDate);} else {println(""Combination of parameters not recognized!"");println(this.get_syntax());ret.setExitStatus(ReturnValue.INVALIDPARAMETERS);return ret;}} catch (IOException e) {Log.error(e.getMessage(), e);ret.setExitStatus(ReturnValue.FILENOTREADABLE);ret.setDescription(e.getMessage());}return ret;}}"	No
849	"public class A {private void pruneQueueIfNeeded(WebRequest request, Queue<String> queue, String attributeName) {if (queue.size() > _numConversationsToKeep) {if (_logger.isDebugEnabled()) {for (Object str : queue.toArray()) {_logger.debug(""pruneQueueIfNeeded - (""+ attributeName+ "") queue entry (""+ str+ "" ""+ new java.util.Date(Long.parseLong((String) str)));}}String conversationId = queue.peek();if (conversationId != null) {removeEntityFromSession(request, attributeName, conversationId);}}}}"	Yes
850	public class A {public void closeChannelPool(Location loc) {try {GenericObjectPool<Channel> pool = locToChannelPoolMap.get(loc);if (pool == null) {return;} else {try {pool.close();} catch (Exception e) {}}} finally {lock.unlock();}}}	Yes
851	"public class A {private void handleEntityChangedEvent(EntityChangedMessage message) {logStatus.setEntityChangedQueueSize(entityChangedQueueSize.decrementAndGet());if (message.getEventType() == EntityChangedMessage.Type.DELETE) {return;}EntityType entityType = message.getEntityType();if (!subscriptions.containsKey(entityType)) {return;}Entity<?> entity = message.getEntity();Set<Property> fields = message.getFields();try (PersistenceManager persistenceManager =PersistenceManagerFactory.getInstance(settings).create()) {subscriptions.get(entityType).handleEntityChanged(persistenceManager, entity, fields);} catch (Exception ex) {LOGGER.error(""error handling MQTT subscriptions"", ex);}}}"	No
852	"public class A {public static void publish(String topicName, String format, String testCaseFolderName, String dataFileName) {if (format == null || ""map"".equals(format)) {format = ""csv"";}try {Properties properties = new Properties();String filePath = getTestDataFileLocation(testCaseFolderName, dataFileName);properties.load(ClassLoader.getSystemClassLoader().getResourceAsStream(""activemq.properties""));Context context = new InitialContext(properties);TopicConnectionFactory connFactory =(TopicConnectionFactory) context.lookup(""ConnectionFactory"");TopicConnection topicConnection = connFactory.createTopicConnection();topicConnection.start();Session session = topicConnection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);Topic topic = session.createTopic(topicName);MessageProducer producer = session.createProducer(topic);List<String> messagesList = readFile(filePath);try {if (format.equalsIgnoreCase(""csv"")) {log.info(""Sending Map messages on '"" + topicName + ""' topic"");publishMapMessages(producer, session, messagesList);} else {log.info(""Sending  "" + format + "" messages on '"" + topicName + ""' topic"");publishTextMessage(producer, session, messagesList);}} catch (JMSException e) {log.error(""Can not subscribe."" + e.getMessage(), e);} finally {producer.close();session.close();topicConnection.stop();topicConnection.close();}} catch (Exception e) {}}}"	Yes
853	"public class A {public static void encryptProperties(String location, String[] properties) {try {File file = new File(location);if (file.exists()) {PropertiesConfiguration config = new PropertiesConfiguration();config.setDelimiterParsingDisabled(true);config.setEncoding(StandardCharsets.UTF_8.name());config.load(file);if (file.getName().equals(""mdm.conf"")) {dataSourceName =config.getString(DB_DEFAULT_DATASOURCE) == null? StringUtils.EMPTY: config.getString(DB_DEFAULT_DATASOURCE);}updated = false;for (String property : properties) {String password = config.getString(property);if (StringUtils.isNotEmpty(password) && !password.endsWith(Crypt.ENCRYPT)) {password = Crypt.encrypt(password);config.setProperty(property, password);updated = true;}}if (updated) {config.save(file);}}} catch (Exception e) {LOGGER.error(""Encrypt password in '"" + location + ""' error."", e);}}}"	No
854	public class A {@Overridepublic GetResult merge(List<PartitionGetResult> partResults) {int size = partResults.size();List<ServerRow> rowSplits = new ArrayList<ServerRow>(size);for (int i = 0; i < size; i++) {rowSplits.add(((PartitionGetRowResult) partResults.get(i)).getRowSplit());}SplitEntry splitEntry = new SplitEntry();for (int i = 0; i < size; i++) {ServerIntDoubleRow row =(ServerIntDoubleRow) ((PartitionGetRowResult) partResults.get(i)).getRowSplit();int fid = (int) row.get(0 + (int) row.getStartCol());if (fid != -1) {int splitIndex = (int) row.get(1 + (int) row.getStartCol());float lossGain = (float) row.get(2 + (int) row.getStartCol());float leftSumGrad = (float) row.get(3 + (int) row.getStartCol());float leftSumHess = (float) row.get(4 + (int) row.getStartCol());float rightSumGrad = (float) row.get(5 + (int) row.getStartCol());float rightSumHess = (float) row.get(6 + (int) row.getStartCol());GradStats curLeftGradStat = new GradStats(leftSumGrad, leftSumHess);GradStats curRightGradStat = new GradStats(rightSumGrad, rightSumHess);SplitEntry curSplitEntry = new SplitEntry(fid, splitIndex, lossGain);curSplitEntry.leftGradStat = curLeftGradStat;curSplitEntry.rightGradStat = curRightGradStat;splitEntry.update(curSplitEntry);}}return new GBDTGradHistGetRowResult(ResponseType.SUCCESS, splitEntry);}}	Yes
855	"public class A {@Overridepublic String edit() {try {IUserProfile userProfile = null;UserDetails currentUser = this.getCurrentUser();Object object = currentUser.getProfile();if (null != object && object instanceof IUserProfile) {userProfile = (IUserProfile) object;this.checkTypeLabels(userProfile);} else {return ""currentUserWithoutProfile"";}IUserProfile currentProfile = this.getUserProfile();if (null == currentProfile|| !currentProfile.getUsername().equals(currentUser.getUsername())) {userProfile.disableAttributes(SystemConstants.USER_PROFILE_ATTRIBUTE_DISABLING_CODE_ON_EDIT);this.getRequest().getSession().setAttribute(SESSION_PARAM_NAME_CURRENT_PROFILE, userProfile);}} catch (Throwable t) {_logger.error(""error in edit"", t);return FAILURE;}return SUCCESS;}}"	No
856	"public class A {public void saveProject(HttpSession session) {RulesProject project = null;try {ConflictUtils.removeMergeConflict();project = getCurrentProject();if (project == null) {return;}saveProject(project);} catch (Exception e) {String msg;Throwable cause = e.getCause();if (cause instanceof FileNotFoundException) {if (e.getMessage().contains("".xls"")) {msg = ""Failed to save the project. Please close module Excel file and try again."";} else {msg = ""Failed to save the project because some resources are used"";}log.debug(msg, e);} else if (cause instanceof MergeConflictException) {MergeConflictInfo info = new MergeConflictInfo((MergeConflictException) cause, project);ConflictUtils.saveMergeConflict(info);msg = ""Failed to save the project because of merge conflict."";log.debug(msg, e);return;} else {msg = ""Failed to save the project. See logs for details."";}throw new ValidationException(msg);}}}"	Yes
857	"public class A {@Overridepublic List<SystemPropertyDetails> readSystemProperties() {LOGGER.debug(""get system properties"");ArrayList<SystemPropertyDetails> properties = new ArrayList<>();Properties systemDotProperties = null;try {systemDotProperties = new Properties(systemPropertiesFile);properties.add(getSystemPropertyDetails(SystemBaseUrl.EXTERNAL_HOST,EXTERNAL_HOST_TITLE,EXTERNAL_HOST_DESCRIPTION,null,systemDotProperties));properties.add(getSystemPropertyDetails(SystemBaseUrl.EXTERNAL_HTTP_PORT,EXTERNAL_HTTP_PORT_TITLE,EXTERNAL_HTTP_PORT_DESCRIPTION,null,systemDotProperties));properties.add(getSystemPropertyDetails(SystemBaseUrl.EXTERNAL_HTTPS_PORT,EXTERNAL_HTTPS_PORT_TITLE,EXTERNAL_HTTPS_PORT_DESCRIPTION,null,systemDotProperties));properties.add(getSystemPropertyDetails(SystemBaseUrl.INTERNAL_HOST,INTERNAL_HOST_TITLE,INTERNAL_HOST_DESCRIPTION,null,systemDotProperties));properties.add(getSystemPropertyDetails(SystemBaseUrl.INTERNAL_HTTP_PORT,INTERNAL_HTTP_PORT_TITLE,INTERNAL_HTTP_PORT_DESCRIPTION,null,systemDotProperties));properties.add(getSystemPropertyDetails(SystemBaseUrl.INTERNAL_HTTPS_PORT,INTERNAL_HTTPS_PORT_TITLE,INTERNAL_HTTPS_PORT_DESCRIPTION,null,systemDotProperties));properties.add(getSystemPropertyDetails(SystemInfo.ORGANIZATION,ORGANIZATION_TITLE,ORGANIZATION_DESCRIPTION,null,systemDotProperties));properties.add(getSystemPropertyDetails(SystemInfo.SITE_CONTACT,SITE_CONTACT_TITLE,SITE_CONTACT_DESCRIPTION,null,systemDotProperties));properties.add(getSystemPropertyDetails(SystemInfo.SITE_NAME,SITE_NAME_TITLE,SITE_NAME_DESCRIPTION,null,systemDotProperties));properties.add(getSystemPropertyDetails(SystemInfo.VERSION, VERSION_TITLE, VERSION_DESCRIPTION, null, systemDotProperties));} catch (IOException e) {}return properties;}}"	Yes
858	public class A {public static RequestStatus deleteRelease(PortletRequest request, Logger log) {String releaseId = request.getParameter(PortalConstants.RELEASE_ID);if (releaseId != null) {try {String deleteCommentEncoded =request.getParameter(PortalConstants.MODERATION_REQUEST_COMMENT);User user = UserCacheHolder.getUserFromRequest(request);if (deleteCommentEncoded != null) {String deleteComment = new String(Base64.getDecoder().decode(deleteCommentEncoded));user.setCommentMadeDuringModerationRequest(deleteComment);}ComponentService.Iface client = new ThriftClients().makeComponentClient();return client.deleteRelease(releaseId, UserCacheHolder.getUserFromRequest(request));} catch (TException e) {}}return RequestStatus.FAILURE;}}	Yes
859	"public class A {@GetMapping(""featured"")@ResponseBody@Deprecatedpublic List<Object> getFeaturedOccurrences() {LOG.warn(""Featured occurrences have been removed."");return Lists.newArrayList();}}"	No
860	"public class A {private JavaPairRDD<HoodieKey, HoodieRecordLocation> lookupIndex(JavaPairRDD<String, String> partitionRecordKeyPairRDD,final HoodieEngineContext context,final HoodieTable hoodieTable) {Map<String, Long> recordsPerPartition = partitionRecordKeyPairRDD.countByKey();List<String> affectedPartitionPathList = new ArrayList<>(recordsPerPartition.keySet());List<Tuple2<String, BloomIndexFileInfo>> fileInfoList =loadInvolvedFiles(affectedPartitionPathList, context, hoodieTable);final Map<String, List<BloomIndexFileInfo>> partitionToFileInfo =fileInfoList.stream().collect(groupingBy(Tuple2::_1, mapping(Tuple2::_2, toList())));JavaRDD<Tuple2<String, HoodieKey>> fileComparisonsRDD =explodeRecordRDDWithFileComparisons(partitionToFileInfo, partitionRecordKeyPairRDD);Map<String, Long> comparisonsPerFileGroup =computeComparisonsPerFileGroup(recordsPerPartition, partitionToFileInfo, fileComparisonsRDD, context);int inputParallelism = partitionRecordKeyPairRDD.partitions().size();int joinParallelism = Math.max(inputParallelism, config.getBloomIndexParallelism());LOG.info(""InputParallelism: ${""+ inputParallelism+ ""}, IndexParallelism: ${""+ config.getBloomIndexParallelism()+ ""}"");return findMatchingFilesForRecordKeys(fileComparisonsRDD, joinParallelism, hoodieTable, comparisonsPerFileGroup);}}"	No
861	public class A {@Testpublic void printLogWhenNoSchema() throws SQLException {StatusSummary status = StatusSummary.status(Status.NOT_INITIALIZED).build();expect(databaseConnectionProvider.getConnection()).andReturn(databaseConnection);expect(cassandraSchemaService.getStatus()).andReturn(status);expect(injector.getInstance(NoopServer.class)).andReturn(noopServer);expectLastCall();mocks.replay();new ServerFactoryModule.LateInjectionServer(injector, serverConfiguration).createServer();mocks.verify();}}	Yes
862	"public class A {protected String addColumns(String queryString) {StringBuilder select = new StringBuilder(""SELECT "");int from = 0;for (Column column : getColumns()) {select.append(column.getName());select.append("" AS "");select.append(""'"").append(column.getTitle()).append(""',"");}select.deleteCharAt(select.length() - 1);select.append("" "");logger.debug(""Replacing current select statement with "" + select.toString());from = queryString.indexOf(""FROM"");if (from < 0) {from = queryString.indexOf(""from"");}if (from < 0) {from = queryString.indexOf(""From"");}if (from < 0) {logger.warn(""Syntax error with the MySQL FROM statement. Syntax permitted is FROM, from or From "");}queryString = queryString.substring(from, queryString.length());queryString = select.toString() + queryString;logger.debug(""Final query with columns "" + queryString);return queryString;}}"	No
863	"public class A {private void decryptV1(ByteBuffer bb, String password5)throws IndexOutOfBoundsException, BufferUnderflowException {LazySodiumJava sodium = getLazySodiumJavaInstance();if (sodium == null) {logger.debug(""Unable to decrypt event because libsodium is not loaded"");return;}if (bb.capacity() != 70) {logger.info(""Received malformed version 1 doorbell event, length not 70 bytes"");return;}opslimit = bb.getInt();memlimit = bb.getInt();bb.get(salt, 0, salt.length);bb.get(nonce, 0, nonce.length);bb.get(ciphertext, 0, ciphertext.length);byte[] hash;try {logger.trace(""Calling cryptoPwHash with passwordFirstFive='{}', opslimit={}, memlimit={}, salt='{}'"",password5,opslimit,memlimit,HexUtils.bytesToHex(salt, "" ""));String hashAsString =sodium.cryptoPwHash(password5,32,salt,opslimit,new NativeLong(memlimit),PwHash.Alg.PWHASH_ALG_ARGON2I13);hash = HexUtils.hexToBytes(hashAsString);} catch (SodiumException e) {return;}byte[] m = new byte[30];long[] mLen = new long[30];byte[] nSec = null;byte[] c = ciphertext;long cLen = ciphertext.length;byte[] ad = null;long adLen = 0;byte[] nPub = nonce;byte[] k = hash;logger.trace(""Call cryptoAeadChaCha20Poly1305Decrypt with ciphertext='{}', nonce='{}', key='{}'"",HexUtils.bytesToHex(ciphertext, "" ""),HexUtils.bytesToHex(nonce, "" ""),HexUtils.bytesToHex(k, "" ""));boolean success =sodium.cryptoAeadChaCha20Poly1305Decrypt(m, mLen, nSec, c, cLen, ad, adLen, nPub, k);if (!success) {logger.trace(""Decryption FAILED"");return;}int decryptedTextLength = (int) mLen[0];if (decryptedTextLength != 18L) {logger.info(""Length of decrypted text is invalid, must be 18 bytes"");return;}logger.debug(""Received and successfully decrypted a Doorbird event!!"");ByteBuffer b = ByteBuffer.allocate(decryptedTextLength);b.put(m, 0, decryptedTextLength);b.rewind();byte[] buf = new byte[8];b.get(buf, 0, 6);eventIntercomId = new String(buf, 0, 6).trim();b.get(buf, 0, 8);eventId = new String(buf, 0, 8).trim();eventTimestamp = b.getInt();logger.debug(""Event is eventId='{}', intercomId='{}', timestamp={}"",eventId,eventIntercomId,eventTimestamp);isDoorbellEvent = true;}}"	Yes
864	"public class A {public void startSahiTestSuite() throws SakuliInitException {checkTestSuiteFile();TestRunner runner = getTestRunner();runner.setIsSingleSession(false);runner.addReport(new Report(""html"", sakuliProperties.getLogFolder().toAbsolutePath().toString()));runner.setInitJS(getInitJSString());try {try {countConnections++;logger.info(""Sahi-Script-Runner starts!\n"");String output = runner.execute();testSuite.setStopDate(new Date());logger.info(""Sahi-Script-Runner executed with "" + output);if (output.equals(""FAILURE"")) {if (isSahiScriptTimout(testSuite.getException())) {logger.warn(""Sahi-Script-Runner timeout detected, start retry!"");SakuliCheckedException causingError =new SakuliCheckedException(testSuite.getException());InitializingServiceHelper.invokeInitializingServcies();this.reconnect(causingError);} else if (testSuite.getException() == null) {throw new SakuliInitException(""SAHI-Proxy returned 'FAILURE' "");}}} catch (ConnectException | IllegalMonitorStateException e) {this.reconnect(e);}} catch (Exception e) {sakuliExceptionHandler.handleException(e);} finally {logger.info(""test suite finished"");sahiProxy.shutdown();}}}"	Yes
865	public class A {@Overridepublic String getPermanentDirectoryPath() {String dirPath = super.getPermanentDirectoryPath();if (dirPath == null) {dirPath =getConfigurationSource().getProperty(PROPERTY_DEPRECATED_PERMANENTDIRECTORY, String.class);if (dirPath != null) {}}return dirPath;}}	Yes
866	public class A {@Overridepublic void removeUserFromCache(X509Certificate userCert) {if (logger.isDebugEnabled()) {}cache.evict(userCert);}}	Yes
867	public class A {@Overridepublic void addBooleanField(String fieldName, boolean value) {if (logger.isTraceEnabled()) {}m_pdxInstanceFactory.writeBoolean(fieldName, value);addIdentityField(fieldName);}}	Yes
868	"public class A {public static SAXReader getSAXReader(final EntityResolver resolver) {SAXReader reader = new SAXReader();if (resolver != null) {reader.setEntityResolver(resolver);}try {reader.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);reader.setFeature(""http://xml.org/sax/features/external-general-entities"", false);reader.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);reader.setFeature(""http://apache.org/xml/features/nonvalidating/load-external-dtd"", false);} catch (SAXException e) {logger.error(""Some parser properties are not supported."");}reader.setIncludeExternalDTDDeclarations(false);reader.setIncludeInternalDTDDeclarations(false);return reader;}}"	No
869	"public class A {@Overridepublic boolean isRegularFile() {if (file == null) {return false;}boolean isRegularFile = false;try (Tx tx = StructrApp.getInstance(securityContext).tx()) {isRegularFile = file instanceof File;tx.success();} catch (FrameworkException fex) {logger.error("""", fex);}return isRegularFile;}}"	No
870	public class A {@Overridepublic <V> void expire(String key, int ttl) {try {_jedisClusterClient.expire(key, ttl);} catch (Exception ex) {}}}	Yes
871	public class A {@Overridepublic void run() {if (controlled) {} else {}}}	Yes
872	"public class A {public void deployHistoryEvent(SingularityDeployUpdate deployUpdate) {publish(WebhookType.DEPLOY, deployUpdate).exceptionally(t -> {LOG.warn(""Could not publish event to sns, will retry later ({})"", t.getMessage());try {webhookManager.saveDeployUpdateForRetry(deployUpdate);} catch (Throwable t2) {}return null;});}}"	Yes
873	"public class A {@PayloadRoot(localPart = ""ActivateOrganisationRequest"", namespace = DEVICE_MANAGEMENT_NAMESPACE)@ResponsePayloadpublic ActivateOrganisationResponse activateOrganisation(@OrganisationIdentification final String organisationIdentification,@RequestPayload final ActivateOrganisationRequest request)throws OsgpException {LOGGER.info(""Activate organisation: {}."", request.getOrganisationIdentification());try {this.deviceManagementService.activateOrganisation(organisationIdentification, request.getOrganisationIdentification());} catch (final ConstraintViolationException e) {throw new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR,ComponentType.WS_ADMIN,new ValidationException(e.getConstraintViolations()));} catch (final TransactionSystemException ex) {throw new TechnicalException(COMPONENT_TYPE_WS_ADMIN, ex.getApplicationException());} catch (final Exception e) {this.handleException(e);}return new ActivateOrganisationResponse();}}"	No
874	public class A {@Overridepublic void onResourceChange(TbResource resource, TbQueueCallback callback) {TenantId tenantId = resource.getTenantId();TransportProtos.ResourceUpdateMsg resourceUpdateMsg =TransportProtos.ResourceUpdateMsg.newBuilder().setTenantIdMSB(tenantId.getId().getMostSignificantBits()).setTenantIdLSB(tenantId.getId().getLeastSignificantBits()).setResourceType(resource.getResourceType().name()).setResourceKey(resource.getResourceKey()).build();ToTransportMsg transportMsg =ToTransportMsg.newBuilder().setResourceUpdateMsg(resourceUpdateMsg).build();broadcast(transportMsg, callback);}}	Yes
875	"public class A {@Testpublic void test_09() {Log.debug(""Test"");ScoreList pvlist = new ScoreList();int max = 1000;for (int i = 0; i < max; i++) {double quantile = ((double) i) / max;pvlist.add(quantile);}for (int i = 0; i < max; i++) {double quantile = ((double) i) / max;double pval = pvlist.cdf(quantile);Assert.assertEquals(quantile, pval, EPSILON);}}}"	No
876	public class A {public void register() {Freedomotic.INJECTOR.injectMembers(this);listener = new BusMessagesListener(this, busService);listener.consumeEventFrom(channel);numberOfExecutions = 0;suspensionStart = System.currentTimeMillis();}}	Yes
877	"public class A {private void processImportedMappings() {for (final Entry<String, String> entry : ImmutableSet.copyOf(importMapping.entrySet())) {final String model = entry.getKey();final String[] namespaceInfo = entry.getValue().split(""\\s"");final String[] namespace =(namespaceInfo.length > 0 ? namespaceInfo[0].trim() : """").split("":"");final String namespaceName = namespace.length > 0 ? namespace[0].trim() : null;final String modelClass = namespace.length > 1 ? namespace[1].trim() : null;final String assembly = namespaceInfo.length > 1 ? namespaceInfo[1].trim() : null;final String assemblyVersion = namespaceInfo.length > 2 ? namespaceInfo[2].trim() : null;final String assemblyFramework = namespaceInfo.length > 3 ? namespaceInfo[3].trim() : ""net45"";if (isNullOrEmpty(model) || isNullOrEmpty(namespaceName)) {LOGGER.warn(String.format(Locale.ROOT,""Could not import: '%s' - invalid namespace: '%s'"",model,entry.getValue()));importMapping.remove(model);} else {LOGGER.info(String.format(Locale.ROOT, ""Importing: '%s' from '%s' namespace."", model, namespaceName));importMapping.put(model, namespaceName);}if (!isNullOrEmpty(modelClass)) {LOGGER.info(String.format(Locale.ROOT, ""Mapping: '%s' class to '%s'"", model, modelClass));modelNameMapping.put(model, modelClass);}if (assembly != null && assemblyVersion != null) {dependencies.put(assembly, new DependencyInfo(assemblyVersion, assemblyFramework));}}}}"	Yes
878	"public class A {@Overridepublic void handle(LeaveGroupResponse leaveResponse, RequestFuture<Void> future) {final List<MemberResponse> members = leaveResponse.memberResponses();if (members.size() > 1) {future.raise(new IllegalStateException(""The expected leave group response ""+ ""should only contain no more than one member info, however get ""+ members));}if (error == Errors.NONE) {future.complete(null);} else {future.raise(error);}}}"	Yes
879	"public class A {@BeforeClasspublic static void extractTestFiles() throws URISyntaxException {ZipUtils.unZipFile(new File(CustomCRSKDERasterResizeIT.class.getClassLoader().getResource(TEST_DATA_ZIP_RESOURCE_PATH).toURI()),TestUtils.TEST_CASE_BASE);startMillis = System.currentTimeMillis();LOGGER.warn(""-------------------------------------------------"");LOGGER.warn(""*                                               *"");LOGGER.warn(""*         RUNNING CustomCRSKDERasterResizeIT    *"");LOGGER.warn(""*                                               *"");LOGGER.warn(""-------------------------------------------------"");try {SparkTestEnvironment.getInstance().tearDown();} catch (final Exception e) {}}}"	Yes
880	public class A {@Overridepublic Collection<S> loadServices(Class<S> service) {serviceLoaderWrapper.load(service);Collection<S> services = new ArrayList<>();for (Iterator<S> iterator = serviceLoaderWrapper.iterator(); iterator.hasNext(); ) {try {S instance = iterator.next();services.add(instance);} catch (ServiceConfigurationError serviceConfigurationError) {}}return services;}}	Yes
881	"public class A {public void setViewParameters(List<ExprNode> parameters, ViewForgeEnv viewForgeEnv, int streamNumber)throws ViewParameterException {this.viewParameters = parameters;TimeAbacus timeAbacus = viewForgeEnv.getClasspathImportServiceCompileTime().getTimeAbacus();Hint reclaimGroupAged = HintEnum.RECLAIM_GROUP_AGED.getHint(viewForgeEnv.getAnnotations());if (reclaimGroupAged != null) {isReclaimAged = true;String hintValueMaxAge = HintEnum.RECLAIM_GROUP_AGED.getHintAssignedValue(reclaimGroupAged);if (hintValueMaxAge == null) {throw new ViewParameterException(""Required hint value for hint '""+ HintEnum.RECLAIM_GROUP_AGED+ ""' has not been provided"");}try {reclaimMaxAge = timeAbacus.deltaForSecondsDouble(Double.parseDouble(hintValueMaxAge));} catch (RuntimeException ex) {throw new ViewParameterException(""Required hint value for hint '""+ HintEnum.RECLAIM_GROUP_AGED+ ""' value '""+ hintValueMaxAge+ ""' could not be parsed as a double value"");}String hintValueFrequency =HintEnum.RECLAIM_GROUP_FREQ.getHintAssignedValue(reclaimGroupAged);if (hintValueFrequency == null) {reclaimFrequency = reclaimMaxAge;} else {try {reclaimFrequency =timeAbacus.deltaForSecondsDouble(Double.parseDouble(hintValueFrequency));} catch (RuntimeException ex) {throw new ViewParameterException(""Required hint value for hint '""+ HintEnum.RECLAIM_GROUP_FREQ+ ""' value '""+ hintValueFrequency+ ""' could not be parsed as a double value"");}}if (reclaimMaxAge < 1) {log.warn(""Reclaim max age parameter is less then 1, are your sure?"");}if (log.isDebugEnabled()) {}}}}"	Yes
882	public class A {@Overridepublic long takeSnapshot() throws IOException {TermIndex lastTermIndex = getLastAppliedTermIndex();long lastAppliedIndex = lastTermIndex.getIndex();if (!isInitialized) {return lastAppliedIndex;}long startTime = Time.monotonicNow();TransactionInfo latestTrxInfo = transactionBuffer.getLatestTrxInfo();TransactionInfo lastAppliedTrxInfo = TransactionInfo.fromTermIndex(lastTermIndex);if (latestTrxInfo.compareTo(lastAppliedTrxInfo) < 0) {transactionBuffer.updateLatestTrxInfo(lastAppliedTrxInfo);transactionBuffer.setLatestSnapshot(lastAppliedTrxInfo.toSnapshotInfo());} else {lastAppliedIndex = latestTrxInfo.getTransactionIndex();}transactionBuffer.flush();return lastAppliedIndex;}}	Yes
883	public class A {@Overridepublic void run() {while (!shutdownRequestMade) {try {ObjectAndMethod objectAndMethod =taskQueue.poll(THREAD_SHUTDOWN_CHECK_INTERVAL, TimeUnit.MILLISECONDS);if (objectAndMethod != null) {callCorrectMethod(objectAndMethod);}} catch (InterruptedException e) {}}ObjectAndMethod objectAndMethod;while ((objectAndMethod = taskQueue.poll()) != null) {callCorrectMethod(objectAndMethod);}}}	Yes
884	"public class A {@Overridepublic void handleCommand(Command command) {if (command instanceof RefreshType) {try {updateStatus.accept(OnOffType.from(configuration.invert != gpio.getValue()));} catch (PigpioException e) {logger.warn(""Unknown pigpio exception while handling Refresh"", e);}}if (command instanceof OnOffType) {try {gpio.setValue(configuration.invert != (OnOffType.ON.equals(command)));} catch (PigpioException e) {logger.warn(""An error occured while changing the gpio value: {}"", e.getMessage());}}}}"	No
885	"public class A {@Overridepublic void onWebSocketText(@Nullable String message) {try {if (message != null) {var propertyStatus = gson.fromJson(message, PropertyStatusMessage.class);if ((propertyStatus != null)&& (propertyStatus.messageType != null)&& (propertyStatus.messageType.equals(""propertyStatus""))) {for (var propertyEntry : propertyStatus.data.entrySet()) {var listener =propertyChangedListeners.getOrDefault(propertyEntry.getKey(), EMPTY_PROPERTY_CHANGED_LISTENER);try {listener.accept(propertyEntry.getKey(), propertyEntry.getValue());} catch (RuntimeException re) {logger.warn(""calling property change listener {} failed. {}"", listener, re.getMessage());}}} else {logger.debug(""Ignoring received message of unknown type: {}"", message);}}} catch (JsonSyntaxException se) {}}}"	Yes
886	public class A {@Overridepublic boolean test(Value value) {if (value == null) {return false;}try {Matcher matcher = pattern.matcher(value.getString());return matcher.matches();} catch (RepositoryException e) {return false;}}}	Yes
887	public class A {public void addNullField(Object fieldValue) {if (logger.isTraceEnabled()) {}list.add(fieldValue);}}	Yes
888	"public class A {void collectHints(AnnotationNode an,List<HintApplication> hints,Set<AnnotationNode> visited,Stack<Type> annotationChain) {if (!visited.add(an)) {return;}try {annotationChain.push(this);List<HintDeclaration> hintsOnAnnotation = typeSystem.findHints(an.desc);if (hintsOnAnnotation.size() != 0) {List<String> extractAttributeNames =hintsOnAnnotation.stream().map(hd -> hd.getExtractAttributeNames()).filter(x -> x != null).flatMap(List::stream).collect(Collectors.toList());List<String> typesCollectedFromAnnotation =collectTypeReferencesInAnnotation(an, extractAttributeNames);if (an.desc.equals(Type.AtEnableConfigurationProperties)) {Map<String, Integer> propertyTypesForAccess =processConfigurationProperties(typesCollectedFromAnnotation);Map<String, Integer> newMap = new HashMap<>();for (Map.Entry<String, Integer> entry : propertyTypesForAccess.entrySet()) {newMap.put(fromLdescriptorToDotted(entry.getKey()), entry.getValue());}if (DEBUG_CONFIGURATION_PROPERTY_ANALYSIS) {logger.debug(""ConfigurationPropertyAnalysis: whilst looking at type ""+ typesCollectedFromAnnotation+ "" making these accessible:""+ newMap.entrySet().stream().map(e -> ""\n"" + e.getKey() + "":"" + AccessBits.toString(e.getValue())).collect(Collectors.toList()));}for (HintDeclaration hintOnAnnotation : hintsOnAnnotation) {hints.add(new HintApplication(new ArrayList<>(annotationChain), newMap, hintOnAnnotation));}} else {for (HintDeclaration hintOnAnnotation : hintsOnAnnotation) {hints.add(new HintApplication(new ArrayList<>(annotationChain),asMap(typesCollectedFromAnnotation, hintOnAnnotation.skipIfTypesMissing),hintOnAnnotation));}}}if (node.visibleAnnotations != null) {for (AnnotationNode visibleAnnotation : node.visibleAnnotations) {Type annotationType = typeSystem.Lresolve(visibleAnnotation.desc, true);if (annotationType == null) {} else {annotationType.collectHints(visibleAnnotation, hints, visited, annotationChain);}}}} finally {annotationChain.pop();}}}"	Yes
889	"public class A {public static <T> HttpResponse<T> httpRequest(Logger logger,String url,String method,Object requestBodyData,TypeReference<T> responseFormat,int maxTries)throws IOException, InterruptedException {IOException exc = null;for (int tries = 0; tries < maxTries; tries++) {if (tries > 0) {Thread.sleep(tries > 1 ? 10 : 2);}try {return httpRequest(logger, url, method, requestBodyData, responseFormat);} catch (IOException e) {logger.info(""{} {}: error: {}"", method, url, e.getMessage());exc = e;}}throw exc;}}"	No
890	"public class A {@Overrideprotected DataTable doInBackground() throws Exception {long rowCount;if (m_inputTable instanceof BufferedDataTable) {rowCount = ((BufferedDataTable) m_inputTable).size();} else if (m_inputTable instanceof ContainerTable) {rowCount = ((ContainerTable) m_inputTable).size();} else {rowCount = -1;}publish(new NodeProgress(0.0, ""Starting table sort...""));Collection<String> sortColNames = new ArrayList<String>(2);DataTableSpec spec = m_inputTable.getDataTableSpec();for (int i : m_sortOrder.getSortColumnIndices()) {String name;if (i < 0) {name = DataTableSorter.ROWKEY_SORT_SPEC.getName();} else {name = spec.getColumnSpec(i).getName();}sortColNames.add(name);}long start = System.currentTimeMillis();boolean[] sortOrders = m_sortOrder.getSortColumnOrder();DataTableSorter sorter =new DataTableSorter(m_inputTable, rowCount, sortColNames, sortOrders, false);NodeProgressListener progLis =new NodeProgressListener() {@Overridepublic void progressChanged(final NodeProgressEvent pe) {publish(pe.getNodeProgress());}};m_nodeProgressMonitor = new DefaultNodeProgressMonitor();ExecutionMonitor exec = new ExecutionMonitor(m_nodeProgressMonitor);m_nodeProgressMonitor.addProgressListener(progLis);try {DataTable result = sorter.sort(exec);long elapsedMS = System.currentTimeMillis() - start;String time = StringFormat.formatElapsedTime(elapsedMS);return result;} finally {m_nodeProgressMonitor.removeProgressListener(progLis);}}}"	Yes
891	"public class A {@SuppressWarnings(""unchecked"")private SipURI outboundInterface(ServletContext context, String transport) {SipURI result = null;final List<SipURI> uris = (List<SipURI>) context.getAttribute(OUTBOUND_INTERFACES);if (uris != null && uris.size() > 0) {for (final SipURI uri : uris) {final String interfaceTransport = uri.getTransportParam();if (transport.equalsIgnoreCase(interfaceTransport)) {result = uri;}}if (logger.isInfoEnabled()) {if (result == null) {} else {}}} else {if (logger.isInfoEnabled()) {}}return result;}}"	Yes
892	"public class A {@Testpublic void testAssignmentAfterRestarts() throws Exception {try {System.setProperty(IGNITE_PDS_CHECKPOINT_TEST_SKIP_SYNC, ""true"");final int gridsCnt = 5;final int groupsCnt = 2;final IgniteEx node = (IgniteEx) startGridsMultiThreaded(gridsCnt);final List<CacheConfiguration> cfgs =Arrays.asList(cacheConfiguration(""g1c1"", TRANSACTIONAL, PARTITIONED, gridsCnt, ""testGrp1""),cacheConfiguration(""g1c2"", TRANSACTIONAL, PARTITIONED, gridsCnt, ""testGrp1""),cacheConfiguration(""g2c1"", TRANSACTIONAL, PARTITIONED, gridsCnt, ""testGrp2""),cacheConfiguration(""g2c2"", TRANSACTIONAL, PARTITIONED, gridsCnt, ""testGrp2""));node.getOrCreateCaches(cfgs);validateDepIds(groupsCnt);stopAllGrids();IgniteEx node2 = (IgniteEx) startGridsMultiThreaded(gridsCnt);validateDepIds(groupsCnt);final int restartIdxFrom = 2;final AtomicInteger idx = new AtomicInteger(restartIdxFrom);IgniteInternalFuture fut =GridTestUtils.runMultiThreadedAsync(new Callable<Void>() {@Overridepublic Void call() throws Exception {int nodeIdx = idx.getAndIncrement();stopGrid(nodeIdx);return null;}},gridsCnt - restartIdxFrom,""stop-node"");fut.get();awaitPartitionMapExchange();checkAffinity();idx.set(restartIdxFrom);fut =GridTestUtils.runMultiThreadedAsync(new Callable<Void>() {@Overridepublic Void call() throws Exception {int nodeIdx = idx.getAndIncrement();startGrid(nodeIdx);return null;}},gridsCnt - restartIdxFrom,""start-node"");fut.get();awaitPartitionMapExchange();AffinityTopologyVersion topVer =node2.context().cache().context().exchange().readyAffinityVersion();log.info(""Using version: "" + topVer);checkAffinity();} finally {System.clearProperty(IGNITE_PDS_CHECKPOINT_TEST_SKIP_SYNC);}}}"	No
893	"public class A {void deleteMessage(long messageId) {String sql =""delete from "" + MessageShardingUtil.getMessageTable(messageId) + "" where _mid = ?"";Connection connection = null;PreparedStatement statement = null;try {connection = DBUtil.getConnection();statement = connection.prepareStatement(sql);statement.setLong(1, messageId);int count = statement.executeUpdate();} catch (SQLException e) {e.printStackTrace();Utility.printExecption(LOG, e, RDBS_Exception);} finally {DBUtil.closeDB(connection, statement);}}}"	Yes
894	public class A {public static Pair<Boolean, String> check(final ResourceTO resourceTO) {boolean check = false;String errorMessage = null;try {getService(ResourceService.class).check(resourceTO);check = true;} catch (Exception e) {errorMessage = e.getMessage();}return Pair.of(check, errorMessage);}}	Yes
895	"public class A {public void run() {final IndexState newIndexState = newIndexState();logIndexStateStats(""New state"", newIndexState);final Optional<IndexState> previousIndexState = repo.findFirstByOrderByTimestampDesc();previousIndexState.ifPresentOrElse((previous) -> {logIndexStateStats(""Previous state"", previous);compareStates(previous, newIndexState);},() -> log.info(""No previous state, skipping comparison!""));repo.save(newIndexState);pruneRepo();}}"	Yes
896	public class A {private static String getIdentifiersFromRequest(RegisterDocumentSetRequestType request) {if (request == null) {return null;}if (request.getSubmitObjectsRequest() == null) {return null;}RegistryObjectListType object = request.getSubmitObjectsRequest().getRegistryObjectList();for (int x = 0; x < object.getIdentifiable().size(); x++) {if (object.getIdentifiable().get(x).getDeclaredType().equals(RegistryPackageType.class)) {RegistryPackageType registryPackage =(RegistryPackageType) object.getIdentifiable().get(x).getValue();return getPatientId(registryPackage);}}return null;}}	Yes
897	"public class A {private int fetchDataValuesPageSizeFromSystemSettings(final Context context) throws SQLException {int dataValuesPageSize = 0;String sql =""SELECT value FROM systemsetting WHERE name = '"" + DATA_VALUES_SYNC_PAGE_SIZE_KEY + ""';"";try (Statement stmt = context.getConnection().createStatement();ResultSet rs = stmt.executeQuery(sql); ) {if (rs.next()) {dataValuesPageSize = (Integer) SerializationUtils.deserialize(rs.getBytes(""value""));}log.info(""Value found in SystemSettings: dataValuePageSize: "" + dataValuesPageSize);}return dataValuesPageSize;}}"	No
898	public class A {private void getServerProfileTransformation() {ServerProfile serverProfile = this.serverProfileClient.getByName(SERVER_PROFILE_NAME).get(0);String enclosureGroupUri =enclosureGroupClient.getByName(EnclosureGroupClientSample.ENCLOSURE_GROUP_NAME).get(0).getUri();ServerProfile serverProfileUpdated =serverProfileClient.getTransformation(serverProfile.getResourceId(),ServerHardwareTypeClientSample.SERVER_HARDWARE_TYPE_URI,enclosureGroupUri);}}	Yes
899	public class A {@Overridepublic void updateProcessBusinessKeyInHistory(ExecutionEntity processInstance) {if (isHistoryEnabled()) {if (log.isDebugEnabled()) {}if (processInstance != null) {HistoricProcessInstanceEntity historicProcessInstance =getHistoricProcessInstanceEntityManager().findById(processInstance.getId());if (historicProcessInstance != null) {historicProcessInstance.setBusinessKey(processInstance.getProcessInstanceBusinessKey());getHistoricProcessInstanceEntityManager().update(historicProcessInstance, false);}}}}}	Yes
900	"public class A {@Overridepublic void run() {LOG.debug(""starting {}"", getClass().getSimpleName());Configuration conf = configurationParameter.getConfiguration();List<DirectDataSourceProfile> profiles = HadoopDataSourceUtil.loadProfiles(conf);DirectDataSourceProfile spec = null;if (id != null) {spec =profiles.stream().filter(it -> Objects.equal(it.getId(), id)).findAny().orElseThrow(() ->new CommandConfigurationException(MessageFormat.format(""data source \""{0}\"" not found (available data source: {1})"",id,profiles.stream().map(DirectDataSourceProfile::getId).collect(Collectors.joining("", "")))));}try (PrintWriter writer = outputParameter.open()) {if (spec == null) {verboseParameter.printf(writer, ""total %,d%n"", profiles.size());profiles.forEach(it -> {writer.printf(""%s%n"", it.getId());verboseParameter.ifRequired(() -> print(writer, it, 4));});} else {print(writer, spec, 0);}}}}"	No
901	"public class A {protected synchronized void flushPendingWriteRequests() throws Exception {if (writeRequestQueue == null) {return;}Event scheduledWrite;while ((scheduledWrite = writeRequestQueue.poll()) != null) {LOGGER.debug("" Flushing buffered write request: {}"", scheduledWrite.data);getProxyFilter().filterWrite(scheduledWrite.nextFilter, getSession(), (WriteRequest) scheduledWrite.data);}writeRequestQueue = null;}}"	Yes
902	public class A {public void start() {super.start();executor.scheduleWithFixedDelay(() -> {try {scan();if (isFirst) {isFirst = false;}} catch (Throwable e) {}},0,scanIntervalInSecond,TimeUnit.SECONDS);}}	Yes
903	"public class A {protected List<ClassNameInformation> collectClassNames(Dependency dependency) {final List<ClassNameInformation> classNames = new ArrayList<>();try (JarFile jar = new JarFile(dependency.getActualFilePath())) {final Enumeration<JarEntry> entries = jar.entries();while (entries.hasMoreElements()) {final JarEntry entry = entries.nextElement();final String name = entry.getName().toLowerCase();if (name.endsWith("".class"") && !name.matches(""^javax?\\..*$"")) {final ClassNameInformation className =new ClassNameInformation(name.substring(0, name.length() - 6));classNames.add(className);}}} catch (IOException ex) {LOGGER.warn(""Unable to open jar file '{}'."", dependency.getFileName());LOGGER.debug("""", ex);}return classNames;}}"	No
904	public class A {public void debug(Marker marker, String format, Object... argArray) {if (!logger.isDebugEnabled(marker)) return;if (instanceofLAL) {FormattingTuple ft = MessageFormatter.arrayFormat(format, argArray);((LocationAwareLogger) logger).log(marker,fqcn,LocationAwareLogger.DEBUG_INT,ft.getMessage(),argArray,ft.getThrowable());} else {logger.debug(marker, format, argArray);}}}	No
905	"public class A {private void loadCoverageStore(SingleResourceContents SingleResourceContents, CatalogImpl catalog, XStreamPersister xp) {CoverageStoreInfo cs = null;final Resource storeResource = SingleResourceContents.resource;try {cs = depersist(xp, SingleResourceContents.contents, CoverageStoreInfo.class);catalog.add(cs);if (LOGGER.isLoggable(Level.INFO)) {LOGGER.info(""Loaded coverage store '""+ cs.getName()+ ""', ""+ (cs.isEnabled() ? ""enabled"" : ""disabled""));}} catch (Exception e) {LOGGER.log(Level.WARNING, ""Failed to load coverage store '"" + storeResource.name() + ""'"", e);return;}LayerLoader<CoverageInfo> coverageLoader = new LayerLoader<>(CoverageInfo.class, xp, catalog);try (AsynchResourceIterator<LayerContents> it =new AsynchResourceIterator<>(storeResource.parent(), Resources.DirectoryFilter.INSTANCE, COVERAGE_LAYER_MAPPER)) {while (it.hasNext()) {LayerContents lc = it.next();coverageLoader.accept(lc);}}}}"	No
906	"public class A {private void updateIdentityTypes(Map<String, EmailConfirmationConfiguration> idsConfig, ObjectNode contents) {ArrayNode idTypes = (ArrayNode) contents.get(""identityTypes"");if (idTypes != null) {for (JsonNode node : idTypes) {String name = node.get(""name"").asText();EmailConfirmationConfiguration emailConfig = idsConfig.get(name);if (emailConfig != null)if (node.get(""identityTypeProvider"").asText().equals(""email"")) {ObjectNode nodeO = (ObjectNode) node;nodeO.set(""emailConfirmationConfiguration"", emailConfig.toJson());}}}}}"	Yes
907	"public class A {public String getElapsedTime() {AsyncTaskHandle<Void> processHandle = searchIndexManager.getProcessHandle();if (processHandle == null) {log.error(""processHandle is null when looking up elapsed time"");return """";} else {long elapsedTime = processHandle.getExecutingTime();return formatTimePeriod(elapsedTime);}}}"	No
908	"public class A {void performScan() {if (this.bluetoothAdapter.isScanning()) {logger.info(""m_bluetoothAdapter.isScanning"");if (System.currentTimeMillis() - this.startTime >= this.options.getScantime() * 1000) {this.bluetoothAdapter.killLeScan();}} else {if (System.currentTimeMillis() - this.startTime >= this.options.getPeriod() * 1000) {logger.info(""startLeScan"");this.bluetoothAdapter.startLeScan(this);this.startTime = System.currentTimeMillis();}}}}"	No
909	"public class A {@Overridepublic Obs saveObs(Obs obs) throws APIException {ComplexData complexData = obs.getComplexData();if (complexData == null) {log.error(""Cannot save complex data where obsId=""+ obs.getObsId()+ "" because its ComplexData is null."");return obs;}BufferedWriter fout = null;try {File outfile = getOutputFileToWrite(obs);fout = new BufferedWriter(new FileWriter(outfile));Reader tempRd = null;Object data = obs.getComplexData().getData();if (data instanceof char[]) {fout.write((char[]) data);} else if (Reader.class.isAssignableFrom(data.getClass())) {try {tempRd = new BufferedReader((Reader) data);while (true) {int character = tempRd.read();if (character == -1) {break;}fout.write(character);}tempRd.close();} catch (IOException e) {throw new APIException(""Obs.error.unable.convert.complex.data"", new Object[] {""Reader""}, e);}}obs.setValueComplex(outfile.getName() + "" file |"" + outfile.getName());obs.setComplexData(null);} catch (IOException ioe) {throw new APIException(""Obs.error.trying.write.complex"", null, ioe);} finally {try {fout.close();} catch (Exception e) {}}return obs;}}"	No
910	"public class A {public void fixCaches(ICacheServiceNonLocal lateralService, ILateralCacheObserver lateralWatch) {log.debug(""Fixing lateral caches:"");synchronized (this.caches) {this.lateralService = lateralService;for (Iterator en = this.caches.values().iterator(); en.hasNext(); ) {LateralCacheNoWait cache = (LateralCacheNoWait) en.next();cache.fixCache(this.lateralService);}}}}"	No
911	"public class A {void publishHintEvents(Collection<HintEvent> hintEvents, String atomURI) {BulkHintEvent bulkHintEvent = new BulkHintEvent();bulkHintEvent.addHintEvents(hintEvents);pubSubMediator.tell(new DistributedPubSubMediator.Publish(bulkHintEvent.getClass().getName(), bulkHintEvent),getSelf());log.debug(""sparql-based matching for atom {} (found {} matches)"",atomURI,bulkHintEvent.getHintEvents().size());}}"	No
912	"public class A {@RequestMapping(value = ""lists/artifact-definitions/edit.html"", method = RequestMethod.GET)protected String showEditForm(@RequestParam(""id"") String idString,@RequestParam(""groupid"") String idString2,ModelMap model,HttpServletRequest request) {AddArtifactCommand data = new AddArtifactCommand();if (auth.userIsExperimenter() || auth.isAdmin()) {model.addAttribute(""userIsExperimenter"", true);int id = Integer.parseInt(idString2);data.setResearchGroupId(id);String title = researchGroupDao.getResearchGroupTitle(id);data.setResearchGroupTitle(title);id = Integer.parseInt(idString);Artifact artifact = artifactDao.read(id);data.setId(id);data.setCompensation(artifact.getCompensation());data.setRejectCondition(artifact.getRejectCondition());model.addAttribute(""addArtifact"", data);return ""lists/artifact/addItemForm"";} else {return ""lists/userNotExperimenter"";}}}"	Yes
913	"public class A {@Overridepublic void discoverObjectInstance(ObjectInstanceHandle theObject,ObjectClassHandle theObjectClass,String objectName,FederateHandle producingFederate)throws FederateInternalError {LOGGER.info(""Discover Object Instance : ""+ ""Object = ""+ theObject.toString()+ "", Object class = ""+ theObjectClass.toString()+ "", Object name = ""+ objectName+ "", Producing federate = ""+ producingFederate.toString());System.out.println();}}"	No
914	"public class A {public void destroy() {String methodName = ""destroy"";LOGGER.trace(ENTERING, methodName);}}"	Yes
915	"public class A {private void setNetworkStateOnline() {logger.debug(""Network state ONLINE: Process running. {} Nodes in network."", networkNodes.size());localNwkAddress = transport.getNwkAddress();localIeeeAddress = transport.getIeeeAddress();addLocalNode();if (localNwkAddress == 0) {permitJoin(0);}for (ZigBeeNetworkExtension extension : extensions) {extension.extensionStartup();}for (final ZigBeeNode node : networkNodes.values()) {if (node.getNodeDescriptor() != null) {notificationService.execute(new Runnable() {@Overridepublic void run() {transport.setNodeDescriptor(node.getIeeeAddress(), node.getNodeDescriptor());}});}for (final ZigBeeNetworkNodeListener listener : nodeListeners) {notificationService.execute(new Runnable() {@Overridepublic void run() {listener.nodeAdded(node);}});}}for (final ZigBeeNetworkStateListener stateListener : stateListeners) {notificationService.execute(new Runnable() {@Overridepublic void run() {stateListener.networkStateUpdated(ZigBeeNetworkState.ONLINE);}});}}}"	Yes
916	"public class A {protected Document getDocument(ClassLoader classLoader) {try {URL url = classLoader.getResource(""META-INF/javadocs-rt.xml"");if (url == null) {return null;}try (InputStream inputStream = url.openStream()) {return UnsecureSAXReaderUtil.read(inputStream, true);}} catch (Exception exception) {}return null;}}"	Yes
917	"public class A {public static Optional<ServiceBindingConfigSource> convert(List<ServiceBinding> serviceBindings, String bindingType, String urlType) {Optional<ServiceBinding> matchingByType =ServiceBinding.singleMatchingByType(bindingType, serviceBindings);if (!matchingByType.isPresent()) {return Optional.empty();}Map<String, String> properties = new HashMap<>();ServiceBinding binding = matchingByType.get();String username = binding.getProperties().get(""username"");if (username != null) {properties.put(""quarkus.datasource.username"", username);} else {log.debug(""Property 'username' was not found"");}String password = binding.getProperties().get(""password"");if (password != null) {properties.put(""quarkus.datasource.password"", password);} else {log.debug(""Property 'password' was not found"");}String host = binding.getProperties().get(""host"");String port = binding.getProperties().get(""port"");String database = binding.getProperties().get(""database"");if ((host != null) && (database != null)) {String portPart = """";if (port != null) {portPart = "":"" + port;}properties.put(""quarkus.datasource.jdbc.url"",String.format(""jdbc:%s://%s%s/%s"", urlType, host, portPart, database));} else {log.debug(""One or more of 'host' or 'database' properties were not found"");}return Optional.of(new ServiceBindingConfigSource(bindingType + ""-k8s-service-binding-source"", properties));}}"	No
918	public class A {@Overridepublic void createTopic(String topic, int partitions, int replicationFactor) {AdminUtils.createTopic(zookeeperClient, topic, partitions, replicationFactor, new Properties());}}	Yes
919	public class A {@Overridepublic void flush() {Namespace namespace = namespace();KeyValueStorage keyValueStorage = kernelContext.getService(KeyValueStorage.class);keyValueStorage.put(namespace, RESULT, ValidationResult.create(validator.getName(), invoked, failed));}}	Yes
920	"public class A {@Overridepublic void validate(final InstallServiceValidationContext validationContext)throws RestErrorException {logger.info(""Validating service name"");final String serviceName = validationContext.getService().getName();if (serviceName.startsWith(CloudifyConstants.ILlEGAL_SERVICE_NAME_PREFIX)) {throw new RestErrorException(CloudifyErrorMessages.ILLEGAL_SERVICE_NAME.getName(),serviceName,""starts with "" + CloudifyConstants.ILlEGAL_SERVICE_NAME_PREFIX);}if (serviceName.endsWith(CloudifyConstants.ILlEGAL_SERVICE_NAME_SUFFIX)) {throw new RestErrorException(CloudifyErrorMessages.ILLEGAL_SERVICE_NAME.getName(),serviceName,""ends with "" + CloudifyConstants.ILlEGAL_SERVICE_NAME_SUFFIX);}}}"	No
921	public class A {public static int searchCount(long companyId, long groupId, String keywords, int scope)throws RemoteException {try {int returnValue = DDLRecordSetServiceUtil.searchCount(companyId, groupId, keywords, scope);return returnValue;} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
922	"public class A {@Overridepublic DirectoryStream<Path> getDirectoryStream(DirectoryStream.Filter<? super Path> filter) {if (schemaNode != null) {return new DirectoryStream() {boolean closed = false;@Overridepublic Iterator iterator() {final App app = StructrApp.getInstance(fs.getSecurityContext());final List<StructrPath> nodes = new LinkedList<>();try (final Tx tx = app.tx()) {for (final SchemaView schemaView : schemaNode.getProperty(SchemaNode.schemaViews)) {nodes.add(new StructrSchemaViewPath(fs, StructrSchemaViewsPath.this, schemaNode, schemaView));}tx.success();} catch (FrameworkException fex) {logger.warn("""", fex);}return nodes.iterator();}@Overridepublic void close() throws IOException {closed = true;}};}return null;}}"	No
923	public class A {public void pauseEvenIfProcessorStopped() {if (this.eventProcessor != null) {this.getLifeCycleLock().writeLock().lock();try {this.eventProcessor.pauseDispatching();InternalDistributedSystem system =(InternalDistributedSystem) this.cache.getDistributedSystem();system.handleResourceEvent(ResourceEvent.GATEWAYSENDER_PAUSE, this);enqueueTempEvents();} finally {this.getLifeCycleLock().writeLock().unlock();}}}}	Yes
924	"public class A {@Overridepublic int executeCommand(InsertContent cmd) {cmd.setErrorState(false);if (fragUrls.length > fragUrlsCount) {String urlStr = fragUrls[fragUrlsCount++];try {LOGGER.debug(""FÃ¼ge Textfragment von URL '{}' ein."", urlStr);insertDocumentFromURL(cmd, WollMuxFiles.makeURL(urlStr));} catch (java.lang.Exception e) {AbstractExecutor.insertErrorField(cmd, documentCommandInterpreter.getModel().doc, e);cmd.setErrorState(true);return 1;}}cmd.markDone(false);return 0;}}"	No
925	"public class A {@Overridepublic void init(NodeEngine engine, Properties hzProperties) {this.nodeEngine = (NodeEngineImpl) engine;this.jetInstance = new JetInstanceImpl(nodeEngine.getNode().hazelcastInstance, config);taskletExecutionService =new TaskletExecutionService(nodeEngine,config.getInstanceConfig().getCooperativeThreadCount(),nodeEngine.getProperties());jobRepository = new JobRepository(jetInstance);jobExecutionService =new JobExecutionService(nodeEngine, taskletExecutionService, jobRepository);jobCoordinationService = createJobCoordinationService();MetricsService metricsService = nodeEngine.getService(MetricsService.SERVICE_NAME);metricsService.registerPublisher(nodeEngine -> new JobMetricsPublisher(jobExecutionService, nodeEngine.getLocalMember()));nodeEngine.getMetricsRegistry().registerDynamicMetricsProvider(jobExecutionService);networking =new Networking(engine, jobExecutionService, config.getInstanceConfig().getFlowControlPeriodMs());ClientEngine clientEngine = engine.getService(ClientEngineImpl.SERVICE_NAME);ClientExceptionFactory clientExceptionFactory = clientEngine.getExceptionFactory();if (clientExceptionFactory != null) {ExceptionUtil.registerJetExceptions(clientExceptionFactory);} else {logger.fine(""Jet exceptions are not registered to the ClientExceptionFactory""+ "" since the ClientExceptionFactory is not accessible."");}if (sqlCoreBackend != null) {try {Method initJetInstanceMethod =sqlCoreBackend.getClass().getMethod(""init"", AbstractJetInstance.class);initJetInstanceMethod.invoke(sqlCoreBackend, jetInstance);} catch (ReflectiveOperationException e) {throw new RuntimeException(e);}}}}"	Yes
926	public class A {private List<Long> getIdListForMap(Map<String, Boolean> boxIdMap) {List<Long> boxIds = new ArrayList<Long>();if (boxIdMap == null || boxIdMap.isEmpty()) return boxIds;for (Entry<String, Boolean> entry : boxIdMap.entrySet()) {if (entry.getValue()) {long boxId = Long.valueOf(entry.getKey());boxIds.add(boxId);}}return boxIds;}}	Yes
927	"public class A {protected List<JournalArticle> getDisplayPageTemplateArticles(Layout layout) {List<JournalArticle> journalArticles = new ArrayList<>();if (layout == null) {return journalArticles;}DynamicQuery assetDisplayPageEntryDynamicQuery =_assetDisplayPageEntryLocalService.dynamicQuery();long classNameId = _portal.getClassNameId(JournalArticle.class.getName());Property classNameIdProperty = PropertyFactoryUtil.forName(""classNameId"");assetDisplayPageEntryDynamicQuery.add(classNameIdProperty.eq(classNameId));Property layoutPageTemplateEntryIdProperty =PropertyFactoryUtil.forName(""layoutPageTemplateEntryId"");assetDisplayPageEntryDynamicQuery.add(layoutPageTemplateEntryIdProperty.ne(Long.valueOf(0)));Property plidProperty = PropertyFactoryUtil.forName(""plid"");assetDisplayPageEntryDynamicQuery.add(plidProperty.eq(layout.getPlid()));assetDisplayPageEntryDynamicQuery.setProjection(PropertyFactoryUtil.forName(""classPK""));List<Long> resourcePrimKeys =_assetDisplayPageEntryLocalService.dynamicQuery(assetDisplayPageEntryDynamicQuery);for (Long resourcePrimKey : resourcePrimKeys) {try {JournalArticle journalArticle = _journalArticleService.getLatestArticle(resourcePrimKey);if (journalArticle.isIndexable()) {journalArticles.add(journalArticle);}} catch (Exception exception) {if (_log.isDebugEnabled()) {_log.debug(exception, exception);}}}return journalArticles;}}"	No
928	public class A {public void psSaveFinish(ParameterServerId psId, PSMatricesSaveResult subResult) {try {lock.lock();if (subResults == null || subResult.getRequestId() != currentRequestId) {return;}receivedSubResult++;subResults.put(psId, subResult);if (receivedSubResult >= subResults.size()) {ModelSaveResult result = results.get(subResult.getRequestId());if (canCombine()) {ModelSaveContext saveContext = saveContexts.get(subResult.getRequestId());try {result.setState(SaveState.COMBINING);combine(saveContext, result);} catch (Throwable e) {saveFailed(result, StringUtils.stringifyException(e));}} else {String failedMsg = combineFailedLogs();saveFailed(result, failedMsg);}}} finally {lock.unlock();}}}	Yes
929	"public class A {@Overridepublic short readShort() throws JMSException {if (ActiveMQRALogger.LOGGER.isTraceEnabled()) {ActiveMQRALogger.LOGGER.trace(""readShort()"");}return ((StreamMessage) message).readShort();}}"	No
930	public class A {@Overridepublic List<String> call() throws Exception {if (!skipWatchingNonExistNode) {exists(path, true);}try {return getChildren(path, true);} catch (ZkNoNodeException e) {}return null;}}	Yes
931	"public class A {@Overridepublic void update(Entity entity) throws Exception {Preconditions.checkNotNull(entity, ""entity should never be null"");String type = entity.getType();Preconditions.checkNotNull(type, ""entity type should never be null"");Id appId = getApplicationScope().getApplication();Preconditions.checkNotNull(appId, ""app scope should never be null"");updateEntityMeter.mark();Id entityId = new SimpleId(entity.getUuid(), entity.getType());if (logger.isDebugEnabled()) {logger.debug(""Updating entity {}:{}  app {}\n"", entityId.getType(), entityId.getUuid(), appId);}org.apache.usergrid.persistence.model.entity.Entity cpEntity =new org.apache.usergrid.persistence.model.entity.Entity(entityId);cpEntity = CpEntityMapUtils.fromMap(cpEntity, entity.getProperties(), entity.getType(), true);String entityType = cpEntity.getId().getType();boolean skipIndexingForType = skipIndexingForType(entityType);QueueIndexingStrategy queueIndexingStrategy = getIndexingStrategyForType(entityType);try {String region = lookupAuthoritativeRegionForType(entity.getType());cpEntity = ecm.write(cpEntity, region).toBlocking().last();if (logger.isDebugEnabled()) {logger.debug(""Wrote {}:{} version {}"",cpEntity.getId().getType(),cpEntity.getId().getUuid(),cpEntity.getVersion());}} catch (WriteUniqueVerifyException wuve) {if (logger.isTraceEnabled()) {logger.trace(""WriteUniqueVerifyException encountered during update of entity with id {}"",cpEntity.getId().getUuid());}handleWriteUniqueVerifyException(entity, wuve);}if (!skipIndexingForType) {indexEntity(cpEntity, queueIndexingStrategy);deIndexOldVersionsOfEntity(cpEntity);}}}"	No
932	"public class A {private Collection<RefinedAssociationDefinition> loadRefinedAssociationDefinitions(PrismObject<ResourceType> resource, ShadowType shadow, OperationResult parentResult) {OperationResult result = parentResult.createMinorSubresult(CREATE_ASSOCIATION_WRAPPER);RefinedResourceSchema refinedResourceSchema;try {refinedResourceSchema = RefinedResourceSchema.getRefinedSchema(resource);} catch (SchemaException e) {result.recordPartialError(""Could not get fined schema for "" + resource, e);return null;}ShadowKindType kind = shadow.getKind();String shadowIntent = shadow.getIntent();RefinedObjectClassDefinition oc =refinedResourceSchema.getRefinedDefinition(kind, shadowIntent);if (oc == null) {result.recordStatus(OperationResultStatus.NOT_APPLICABLE,""Association for ""+ kind+ ""/""+ shadowIntent+ "" not supported by resource ""+ resource);return null;}Collection<RefinedAssociationDefinition> refinedAssociationDefinitions =oc.getAssociationDefinitions();if (CollectionUtils.isEmpty(refinedAssociationDefinitions)) {result.recordStatus(OperationResultStatus.NOT_APPLICABLE,""Association for ""+ kind+ ""/""+ shadowIntent+ "" not supported by resource ""+ resource);return null;}result.computeStatusIfUnknown();return refinedAssociationDefinitions;}}"	Yes
933	"public class A {public static void writeMemoryCrashDump(@NonNull Model net, @NonNull Throwable e) {if (!crashDumpsEnabled) {return;}long now = System.currentTimeMillis();long tid = Thread.currentThread().getId();String threadName = Thread.currentThread().getName();crashDumpRootDirectory.mkdirs();File f = new File(crashDumpRootDirectory, ""dl4j-memory-crash-dump-"" + now + ""_"" + tid + "".txt"");StringBuilder sb = new StringBuilder();SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss.SSS"");sb.append(""Deeplearning4j OOM Exception Encountered for "").append(net.getClass().getSimpleName()).append(""\n"").append(f(""Timestamp: "", sdf.format(now))).append(f(""Thread ID"", tid)).append(f(""Thread Name"", threadName)).append(""\n\n"");sb.append(""Stack Trace:\n"").append(ExceptionUtils.getStackTrace(e));try {sb.append(""\n\n"");sb.append(generateMemoryStatus(net, -1, (InputType[]) null));} catch (Throwable t) {sb.append(""<Error generating network memory status information section>"").append(ExceptionUtils.getStackTrace(t));}String toWrite = sb.toString();try {FileUtils.writeStringToFile(f, toWrite);} catch (IOException e2) {log.error(""Error writing memory crash dump information to disk: {}"", f.getAbsolutePath(), e2);}log.error("">>> Out of Memory Exception Detected. Memory crash dump written to: {}"",f.getAbsolutePath());log.warn(""Memory crash dump reporting can be disabled with CrashUtil.crashDumpsEnabled(false) or""+ "" using system property -D""+ DL4JSystemProperties.CRASH_DUMP_ENABLED_PROPERTY+ ""=false"");log.warn(""Memory crash dump reporting output location can be set with""+ "" CrashUtil.crashDumpOutputDirectory(File) or using system property -D""+ DL4JSystemProperties.CRASH_DUMP_OUTPUT_DIRECTORY_PROPERTY+ ""=<path>"");}}"	No
934	"public class A {@Overridepublic void onEntry(FilterContext filterContext, FilterChain next) throws SoaException {try {InvocationContextImpl invocationContext =(InvocationContextImpl) filterContext.getAttribute(""context"");filterContext.setAttribute(""startTime"", System.currentTimeMillis());InvocationInfoImpl invocationInfo = new InvocationInfoImpl();invocationContext.lastInvocationInfo(invocationInfo);if (!invocationContext.sessionTid().isPresent()) {if (TransactionContext.hasCurrentInstance()&& TransactionContext.Factory.currentInstance().sessionTid().isPresent()) {invocationContext.sessionTid(TransactionContext.Factory.currentInstance().sessionTid().get());} else {invocationContext.sessionTid(DapengUtil.generateTid());}}String logLevel = invocationContext.cookie(SoaSystemEnvProperties.THREAD_LEVEL_KEY);if (logLevel != null) {MDC.put(SoaSystemEnvProperties.THREAD_LEVEL_KEY, logLevel);}MDC.put(SoaSystemEnvProperties.KEY_LOGGER_SESSION_TID,invocationContext.sessionTid().map(DapengUtil::longToHexStr).orElse(""0""));String infoLog =""request[seqId:""+ invocationContext.seqId()+ "", server:""+ filterContext.getAttribute(""serverInfo"")+ ""]:""+ ""service[""+ invocationContext.serviceName()+ ""]:version[""+ invocationContext.versionName()+ ""]:method[""+ invocationContext.methodName()+ ""]"";} finally {next.onEntry(filterContext);}}}"	Yes
935	"public class A {@Overridepublic void handleCommand(ChannelUID channelUID, Command command) {logger.trace(""Handling command '{}' for channel '{}'"", command, channelUID);if (command instanceof RefreshType && !isControl(channelUID)) {logger.debug(""Refreshing channel '{}'"", channelUID);withKNXType(channelUID,(selector, configuration) -> {scheduleRead(selector, configuration);});} else {switch (channelUID.getId()) {case CHANNEL_RESET:if (address != null) {restart();}break;default:withKNXType(channelUID,(selector, channelConfiguration) -> {OutboundSpec commandSpec =selector.getCommandSpec(channelConfiguration, typeHelper, command);if (commandSpec != null&& !groupAddressesWriteBlockedOnce.remove(commandSpec.getGroupAddress())) {getClient().writeToKNX(commandSpec);if (isControl(channelUID)) {rememberRespondingSpec(commandSpec, true);}} else {logger.debug(""None of the configured GAs on channel '{}' could handle the command '{}' of""+ "" type '{}'"",channelUID,command,command.getClass().getSimpleName());}});break;}}}}"	No
936	"public class A {private String _getMappedCollectionValue(String collectionFieldId, Object displayObject) {if (!(displayObject instanceof ClassedModel)) {return StringPool.BLANK;}ClassedModel classedModel = (ClassedModel) displayObject;String className = classedModel.getModelClassName();if (classedModel instanceof FileEntry) {className = FileEntry.class.getName();}InfoItemFieldValuesProvider<Object> infoItemFieldValuesProvider =_infoItemServiceTracker.getFirstInfoItemService(InfoItemFieldValuesProvider.class, className);if (infoItemFieldValuesProvider == null) {if (_log.isWarnEnabled()) {_log.warn(""Unable to get info item field values provider for class "" + className);}return StringPool.BLANK;}InfoFieldValue<Object> infoFieldValue =infoItemFieldValuesProvider.getInfoItemFieldValue(displayObject, collectionFieldId);if (infoFieldValue == null) {return StringPool.BLANK;}Object value =infoFieldValue.getValue(LocaleUtil.fromLanguageId(_themeDisplay.getLanguageId()));if (value instanceof ContentAccessor) {ContentAccessor contentAccessor = (ContentAccessor) infoFieldValue;return contentAccessor.getContent();}if (value instanceof String) {return (String) value;}if (!(value instanceof WebImage)) {return StringPool.BLANK;}WebImage webImage = (WebImage) value;String url = webImage.getUrl();if (Validator.isNotNull(url)) {return url;}return StringPool.BLANK;}}"	No
937	public class A {public void init() {try {super.init();NotificationEdit edit = m_notificationService.addTransientNotification();edit.setFunction(eventId(SECURE_ADD));edit.addFunction(eventId(SECURE_UPDATE_OWN));edit.addFunction(eventId(SECURE_UPDATE_ANY));edit.setResourceFilter(getAccessPoint(true) + Entity.SEPARATOR + REF_TYPE_MESSAGE);edit.setAction(siteEmailNotificationAnnc);functionManager.registerFunction(eventId(SECURE_READ), true);functionManager.registerFunction(eventId(SECURE_ADD), true);functionManager.registerFunction(eventId(SECURE_REMOVE_ANY), true);functionManager.registerFunction(eventId(SECURE_REMOVE_OWN), true);functionManager.registerFunction(eventId(SECURE_UPDATE_ANY), true);functionManager.registerFunction(eventId(SECURE_UPDATE_OWN), true);functionManager.registerFunction(eventId(SECURE_ALL_GROUPS), true);functionManager.registerFunction(eventId(SECURE_READ_DRAFT), true);m_entityManager.registerEntityProducer(this, REFERENCE_ROOT);DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();factory.setIgnoringComments(true);factory.setNamespaceAware(true);factory.setValidating(false);docBuilder = factory.newDocumentBuilder();TransformerFactory tFactory = TransformerFactory.newInstance();docTransformer = tFactory.newTransformer();} catch (Throwable t) {}}}	Yes
938	"public class A {public void shutdown() {if (!shuttingDown.compareAndSet(false, true)) return;try {try {logger.info(""Shutting down the proxy..."");} catch (Throwable t) {}System.out.println(""Shutting down: Stopping listeners..."");stopListeners();System.out.println(""Shutting down: Stopping schedulers..."");if (proxyCheckinScheduler != null) proxyCheckinScheduler.shutdown();managedExecutors.forEach(ExecutorService::shutdownNow);managedExecutors.forEach(x -> {try {x.awaitTermination(proxyConfig.getHttpRequestTimeout(), TimeUnit.MILLISECONDS);} catch (InterruptedException e) {}});System.out.println(""Shutting down: Running finalizing tasks..."");shutdownTasks.forEach(Runnable::run);System.out.println(""Shutdown complete."");} catch (Throwable t) {try {logger.log(Level.SEVERE, ""Error during shutdown: "", t);} catch (Throwable loggingError) {t.addSuppressed(loggingError);t.printStackTrace();}}}}"	No
939	"public class A {protected int validate() {if (ledgerId < 0) {LOG.error(""invalid ledgerId {} < 0"", ledgerId);return Code.NoSuchLedgerExistsOnMetadataServerException;}return Code.OK;}}"	No
940	"public class A {public boolean containsKill() {if (access != null) {try {long len = file.length();if (len > lastSize) {lastSize = len;log.warn(""searching "" + lastEnd + "" to "" + len);for (long pos = len - 1; pos >= lastEnd; pos--) {access.seek(pos);if (access.read() == '\n') {long start = lastEnd;long size = pos - start;if (size > 32768) {lastEnd = pos;return false;} else if (size > 4096) {}byte[] scan = new byte[(int) size];access.seek(start);access.readFully(scan);log.warn(""scan of "" + LessBytes.toString(scan));lastEnd = pos;return (LessBytes.toString(scan).indexOf(needle) >= 0);}}}} catch (Exception ex) {log.warn("""", ex);}}return false;}}"	Yes
941	"public class A {@RequestMapping(method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE)public String importData(Reader in, Model m) throws IOException {JsonReader reader = new JsonReader(in);reader.beginObject();while (reader.hasNext()) {JsonToken tok = reader.peek();switch (tok) {case NAME:String name = reader.nextName();if (supportedVersions.contains(name)) {for (MITREidDataService dataService : importers) {if (dataService.supportsVersion(name)) {dataService.importData(reader);break;}}} else {reader.skipValue();}break;case END_OBJECT:break;case END_DOCUMENT:break;}}reader.endObject();return ""httpCodeView"";}}"	Yes
942	"public class A {@Overrideprotected long incrementStorageSize(final long size) {return redisExecutor.execute((RedisCallable<Long>)jedis -> {Long incremented = jedis.incrBy(sizeKey, size);if (log.isDebugEnabled()) {log.debug(String.format(""Incremented Redis key %s to %d"", sizeKey, incremented));}return incremented;});}}"	No
943	"public class A {private String generatePresignedUrl(String artifactPath, String method) {Map<String, Object> parameters = new HashMap<>();parameters.put(""artifact_path"", artifactPath);if (method.equalsIgnoreCase(ModelDBConstants.PUT)) {return getUploadUrl(parameters,config.artifactStoreConfig.protocol,config.artifactStoreConfig.artifactEndpoint.getArtifact,config.artifactStoreConfig.pickArtifactStoreHostFromConfig,config.artifactStoreConfig.host);} else if (method.equalsIgnoreCase(ModelDBConstants.GET)) {String filename = artifactPath.substring(artifactPath.lastIndexOf(""/""));parameters.put(ModelDBConstants.FILENAME, filename);return getDownloadUrl(parameters,config.artifactStoreConfig.protocol,config.artifactStoreConfig.artifactEndpoint.getArtifact,config.artifactStoreConfig.pickArtifactStoreHostFromConfig,config.artifactStoreConfig.host);} else {String errorMessage = ""Unsupported HTTP Method for NFS Presigned URL"";throw new InvalidArgumentException(errorMessage);}}}"	Yes
944	public class A {@Overridepublic String requestInstance(NetworkOrder networkOrder, AzureUser azureUser)throws FogbowException {String resourceName = AzureGeneralUtil.generateResourceName();String cidr = networkOrder.getCidr();String name = networkOrder.getName();Map tags = Collections.singletonMap(AzureConstants.TAG_NAME, name);String instanceId = AzureGeneralUtil.defineInstanceId(resourceName);AzureCreateVirtualNetworkRef azureCreateVirtualNetworkRef =AzureCreateVirtualNetworkRef.builder().resourceName(resourceName).cidr(cidr).tags(tags).checkAndBuild();AsyncInstanceCreationManager.Callbacks finishCreationCallbacks =startInstanceCreation(instanceId);doCreateInstance(azureUser, azureCreateVirtualNetworkRef, finishCreationCallbacks);waitAndCheckForInstanceCreationFailed(instanceId);return instanceId;}}	Yes
945	"public class A {@Overridepublic void tearDownClass() throws Exception {super.tearDownClass();try {if (server != null) {server.shutdown();}} catch (Throwable ex) {log.warn(""Exception occurred while shutting down HSQLDB :"" + StringUtils.stringifyException(ex));}}}"	No
946	"public class A {private int getAndSetNetworkTimeout(final Connection connection, final long timeoutMs) {if (isNetworkTimeoutSupported != FALSE) {try {final int originalTimeout = connection.getNetworkTimeout();connection.setNetworkTimeout(netTimeoutExecutor, (int) timeoutMs);isNetworkTimeoutSupported = TRUE;return originalTimeout;} catch (Exception | AbstractMethodError e) {if (isNetworkTimeoutSupported == UNINITIALIZED) {isNetworkTimeoutSupported = FALSE;if (validationTimeout < SECONDS.toMillis(1)) {logger.warn(""{} - A validationTimeout of less than 1 second cannot be honored on drivers""+ "" without setNetworkTimeout() support."",poolName);} else if (validationTimeout % SECONDS.toMillis(1) != 0) {}}}}return 0;}}"	Yes
947	"public class A {private boolean isHostValid() {VersionDTO version = getVersion();if (version != null) {if (checkSoftwareVersion(version.version) && checkApiVersion(version.apiVersion)) {return true;}} else {updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.CONFIGURATION_ERROR,""Can't get version information"");}return false;}}"	Yes
948	"public class A {private String getOptionToReAuthenticate(Optional<String> modifiedCredential) {String[] policyElements = policyStr.trim().split(""[ ]+"");for (String policyElement : policyElements) {String option = null;switch (policyElement) {case ""ENDPOINT_2F"":option = getEndpoint2ndF();break;case ""SESSION_1F"":option = getSession1stF();break;case ""SESSION_2F"":option = getSession2ndF();break;case ""CURRENT"":option = getMatchingCredential(modifiedCredential);break;default:option = findOnEndpoint(policyElement);}if (option != null) return option;}if (failOnNoMatch) {throw new AdditionalAuthenticationMisconfiguredException();}return null;}}"	Yes
949	"public class A {public <T> T loadInstance(Constructor<T> constructor, Object... argValues)throws IllegalArgumentException, ReflectionAccessException {try {try {return constructor.newInstance(argValues);} catch (IllegalArgumentException e) {try {LOG.warn(""Failure passing provided arguments (""+ getIllegalArgumentsErrorMessage(constructor, argValues)+ ""; ""+ e+ ""); attempting to reconstitute"");argValues = (Object[]) updateFromNewClassLoader(argValues);return constructor.newInstance(argValues);} catch (Throwable e2) {LOG.warn(""Reconstitution attempt failed (will rethrow original excaption): "" + e2, e2);throw e;}}} catch (IllegalArgumentException e) {throw new IllegalArgumentException(getIllegalArgumentsErrorMessage(constructor, argValues)+ "": ""+ Exceptions.collapseText(e),e);} catch (InstantiationException e) {throw new ReflectionAccessException(""Failed to create instance of ""+ constructor.getDeclaringClass()+ "": ""+ Exceptions.collapseText(e),e);} catch (IllegalAccessException e) {throw new ReflectionAccessException(""Failed to create instance of ""+ constructor.getDeclaringClass()+ "": ""+ Exceptions.collapseText(e),e);} catch (InvocationTargetException e) {throw new ReflectionAccessException(""Failed to create instance of ""+ constructor.getDeclaringClass()+ "": ""+ Exceptions.collapseText(e),e);}}}"	No
950	"public class A {public Properties loadProperties() {if (StringUtils.isBlank(getFileName())) {throw new IllegalStateException(""invalid (blank) fileName"");}Properties properties = new Properties();ClassLoader loader = Thread.currentThread().getContextClassLoader();URL url = loader.getResource(getFileName());if (url == null) {throw new RiceRuntimeException(""unable to locate properties file '"" + getFileName() + ""'"");}InputStream in = null;try {in = url.openStream();properties.load(in);} catch (IOException e) {throw new RiceRuntimeException(""error loading from properties file '"" + getFileName() + ""'"", e);} finally {if (in != null) {try {in.close();} catch (IOException e) {log.error(""caught exception closing InputStream: "" + e);}}}return properties;}}"	No
951	"public class A {public TermOrder reverse(boolean partial) {TermOrder t;if (weight != null) {if (partial) {}long[][] w = new long[weight.length][];for (int i = 0; i < weight.length; i++) {long[] wi = weight[i];long[] wj = new long[wi.length];for (int j = 0; j < wj.length; j++) {wj[j] = wi[wj.length - 1 - j];}w[i] = wj;}t = new TermOrder(w);logger.info(""reverse = "" + t + "", from = "" + this);return t;}if (evord2 == 0) {t = new TermOrder(revert(evord));return t;}if (partial) {t = new TermOrder(revert(evord), revert(evord2), evend2, evend1);} else {t = new TermOrder(revert(evord2), revert(evord), evend2, evend2 - evbeg2);}logger.info(""reverse = "" + t + "", from = "" + this);return t;}}"	Yes
952	"public class A {public Model getConciseBoundedDescription(LiteralLabel literal, CBDStructureTree structureTree)throws Exception {logger.trace(""Computing CBD for {} ..."", literal);long start = System.currentTimeMillis();String query = generateQuery(literal, structureTree);System.out.println(query);if (workaround) {return constructWithReplacement(endpoint, query);}try (QueryExecution qe = qef.createQueryExecution(query)) {Model model = qe.execConstruct();long end = System.currentTimeMillis();return model;} catch (Exception e) {throw new Exception(""CBD retrieval failed when using query\n"" + query, e);}}}"	Yes
953	"public class A {public void configure() {from(""netty:tcp://127.0.0.1:{{port}}?sync=true&ssl=true&passphrase=changeit&keyStoreResource=#ksf&trustStoreResource=#tsf&needClientAuth=true"").process(new Processor() {public void process(Exchange exchange) throws Exception {SSLSession session =exchange.getIn().getHeader(NettyConstants.NETTY_SSL_SESSION, SSLSession.class);if (session != null) {X509Certificate cert = (X509Certificate) session.getPeerCertificates()[0];Principal principal = cert.getSubjectDN();exchange.getOut().setBody(""When You Go Home, Tell Them Of Us And Say, For Your Tomorrow, We Gave""+ "" Our Today."");} else {exchange.getOut().setBody(""Cannot start conversion without SSLSession"");}}});}}"	Yes
954	"public class A {public List findByExample(StgMbZeiteinheiten instance) {try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.StgMbZeiteinheiten"").add(Example.create(instance)).list();return results;} catch (RuntimeException re) {throw re;}}}"	Yes
955	"public class A {@OnOpenpublic void onOpen(Session session) {if (LOG.isInfoEnabled()) {if (session.getUserProperties().containsKey(EndpointConfigurator.LOCALE_KEY)) {LoginedUser loginuser =(LoginedUser) session.getUserProperties().get(EndpointConfigurator.LOGIN_USER_KEY);}}SessionObserver observer = new SessionObserver(session);map.put(session.getId(), observer);notify.addObserver(observer);Iterator<String> iterator = map.keySet().iterator();while (iterator.hasNext()) {String key = (String) iterator.next();SessionObserver sessionObserver = map.get(key);if (!sessionObserver.isOpen()) {LOG.debug(""websocket is allready closed: "" + session.getId());notify.deleteObserver(map.get(session.getId()));map.remove(session.getId());}}}}"	Yes
956	"public class A {public StgMbZeiteinheitenTxt findById(sernet.gs.reveng.StgMbZeiteinheitenTxtId id) {log.debug(""getting StgMbZeiteinheitenTxt instance with id: "" + id);try {StgMbZeiteinheitenTxt instance =(StgMbZeiteinheitenTxt)sessionFactory.getCurrentSession().get(""sernet.gs.reveng.StgMbZeiteinheitenTxt"", id);if (instance == null) {log.debug(""get successful, no instance found"");} else {log.debug(""get successful, instance found"");}return instance;} catch (RuntimeException re) {log.error(""get failed"", re);throw re;}}}"	No
957	"public class A {@Overridepublic void start() throws Exception {try {config = inherit(buildConfig(buildBaseConfig(BASE_ROUTING), file));register(vertx, env, config);router = createRouter(env);addRoutes(router, config.getRoutes(), env);if (providers != null) {for (RouteProvider provider : providers) {addRoutes(router, provider.getRoutes(), env);}}startHttpServer();dynamicRoute();} catch (Exception e) {logger.error(String.format(""failed starting routing verticle %d at %s"", id, deploymentID()), e);throw e;}}}"	Yes
958	"public class A {@Overridepublic void run() {Map<ByteString, InMemorySubscriptionState> topicSubs = top2sub2seq.get(topic);if (topicSubs == null) {logger.warn(""Received a Consume op for topic: {} that the server does not own."",topic.toStringUtf8());cb.operationFinished(ctx, null);return;}final InMemorySubscriptionState subState = topicSubs.get(subscriberId);if (subState == null) {cb.operationFinished(ctx, null);return;}if (subState.setLastConsumeSeqId(consumeSeqId, cfg.getConsumeInterval())) {updateSubscriptionState(topic,subscriberId,subState,new Callback<Void>() {@Overridepublic void operationFinished(Object ctx, Void resultOfOperation) {subState.setLastPersistedSeqId(consumeSeqId.getLocalComponent());cb.operationFinished(ctx, resultOfOperation);}@Overridepublic void operationFailed(Object ctx, PubSubException exception) {cb.operationFailed(ctx, exception);}},ctx);} else {if (logger.isDebugEnabled()) {logger.debug(""Only advanced consume pointer in memory, will persist later, topic: ""+ topic.toStringUtf8()+ "" subscriberId: ""+ subscriberId.toStringUtf8()+ "" persistentState: ""+ SubscriptionStateUtils.toString(subState.getSubscriptionState())+ "" in-memory consume-id: ""+ MessageIdUtils.msgIdToReadableString(subState.getLastConsumeSeqId()));}cb.operationFinished(ctx, null);}if (null != dm) {dm.messageConsumed(topic, subscriberId, consumeSeqId);}}}"	No
959	"public class A {public static InsertionIds getInsertionIds(final String entry,final EnumSet<TextSearchType> supportedSearchTypes,final EnumSet<CaseSensitivity> supportedCaseSensitivities,final int nGramCharacters) {if ((entry == null) || entry.isEmpty()) {LOGGER.warn(""Cannot index null enum, skipping entry"");return new InsertionIds();}final Set<TextIndexType> indexTypes =supportedSearchTypes.stream().map(TextSearchType::getIndexType).collect(Collectors.toSet());final List<SinglePartitionInsertionIds> retVal = new ArrayList<>(indexTypes.size());for (final TextIndexType indexType : indexTypes) {for (final CaseSensitivity caseSensitivity : supportedCaseSensitivities) {final boolean caseSensitive = CaseSensitivity.CASE_SENSITIVE.equals(caseSensitivity);switch (indexType) {case FORWARD:retVal.add(getForwardInsertionIds(entry, caseSensitive));break;case REVERSE:retVal.add(getReverseInsertionIds(entry, caseSensitive));break;case NGRAM:final SinglePartitionInsertionIds i =getNGramInsertionIds(entry,nGramCharacters,indexTypes.contains(TextIndexType.FORWARD),caseSensitive);if (i != null) {retVal.add(i);}break;}}}return new InsertionIds(retVal);}}"	No
960	"public class A {@Overridepublic User add(String said) throws InfosphereException {Tenant tenant;try {tenant = TenantHelper.getCurrentTenant();} catch (TenantNotFoundException e) {throw new InfosphereException(""Cannot add contact with said '"" + said + ""'."", e);}User user = User.findByTenantAndByUsername(tenant, said);if (user != null) {} else {user = entityFactory.buildUser();user.setUsername(said);user.setPassword(null);user.setEnabled(false);user.setRole(Role.GUEST);user.setAccountUri(""urn:uuid:"" + UUID.randomUUID());user.setTenant(tenant);user.merge();user.flush();}return user;}}"	Yes
961	public class A {private static Optional<NetworkService> getCore() {try {ApplicationContext context = ApplicationContextProvider.getApplicationContext();if (context == null) {return Optional.empty();}Collection<ServiceOps> serviceOpsList = context.getBeansOfType(ServiceOps.class).values();if (serviceOpsList.isEmpty()) {return Optional.empty();}ServiceOps serviceOps = serviceOpsList.iterator().next();return Optional.of(serviceOps.get(NetworkService.Type.CORE));} catch (KeymasterException e) {LOG.trace(e.getMessage());}return Optional.empty();}}	No
962	"public class A {@Overrideprotected void decode(ChannelHandlerContext channelHandlerContext, T t, List<Object> list)throws Exception {registrations:for (Iterator<HandlerRegistration> iter = this.registeredHandlers.iterator();iter.hasNext(); ) {HandlerRegistration registration = iter.next();if (registration.isCancelled()) {logger.debug(""Removing {} as it was cancelled!"", registration);iter.remove();continue;}final Instant now = Instant.now();if (registration.getTimeoutAt().isBefore(now)) {registration.getOnTimeoutConsumer().accept(new TimeoutException());iter.remove();continue;}if (registration.getExpectClazz().isInstance(t)) {Deque<Either<Function<?, ?>, Predicate<?>>> commands = registration.getCommands();Object instance = t;for (Iterator<Either<Function<?, ?>, Predicate<?>>> iterator = commands.iterator();iterator.hasNext(); ) {Either<Function<?, ?>, Predicate<?>> either = iterator.next();if (either.isLeft()) {Function unwrap = either.getLeft();instance = unwrap.apply(instance);} else {Predicate predicate = either.get();if (predicate.test(instance) == false) {continue registrations;}}}logger.trace(""Handler {} accepts element {}, calling handle method"", registration, t);this.registeredHandlers.remove(registration);Consumer handler = registration.getPacketConsumer();handler.accept(instance);registration.confirmHandled();return;}}logger.trace(""None of {} registered handlers could handle message {}, using default decode method"",this.registeredHandlers.size(),t);protocolBase.decode(new DefaultConversationContext<>(channelHandlerContext, passive), t);}}"	Yes
963	"public class A {@VisibleForTestingstatic boolean validateModelIntegrity(@NotNull HospitalModel hospitalModel) {Set<String> hospitalIdsInAddressList = hospitalModel.hospitalAddressMap().keySet();Set<String> keyCPCT = hospitalModel.hospitalPersonsCPCT().keySet();Set<String> keyDRUP = hospitalModel.hospitalPersonsDRUP().keySet();Set<String> keyWIDE = hospitalModel.hospitalPersonsWIDE().keySet();Set<String> keyCOREDB = hospitalModel.hospitalPersonsCOREDB().keySet();Set<String> keySampleMapping =Sets.newHashSet(hospitalModel.sampleToHospitalMapping().values());boolean allCorrect = true;for (String CPCT : keyCPCT) {if (!hospitalIdsInAddressList.contains(CPCT)) {allCorrect = false;LOGGER.warn(""CPCT hospital ID is not present in hospital address list: '{}'"", CPCT);}}for (String DRUP : keyDRUP) {if (!hospitalIdsInAddressList.contains(DRUP)) {allCorrect = false;LOGGER.warn(""DRUP hospital ID is not present in hospital address list: '{}'"", DRUP);}}for (String WIDE : keyWIDE) {if (!hospitalIdsInAddressList.contains(WIDE)) {allCorrect = false;LOGGER.warn(""WIDE hospital ID is not present in hospital address list: '{}'"", WIDE);}}for (String COREDB : keyCOREDB) {if (!hospitalIdsInAddressList.contains(COREDB)) {allCorrect = false;}}for (String sampleMapping : keySampleMapping) {if (!hospitalIdsInAddressList.contains(sampleMapping)) {allCorrect = false;LOGGER.warn(""Sample mapping hospital ID is not present in hospital address list: '{}'"",sampleMapping);}}return allCorrect;}}"	Yes
964	"public class A {protected static AccessControlList getAclFromEvent(Event event) {AccessControlList activeAcl = new AccessControlList();try {if (event.getAccessPolicy() != null)activeAcl = AccessControlParser.parseAcl(event.getAccessPolicy());} catch (Exception e) {logger.error(""Unable to parse access policy"", e);}return activeAcl;}}"	No
965	public class A {@Overridepublic void _setNextWriteValue(Optional<String> valueOpt) throws OpenemsException {if (this.isDebug()) {}if (valueOpt.isPresent()) {ByteBuffer buff = ByteBuffer.allocate(2 * this.length).order(this.getByteOrder());buff = this.toByteBuffer(buff, valueOpt.get());byte[] b = buff.array();Register[] registers = new Register[this.length];for (int i = 0; i < this.length; i = i + 1) {registers[i] = new SimpleRegister(b[i * 2], b[i * 2 + 1]);}this.setNextWriteValueRegisters(Optional.of(registers));} else {this.setNextWriteValueRegisters(Optional.empty());}this.onSetNextWriteCallbacks.forEach(callback -> callback.accept(valueOpt));}}	Yes
966	"public class A {@Overridepublic IServiceProperties getByName(String name) {try {TypedQuery<IServiceProperties> query =entityManager.createNamedQuery(ServiceProperties.QUERY_FIND_BY_NAME, IServiceProperties.class);query.setParameter(""name"", name);IServiceProperties serviceProperties = new ServiceProperties();serviceProperties = query.getSingleResult();return serviceProperties;} catch (NoResultException e) {logger.debug(""No Result found: "" + e);return null;}}}"	No
967	"public class A {private void uploadString(FTPClient client, String filename, String content)throws UploadException, IOException {int tries = 0;boolean done = false;client.setFileType(FTP.ASCII_FILE_TYPE);do {tries++;try (ByteArrayInputStream stringStream = new ByteArrayInputStream(content.getBytes())) {client.storeFile(filename, stringStream);logger.trace(""Finished uploading string to file [""+ filename+ ""]""+ "", response [""+ client.getReplyString()+ ""]"");done = true;} catch (Exception e) {String reply = client.getReplyString();if (tries >= MAX_RETRIES) {throw new UploadException(""Could not upload file "" + filename + "" : "" + reply, e);}try {Thread.sleep(WAIT_BETWEEN_RETRIES);} catch (InterruptedException e1) {throw new UploadException(""Sleep failed"", e1);}}} while (!done);}}"	Yes
968	public class A {public void onNewConnection(ChannelHandlerContext ctx) {}}	Yes
969	"public class A {private void logAddressResult(AddressResult addressResult) {if (SINGLE_LOGGING_ENABLED) {try {if (addressResult.getAddress() != null) {sqlAddressLogger.logAddress(addressResult.getAddress());}} catch (Exception e) {logger.warn(""Failed to insert address result in the DB "" + e.getMessage());}}}}"	No
970	public class A {private void sendPresence(User user, Set<JID> recipients) {if (recipients.isEmpty()) {return;}final PresenceManager presenceManager = XMPPServer.getInstance().getPresenceManager();final Presence presence = presenceManager.getPresence(user);if (presence == null) {return;}for (final JID recipient : recipients) {try {if (presenceManager.canProbePresence(recipient, user.getUsername())) {presenceManager.probePresence(recipient.asBareJID(), XMPPServer.getInstance().createJID(user.getUsername(), null));}} catch (UserNotFoundException e) {}}}}	Yes
971	public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;getApplicationDeploymentsForAppModuleAndGroupResourceProfile_result result =new getApplicationDeploymentsForAppModuleAndGroupResourceProfile_result();if (e instanceof org.apache.airavata.model.error.InvalidRequestException) {result.ire = (org.apache.airavata.model.error.InvalidRequestException) e;result.setIreIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataClientException) {result.ace = (org.apache.airavata.model.error.AiravataClientException) e;result.setAceIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AiravataSystemException) {result.ase = (org.apache.airavata.model.error.AiravataSystemException) e;result.setAseIsSet(true);msg = result;} else if (e instanceof org.apache.airavata.model.error.AuthorizationException) {result.ae = (org.apache.airavata.model.error.AuthorizationException) e;result.setAeIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {fb.close();}}}	Yes
972	"public class A {@SuppressWarnings(""unchecked"")@Overridepublic void onBeforeRestore(UserXmlPreferencesDao userXmlPreferencesDao,final XStreamSavingConverter xstreamSavingConverter,final Object obj) {if (obj instanceof UserXmlPreferencesDO) {final UserXmlPreferencesDO userPrefs = (UserXmlPreferencesDO) obj;if (!TaskTree.USER_PREFS_KEY_OPEN_TASKS.equals(userPrefs.getKey())) {return;}final Object userPrefsObj = userXmlPreferencesDao.deserialize(null, userPrefs, true);if (userPrefsObj == null || !(userPrefsObj instanceof Set)) {return;}Set<Integer> oldIds = null;try {oldIds = (Set<Integer>) userPrefsObj;} catch (final ClassCastException ex) {}if (oldIds.size() == 0) {return;}final Set<Integer> newIds = new HashSet<>();for (final Integer oldId : oldIds) {final Integer newId = xstreamSavingConverter.getNewIdAsInteger(TaskDO.class, oldId);newIds.add(newId);}userXmlPreferencesDao.serialize(userPrefs, newIds);return;}}}"	Yes
973	public class A {protected void extractParameterList(Map<String, String[]> requestParameter,Map<String, String[]> queryParameter,Map<String, String[]> solrParameter,Map<String, String[]> typeParameter,Map<String, String[]> sortParameter) {for (Entry<String, String[]> currentEntry : requestParameter.entrySet()) {String parameterName = currentEntry.getKey();if (PHRASE_QUERY_PARAM.equals(parameterName)) {continue;}SolrParameterGroup parameterGroup = getParameterType(parameterName);switch (parameterGroup) {case SolrParameter:solrParameter.put(parameterName, currentEntry.getValue());break;case TypeParameter:typeParameter.put(parameterName, currentEntry.getValue());break;case QueryParameter:String[] strings = currentEntry.getValue();for (String v : strings) {if (v != null && v.length() > 0) {queryParameter.put(parameterName, currentEntry.getValue());}}break;case SortParameter:sortParameter.put(parameterName, currentEntry.getValue());break;default:continue;}}}}	Yes
974	"public class A {private static int bitMode0() {int bitMode = SystemPropertyUtil.getInt(""io.netty.bitMode"", 0);if (bitMode > 0) {logger.debug(""-Dio.netty.bitMode: {}"", bitMode);return bitMode;}bitMode = SystemPropertyUtil.getInt(""sun.arch.data.model"", 0);if (bitMode > 0) {logger.debug(""-Dio.netty.bitMode: {} (sun.arch.data.model)"", bitMode);return bitMode;}bitMode = SystemPropertyUtil.getInt(""com.ibm.vm.bitmode"", 0);if (bitMode > 0) {logger.debug(""-Dio.netty.bitMode: {} (com.ibm.vm.bitmode)"", bitMode);return bitMode;}String arch = SystemPropertyUtil.get(""os.arch"", """").toLowerCase(Locale.US).trim();if (""amd64"".equals(arch) || ""x86_64"".equals(arch)) {bitMode = 64;} else if (""i386"".equals(arch)|| ""i486"".equals(arch)|| ""i586"".equals(arch)|| ""i686"".equals(arch)) {bitMode = 32;}if (bitMode > 0) {logger.debug(""-Dio.netty.bitMode: {} (os.arch: {})"", bitMode, arch);}String vm = SystemPropertyUtil.get(""java.vm.name"", """").toLowerCase(Locale.US);Pattern BIT_PATTERN = Pattern.compile(""([1-9][0-9]+)-?bit"");Matcher m = BIT_PATTERN.matcher(vm);if (m.find()) {return Integer.parseInt(m.group(1));} else {return 64;}}}"	No
975	public class A {@Testpublic void operationsWithDifferentStaticInputTypes() throws Exception {removeTypeResolversInformationModelPropertyfromMock(operation);MetadataCacheId keyParts =getIdForComponentInputMetadata(getBaseApp(), OPERATION_LOCATION, LIST_NAME);LOGGER.debug(keyParts.toString());removeTypeResolversInformationModelPropertyfromMock(anotherOperation);MetadataCacheId otherKeyParts =getIdForComponentInputMetadata(getBaseApp(), ANOTHER_OPERATION_LOCATION, LIST_NAME);LOGGER.debug(otherKeyParts.toString());assertThat(keyParts, not(otherKeyParts));}}	No
976	public class A {@Overridepublic boolean customPermissionAllowed(final Authentication authentication, final SequencingObject sf) {SampleSequencingObjectJoin sequencingObjectJoin =ssoRepository.getSampleForSequencingObject(sf);if (sequencingObjectJoin != null) {return samplePermission.isAllowed(authentication, sequencingObjectJoin.getSubject());} else {return false;}}}	Yes
977	"public class A {private boolean tryConnectToPeer(Peer p, int attempts) {boolean res = false;if (p.getState() == PeerState.CONNECTED) {res = true;} else {for (int i = 0; i < attempts; i++) {res = peers.connectPeer(p);if (res) {log.debug(""SUCCESS! connected to peer: {} on attempt# '{}'"", p.getAnnouncedAddress(), i);break;} else {try {log.debug(""FAILED connect to peer: {} attempt# '{}' , DELAY for '{}' ms before next""+ "" attempt..."",p.getAnnouncedAddress(),i,PeersService.connectTimeout);Thread.sleep(PeersService.connectTimeout + 20);} catch (InterruptedException ex) {Thread.currentThread().interrupt();}}}}return res;}}"	Yes
978	"public class A {@Overridepublic void doWith(Method m) throws IllegalArgumentException, IllegalAccessException {log.info(""The method [ {} ] of bean [ {} ] is candidate to be overridden by plugin child contexts"",m.toString(),id);registerProxyCandidate(bean, id);}}"	No
979	"public class A {AtlasEntityHeader getByUniqueAttributes(AtlasEntityType entityType, String qualifiedName, Map<String, Object> attrValues) {try {AtlasVertex vertex =AtlasGraphUtilsV2.findByUniqueAttributes(this.graph, entityType, attrValues);if (vertex == null) {return null;}return entityRetriever.toAtlasEntityHeaderWithClassifications(vertex);} catch (AtlasBaseException e) {return null;} catch (Exception ex) {LOG.error(""{}:{} could not be processed!"", entityType, qualifiedName, ex);return null;}}}"	Yes
980	public class A {@Overrideprotected ResourceResponse newResourceResponse(final Attributes attributes) {SAML2SP4UIService service =BaseSession.class.cast(Session.get()).getAnonymousService(SAML2SP4UIService.class);SAML2LoginResponse saml2Response = service.validateLoginResponse(extract(attributes));if (saml2Response.isSelfReg()) {UserTO newUser = new UserTO();newUser.setUsername(saml2Response.getUsername());newUser.getPlainAttrs().addAll(saml2Response.getAttrs());try {Pair<Class<? extends WebPage>, PageParameters> selfRegInfo = getSelfRegInfo(newUser);throw new RestartResponseException(selfRegInfo.getLeft(), selfRegInfo.getRight());} catch (JsonProcessingException e) {throw new WicketRuntimeException(e);}} else {throw new RestartResponseException(getLoginPageClass(),new PageParameters().set(SAML2SP4UIConstants.SAML2SP4UI_JWT, saml2Response.getAccessToken()).set(SAML2SP4UIConstants.SAML2SP4UI_SLO_SUPPORTED, saml2Response.isSloSupported()));}}}	Yes
981	public class A {private String _getWorkflowTaskName(long companyId, long userId, long workflowInstanceId) {try {return Stream.of(_workflowTaskManager.search(companyId,userId,null,null,null,null,null,null,null,null,false,null,null,new Long[] {workflowInstanceId},true,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null)).flatMap(List::stream).map(WorkflowTask::getName).findFirst().orElse(StringPool.BLANK);} catch (WorkflowException workflowException) {if (_log.isDebugEnabled()) {}}return StringPool.BLANK;}}	Yes
982	"public class A {@Overridepublic Promise<DeferredVoid> removeStale(String clusterControllerId, Long maxLastSeenDateMs) {logger.trace(""RemoveStale(ccId={}, maxLastSeenDateMs={}) called."",clusterControllerId,maxLastSeenDateMs);DeferredVoid deferred = new DeferredVoid();try {int deletedCount = discoveryEntryStore.removeStale(clusterControllerId, maxLastSeenDateMs);logger.info(""RemoveStale(ccId={}, maxLastSeenDateMs={}) deleted {} stale entries."",clusterControllerId,maxLastSeenDateMs,deletedCount);deferred.resolve();} catch (Exception e) {logger.error(""RemoveStale(ccId={}, maxLastSeenDateMs={}) failed."",clusterControllerId,maxLastSeenDateMs,e);deferred.reject(new ProviderRuntimeException(""RemoveStale failed: "" + e.toString()));}return new Promise<DeferredVoid>(deferred);}}"	No
983	"public class A {public static String[] loadDefaultGbidsFromDefaultMessagingProperties() {Properties joynrDefaultProperties =PropertyLoader.loadProperties(DEFAULT_MESSAGING_PROPERTIES_FILE);if (!joynrDefaultProperties.containsKey(PROPERTY_GBIDS)) {throw new JoynrIllegalStateException(""No GBIDs found in default properties."");}return Arrays.stream(joynrDefaultProperties.getProperty(PROPERTY_GBIDS).split("","")).map(a -> a.trim()).toArray(String[]::new);}}"	Yes
984	public class A {void removePendingCompactionInstant(HoodieTimeline timeline, HoodieInstant instant)throws IOException {HoodieCompactionPlan plan =CompactionUtils.getCompactionPlan(metaClient, instant.getTimestamp());removePendingCompactionOperations(CompactionUtils.getPendingCompactionOperations(instant, plan).map(instantPair ->Pair.of(instantPair.getValue().getKey(),CompactionOperation.convertFromAvroRecordInstance(instantPair.getValue().getValue()))));}}	Yes
985	"public class A {@Overridepublic FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {if (!file.getFileName().toString().equals(MCRMetsSave.getMetsFileName())) {MCRPath mcrPath = MCRPath.toMCRPath(file);String path;try {path = MCRXMLFunctions.encodeURIPath(mcrPath.getOwnerRelativePath().substring(1), true);} catch (URISyntaxException e) {throw new IOException(e);}if (!fileGroup.contains(path)) {LOGGER.warn(""{} does not appear in {}!"", path, mcrPath.getOwner());complete.set(false);return FileVisitResult.TERMINATE;}}return super.visitFile(file, attrs);}}"	No
986	"public class A {@Overridepublic void run() {EventLoopGroup bossGroup = new NioEventLoopGroup(1);workerGroup = new NioEventLoopGroup();SimpleClientInitializer clientInitializer =new SimpleClientInitializer(isOnlineFuture, securedClient);clientInitializer.setScenario(scenarioHandler);try {ServerBootstrap b = new ServerBootstrap();b.group(bossGroup, workerGroup).channel(NioServerSocketChannel.class).childHandler(clientInitializer);ChannelFuture f = b.bind(port).sync();this.port = ((InetSocketAddress) f.channel().localAddress()).getPort();isOnlineFuture.set(true);synchronized (scenarioHandler) {LOG.debug(""WAITING FOR SCENARIO"");while (!scenarioHandler.isScenarioFinished()) {scenarioHandler.wait();}}} catch (Exception ex) {LOG.error(ex.getMessage(), ex);} finally {LOG.debug(""listening client shutting down"");try {workerGroup.shutdownGracefully().get();bossGroup.shutdownGracefully().get();LOG.debug(""listening client shutdown succesful"");} catch (InterruptedException | ExecutionException e) {LOG.error(e.getMessage(), e);}}scenarioDone.set(true);}}"	No
987	"public class A {private List<String> getOutputLines(JobSnapshot snapshot) throws IOException {String dataGuid = snapshot.getGeneratedDataGuids().stream().collect(SingleCollector.single());JobDataWithByteSource jobSource = jobService.tryObtainData(dataGuid).get();LOGGER.info(""actual output;\n{}"", jobSource.getByteSource().asCharSource(Charsets.UTF_8).read());return jobSource.getByteSource().asCharSource(Charsets.UTF_8).readLines();}}"	No
988	"public class A {public static String jpsonicHomePathForTest() {if (jpsonicHomeDirForTest == null) {try {jpsonicHomeDirForTest = Files.createTempDirectory(""jpsonic_test_"").toFile();} catch (IOException e) {throw new IllegalStateException(""Error while creating temporary JPSONIC_HOME directory for tests"", e);}if (LOG.isInfoEnabled()) {LOG.info(""JPSONIC_HOME directory will be {}"", jpsonicHomeDirForTest.getAbsolutePath());}}return jpsonicHomeDirForTest.getAbsolutePath();}}"	No
989	"public class A {@Overrideprotected void startScan() {if (usbSerialDiscovery != null) {usbSerialDiscovery.doSingleScan();} else {logger.info(""Could not scan, as there is no USB-Serial discovery service configured."");}}}"	No
990	public class A {private void persistDimension(long cuboidId,List<Object> dimValueList,List<DimensionMetaInfo> dimensionMetaList,CountingOutputStream indexOut,TblColRef dimension,Map<TblColRef, Dictionary<String>> dictMaps)throws IOException {Stopwatch stopwatch = Stopwatch.createUnstarted();stopwatch.start();DimensionMetaInfo dimensionMeta = new DimensionMetaInfo();dimensionMetaList.add(dimensionMeta);DimensionEncoding encoding;IIColumnDescriptor columnDescriptor;if (dimensionsUseDictEncoding.contains(dimension)) {Dictionary<String> dict = dictMaps.get(dimension);encoding = new DictionaryDimEnc(dict);if (dict instanceof TrieDictionary) {columnDescriptor =new SeqIIColumnDescriptor(dimension.getName(), dict.getMinId(), dict.getMaxId());} else {columnDescriptor =new FixLenIIColumnDescriptor(dimension.getName(), encoding.getLengthOfEncoding());}} else {RowKeyColDesc colDesc = cubeDesc.getRowkey().getColDesc(dimension);encoding =DimensionEncodingFactory.create(colDesc.getEncodingName(), colDesc.getEncodingArgs(), colDesc.getEncodingVersion());columnDescriptor =new FixLenIIColumnDescriptor(dimension.getName(), encoding.getLengthOfEncoding());}dimensionMeta.setName(dimension.getName());dimensionMeta.setStartOffset((int) indexOut.getCount());int fixEncodingLen = encoding.getLengthOfEncoding();DataOutputStream dataOut = new DataOutputStream(indexOut);ColumnarStoreDimDesc cStoreDimDesc = getColumnarStoreDimDesc(dimension, encoding);ColumnDataWriter columnDataWriter = cStoreDimDesc.getDimWriter(dataOut, dimValueList.size());for (Object cell : dimValueList) {byte[] fixLenBytes = new byte[fixEncodingLen];if (cell != null) {encoding.encode((String) cell, fixLenBytes, 0);} else {encoding.encode(null, fixLenBytes, 0);dimensionMeta.setHasNull(true);}columnDescriptor.getWriter().addValue(fixLenBytes);columnDataWriter.write(fixLenBytes);}columnDataWriter.flush();dimensionMeta.setDataLength(dataOut.size());columnDescriptor.getWriter().write(indexOut);dimensionMeta.setIndexLength((int) indexOut.getCount() - dimensionMeta.getStartOffset() - dimensionMeta.getDataLength());dimensionMeta.setCompression(cStoreDimDesc.getCompression().name());stopwatch.stop();if (logger.isDebugEnabled()) {}}}	Yes
991	public class A {public synchronized void reloadPackage(String packageName) throws RuleBaseException {long start = System.currentTimeMillis();reloadDeclarations();packageStrings.clear();StringBuffer packageString = initNewPackageString(packageName);for (RuleBaseElementId id : manager.list(RuleBaseElementType.Function, packageName)) {String code = manager.get(id);packageString.append(code);}for (RuleBaseElementId id : manager.list(RuleBaseElementType.Rule, packageName)) {String code = manager.get(id);String formattedRule = String.format(RULE_TEMPLATE, id.getName(), code);packageString.append(formattedRule);}Collection<String> flows = queryFlows(packageName);Collection<KnowledgePackage> compiledPackage =compileDrlString(packageString.toString(), flows);lockRuleBase();if (base.getKnowledgePackage(packageName) != null) {base.removeKnowledgePackage(packageName);}base.addKnowledgePackages(compiledPackage);unlockRuleBase();}}	Yes
992	public class A {public synchronized void removeBinding(Class<? extends ActionBean> beanType) {UrlBinding binding = classCache.get(beanType);if (binding == null) {return;}Set<UrlBinding> resolvedConflicts = null;for (String path : getCachedPaths(binding)) {pathCache.remove(path);List<UrlBinding> conflicts = pathConflicts.get(path);if (conflicts != null) {conflicts.remove(binding);if (conflicts.size() == 1) {if (resolvedConflicts == null) {resolvedConflicts = new LinkedHashSet<UrlBinding>();}resolvedConflicts.add(pathCache.get(conflicts.get(0)));conflicts.clear();}if (conflicts.isEmpty()) {pathConflicts.remove(path);}}}for (String prefix : getCachedPrefixes(binding)) {Set<UrlBinding> bindings = prefixCache.get(prefix);if (bindings != null) {bindings.remove(binding);if (bindings.isEmpty()) {prefixCache.remove(prefix);}}}classCache.remove(beanType);if (resolvedConflicts != null) {for (UrlBinding conflict : resolvedConflicts) {removeBinding(conflict.getBeanType());addBinding(conflict.getBeanType(), conflict);}}}}	Yes
993	"public class A {public void configure() throws Exception {context.addComponent(""activemq"", activeMQComponent(vmUri(""?broker.persistent=false"")));from(""activemq:InitialQueue"").to(""log:Messages"");from(""activemq:topic:ActiveMQ.Advisory.Queue?cacheLevelName=CACHE_CONSUMER"").process(new Processor() {public void process(Exchange exchange) {Message in = exchange.getIn();if (in instanceof JmsMessage) {JmsMessage jmsMessage = (JmsMessage) in;javax.jms.Message value = jmsMessage.getJmsMessage();if (value instanceof ActiveMQMessage) {ActiveMQMessage activeMQMessage = (ActiveMQMessage) value;DataStructure structure = activeMQMessage.getDataStructure();if (structure instanceof DestinationInfo) {DestinationInfo destinationInfo = (DestinationInfo) structure;LOG.info(""Received: {}"", destinationInfo);}}}}});}}"	No
994	public class A {@Overridepublic CqQuery newCq(String queryString, CqAttributes cqAttributes)throws QueryInvalidException, CqException {preOp(true);ClientCQ cq = null;try {cq =((DefaultQueryService) realQueryService).getCqService().newCq(null,queryString,cqAttributes,((DefaultQueryService) realQueryService).getPool(),false);cq.setProxyCache(this.proxyCache);this.cqNames.add(cq.getName());} catch (CqExistsException cqe) {if (logger.isDebugEnabled()) {}} finally {postOp();}return cq;}}	Yes
995	"public class A {public static File base64StringToFile(String encodedIsoData, String folder, String fileName)throws IOException {byte[] decoded = Base64.decodeBase64(encodedIsoData.getBytes(StandardCharsets.US_ASCII));Path destPath = Paths.get(folder, fileName);try {Files.createDirectories(destPath.getParent());} catch (final IOException e) {LOG.warn(""Exception hit while trying to recreate directory: "" + destPath.getParent().toString());}return Files.write(destPath, decoded).toFile();}}"	No
996	"public class A {@Overridepublic Map.Entry<AttachmentInfo, Metacard> parseParts(Collection<Part> contentParts, String transformerParam) {if (contentParts.size() == 1) {Part part = Iterables.get(contentParts, 0);try (InputStream inputStream = part.getInputStream()) {ContentDisposition contentDisposition =new ContentDisposition(part.getHeader(HEADER_CONTENT_DISPOSITION));return new ImmutablePair<>(attachmentParser.generateAttachmentInfo(inputStream,part.getContentType(),contentDisposition.getParameter(FILENAME_CONTENT_DISPOSITION_PARAMETER_NAME)),null);} catch (IOException e) {LOGGER.debug(""IOException reading stream from file attachment in multipart body."", e);}}Metacard metacard = null;AttachmentInfo attachmentInfo = null;Map<String, AttributeImpl> attributeMap = new HashMap<>();for (Part part : contentParts) {String name = part.getName();String parsedName = (name.startsWith(""parse."")) ? name.substring(6) : name;try (InputStream inputStream = part.getInputStream()) {ContentDisposition contentDisposition =new ContentDisposition(part.getHeader(HEADER_CONTENT_DISPOSITION));switch (name) {case ""parse.resource"":attachmentInfo =attachmentParser.generateAttachmentInfo(inputStream,part.getContentType(),contentDisposition.getParameter(FILENAME_CONTENT_DISPOSITION_PARAMETER_NAME));break;case ""parse.metadata"":metacard = parseMetacard(transformerParam, metacard, part, inputStream);break;default:parseOverrideAttributes(attributeMap, parsedName, inputStream);break;}} catch (IOException e) {LOGGER.debug(""Unable to get input stream for mime attachment. Ignoring override attribute: {}"",name,e);}}if (attachmentInfo == null) {throw new IllegalArgumentException(""No parse.resource specified in request."");}if (metacard == null) {metacard = new MetacardImpl();}Set<AttributeDescriptor> missingDescriptors = new HashSet<>();for (Attribute attribute : attributeMap.values()) {if (metacard.getMetacardType().getAttributeDescriptor(attribute.getName()) == null) {attributeRegistry.lookup(attribute.getName()).ifPresent(missingDescriptors::add);}metacard.setAttribute(attribute);}if (!missingDescriptors.isEmpty()) {MetacardType original = metacard.getMetacardType();MetacardImpl newMetacard = new MetacardImpl(metacard);newMetacard.setType(new MetacardTypeImpl(original.getName(), original, missingDescriptors));metacard = newMetacard;}return new ImmutablePair<>(attachmentInfo, metacard);}}"	No
997	public class A {@Overrideprotected void startScan() {synchronized (this) {removeOlderResults(getTimestampOfLastScan(), null, accountHandler.getThing().getUID());final ThingUID accountUID = accountHandler.getThing().getUID();accountHandler.updateModelFromServerAndUpdateThingStatus();final SensiboModel model = accountHandler.getModel();for (final SensiboSky pod : model.getPods()) {final ThingUID podUID =new ThingUID(SensiboBindingConstants.THING_TYPE_SENSIBOSKY,accountUID,String.valueOf(pod.getMacAddress()));Map<String, String> properties = pod.getThingProperties();Map<String, Object> stringObjectProperties = new HashMap<>();stringObjectProperties.putAll(properties);final DiscoveryResult discoveryResult =DiscoveryResultBuilder.create(podUID).withBridge(accountUID).withLabel(pod.getProductName()).withRepresentationProperty(Thing.PROPERTY_MAC_ADDRESS).withProperties(stringObjectProperties).build();thingDiscovered(discoveryResult);}}}}	Yes
998	public class A {private AsyncEvent getObjectInSerialSenderQueue(Long currentKey) {AsyncEvent object = optimalGet(currentKey);if ((null != object) && logger.isDebugEnabled()) {}if (object != null && object instanceof GatewaySenderEventImpl) {GatewaySenderEventImpl copy = ((GatewaySenderEventImpl) object).makeHeapCopyIfOffHeap();if (copy == null) {}object = copy;}return object;}}	Yes
999	public class A {@Overridepublic void close() throws IOException {IOException ex = null;for (MsgStreamer m : this.streamers) {try {m.close();} catch (IOException e) {if (ex == null) {ex = e;} else {}}}if (ex != null) {throw ex;}}}	Yes
1000	"public class A {public RefreshWorker addContent(Collection<? extends ContentInfo> contents) {if (contents != null) {for (ContentInfo content : contents) {if (content == null) {continue;}if (content.getId() == null || content.getId().isEmpty()) {String msg = String.format(""content does not contain a mappable Red Hat ID: %s"", content);throw new IllegalArgumentException(msg);}ContentInfo existing = this.contentMapper.getImportedEntity(content.getId());if (existing != null && !existing.equals(content)) {log.warn(""Multiple versions of the same content received during refresh; ""+ ""discarding previous: {} => {}, {}"",content.getId(),existing,content);}this.contentMapper.addImportedEntity(content);}}return this;}}"	Yes
1001	"public class A {private void sendCQProfileOperation(operationType opType, ServerCQ cq) {if (!(this.region instanceof PartitionedRegion)) {return;}OperationMessage msg = new OperationMessage();msg.regionName = this.region.getFullPath();msg.opType = opType;msg.cq = cq;try {sendFilterProfileOperation(msg);} catch (Exception ex) {if (logger.isDebugEnabled()) {logger.debug(""Error sending CQ request to peers. {}"", ex.getLocalizedMessage(), ex);}}}}"	No
1002	"public class A {@Overridepublic @Nullable String transform(String filename, String source) throws TransformationException {if (filename == null || source == null) {throw new TransformationException(""the given parameters 'filename' and 'source' must not be null"");}final long startTime = System.currentTimeMillis();String result = """";try {final CompiledScript cScript = manager.getScript(filename);final Bindings bindings = cScript.getEngine().createBindings();bindings.put(""input"", source);result = String.valueOf(cScript.eval(bindings));return result;} catch (ScriptException e) {throw new TransformationException(""An error occurred while executing script. "" + e.getMessage(), e);} finally {}}}"	Yes
1003	"public class A {@Overridepublic void onClick() {try {HttpResourceStream stream =new HttpResourceStream(new ResponseHolder(ClientBuilder.newClient().target(RequestCycle.get().getUrlRenderer().renderFullUrl(Url.parse(UrlUtils.rewriteToContextRelative(SAML2SP4UIConstants.URL_CONTEXT + ""/metadata"",RequestCycle.get())))).request().get()));ResourceStreamRequestHandler rsrh = new ResourceStreamRequestHandler(stream);rsrh.setFileName(stream.getFilename() == null? SyncopeConsoleSession.get().getDomain() + ""-SAML-SP-Metadata.xml"": stream.getFilename());rsrh.setContentDisposition(ContentDisposition.ATTACHMENT);getRequestCycle().scheduleRequestHandlerAfterCurrent(rsrh);} catch (Exception e) {SyncopeConsoleSession.get().onException(e);}}}"	Yes
1004	"public class A {@Overridepublic void handleTaskExecution(byte[] body) throws IOException {try {String incomingTaskMessage = new String(body, StandardCharsets.UTF_8);JsonObject incomingTaskMessageJson =new JsonParser().parse(incomingTaskMessage).getAsJsonObject();String htmlDataComponentResponseBuffer =componentHTML(healthUtil.getDataComponentStatus(), ""Data Component"");String htmlServiceResponseBuffer = componentHTML(healthUtil.getServiceStatus(), ""Services"");String htmlAgentResponseBuffer = getAgentHTML();Map<String, String> idDataMap = new LinkedHashMap<>();idDataMap.put(""table_agent"", htmlAgentResponseBuffer);idDataMap.put(""table_services"", htmlServiceResponseBuffer);idDataMap.put(""table_data_components"", htmlDataComponentResponseBuffer);String mailHTML = createEmailHTML(idDataMap);Map<String, String> valuesMap = new HashMap<>();valuesMap.put(""date"",InsightsUtils.specficTimeFormat(incomingTaskMessageJson.get(""executionId"").getAsLong(), ""yyyy-MM-dd""));StringSubstitutor sub = new StringSubstitutor(valuesMap, ""{"", ""}"");mailHTML = sub.replace(mailHTML);setDetailsInEmailHistory(incomingTaskMessageJson, mailHTML);InsightsStatusProvider.getInstance().createInsightStatusNode(""SystemNotificationDetailSubscriber completed"", PlatformServiceConstants.SUCCESS);} catch (InsightsJobFailedException ijfe) {InsightsStatusProvider.getInstance().createInsightStatusNode(""SystemNotificationDetail Completed with error "" + ijfe.getMessage(),PlatformServiceConstants.FAILURE);statusLog = ijfe.getMessage();throw ijfe;} catch (Exception e) {InsightsStatusProvider.getInstance().createInsightStatusNode(""SystemNotificationDetail Completed with error "" + e.getMessage(),PlatformServiceConstants.FAILURE);throw new InsightsJobFailedException(e.getMessage());}}}"	Yes
1005	"public class A {@Overridepublic List<UserAuthorityDto> getUserAuthorities(String username) {UserDetails user = this.loadUser(username);if (null == user) {return null;}List<UserAuthorityDto> dtos = new ArrayList<>();try {List<Authorization> auths = this.getAuthorizationManager().getUserAuthorizations(username);if (null != auths) {auths.forEach(auth -> dtos.add(new UserAuthorityDto(auth)));}} catch (ApsSystemException e) {logger.error(""Error extracting auths for user {}"", username, e);throw new RestServerError(""Error extracting auths for user "" + username, e);}return dtos;}}"	No
1006	"public class A {public ActionForward run_custom_filter(ActionMapping mapping,ActionForm form,HttpServletRequest request,HttpServletResponse response) {DynaActionForm ticklerForm = (DynaActionForm) form;CustomFilter filter = (CustomFilter) ticklerForm.get(""filter"");String name = filter.getName();CustomFilter newFilter = ticklerManager.getCustomFilter(name, this.getProviderNo(request));if (newFilter == null) {newFilter = new CustomFilter();}ticklerForm.set(""filter"", newFilter);return filter(mapping, form, request, response);}}"	Yes
1007	"public class A {public static boolean readPrimitiveBoolean(DataInput in) throws IOException {InternalDataSerializer.checkIn(in);boolean value = in.readBoolean();if (logger.isTraceEnabled(LogMarker.SERIALIZER_VERBOSE)) {logger.trace(LogMarker.SERIALIZER_VERBOSE, ""Read Boolean {}"", value);}return value;}}"	No
1008	"public class A {@PayloadRoot(localPart = ""SetScheduleAsyncRequest"", namespace = NAMESPACE)@ResponsePayloadpublic SetScheduleResponse getSetScheduleResponse(@OrganisationIdentification final String organisationIdentification,@RequestPayload final SetScheduleAsyncRequest request)throws OsgpException {final SetScheduleResponse response = new SetScheduleResponse();try {final ResponseData responseData =this.responseDataService.dequeue(request.getAsyncRequest().getCorrelationUid(), COMPONENT_WS_TARIFF_SWITCHING);response.setResult(OsgpResultType.fromValue(responseData.getResultType().getValue()));if (responseData.getMessageData() instanceof String) {response.setDescription((String) responseData.getMessageData());}} catch (final Exception e) {this.handleException(e);}return response;}}"	Yes
1009	"public class A {protected void printenv(String[] argv) throws Exception {Environment environ = getEnvironment();Map<String, String> envValues = environ.getEnv();OutputStream stdout = getOutputStream();if (argv.length == 1) {envValues.entrySet().stream().forEach(e ->println(argv[0], e.getKey() + ""="" + e.getValue(), stdout, envVarsEnodingCharset));variables.put(STATUS, 0);return;}if (argv.length != 2) {signalError(argv[0], ""printenv: only one variable value at a time"");return;}String varName = argv[1];String varValue = resolveEnvironmentVariable(varName, envValues);if (varValue == null) {signalError(argv[0], ""printenv: variable not set "" + varName);return;}if (log.isDebugEnabled()) {log.debug(""printenv({}) {}={}"", getServerChannelSession(), varName, varValue);}println(argv[0], varValue, stdout, envVarsEnodingCharset);variables.put(STATUS, 0);}}"	No
1010	public class A {@Overridepublic Object getRevision() {try {return getLastRevision();} catch (Exception e) {return null;}}}	Yes
1011	"public class A {public GeometryRasterMaskBuilder buildTileRangeMask(final GeoRSSReader reader, String previousEntryUpdate) throws IOException {final GridSubset gridSubset = layer.getGridSubset(gridSetId);final int[] metaTilingFactors = layer.getMetaTilingFactors();GeometryRasterMaskBuilder matrix = null;Entry entry;Geometry geom;try {while ((entry = reader.nextEntry()) != null) {if (entry.getUpdated() != null && entry.getUpdated().equals(previousEntryUpdate)) {logger.warn(""Skipping entry with id ""+ entry.getId()+ "" since it has the same date as our last feed update."");} else {if (matrix == null) {matrix = new GeometryRasterMaskBuilder(gridSubset, metaTilingFactors, maxMaskLevel);}if ((entry.getUpdated() != null)&& ((lastEntryUpdate == null)|| (lastEntryUpdate.compareTo(entry.getUpdated()) < 0))) {lastEntryUpdate = entry.getUpdated();}geom = entry.getWhere();matrix.setMasksForGeometry(geom);}}} finally {if (matrix != null) {matrix.disposeGraphics();}}return matrix;}}"	No
1012	public class A {static void gdalTransformation(File sourceFile, File file, WcsReaderRequest executedRequest, WcsReaderRequest targetRequest)throws IOException {File tmpDir = FileUtils.createTempDirectory();try {File outFile = new File(tmpDir, sourceFile.getName());reproject(sourceFile, executedRequest, targetRequest, outFile);transformFormat(outFile, executedRequest, targetRequest, file);} finally {FileUtils.delete(tmpDir);}}}	Yes
1013	"public class A {public static void updateVertexGuid(AtlasGraph atlasGraph,AtlasTypeRegistry typeRegistry,EntityGraphRetriever entityGraphRetriever,AtlasEntity entity) {String entityGuid = entity.getGuid();AtlasObjectId objectId = entityGraphRetriever.toAtlasObjectIdWithoutGuid(entity);AtlasEntityType entityType = typeRegistry.getEntityTypeByName(entity.getTypeName());String vertexGuid = null;try {vertexGuid =AtlasGraphUtilsV2.getGuidByUniqueAttributes(atlasGraph, entityType, objectId.getUniqueAttributes());} catch (AtlasBaseException e) {return;}if (StringUtils.isEmpty(vertexGuid) || vertexGuid.equals(entityGuid)) {return;}AtlasVertex v = AtlasGraphUtilsV2.findByGuid(atlasGraph, vertexGuid);if (v == null) {return;}addHistoricalGuid(v, vertexGuid);AtlasGraphUtilsV2.setProperty(v, Constants.GUID_PROPERTY_KEY, entityGuid);LOG.warn(""GUID Updated: Entity: {}: from: {}: to: {}"", objectId, vertexGuid, entity.getGuid());}}"	Yes
1014	"public class A {private Collection getRemoteCollection(final XmldbURI xmldbURI, String user, String password)throws XMLDBException {mode = REMOTE_CONNECTION;if (user == null) {user = SecurityManager.GUEST_USER;password = SecurityManager.GUEST_USER;}if (password == null) {password = """";}try {final String protocol = ssl_enable ? ""https"" : ""http"";if (ssl_enable) {SSLHelper.initialize(ssl_allow_self_signed, ssl_verify_hostname);}final URL url =new URL(protocol, xmldbURI.getHost(), xmldbURI.getPort(), xmldbURI.getContext());final Leasable<XmlRpcClient> rpcClient = getRpcClient(user, password, url);return readCollection(xmldbURI.getRawCollectionPath(), rpcClient);} catch (final MalformedURLException e) {throw new XMLDBException(ErrorCodes.INVALID_DATABASE, e.getMessage());} catch (final XMLDBException e) {switch (e.errorCode) {case ErrorCodes.NO_SUCH_RESOURCE:case ErrorCodes.NO_SUCH_COLLECTION:case ErrorCodes.INVALID_COLLECTION:case ErrorCodes.INVALID_RESOURCE:LOG.debug(e.getMessage());return null;default:LOG.error(e.getMessage(), e);throw e;}}}}"	No
1015	"public class A {@Overridepublic SelectionCommandProcessor createPurgeCommandProcessor() {return (bounds, cmd) -> {if (LOGGER.isTraceEnabled()) {LOGGER.trace(""Purge Occured: "" + cmd);}myGeometryProcessor.purgeOccurred(bounds, null, cmd);};}}"	No
1016	"public class A {public void initiateChannelBufferManager(final String channelRegEx) {Configurator configurator = AnalyticsConfigurator.getInstance();redisLoadShedder = new ConcurrentHashMap<String, LoadShedder>();redisHost = configurator.getProperty(AnalyticsConfigurationProperty.REDIS_HOST);redisPort =Integer.parseInt(configurator.getProperty(AnalyticsConfigurationProperty.REDIS_PORT));CHANNEL_PREFIX_STRING =configurator.getProperty(AnalyticsConfigurationProperty.TAGGER_CHANNEL_BASENAME) + ""."";PERSISTER_LOAD_CHECK_INTERVAL_MINUTES =Integer.parseInt(configurator.getProperty(AnalyticsConfigurationProperty.PERSISTER_LOAD_CHECK_INTERVAL_MINUTES));PERSISTER_LOAD_LIMIT =Integer.parseInt(configurator.getProperty(AnalyticsConfigurationProperty.PERSISTER_LOAD_LIMIT));AnalyticsConfigurator analyticsConfigurator = AnalyticsConfigurator.getInstance();granularityList = analyticsConfigurator.getGranularities();tagDataMap = new ConcurrentHashMap<CounterKey, Object>();confDataMap = new ConcurrentHashMap<CounterKey, Object>();channelMap = new ConcurrentHashMap<String, Long>();bufferSize = -1;executorServicePool = Executors.newCachedThreadPool();jedisConn = new JedisConnectionObject(redisHost, redisPort);try {subscriberJedis = jedisConn.getJedisResource();if (subscriberJedis != null) isConnected = true;} catch (JedisConnectionException e) {subscriberJedis = null;isConnected = false;AnalyticsErrorLog.sendErrorMail(""Redis"", e.getMessage());}if (isConnected) {aidrSubscriber = new RedisSubscriber();jedisConn.setJedisSubscription(subscriberJedis, true);try {subscribeToChannel(channelRegEx);isSubscribed = true;aidrSubscriber.setChannelName(channelRegEx);} catch (Exception e) {isSubscribed = false;AnalyticsErrorLog.sendErrorMail(""Redis"", e.getMessage());}if (isSubscribed) {subscribedChannels = new HashSet<String>();}}}}"	Yes
1017	"public class A {@Overridepublic void run() {while (alive) {try {PackResponse packResponse = exchangeClient.exchange();long newPollRate = packResponse != null ? packResponse.getNewPollRate() : 0;if (newPollRate > 0 && pollRate != newPollRate) {log.info(""Poll rate {} changed to {} ms"", pollRate, newPollRate);pollRate = newPollRate;}} catch (IOException e) {log.error(""Error in exchange client"", e);throw new TechnicalException(""IOException"", e);} catch (NodeNotFound e) {log.warn(""Agent {} didn't registered on current coordinator! Reset agent registration."",nodeContext.getId());exchangeClient.getPackExchanger().clean();AgentStarter.resetAgent(Agent.this);} catch (Throwable e) {alive = false;log.error(""Agent "" + nodeContext.getId() + "" got an exception from coordinator"", e);}log.debug(""Pack exchange completed. Poll rate on agent {} is {} ms"", nodeContext.getId(), pollRate);TimeUtils.sleepMillis(pollRate);}}}"	No
1018	"public class A {@Overridepublic String load(Long uid) {try {String userName = AlluxioFuseUtils.getGroupName(uid);return userName.isEmpty() ? DEFAULT_USER_NAME : userName;} catch (IOException e) {LOG.error(""Failed to get user name from uid {}, fallback to {}"", uid, DEFAULT_USER_NAME);return DEFAULT_USER_NAME;}}}"	No
1019	public class A {@Overridepublic void persistInterface(final MetaDataRegisterDTO metadata) {String rpcType = metadata.getRpcType();String contextPath = metadata.getContextPath().substring(1);registerMetadata(rpcType, contextPath, metadata);if (RpcTypeEnum.HTTP.getName().equals(rpcType)|| RpcTypeEnum.TARS.getName().equals(rpcType)|| RpcTypeEnum.GRPC.getName().equals(rpcType)) {registerURI(rpcType, contextPath, metadata);}}}	Yes
1020	public class A {public void shutdown() {try {flush();for (FileChannel fc : logid2FileChannel.values()) {fc.close();}logid2FileChannel.clear();entryLogManager.close();synchronized (compactionLogLock) {if (compactionLogChannel != null) {compactionLogChannel.close();compactionLogChannel = null;}}} catch (IOException ie) {} finally {for (FileChannel fc : logid2FileChannel.values()) {IOUtils.close(LOG, fc);}entryLogManager.forceClose();synchronized (compactionLogLock) {IOUtils.close(LOG, compactionLogChannel);}}entryLoggerAllocator.stop();}}	Yes
1021	"public class A {@Overridepublic void handle(PacketClientCacheStatus packet, long currentTimeMillis, PlayerConnection connection) {LOGGER.debug(""Setting client caching status to {}"", packet.isEnabled());connection.cachingSupported(packet.isEnabled() && connection.server().serverConfig().enableClientCache());}}"	No
1022	"public class A {@Overridepublic void portalInit() {try {doPortalInit();} catch (Exception exception) {throw new IllegalStateException(""Unable to initialize portal"", exception);}}}"	Yes
1023	"public class A {@Overridepublic Repository findByG_N_P(long groupId, String name, String portletId)throws NoSuchRepositoryException {Repository repository = fetchByG_N_P(groupId, name, portletId);if (repository == null) {StringBundler sb = new StringBundler(8);sb.append(_NO_SUCH_ENTITY_WITH_KEY);sb.append(""groupId="");sb.append(groupId);sb.append("", name="");sb.append(name);sb.append("", portletId="");sb.append(portletId);sb.append(""}"");if (_log.isDebugEnabled()) {}throw new NoSuchRepositoryException(sb.toString());}return repository;}}"	Yes
1024	"public class A {private String getServerIdByStackResource(String stackName) throws HeatException {String uri;try {uri =connection.getHeatEndpoint()+ ""/stacks/""+ URLEncoder.encode(stackName, ""UTF-8"")+ ""/resources"";RESTResponse response = connection.processRequest(uri, ""GET"");String body = response.getResponseBody();JSONObject responseJson = new JSONObject(body);JSONArray resources = responseJson.getJSONArray(""resources"");for (int i = 0; i < resources.length(); i++) {JSONObject resource = resources.getJSONObject(i);InstanceType type = getInstanceType(resource.optString(""resource_type""));if (type == null) {continue;}switch (type) {case NOVA:case EC2:case TROVE:return resource.optString(""physical_resource_id"");default:continue;}}} catch (UnsupportedEncodingException e) {throw new RuntimeException(e);} catch (OpenStackConnectionException ex) {throw new HeatException(""Failed to connect to Heat: "" + ex.getMessage(), ex.getResponseCode());} catch (JSONException e) {logger.error(""HeatClient.getStackDetails()"", e);throw new HeatException(e.getMessage());}return null;}}"	Yes
1025	"public class A {@NotNullpublic List<T> read(@NotNull String dir) throws IOException {List<T> entries = Lists.newArrayList();File[] files = new File(dir).listFiles();LOGGER.debug("" {} files found in directory {}"", files.length, dir);int currentFileIndex = 0;while (currentFileIndex < files.length&& (maxFilesToRead == null || currentFileIndex < maxFilesToRead)) {JsonParser parser = new JsonParser();JsonReader reader = new JsonReader(new FileReader(files[currentFileIndex]));reader.setLenient(true);while (reader.peek() != JsonToken.END_DOCUMENT) {entries.add(read(parser.parse(reader).getAsJsonObject()));}reader.close();currentFileIndex++;}LOGGER.debug(""  Done reading {} files "", currentFileIndex);return entries;}}"	No
1026	"public class A {public static com.liferay.portal.kernel.repository.model.FileEntry getFileEntry(HttpPrincipal httpPrincipal, long groupId, long folderId, String title)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DLAppServiceUtil.class, ""getFileEntry"", _getFileEntryParameterTypes39);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, folderId, title);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.repository.model.FileEntry) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
1027	"public class A {@Overridepublic void persistSessions(String deploymentName, Map<String, PersistentSession> sessionData) {if (deploymentName == null || """".equals(deploymentName.trim())) {deploymentName = ""_ROOT_deployment"";}Map<String, Object> map = new LinkedHashMap<>();for (Map.Entry<String, PersistentSession> e : sessionData.entrySet()) {Map<String, Object> mps = new LinkedHashMap<>();mps.put(""expiration"", e.getValue().getExpiration().getTime());mps.put(""data"", e.getValue().getSessionData());map.put(e.getKey(), mps);}if (sessionData.size() > 0) {try (ObjectOutputStream oos =new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(new File(sessionsDir, deploymentName))))) {oos.writeObject(map);} catch (Exception e) {}} else {}}}"	Yes
1028	"public class A {private Map<ParameterServerId, Integer> recoverPSAttemptIndex() {Map<ParameterServerId, Integer> psIdToAttemptIndexMap = null;if (appAttemptId.getAttemptId() > 1) {try {psIdToAttemptIndexMap = appStateStorage.loadPSMeta();} catch (Exception e) {LOG.error(""load task meta from file failed."", e);}}return psIdToAttemptIndexMap;}}"	No
1029	public class A {@Overridepublic void close() {for (ColumnFamilyHandle familyHandle : columnFamilyHandleMap.values()) {familyHandle.close();}db.close();}}	Yes
1030	"public class A {public static void logPullEvent(String dataId,String group,String tenant,String requestIpAppName,long ts,String type,long delayed,String clientIp,boolean sli) {if (!LogUtil.TRACE_LOG.isInfoEnabled()) {return;}if (StringUtils.isBlank(tenant)) {tenant = null;}LogUtil.TRACE_LOG.info(""{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}"",InetUtils.getSelfIP(),dataId,group,tenant,requestIpAppName,ts,""pull"",type,delayed,clientIp,sli);}}"	No
1031	"public class A {public static void engineInternalException(ExecEngineEvent event, Exception e) {try {event.state.addException(e);event.state.setError(true);event.state.eventScheduler.destroyPlanWithError();} catch (RemoteException ex) {log.error(""Cannot destroy plan"", ex);}}}"	Yes
1032	public class A {public void injectProxy(List<ArtifactRepository> repositories, List<org.apache.maven.settings.Proxy> proxies) {if (repositories != null) {for (ArtifactRepository repository : repositories) {org.apache.maven.settings.Proxy proxy = getProxy(repository, proxies);if (proxy != null) {SettingsDecryptionRequest request = new DefaultSettingsDecryptionRequest(proxy);SettingsDecryptionResult result = settingsDecrypter.decrypt(request);proxy = result.getProxy();if (logger.isDebugEnabled()) {for (SettingsProblem problem : result.getProblems()) {logger.debug(problem.getMessage(), problem.getException());}}Proxy p = new Proxy();p.setHost(proxy.getHost());p.setProtocol(proxy.getProtocol());p.setPort(proxy.getPort());p.setNonProxyHosts(proxy.getNonProxyHosts());p.setUserName(proxy.getUsername());p.setPassword(proxy.getPassword());repository.setProxy(p);} else {repository.setProxy(null);}}}}}	No
1033	"public class A {@Overridepublic void start() {switch (this.workerState.getCurrentState()) {case NEW:if (this.workerState.changeStateInitializing()) {logger.info(""start() started."");worker.start();workerState.changeStateStarted();logger.info(""start() completed."");break;}case INITIALIZING:logger.info(""start() failed. caused:already initializing."");break;case STARTED:logger.info(""start() failed. caused:already started."");break;case DESTROYING:throw new IllegalStateException(""Already destroying."");case STOPPED:throw new IllegalStateException(""Already stopped."");case ILLEGAL_STATE:throw new IllegalStateException(""Invalid State."");}}}"	No
1034	public class A {public void blockAllInbound() {inboundSettings.clear();setDefaultInboundSettings(false);}}	Yes
1035	"public class A {@POST@Path(""/{version:[vV][1]}/operationalEnvironments/{operationalEnvironmentId}/deactivate"")@Consumes(MediaType.APPLICATION_JSON)@Produces(MediaType.APPLICATION_JSON)@Operation(description = ""Deactivate an Operational Environment"",responses =@ApiResponse(content =@Content(array = @ArraySchema(schema = @Schema(implementation = Response.class)))))@Transactionalpublic Response deactivateOperationEnvironment(String request,@PathParam(""version"") String version,@PathParam(""operationalEnvironmentId"") String operationalEnvironmentId,@Context ContainerRequestContext requestContext)throws ApiException {logger.debug(""Received request to Deactivate an Operational Environment"");HashMap<String, String> instanceIdMap = new HashMap<>();instanceIdMap.put(ENVIRONMENT_ID_KEY, operationalEnvironmentId);return cloudOrchestration(request, Action.deactivate, instanceIdMap, version, getRequestId(requestContext));}}"	No
1036	"public class A {public void loadFont() throws InvalidFontException {if (ttf != null && font == null) {if (log.isDebugEnabled()) {log.debug(""Loading font "" + ttf);}String upperCaseTtf = ttf.trim().toUpperCase();if (upperCaseTtf.endsWith("".TTF"") || upperCaseTtf.endsWith("".OTF"")) {font = AwtFontManager.instance().getAwtFont(jasperReportsContext, ttf);} else {FontUtil.getInstance(jasperReportsContext).checkAwtFont(ttf,JRPropertiesUtil.getInstance(jasperReportsContext).getBooleanProperty(JRStyledText.PROPERTY_AWT_IGNORE_MISSING_FONT));font =new Font(ttf,Font.PLAIN,JRPropertiesUtil.getInstance(jasperReportsContext).getIntegerProperty(JRFont.DEFAULT_FONT_SIZE));}}}}"	No
1037	public class A {protected static void checkVersion(Set<TaskError> errors, String objectName, String field, String value) {try {Version.parseVersion(value);} catch (RuntimeException e) {errors.add(new TaskError(VERSION, field, objectName));}}}	Yes
1038	"public class A {@Overridepublic double get() {final Object value = gauge.getValue();if (value == null) {return 0;}if (value instanceof Double) {return (double) value;}if (value instanceof Number) {return ((Number) value).doubleValue();}if (value instanceof Boolean) {return ((Boolean) value) ? 1 : 0;}LOG.debug(""Invalid type for Gauge {}: {}, only number types and booleans are supported by this""+ "" reporter."",gauge,value.getClass().getName());return 0;}}"	Yes
1039	public class A {@NotNullpublic static void log(Logger logger, NotificationLevel notificationLevel, String message) {switch (notificationLevel) {case DEBUG:logger.debug(message);break;case INFO:logger.info(message);break;case WARN:break;case ERROR:logger.error(message);break;case OFF:break;}}}	Yes
1040	public class A {@BeforeClasspublic void createObjects() {log = LoggerFactory.getLogger(OptimizerTOSCADecember2015MultipleInputPointsTest.class);openInputFiles(TestConstants.APP_MODEL_FILENAME_MULTIPLE_INPUT_POINT,TestConstants.CLOUD_OFFER_FILENAME_IN_JSON_ATOS_7_MODULES);}}	Yes
1041	public class A {public static void setCmsInstanceId(String id) {AuAssert.check(storedCmsInstanceId == null);storedCmsInstanceId = id;String bootstrapId = getBootstrapInstanceId();if (!id.equals(bootstrapId)) {}}}	Yes
1042	public class A {@Overridepublic CloseableIterator<Index> getIndices(final DataStatisticsStore statisticsStore,final AdapterIndexMappingStore mappingStore,final QueryConstraints query,final Index[] indices,final InternalDataAdapter<?> adapter,final Map<QueryHint, Object> hints) {return new CloseableIterator<Index>() {Index nextIdx = null;boolean done = false;int i = 0;@Overridepublic boolean hasNext() {long min = Long.MAX_VALUE;Index bestIdx = null;while (!done && (i < indices.length)) {nextIdx = indices[i++];if (nextIdx.getIndexStrategy().getOrderedDimensionDefinitions().length == 0) {continue;}final List<MultiDimensionalNumericData> constraints = query.getIndexConstraints(nextIdx);RowRangeHistogramStatistic rowRangeHistogramStatistic = null;try (CloseableIterator<? extends Statistic<? extends StatisticValue<?>>> stats =statisticsStore.getIndexStatistics(nextIdx, RowRangeHistogramStatistic.STATS_TYPE, Statistic.INTERNAL_TAG)) {if (stats.hasNext()) {final Statistic<?> statistic = stats.next();if ((statistic instanceof RowRangeHistogramStatistic)&& (statistic.getBinningStrategy() instanceof CompositeBinningStrategy)&& ((CompositeBinningStrategy) statistic.getBinningStrategy()).isOfType(DataTypeBinningStrategy.class, PartitionBinningStrategy.class)) {rowRangeHistogramStatistic = (RowRangeHistogramStatistic) statistic;}}}if (rowRangeHistogramStatistic == null) {}if (IndexUtils.isFullTableScan(constraints)) {if (bestIdx == null) {bestIdx = nextIdx;}} else {final int maxRangeDecomposition;if (hints.containsKey(QueryHint.MAX_RANGE_DECOMPOSITION)) {maxRangeDecomposition = (Integer) hints.get(QueryHint.MAX_RANGE_DECOMPOSITION);} else {maxRangeDecomposition = 2000;}final QueryRanges ranges =DataStoreUtils.constraintsToQueryRanges(constraints, nextIdx, null, maxRangeDecomposition);final long temp =DataStoreUtils.cardinality(statisticsStore, rowRangeHistogramStatistic, adapter, nextIdx, ranges);if (temp < min) {bestIdx = nextIdx;min = temp;}}}nextIdx = bestIdx;done = true;return nextIdx != null;}@Overridepublic Index next() throws NoSuchElementException {if (nextIdx == null) {throw new NoSuchElementException();}final Index returnVal = nextIdx;nextIdx = null;return returnVal;}@Overridepublic void remove() {}@Overridepublic void close() {}};}}	Yes
1043	"public class A {public PeerStatus getNextPeerStatus(final TransferDirection direction) {List<PeerStatus> peerList = peerStatuses;if (isPeerRefreshNeeded(peerList)) {peerRefreshLock.lock();try {peerList = peerStatuses;if (isPeerRefreshNeeded(peerList)) {try {peerList = createPeerStatusList(direction);} catch (final Exception e) {final String message =String.format(""%s Failed to update list of peers due to %s"", this, e.toString());warn(logger, eventReporter, message);if (logger.isDebugEnabled()) {}}this.peerStatuses = peerList;peerRefreshTime = systemTime.currentTimeMillis();}} finally {peerRefreshLock.unlock();}}if (peerList == null || peerList.isEmpty()) {return null;}PeerStatus peerStatus;for (int i = 0; i < peerList.size(); i++) {final long idx = peerIndex.getAndIncrement();final int listIndex = (int) (idx % peerList.size());peerStatus = peerList.get(listIndex);if (isPenalized(peerStatus)) {} else {return peerStatus;}}return null;}}"	Yes
1044	"public class A {private void scanForSystemPropertyClasses() {try {final Set<ClassPath.ClassInfo> classesInPackage =ClassPath.from(getClass().getClassLoader()).getTopLevelClassesRecursive(""org.jivesoftware.openfire"");for (final ClassPath.ClassInfo classInfo : classesInPackage) {final String className = classInfo.getName();if (!CLASSES_TO_EXCLUDE.contains(className)) {try {final Class<?> clazz = classInfo.load();final Field[] fields = clazz.getDeclaredFields();for (final Field field : fields) {if (field.getType().equals(SystemProperty.class)) {try {field.setAccessible(true);field.get(null);} catch (final Throwable t) {}}}} catch (final Throwable t) {logger.warn(""Unable to load class {}"", className, t);}}}} catch (final Throwable t) {logger.warn(""Unable to scan classpath for SystemProperty classes"", t);}}}"	Yes
1045	public class A {@Overridepublic void onPaymentError(final PaymentErrorInternalEvent event) {notifyForCompletion();}}	Yes
1046	public class A {public static com.liferay.commerce.inventory.model.CommerceInventoryWarehouseItemSoapaddCommerceInventoryWarehouseItem(String externalReferenceCode,long userId,long commerceInventoryWarehouseId,String sku,int quantity)throws RemoteException {try {com.liferay.commerce.inventory.model.CommerceInventoryWarehouseItem returnValue =CommerceInventoryWarehouseItemServiceUtil.addCommerceInventoryWarehouseItem(externalReferenceCode, userId, commerceInventoryWarehouseId, sku, quantity);return com.liferay.commerce.inventory.model.CommerceInventoryWarehouseItemSoap.toSoapModel(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
1047	public class A {@PreDestroypublic void destroy() {try {com.hazelcast.core.Hazelcast.shutdownAll();} catch (Exception ex) {}}}	Yes
1048	"public class A {@Overridepublic void afterPropertiesSet() throws LiquibaseException {try {super.afterPropertiesSet();} catch (LiquibaseException e) {if (LOG.isErrorEnabled()) {LOG.error(""A rollback file has been generated at "" + rollbackFile);LOG.error(""Execute it within your database to rollback any changes"");LOG.error(""The exception is as follows\n"", e);}throw e;}}}"	Yes
1049	"public class A {public void simplePipeline(String newBranch) {wait.click(By.id(""pipeline-node-hittarget-2-add""));wait.sendKeys(By.cssSelector(""input.stage-name-edit""), ""simplePipeline creating Test stage"");wait.click(By.cssSelector(""button.btn-primary.add""));wait.click(By.cssSelector("".editor-step-selector div[data-functionName=\""echo\""]""));wait.sendKeys(By.cssSelector(""input.TextInput-control""), ""simplePipeline creating echo message"");wait.click(By.cssSelector(""div.sheet.active a.back-from-sheet""));}}"	Yes
1050	"public class A {@OnWebSocketClosepublic void onClose(int statusCode, String reason) {String reasonToPass;LxErrorCode codeToPass;webSocketLock.lock();try {logger.debug(""[{}] Websocket connection closed with code {} reason : {}"", debugId, statusCode, reason);if (security != null) {security.cancel();}session = null;if (offlineCode != null) {codeToPass = offlineCode;reasonToPass = offlineReason;} else {codeToPass = LxErrorCode.getErrorCode(statusCode);reasonToPass = reason;}} finally {webSocketLock.unlock();}responseLock.lock();try {if (awaitedResponse != null) {awaitedResponse.subResponse = null;}responseAvailable.signalAll();} finally {responseLock.unlock();}thingHandler.setOffline(codeToPass, reasonToPass);}}"	No
1051	"public class A {public void channelActive(final ChannelHandlerContext ctx) throws Exception {LOGGER.info(""Channel active: {}"", ctx.channel());}}"	No
1052	"public class A {public void initialize() {AmazonS3ClientBuilder builder = AmazonS3ClientBuilder.standard();if (!StringUtils.isBlank(accessKey) && !StringUtils.isBlank(secretKey)) {builder.withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials(accessKey, secretKey)));} else {builder.withCredentials(new DefaultAWSCredentialsProviderChain());}s3 = builder.withRegion(Regions.fromName(regionName)).build();try {if (!s3.doesBucketExistV2(bucketName)) {s3.createBucket(bucketName);}try {String status = s3.getBucketVersioningConfiguration(bucketName).getStatus();if (!BucketVersioningConfiguration.ENABLED.equals(status)) {try {s3.setBucketVersioningConfiguration(new SetBucketVersioningConfigurationRequest(bucketName,new BucketVersioningConfiguration(BucketVersioningConfiguration.ENABLED)));} catch (SdkClientException e) {String message =""Bucket versioning status: ""+ status+ "". Cannot enable versioning. Error message: ""+ e.getMessage();}}} catch (SdkClientException e) {}s3.listObjectsV2(bucketName);list("""");monitor = new ChangesMonitor(new S3RevisionGetter(), listenerTimerPeriod);} catch (SdkClientException | IOException e) {throw new IllegalStateException(""Failed to initialize a repository"", e);}}}"	Yes
1053	"public class A {private void handleError(StateMachine.Fsm fsm) {LOG.debug(""CONNECTED STATE: Cancelling Timeouts in handleError"");while (timestampRequests.size() > 0) {RequestAndTimeout r = timestampRequests.remove();if (r.getTimeout() != null) {r.getTimeout().cancel();}queueRetryOrError(fsm, r.getRequest());}Iterator<Map.Entry<Long, RequestAndTimeout>> iter = commitRequests.entrySet().iterator();while (iter.hasNext()) {RequestAndTimeout r = iter.next().getValue();if (r.getTimeout() != null) {r.getTimeout().cancel();}queueRetryOrError(fsm, r.getRequest());iter.remove();}channel.close();}}"	No
1054	public class A {public static void registerGauge(String metricName, final long value) {try {MetricRegistry registry = Metrics.getInstance().getRegistry();HoodieGauge guage = (HoodieGauge) registry.gauge(metricName, () -> new HoodieGauge<>(value));guage.setValue(value);} catch (Exception e) {}}}	Yes
1055	"public class A {public RetryPolicyFactory parse(Config retryPolicyConfig) {final Config boundedExponentialBackoffRetryConfig =new Configs().getConfig(retryPolicyConfig, BOUNDED_EXPONENTIAL_BACKOFF_RETRY_NAME);final long baseSleepTime =new Configs().getNanoseconds(boundedExponentialBackoffRetryConfig,""baseSleepTime"",TimeUnit.MILLISECONDS.toNanos(125));final long maxSleepTime =new Configs().getNanoseconds(boundedExponentialBackoffRetryConfig, ""maxSleepTime"", TimeUnit.SECONDS.toNanos(10));final int maxRetries =new Configs().getInt(boundedExponentialBackoffRetryConfig, ""maxRetries"", 100);final long maxElapsedTime =new Configs().getNanoseconds(boundedExponentialBackoffRetryConfig,""maxElapsedTime"",TimeUnit.SECONDS.toNanos(3 * 60));if (maxRetries <= 0 || maxElapsedTime <= 0) {return null;}return new DefaultRetryPolicyFactory(new FlexibleBoundedExponentialBackoffRetry(baseSleepTime, maxSleepTime, maxRetries, maxElapsedTime));}}"	Yes
1056	"public class A {void addHandler(String key, EventHandlerMethod handler) {Preconditions.checkArgument(!this.handlers.containsKey(key),""EventHandler can't be registered twice. Other instance: "" + this.handlers.get(key));this.handlers.put(key, handler);EventHandlerMethod[] newArray = new EventHandlerMethod[this.insertIndex + 1];if (this.sortedHandlerList.length > 0) {System.arraycopy(this.sortedHandlerList, 0, newArray, 0, this.sortedHandlerList.length);}newArray[this.insertIndex++] = handler;this.sortedHandlerList = newArray;this.dirty = true;}}"	Yes
1057	"public class A {@AsyncThreadprivate void executeRightNow(final Runnable task) {try {task.run();} catch (Throwable t) {_logger.warn(String.format(""Unhandled exception happened when running %s"", task.getClass().getName()),t);}}}"	No
1058	public class A {private void removePeerMSPIDMap(final Peer peer) {Properties properties = peer.getProperties();if (null != properties) {final String mspid = properties.getProperty(Peer.PEER_ORGANIZATION_MSPID_PROPERTY);if (!isNullOrEmpty(mspid)) {synchronized (peerMSPIDMap) {final Collection<Peer> peers = peerMSPIDMap.get(mspid);if (peers != null) {peers.remove(peer);if (peers.isEmpty()) {peerMSPIDMap.remove(mspid);}}}}}}}	Yes
1059	"public class A {private static String toString(final InputSource source) {try {final Reader reader = source.getReader();if (null != reader) {if (reader instanceof StringReader) {final StringReader sr = (StringReader) reader;sr.reset();}return IOUtils.toString(reader);}return """";} catch (final IOException e) {LOG.error(e.getMessage(), e);return """";}}}"	No
1060	"public class A {private SaslServer createSaslKerberosServer(final AuthenticateCallbackHandler saslServerCallbackHandler,final Map<String, ?> configs,Subject subject)throws IOException {final String servicePrincipal = SaslClientAuthenticator.firstPrincipal(subject);KerberosName kerberosName;try {kerberosName = KerberosName.parse(servicePrincipal);} catch (IllegalArgumentException e) {throw new KafkaException(""Principal has name with unexpected format "" + servicePrincipal);}final String servicePrincipalName = kerberosName.serviceName();final String serviceHostname = kerberosName.hostName();try {return Subject.doAs(subject,(PrivilegedExceptionAction<SaslServer>)() ->Sasl.createSaslServer(saslMechanism,servicePrincipalName,serviceHostname,configs,saslServerCallbackHandler));} catch (PrivilegedActionException e) {throw new SaslException(""Kafka Server failed to create a SaslServer to interact with a client during session""+ "" authentication"",e.getCause());}}}"	Yes
1061	public class A {private void prepareCek() {ASN1ObjectIdentifier param =new ASN1ObjectIdentifier(msg.getComputations().getEncryptionParamSet().getValue());String sBoxName = oidMappings.get(param);byte[] wrapped = wrap(true, msg.getComputations().getPremasterSecret().getValue(), sBoxName);byte[] cek = new byte[32];try {if (wrapped.length <= cek.length) {System.arraycopy(wrapped, 0, cek, 0, cek.length);} else {System.arraycopy(wrapped, 0, cek, 0, wrapped.length - 1);}} catch (ArrayIndexOutOfBoundsException E) {}msg.getComputations().setEncryptedKey(cek);byte[] mac = new byte[wrapped.length - cek.length];System.arraycopy(wrapped, cek.length, mac, 0, mac.length);msg.getComputations().setMacKey(mac);}}	Yes
1062	"public class A {private void createScope() {Scope scope = new Scope();scope.setName(SCOPE_NAME);scope.setType(Scope.TYPE);scope.setDescription(""Sample scope description."");Scope createdScope = this.client.create(scope);LOGGER.info(""Created scope object returned to client : "" + createdScope.toJsonString());}}"	No
1063	"public class A {@Activateprotected void activate(Config config) throws RepositoryException {List<SyncHandler> newSyncSpecs = new LinkedList<SyncHandler>();for (String def : config.vault_sync_syncroots()) {SyncHandler spec = new SyncHandler(new File(def));newSyncSpecs.add(spec);log.info(""Added sync specification: {}"", spec);}syncHandlers = newSyncSpecs.toArray(new SyncHandler[newSyncSpecs.size()]);enabled = config.vault_sync_enabled();checkDelay = config.vault_sync_fscheckinterval() * 1000;log.info(""Vault Sync service is {}"", enabled ? ""enabled"" : ""disabled"");if (enabled) {session = repository.loginAdministrative(null);session.getWorkspace().getObservationManager().addEventListener(this,Event.NODE_ADDED| Event.NODE_REMOVED| Event.PROPERTY_CHANGED| Event.PROPERTY_ADDED| Event.PROPERTY_REMOVED,""/"",true,null,null,true);fsCheckThread = new Thread(this, ""Vault Sync Thread"");fsCheckThread.setDaemon(true);fsCheckThread.start();}}}"	No
1064	"public class A {public TransferredResource createFolder(String parentUUID, String folderName)throws GenericException, NotFoundException, AuthorizationDeniedException {Path parentPath;RodaCoreFactory.checkIfWriteIsAllowedAndIfFalseThrowException(nodeType);if (parentUUID != null) {TransferredResource parent =index.retrieve(TransferredResource.class, parentUUID, fieldsToReturn);parentPath = basePath.resolve(parent.getRelativePath());} else {parentPath = basePath;}try {Path createdPath = Files.createDirectories(parentPath.resolve(folderName));BasicFileAttributes attrs = Files.readAttributes(createdPath, BasicFileAttributes.class);TransferredResource resource =createTransferredResource(createdPath, attrs, 0L, basePath, new Date());index.create(TransferredResource.class, resource);return resource;} catch (IOException e) {throw new GenericException(""Cannot create folder"", e);}}}"	Yes
1065	public class A {private void createTimers(final String dbId, List<PersistenceStrategy> strategies) {for (PersistenceStrategy strategy : strategies) {if (strategy instanceof PersistenceCronStrategy) {PersistenceCronStrategy cronStrategy = (PersistenceCronStrategy) strategy;String cronExpression = cronStrategy.getCronExpression();final PersistItemsJob job = new PersistItemsJob(this, dbId, cronStrategy.getName());ScheduledCompletableFuture<?> schedule = scheduler.schedule(job, cronExpression);if (persistenceJobs.containsKey(dbId)) {persistenceJobs.get(dbId).add(schedule);} else {final Set<ScheduledCompletableFuture<?>> jobs = new HashSet<>();jobs.add(schedule);persistenceJobs.put(dbId, jobs);}}}}}	Yes
1066	public class A {@Overridepublic void run() {try {registerAndInitializeHandler(child, getThingHandlerFactory(child));} catch (Exception ex) {}}}	Yes
1067	"public class A {public void onDialogRelease(DialogRelease evt, ActivityContextInterface aci) {if (logger.isInfoEnabled()) {this.logger.info(""Rx :  DialogRelease="" + evt);}}}"	No
1068	"public class A {@Test(timeout = 60000)public void testDisableCompaction() throws Exception {LedgerHandle[] lhs = prepareData(3, false);baseConf.setMinorCompactionThreshold(0.0f);baseConf.setMajorCompactionThreshold(0.0f);restartBookies(baseConf);bkc.deleteLedger(lhs[1].getId());bkc.deleteLedger(lhs[2].getId());Thread.sleep(baseConf.getMajorCompactionInterval() * 1000 + baseConf.getGcWaitTime());for (File ledgerDirectory : tmpDirs) {assertTrue(""Not Found entry log file ([0,1].log that should have been compacted in ledgerDirectory: ""+ ledgerDirectory,TestUtils.hasLogFiles(ledgerDirectory, false, 0, 1));}}}"	Yes
1069	"public class A {public String enqueueUpdateDeviceSslCertificationRequest(final String organisationIdentification,final String deviceIdentification,final Certification certification,final int messagePriority)throws FunctionalException {final Organisation organisation =this.domainHelperService.findOrganisation(organisationIdentification);final Device device = this.domainHelperService.findActiveDevice(deviceIdentification);this.domainHelperService.isAllowed(organisation, device, DeviceFunction.UPDATE_DEVICE_SSL_CERTIFICATION);this.domainHelperService.isInMaintenance(device);LOGGER.debug(""enqueueUpdateDeviceSslCertificationRequest called with organisation {} and device {}"",organisationIdentification,deviceIdentification);final String correlationUid =this.correlationIdProviderService.getCorrelationId(organisationIdentification, deviceIdentification);final DeviceMessageMetadata deviceMessageMetadata =new DeviceMessageMetadata(deviceIdentification,organisationIdentification,correlationUid,MessageType.UPDATE_DEVICE_SSL_CERTIFICATION.name(),messagePriority);final CommonRequestMessage message =new CommonRequestMessage.Builder().deviceMessageMetadata(deviceMessageMetadata).request(certification).build();this.commonRequestMessageSender.send(message);return correlationUid;}}"	No
1070	"public class A {private void waitToExitSafeMode(JobClient client) throws IOException {LOG.info(""Waiting to exit safe mode..."");FileSystem fs = client.getFs();DistributedFileSystem dfs = (DistributedFileSystem) fs;boolean inSafeMode = true;while (inSafeMode) {inSafeMode = dfs.setSafeMode(FSConstants.SafeModeAction.SAFEMODE_GET);try {Thread.sleep(1000);} catch (InterruptedException e) {break;}}LOG.info(""Exited safe mode"");}}"	No
1071	public class A {private void updateTaskWithChangedElementProperties() {if (!changedElementProperties.isEmpty()) {getTaskService().updateChangedElementProperties(task.getId(), changedElementProperties);changedElementProperties.clear();}isModelModified = false;this.setPartName(EditorUtil.getEditorName(cnAElement) + Messages.BSIElementEditor_9);this.setTitleToolTip(EditorUtil.getEditorToolTipText(cnAElement));firePropertyChange(IEditorPart.PROP_DIRTY);}}	Yes
1072	"public class A {public void truncate(String resourcePattern) throws IOException {if (LOG.isDebugEnabled()) {}try {dataSource.delete(basePath, FilePattern.compile(resourcePattern), true, new Counter());} catch (InterruptedException e) {throw (IOException) new InterruptedIOException(""interrupted"").initCause(e);}}}"	Yes
1073	"public class A {public void doCreateConsumer(RoutingContext routingContext,JsonObject bodyAsJson,Handler<SinkBridgeEndpoint<K, V>> handler) {this.groupId = routingContext.pathParam(""groupid"");this.name =bodyAsJson.getString(""name"",bridgeConfig.getBridgeID() == null? ""kafka-bridge-consumer-"" + UUID.randomUUID(): bridgeConfig.getBridgeID() + ""-"" + UUID.randomUUID());this.consumerInstanceId = new ConsumerInstanceId(this.groupId, this.name);if (this.httpBridgeContext.getHttpSinkEndpoints().containsKey(this.consumerInstanceId)) {HttpBridgeError error =new HttpBridgeError(HttpResponseStatus.CONFLICT.code(),""A consumer instance with the specified name already exists in the Kafka Bridge."");HttpUtils.sendResponse(routingContext,HttpResponseStatus.CONFLICT.code(),BridgeContentType.KAFKA_JSON,error.toJson().toBuffer());return;}String requestUri = this.buildRequestUri(routingContext);if (!routingContext.request().path().endsWith(""/"")) {requestUri += ""/"";}String consumerBaseUri = requestUri + ""instances/"" + this.name;Properties config = new Properties();addConfigParameter(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG,bodyAsJson.getString(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, null),config);Object enableAutoCommit = bodyAsJson.getValue(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG);addConfigParameter(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG,enableAutoCommit != null ? String.valueOf(enableAutoCommit) : null,config);Object fetchMinBytes = bodyAsJson.getValue(ConsumerConfig.FETCH_MIN_BYTES_CONFIG);addConfigParameter(ConsumerConfig.FETCH_MIN_BYTES_CONFIG,fetchMinBytes != null ? String.valueOf(fetchMinBytes) : null,config);Object requestTimeoutMs =bodyAsJson.getValue(""consumer."" + ConsumerConfig.REQUEST_TIMEOUT_MS_CONFIG);addConfigParameter(ConsumerConfig.REQUEST_TIMEOUT_MS_CONFIG,requestTimeoutMs != null ? String.valueOf(requestTimeoutMs) : null,config);addConfigParameter(ConsumerConfig.CLIENT_ID_CONFIG, this.name, config);this.initConsumer(false, config);handler.handle(this);log.info(""Created consumer {} in group {}"", this.name, this.groupId);JsonObject body =new JsonObject().put(""instance_id"", this.name).put(""base_uri"", consumerBaseUri);HttpUtils.sendResponse(routingContext,HttpResponseStatus.OK.code(),BridgeContentType.KAFKA_JSON,body.toBuffer());}}"	No
1074	"public class A {private File checkoutIfNotExists(String _rev_branch, String _path) throws IllegalStateException {final String[] rev_branch = splitRevBranch(_rev_branch);File file = Paths.get(this.workDir.toString(), rev_branch[0], _path).toFile();if (!file.exists()) {log.info(""Starting checkout of ["" + _path + ""]"");file = this.checkoutFile(_rev_branch, _path);} else {log.info(""["" + _path + ""] already exists, no checkout needed"");}return file;}}"	No
1075	"public class A {@Testpublic void test() throws Exception {MockEndpoint result = getMockEndpoint(""mock:result"");result.setExpectedCount(1);final ProducerTemplate producerTemplate = context.createProducerTemplate();ClassLoader tccl = Thread.currentThread().getContextClassLoader();InputStream payloadIs = tccl.getResourceAsStream(""json-source.json"");producerTemplate.sendBody(""direct:start"", payloadIs);assertMockEndpointsSatisfied();final String body = result.getExchanges().get(0).getIn().getBody(String.class);assertNotNull(body);InputStream schemaIs = tccl.getResourceAsStream(""xml-target-schemaset.xml"");AtlasXmlSchemaSetParser schemaParser = new AtlasXmlSchemaSetParser(tccl);Validator validator = schemaParser.createSchema(schemaIs).newValidator();StreamSource source = new StreamSource(new StringReader(body));validator.validate(source);}}"	Yes
1076	"public class A {@Overridepublic boolean removeTombstone(RegionEntry re, VersionHolder version, boolean isEviction, boolean isScheduledTombstone) {boolean result = false;int destroyedVersion = version.getEntryVersion();synchronized (this._getOwner().getSizeGuard()) {synchronized (re) {int entryVersion = re.getVersionStamp().getEntryVersion();if (!re.isTombstone() || entryVersion > destroyedVersion) {if (logger.isTraceEnabled(LogMarker.TOMBSTONE_COUNT_VERBOSE)) {}} else {if (logger.isTraceEnabled(LogMarker.TOMBSTONE_COUNT_VERBOSE)) {if (entryVersion == destroyedVersion) {} else {logger.trace(LogMarker.TOMBSTONE_COUNT_VERBOSE,""removing entry (v{}) that is older than an expiring tombstone (v{} rv{}) for {}"",entryVersion,destroyedVersion,version.getRegionVersion(),re.getKey());}}try {re.setValue(_getOwner(), Token.REMOVED_PHASE2);if (removeTombstone(re)) {_getOwner().cancelExpiryTask(re);result = true;incEntryCount(-1);if (isScheduledTombstone) {_getOwner().incTombstoneCount(-1);}RegionVersionVector vector = _getOwner().getVersionVector();if (vector != null) {vector.recordGCVersion(version.getMemberID(), version.getRegionVersion());}}} catch (RegionClearedException e) {} catch (RegionDestroyedException e) {}}}}return result;}}"	Yes
1077	"public class A {@Overridepublic PCollection<Row> buildIOReader(PBegin begin, BeamSqlTableFilter filters, List<String> fieldNames) {final Schema schema = AvroUtils.toAvroSchema(table.getSchema());Read read = ParquetIO.read(schema).withBeamSchemas(true).from(table.getLocation() + ""/*"");if (!fieldNames.isEmpty()) {Schema projectionSchema = projectSchema(schema, fieldNames);LOG.info(""Projecting fields schema : "" + projectionSchema.toString());read = read.withProjection(projectionSchema, projectionSchema);}return begin.apply(""ParquetIORead"", read).apply(""ToRows"", Convert.toRows());}}"	No
1078	"public class A {@SuppressWarnings(""unchecked"")private static int[] getSizeCoefficients(Class cl, boolean debug) {int primitives = 0;int arrays = 0;int references = nrOfRefsPerObj;int index = 0;for (; null != cl; cl = cl.getSuperclass()) {Field[] field = cl.getDeclaredFields();if (null != field) {for (Field aField : field) {if (Modifier.isStatic(aField.getModifiers())) continue;Class fieldClass = aField.getType();if (fieldClass.isArray()) {arrays++;references++;} else if (!fieldClass.isPrimitive()) {references++;} else {String name = fieldClass.getName();if (name.equals(""int"") || name.equals(""I"")) primitives += Bytes.SIZEOF_INT;else if (name.equals(""long"") || name.equals(""J"")) primitives += Bytes.SIZEOF_LONG;else if (name.equals(""boolean"") || name.equals(""Z"")) primitives += Bytes.SIZEOF_BOOLEAN;else if (name.equals(""short"") || name.equals(""S"")) primitives += Bytes.SIZEOF_SHORT;else if (name.equals(""byte"") || name.equals(""B"")) primitives += Bytes.SIZEOF_BYTE;else if (name.equals(""char"") || name.equals(""C"")) primitives += Bytes.SIZEOF_CHAR;else if (name.equals(""float"") || name.equals(""F"")) primitives += Bytes.SIZEOF_FLOAT;else if (name.equals(""double"") || name.equals(""D"")) primitives += Bytes.SIZEOF_DOUBLE;}if (debug) {if (LOG.isDebugEnabled()) {}}index++;}}}return new int[] {primitives, arrays, references};}}"	Yes
1079	"public class A {protected void addDefaultServlets(ContextHandlerCollection contexts, Configuration conf)throws IOException {addPrivilegedServlet(""stacks"", ""/stacks"", StackServlet.class);addPrivilegedServlet(""logLevel"", ""/logLevel"", LogLevel.Servlet.class);try {Class<?> clz = Class.forName(""org.apache.hadoop.metrics.MetricsServlet"");addPrivilegedServlet(""metrics"", ""/metrics"", clz.asSubclass(HttpServlet.class));} catch (Exception e) {}addPrivilegedServlet(""jmx"", ""/jmx"", JMXJsonServlet.class);if (conf.getBoolean(HTTP_PRIVILEGED_CONF_KEY, HTTP_PRIVILEGED_CONF_DEFAULT)) {addPrivilegedServlet(""conf"", ""/conf"", ConfServlet.class);} else {addUnprivilegedServlet(""conf"", ""/conf"", ConfServlet.class);}final String asyncProfilerHome = ProfileServlet.getAsyncProfilerHome();if (asyncProfilerHome != null && !asyncProfilerHome.trim().isEmpty()) {addPrivilegedServlet(""prof"", ""/prof"", ProfileServlet.class);Path tmpDir = Paths.get(ProfileServlet.OUTPUT_DIR);if (Files.notExists(tmpDir)) {Files.createDirectories(tmpDir);}ServletContextHandler genCtx = new ServletContextHandler(contexts, ""/prof-output"");genCtx.addServlet(ProfileOutputServlet.class, ""/*"");genCtx.setResourceBase(tmpDir.toAbsolutePath().toString());genCtx.setDisplayName(""prof-output"");} else {addUnprivilegedServlet(""prof"", ""/prof"", ProfileServlet.DisabledServlet.class);}}}"	Yes
1080	"public class A {@Overridepublic void serviceInit(Configuration conf) throws Exception {AsyncDispatcher dispatcher;TajoWorkerClientService tajoWorkerClientService;TajoWorkerManagerService tajoWorkerManagerService;ShutdownHookManager.get().addShutdownHook(new ShutdownHook(), SHUTDOWN_HOOK_PRIORITY);this.systemConf = TUtil.checkTypeAndGet(conf, TajoConf.class);RackResolver.init(systemConf);serviceTracker = ServiceTrackerFactory.get(systemConf);this.workerContext = new TajoWorkerContext();this.lDirAllocator = new LocalDirAllocator(ConfVars.WORKER_TEMPORAL_DIR.varname);dispatcher = new AsyncDispatcher();addIfService(dispatcher);tajoWorkerManagerService = new TajoWorkerManagerService(workerContext);addIfService(tajoWorkerManagerService);tajoWorkerClientService = new TajoWorkerClientService(workerContext);addIfService(tajoWorkerClientService);queryMasterManagerService = new QueryMasterManagerService(workerContext);addIfService(queryMasterManagerService);if (!PullServerUtil.useExternalPullServerService(systemConf)) {pullService = new TajoPullServerService();addIfService(pullService);}this.taskManager = new TaskManager(dispatcher, workerContext, pullService);addService(taskManager);this.taskExecutor = new TaskExecutor(workerContext);addService(taskExecutor);AsyncDispatcher rmDispatcher = new AsyncDispatcher();addService(rmDispatcher);this.nodeResourceManager = new NodeResourceManager(rmDispatcher, workerContext);addService(nodeResourceManager);addService(new NodeStatusUpdater(workerContext));int httpPort = 0;if (!systemConf.getBoolVar(ConfVars.$TEST_MODE)) {httpPort = initWebServer();}super.serviceInit(conf);int pullServerPort = systemConf.getIntVar(ConfVars.PULLSERVER_PORT);if (pullService != null) {pullServerPort = pullService.getPort();} else if (TajoPullServerService.isStandalone()) {pullServerPort = getStandAlonePullServerPort();}this.connectionInfo =new WorkerConnectionInfo(tajoWorkerManagerService.getBindAddr().getHostName(),tajoWorkerManagerService.getBindAddr().getPort(),pullServerPort,tajoWorkerClientService.getBindAddr().getPort(),queryMasterManagerService.getBindAddr().getPort(),httpPort);LOG.info(""Tajo Worker is initialized."" + "" connection :"" + connectionInfo.toString());try {hashShuffleAppenderManager = new HashShuffleAppenderManager(systemConf);} catch (IOException e) {LOG.fatal(e.getMessage(), e);System.exit(-1);}taskHistoryWriter = new HistoryWriter(workerContext.getWorkerName(), false);addIfService(taskHistoryWriter);taskHistoryWriter.init(conf);historyReader = new HistoryReader(workerContext.getWorkerName(), this.systemConf);FunctionLoader.loadUserDefinedFunctions(systemConf);HiveFunctionLoader.loadHiveUDFs(systemConf);PythonScriptEngine.initPythonScriptEngineFiles();diagnoseTajoWorker();}}"	No
1081	public class A {@Overridepublic <K, V> BlockDiskCache<K, V> createCache(final AuxiliaryCacheAttributes iaca,final ICompositeCacheManager cacheMgr,final ICacheEventLogger cacheEventLogger,final IElementSerializer elementSerializer) {final BlockDiskCacheAttributes idca = (BlockDiskCacheAttributes) iaca;final BlockDiskCache<K, V> cache = new BlockDiskCache<>(idca, elementSerializer);cache.setCacheEventLogger(cacheEventLogger);return cache;}}	Yes
1082	"public class A {protected void loadTempStorage(String name, Map<String, String> properties) {requireNonNull(name, ""name is null"");requireNonNull(properties, ""properties is null"");log.info(""-- Loading temp storage %s --"", name);String tempStorageFactoryName = null;ImmutableMap.Builder<String, String> tempStorageProperties = ImmutableMap.builder();for (Map.Entry<String, String> entry : properties.entrySet()) {if (entry.getKey().equals(TEMP_STORAGE_FACTORY_NAME)) {tempStorageFactoryName = entry.getValue();} else {tempStorageProperties.put(entry.getKey(), entry.getValue());}}checkState(tempStorageFactoryName != null,""Configuration for tempStorage %s does not contain temp-storage-factory.name"",name);TempStorageFactory factory = tempStorageFactories.get(tempStorageFactoryName);checkState(factory != null, ""Temp Storage Factory %s is not registered"", tempStorageFactoryName);TempStorage tempStorage =factory.create(tempStorageProperties.build(), new TempStorageContext(nodeManager));if (loadedTempStorages.putIfAbsent(name, tempStorage) != null) {throw new IllegalArgumentException(format(""Temp Storage '%s' is already loaded"", name));}log.info(""-- Loaded temp storage %s --"", name);}}"	No
1083	public class A {@Overrideprotected Object getEndpointInternal(MessageContext messageContext) throws Exception {T key = getLookupKeyForMessage(messageContext);if (key == null) {return null;}if (logger.isDebugEnabled()) {}return lookupEndpoint(key);}}	Yes
1084	"public class A {@Overridepublic void onMessage(Message message) {if (complete) {return;}try {int actualIndex = message.getIntProperty(TestAmqpPeer.MESSAGE_NUMBER);assertEquals(""Received Message Out Of Order"", expectedIndex, actualIndex);if (messageSeen < recoverCount) {session.recover();messageSeen++;} else {messageSeen = 0;expectedIndex++;testPeer.expectDisposition(true, new AcceptedMatcher(), expectedIndex, expectedIndex);message.acknowledge();if (expectedIndex == messageCount) {complete = true;latch.countDown();}}} catch (Throwable t) {complete = true;asyncError.set(t);latch.countDown();}}}"	Yes
1085	"public class A {public void shutdownServer() {int timeWaitForShutdownInSeconds =EmbeddedServerUtil.getIntConfig(""service.waitTimeForForceShutdownInSeconds"", 0);if (timeWaitForShutdownInSeconds > 0) {long endTime = System.currentTimeMillis() + (timeWaitForShutdownInSeconds * 1000L);while (System.currentTimeMillis() < endTime) {int activeCount = Thread.activeCount();if (activeCount == 0) {break;} else {try {Thread.sleep(5000L);} catch (InterruptedException e) {LOG.warning(""shutdownServer process is interrupted with exception: "" + e);break;}}}}LOG.info(""Shuting down the Server."");System.exit(0);}}"	Yes
1086	"public class A {@Overridepublic void sendResult(Object oneResult) {if (!this.function.hasResult()) {throw new IllegalStateException(String.format(""Cannot %s result as the Function#hasResult() is false"", ""send""));}if (this.serverSender != null) {clientSend(oneResult, dm.getDistributionManagerId());} else {if (this.msg != null) {try {this.msg.sendReplyForOneResult(dm, pr, time, oneResult, false, enableOrderedResultStreming);} catch (ForceReattemptException e) {throw new FunctionException(e);} catch (InterruptedException e) {throw new FunctionException(e);}} else {this.rc.addResult(dm.getDistributionManagerId(), oneResult);FunctionStatsManager.getFunctionStats(function.getId(), this.dm.getSystem()).incResultsReceived();}FunctionStatsManager.getFunctionStats(function.getId(), this.dm.getSystem()).incResultsReturned();}}}"	Yes
1087	"public class A {private File customAnimation(final Job job, final URI input, final Map<String, String> metadata)throws IOException, NotFoundException {File output =new File(workspace.rootDirectory(),String.format(""animate/%d/%s.%s"",job.getId(),FilenameUtils.getBaseName(input.getPath()),FilenameUtils.getExtension(input.getPath())));FileUtils.forceMkdirParent(output);String animation;try {animation = FileUtils.readFileToString(new File(input), ""UTF-8"");} catch (IOException e) {logger.debug(""Falling back to workspace to read {}"", input);try (InputStream in = workspace.read(input)) {animation = IOUtils.toString(in, ""UTF-8"");}}for (Map.Entry<String, String> entry : metadata.entrySet()) {String value = StringEscapeUtils.escapeXml11(entry.getValue());animation = animation.replaceAll(""\\{\\{"" + entry.getKey() + ""\\}\\}"", value);}FileUtils.write(output, animation, ""utf-8"");return output;}}"	Yes
1088	"public class A {public FilterResZob merge(FilterResZob detachedInstance) {log.debug(""merging FilterResZob instance"");try {FilterResZob result =(FilterResZob) sessionFactory.getCurrentSession().merge(detachedInstance);log.debug(""merge successful"");return result;} catch (RuntimeException re) {throw re;}}}"	Yes
1089	"public class A {@Overridepublic void contribute(Document document, ObjectEntry objectEntry) {try {_contribute(document, objectEntry);} catch (Exception exception) {if (_log.isWarnEnabled()) {_log.warn(""Unable to index object entry "" + objectEntry.getObjectEntryId(), exception);}}}}"	No
1090	"public class A {@PostConstructpublic void init() {logger = LoggerFactory.getLogger(getClass());dataList = new ArrayList<Data>();for (int i = 0; i < 20; i++) {Data data = new Data();data.setText(MessageFormat.format(""Item {0}"", i));dataList.add(data);}matrixRows = new ArrayList<MatrixRow>();for (int i = 0; i < MATRIX_DIMENSION; i++) {MatrixRow matrixRow = new MatrixRow();for (int j = 0; j < MATRIX_DIMENSION; j++) {MatrixCell matrixCell = new MatrixCell();matrixRow.addCell(matrixCell);}matrixRows.add(matrixRow);}attributes = Attributes.getComponentAttributesFromFacesConfig(UIRepeat.class, getClass());attributes.setAttribute(""rendered"", true);attributes.remove(""componentState"");attributes.remove(""iterationState"");attributes.remove(""iterationStatusVar"");attributes.remove(""rowKeyVar"");attributes.remove(""rowKeyConverter"");attributes.remove(""value"");attributes.remove(""stateVar"");attributes.remove(""var"");attributes.remove(""relativeRowIndex"");attributes.remove(""rowAvailable"");attributes.remove(""rowCount"");attributes.remove(""rowData"");attributes.remove(""rowIndex"");attributes.remove(""rowKey"");}}"	Yes
1091	"public class A {public static <T extends ConfigDefaults> String getDefaultValue(Class<T> target, String fieldValue) {for (final Field f : target.getFields()) {try {if (!fieldValue.equals(f.get(target).toString())) {continue;}if (f.isAnnotationPresent(DefaultValue.class)) {return f.getAnnotation(DefaultValue.class).value();} else if (f.isAnnotationPresent(DefaultValueInt.class)) {return Integer.toString(f.getAnnotation(DefaultValueInt.class).value());} else if (f.isAnnotationPresent(DefaultValueBoolean.class)) {return Boolean.toString(f.getAnnotation(DefaultValueBoolean.class).value());}} catch (IllegalAccessException e) {LOGGER.warn(UNABLE_TO_ACCESS_FIELD_ON_OBJECT, f.getName(), target);}}throw new IllegalArgumentException(target.getName() + "" has no default-annotated field "" + fieldValue);}}"	No
1092	"public class A {@Overrideprotected void cleanup(Context context) {if (replicatedScanner != null) {try {while (currentCompareRowInPeerTable != null) {logFailRowAndIncreaseCounter(context, Counters.ONLY_IN_PEER_TABLE_ROWS, currentCompareRowInPeerTable);currentCompareRowInPeerTable = replicatedScanner.next();}} catch (Exception e) {} finally {replicatedScanner.close();replicatedScanner = null;}}if (sourceTable != null) {try {sourceTable.close();} catch (IOException e) {}}if (sourceConnection != null) {try {sourceConnection.close();} catch (Exception e) {}}if (replicatedTable != null) {try {replicatedTable.close();} catch (Exception e) {}}if (replicatedConnection != null) {try {replicatedConnection.close();} catch (Exception e) {LOG.error(""fail to close replicated connection in cleanup"", e);}}}}"	Yes
1093	public class A {public T getLayoutTemplateByCodeName(String templateName) {if (this.layoutTemplates != null && templateName != null) {T ret = null;for (T at : this.layoutTemplates) {if (at != null && templateName.equalsIgnoreCase(at.getCodeName())) {ret = at;}}return ret;} else {return null;}}}	Yes
1094	"public class A {@Overridepublic synchronized void shutdown() throws Exception {logger.info(""bot is shutting down"");this.scheduledExecution.cancel(true);super.shutdown();}}"	No
1095	"public class A {@Overrideprotected KrbIdentity doAddIdentity(KrbIdentity identity) throws KrbException {String principalName = identity.getPrincipalName();int keyVersion = identity.getKeyVersion();int kdcFlags = identity.getKdcFlags();boolean disabled = identity.isDisabled();boolean locked = identity.isLocked();long createdTime = identity.getCreatedTime().getTime();long expireTime = identity.getExpireTime().getTime();Map<EncryptionType, EncryptionKey> keys = identity.getKeys();Connection connection = null;KrbIdentity duplicateIdentity = doGetIdentity(principalName);if (duplicateIdentity != null) {LOG.warn(""The identity maybe duplicate."");return duplicateIdentity;} else {try {connection = dataSource.getConnection();connection.setAutoCommit(false);String stmIdentity =""INSERT INTO ""+ identityTable+ "" (principal, key_version, kdc_flags, disabled, locked,""+ "" created_time, expire_time) VALUES(?, ?, ?, ?, ?, ?, ?)"";try (PreparedStatement preIdentity = connection.prepareStatement(stmIdentity)) {preIdentity.setString(1, principalName);preIdentity.setInt(2, keyVersion);preIdentity.setInt(3, kdcFlags);preIdentity.setBoolean(4, disabled);preIdentity.setBoolean(5, locked);preIdentity.setLong(6, createdTime);preIdentity.setLong(7, expireTime);preIdentity.executeUpdate();}for (Map.Entry<EncryptionType, EncryptionKey> entry : keys.entrySet()) {String stmKey =""INSERT INTO ""+ keyInfoTable+ "" (key_type, kvno, key_value, principal) VALUES(?, ?, ?, ?)"";try (PreparedStatement preKey = connection.prepareStatement(stmKey)) {preKey.setString(1, entry.getKey().getName());preKey.setInt(2, entry.getValue().getKvno());preKey.setBlob(3, new SerialBlob(entry.getValue().getKeyData()));preKey.setString(4, principalName);preKey.executeUpdate();}}connection.commit();return identity;} catch (SQLException e) {try {if (connection != null) {connection.rollback();}} catch (SQLException ex) {throw new KrbException(""Transaction roll back failed. "", ex);}throw new KrbException(""Failed to add identity. "", e);} finally {DbUtils.closeQuietly(connection);}}}}"	Yes
1096	"public class A {public String get(String name, String defaultValue) {String answer = null;if (envContext != null) {try {answer = (String) envContext.lookup(""hawtio/"" + name);} catch (Exception e) {}}if (answer == null) {answer = this.propertyResolver.apply(name);}if (answer == null) {answer = defaultValue;}return answer;}}"	Yes
1097	public class A {private boolean isPatternInDatabase(TestSuiteRun testSuiteRun) {boolean valid = false;SimpleDBKey dbKey = new SimpleDBKey(testSuiteRun.getCompany(), testSuiteRun.getProject());String patternCorrelationId = testSuiteRun.getPatternCorrelationId();String patternSuiteName = testSuiteRun.getPatternSuite();if (patternCorrelationId == null && patternSuiteName == null) {valid = true;} else {Suite patternSuite = null;try {if (patternCorrelationId != null) {patternSuite = metadataDAO.getSuite(dbKey, patternCorrelationId);} else {patternSuite = metadataDAO.getLatestRun(dbKey, patternSuiteName);}} catch (StorageException se) {}if (patternSuite != null) {valid = true;}}return valid;}}	Yes
1098	public class A {public double eDbl(final String input) {final double resultOnFailure = Double.NaN;try {final Object evaluationResult = this.evalWithR(input);final REXPDouble doubleResult = (REXPDouble) evaluationResult;return doubleResult.asDouble();} catch (final REXPMismatchException exc) {return resultOnFailure;} catch (final InvalidREvaluationResultException exc) {return resultOnFailure;}}}	Yes
1099	public class A {public static Collection<RoomUsersView> getRoomUsers(UUID roomId) {try {return session.getRoomUsers(roomId);} catch (MageRemoteException e) {logger.info(e);return Collections.emptyList();}}}	No
1100	public class A {private void removeFromTimeline(Collection<? extends Geometry> geoms, String dataTypeKey) {Collection<Long> ids = New.list(geoms.size());for (Geometry geom : geoms) {if (geom instanceof TileGeometry) {TileGeometry tileGeometry = (TileGeometry) geom;if (tileGeometry.getDataModelId() != -1) {ids.add(Long.valueOf(tileGeometry.getDataModelId()));}}}if (!ids.isEmpty()) {DataTypeInfo dataType;synchronized (myDataTypeCache) {dataType = myDataTypeCache.apply(dataTypeKey);}if (dataType != null) {TimelineRegistry timelineRegistry = myToolbox.getUIRegistry().getTimelineRegistry();timelineRegistry.removeData(dataType.getOrderKey(), ids);} else {}}}}	Yes
1101	"public class A {@BeforeClasspublic static void startServers() {testKdc = new TestKDC(true);testKdc.startDirectoryService();testKdc.startKDC();serverKeyTab =testKdc.generateKeyTab(CommunicationSuiteChild.SERVER_KEY_TAB, ""sasl/test_server_1@WILDFLY.ORG"", ""servicepwd"");serverUnboundKeyTab =testKdc.generateKeyTab(CommunicationSuiteChild.SERVER_UNBOUND_KEY_TAB,""sasl/test_server_1@WILDFLY.ORG"",""servicepwd"",""*@WILDFLY.ORG"",""dummy"");}}"	Yes
1102	"public class A {@Overrideprotected void onPostExecute(Void result) {super.onPostExecute(result);logger.trace(""onPostExecute()"");activity.showKeyFingerprints();}}"	No
1103	"public class A {@Overridepublic void createSubscriptionData(final ByteString topic,final ByteString subscriberId,final SubscriptionData data,final Callback<Version> callback,final Object ctx) {ZkUtils.createFullPathOptimistic(zk,topicSubscriberPath(topic, subscriberId),data.toByteArray(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,new SafeAsyncZKCallback.StringCallback() {@Overridepublic void safeProcessResult(int rc, String path, Object ctx, String name) {if (rc == Code.NODEEXISTS.intValue()) {callback.operationFailed(ctx,PubSubException.create(StatusCode.SUBSCRIPTION_STATE_EXISTS,""Subscription state for (topic:""+ topic.toStringUtf8()+ "", subscriber:""+ subscriberId.toStringUtf8()+ "") existed.""));return;} else if (rc == Code.OK.intValue()) {if (logger.isDebugEnabled()) {logger.debug(""Successfully recorded subscription for topic: ""+ topic.toStringUtf8()+ "" subscriberId: ""+ subscriberId.toStringUtf8()+ "" data: ""+ SubscriptionStateUtils.toString(data));}callback.operationFinished(ctx, new ZkVersion(0));} else {KeeperException ke =ZkUtils.logErrorAndCreateZKException(""Could not record new subscription for topic: ""+ topic.toStringUtf8()+ "" subscriberId: ""+ subscriberId.toStringUtf8(),path,rc);callback.operationFailed(ctx, new PubSubException.ServiceDownException(ke));}}},ctx);}}"	No
1104	"public class A {@Overridepublic void run(JobService jobService, PkgScreenshotSpreadsheetJobSpecification specification)throws IOException {Preconditions.checkArgument(null != jobService);Preconditions.checkArgument(null != specification);final ObjectContext context = serverRuntime.newContext();JobDataWithByteSink jobDataWithByteSink =jobService.storeGeneratedData(specification.getGuid(), ""download"", MediaType.CSV_UTF_8.toString());try (OutputStream outputStream = jobDataWithByteSink.getByteSink().openBufferedStream();OutputStreamWriter outputStreamWriter = new OutputStreamWriter(outputStream);CSVWriter writer = new CSVWriter(outputStreamWriter, ',')) {String[] headings =new String[] {""pkg-name"", ""repository-codes"", ""screenshot-count"", ""screenshot-bytes""};writer.writeNext(headings);String[] cells = new String[4];long startMs = System.currentTimeMillis();LOGGER.info(""will produce spreadsheet spreadsheet report"");long count =pkgService.eachPkg(context,false,pkg -> {PkgSupplement pkgSupplement = pkg.getPkgSupplement();cells[0] = pkg.getName();cells[1] =repositoryService.getRepositoriesForPkg(context, pkg).stream().map(Repository::getCode).collect(Collectors.joining("";""));cells[2] = Integer.toString(pkgSupplement.getPkgScreenshots().size());cells[3] =Integer.toString(pkgSupplement.getPkgScreenshots().stream().mapToInt(_PkgScreenshot::getLength).sum());writer.writeNext(cells);return true;});}}}"	Yes
1105	"public class A {@Overridepublic MCCIIN000002UV01 processPatientDiscoveryAsyncResp(PRPAIN201306UV02 request, AssertionType assertion, NhinTargetCommunitiesType target) {LOG.debug(""Begin""+ "" EntityPatientDiscoveryDeferredResponseProxyWebServiceUnsecuredImpl.processPatientDiscoveryAsyncResp(...)"");MCCIIN000002UV01 response = new MCCIIN000002UV01();String serviceName = NhincConstants.PATIENT_DISCOVERY_ENTITY_ASYNC_RESP_SERVICE_NAME;try {LOG.debug(""Before target system URL look up."");String url = oProxyHelper.getUrlLocalHomeCommunity(serviceName);if (LOG.isDebugEnabled()) {LOG.debug(""After target system URL look up. URL for service: {} is: {}"", serviceName, url);}if (NullChecker.isNotNullish(url)) {RespondingGatewayPRPAIN201306UV02RequestType wsRequest =new RespondingGatewayPRPAIN201306UV02RequestType();if (request != null) {wsRequest.setPRPAIN201306UV02(request);wsRequest.setAssertion(assertion);wsRequest.setNhinTargetCommunities(target);}ServicePortDescriptor<EntityPatientDiscoveryAsyncRespPortType> portDescriptor =new EntityPatientDiscoveryAsyncRespServicePortDescriptor();CONNECTClient<EntityPatientDiscoveryAsyncRespPortType> client =CONNECTClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);response =(MCCIIN000002UV01)client.invokePort(EntityPatientDiscoveryAsyncRespPortType.class,""processPatientDiscoveryAsyncResp"",wsRequest);} else {throw new WebServiceException(""Could not determine URL for Patient Discovery Deferred Response endpoint"");}} catch (Exception ex) {throw new ErrorEventException(ex, ""Unable to call Patient Discovery Deferred Response"");}return response;}}"	Yes
1106	public class A {private Long readForcedShardId() {Long res = null;String envVal = System.getProperty(FORCED_SHARD_ID_ENV);if (envVal != null) {try {res = Long.parseLong(envVal);} catch (NumberFormatException ex) {}}return res;}}	Yes
1107	"public class A {@Overridepublic double f(final double... x) {if (x.length != 1) {String msg = ""Laguerre(n,m;x) needs one argument"";throw new IllegalArgumentException(msg);}double ret = laguerre(n, m, x[0]);if (signed) ret = -ret;return ret;}}"	Yes
1108	"public class A {@Overridepublic void setUserQuotaTotal(final String userName, final long quotaValue)throws JargonException {if (userName == null || userName.isEmpty()) {throw new IllegalArgumentException(""null or empty userName"");}if (quotaValue <= 0) {throw new IllegalArgumentException(""quotaValue is null or empty"");}GeneralAdminInp adminPI = GeneralAdminInp.instanceForSetUserQuotaTotal(userName, quotaValue);getIRODSProtocol().irodsFunction(adminPI);log.info(""quota set"");}}"	Yes
1109	"public class A {public void stop(Exception cause) {if (!stopped) {stopped = true;shutdownCause = cause;if (logger.isTraceEnabled(LogMarker.DM_VERBOSE)) {logger.trace(LogMarker.DM_VERBOSE, ""Shutting down conduit"");}try {long timeout = System.currentTimeMillis() + LISTENER_CLOSE_TIMEOUT;Thread t = thread;if (channel != null) {channel.close();} else {ServerSocket s = socket;if (s != null) {s.close();}if (t != null) {t.interrupt();}}do {t = thread;if (t == null || !t.isAlive()) {break;}t.join(200);} while (timeout > System.currentTimeMillis());if (t != null && t.isAlive()) {logger.warn(""Unable to shut down listener within {}ms.  Unable to interrupt socket.accept() due""+ "" to JDK bug. Giving up."",LISTENER_CLOSE_TIMEOUT);}} catch (IOException | InterruptedException e) {}conTable.close();socket = null;thread = null;conTable = null;}}}"	No
1110	"public class A {private List<MailAddress> toHeaders(Mail mail) {try {String[] toHeaders = mail.getMessage().getHeader(RFC2822Headers.TO);if (toHeaders != null) {for (String toHeader : toHeaders) {try {InternetAddress[] originalToInternetAddresses = InternetAddress.parse(toHeader, false);return MailAddressUtils.from(originalToInternetAddresses);} catch (MessagingException ae) {LOGGER.warn(""Unable to parse a \""TO\"" header address in the original message: {}; ignoring."",toHeader);}}}return ImmutableList.of();} catch (MessagingException ae) {LOGGER.warn(""Unable to parse the \""TO\"" header  in the original message; ignoring."");return ImmutableList.of();}}}"	No
1111	"public class A {private void handleError(final Throwable error, final HttpWrapper http) {try {if (http.isOpen()) {if (error instanceof IndyWorkflowException) {http.writeStatus(ApplicationStatus.getStatus(((IndyWorkflowException) error).getStatus()));} else {http.writeStatus(ApplicationStatus.SERVER_ERROR);}http.writeError(error);logger.debug(""Response error complete."");}} catch (final IOException closeException) {}}}"	Yes
1112	"public class A {private void bindPrimitive(final Named key, final long value) {bindConstant().annotatedWith(key).to(value);LOG.trace(""bound {} to {}"", key.value(), value);}}"	No
1113	"public class A {public InternalCompletableFuture<Void> promoteToCPMember() {InternalCompletableFuture<Void> future = newCompletableFuture();if (!metadataGroupManager.isDiscoveryCompleted()) {return complete(future, new IllegalStateException(""CP Subsystem discovery is not completed yet!""));}if (nodeEngine.getLocalMember().isLiteMember()) {return complete(future, new IllegalStateException(""Lite members cannot be promoted to CP member!""));}if (getLocalCPMember() != null) {future.complete(null);return future;}MemberImpl localMember = nodeEngine.getLocalMember();CPMemberInfo member = new CPMemberInfo(newUnsecureUUID(), localMember.getAddress());logger.info(""Adding new CP member: "" + member);invocationManager.invoke(getMetadataGroupId(), new AddCPMemberOp(member)).whenCompleteAsync((response, t) -> {if (t == null) {metadataGroupManager.initPromotedCPMember(member);future.complete(null);} else {complete(future, t);}});return future;}}"	No
1114	"public class A {public static InputStream getLocalizedFile(final String fullPath, final Locale locale, final IDocumentResourceLoader loader) {String language = locale.getLanguage();String country = locale.getCountry();String variant = locale.getVariant();String fileName = fullPath;int dotIndex = fileName.indexOf('.');String baseName = dotIndex == -1 ? fileName : fileName.substring(0, dotIndex);String extension = dotIndex == -1 ? """" : fileName.substring(dotIndex);InputStream in = null;try {if (!variant.equals("""")) {in = loader.loadXsl(baseName + ""_"" + language + ""_"" + country + ""_"" + variant + extension);}if (in == null) {in = loader.loadXsl(baseName + ""_"" + language + ""_"" + country + extension);}if (in == null) {in = loader.loadXsl(baseName + ""_"" + language + extension);}if (in == null) {in = loader.loadXsl(baseName + extension);}} catch (Exception e) {Logger.error(XmlHelper.class.getName(), ""Error loading localized file: "" + fullPath);}return in;}}"	No
1115	"public class A {@Overridepublic void doInAfterTrace(SpanEventRecorder recorder,Object target,Object[] args,Object result,Throwable throwable) {String endPoint = null;if (target instanceof EndPointAccessor) {endPoint = ((EndPointAccessor) target)._$PINPOINT$_getEndPoint();}final InterceptorScopeInvocation invocation = interceptorScope.getCurrentInvocation();final Object attachment = getAttachment(invocation);if (attachment instanceof CommandContext) {final CommandContext commandContext = (CommandContext) attachment;if (logger.isDebugEnabled()) {logger.debug(""Check command context {}"", commandContext);}recordIo(recorder, commandContext);invocation.removeAttachment();}recorder.recordApi(getMethodDescriptor());recorder.recordEndPoint(endPoint != null ? endPoint : ""Unknown"");recorder.recordDestinationId(JedisConstants.REDIS.getName());recorder.recordServiceType(JedisConstants.REDIS);recorder.recordException(throwable);}}"	No
1116	"public class A {@Overridepublic boolean deployPlanReference(final QName planId, final PlanModelReference planRef, final CsarId csarId) {if (storage == null) {LOG.error(""Can't fetch relevant Csar from storage: StorageService not available"");return false;}Path planLocation = planLocationOnDisk(csarId, planId, planRef);if (planLocation == null) {return false;}return this.deployPlanFile(planLocation, csarId, planId, new HashMap<String, String>());}}"	No
1117	"public class A {protected static void validateReturnedOutOfBandHeaderWithInsertion(Map<String, Object> responseContext, boolean expect) {List<OutofBandHeader> hdrToTest = new ArrayList<>();List<Header> oobHdr = CastUtils.cast((List<?>) responseContext.get(Header.HEADER_LIST));if (!expect) {if (oobHdr == null || (oobHdr != null && oobHdr.size() == 0)) {return;}fail(""Should have got *no* out-of-band headers, but some were found"");}if (oobHdr == null) {fail(""Should have got List of out-of-band headers"");}assertEquals(2,oobHdr.size(),""HeaderHolder list expected to conain 2 object received "" + oobHdr.size());for (Header hdr1 : oobHdr) {if (hdr1.getObject() instanceof Node) {try {JAXBElement<?> job =(JAXBElement<?>)JAXBContext.newInstance(org.apache.cxf.outofband.header.ObjectFactory.class).createUnmarshaller().unmarshal((Node) hdr1.getObject());hdrToTest.add((OutofBandHeader) job.getValue());} catch (JAXBException ex) {}}}assertTrue(hdrToTest.size() > 0, ""out-of-band header should not be null"");assertEquals(""testOobReturnHeaderName"",hdrToTest.get(0).getName(),""Expected out-of-band Header name testOobReturnHeaderName recevied :""+ hdrToTest.get(0).getName());assertEquals(""testOobReturnHeaderValue"",hdrToTest.get(0).getValue(),""Expected out-of-band Header value testOobReturnHeaderValue recevied :""+ hdrToTest.get(0).getValue());assertEquals(""testReturnHdrAttribute"",hdrToTest.get(0).getHdrAttribute(),""Expected out-of-band Header attribute testReturnHdrAttribute recevied :""+ hdrToTest.get(0).getHdrAttribute());assertEquals(""New_testOobHeader"",hdrToTest.get(1).getName(),""Expected out-of-band Header name New_testOobHeader recevied :""+ hdrToTest.get(1).getName());assertEquals(""New_testOobHeaderValue"",hdrToTest.get(1).getValue(),""Expected out-of-band Header value New_testOobHeaderValue recevied :""+ hdrToTest.get(1).getValue());assertEquals(""testHdrAttribute"",hdrToTest.get(1).getHdrAttribute(),""Expected out-of-band Header attribute testHdrAttribute recevied :""+ hdrToTest.get(1).getHdrAttribute());}}"	Yes
1118	"public class A {@SuppressWarnings(""rawtypes"")protected FormData extractFormData(final HttpServletRequest request) throws IOException {FileItemFactory factory = new DiskFileItemFactory();ServletFileUpload upload = new ServletFileUpload(factory);upload.setHeaderEncoding(""UTF-8"");FormData data = new FormData();GAV emptyGAV = new GAV();try {List items = upload.parseRequest(request);Iterator it = items.iterator();while (it.hasNext()) {FileItem item = (FileItem) it.next();if (!item.isFormField()) {data.setFile(item);}if (item.isFormField() && item.getFieldName().equals(HTMLFileManagerFields.GROUP_ID)) {emptyGAV.setGroupId(item.getString());} else if (item.isFormField()&& item.getFieldName().equals(HTMLFileManagerFields.ARTIFACT_ID)) {emptyGAV.setArtifactId(item.getString());} else if (item.isFormField()&& item.getFieldName().equals(HTMLFileManagerFields.VERSION_ID)) {emptyGAV.setVersion(item.getString());}}if (isNullOrEmpty(emptyGAV.getGroupId())|| isNullOrEmpty(emptyGAV.getArtifactId())|| isNullOrEmpty(emptyGAV.getVersion())) {data.setGav(null);} else {data.setGav(emptyGAV);}return data;} catch (FileUploadException e) {}return null;}}"	Yes
1119	"public class A {public void raiseNodeReconciliationAlarm(final Long nodeId) {String alarmText = getAlarmText(nodeId, "" started reconciliation"");String source = getSourceText(nodeId);LOG.debug(""Raising NodeReconciliationOperationOngoing alarm, alarmText {} source {}"",alarmText,source);invokeFMRaiseMethod(""NodeReconciliationOperationOngoing"", alarmText, source);}}"	No
1120	"public class A {@Overridepublic void messageReceived(ChannelHandlerContext ctx, MessageEvent event) throws Exception {try (Closeable closeable = IMAPMDCContext.from(ctx, attributes)) {imapCommandsMetric.increment();ImapSession session = (ImapSession) attributes.get(ctx.getChannel());ImapResponseComposer response = (ImapResponseComposer) ctx.getAttachment();ImapMessage message = (ImapMessage) event.getMessage();ChannelPipeline cp = ctx.getPipeline();try {try {if (cp.get(NettyConstants.EXECUTION_HANDLER) != null) {cp.addBefore(NettyConstants.EXECUTION_HANDLER,NettyConstants.HEARTBEAT_HANDLER,heartbeatHandler);} else {cp.addBefore(NettyConstants.CORE_HANDLER, NettyConstants.HEARTBEAT_HANDLER, heartbeatHandler);}} catch (IllegalArgumentException e) {}final ResponseEncoder responseEncoder = new ResponseEncoder(encoder, response);processor.process(message, responseEncoder, session);if (session.getState() == ImapSessionState.LOGOUT) {Channel channel = ctx.getChannel();if (channel.isConnected()) {channel.write(ChannelBuffers.EMPTY_BUFFER).addListener(ChannelFutureListener.CLOSE);}}final IOException failure = responseEncoder.getFailure();if (failure != null) {LOGGER.debug(""Failed to write {}"", message, failure);throw failure;}} finally {try {ctx.getPipeline().remove(NettyConstants.HEARTBEAT_HANDLER);} catch (NoSuchElementException e) {LOGGER.info(""Heartbeat handler was concurrently removed"");}if (message instanceof Closeable) {((Closeable) message).close();}}super.messageReceived(ctx, event);}}}"	Yes
1121	"public class A {protected void endOfInput() {if (isUp()) {this.sessionListener.onSessionDown(thisInstance(), new IOException(""End of input detected. Close the session.""));}}}"	Yes
1122	"public class A {@Overridepublic int receiveFlowFiles(final Peer peer, final ServerProtocol serverProtocol)throws NotAuthorizedException, BadRequestException, RequestExpiredException {if (getConnectableType() != ConnectableType.INPUT_PORT) {throw new IllegalStateException(""Cannot receive FlowFiles because this port is not an Input Port"");}if (!isRunning()) {throw new IllegalStateException(""Port not running"");}try {final FlowFileRequest request = new FlowFileRequest(peer, serverProtocol);if (!this.requestQueue.offer(request)) {throw new RequestExpiredException();}scheduler.registerEvent(this);ProcessingResult result = null;try {while (!request.waitForService(100, TimeUnit.MILLISECONDS)) {if (request.isExpired()) {this.requestQueue.remove(request);throw new SocketTimeoutException(""Read timed out"");}}} catch (final InterruptedException ie) {Thread.currentThread().interrupt();throw new ProcessException(""Interrupted while waiting for site-to-site request to be serviced"", ie);}result = request.getResponseQueue().take();final Exception problem = result.getProblem();if (problem == null) {return result.getFileCount();} else {throw problem;}} catch (final NotAuthorizedException | BadRequestException | RequestExpiredException e) {throw e;} catch (final ProtocolException e) {throw new BadRequestException(e);} catch (final IOException | FlowFileAccessException e) {final String REQUEST_TOO_LONG_MSG = ""Request input stream longer than"";if (e.getMessage() != null && e.getMessage().contains(REQUEST_TOO_LONG_MSG)) {logger.error(""The content length filter (configured with {}) is blocking the site-to-site""+ "" connection: {}"",NiFiProperties.WEB_MAX_CONTENT_SIZE,e.getMessage());throw new BadRequestException(e);} else {throw new ProcessException(e);}} catch (final InterruptedException e) {logger.error(""The NiFi DoS filter has interrupted a long running session. If this is undesired,""+ "" configure a longer web request timeout value in nifi.properties using '{}'"",NiFiProperties.WEB_REQUEST_TIMEOUT);throw new ProcessException(e);} catch (final Exception e) {throw new ProcessException(e);}}}"	No
1123	public class A {private void parseMultipartContent() {final DiskFileItemFactory factory = new DiskFileItemFactory();factory.setSizeThreshold(0);final ServletFileUpload upload = new ServletFileUpload(factory);try {final List<FileItem> items = upload.parseRequest(servletRequest);for (final FileItem item : items) {addParameter(params, item.getFieldName(), item);}} catch (final FileUploadException e) {}}}	Yes
1124	"public class A {public @Nullable SipStatus getSipStatus() {SipStatus sipStatus = null;try {String statusResponse = executeGetRequest(""/bha-api/sip.cgi&action=status"");logger.debug(""Doorbird returned json response: {}"", statusResponse);sipStatus = new SipStatus(statusResponse);} catch (IOException e) {} catch (JsonSyntaxException e) {} catch (DoorbirdUnauthorizedException e) {logAuthorizationError(""getSipStatus"");}return sipStatus;}}"	Yes
1125	"public class A {@Overridepublic void processMessage(final ObjectMessage message) {LOGGER.debug(""Processing common get configuration message"");MessageMetadata messageMetadata;String configurationBank;try {messageMetadata = MessageMetadata.fromMessage(message);configurationBank = (String) message.getObject();} catch (final JMSException e) {LOGGER.error(""UNRECOVERABLE ERROR, unable to read ObjectMessage instance, giving up."", e);return;}this.printDomainInfo(messageMetadata.getMessageType(),messageMetadata.getDomain(),messageMetadata.getDomainVersion());final SwitchConfigurationBankRequest deviceRequest =new SwitchConfigurationBankRequest(DeviceRequest.newBuilder().messageMetaData(messageMetadata), configurationBank);this.deviceService.switchConfiguration(deviceRequest);}}"	No
1126	"public class A {private void copyDirectory(Path from, Path to) throws IOException {LOG.info().$(""copying folder [from="").$(from).$("", to="").$(to).$(']').$();if (Files.mkdir(to, DIR_MODE) != 0) {Assert.fail(""Cannot create "" + to + "". Error: "" + Os.errno());}java.nio.file.Path dest = FileSystems.getDefault().getPath(to.toString() + Files.SEPARATOR);java.nio.file.Path src = FileSystems.getDefault().getPath(from.toString() + Files.SEPARATOR);java.nio.file.Files.walk(src).forEach(file -> {java.nio.file.Path destination = dest.resolve(src.relativize(file));try {java.nio.file.Files.copy(file, destination, REPLACE_EXISTING);} catch (IOException e) {e.printStackTrace();}});}}"	No
1127	"public class A {@Overridepublic String getFileName() {final SimpleDateFormat format = new SimpleDateFormat(""yyyyMMddHHmmss"");try {loadReport();} catch (Exception e) {LOG.debug(""The project report cannot be found."", e);}final String name;if (report != null) name = report.getName();else name = ""report"";return name + '_' + format.format(new Date()) + getExtention();}}"	No
1128	public class A {@Overridepublic void run() {try {for (String jobId : jobIdPartition) {importJobData(jobId, sourceDataStore, targetDataStore, checkAllWrites);}} catch (Exception ex) {gotFailures.compareAndSet(false, true);}}}	Yes
1129	"public class A {private String loadTemplateFile(File templateFile) {if (!templateFile.exists() && !templateFile.canRead()) {return null;}char[] chars;int length;try {chars = new char[(int) templateFile.length()];FileInputStream stream = new FileInputStream(templateFile);InputStreamReader reader = new InputStreamReader(stream, ""UTF-8"");length = reader.read(chars);} catch (Exception noprob) {log.error(""Exception reading theme ["" + this.getName() + ""] template file ["" + templateFile + ""]"");if (log.isDebugEnabled()) {}return null;}return new String(chars, 0, length);}}"	Yes
1130	public class A {@Overridepublic FileSystem getFileSystemByPath(Path path) {FileSystem desiredFs;try {desiredFs = requireNonNull(path).getFileSystem(hadoopConf);} catch (IOException ex) {throw new UncheckedIOException(ex);}URI desiredFsUri = desiredFs.getUri();Collection<Volume> candidateVolumes = volumesByFileSystemUri.get(desiredFsUri);if (candidateVolumes != null) {return candidateVolumes.stream().filter(volume -> volume.containsPath(path)).map(Volume::getFileSystem).findFirst().orElse(desiredFs);} else {return desiredFs;}}}	Yes
1131	"public class A {@Overridepublic void setValue(TestdataValue value) {super.setValue(value);if (latch.getCount() == 0) {return;}latch.countDown();long start = System.currentTimeMillis();try {Thread.sleep(Long.MAX_VALUE);} catch (InterruptedException ex) {Thread.currentThread().interrupt();throw new RuntimeException(""Interrupted while sleeping"", ex);}}}"	Yes
1132	"public class A {@Overridepublic OnFailurePaymentControlResult onFailureCall(final PaymentControlContext paymentControlContext,final Iterable<PluginProperty> pluginProperties)throws PaymentControlApiException {final InternalCallContext internalContext =internalCallContextFactory.createInternalCallContext(paymentControlContext.getAccountId(), paymentControlContext);final TransactionType transactionType = paymentControlContext.getTransactionType();DateTime nextRetryDate = null;switch (transactionType) {case PURCHASE:final UUID invoiceId = getInvoiceId(pluginProperties);try {invoiceApi.recordPaymentAttemptCompletion(invoiceId,BigDecimal.ZERO,paymentControlContext.getCurrency(),paymentControlContext.getCurrency(),paymentControlContext.getPaymentId(),paymentControlContext.getAttemptPaymentId(),paymentControlContext.getTransactionExternalKey(),paymentControlContext.getCreatedDate(),false,internalContext);} catch (final InvoiceApiException e) {}nextRetryDate =computeNextRetryDate(paymentControlContext.getPaymentExternalKey(),paymentControlContext.isApiPayment(),internalContext);break;case CREDIT:case REFUND:break;case CHARGEBACK:try {invoiceApi.recordChargebackReversal(paymentControlContext.getPaymentId(),paymentControlContext.getAttemptPaymentId(),paymentControlContext.getTransactionExternalKey(),internalContext);} catch (final InvoiceApiException e) {}break;default:throw new IllegalStateException(""Unexpected transactionType "" + transactionType);}return new DefaultFailureCallResult(nextRetryDate);}}"	Yes
1133	"public class A {private void notifyRulesReady() {LOG.info(""SeaCloudsInitializerPolicy is starting to enforce SLA Agreements for "" + entity.getId());HttpToolResponse response =post(getConfig(SLA_ENDPOINT)+ ""/seaclouds/commands/rulesready?agreementId=""+ agreement.getAgreementId(),MediaType.APPLICATION_XML_UTF_8.toString(),getConfig(SLA_USERNAME),getConfig(SLA_PASSWORD),"""".getBytes());if (!HttpTool.isStatusCodeHealthy(response.getResponseCode())) {throw new RuntimeException(""Something went wrong during the SLA Agreements installation. ""+ ""Invalid response code, ""+ response.getResponseCode()+ "":""+ response.getContentAsString());}}}"	No
1134	public class A {@Overridepublic void trace(String format, Object arg1, Object arg2) {traceMessages.add(new LogMessage(null, format, null, arg1, arg2));}}	Yes
1135	"public class A {private void createFlightList(FlightCrewSolution solution, int flightRoundTripsPerDay, int dayCount) {int flightListSize = flightRoundTripsPerDay * dayCount;List<Flight> flightList = new ArrayList<>(flightListSize);List<Airport> airportList = solution.getAirportList();Airport centerAirport = airportList.get(0);int homeAirportListSize = Math.min(airportList.size() / 10, flightRoundTripsPerDay / 5);homeAirportList =airportList.stream().sorted(Comparator.comparingDouble(centerAirport::getHaversineDistanceInKmTo)).limit(homeAirportListSize).collect(Collectors.toList());LocalDate firstDate = solution.getScheduleFirstUTCDate();LocalDate lastDate = solution.getScheduleLastUTCDate();int flightNumberSuffix = 1;long flightId = 0L;for (int i = 0; i < flightRoundTripsPerDay; i++) {int flightCount = i % 2 == 0 ? 2 : 3;ArrayList<Airport> selectedAirports = new ArrayList<>(flightCount);Airport firstAirport = extractRandomElement(random, homeAirportList);selectedAirports.add(firstAirport);ArrayList<Airport> nonFirstAirports = new ArrayList<>(airportList);nonFirstAirports.remove(firstAirport);Collections.shuffle(nonFirstAirports, random);selectedAirports.addAll(nonFirstAirports.subList(0, flightCount - 1));for (int j = 0; j < flightCount; j++) {String flightNumber = ""AB"" + String.format(""%03d"", flightNumberSuffix);flightNumberSuffix++;Airport departureAirport = selectedAirports.get(j);Airport arrivalAirport = selectedAirports.get((j + 1) % flightCount);int flyingTime =(int)((departureAirport.getHaversineDistanceInKmTo(arrivalAirport)/ PLANE_SPEED_IN_KM_PER_MINUTE)+ PLANE_TAKE_OFF_AND_LANDING_MINUTES);int departureMinute =START_MINUTE_OF_DAY+ random.nextInt(END_MINUTE_OF_DAY - flyingTime - START_MINUTE_OF_DAY + 1);int arrivalMinute = departureMinute + flyingTime;for (LocalDate date = firstDate; date.compareTo(lastDate) <= 0; date = date.plusDays(1)) {Flight flight = new Flight();flight.setId(flightId);flightId++;flight.setFlightNumber(flightNumber);flight.setDepartureAirport(departureAirport);flight.setDepartureUTCDateTime(date.atTime(departureMinute / 60, departureMinute % 60));flight.setArrivalAirport(arrivalAirport);flight.setArrivalUTCDateTime(date.atTime(arrivalMinute / 60, arrivalMinute % 60));logger.trace(""Created flight ({})."", flight);flightList.add(flight);}}}flightList.sort(Flight::compareTo);solution.setFlightList(flightList);}}"	No
1136	public class A {private Exchange addSpecificContent(final Exchange exchange, final TImplementationArtifact implementationArtifact) {final Object any = implementationArtifact.getAny();final Document specificContent =any instanceof Element ? XMLHelper.fromRootNode((Element) any) : null;if (specificContent != null) {exchange.getIn().setHeader(MBHeader.SPECIFICCONTENT_DOCUMENT.toString(), specificContent);}return exchange;}}	Yes
1137	"public class A {@Overridepublic IndexClient getIndexClient(HetuFileSystemClient fs, HetuMetastore metastore, Path root) {requireNonNull(root, ""No root path specified"");return new HeuristicIndexClient(fs, metastore, root);}}"	Yes
1138	"public class A {@Overridepublic Channel getOperandChannel(OperandChannel operand) {final Channel channel;switch (operand) {case ACCEPTING_PARTY:channel = this._acceptingParty;break;case ORIGINATING_PARTY:channel = this._originatingParty;break;case REMOTE_PARTY:channel = getRemoteParty();break;case TRANSFER_TARGET_PARTY:channel = this._transferTargetParty;break;case LOCAL_PARTY:channel = this.getLocalParty();break;default:throw new IllegalArgumentException(""An unsupported operand was passed:"" + operand);}if (channel == null) {logger.warn(""failed to get channel for "" + operand);}return channel;}}"	No
1139	"public class A {private Iterable<String> getIssueProjectNames() {Set<String> answer = new TreeSet<>();try {if (taigaClient != null) {List<ProjectDTO> projects = null;try {projects = taigaClient.getProjects();} catch (Exception e) {LOG.warn(""Failed to load chat projects! "" + e, e);}if (projects != null) {for (ProjectDTO project : projects) {String name = project.getName();if (name != null) {answer.add(name);}}}}} catch (Exception e) {}return answer;}}"	Yes
1140	"public class A {@Overridepublic void deleteUserMessages(String username) throws ApsSystemException {Connection conn = null;try {conn = this.getConnection();conn.setAutoCommit(false);super.executeQueryWithoutResultset(conn, DELETE_USERMESSAGES_ANSWERS, username);super.executeQueryWithoutResultset(conn, DELETE_USERMESSAGES_SEARCH_RECORD, username);super.executeQueryWithoutResultset(conn, DELETE_USERMESSAGES_ROLES, username);super.executeQueryWithoutResultset(conn, DELETE_USERMESSAGES, username);conn.commit();} catch (Throwable t) {this.executeRollback(conn);_logger.error(""Error removing messages for user {}"", username, t);throw new RuntimeException(""Error removing messages for user "" + username, t);} finally {this.closeConnection(conn);}}}"	No
1141	"public class A {private void fastForwardNotMergedCommits(FetchResult fetchResult)throws IOException, GitAPIException {Ref advertisedRef = fetchResult.getAdvertisedRef(Constants.R_HEADS + branch);Ref localRef = git.getRepository().findRef(branch);if (localRef != null&& advertisedRef != null&& !localRef.getObjectId().equals(advertisedRef.getObjectId())) {if (isMergedInto(advertisedRef.getObjectId(), localRef.getObjectId(), false)) {log.warn(""Advertised commit is already merged into current head in branch '{}'. Current HEAD:""+ "" {}, advertised ref: {}"",branch,localRef.getObjectId().name(),advertisedRef.getObjectId().name());} else {checkoutForced(branch);git.merge().include(advertisedRef).setFastForward(MergeCommand.FastForwardMode.FF_ONLY).call();}}}}"	Yes
1142	"public class A {@Overridepublic void open(FunctionContext context) {final ExecutorService threadPool =Executors.newFixedThreadPool(THREAD_POOL_SIZE,new ExecutorThreadFactory(""hbase-aysnc-lookup-worker"", Threads.LOGGING_EXCEPTION_HANDLER));Configuration config = prepareRuntimeConfiguration();CompletableFuture<AsyncConnection> asyncConnectionFuture =ConnectionFactory.createAsyncConnection(config);try {asyncConnection = asyncConnectionFuture.get();table = asyncConnection.getTable(TableName.valueOf(hTableName), threadPool);this.cache =cacheMaxSize <= 0 || cacheExpireMs <= 0? null: CacheBuilder.newBuilder().recordStats().expireAfterWrite(cacheExpireMs, TimeUnit.MILLISECONDS).maximumSize(cacheMaxSize).build();if (cache != null && context != null) {context.getMetricGroup().gauge(""lookupCacheHitRate"", (Gauge<Double>) () -> cache.stats().hitRate());}} catch (InterruptedException | ExecutionException e) {throw new RuntimeException(""Cannot create connection to HBase."", e);}this.serde = new HBaseSerde(hbaseTableSchema, nullStringLiteral);}}"	Yes
1143	"public class A {@Overrideprotected void setup(Mapper<AvroKey<DocumentText>, NullWritable, NullWritable, NullWritable>.Context context)throws IOException, InterruptedException {namedOutputMeta = context.getConfiguration().get(NAMED_OUTPUT_META);if (namedOutputMeta == null || namedOutputMeta.isEmpty()) {throw new RuntimeException(""no named output provided for metadata"");}namedOutputFault = context.getConfiguration().get(NAMED_OUTPUT_FAULT);if (namedOutputFault == null || namedOutputFault.isEmpty()) {throw new RuntimeException(""no named output provided for fault"");}mos = instantiateMultipleOutputs(context);oaiNamespace =Namespace.getNamespace(context.getConfiguration().get(PARAM_INGEST_METADATA_OAI_NAMESPACE, ""http://www.openarchives.org/OAI/2.0/""));String excludedIdsCSV = context.getConfiguration().get(EXCLUDED_IDS);if (excludedIdsCSV != null&& !excludedIdsCSV.trim().isEmpty()&& !WorkflowRuntimeParameters.UNDEFINED_NONEMPTY_VALUE.equals(excludedIdsCSV)) {log.info(""got excluded ids: "" + excludedIdsCSV);excludedIds =new HashSet<String>(Arrays.asList(StringUtils.split(excludedIdsCSV.trim(), ',')));} else {}}}"	Yes
1144	"public class A {private synchronized void logTimingInfo() {if (!logger.isDebugEnabled()) {return;}final StringBuilder sb = new StringBuilder();sb.append(String.format(""For %s %s Timing Info is as follows:\n"", method, uri));for (final Map.Entry<String, Long> entry : timingInfo.entrySet()) {sb.append(entry.getKey()).append("" took "").append(TimeUnit.NANOSECONDS.toMillis(entry.getValue())).append("" millis\n"");}logger.debug(sb.toString());}}"	No
1145	"public class A {void storeExpectedValue(ExpectedValueCheckingStore store, KeyColumn lockID, StaticBuffer value) {Preconditions.checkNotNull(store);Preconditions.checkNotNull(lockID);lockedOn(store);Map<KeyColumn, StaticBuffer> m = expectedValuesByStore.get(store);assert null != m;if (m.containsKey(lockID)) {log.debug(""Multiple expected values for {}: keeping initial value {} and discarding later value {}"",lockID,m.get(lockID),value);} else {m.put(lockID, value);log.debug(""Store expected value for {}: {}"", lockID, value);}}}"	No
1146	"public class A {@Overridepublic void handleSysTemplateDownload(HypervisorType hostHyper, Long dcId) {Set<VMTemplateVO> toBeDownloaded = new HashSet<VMTemplateVO>();List<DataStore> stores = _storeMgr.getImageStoresByScopeExcludingReadOnly(new ZoneScope(dcId));if (stores == null || stores.isEmpty()) {return;}for (DataStore store : stores) {List<VMTemplateVO> rtngTmplts = _templateDao.listAllSystemVMTemplates();List<VMTemplateVO> defaultBuiltin = _templateDao.listDefaultBuiltinTemplates();for (VMTemplateVO rtngTmplt : rtngTmplts) {if (rtngTmplt.getHypervisorType() == hostHyper && !rtngTmplt.isDirectDownload()) {toBeDownloaded.add(rtngTmplt);}}for (VMTemplateVO builtinTmplt : defaultBuiltin) {if (builtinTmplt.getHypervisorType() == hostHyper && !builtinTmplt.isDirectDownload()) {toBeDownloaded.add(builtinTmplt);}}for (VMTemplateVO template : toBeDownloaded) {TemplateDataStoreVO tmpltHost =_vmTemplateStoreDao.findByStoreTemplate(store.getId(), template.getId());if (tmpltHost == null) {associateTemplateToZone(template.getId(), dcId);s_logger.info(""Downloading builtin template ""+ template.getUniqueName()+ "" to data center: ""+ dcId);TemplateInfo tmplt = _templateFactory.getTemplate(template.getId(), DataStoreRole.Image);createTemplateAsync(tmplt, store, null);}}}}}"	No
1147	"public class A {private void checkFragments(Set<LedgerFragment> fragments, GenericCallback<Set<LedgerFragment>> cb) {if (fragments.size() == 0) {cb.operationComplete(BKException.Code.OK, fragments);return;}FullLedgerCallback allFragmentsCb = new FullLedgerCallback(fragments.size(), cb);for (LedgerFragment r : fragments) {LOG.debug(""Checking fragment {}"", r);try {verifyLedgerFragment(r, allFragmentsCb);} catch (InvalidFragmentException ife) {allFragmentsCb.operationComplete(BKException.Code.IncorrectParameterException, r);} catch (BKException e) {LOG.error(""BKException when checking fragment : {}"", r, e);}}}}"	Yes
1148	"public class A {@Overridepublic InetSocketAddress resolve() {try {InetAddress inetAddress = getByName(host);InetSocketAddress updateAddress = new InetSocketAddress(inetAddress, port);checkDnsUpdate(updateAddress);return updateAddress;} catch (UnknownHostException e) {logger.info(""dns lookup fail. host:{}"", host);return InetSocketAddress.createUnresolved(host, port);}}}"	No
1149	"public class A {private boolean enableRules(List<String> rules) {List<Rule> ruleIds = ruleRepository.findAll();try {for (Rule rule : ruleIds) {if (rules.contains(rule.getRuleUUID())) {amazonClient.getAmazonCloudWatchEvents(config.getRule().getLambda().getRegion()).enableRule(new EnableRuleRequest().withName(rule.getRuleUUID()));rule.setStatus(RuleState.ENABLED.name());ruleRepository.save(rule);}}return true;} catch (Exception e) {log.error(""Error in enable rules"", e);return false;}}}"	No
1150	"public class A {public static com.liferay.portal.kernel.model.Country fetchCountryByA2(HttpPrincipal httpPrincipal, long companyId, String a2) {try {MethodKey methodKey =new MethodKey(CountryServiceUtil.class, ""fetchCountryByA2"", _fetchCountryByA2ParameterTypes4);MethodHandler methodHandler = new MethodHandler(methodKey, companyId, a2);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.Country) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
1151	"public class A {public void initialize() {String cmd = smGet.getCommand();if (getHandlingNode() == null || getHandlingNode().enabledSpaceSeparate()) {smGet.setKeySeparator("" "");} else {smGet.setKeySeparator("","");}String args = smGet.stringify();ByteBuffer bb =ByteBuffer.allocate(cmd.length()+ args.length()+ KeyUtil.getKeyBytes(smGet.getSpaceSeparatedKeys()).length+ 16);setArguments(bb, cmd, args);setArguments(bb, smGet.getSpaceSeparatedKeys());((Buffer) bb).flip();setBuffer(bb);if (getLogger().isDebugEnabled()) {getLogger().debug(""Request in ascii protocol: "" + (new String(bb.array())).replace(""\r\n"", ""\\r\\n""));}}}"	No
1152	"public class A {@Overridepublic void contentChanged(@NotNull NodeState root, @NotNull CommitInfo info) {if (previousRoot != null) {try {long start = PERF_LOGGER.start();NamePathMapper namePathMapper =new NamePathMapperImpl(new GlobalNameMapper(RootFactory.createReadOnlyRoot(root)));Set<String> oakPropertyNames = Sets.newHashSet();for (String name : propertyNames) {String oakName = namePathMapper.getOakNameOrNull(name);if (oakName == null) {} else {oakPropertyNames.add(oakName);}}NodeState before = previousRoot;NodeState after = root;EventHandler handler =new FilteredHandler(VISIBLE_FILTER, new NodeEventHandler(""/"", info, namePathMapper, oakPropertyNames));String oakPath = namePathMapper.getOakPath(path);if (oakPath == null) {return;}for (String oakName : PathUtils.elements(oakPath)) {before = before.getChildNode(oakName);after = after.getChildNode(oakName);handler = handler.getChildHandler(oakName, before, after);}EventGenerator generator = new EventGenerator(before, after, handler);while (!generator.isDone()) {generator.generate();}PERF_LOGGER.end(start, 100, ""Generated events (before: {}, after: {})"", previousRoot, root);} catch (Exception e) {LOG.warn(""Error while dispatching observation events"", e);}}previousRoot = root;}}"	Yes
1153	"public class A {public void invokeCallbacks() {IotHubTransportPacket packet = this.callbackPacketsQueue.poll();while (packet != null) {IotHubStatusCode status = packet.getStatus();IotHubEventCallback callback = packet.getCallback();Object context = packet.getContext();log.debug(""Invoking the callback function for sent message, IoT Hub responded to message ({}) with""+ "" status {}"",packet.getMessage(),status);callback.execute(status, context);packet = this.callbackPacketsQueue.poll();}}}"	No
1154	"public class A {private void installSnapshot(SnapshotInfo snapshot) {LOG.info(""{}: followerNextIndex = {} but logStartIndex = {}, send snapshot {} to follower"",this,getFollower().getNextIndex(),getRaftLog().getStartIndex(),snapshot);final InstallSnapshotResponseHandler responseHandler = new InstallSnapshotResponseHandler();StreamObserver<InstallSnapshotRequestProto> snapshotRequestObserver = null;final String requestId = UUID.randomUUID().toString();try {snapshotRequestObserver = getClient().installSnapshot(responseHandler);for (InstallSnapshotRequestProto request : newInstallSnapshotRequests(requestId, snapshot)) {if (isRunning()) {snapshotRequestObserver.onNext(request);getFollower().updateLastRpcSendTime();responseHandler.addPending(request);} else {break;}}snapshotRequestObserver.onCompleted();grpcServerMetrics.onInstallSnapshot();} catch (Exception e) {if (snapshotRequestObserver != null) {snapshotRequestObserver.onError(e);}return;}synchronized (this) {while (isRunning() && !responseHandler.isDone()) {try {wait();} catch (InterruptedException ignored) {Thread.currentThread().interrupt();}}}if (responseHandler.hasAllResponse()) {getFollower().setSnapshotIndex(snapshot.getTermIndex().getIndex());LOG.info(""{}: installed snapshot {} successfully"", this, snapshot);}}}"	Yes
1155	"public class A {private void processMessageRange(ImapSession session,MessageManager mailbox,FetchData fetch,MailboxSession mailboxSession,Responder responder,FetchResponseBuilder builder,FetchGroup resultToFetch,MessageRange range)throws MailboxException {MessageResultIterator messages = mailbox.getMessages(range, resultToFetch, mailboxSession);SelectedMailbox selected = session.getSelected();while (messages.hasNext()) {final MessageResult result = messages.next();if (fetch.contains(Item.MODSEQ) && result.getModSeq().asLong() <= fetch.getChangedSince()) {continue;}try {final FetchResponse response =builder.build(fetch, result, mailbox, selected, mailboxSession);responder.respond(response);} catch (MessageRangeException e) {LOGGER.debug(""Unable to find message with uid {}"", result.getUid(), e);} catch (MailboxException e) {}}if (messages.getException() != null) {throw messages.getException();}}}"	Yes
1156	"public class A {@Overridepublic void afterCompletion(int status) {try {switch (status) {case Status.STATUS_COMMITTED:log.debug(""Transaction committed"");this.dispatcher.commit();break;case Status.STATUS_ROLLEDBACK:log.debug(""Transaction rolled back"");this.dispatcher.rollback();break;default:log.debug(""Received unexpected transaction completion status: {}"", status);}} catch (JobMessageDispatchException e) {log.error(""Error occurred while attempting to synchronize database and message bus"", e);}}}"	No
1157	public class A {private void sendEventToSync(WorkerDoneEvent event) throws IOException, InterruptedException {if (log.isInfoEnabled()) {}this.toSync.broadcastEvent(event);}}	Yes
1158	"public class A {@RequiresPermissions(""objects:update"")public synchronized void setChanged(boolean value) {if (value) {ObjectHasChangedBehavior objectEvent = new ObjectHasChangedBehavior(this, this);if (LOG.isDebugEnabled()) {LOG.debug(""Thing \""{}\"" changes something in its status (eg: a behavior value)"",this.getPojo().getName());}busService.send(objectEvent);}}}"	No
1159	"public class A {public static java.io.File getFile(HttpPrincipal httpPrincipal, long commerceVirtualOrderItemId)throws Exception {try {MethodKey methodKey =new MethodKey(CommerceVirtualOrderItemServiceUtil.class, ""getFile"", _getFileParameterTypes0);MethodHandler methodHandler = new MethodHandler(methodKey, commerceVirtualOrderItemId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof Exception) {throw (Exception) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.io.File) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
1160	public class A {public static com.liferay.portal.kernel.model.LayoutSoap getLayoutByUuidAndGroupId(String uuid, long groupId, boolean privateLayout) throws RemoteException {try {com.liferay.portal.kernel.model.Layout returnValue =LayoutServiceUtil.getLayoutByUuidAndGroupId(uuid, groupId, privateLayout);return com.liferay.portal.kernel.model.LayoutSoap.toSoapModel(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
1161	"public class A {private Connection handleNewPendingConnection(InternalDistributedMember id,boolean sharedResource,boolean preserveOrder,Map m,PendingConnection pc,long startTime,long ackThreshold,long ackSAThreshold)throws IOException, DistributedSystemDisconnectedException {Connection con = null;try {con =Connection.createSender(owner.getMembership(),this,preserveOrder,id,sharedResource,startTime,ackThreshold,ackSAThreshold);owner.getStats().incSenders(sharedResource, preserveOrder);} finally {if (con == null) {owner.getStats().incFailedConnect();synchronized (m) {Object rmObj = m.remove(id);if (rmObj != pc && rmObj != null) {m.put(id, rmObj);}}pc.notifyWaiters(null);}}synchronized (m) {Object e = m.get(id);if (e == pc) {m.put(id, con);} else if (e == null) {con.requestClose(""pending connection cancelled"");con = null;} else {if (e instanceof Connection) {Connection newCon = (Connection) e;if (!newCon.connected) {if (con != null) {con.requestClose(""pending connection closed"");con = null;}} else {if (con != null) {con.requestClose(""someone else created the connection"");}con = newCon;}}}}pc.notifyWaiters(con);if (con != null && logger.isDebugEnabled()) {}return con;}}"	Yes
1162	public class A {@Overridepublic void run(long runtime) {try {new DataPurge().execute(runtime);} catch (Exception e) {log.error(e.getMessage(), e);}}}	No
1163	"public class A {static Path getBasePath(Configuration conf) {String basePathKey = ""hdfs."" + MrGeoConstants.MRGEO_HDFS_VECTOR;Path basePath = null;String strBasePath = null;if (conf != null) {strBasePath = conf.get(basePathKey);}if (strBasePath == null) {strBasePath = MrGeoProperties.getInstance().getProperty(MrGeoConstants.MRGEO_HDFS_VECTOR);}if (strBasePath != null) {try {basePath = new Path(new URI(strBasePath));} catch (URISyntaxException e) {}}if (basePath == null) {basePath = new Path(""/mrgeo/vectors"");}return basePath;}}"	Yes
1164	public class A {@Overridepublic void stop(BundleContext context) {if (session != null) {session.close();session = null;}}}	Yes
1165	"public class A {private void validateAndFillPolicy(PolicyDefinition emptyPolicyDefinition, Map<String, Object> policyTemplateJsonMap) {String policyTypeName = (String) policyTemplateJsonMap.get(TYPE.getElementName());if (StringUtils.isEmpty(policyTypeName)) {log.debug(""#validateAndFillPolicy - The 'type' member is not found under policy {}"",emptyPolicyDefinition.getName());rollbackWithException(ActionStatus.POLICY_MISSING_POLICY_TYPE, emptyPolicyDefinition.getName());}emptyPolicyDefinition.setType(policyTypeName);emptyPolicyDefinition.setTargets(validateFillPolicyTargets(policyTemplateJsonMap));PolicyTypeDefinition policyTypeDefinition = validateGetPolicyTypeDefinition(policyTypeName);emptyPolicyDefinition.setProperties(validateFillPolicyProperties(policyTypeDefinition, policyTemplateJsonMap));}}"	No
1166	"public class A {private void evaluateExpectations(String currentSpecLocation, AtomicAction<? extends Oaf> action, String serializedAction)throws Exception {Properties specProps = new OrderedProperties();specProps.load(ClassPathResourceProvider.getResourceInputStream(currentSpecLocation.trim()));Iterator<Entry<Object, Object>> propsIter = specProps.entrySet().iterator();while (propsIter.hasNext()) {Entry<Object, Object> entry = propsIter.next();Object currentValue = accessor.getValue((String) entry.getKey(), action);if ((currentValue != null && !entry.getValue().equals(currentValue.toString()))|| (currentValue == null && !NULL_VALUE_INDICATOR.equals(entry.getValue()))) {throw new Exception(""invalid field value for path: ""+ entry.getKey()+ "", expected: '""+ entry.getValue()+ ""', ""+ ""got: '""+ currentValue+ ""' Full object content: ""+ serializedAction);}}}}"	Yes
1167	"public class A {private String getPrimaryMacAddressOSX(String primaryNetworkInterfaceName) {String macAddress = null;try {logger.info(""executing: ifconfig and looking for {}"", primaryNetworkInterfaceName);List<String> out =Arrays.asList(runSystemCommand(""ifconfig"", false, this.executorService).split(""\\r?\\n""));ListIterator<String> iterator = out.listIterator();String line;while (iterator.hasNext()) {line = iterator.next();if (line.startsWith(primaryNetworkInterfaceName)) {line = iterator.next();if (line == null) {throw new IOException(""Null input!"");}if (!line.trim().startsWith(""ether"")) {line = iterator.next();}String[] splitLine = line.split("" "");if (splitLine.length > 0) {macAddress = splitLine[1].toUpperCase();}}}} catch (IOException e) {}return macAddress;}}"	Yes
1168	"public class A {public static RejectedExecutionHandler newThreadRun(String source) {return (r, p) -> {if (!p.isShutdown()) {String threadName = source + ""-T-"" + COUNTER.getAndIncrement();log.info(""[{}] create new thread[{}] to run job"", source, threadName);new Thread(r, threadName).start();}};}}"	Yes
1169	"public class A {public HttpURLConnection connect(String endpoint,Map<String, List<String>> param,String method,String data,Map<String, String> headers)throws Exception {logger.info(""RetryableHttpConnection: endpoint: %s, data.len: %d, method: %s"",endpoint, data == null ? -1 : data.length(), method);for (int i = 0; i < ips.size() && !ips.isEmpty(); ++i, ++index) {if (index >= ips.size()) {index = 0;}try {logger.info(""connecting to %s:%s ..."", ips.get(index), ports.get(index));URL url = buildUrl(endpoint, param, ips.get(index), ports.get(index));HttpURLConnection conn = openConnection(url);conn.setConnectTimeout(DEFAULT_CONNECTION_TIMEOUT);if (headers != null) {headers.forEach((k, v) -> conn.setRequestProperty(k, v));}conn.setRequestMethod(method);conn.setUseCaches(false);conn.setDoInput(true);for (int j = 0; j < maxRetry + 1; ++j) {if (j > 0) {TimeUnit.SECONDS.sleep(RETRY_INTERVAL);}try {if (data != null) {conn.setDoOutput(true);DataOutputStream wr = new DataOutputStream(conn.getOutputStream());wr.writeBytes(data);wr.flush();wr.close();}int code = conn.getResponseCode();if (code == 200 || code == 401) {logger.info(""succeed to connect to %s:%s!"", ips.get(index), ports.get(index));return conn;}logger.error(""code: %d, msg: %s"", code, conn.getResponseMessage());if (code / 500 == 1) {continue;}break;} catch (IOException e) {}}} catch (URISyntaxException | IOException | InterruptedException e) {logger.error(e);}}throw new ConnectException();}}"	Yes
1170	"public class A {@Overrideprotected SRARouteTO resolveReference(final Method method, final Object... args)throws UnresolvedReferenceException {String key = null;if (ArrayUtils.isNotEmpty(args)&& (""create"".equals(method.getName())|| ""update"".equals(method.getName())|| ""delete"".equals(method.getName()))) {for (int i = 0; key == null && i < args.length; i++) {if (args[i] instanceof String) {key = (String) args[i];} else if (args[i] instanceof SRARouteTO) {key = ((SRARouteTO) args[i]).getKey();}}}if (key != null) {try {return binder.getSRARouteTO(routeDAO.find(key));} catch (Throwable ignore) {throw new UnresolvedReferenceException(ignore);}}throw new UnresolvedReferenceException();}}"	Yes
1171	public class A {@Overridepublic void run() {for (Thing thing : getThing().getThings()) {ThingHandler handler = thing.getHandler();if (handler != null) {handler.handleRemoval();} else {}}updateStatus(ThingStatus.REMOVED);}}	Yes
1172	"public class A {public List<String> discoverUebHosts(String opEnvKey) throws DME2Exception {String lookupUriFormat =configurationManager.getConfiguration().getDmeConfiguration().getLookupUriFormat();String environment =configurationManager.getConfiguration().getDmaapConsumerConfiguration().getEnvironment();String lookupURI = String.format(lookupUriFormat, opEnvKey, environment);log.debug(""DME2 GRM URI: {}"", lookupURI);List<String> uebHosts = new LinkedList<>();DME2EndpointIterator iterator = epIterCreator.create(lookupURI);while (iterator.hasNext()) {DME2EndpointReference ref = iterator.next();DME2Endpoint dmeEndpoint = ref.getEndpoint();log.debug(""DME returns EP with UEB host {}, UEB port: {}"",dmeEndpoint.getHost(),dmeEndpoint.getPort());uebHosts.add(dmeEndpoint.getHost());}return uebHosts;}}"	No
1173	"public class A {@Overridepublic void destroy() throws Exception {if (referenceCount.get() <= 0) {try {if (localJarFile.exists()) {FileUtils.forceDelete(localJarFile);}} catch (Exception e) {log.warn(""[OmsJarContainer-{}] delete jarFile({}) failed."",containerId,localJarFile.getPath(),e);}try {processorCache.clear();container.close();containerClassLoader.close();log.info(""[OmsJarContainer-{}] container destroyed successfully"", containerId);} catch (Exception e) {log.error(""[OmsJarContainer-{}] container destroyed failed"", containerId, e);}return;}log.warn(""[OmsJarContainer-{}] container's reference count is {}, won't destroy now!"",containerId,referenceCount.get());}}"	No
1174	"public class A {static HFileMeta toAttr(byte[] bytes) {try {return (bytes == null) ? null : HFileMeta.deserialize(bytes);} catch (Exception internal) {log.warn(""Argument 'bytes={}' was not a serialized HFileMeta!"", CommonUtils.hex(bytes));throw new IllegalArgumentException(internal);}}}"	No
1175	public class A {public static <T extends Container> void setContainerImplementation(String containerType, Class<T> containerClass) {containerImplementations.put(containerType, containerClass);}}	Yes
1176	public class A {protected void handleException(String message, Exception e) throws Exception {File scrFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);throw e;}}	Yes
1177	"public class A {private void runAutoML(String dataFrameResponse) throws InsightsCustomException {JsonObject responseJson = new JsonParser().parse(dataFrameResponse).getAsJsonObject();JsonArray destinationFrames = responseJson.get(""destination_frames"").getAsJsonArray();String trainingFrame = destinationFrames.get(0).getAsJsonObject().get(""name"").getAsString();JsonObject mlResponse =trainUtils.runAutoML(autoMlConfig.getUseCaseName(),trainingFrame,autoMlConfig.getPredictionColumn(),autoMlConfig.getNumOfModels());int status = mlResponse.get(""status"").getAsInt();if (status == 200) {String modelId = mlResponse.get(""name"").getAsString();autoMlConfig.setStatus(AutoMLEnum.Status.LEADERBOARD_READY.name());autoMlConfig.setModelId(modelId);autoMlDAL.updateMLConfig(autoMlConfig);log.info(""AutoML Executor === AutoML on usecase {} is completed successfully and usecase is ready""+ "" for leaderboard and prediction for modelId {}"",autoMlConfig.getUseCaseName(),modelId);}}}"	Yes
1178	"public class A {public static PlacementPolicy getPolicy(ConfigurationSource conf,final NodeManager nodeManager,NetworkTopology clusterMap,final boolean fallback,SCMContainerPlacementMetrics metrics)throws SCMException {final Class<? extends PlacementPolicy> placementClass =conf.getClass(ScmConfigKeys.OZONE_SCM_CONTAINER_PLACEMENT_IMPL_KEY,OZONE_SCM_CONTAINER_PLACEMENT_IMPL_DEFAULT,PlacementPolicy.class);Constructor<? extends PlacementPolicy> constructor;try {constructor =placementClass.getDeclaredConstructor(NodeManager.class,ConfigurationSource.class,NetworkTopology.class,boolean.class,SCMContainerPlacementMetrics.class);} catch (NoSuchMethodException e) {String msg =""Failed to find constructor(NodeManager, Configuration, ""+ ""NetworkTopology, boolean) for class ""+ placementClass.getCanonicalName();throw new SCMException(msg, SCMException.ResultCodes.FAILED_TO_INIT_CONTAINER_PLACEMENT_POLICY);}try {return constructor.newInstance(nodeManager, conf, clusterMap, fallback, metrics);} catch (Exception e) {throw new RuntimeException(""Failed to instantiate class ""+ placementClass.getCanonicalName()+ "" for ""+ e.getMessage());}}}"	Yes
1179	"public class A {public synchronized void refineRoot(BigRational e) {ensureEngine();try {root = engine.complexRootRefinement(root, algebraic.modul, e);} catch (InvalidBoundaryException e1) {logger.warn(""new eps not set: "" + e);return;}this.eps = e;}}"	No
1180	public class A {private boolean isNodeAuditEnabled(Engine engine) {for (Analyzer a : engine.getAnalyzers()) {if (a instanceof NodeAuditAnalyzer || a instanceof YarnAuditAnalyzer) {if (a.isEnabled()) {try {((AbstractNpmAnalyzer) a).prepareFileTypeAnalyzer(engine);} catch (InitializationException ex) {}}return a.isEnabled();}}return false;}}	Yes
1181	"public class A {@Overridepublic void run() {try {grabber.start();capturing = true;while (capturing) {BufferedImage bi = grabber.grabBufferedImage();log.debug(""grabbed"");if (bi != null) {log.debug(""publishDisplay"");invoke(""publishDisplay"", new Object[] {getName(), bi});}}} catch (Exception e) {}}}"	No
1182	public class A {private void logContentLength(ResponseValues httpResponse) {if (LOGGER.isDebugEnabled()) {long contentLength = 0;try {contentLength = httpResponse.getContentLength();} catch (NumberFormatException ex) {contentLength = -1;}}}}	Yes
1183	"public class A {public static java.util.List<com.liferay.dynamic.data.mapping.model.DDMFormInstanceRecordVersion>getFormInstanceRecordVersions(HttpPrincipal httpPrincipal,long ddmFormInstanceRecordId,int start,int end,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.dynamic.data.mapping.model.DDMFormInstanceRecordVersion>orderByComparator)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(DDMFormInstanceRecordVersionServiceUtil.class,""getFormInstanceRecordVersions"",_getFormInstanceRecordVersionsParameterTypes4);MethodHandler methodHandler =new MethodHandler(methodKey, ddmFormInstanceRecordId, start, end, orderByComparator);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (java.util.List<com.liferay.dynamic.data.mapping.model.DDMFormInstanceRecordVersion>)returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
1184	public class A {@Overridepublic InputStream getContentStream() {ContentStream contentStream = _document.getContentStream();try {DLAppHelperLocalServiceUtil.getFileAsStream(PrincipalThreadLocal.getUserId(), this, true);} catch (Exception exception) {}if (contentStream == null) {return null;}return contentStream.getStream();}}	Yes
1185	"public class A {public static void main(String[] args) {Character warrior =CharacterStepBuilder.newBuilder().name(""Amberjill"").fighterClass(""Paladin"").withWeapon(""Sword"").noAbilities().build();LOGGER.info(warrior.toString());Character mage =CharacterStepBuilder.newBuilder().name(""Riobard"").wizardClass(""Sorcerer"").withSpell(""Fireball"").withAbility(""Fire Aura"").withAbility(""Teleport"").noMoreAbilities().build();Character thief =CharacterStepBuilder.newBuilder().name(""Desmond"").fighterClass(""Rogue"").noWeapon().build();LOGGER.info(thief.toString());}}"	Yes
1186	public class A {public void failed(Throwable exception) {}}	Yes
1187	"public class A {@Override@SuppressWarnings(""bsiRulesDefinition:htmlInString"")public void writeResponse(OutputStream stream, ServiceTunnelResponse msg) throws IOException {boolean debugEnabled = LOG.isDebugEnabled();if (debugEnabled) {stream = new DebugOutputStream(stream);}try (OutputStreamWriter out = new OutputStreamWriter(stream, StandardCharsets.UTF_8)) {boolean compressed = isUseCompression();out.write(""<soapenv:Envelope soapenv:encodingStyle=\""http://schemas.xmlsoap.org/soap/encoding/\""""+ "" xmlns:soapenv=\""http://schemas.xmlsoap.org/soap/envelope/\"">\n"");out.write(""<soapenv:Body>\n"");if (msg.getException() == null) {out.write(""  <response status=\""OK\"""");Object x = msg.getData();if (x != null) {out.write("" type=\"""" + x.getClass().getSimpleName() + ""\"""");} else {out.write("" type=\""\"""");}out.write("" compressed=\"""" + compressed + ""\"""");out.write(""/>\n"");} else {out.write(""  <response status=\""ERROR\"""");out.write("" compressed=\"""" + compressed + ""\"""");out.write("">\n"");out.write(""    <exception type=\"""" + msg.getException().getClass().getSimpleName() + ""\"">"");out.write(msg.getException().getMessage());out.write(""</exception>\n"");out.write(""  </response>\n"");}out.write(""  <data>"");long y = System.nanoTime();setData(out, msg, compressed);y = System.nanoTime() - y;if (debugEnabled) {LOG.debug(""message encoding took {} nanoseconds"", y);}out.write(""</data>\n"");out.write(""  <info"");out.write("" origin=\"""" + m_originAddress + ""\"""");out.write(""/>\n"");out.write(""</soapenv:Body>"");out.write(""</soapenv:Envelope>"");} finally {if (debugEnabled) {String sentData = ((DebugOutputStream) stream).getContent(StandardCharsets.UTF_8.name());int lastWrittenCharacter = ((DebugOutputStream) stream).getLastWrittenCharacter();Throwable lastThrownException = ((DebugOutputStream) stream).getLastThrownException();LOG.debug(""lastWrittenCharacter={}, lastThrownException={}, sentData: {}"",lastWrittenCharacter,lastThrownException,sentData);}}}}"	No
1188	public class A {@Overridepublic boolean start(NodeState protectedParent)throws IllegalStateException, RepositoryException {if (isStarted()) {throw new IllegalStateException();}if (isWorkspaceImport) {return false;}return false;}}	Yes
1189	"public class A {protected void registerServer(final String serviceName) {try {final Remote server = RemoteCacheServerFactory.getRemoteCacheServer();RemoteCacheServerFactory.registerServer(serviceName, server);final String message = ""Successfully rebound server to registry ["" + serviceName + ""]."";if (cacheEventLogger != null) {cacheEventLogger.logApplicationEvent(""RegistryKeepAliveRunner"", ""registerServer"", message);}log.info(message);} catch (final RemoteException e) {final String message = ""Could not rebind server to registry ["" + serviceName + ""]."";log.error(message, e);if (cacheEventLogger != null) {cacheEventLogger.logError(""RegistryKeepAliveRunner"", ""registerServer"", message + "":"" + e.getMessage());}}}}"	No
1190	"public class A {private void becomeLockGrantor(InternalDistributedMember predecessor) {Assert.assertTrue(predecessor == null);boolean ownLockGrantorFutureResult = false;FutureResult lockGrantorFutureResultRef = null;final boolean isDebugEnabled_DLS = logger.isTraceEnabled(LogMarker.DLS_VERBOSE);LockGrantorId myLockGrantorId = null;try {while (!ownLockGrantorFutureResult) {Assert.assertHoldsLock(this.destroyLock, false);synchronized (this.lockGrantorIdLock) {if (isCurrentlyOrIsMakingLockGrantor()) {return;} else if (this.lockGrantorFutureResult != null) {lockGrantorFutureResultRef = this.lockGrantorFutureResult;} else {ownLockGrantorFutureResult = true;lockGrantorFutureResultRef = new FutureResult(this.dm.getCancelCriterion());if (isDebugEnabled_DLS) {}this.lockGrantorFutureResult = lockGrantorFutureResultRef;}}if (!ownLockGrantorFutureResult) {waitForLockGrantorFutureResult(lockGrantorFutureResultRef, 0, TimeUnit.MILLISECONDS);}}getStats().incBecomeGrantorRequests();long tempGrantorVersion = -1;LockGrantorId tempLockGrantorId =new LockGrantorId(this.dm, this.dm.getId(), tempGrantorVersion, getSerialNumber());DLockGrantor myGrantor = DLockGrantor.createGrantor(this, tempGrantorVersion);try {synchronized (this.lockGrantorIdLock) {Assert.assertTrue(setLockGrantorId(tempLockGrantorId, myGrantor));}if (isDebugEnabled_DLS) {}InternalDistributedMember elder = getElderId();Assert.assertTrue(elder != null);GrantorInfo gi = becomeGrantor(predecessor);boolean needsRecovery = gi.needsRecovery();long myGrantorVersion = gi.getVersionId() + 1;myGrantor.setVersionId(myGrantorVersion);myLockGrantorId =new LockGrantorId(this.dm, this.dm.getId(), myGrantorVersion, getSerialNumber());if (isDebugEnabled_DLS) {logger.trace(LogMarker.DLS_VERBOSE, ""[becomeLockGrantor] Calling makeLocalGrantor"");}if (!makeLocalGrantor(elder, needsRecovery, myLockGrantorId, myGrantor)) {return;}} finally {Assert.assertTrue(myGrantor == null|| !myGrantor.isInitializing()|| this.dm.getCancelCriterion().isCancelInProgress()|| isDestroyed(),""BecomeLockGrantor failed and left grantor non-ready"");}} finally {synchronized (this.lockGrantorIdLock) {if (ownLockGrantorFutureResult) {Assert.assertTrue(this.lockGrantorFutureResult == lockGrantorFutureResultRef);boolean getLockGrantorIdFailed = myLockGrantorId == null;if (getLockGrantorIdFailed) {lockGrantorFutureResultRef.cancel(true);} else {this.dm.getCancelCriterion().checkCancelInProgress(null);lockGrantorFutureResultRef.set(myLockGrantorId);}this.lockGrantorFutureResult = null;}}}}}"	Yes
1191	"public class A {protected HttpsServer createSSLServer() throws Exception {InetSocketAddress address = new InetSocketAddress(getProxyCallbackURLPrefix().getPort());HttpsServer httpsServer = HttpsServer.create(address, 0);SSLContext sslContext = SSLContext.getInstance(""TLS"");char[] password = ""changeit"".toCharArray();KeyStore ks = KeyStore.getInstance(""JKS"");File base = new File(System.getProperty(""user.home""), "".geoserver"");File keystore = new File(base, ""keystore.jks"");try (FileInputStream fis = new FileInputStream(keystore)) {ks.load(fis, password);}KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());kmf.init(ks, password);TrustManagerFactory tmf =TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());tmf.init(ks);sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext) {@Overridepublic void configure(HttpsParameters params) {try {SSLContext c = SSLContext.getDefault();SSLEngine engine = c.createSSLEngine();params.setNeedClientAuth(false);params.setCipherSuites(engine.getEnabledCipherSuites());params.setProtocols(engine.getEnabledProtocols());SSLParameters defaultSSLParameters = c.getDefaultSSLParameters();params.setSSLParameters(defaultSSLParameters);} catch (Exception ex) {throw new RuntimeException(ex);}}});httpsServer.createContext(""/test"",t -> {t.getRequestBody().close();t.sendResponseHeaders(200, 0);t.getResponseBody().close();});httpsServer.setExecutor(null);return httpsServer;}}"	Yes
1192	"public class A {public MbZielobjRelation merge(MbZielobjRelation detachedInstance) {log.debug(""merging MbZielobjRelation instance"");try {MbZielobjRelation result =(MbZielobjRelation) sessionFactory.getCurrentSession().merge(detachedInstance);return result;} catch (RuntimeException re) {log.error(""merge failed"", re);throw re;}}}"	Yes
1193	"public class A {@RolesAllowed({""Peer-Management|Delete"", ""Peer-Management|Update""})@Overridepublic void unregisterPeer() throws BazaarManagerException {RegistrationManager registrationManager = new RegistrationManager(this, configManager);registrationManager.unregister();if (!CollectionUtil.isCollectionEmpty(bazaarEventListeners)) {ExecutorService notifier = Executors.newFixedThreadPool(bazaarEventListeners.size());for (final BazaarEventListener bazaarEventListener : bazaarEventListeners) {notifier.execute(new Runnable() {@Overridepublic void run() {try {bazaarEventListener.onUnregister();} catch (Exception e) {log.error(""Error notifying event listener"", e);}}});}notifier.shutdown();}}}"	No
1194	"public class A {public void start(GsqlCli cli) throws Exception {if (retryableHttpConn == null) {throw new NullPointerException(""retryableHttpConn is null"");}if (cli.hasVersion()) {executePost(ENDPOINT_VERSION, ""v"");SystemUtils.exit(ExitStatus.OK);} else if (cli.hasDetailedVersion()) {executePost(ENDPOINT_VERSION, ""version"");SystemUtils.exit(ExitStatus.OK);} else if (cli.hasHelp()) {executePost(ENDPOINT_HELP, ""help"");SystemUtils.exit(ExitStatus.OK);} else if (cli.hasLock()) {executePost(ENDPOINT_LOCK, ""lock"");SystemUtils.exit(ExitStatus.OK);}isFromGraphStudio = cli.isFromGraphStudio();login(cli);Runtime.getRuntime().addShutdownHook(new Thread() {public void run() {sendPost(ENDPOINT_ABORT_CLIENT_SESSION, ""abortclientsession"");}});if (cli.hasReset()) {executePost(ENDPOINT_RESET, ""reset"");} else if (cli.hasFile() || cli.isReadingFile()) {String inputFileContent = readFile(cli);String msg = URLEncoder.encode(inputFileContent, ""UTF-8"");executePost(ENDPOINT_FILE, msg);} else if (cli.hasCommand()) {String msg = URLEncoder.encode(cli.getCommand(), ""UTF-8"");executePost(ENDPOINT_FILE, msg);} else if (!cli.getArgument().isEmpty()) {String msg = URLEncoder.encode(cli.getArgument(), ""UTF-8"");executePost(ENDPOINT_FILE, msg);} else {String timeout = System.getenv(""GSQL_CLIENT_IDLE_TIMEOUT_SEC"");if (timeout != null) {try {sessionTimeoutSec = Integer.parseInt(timeout);} catch (NumberFormatException e) {logger.error(e);}}interactiveShell();}}}"	Yes
1195	"public class A {@Testpublic final void testCloseWhileMailActive(TestContext testContext) {Async async = testContext.async();Async async2 = testContext.async();MailClientImpl mailClient = new MailClientImpl(vertx, configNoSSL(), ""foo"");testContext.assertEquals(0, mailClient.getConnectionPool().connCount());mailClient.sendMail(largeMessage(),result -> {log.info(""mail finished"");if (result.succeeded()) {log.info(result.result().toString());vertx.setTimer(1000,v -> {testContext.assertEquals(0, mailClient.getConnectionPool().connCount());async.complete();});} else {log.warn(""got exception"", result.cause());testContext.fail(result.cause());}});vertx.setTimer(100,v1 -> {testContext.assertEquals(1, mailClient.getConnectionPool().connCount());mailClient.close();testContext.assertEquals(0, mailClient.getConnectionPool().connCount());async2.complete();});}}"	Yes
1196	"public class A {@Overridepublic List<Category> loadCategories(ILangManager langManager) {Connection conn = null;Statement stat = null;ResultSet res = null;List<Category> categories = new ArrayList<Category>();try {conn = this.getConnection();stat = conn.createStatement();res = stat.executeQuery(this.getLoadCategoriesQuery());while (res.next()) {Category category = this.loadCategory(res, langManager);categories.add(category);}} catch (Throwable t) {_logger.error(""Error loading categories"", t);throw new RuntimeException(""Error loading categories"", t);} finally {closeDaoResources(res, stat, conn);}return categories;}}"	No
1197	"public class A {public <T> Class<? extends T> getPropertyAsClass(final ParameterEnum<?> property,final Class<? extends T> iface,final Class<? extends T> defaultClass) {final Object val = getPropertyValue(property);if (val != null) {if (val instanceof Class) {return validate((Class<T>) val, property.getHelper().getBaseClass());}try {return validate((Class<T>) Class.forName(val.toString()), property.getHelper().getBaseClass());} catch (final ClassNotFoundException e) {LOGGER.error(""Class not found for property "" + property, e);} catch (final java.lang.IllegalArgumentException ex) {LOGGER.error(""Invalid class for property"" + property, ex);throw new IllegalArgumentException(""Invalid class for property"" + property);}}LOGGER.warn(""Using default class for parameter : "" + property.self().toString());return defaultClass;}}"	No
1198	public class A {public static com.liferay.commerce.discount.model.CommerceDiscountSoap updateCommerceDiscount(long commerceDiscountId,String title,String target,boolean useCouponCode,String couponCode,boolean usePercentage,java.math.BigDecimal maximumDiscountAmount,String level,java.math.BigDecimal level1,java.math.BigDecimal level2,java.math.BigDecimal level3,java.math.BigDecimal level4,String limitationType,int limitationTimes,int limitationTimesPerAccount,boolean rulesConjunction,boolean active,int displayDateMonth,int displayDateDay,int displayDateYear,int displayDateHour,int displayDateMinute,int expirationDateMonth,int expirationDateDay,int expirationDateYear,int expirationDateHour,int expirationDateMinute,boolean neverExpire,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws RemoteException {try {com.liferay.commerce.discount.model.CommerceDiscount returnValue =CommerceDiscountServiceUtil.updateCommerceDiscount(commerceDiscountId,title,target,useCouponCode,couponCode,usePercentage,maximumDiscountAmount,level,level1,level2,level3,level4,limitationType,limitationTimes,limitationTimesPerAccount,rulesConjunction,active,displayDateMonth,displayDateDay,displayDateYear,displayDateHour,displayDateMinute,expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,neverExpire,serviceContext);return com.liferay.commerce.discount.model.CommerceDiscountSoap.toSoapModel(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
1199	"public class A {private String readFileFromClasspath(String filename, Log log) {var stream = getClass().getClassLoader().getResourceAsStream((filename));String fileContent = """";try (BufferedReader reader =new BufferedReader(new InputStreamReader(stream, StandardCharsets.UTF_8))) {fileContent = reader.lines().collect(Collectors.joining(""\n""));} catch (IOException e) {log.error(String.format(""Error reading file: \""%s\"""", filename), e);}return fileContent;}}"	No
1200	"public class A {@Overrideprotected SerializationPolicy doGetSerializationPolicy(HttpServletRequest request, String moduleBaseURL, String strongName) {SerializationPolicy serializationPolicy = null;String appContextPath = request.getContextPath();String modulePath = null;if (moduleBaseURL != null) {try {modulePath = new URL(moduleBaseURL).getPath();} catch (MalformedURLException ex) {return null;}}if (modulePath.contains(""WEBAPP_ROOT"")) {modulePath = scrubWebAppRoot(modulePath);}String servletContextPath = modulePath.substring(appContextPath.length());String pluginId = PluginUtil.getPluginIdFromPath(servletContextPath);serializationPolicy =PentahoSystem.get(SerializationPolicy.class,PentahoSessionHolder.getSession(),Collections.singletonMap(""plugin"", pluginId));if (serializationPolicy != null) {return serializationPolicy;}String serializationPolicyFilename =SerializationPolicyLoader.getSerializationPolicyFileName(strongName);URL serializationPolicyUrl =getSerializationPolicyUrl(serializationPolicyFilename, appContextPath, servletContextPath);if (serializationPolicyUrl == null) {return null;}InputStream rpcFileInputStream = null;try {rpcFileInputStream = serializationPolicyUrl.openStream();if (rpcFileInputStream != null) {serializationPolicy = SerializationPolicyLoader.loadFromStream(rpcFileInputStream, null);}} catch (IOException e) {} catch (ParseException e) {logger.error(Messages.getInstance().getErrorString(""GwtRpcPluginProxyServlet.ERROR_0008_FAILED_TO_PARSE_FILE"",serializationPolicyFilename),e);} finally {if (rpcFileInputStream != null) {try {rpcFileInputStream.close();} catch (IOException e) {}}}return serializationPolicy;}}"	Yes
1201	public class A {private boolean isForwardButtonVisible() {if (CaseWorkItemUtil.isCaseWorkItemClosed(getModelObject())|| CaseWorkItemUtil.isWorkItemClaimable(getModelObject())) {return false;}try {OperationResult result = new OperationResult(OPERATION_CHECK_DELEGATE_AUTHORIZATION);Task task = getPageBase().createSimpleTask(OPERATION_CHECK_DELEGATE_AUTHORIZATION);return WebComponentUtil.runUnderPowerOfAttorneyIfNeeded(() ->getPageBase().getWorkflowManager().isCurrentUserAuthorizedToDelegate(getModelObject(), task, result),getPowerDonor(),getPageBase(),task,result);} catch (Exception ex) {return false;}}}	Yes
1202	"public class A {@GET@Path(""upcomingRecording/{agent}"")@Produces(MediaType.TEXT_XML)@RestQuery(name = ""upcomingrecording"",description = ""Get the upcoming capture event as XML"",returnDescription = ""The upcoming capture event as XML"",pathParameters = {@RestParameter(name = ""agent"",isRequired = true,type = Type.STRING,description = ""The agent identifier"")},responses = {@RestResponse(responseCode = HttpServletResponse.SC_OK,description = ""upcoming event is in the body of response""),@RestResponse(responseCode = HttpServletResponse.SC_NO_CONTENT,description = ""There is no upcoming recording"")})public Response upcomingRecording(@PathParam(""agent"") String agentId)throws UnauthorizedException {try {Opt<MediaPackage> upcoming = service.getUpcomingRecording(agentId);if (upcoming.isNone()) {return Response.noContent().build();} else {return Response.ok(MediaPackageParser.getAsXml(upcoming.get())).build();}} catch (UnauthorizedException e) {throw e;} catch (Exception e) {logger.error(""Unable to get the upcoming recording for agent '{}'"", agentId, e);throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);}}}"	No
1203	"public class A {public MessageResponse handleMessageProcessingFailed(final Exception exception,final URI requestedArtifact,final URI transferContract,final URI issuerConnector,final URI messageId) {if (log.isWarnEnabled()) {log.warn(""Could not process request message. [exception=({}), artifact=({}), ""+ ""contract=({}), issuer=({}), messageId=({})]"",exception.getMessage(),requestedArtifact,transferContract,issuerConnector,messageId,exception);}return ErrorResponse.withDefaultHeader(RejectionReason.INTERNAL_RECIPIENT_ERROR,""Could not process request message. "" + exception.getMessage(),connectorService.getConnectorId(),connectorService.getOutboundModelVersion());}}"	No
1204	public class A {public static void measureAndAssert(int nRuns, float expectedFactor, float allowedVariation) {long duration = System.currentTimeMillis() - currentMark;float perRun = (duration / (float) nRuns);float factor = perRun / computeBaseline();assertThat(expectedFactor).isCloseTo(factor, Percentage.withPercentage(allowedVariation));}}	Yes
1205	"public class A {@Testpublic void testPrepareSSL3() throws IOException {CertificateMessage certmessage = new CertificateMessage();certmessage.setCertificatesListBytes(ArrayConverter.hexStringToByteArray(""00027a30820276308201dfa003020102020438918374300d06092a864886f70d01010b0500306e3110300e06035504061307556e6b6e6f776e3110300e06035504081307556e6b6e6f776e3110300e06035504071307556e6b6e6f776e3110300e060355040a1307556e6b6e6f776e3110300e060355040b1307556e6b6e6f776e3112301006035504031309616e6f6e796d6f7573301e170d3135303830343133353731375a170d3235303830313133353731375a306e3110300e06035504061307556e6b6e6f776e3110300e06035504081307556e6b6e6f776e3110300e06035504071307556e6b6e6f776e3110300e060355040a1307556e6b6e6f776e3110300e060355040b1307556e6b6e6f776e3112301006035504031309616e6f6e796d6f757330819f300d06092a864886f70d010101050003818d00308189028181008a4ee023df569ce17c504cbb828f16bae5040ccef4b59ef96733dfe34693530d4062f9b4873c72f933607f8ceea01ad2215dab44eaac207f45de5835a8db4e21b35d5e2757f652eaaa25d71a60c37725cddf877427cc9e60e240d0429e708bc4b6017726734b2c03f404d5fea407d91bbe4e86a0ebc685e8078f8657b5830ab30203010001a321301f301d0603551d0e04160414611782c41da8bd62a49ce58580194baa5d8c764f300d06092a864886f70d01010b0500038181005f9708702b8adb185b2db0d05845af5df1f7d13e7a94647a8653187e7a55753f5c19772a994f53136ab04cdad266683bf65a1b78fca418899e44c0e8f75add9df5b432e92a6a0668b16d6278a67c78f8ea30ca587e1dc314d8312d41808284e22df19c7f4bb3086e74b42c9473df8b82449643a4e2fbb05cf8b1b41acec44fe9""));certmessage.setCertificatesListLength(637);Security.addProvider(new BouncyCastleProvider());CertificateMessageHandler handler = new CertificateMessageHandler(context);handler.adjustTLSContext(certmessage);Certificate cert =parseCertificate(certmessage.getCertificatesListLength().getValue(),certmessage.getCertificatesListBytes().getValue());context.setClientRsaModulus(CertificateUtils.extractRSAModulus(cert));String preMasterSecret =""1a4dc552ddd7e1e25dbaff38dd447b3a6fdc85120e2f760fefdab88e5adbbc710f3d0843f07c9f4f5ac01bc4cea02c4030c272074aa04b1b80a71123b73ea4efbe928b54a83fe4b39472bf66a953c7dc11cfb13ea08f92047996799ce702eb72a7c69bdfd98b91a09bcb836414752d93d3641740f8ed5cfff682225434052230"";String keyEx ="" 100000801a4dc552ddd7e1e25dbaff38dd447b3a6fdc85120e2f760fefdab88e5adbbc710f3d0843f07c9f4f5ac01bc4cea02c4030c272074aa04b1b80a71123b73ea4efbe928b54a83fe4b39472bf66a953c7dc11cfb13ea08f92047996799ce702eb72a7c69bdfd98b91a09bcb836414752d93d3641740f8ed5cfff682225434052230"";LOGGER.debug(keyEx.length());context.setSelectedCipherSuite(CipherSuite.TLS_RSA_WITH_NULL_MD5);context.setSelectedProtocolVersion(ProtocolVersion.SSL3);context.setClientRandom(ArrayConverter.hexStringToByteArray(""405e2a60cefcb557edd6d41336a3fa4b2dfdae20f4ac7adacbb29c13456e2800""));LOGGER.debug(""405e2a60cefcb557edd6d41336a3fa4b2dfdae20f4ac7adacbb29c13456e2800"".length());context.setServerRandom(ArrayConverter.hexStringToByteArray(""a63cd22a46e4fc22b1f03d579c5f0e43cadfda01ef615fd52a9cdbaed3f6c6c2""));preparator.prepareHandshakeMessageContents();LOGGER.info(ArrayConverter.bytesToHexString(message.getComputations().getPlainPaddedPremasterSecret(), false));}}"	No
1206	public class A {@Overridepublic InterpreterInfoSaving loadInterpreterSettings() throws IOException {if (!fs.exists(interpreterSettingPath)) {return null;}String json = fs.readFile(interpreterSettingPath);return buildInterpreterInfoSaving(json);}}	Yes
1207	public class A {private void updateNotificationStatus(ODatabaseDocument db, IONotification notification, ODocument status) {for (int i = 1; i <= 10; i++) {try {db.begin();notification.addStatusHistory(IONotificationStatusHistory.create(new Date(), status));notification.setStatus(status);notification.save();db.commit();break;} catch (Exception e) {if (i == 10) {} else {notification.reload();}}}}}	Yes
1208	public class A {@Overridepublic void createSchema() throws GoraException {try {if (manager.getCache(super.getPersistentClass().getSimpleName(), keyClass, persistentClass)== null) {cacheEntryList.clear();cache = manager.createCache(persistentClass.getSimpleName(), cacheConfig);}cache.registerCacheEntryListener(new MutableCacheEntryListenerConfiguration<>(JCacheCacheFactoryBuilder.factoryOfEntryListener(new JCacheCacheEntryListener<K, T>(cacheEntryList)),null,true,true));persistentDataStore.createSchema();} catch (GoraException e) {throw e;} catch (Exception e) {throw new GoraException(e);}}}	Yes
1209	"public class A {private long validateSystemId(final long systemId) {logger.debug(""validateSystemId started..."");if (systemId < 1) {throw new IllegalArgumentException(""System id must be greater than zero"");}return systemId;}}"	No
1210	"public class A {public <T> T getManager(final Class<T> clz) {KylinConfig base = base();if (base != this) return base.getManager(clz);Object mgr = managersCache.get(clz);if (mgr != null) return (T) mgr;synchronized (managersCache) {mgr = managersCache.get(clz);if (mgr != null) return (T) mgr;try {Method method = clz.getDeclaredMethod(""newInstance"", KylinConfig.class);method.setAccessible(true);mgr = method.invoke(null, this);} catch (Exception e) {throw new RuntimeException(e);}managersCache.put(clz, mgr);}return (T) mgr;}}"	Yes
1211	public class A {public static void debug(final Log vfsLog, final Log commonsLog, final String message, final Throwable t) {if (vfsLog != null) {} else if (commonsLog != null) {commonsLog.debug(message, t);}}}	Yes
1212	"public class A {@SuppressFBWarnings(value = ""BC_UNCONFIRMED_CAST_OF_RETURN_VALUE"",justification = ""We _are_ checking!"")private static MrsImageDataProvider getMrsImageDataProvider(String name, AccessMode accessMode, Configuration conf, ProviderProperties providerProperties)throws DataProviderNotFound {try {String cacheKey = getResourceCacheKey(name, conf, providerProperties);if (accessMode == AccessMode.OVERWRITE || accessMode == AccessMode.WRITE) {mrsImageProviderCache.invalidate(cacheKey);}if (log.isDebugEnabled()) {log.debug(""Loading from mrsImageProviderCache"");log.debug(""   cacheKey: {}"", cacheKey);log.debug(""   accessMode: {}"", accessMode.name());log.debug(""   conf: {}"", conf);log.debug(""   provider properties: {}"", providerProperties);}MrsImageLoader loader = new MrsImageLoader(name, accessMode, conf, providerProperties);return mrsImageProviderCache.get(cacheKey, loader);} catch (ExecutionException e) {if (e.getCause() instanceof DataProviderNotFound) {throw (DataProviderNotFound) e.getCause();}throw new DataProviderNotFound(e);}}}"	Yes
1213	"public class A {public boolean execute() throws Exception {boolean annotationsFound = false;Collection<Clazz> expanded = m_analyzer.getClasses("""", QUERY.NAMED.toString(), ""*"");for (Clazz c : expanded) {AnnotationCollector reader = new AnnotationCollector(m_logger, m_analyzer);reader.baseClass(true);m_logger.debug(""scanning class %s"", c.getClassName());c.parseClassFileWithCollector(reader);while (reader.getSuperClass() != null) {Clazz superClazz = m_analyzer.findClass(reader.getSuperClass());if (superClazz == null) {break;}if (isObject(reader.getSuperClass()) || isScalaObject(reader.getSuperClass())) {break;}m_logger.debug(""scanning super class %s for class %s"", reader.getSuperClass(), c.getClassName());reader.baseClass(false);superClazz.parseClassFileWithCollector(reader);}if (reader.finish()) {String name = c.getFQN();Resource resource = createComponentResource(reader);m_resources.put(""META-INF/dependencymanager/"" + name, resource);annotationsFound = true;m_importService.addAll(reader.getImportService());m_exportService.addAll(reader.getExportService());}}return annotationsFound;}}"	Yes
1214	"public class A {public void registerClient(ClientProxyMembershipID proxyID, int maximumTimeBetweenPings) {if (!clientMaximumTimeBetweenPings.containsKey(proxyID)) {clientMaximumTimeBetweenPings.putIfAbsent(proxyID, maximumTimeBetweenPings);}if (!clientHeartbeats.containsKey(proxyID)) {if (null== clientHeartbeats.putIfAbsent(proxyID, new AtomicLong(System.currentTimeMillis()))) {if (stats != null) {stats.incClientRegisterRequests();}if (logger.isDebugEnabled()) {logger.debug(""ClientHealthMonitor: Registering client with member id {}"", proxyID);}}}}}"	No
1215	"public class A {public void testMapSubkeyUsage() throws Exception {entity.config().set(TestEntity.CONF_MAP_THING_OBJECT.subKey(""a""), 1);log.info(""Map-SubKey: "" + MutableMap.copyOf(entity.getConfigMap().asMapWithStringKeys()));Assert.assertEquals(entity.getConfig(TestEntity.CONF_MAP_THING_OBJECT),ImmutableMap.<String, Object>of(""a"", 1));}}"	No
1216	"public class A {public Session getSession(String id) {try {Session session = _sessionCache.get(id);if (session != null) {if (session.isExpiredAt(System.currentTimeMillis())) {try {session.invalidate();} catch (Exception e) {}return null;}session.setExtendedId(_sessionIdManager.getExtendedId(id, null));}return session;} catch (UnreadableSessionDataException e) {try {getSessionIdManager().invalidateAll(id);} catch (Exception x) {LOG.warn(""Error cross-context invalidating unreadable session {}"", id, x);}return null;} catch (Exception other) {return null;}}}"	Yes
1217	public class A {@Overridepublic void handleCommand(final ChannelUID channelUID, final Command command) {if (!radio.isLoggedIn()) {if (ThingStatus.ONLINE.equals(getThing().getStatus())) {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);}return;}try {switch (channelUID.getId()) {case CHANNEL_POWER:if (OnOffType.ON.equals(command)) {radio.setPower(true);} else if (OnOffType.OFF.equals(command)) {radio.setPower(false);}scheduler.schedule(updateRunnable, 4, SECONDS);break;case CHANNEL_VOLUME_PERCENT:if (IncreaseDecreaseType.INCREASE.equals(command) || UpDownType.UP.equals(command)) {radio.increaseVolumeAbsolute();} else if (IncreaseDecreaseType.DECREASE.equals(command)|| UpDownType.DOWN.equals(command)) {radio.decreaseVolumeAbsolute();} else if (command instanceof PercentType) {radio.setVolumePercent(((PercentType) command).intValue());}scheduler.schedule(updateRunnable, 1, SECONDS);break;case CHANNEL_VOLUME_ABSOLUTE:if (IncreaseDecreaseType.INCREASE.equals(command) || UpDownType.UP.equals(command)) {radio.increaseVolumeAbsolute();} else if (IncreaseDecreaseType.DECREASE.equals(command)|| UpDownType.DOWN.equals(command)) {radio.decreaseVolumeAbsolute();} else if (command instanceof DecimalType) {radio.setVolumeAbsolute(((DecimalType) command).intValue());}scheduler.schedule(updateRunnable, 1, SECONDS);break;case CHANNEL_MODE:if (command instanceof DecimalType) {radio.setMode(((DecimalType) command).intValue());}break;case CHANNEL_PRESET:if (command instanceof DecimalType) {radio.setPreset(((DecimalType) command).intValue());}break;case CHANNEL_MUTE:if (command instanceof OnOffType) {radio.setMuted(OnOffType.ON.equals(command));}break;default:}updateStatus(ThingStatus.ONLINE);} catch (Exception e) {updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());}}}	Yes
1218	"public class A {@Overridepublic SampleResponse deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)throws JsonParseException {JsonObject jsonObj = json.getAsJsonObject();ConnectorDetail detail = context.deserialize(jsonObj.get(""detail""), ConnectorDetail.class);JsonElement schemaJson = jsonObj.get(""schema"");Schema schema = schemaJson == null ? null : context.deserialize(schemaJson, Schema.class);if (schema == null) {return new SampleResponse(detail, schema, Collections.emptyList());}JsonArray jsonArray = jsonObj.get(""sample"").getAsJsonArray();List<StructuredRecord> sample = new ArrayList<>();jsonArray.iterator().forEachRemaining(jsonElement -> {String recordString = jsonElement.getAsString();try {StructuredRecord record =StructuredRecordStringConverter.fromJsonString(recordString, schema);sample.add(record);} catch (IOException e) {}});return new SampleResponse(detail, schema, sample);}}"	Yes
1219	public class A {public void installEnmasseBundle() throws Exception {installOperators();installExamplesBundle(kube.getInfraNamespace());waitUntilOperatorReady(kube.getInfraNamespace());}}	Yes
1220	"public class A {@Overrideprotected synchronized void doSubscribe(final String eventName, SettableFuture<?> future) {boolean success = false;Throwable t = null;try {if (registrations.containsKey(eventName)) {throw new IllegalStateException(""Already subscribed to ["" + eventName + ""]"");}ITopic<String> topic = hazelcast.getTopic(eventName);MessageListener<String> listener =new MessageListener<String>() {@Overridepublic void onMessage(Message<String> message) {String eventString = message.getMessageObject();if (eventString != null) {onEvent(null, eventName, eventString);}}};String id = topic.addMessageListener(listener);registrations.put(eventName, id);success = true;} catch (RuntimeException e) {t = e;throw e;} finally {if (success) {future.set(null);} else {if (t == null) {t = new IllegalStateException(""Failed to subscribe to ["" + eventName + ""]"");}future.setException(t);}}}}"	Yes
1221	"public class A {@SuppressFBWarnings(justification = ""try with resources will clean up the output stream"",value = {""OBL_UNSATISFIED_OBLIGATION""})private boolean isZipFile(final Dependency dependency) {final byte[] buffer = new byte[4];try (FileInputStream fileInputStream = new FileInputStream(dependency.getActualFilePath())) {if (fileInputStream.read(buffer) > 0&& (Arrays.equals(buffer, ZIP_FIRST_BYTES)|| Arrays.equals(buffer, ZIP_EMPTY_FIRST_BYTES)|| Arrays.equals(buffer, ZIP_SPANNED_FIRST_BYTES))) {return true;}} catch (Exception e) {LOGGER.warn(""Unable to check if '{}' is a zip file"", dependency.getActualFilePath());LOGGER.trace("""", e);}return false;}}"	No
1222	"public class A {@Initpublic void init() {try {clazz = Class.forName(clazzName);ctor = clazz.getConstructor(long.class);} catch (Exception e) {log.trace(""Could not initialize generator "" + this, e);}}}"	No
1223	"public class A {public void tearDown() throws Exception {try {zookeeperLocalCluster.getClass().getMethod(""shutdownMiniZKCluster"").invoke(zookeeperLocalCluster);if (!(Boolean)zookeeperLocalCluster.getClass().getMethod(""cleanupTestDir"").invoke(zookeeperLocalCluster)) {LOGGER.warn(""Unable to delete mini zookeeper temporary directory"");}} catch (final Exception e) {LOGGER.warn(""Unable to delete or shutdown mini zookeeper temporary directory"", e);}zookeeper = null;}}"	No
1224	public class A {@Overridepublic String call() throws Exception {try {return RefreshScopeConfigurationScaleTests.this.service.getMessage();} finally {latch.countDown();}}}	Yes
1225	public class A {@Overridepublic void onClose(WatcherException cause) {if (cause != null) {}}}	Yes
1226	"public class A {public VersionPath[] getVersionPaths(String path)throws RemoteException, ResourceAdminServiceExceptionException {VersionPath[] versionPaths;try {VersionsBean vb = resourceAdminServiceStub.getVersionsBean(path);versionPaths = vb.getVersionPaths();} catch (RemoteException e) {throw new RemoteException(""Get version error : "", e);} catch (ResourceAdminServiceExceptionException e) {log.error(""Get version error : "" + e.getMessage());throw new ResourceAdminServiceExceptionException(""Get version error : "", e);}return versionPaths;}}"	Yes
1227	public class A {@NullablePack getPack(AnyObjectId objectId) {PackList pList;do {pList = packList.get();for (Pack p : pList.packs) {try {if (p.hasObject(objectId)) {return p;}} catch (IOException e) {remove(p);}}} while (searchPacksAgain(pList));return null;}}	Yes
1228	"public class A {@Override@SuppressWarnings({""unchecked""})public V get() throws InterruptedException, ExecutionException {latch.await();LOG.trace(""Wait completed"");if (isCancelled()) {throw new CancellationException();}Object object = result.get();if (object instanceof ExecutionException) {throw (ExecutionException) object;} else {return (V) object;}}}"	Yes
1229	"public class A {@Bean(destroyMethod = ""stop"",name = ""wsDistributionAutomationOutboundDomainRequestsConnectionFactory"")public ConnectionFactory connectionFactory() {return this.jmsConfigurationFactory.getPooledConnectionFactory();}}"	Yes
1230	"public class A {@Testpublic void testDropMessagesExpiring() throws Exception {clearDataRecreateServerDirs();HashMap<String, AddressSettings> settings = new HashMap<>();AddressSettings set = new AddressSettings();set.setAddressFullMessagePolicy(AddressFullMessagePolicy.DROP);settings.put(PagingTest.ADDRESS.toString(), set);server = createServer(true, createDefaultInVMConfig(), 1024, 1024 * 1024, settings);server.start();final int numberOfMessages = 30000;locator.setAckBatchSize(0);sf = createSessionFactory(locator);ClientSession sessionProducer = sf.createSession();sessionProducer.createQueue(new QueueConfiguration(PagingTest.ADDRESS));ClientProducer producer = sessionProducer.createProducer(PagingTest.ADDRESS);ClientMessage message = null;ClientSession sessionConsumer = sf.createSession();class MyHandler implements MessageHandler {int count;@Overridepublic void onMessage(ClientMessage message1) {try {Thread.sleep(1);} catch (Exception e) {}count++;if (count % 1000 == 0) {log.debug(""received "" + count);}try {message1.acknowledge();} catch (Exception e) {e.printStackTrace();}}}ClientConsumer consumer = sessionConsumer.createConsumer(PagingTest.ADDRESS);sessionConsumer.start();consumer.setMessageHandler(new MyHandler());for (int i = 0; i < numberOfMessages; i++) {byte[] body = new byte[1024];message = sessionProducer.createMessage(false);message.getBodyBuffer().writeBytes(body);message.setExpiration(System.currentTimeMillis() + 100);producer.send(message);}sessionProducer.close();sessionConsumer.close();}}"	No
1231	public class A {Permission find(final long id) {Permission result = null;EntityManager em = daoManager.getEntityManagerFromFactory();try {result = em.find(PermissionEntity.class, id);} catch (Exception e) {LOG.error(e.getMessage());} finally {daoManager.closeEntityManager(em);}return result;}}	No
1232	"public class A {@Overridepublic String getSCMCertificate(ScmNodeDetailsProto scmNodeDetails, String certSignReq)throws IOException {Objects.requireNonNull(scmNodeDetails);String primaryScmId = storageContainerManager.getScmStorageConfig().getPrimaryScmNodeId();if (primaryScmId != null && primaryScmId.equals(storageContainerManager.getScmId())) {LOGGER.info(""Processing CSR for scm {}, nodeId: {}"",scmNodeDetails.getHostName(),scmNodeDetails.getScmNodeId());if (!storageContainerManager.getClusterId().equals(scmNodeDetails.getClusterId())) {throw new IOException(""SCM ClusterId mismatch. Peer SCM ClusterId ""+ scmNodeDetails.getClusterId()+ "", primary SCM ClusterId ""+ storageContainerManager.getClusterId());}return getEncodedCertToString(certSignReq, NodeType.SCM);} else {throw new SCMSecurityException(""Get SCM Certificate can be run only "" + ""primary SCM"", NOT_A_PRIMARY_SCM);}}}"	No
1233	"public class A {public static void main(String[] args) throws Exception {if (new File(modelFilename).exists()) {model = ModelSerializer.restoreComputationGraph(modelFilename);} else {}final AtomicReference<VideoCapture> capture = new AtomicReference<>(new VideoCapture());capture.get().set(CAP_PROP_FRAME_WIDTH, width);capture.get().set(CAP_PROP_FRAME_HEIGHT, height);if (!capture.get().open(0)) {}Mat colorimg = new Mat();CanvasFrame mainframe =new CanvasFrame(""Real-time Detector"", CanvasFrame.getDefaultGamma() / 2.2);mainframe.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);mainframe.setCanvasSize(width, height);mainframe.setLocationRelativeTo(null);mainframe.setVisible(true);while (true) {while (capture.get().read(colorimg) && mainframe.isVisible()) {long st = System.currentTimeMillis();resize(colorimg, colorimg, new Size(width, height));detect(colorimg, detectionThreshold);double per = (System.currentTimeMillis() - st) / 1000.0;putText(colorimg, ""Detection Time : "" + per + "" ms"", new Point(10, 25), 2, .9, Scalar.YELLOW);mainframe.showImage(converter.convert(colorimg));try {Thread.sleep(20);} catch (InterruptedException ex) {}}}}}"	Yes
1234	"public class A {@Overridepublic void processMessage(final ObjectMessage message) {MessageMetadata messageMetadata;LightValueMessageDataContainerDto lightValueMessageDataContainer;try {messageMetadata = MessageMetadata.fromMessage(message);lightValueMessageDataContainer = (LightValueMessageDataContainerDto) message.getObject();} catch (final JMSException e) {LOGGER.error(""UNRECOVERABLE ERROR, unable to read ObjectMessage instance, giving up."", e);return;}try {this.printDomainInfo(messageMetadata.getMessageType(),messageMetadata.getDomain(),messageMetadata.getDomainVersion());final SetLightDeviceRequest deviceRequest =new SetLightDeviceRequest(DeviceRequest.newBuilder().messageMetaData(messageMetadata),lightValueMessageDataContainer);this.deviceService.setLight(deviceRequest);} catch (final RuntimeException e) {this.handleError(e, messageMetadata);}}}"	Yes
1235	"public class A {@Testpublic void test_filesize_limit() throws Exception {logger.info("" ---> Creating a smaller file small.txt"");Files.write(currentTestResourceDir.resolve(""small.txt""),""This is a second file smaller than the previous one"".getBytes());Fs fs =startCrawlerDefinition().setIgnoreAbove(ByteSizeValue.parseBytesSizeValue(""10kb"")).build();startCrawler(getCrawlerName(), fs, endCrawlerDefinition(getCrawlerName()), null);countTestHelper(new ESSearchRequest().withIndex(getCrawlerName()), 1L, null);}}"	No
1236	"public class A {@Overridepublic void forciblyInheritFingerprint(final String fingerprint)throws AuthorizationAccessException {if (fingerprint == null || fingerprint.trim().isEmpty()) {backupPoliciesUsersAndGroups();purgePoliciesUsersAndGroups();return;}final PoliciesUsersAndGroups policiesUsersAndGroups = parsePoliciesUsersAndGroups(fingerprint);if (isInheritable(policiesUsersAndGroups)) {inheritPoliciesUsersAndGroups(policiesUsersAndGroups);} else {logger.info(""Cannot directly inherit Policies, Users & Groups. Will backup existing Policies, Users &""+ "" Groups, and then replace with proposed configuration"");backupPoliciesUsersAndGroups();purgePoliciesUsersAndGroups();addPoliciesUsersAndGroups(policiesUsersAndGroups);}}}"	Yes
1237	"public class A {@Overridepublic void performAction(List<SimpleClient> objects) {for (SimpleClient simpleClient : objects) {processedCount++;}LOG.info(""Total processed: "" + processedCount);}}"	No
1238	"public class A {@Overridepublic void onNewRemoteConnection(Server server, Association association) {logger.debug(""Received notfification of a new remote connection!"");try {getParent().onNewRemoteConnection(server, association);} catch (Exception e) {try {association.stopAnonymousAssociation();} catch (Exception ex) {logger.error(""Error closing channel: "" + ex.getMessage());}}}}"	No
1239	"public class A {private ConnectionStateListener checkReconnect(TransportProtos.ServiceInfo self) {return (client, newState) -> {log.info(""[{}] ZK state changed: {}"", self.getServiceId(), newState);if (newState == ConnectionState.LOST) {reconnectExecutorService.submit(this::reconnect);}};}}"	No
1240	public class A {@Overridepublic void process(Element elm, JID actorJID, IQ reqIQ, Element rsm) throws Exception {response = IQ.createResultIQ(reqIQ);request = reqIQ;actor = actorJID;node = elm.attributeValue(XMLConstants.NODE_ATTR);resultSetManagement = rsm;if (null == actor) {actor = request.getFrom();}if (!isValidStanza()) {outQueue.put(response);return;}if (!Configuration.getInstance().isLocalJID(request.getFrom())) {response.getElement().addAttribute(XMLConstants.REMOTE_SERVER_DISCOVER_ATTR, Boolean.FALSE.toString());}pubsub = response.getElement().addElement(XMLConstants.PUBSUB_ELEM, JabberPubsub.NAMESPACE_URI);try {if (parseRsmElement()) {addRecentItems();addRsmElement();}} catch (NodeStoreException e) {response.getElement().remove(pubsub);setErrorCondition(PacketError.Type.wait, PacketError.Condition.internal_server_error);}outQueue.put(response);}}	Yes
1241	public class A {private void writeSignatureHandshakeAlgorithms(CertificateRequestMessage msg) {appendBytes(msg.getSignatureHashAlgorithms().getValue());}}	Yes
1242	"public class A {@Testpublic void testWrappedStreamSerialization() throws Exception {String result =checkSerializesAs(BrooklynTaskTags.tagForStream(""TEST"", Streams.byteArrayOfString(""x"")), null);Assert.assertFalse(result.contains(""error""), ""Shouldn't have had an error, instead got: "" + result);}}"	Yes
1243	public class A {private Status executeQueryAndGetStatus(String sql) {if (!config.isIS_QUIET_MODE()) {}int line = 0;int queryResultPointNum = 0;try (Statement statement = connection.createStatement()) {statement.execute(String.format(USE_DB, TEST_DB));try (ResultSet resultSet = statement.executeQuery(sql)) {while (resultSet.next()) {line++;}}queryResultPointNum = line * config.getQUERY_SENSOR_NUM() * config.getQUERY_DEVICE_NUM();return new Status(true, queryResultPointNum);} catch (Exception e) {return new Status(false, queryResultPointNum, e, sql);} catch (Throwable t) {return new Status(false, queryResultPointNum, new Exception(t), sql);}}}	Yes
1244	"public class A {@SuppressWarnings(""unchecked"")public <T> T invoke(boolean sync, Object jsThis, Object function, Object... arguments) {FutureTask<T> task =new FutureTask<>(() -> {context.enter();try {Value self = Value.asValue(jsThis);Value funktion = Value.asValue(function);if (funktion.canExecute()) {if (logger.isDebugEnabled()) {logger.debug(""Invoking function {}"", function);}return (T) funktion.getMember(""call"").execute(coalesce(self, arguments));}String name = funktion.asString();if (self.hasMember(name)) {Value member = self.getMember(name);if (member.canExecute()) {if (logger.isDebugEnabled()) {logger.debug(""Invoking object+function {}"", name);}return (T) member.getMember(""call"").execute(coalesce(self, arguments));} else {logger.info(""Member {} not a function in {}"", name, jsThis);return null;}} else {logger.info(""{} not a member in {}"", name, jsThis);return null;}} catch (Throwable x) {logger.info(""Exception while trying to invoke "" + function, x);throw x;} finally {context.leave();}});submit(task);if (!sync) {return null;}return result(task);}}"	No
1245	"public class A {public static SentryOptions toSentryOptions(SentryConfig sentryConfig) {if (!sentryConfig.dsn.isPresent()) {throw new ConfigurationException(""Configuration key \""quarkus.log.sentry.dsn\"" is required when Sentry is enabled, but its""+ "" value is empty/missing"");}final SentryOptions options = new SentryOptions();if (!sentryConfig.inAppPackages.isPresent()) {} else {List<String> inAppPackages = sentryConfig.inAppPackages.get();if (inAppPackages.size() != 1 || !Objects.equals(inAppPackages.get(0), ""*"")) {inAppPackages.forEach(options::addInAppInclude);}}options.setDsn(sentryConfig.dsn.get());sentryConfig.environment.ifPresent(options::setEnvironment);sentryConfig.release.ifPresent(options::setRelease);sentryConfig.serverName.ifPresent(options::setServerName);options.setDebug(sentryConfig.debug);return options;}}"	Yes
1246	public class A {@Overridepublic List<String> resolve(List<String> names) {List<String> racks = new ArrayList<String>();for (String n : names) {String rack = name2Racks.get(n);if (null == rack) {rack = NetworkTopology.DEFAULT_RACK;}if (LOG.isDebugEnabled()) {}racks.add(rack);}return racks;}}	Yes
1247	"public class A {@SuppressWarnings(""unchecked"")public static List<Map<String, Object>> getSessionStatDataList(Object webStat) {if (webStat.getClass() == WebAppStat.class) {return ((WebAppStat) webStat).getSessionStatDataList();}try {Method method = webStat.getClass().getMethod(""getSessionStatDataList"");Object obj = method.invoke(webStat);return (List<Map<String, Object>>) obj;} catch (Exception e) {LOG.error(""getSessionStatDataList error"", e);return null;}}}"	No
1248	"public class A {public static com.liferay.portal.kernel.model.Team getTeam(HttpPrincipal httpPrincipal, long groupId, String name)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(TeamServiceUtil.class, ""getTeam"", _getTeamParameterTypes4);MethodHandler methodHandler = new MethodHandler(methodKey, groupId, name);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.Team) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
1249	"public class A {public ManageSearchPage performSelectedActions() {log.info(""Click Perform Actions"");clickElement(performButton);waitForAMoment().withMessage(""displayed abort button"").until(it -> readyElement(cancelButton).isDisplayed());return new ManageSearchPage(getDriver());}}"	No
1250	"public class A {protected void emitData(List<Object> tuple, MessageId id) {LOG.trace(""Emitting - {}"", id);if (outputStreamName == null) {collector.emit(tuple, id);} else {collector.emit(outputStreamName, tuple, id);}inflight.put(id, tuple);}}"	No
1251	public class A {@Transactional(rollbackFor = ArrowheadException.class)public AuthorizationIntraCloudListResponseDTO createBulkAuthorizationIntraCloudResponse(final long consumerId,final Set<Long> providerIds,final Set<Long> serviceDefinitionIds,final Set<Long> interfaceIds) {final List<AuthorizationIntraCloud> entries =createBulkAuthorizationIntraCloud(consumerId, providerIds, serviceDefinitionIds, interfaceIds);final Page<AuthorizationIntraCloud> entryPage = new PageImpl<>(entries);return DTOConverter.convertAuthorizationIntraCloudListToAuthorizationIntraCloudListResponseDTO(entryPage);}}	Yes
1252	"public class A {private void handlePingError(PingQueueEntry pingQueueEntry, Exception ex)throws WebloggerException {if ((pingQueueEntry.incrementAttempts() < PingConfig.getMaxPingAttempts())&& WeblogUpdatePinger.shouldRetry(ex)) {LOGGER.debug(""Error on ping attempt (""+ pingQueueEntry.getAttempts()+ "") for ""+ pingQueueEntry+ "": [""+ ex.getMessage()+ ""]. Will re-queue for later attempts."");LOGGER.debug(""Error on last ping attempt was: "", ex);pingQueueMgr.saveQueueEntry(pingQueueEntry);} else {LOGGER.warn(""Error on ping attempt (""+ pingQueueEntry.getAttempts()+ "") for ""+ pingQueueEntry+ "": [""+ ex.getMessage()+ ""].  Entry will be REMOVED from ping queue."");LOGGER.debug(""Error on last ping attempt was: "", ex);pingQueueMgr.removeQueueEntry(pingQueueEntry);}}}"	No
1253	public class A {@Overridepublic void rescindOffer(OfferID offerId) {CachedOffer maybeCached = offerCache.getIfPresent(offerId.getValue());if (maybeCached != null) {} else {}offerCache.invalidate(offerId.getValue());}}	Yes
1254	"public class A {@RequestMapping(value = ""/migration/events/{eventId}"", method = RequestMethod.GET)public List<MigrationClusterModel> getEventDetailsWithEventId(@PathVariable Long eventId) {logger.info(""[getEventDetailsWithEventId][begin] eventId: {}"", eventId);List<MigrationClusterModel> res = new LinkedList<>();if (null != eventId) {res = migrationService.getMigrationClusterModel(eventId);} else {logger.error(""[GetEvent][fail]Cannot findRedisHealthCheckInstance with null event id."");}logger.info(""[getEventDetailsWithEventId][end] eventId: {}"", eventId);return res;}}"	No
1255	"public class A {private void createStoreDirIfNotExists() {String file = config.getFileStorePath();try (HetuFileSystemClient hetuFileSystemClient =fileSystemClientManager.getFileSystemClient(config.getShareFileSystemProfile(), Paths.get(""/""))) {int lastIndex = file.lastIndexOf(File.separator);String tmpFileDir = file.substring(0, lastIndex);if (hetuFileSystemClient.exists(Paths.get(tmpFileDir))) {return;}hetuFileSystemClient.createDirectories(Paths.get(tmpFileDir));} catch (IOException e) {LOG.error(""fail to create the store directories: %s"", e.getMessage());throw new RuntimeException(""fail to create the store directories."");}}}"	Yes
1256	"public class A {private LutronHandler findThingHandler(int integrationId) {for (Thing thing : getThing().getThings()) {if (thing.getHandler() instanceof LutronHandler) {LutronHandler handler = (LutronHandler) thing.getHandler();try {if (handler != null && handler.getIntegrationId() == integrationId) {return handler;}} catch (IllegalStateException e) {logger.trace(""Handler for id {} not initialized"", integrationId);}}}return null;}}"	No
1257	"public class A {protected Processing addMetadata(Message msg,boolean add_secret_keys,Address include_secret_key_only_for,boolean attach_fetch_key_header) {try {if (use_external_key_exchange && !attach_fetch_key_header) return Processing.PROCESS;Message encr_msg = encrypt(msg);if (use_external_key_exchange) {Address srv = key_exchange.getServerLocation();if (srv == null) srv = getCachedServerAddress();log.trace(""%s: asking %s to fetch the shared group key %s via an external key exchange protocol""+ "" (srv=%s)"",local_addr,encr_msg.getDest() == null ? ""all members"" : encr_msg.getDest(),Util.byteArrayToHexString(sym_version),srv);encr_msg.putHeader(id,new EncryptHeader(EncryptHeader.FETCH_SHARED_KEY, symVersion(), getIv(encr_msg)).server(srv));} else {encr_msg = addKeysToMessage(encr_msg, false, add_secret_keys, include_secret_key_only_for);if (add_secret_keys || include_secret_key_only_for != null)log.trace(""%s: sending encrypted group key to %s (version: %s)"",local_addr,encr_msg.getDest() == null ? ""all members"" : encr_msg.getDest(),Util.byteArrayToHexString(sym_version));}down_prot.down(encr_msg);return Processing.DROP;} catch (Exception ex) {log.warn(""%s: unable to send message to %s: %s"",msg.getDest() == null ? ""all"" : msg.getDest(), local_addr, ex);return Processing.PROCESS;}}}"	No
1258	"public class A {private void obtainKeys(final KeyStore keyStore, final ApplicationContext appContext) {@SuppressWarnings(""unchecked"")final Map<String, Object> context =appContext.getBean(CommonConstants.ARROWHEAD_CONTEXT, Map.class);final X509Certificate serverCertificate = Utilities.getSystemCertFromKeyStore(keyStore);publicKey = serverCertificate.getPublicKey();context.put(CommonConstants.SERVER_PUBLIC_KEY, publicKey);final PrivateKey privateKey = Utilities.getPrivateKey(keyStore, sslProperties.getKeyPassword());context.put(CommonConstants.SERVER_PRIVATE_KEY, privateKey);context.put(CommonConstants.SERVER_CERTIFICATE, serverCertificate);}}"	Yes
1259	"public class A {@Overridepublic void deleteSeries(String seriesId)throws SeriesServiceDatabaseException, NotFoundException {EntityManager em = emf.createEntityManager();EntityTransaction tx = em.getTransaction();try {tx.begin();SeriesEntity entity = getSeriesEntity(seriesId, em);if (entity == null) {throw new NotFoundException(""Series with ID "" + seriesId + "" does not exist"");}String accessControlXml = entity.getAccessControl();if (accessControlXml != null) {AccessControlList acl = AccessControlParser.parseAcl(accessControlXml);User currentUser = securityService.getUser();Organization currentOrg = securityService.getOrganization();if (!AccessControlUtil.isAuthorized(acl, currentUser, currentOrg, Permissions.Action.WRITE.toString())) {throw new UnauthorizedException(currentUser + "" is not authorized to update series "" + seriesId);}}em.remove(entity);tx.commit();} catch (NotFoundException e) {throw e;} catch (Exception e) {if (tx.isActive()) {tx.rollback();}throw new SeriesServiceDatabaseException(e);} finally {em.close();}}}"	Yes
1260	public class A {@Overridepublic SamlSpSession findByPrimaryKey(Serializable primaryKey) throws NoSuchSpSessionException {SamlSpSession samlSpSession = fetchByPrimaryKey(primaryKey);if (samlSpSession == null) {if (_log.isDebugEnabled()) {_log.debug(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}throw new NoSuchSpSessionException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return samlSpSession;}}	No
1261	"public class A {@Overrideprotected void shutDown() throws Exception {service.shutdown();logger.info(""Job scheduler shut down"");super.shutDown();}}"	Yes
1262	public class A {public static List<String> getMinuteDatesOnEitherSide(DateTime startDate, DateTime endDate, int minuteSkip, DateTimeFormatter formatter) {if (minuteSkip == 0) {minuteSkip = 1;}List<String> dates = new ArrayList<>();while (!startDate.isAfter(endDate)) {dates.add(formatter.print(startDate));startDate = startDate.plusMinutes(minuteSkip);}return dates;}}	Yes
1263	"public class A {public List<UmaPermission> validateTicketWithRedirect(String ticket, String claimsRedirectUri, String state) {if (StringUtils.isBlank(ticket)) {log.error(""Ticket is null or blank."");throw new UmaWebException(claimsRedirectUri, errorResponseFactory, INVALID_TICKET, state);}List<UmaPermission> permissions = permissionService.getPermissionsByTicket(ticket);if (permissions == null || permissions.isEmpty()) {log.error(""Unable to find permissions registered for given ticket:"" + ticket);throw new UmaWebException(claimsRedirectUri, errorResponseFactory, INVALID_TICKET, state);}return permissions;}}"	No
1264	public class A {public static com.liferay.commerce.model.CommerceSubscriptionEntrySoap[]getCommerceSubscriptionEntries(long companyId,long groupId,long userId,int start,int end,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.commerce.model.CommerceSubscriptionEntry>orderByComparator)throws RemoteException {try {java.util.List<com.liferay.commerce.model.CommerceSubscriptionEntry> returnValue =CommerceSubscriptionEntryServiceUtil.getCommerceSubscriptionEntries(companyId, groupId, userId, start, end, orderByComparator);return com.liferay.commerce.model.CommerceSubscriptionEntrySoap.toSoapModels(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
1265	"public class A {@PostMapping(CommonConstants.PATH_IMPORT)public JsonNode importAgencies(@RequestParam(""fileName"") String fileName, @RequestParam(""file"") MultipartFile file) {SafeFileChecker.checkSafeFilePath(file.getOriginalFilename());final VitamContext vitamContext =securityService.buildVitamContext(securityService.getTenantIdentifier());return agencyInternalService.importAgencies(vitamContext, fileName, file);}}"	Yes
1266	public class A {public static void closeQuietly(TopicSubscriber topicSubscriber) {if (topicSubscriber != null) {try {topicSubscriber.close();} catch (JMSException ignore) {}}}}	Yes
1267	public class A {@Overridepublic void discoverObjectInstance(ObjectInstanceHandle theObject, ObjectClassHandle theObjectClass, String objectName)throws FederateInternalError {}}	Yes
1268	public class A {private boolean isStartProcess() {int interval = appConfiguration.getCleanServiceInterval();if (interval < 0) {return false;}long cleaningInterval = interval * 1000;long timeDiffrence = System.currentTimeMillis() - this.lastFinishedTime;return timeDiffrence >= cleaningInterval;}}	Yes
1269	public class A {public void processPubAck(Channel client, MqttPubAckMessage pubAckMessage) {MqttMessageIdVariableHeader pubAckVariableMessage = pubAckMessage.variableHeader();short packageId = (short) pubAckVariableMessage.messageId();String clientId = NettyAttrManager.getAttrClientId(client);consumerManager.acknowledge(clientId, packageId);if (LOG.isDebugEnabled()) {}}}	Yes
1270	public class A {private void handleIncreaseDecrease(ChannelUID channelUID, IncreaseDecreaseType command) {sendOmnilinkCommand(IncreaseDecreaseType.INCREASE.equals(command)? CommandMessage.CMD_UNIT_UPB_BRIGHTEN_STEP_1: CommandMessage.CMD_UNIT_UPB_DIM_STEP_1,0,thingID);}}	Yes
1271	public class A {public void task() throws Exception {FromDefinition from = route.getInput();from.setEndpoint(null);from.setUri(uri);}}	Yes
1272	public class A {public String getResourceAsString(String url) {try {return Streams.readFullyStringAndClose(getResourceFromUrl(url));} catch (Exception e) {throw Throwables.propagate(e);}}}	Yes
1273	"public class A {public void onError(java.lang.Exception e) {byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;org.apache.thrift.TSerializable msg;removeNamespaceProperty_result result = new removeNamespaceProperty_result();if (e instanceof org.apache.accumulo.core.clientImpl.thrift.ThriftSecurityException) {result.sec = (org.apache.accumulo.core.clientImpl.thrift.ThriftSecurityException) e;result.setSecIsSet(true);msg = result;} else if (einstanceof org.apache.accumulo.core.clientImpl.thrift.ThriftTableOperationException) {result.tope = (org.apache.accumulo.core.clientImpl.thrift.ThriftTableOperationException) e;result.setTopeIsSet(true);msg = result;} else if (einstanceof org.apache.accumulo.core.clientImpl.thrift.ThriftNotActiveServiceException) {result.tnase = (org.apache.accumulo.core.clientImpl.thrift.ThriftNotActiveServiceException) e;result.setTnaseIsSet(true);msg = result;} else if (e instanceof org.apache.thrift.transport.TTransportException) {_LOGGER.error(""TTransportException inside handler"", e);fb.close();return;} else if (e instanceof org.apache.thrift.TApplicationException) {_LOGGER.error(""TApplicationException inside handler"", e);msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg = (org.apache.thrift.TApplicationException) e;} else {_LOGGER.error(""Exception inside handler"", e);msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;msg =new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());}try {fcall.sendResponse(fb, msg, msgType, seqid);} catch (java.lang.Exception ex) {_LOGGER.error(""Exception writing to internal frame buffer"", ex);fb.close();}}}"	No
1274	public class A {private String convertIterationType(DataType iterationType) {if (iterationType instanceof Text) {return iterationType.toString();} else {return iterationType.toString();}}}	Yes
1275	"public class A {@Overrideprotected User checkAuthentication() throws BusinessException {User authUser = super.checkAuthentication();if (!(authUser.hasSimpleRole() || authUser.hasAdminRole() || authUser.hasSuperAdminRole())) {throw new BusinessException(BusinessErrorCode.WEBSERVICE_FORBIDDEN, ""You are not authorized to use this service"");}return authUser;}}"	Yes
1276	"public class A {@Overridepublic int getStatusCode(RecordedRequest request) {if (refuseRequests) {return 500;}T resource;try {resource = convert(request, lockSimulator.getResourceClass());} catch (Exception e) {return 500;}if (resource == null) {LOG.error(""No resource received"");return 500;}ResourceLockSimulator<T> lockSimulator = simulators.get(resource.getMetadata().getName());if (resource.getMetadata() == null|| !lockSimulator.getResourceName().equals(resource.getMetadata().getName())) {return 500;}boolean done = lockSimulator.setResource(resource, true);if (done) {lockNames.put(request.getSequenceNumber(), lockSimulator.getResourceName());return 201;}return 500;}}"	Yes
1277	public class A {protected final void log(String text) {logger.info(text);}}	No
1278	"public class A {@Overridepublic Double convertStringValue(String value) {if (value == null) {return null;}try {double d = parse(value);Log.debug(""CoordinateEditor: '"" + value + ""' -> "" + d);return d;} catch (CoordinateFormatException e) {return null;}}}"	No
1279	"public class A {@Overridepublic void invalidateCollectionSyncRootMemberCache() {log.debug(""Invalidating collection sync root member cache for all users"");getCollectionSyncRootMemberCache().invalidateAll();}}"	No
1280	"public class A {public void cancelMessages() {if (!session.isClosed()) {try (ClientSession toClose = session) {toClose.rollback();} catch (ActiveMQException e) {log.error(""Error rolling back ActiveMQ transaction"", e);}}}}"	Yes
1281	"public class A {public static Set<Class<?>> getTypesAnnotatedWith(Class<? extends Annotation> clazz) {Set<Class<?>> classes = reflections.getTypesAnnotatedWith(clazz);log.info(""Found {} classes annotated with {} "", (classes != null ? classes.size() : 0), clazz);return classes;}}"	No
1282	"public class A {@Overrideprotected String getRedirectionDestination(HttpServletRequest request) {String bridgeUidString = request.getParameter(BRIDGE_UID_PARAMETER_NAME);if (bridgeUidString == null || bridgeUidString.isEmpty()) {return ""/mielecloud/failure?"" + FailureServlet.MISSING_BRIDGE_UID_PARAMETER_NAME + ""=true"";}String email = request.getParameter(EMAIL_PARAMETER_NAME);if (email == null || email.isEmpty()) {return ""/mielecloud/failure?"" + FailureServlet.MISSING_EMAIL_PARAMETER_NAME + ""=true"";}ThingUID bridgeUid = null;try {bridgeUid = new ThingUID(bridgeUidString);} catch (IllegalArgumentException e) {logger.warn(""Cannot create bridge: Bridge UID '{}' is malformed."", bridgeUid);return ""/mielecloud/failure?"" + FailureServlet.MALFORMED_BRIDGE_UID_PARAMETER_NAME + ""=true"";}if (!EmailValidator.isValid(email)) {return ""/mielecloud/failure?"" + FailureServlet.MALFORMED_EMAIL_PARAMETER_NAME + ""=true"";}String locale = getValidLocale(request.getParameter(LOCALE_PARAMETER_NAME));try {Thing bridge = pairOrReconfigureBridge(locale, bridgeUid, email);waitForBridgeToComeOnline(bridge);return ""/mielecloud"";} catch (BridgeReconfigurationFailedException e) {return ""/mielecloud/success?""+ SuccessServlet.BRIDGE_RECONFIGURATION_FAILED_PARAMETER_NAME+ ""=true&""+ SuccessServlet.BRIDGE_UID_PARAMETER_NAME+ ""=""+ bridgeUidString+ ""&""+ SuccessServlet.EMAIL_PARAMETER_NAME+ ""=""+ email;} catch (BridgeCreationFailedException e) {return ""/mielecloud/success?""+ SuccessServlet.BRIDGE_CREATION_FAILED_PARAMETER_NAME+ ""=true&""+ SuccessServlet.BRIDGE_UID_PARAMETER_NAME+ ""=""+ bridgeUidString+ ""&""+ SuccessServlet.EMAIL_PARAMETER_NAME+ ""=""+ email;}}}"	Yes
1283	public class A {public BindFuture bindAsync(String name) throws LdapException {if (LOG.isDebugEnabled()) {}BindRequest bindRequest = createBindRequest(name, Strings.EMPTY_BYTES);return bindAsync(bindRequest);}}	Yes
1284	"public class A {void removeSampleReferences(ClientSession clientSession, long studyUid, long sampleUid)throws CatalogDBException, CatalogParameterException, CatalogAuthorizationException {Query query =new Query().append(QueryParams.STUDY_UID.key(), studyUid).append(QueryParams.SAMPLE_UIDS.key(), sampleUid);ObjectMap params =new ObjectMap().append(QueryParams.SAMPLES.key(),Collections.singletonList(new Sample().setUid(sampleUid)));QueryOptions queryOptions =new QueryOptions(Constants.ACTIONS,new ObjectMap(QueryParams.SAMPLES.key(), ParamUtils.BasicUpdateAction.REMOVE.name()));Bson update;try {update =parseAndValidateUpdateParams(clientSession, params, query, queryOptions).toFinalUpdateDocument();} catch (CatalogDBException e) {if (e.getMessage().contains(""No individual found to be updated"")) {return;} else {throw e;}}QueryOptions multi = new QueryOptions(MongoDBCollection.MULTI, true);Bson bsonQuery = parseQuery(query);DataResult updateResult = individualCollection.update(clientSession, bsonQuery, update, multi);}}"	Yes
1285	public class A {public static String getFormatedString(DataType dataType, String mask, Object data) {try {switch (dataType) {case NUMERIC:DecimalFormat decimalFormat = new DecimalFormat(mask);decimalFormat.setParseBigDecimal(true);return decimalFormat.format(data);case DATE:SimpleDateFormat simpleDateFormat = new SimpleDateFormat(mask);if (data instanceof Date) {return simpleDateFormat.format(data);}Date dateFromstring = DateDetector.getDateFromString(String.valueOf(data));return simpleDateFormat.format(dateFromstring);case STRING:case UNKNOWN:case BOOLEAN:case BINARY:case IMAGE:case URL:default:return String.valueOf(data);}} catch (Exception e) {return String.valueOf(data);}}}	Yes
1286	"public class A {@Overridepublic void setBlobStore(BlobStore blobStore) {log.info(""Internal blob store set: {}"", blobStore);splitBlobStore = new DefaultSplitBlobStore(repositoryDir, blobStore, newBlobStore);}}"	No
1287	"public class A {@Overridepublic void initializeRegion() {InternalDistributedSystem system = this.newRegion.getSystem();for (int retry = 0; retry < 5; retry++) {Set recps = getRecipients();if (logger.isDebugEnabled()) {}if (recps.isEmpty()) {if (logger.isDebugEnabled()) {logger.debug(""CreateRegionProcessor.initializeRegion, no recipients, msg not sent"");}this.newRegion.getDistributionAdvisor().setInitialized();((LocalRegion) this.newRegion).getEventTracker().setInitialized();return;}CreateRegionReplyProcessor replyProc = new CreateRegionReplyProcessor(recps);newRegion.registerCreateRegionReplyProcessor(replyProc);boolean useMcast = false;CreateRegionMessage msg = getCreateRegionMessage(recps, replyProc, useMcast);if (((LocalRegion) newRegion).isUsedForPartitionedRegionBucket()) {replyProc.enableSevereAlertProcessing();msg.severeAlertCompatible = true;}this.newRegion.getDistributionManager().putOutgoing(msg);try {this.newRegion.getCache().getCancelCriterion().checkCancelInProgress(null);try {replyProc.waitForRepliesUninterruptibly();if (!replyProc.needRetry()) {break;}} catch (ReplyException e) {Throwable t = e.getCause();if (t instanceof IllegalStateException) {throw (IllegalStateException) t;}e.handleCause();break;}} finally {replyProc.cleanup();((LocalRegion) this.newRegion).getEventTracker().setInitialized();if (((LocalRegion) this.newRegion).isUsedForPartitionedRegionBucket()) {if (logger.isDebugEnabled()) {}}}}this.newRegion.getDistributionAdvisor().setInitialized();}}"	Yes
1288	public class A {private boolean update() {SentryAuthzUpdate updates = updater.getUpdates();if (updates != null) {UpdateableAuthzPaths newAuthzPaths = processUpdates(updates.getPathUpdates(), authzPaths);UpdateableAuthzPermissions newAuthzPerms =processUpdates(updates.getPermUpdates(), authzPermissions);if (newAuthzPaths != authzPaths || newAuthzPerms != authzPermissions) {lock.writeLock().lock();try {authzPaths = newAuthzPaths;authzPermissions = newAuthzPerms;} finally {lock.writeLock().unlock();}}return true;}return false;}}	Yes
1289	"public class A {protected MessageConsumer createConsumer() throws JMSException {if (durable) {LOG.info(""Creating durable consumer"");return consumeSession.createDurableSubscriber((Topic) consumerDestination, getName());}return consumeSession.createConsumer(consumerDestination);}}"	No
1290	"public class A {public static synchronized void doAddTriple(Triple t, RuleContext context, boolean addToDeductions) {context.add(t);boolean deductionsNotified = false;if (addToDeductions && context.getGraph() instanceof FBRuleInfGraph) {((FBRuleInfGraph) context.getGraph()).addDeduction(t);deductionsNotified = true;}if (_logger.isDebugEnabled()) {_logger.debug(""in Rule ""+ context.getRule().getName()+ "" added to context: [""+ t.toString()+ ""], deductions notified ""+ deductionsNotified);}}}"	No
1291	public class A {private void logLegacyPropertiesReport() {if (this.report == null || this.reported) {return;}String warningReport = this.report.getWarningReport();if (warningReport != null) {logger.warn(warningReport);}String errorReport = this.report.getErrorReport();if (errorReport != null) {logger.error(errorReport);}this.reported = true;}}	No
1292	"public class A {public IApsEntity buildEntity(IApsEntity prototype, ICategoryManager categoryManager, String langCode) {try {prototype.setDescription(this.getDescription());prototype.setId(this.getId());prototype.setMainGroup(this.getMainGroup());prototype.setTypeCode(this.getTypeCode());prototype.setTypeDescription(this.getTypeDescription());if (null != this.getGroups() && !this.getGroups().isEmpty()) {Iterator<String> iter = this.getGroups().iterator();while (iter.hasNext()) {prototype.addGroup(iter.next());}}if (null != this.getCategories() && !this.getCategories().isEmpty()) {Iterator<String> iter = this.getCategories().iterator();while (iter.hasNext()) {String categoryCode = iter.next();Category category = categoryManager.getCategory(categoryCode);if (null != category) {prototype.addCategory(category);}}}if (null == this.getAttributes()) {return prototype;}for (int i = 0; i < this.getAttributes().size(); i++) {AbstractJAXBAttribute jaxrAttribute = this.getAttributes().get(i);AttributeInterface attribute =(AttributeInterface) prototype.getAttribute(jaxrAttribute.getName());if (null != attribute && attribute.getType().equals(jaxrAttribute.getType())) {attribute.valueFrom(jaxrAttribute, langCode);}}} catch (Throwable t) {_logger.error(""Error creating Entity"", t);throw new RuntimeException(""Error creating Entity"", t);}return prototype;}}"	No
1293	"public class A {@Override@Transactionalpublic void markJobAsReadyForActivation(String theJobId) {ourLog.info(""Activating bulk import job {}"", theJobId);BulkImportJobEntity job = findJobByJobId(theJobId);ValidateUtil.isTrueOrThrowInvalidRequest(job.getStatus() == BulkImportJobStatusEnum.STAGING,""Bulk import job %s can not be activated in status: %s"",theJobId,job.getStatus());job.setStatus(BulkImportJobStatusEnum.READY);myJobDao.save(job);}}"	No
1294	"public class A {private boolean uriExists(URI absoluteSystemId) {if (absoluteSystemId.getScheme().startsWith(""http"")) {return false;}if (absoluteSystemId.getScheme().equals(""jar"")) {try {URL jarURL = absoluteSystemId.toURL();try (InputStream is = jarURL.openStream()) {return is != null;}} catch (IOException e) {LOGGER.error(""Error while checking (URL) URI: {}"", absoluteSystemId, e);}}try {if (isFileSystemAvailable(absoluteSystemId.getScheme())) {Path pathTest = Paths.get(absoluteSystemId);return Files.exists(pathTest);}} catch (Exception e) {}return false;}}"	Yes
1295	"public class A {public List<StreamDefinition> loadStreamDefinitions() {String relativeFilePath =FrameworkPathUtil.getSystemResourceLocation()+ ""artifacts""+ File.separator+ ""ESB""+ File.separator+ testCaseResourceFolderName;String directoryPath =relativeFilePath.replaceAll(""[\\\\/]"", Matcher.quoteReplacement(File.separator));GenericExtFilter filter = new GenericExtFilter(FILE_STREAM_DEFINITION_EXT);File directory = new File(directoryPath);List<StreamDefinition> streamDefinitions = new ArrayList<StreamDefinition>();if (!directory.exists()) {log.error(""Cannot load stream definitions from ""+ directory.getAbsolutePath()+ "" directory not exist"");return streamDefinitions;}if (!directory.isDirectory()) {log.error(""Cannot load stream definitions from ""+ directory.getAbsolutePath()+ "" not a directory"");return streamDefinitions;}String[] listStreamDefinitionFiles = directory.list(filter);if (listStreamDefinitionFiles != null) {for (final String fileEntry : listStreamDefinitionFiles) {BufferedReader bufferedReader = null;StringBuilder stringBuilder = new StringBuilder();String fullPathToStreamDefinitionFile = directoryPath + File.separator + fileEntry;try {bufferedReader = new BufferedReader(new FileReader(fullPathToStreamDefinitionFile));String line;while ((line = bufferedReader.readLine()) != null) {stringBuilder.append(line).append(""\n"");}StreamDefinition streamDefinition =EventDefinitionConverterUtils.convertFromJson(stringBuilder.toString().trim());streamDefinitions.add(streamDefinition);} catch (IOException e) {log.error(""Error in reading file : "" + fullPathToStreamDefinitionFile, e);} catch (MalformedStreamDefinitionException e) {log.error(""Error in converting Stream definition : "" + e.getMessage(), e);} finally {try {if (bufferedReader != null) {bufferedReader.close();}} catch (IOException e) {log.error(""Error occurred when reading the file : "" + e.getMessage(), e);}}}}return streamDefinitions;}}"	No
1296	public class A {@Overridepublic SSLSocket configure(SSLSocket socket) {if (!getSNIHostNames().isEmpty()) {SSLParameters sslParameters = socket.getSSLParameters();sslParameters.setServerNames(getSNIHostNames());socket.setSSLParameters(sslParameters);}Collection<String> filteredCipherSuites =BaseSSLContextParameters.this.filter(enabledCipherSuites,Arrays.asList(socket.getSSLParameters().getCipherSuites()),Arrays.asList(socket.getEnabledCipherSuites()),enabledCipherSuitePatterns,defaultEnabledCipherSuitePatterns,!allowPassthrough);if (LOG.isDebugEnabled()) {}socket.setEnabledCipherSuites(filteredCipherSuites.toArray(new String[filteredCipherSuites.size()]));Collection<String> filteredSecureSocketProtocols =BaseSSLContextParameters.this.filter(enabledSecureSocketProtocols,Arrays.asList(socket.getSSLParameters().getProtocols()),Arrays.asList(socket.getEnabledProtocols()),enabledSecureSocketProtocolsPatterns,defaultEnabledSecureSocketProtocolsPatterns,!allowPassthrough);if (LOG.isDebugEnabled()) {}socket.setEnabledProtocols(filteredSecureSocketProtocols.toArray(new String[filteredSecureSocketProtocols.size()]));return socket;}}	Yes
1297	"public class A {@Test(groups = ""Integration"")public void testScheduledTaskCancelOuter() throws Exception {final Duration PERIOD = Duration.millis(20);final Duration CYCLE_DELAY = Duration.ONE_SECOND;final Duration SMALL_FRACTION_OF_CYCLE_DELAY = PERIOD.add(CYCLE_DELAY.multiply(0.1));BasicExecutionManager m = new BasicExecutionManager(""mycontextid"");final AtomicInteger i = new AtomicInteger();ScheduledTask t =new ScheduledTask(MutableMap.of(""delay"", PERIOD.times(2), ""period"", PERIOD),new Callable<Task<?>>() {public Task<?> call() throws Exception {return new BasicTask<Integer>(new Callable<Integer>() {public Integer call() {log.info(""task running (""+ i+ ""): ""+ Tasks.current()+ "" ""+ Tasks.current().getStatusDetail(false));Time.sleep(CYCLE_DELAY);i.incrementAndGet();return i.get();}});}});log.info(JavaClassNames.niceClassAndMethod() + "" - submitting {} {}"", t, t.getStatusDetail(false));m.submit(t);log.info(""submitted {} {}"", t, t.getStatusDetail(false));Integer interimResult = (Integer) t.get();log.info(""done one ({}) {} {}"", new Object[] {interimResult, t, t.getStatusDetail(false)});assertEquals(i.get(), 1);Time.sleep(SMALL_FRACTION_OF_CYCLE_DELAY);assertEquals(t.get(), 2);Time.sleep(SMALL_FRACTION_OF_CYCLE_DELAY);Stopwatch timer = Stopwatch.createUnstarted();t.cancel(true);t.blockUntilEnded();try {t.get();Assert.fail(""Should have failed getting result of cancelled "" + t);} catch (Exception e) {}assertEquals(i.get(), 2);log.info(""ended ({}) {} {}, in {}"",new Object[] {i, t, t.getStatusDetail(false), Duration.of(timer)});Assert.assertTrue(Duration.of(timer).isShorterThan(SMALL_FRACTION_OF_CYCLE_DELAY));}}"	Yes
1298	"public class A {@Verifypublic void globalVerify() {ICacheOperationCounter total = new ICacheOperationCounter();for (ICacheOperationCounter counter : results) {total.add(counter);}logger.info(name + "": "" + total + "" from "" + results.size() + "" worker threads"");}}"	No
1299	"public class A {public static String getLocalAddress() {try {String customIP = System.getProperty(""qmq.ip"");if (!Strings.isNullOrEmpty(customIP)) return customIP;final Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();final ArrayList<String> ipv4Result = new ArrayList<>();final ArrayList<String> ipv6Result = new ArrayList<>();while (interfaces.hasMoreElements()) {final NetworkInterface networkInterface = interfaces.nextElement();if (!networkInterface.isUp()) continue;if (networkInterface.isVirtual()) continue;final Enumeration<InetAddress> addresses = networkInterface.getInetAddresses();while (addresses.hasMoreElements()) {final InetAddress address = addresses.nextElement();if (!address.isLoopbackAddress()) {if (address instanceof Inet6Address) {ipv6Result.add(address.getHostAddress());} else {ipv4Result.add(address.getHostAddress());}}}}if (!ipv4Result.isEmpty()) {for (String ip : ipv4Result) {if (ip.startsWith(""127.0"")) {continue;}return ip;}return ipv4Result.get(ipv4Result.size() - 1);} else if (!ipv6Result.isEmpty()) {return ipv6Result.get(0);}return InetAddress.getLocalHost().getHostAddress();} catch (Exception e) {}return null;}}"	Yes
1300	public class A {public void onComplete(Void o) {registerInterpreterProcess_result result = new registerInterpreterProcess_result();try {fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid);} catch (org.apache.thrift.transport.TTransportException e) {fb.close();} catch (java.lang.Exception e) {onError(e);}}}	Yes
1301	public class A {public Page<WebContent> findAll(final Pageable pageable) {return webContentRepository.findAll(pageable);}}	Yes
1302	"public class A {public static <K, V> Optional<Map<K, V>> decodeMapData(CloudEvent event, Class<K> keyClass, Class<V> valueClass) {try {JavaType mapType =Mapper.mapper().getTypeFactory().constructMapType(HashMap.class, keyClass, valueClass);return Optional.ofNullable(Mapper.mapper().readValue(event.getData(), mapType));} catch (IOException e) {LOG.error(""Unable to decode CloudEvent data to Map<""+ keyClass.getName()+ "",""+ valueClass.getName()+ "">"",e);return Optional.empty();}}}"	No
1303	"public class A {@Overridepublic String getRevisionID() throws KuraException {synchronized (this.atLock) {if (this.revisionId == null) {byte[] reply;CommConnection commAtConnection = openSerialPort(getAtPort());if (!isAtReachable(commAtConnection)) {closeSerialPort(commAtConnection);throw new KuraException(KuraErrorCode.NOT_CONNECTED, MODEM_NOT_AVAILABLE_FOR_AT_CMDS_MSG);}try {reply =commAtConnection.sendCommand(SierraMc87xxAtCommands.getFirmwareVersion.getCommand().getBytes(), 1000, 100);} catch (IOException e) {closeSerialPort(commAtConnection);throw new KuraException(KuraErrorCode.CONNECTION_FAILED, e);}closeSerialPort(commAtConnection);if (reply != null) {String firmwareVersion = getResponseString(reply);if (firmwareVersion.startsWith(""!GVER:"")) {firmwareVersion = firmwareVersion.substring(""!GVER:"".length()).trim();String[] aFirmwareVersion = firmwareVersion.split("" "");this.revisionId = aFirmwareVersion[0];}}}}return this.revisionId;}}"	Yes
1304	"public class A {@Overridepublic void setDoubleProperty(final String name, final double value) throws JMSException {if (ActiveMQRALogger.LOGGER.isTraceEnabled()) {ActiveMQRALogger.LOGGER.trace(""setDoubleProperty("" + name + "", "" + value + "")"");}message.setDoubleProperty(name, value);}}"	No
1305	"public class A {@Overridepublic Node handle(ComponentRequest request) {val uiComponent = new VBox();val uiField = _fx.add(uiComponent, new TextField());val uiValidationFeedback = _fx.newValidationFeedback(uiComponent);val valueSpec = request.getFeatureTypeSpec();val converter = new NumberConverterForStringComponent(valueSpec);uiField.setTextFormatter(new TextFormatter<String>(change -> {val input = change.getText();val parsingError = converter.tryParse(_Strings.suffix(input, ""0""));if (parsingError.isPresent()) {log.warn(""Failed to parse UI input '{}': {}"", input, parsingError.get());return null;}return change;}));if (request.getManagedFeature() instanceof ManagedParameter) {val managedParameter = (ManagedParameter) request.getManagedFeature();BindingsFx.bindBidirectional(uiField.textProperty(), managedParameter.getValue(), converter);BindingsFx.bindValidationFeeback(uiValidationFeedback.textProperty(),uiValidationFeedback.visibleProperty(),managedParameter.getValidationMessage());} else if (request.getManagedFeature() instanceof ManagedProperty) {val managedProperty = (ManagedProperty) request.getManagedFeature();BindingsFx.bind(uiField.textProperty(), managedProperty.getValue(), converter);uiField.editableProperty().set(false);}return uiComponent;}}"	No
1306	"public class A {public static KeyPair parseKeyPairFromReader(Reader pemKeyPairReader) throws IOException {try (PEMParser pemParser = new PEMParser(pemKeyPairReader)) {Object parsedObject = pemParser.readObject();if (PrivateKeyInfo.class.isInstance(parsedObject)) {if (isVerbose()) {logger.info(""Provided private key is in PKCS #8 format"");}PEMKeyPair keyPair = convertPrivateKeyFromPKCS8ToPKCS1((PrivateKeyInfo) parsedObject);return getKeyPair(keyPair);} else if (PEMKeyPair.class.isInstance(parsedObject)) {return getKeyPair((PEMKeyPair) parsedObject);} else {logger.warn(""Expected one of %s or %s but got %s"",PrivateKeyInfo.class, PEMKeyPair.class, parsedObject.getClass());throw new IOException(""Expected private key in PKCS #1 or PKCS #8 unencrypted format"");}}}}"	No
1307	"public class A {protected boolean deleteTaskNonRecursive(Task<?> task) {Set<?> tags = checkNotNull(task, ""task"").getTags();for (Object tag : tags) {synchronized (tasksByTag) {Set<Task<?>> tasks = tasksWithTagLiveOrNull(tag);if (tasks != null) {tasks.remove(task);if (tasks.isEmpty()) {tasksByTag.remove(tag);}}}}Task<?> removed = tasksById.remove(task.getId());incompleteTaskIds.remove(task.getId());if (removed != null && removed.isSubmitted() && !removed.isDone()) {log.warn(""Deleting submitted task before completion: ""+ removed+ ""; this task will continue to run in the background outwith ""+ this+ "", but perhaps it should have been cancelled?"");}return removed != null;}}"	No
1308	"public class A {void applyPhysicalPlan(PhysicalPlan plan, DataGroupMember dataGroupMember)throws QueryProcessException, StorageGroupNotSetException, StorageEngineException {if (plan instanceof InsertPlan) {processPlanWithTolerance((InsertPlan) plan, dataGroupMember);} else if (plan != null && !plan.isQuery()) {try {getQueryExecutor().processNonQuery(plan);} catch (BatchProcessException e) {handleBatchProcessException(e, plan);} catch (QueryProcessException e) {if (e.getCause() instanceof StorageGroupNotSetException|| e.getCause() instanceof UndefinedTemplateException) {executeAfterSync(plan);} else {throw e;}} catch (StorageGroupNotSetException e) {executeAfterSync(plan);}} else if (plan != null) {logger.error(""Unsupported physical plan: {}"", plan);}}}"	No
1309	"public class A {public List<String> getWidgetUtilizerCodes(String widgetTypeCode) {List<String> utilizers = new ArrayList<>();try {List<String> draftUtilizers =this.getPageManager().getDraftWidgetUtilizerCodes(widgetTypeCode);if (null != draftUtilizers && draftUtilizers.size() > 0) {utilizers.addAll(draftUtilizers);}List<String> onlineUtilizers =this.getPageManager().getOnlineWidgetUtilizerCodes(widgetTypeCode);if (null != onlineUtilizers && onlineUtilizers.size() > 0) {utilizers.addAll(onlineUtilizers);}} catch (Throwable t) {_logger.error(""Error on extracting widgetUtilizers : widget type code {}"", t);throw new RuntimeException(""Error on extracting widgetUtilizers : widget type code "" + widgetTypeCode, t);}return utilizers;}}"	No
1310	"public class A {public static void deleteCommerceDiscountCommerceAccountGroupRelsByCommerceDiscountId(HttpPrincipal httpPrincipal, long commerceDiscountId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommerceDiscountCommerceAccountGroupRelServiceUtil.class,""deleteCommerceDiscountCommerceAccountGroupRelsByCommerceDiscountId"",_deleteCommerceDiscountCommerceAccountGroupRelsByCommerceDiscountIdParameterTypes2);MethodHandler methodHandler = new MethodHandler(methodKey, commerceDiscountId);try {TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
1311	"public class A {private String getAuditEventDetail(Referenceable entity, EntityAuditAction action)throws AtlasException {Map<String, Object> prunedAttributes = pruneEntityAttributesForAudit(entity);String auditPrefix = getV1AuditPrefix(action);String auditString = auditPrefix + AtlasType.toV1Json(entity);byte[] auditBytes = auditString.getBytes(StandardCharsets.UTF_8);long auditSize = auditBytes != null ? auditBytes.length : 0;long auditMaxSize = auditRepository.repositoryMaxSize();if (auditMaxSize >= 0 && auditSize > auditMaxSize) {LOG.warn(""audit record too long: entityType={}, guid={}, size={}; maxSize={}. entity attribute""+ "" values not stored in audit"",entity.getTypeName(),entity.getId()._getId(),auditSize,auditMaxSize);Map<String, Object> attrValues = entity.getValuesMap();entity.setValues(null);auditString = auditPrefix + AtlasType.toV1Json(entity);auditBytes = auditString.getBytes(StandardCharsets.UTF_8);auditSize = auditBytes != null ? auditBytes.length : 0;if (auditMaxSize >= 0 && auditSize > auditMaxSize) {Referenceable shallowEntity =new Referenceable(entity.getId(),entity.getTypeName(),null,entity.getSystemAttributes(),null,null);auditString = auditPrefix + AtlasType.toJson(shallowEntity);}entity.setValues(attrValues);}restoreEntityAttributes(entity, prunedAttributes);return auditString;}}"	Yes
1312	"public class A {@Overridepublic void reload() {if (!shouldRun()) {return;}try {prepareConfigFile();StringBuilder apiProxyUrl = new StringBuilder();apiProxyUrl.append(""http://localhost:"").append(getProxyPort()).append(""/v1-api-interceptor/reload"");Request.Post(apiProxyUrl.toString()).execute();} catch (IOException e) {}}}"	Yes
1313	"public class A {protected boolean isBucketVersioningEnabled() {try {BucketVersioningConfiguration v = amazonS3.getBucketVersioningConfiguration(bucketName);return v.getStatus().equals(BucketVersioningConfiguration.ENABLED);} catch (AmazonServiceException e) {if (isNotImplemented(e)) {log.warn(""Versioning not implemented for bucket: {}: {}"", () -> bucketName, e::getMessage);return false;}throw e;}}}"	Yes
1314	"public class A {private CatalogModel loadCatalogModel() {CatalogModel model = null;try {LoadModel<CatalogModel> loadModel = new LoadModel<>(CatalogModel.class);loadModel = getCommandService().executeCommand(loadModel);model = loadModel.getModel();if (model != null) {fireLoad(model);}} catch (Exception e) {logger.error(""Error loading the CatalogModel"", e);throw new RuntimeException(""Error loading the CatalogModel"", e);}return model;}}"	No
1315	public class A {private boolean updateHighWatermark() {List<ReplicaState> followersByDescendingFetchOffset = followersByDescendingFetchOffset();int indexOfHw = voterStates.size() / 2;Optional<LogOffsetMetadata> highWatermarkUpdateOpt =followersByDescendingFetchOffset.get(indexOfHw).endOffset;if (highWatermarkUpdateOpt.isPresent()) {LogOffsetMetadata highWatermarkUpdateMetadata = highWatermarkUpdateOpt.get();long highWatermarkUpdateOffset = highWatermarkUpdateMetadata.offset;if (highWatermarkUpdateOffset > epochStartOffset) {if (highWatermark.isPresent()) {LogOffsetMetadata currentHighWatermarkMetadata = highWatermark.get();if (highWatermarkUpdateOffset > currentHighWatermarkMetadata.offset|| (highWatermarkUpdateOffset == currentHighWatermarkMetadata.offset&& !highWatermarkUpdateMetadata.metadata.equals(currentHighWatermarkMetadata.metadata))) {highWatermark = highWatermarkUpdateOpt;return true;} else if (highWatermarkUpdateOffset < currentHighWatermarkMetadata.offset) {return false;} else {return false;}} else {highWatermark = highWatermarkUpdateOpt;return true;}}}return false;}}	Yes
1316	"public class A {private Product writeProductFile(Product targetProduct,ProductFormatter productFormatter,Mapper.Context context,Configuration jobConfig,String outputFormat,ProgressMonitor pm)throws IOException {long t0 = System.currentTimeMillis();Map<String, Object> bandSubsetParameter = createBandSubsetParameter(targetProduct, jobConfig);if (!bandSubsetParameter.isEmpty()) {targetProduct = GPF.createProduct(""Subset"", bandSubsetParameter, targetProduct);}File productFile = productFormatter.createTemporaryProductFile();GPF.writeProduct(targetProduct, productFile, outputFormat, false, pm);LOG.info(""formatting done in [ms]: "" + (System.currentTimeMillis() - t0));t0 = System.currentTimeMillis();context.setStatus(""Copying"");productFormatter.compressToHDFS(context, productFile);context.getCounter(COUNTER_GROUP_NAME_PRODUCTS, ""Product formatted"").increment(1);LOG.info(""archiving done in [ms]: "" + (System.currentTimeMillis() - t0));return targetProduct;}}"	Yes
1317	"public class A {public void handleGetDataResponse(final GetDataResponseDto dataResponseDto,final CorrelationIds ids,final String messageType,final ResponseMessageResultType responseMessageResultType,final OsgpException osgpException) {ResponseMessageResultType result = ResponseMessageResultType.OK;GetDataResponse dataResponse = null;OsgpException exception = null;try {if (responseMessageResultType == ResponseMessageResultType.NOT_OK || osgpException != null) {throw osgpException;}this.handleResponseMessageReceived(ids.getDeviceIdentification());dataResponse = this.mapper.map(dataResponseDto, GetDataResponse.class);} catch (final Exception e) {result = ResponseMessageResultType.NOT_OK;exception = this.ensureOsgpException(e, ""Exception occurred while getting data"");}String actualCorrelationUid = ids.getCorrelationUid();if (""no-correlationUid"".equals(actualCorrelationUid)) {actualCorrelationUid =this.correlationIdProviderUUIDService.getCorrelationId(""DeviceGenerated"", ids.getDeviceIdentification());}final ResponseMessage responseMessage =ResponseMessage.newResponseMessageBuilder().withIds(ids).withCorrelationUid(actualCorrelationUid).withMessageType(messageType).withResult(result).withOsgpException(exception).withDataObject(dataResponse).build();this.webServiceResponseMessageSender.send(responseMessage, messageType);}}"	Yes
1318	"public class A {public List<IndexedRecord> filterAllTestRows(String random, List<IndexedRecord> rows) {List<IndexedRecord> checkedRows = new ArrayList<>();for (IndexedRecord row : rows) {String check = (String) row.get(row.getSchema().getField(""ShippingStreet"").pos());if (check == null || !check.equals(TEST_KEY)) {continue;}if (random != null) {check = (String) row.get(row.getSchema().getField(""BillingPostalCode"").pos());if (check == null || !check.equals(random)) {continue;}}LOGGER.debug(""Found match: ""+ row.get(row.getSchema().getField(""Name"").pos())+ "" id: ""+ row.get(row.getSchema().getField(""Id"").pos())+ "" shippingPostalCode: ""+ row.get(row.getSchema().getField(""ShippingPostalCode"").pos())+ "" billingPostalCode: ""+ row.get(row.getSchema().getField(""BillingPostalCode"").pos())+ "" billingStreet: ""+ row.get(row.getSchema().getField(""BillingStreet"").pos()));checkedRows.add(row);}return checkedRows;}}"	No
1319	"public class A {private CompletableFuture<Void> freeSlotInternal(TaskSlot<T> taskSlot, Throwable cause) {AllocationID allocationId = taskSlot.getAllocationId();if (LOG.isDebugEnabled()) {LOG.debug(""Free slot {}."", taskSlot, cause);} else {LOG.info(""Free slot {}."", taskSlot);}if (taskSlot.isEmpty()) {allocatedSlots.remove(allocationId);timerService.unregisterTimeout(allocationId);JobID jobId = taskSlot.getJobId();Set<AllocationID> slots = slotsPerJob.get(jobId);if (slots == null) {throw new IllegalStateException(""There are no more slots allocated for the job ""+ jobId+ "". This indicates a programming bug."");}slots.remove(allocationId);if (slots.isEmpty()) {slotsPerJob.remove(jobId);}taskSlots.remove(taskSlot.getIndex());budgetManager.release(taskSlot.getResourceProfile());}return taskSlot.closeAsync(cause);}}"	No
1320	"public class A {@Overridepublic void start() {logger.debug(""Starting KeepLatestContainerOnlyPolicy policy..."");TimeUnit timeUnit =TimeUnit.valueOf(System.getProperty(INTERVAL_TIME_UNIT, TimeUnit.MILLISECONDS.toString()));long givenInterval = Long.parseLong(System.getProperty(INTERVAL_VALUE, ""0""));if (givenInterval > 0) {timeUnit.convert(givenInterval, timeUnit);this.interval = TimeUnit.MILLISECONDS.convert(givenInterval, timeUnit);} else {this.interval = TimeUnit.MILLISECONDS.convert(1L, TimeUnit.DAYS);}logger.debug(""Started {} policy"", this);}}"	No
1321	"public class A {private OracleService.Client getOracleClient(String host, int port) {try {TTransport transport = new TFastFramedTransport(new TSocket(host, port));transport.open();TProtocol protocol = new TCompactProtocol(transport);log.info(""Former leader was reachable at "" + host + "":"" + port);return new OracleService.Client(protocol);} catch (TTransportException e) {log.debug(""Exception thrown in getOracleClient()"", e);} catch (Exception e) {throw new RuntimeException(e);}return null;}}"	No
1322	"public class A {@Overridepublic void onTopologyUpdate(CacheTopology oldCacheTopology, CacheTopology newCacheTopology) {if (log.isTraceEnabled()) {log.trace(""[IRAC] Topology Updated. Checking pending keys."");}Address local = rpcManager.getAddress();if (!newCacheTopology.getMembers().contains(local)) {return;}IntSet addedSegments =mutableCopyFrom(newCacheTopology.getWriteConsistentHash().getSegmentsForOwner(local));if (oldCacheTopology.getMembers().contains(local)) {addedSegments.removeAll(oldCacheTopology.getWriteConsistentHash().getSegmentsForOwner(local));}if (addedSegments.isEmpty()) {iracExecutor.run();return;}Map<Address, IntSet> primarySegments = new HashMap<>();for (int segment : addedSegments) {Address primary =newCacheTopology.getWriteConsistentHash().locatePrimaryOwnerForSegment(segment);primarySegments.computeIfAbsent(primary, DefaultIracManager::newIntSet).add(segment);}primarySegments.forEach(this::sendStateRequest);iracExecutor.run();}}"	No
1323	"public class A {private boolean requestAnalyze(long scheduleID,RDBAnalyze rdbAnalyze,AnalyzeInstance analyzeInstance,Map<String, Set<String>> generateRule,int[] analyzer) {String host = analyzeInstance.getHost();String url =""http://""+ analyzeInstance.getHost()+ "":""+ analyzeInstance.getPort()+ ""/receivedSchedule"";ScheduleInfo scheduleInfo =new ScheduleInfo(scheduleID,rdbAnalyze.getDataPath(),rdbAnalyze.getPrefixes(),generateRule.get(host),analyzer);HttpHeaders headers = new HttpHeaders();headers.add(""Content-Type"", ""application/json"");HttpEntity<ScheduleInfo> httpEntity = new HttpEntity<ScheduleInfo>(scheduleInfo, headers);boolean status = Boolean.FALSE;try {ResponseEntity<String> executeResult =restTemplate.postForEntity(url, httpEntity, String.class);JSONObject responseMessage = JSONObject.parseObject(executeResult.getBody());if (!responseMessage.getBooleanValue(""checked"")) {LOG.error(""allocation {} scheduleJob response error. responseMessage:{}"",analyzeInstance.toString(),responseMessage.toJSONString());deleteResult(rdbAnalyze, scheduleID);} else {status = Boolean.TRUE;}} catch (Exception e) {LOG.error(""allocation {} scheduleJob fail. "", analyzeInstance.toString(), e);deleteResult(rdbAnalyze, scheduleID);}Set<String> ports = generateRule.get(host);for (String port : ports) {if (status) {updateCurrentAnalyzerStatus(rdbAnalyze.getId(), scheduleID, host, port, 0, status, AnalyzeStatus.CHECKING);} else {updateCurrentAnalyzerStatus(rdbAnalyze.getId(), scheduleID, host, port, 0, status, AnalyzeStatus.ERROR);}}return status;}}"	No
1324	"public class A {@PostConstructpublic void postConstruct() {LOGGER.debug(""init vitam tenant is mandatory : {}"", mandatory);this.contractResources =Map.of(HOLDING_ACCESS_CONTRACT_NAME,holdingAccessContract,HOLDING_INGEST_CONTRACT_NAME,holdingIngestContract,LOGBOOK_ACCESS_CONTRACT_NAME,logbookAccessContract,ITEMS_INGEST_CONTRACT_NAME,itemsIngestContract,FULL_ACCESS_CONTRACT_NAME,fullAccessAccessContract);}}"	No
1325	"public class A {public void start() {switch (this.workerState.getCurrentState()) {case NEW:if (this.workerState.changeStateInitializing()) {this.workerThread.start();workerState.changeStateStarted();if (clusterConnectionManager != null) {clusterConnectionManager.start();}break;}case INITIALIZING:logger.info(""{} already initializing."", this.getClass().getSimpleName());break;case STARTED:break;case DESTROYING:throw new IllegalStateException(""Already destroying."");case STOPPED:throw new IllegalStateException(""Already stopped."");case ILLEGAL_STATE:throw new IllegalStateException(""Invalid State."");}}}"	Yes
1326	"public class A {private String getCompletionTargetString(String text, int cursor) {String[] completionSeqCharaters = {"" "", ""\n"", ""\t""};int completionEndPosition = cursor;int completionStartPosition = cursor;int indexOfReverseSeqPostion = cursor;String resultCompletionText = """";String completionScriptText = """";try {completionScriptText = text.substring(0, cursor);} catch (Exception e) {return null;}completionEndPosition = completionScriptText.length();String tempReverseCompletionText = new StringBuilder(completionScriptText).reverse().toString();for (String seqCharacter : completionSeqCharaters) {indexOfReverseSeqPostion = tempReverseCompletionText.indexOf(seqCharacter);if (indexOfReverseSeqPostion < completionStartPosition && indexOfReverseSeqPostion > 0) {completionStartPosition = indexOfReverseSeqPostion;}}if (completionStartPosition == completionEndPosition) {completionStartPosition = 0;} else {completionStartPosition = completionEndPosition - completionStartPosition;}resultCompletionText =completionScriptText.substring(completionStartPosition, completionEndPosition);return resultCompletionText;}}"	Yes
1327	public class A {private void abort(Error error) {try {if (mContext == null || mContext.getError() != null || mContext.isDoneUnsafe()) {return;}mContext.setError(error);cleanupRequest(mContext);} catch (Exception e) {} finally {replyError();}}}	Yes
1328	"public class A {public boolean isLinux() {String guestid = configSpec.getGuestId();boolean isLinux =guestid.startsWith(""cent"")|| guestid.startsWith(""debian"")|| guestid.startsWith(""freebsd"")|| guestid.startsWith(""oracle"")|| guestid.startsWith(""other24xLinux"")|| guestid.startsWith(""other26xLinux"")|| guestid.startsWith(""otherLinux"")|| guestid.startsWith(""redhat"")|| guestid.startsWith(""rhel"")|| guestid.startsWith(""sles"")|| guestid.startsWith(""suse"")|| guestid.startsWith(""ubuntu"");return isLinux;}}"	Yes
1329	public class A {public SignInPage clickSignInExpectError() {clickElement(signInButton);return new SignInPage(getDriver());}}	Yes
1330	public class A {@Overridepublic void debug(final String format, final Object arg1, final Object arg2) {log.debug(format, arg1, arg2);}}	No
1331	public class A {private Object do4Update(ProceedingJoinPoint pjp,HttpServletRequest request,HttpServletResponse response,String dataId,String group,String tenant,String content)throws Throwable {if (!PropertyUtil.isCapacityLimitCheck()) {return pjp.proceed();}try {boolean hasTenant = hasTenant(tenant);Capacity capacity = getCapacity(group, tenant, hasTenant);if (isSizeLimited(group, tenant, getCurrentSize(content), hasTenant, false, capacity)) {return response4Limit(request, response, LimitType.OVER_MAX_SIZE);}} catch (Exception e) {}return pjp.proceed();}}	Yes
1332	"public class A {private void establishJobManagerConnection(JobTable.Job job,final JobMasterGateway jobMasterGateway,JMTMRegistrationSuccess registrationSuccess) {final JobID jobId = job.getJobId();final Optional<JobTable.Connection> connection = job.asConnection();if (connection.isPresent()) {JobTable.Connection oldJobManagerConnection = connection.get();if (Objects.equals(oldJobManagerConnection.getJobMasterId(), jobMasterGateway.getFencingToken())) {return;} else {disconnectJobManagerConnection(oldJobManagerConnection,new Exception(""Found new job leader for job id "" + jobId + '.'));}}ResourceID jobManagerResourceID = registrationSuccess.getResourceID();final JobTable.Connection establishedConnection =associateWithJobManager(job, jobManagerResourceID, jobMasterGateway);jobManagerHeartbeatManager.monitorTarget(jobManagerResourceID,new HeartbeatTarget<TaskExecutorToJobManagerHeartbeatPayload>() {@Overridepublic void receiveHeartbeat(ResourceID resourceID, TaskExecutorToJobManagerHeartbeatPayload payload) {jobMasterGateway.heartbeatFromTaskManager(resourceID, payload);}@Overridepublic void requestHeartbeat(ResourceID resourceID, TaskExecutorToJobManagerHeartbeatPayload payload) {}});internalOfferSlotsToJobManager(establishedConnection);}}"	Yes
1333	public class A {@Overridepublic CompletableFuture<Acknowledge> notifyKvStateUnregistered(JobID jobId, JobVertexID jobVertexId, KeyGroupRange keyGroupRange, String registrationName) {try {schedulerNG.notifyKvStateUnregistered(jobId, jobVertexId, keyGroupRange, registrationName);return CompletableFuture.completedFuture(Acknowledge.get());} catch (FlinkJobNotFoundException e) {return FutureUtils.completedExceptionally(e);}}}	Yes
1334	"public class A {@Testpublic void test_00() throws IOException {Log.debug(""Test"");String fileName = path(""testLukas.vcf"");long hashExp = calcHashBufferedReader(fileName);long hash = calcHash(fileName);System.out.println(String.format(""%016x\t%016x\t%s"", hashExp, hash, fileName));Assert.assertEquals(hashExp, hash);}}"	No
1335	"public class A {@Overridepublic void run(Timeout timeout) throws Exception {logger.info(""Reserved {} started."", ClassUtils.simpleClassName(this));if (!isConnected()) {return;}if (!syncPullCollectorCluster()) {timer.newTimeout(new PullCollectorClusterJob(), PULL_RETRY_INTERVAL_TIME_MILLIS, TimeUnit.MILLISECONDS);}}}"	No
1336	public class A {@Overridepublic Map<Integer, GovernmentBodyAnnualSummary> getDataPerGovernmentBody(final String name) {final Map<Integer, GovernmentBodyAnnualSummary> map = new TreeMap<>();try {final HSSFWorkbook myWorkBook = createGovermentBodyWorkBook();for (int sheetNr = 0; sheetNr < myWorkBook.getNumberOfSheets(); sheetNr++) {final HSSFSheet mySheet = myWorkBook.getSheetAt(sheetNr);addDataForYearToMap(name, map, mySheet);}myWorkBook.close();} catch (final IOException e) {}return map;}}	Yes
1337	public class A {@Overridepublic MCRIIIFManifest getManifest(String id) {try {Document metsDocument = getMets(id);return getConverter(id, metsDocument).convert();} catch (IOException | JDOMException | SAXException e) {throw new MCRException(e);}}}	Yes
1338	"public class A {private void printlnError(Object o) {s_logger.error("""" + o);}}"	No
1339	"public class A {protected List<Blob> loadBlobs(List<Map<String, String>> blobInfos) {log.debug(""Loading blobs from the file system: "" + blobInfos);List<Blob> blobs = new ArrayList<>();for (Map<String, String> info : blobInfos) {File blobFile = new File(cacheDir, info.get(""file""));Blob blob = new FileBlob(blobFile);blob.setEncoding(info.get(""encoding""));blob.setMimeType(info.get(""mimetype""));blob.setFilename(info.get(""filename""));blob.setDigest(info.get(""digest""));blobs.add(blob);}return blobs;}}"	No
1340	public class A {@Overridepublic void bytesMessage(InputStream in) {try {handleMessage(in.read(), in);} catch (IOException ex) {}}}	Yes
1341	"public class A {public boolean saveMetadataFile(String metadataFileName, InputStream stream) {if (appConfiguration.getShibboleth3FederationRootDir() == null) {throw new InvalidConfigurationException(""Failed to save meta-data file due to undefined federation root folder"");}String spMetadataFile = getIdpMetadataDir() + metadataFileName;try {return documentStoreService.saveDocumentStream(spMetadataFile, stream);} catch (Exception ex) {log.error(""Failed to write meta-data file '{}'"", spMetadataFile, ex);} finally {IOUtils.closeQuietly(stream);}return false;}}"	No
1342	public class A {public static void safeCopyFile(File child, File destChild) throws IOException {forceMkdirs(destChild.getParentFile());IOException ioException = null;while (true) {try {FileUtils.copyFile(child, destChild);return;} catch (IOException e) {if (ioException == null) {ioException = e;} else {ioException.addSuppressed(e);}if (ioException.getSuppressed().length >= MAX_COPY_ATTEMPTS) {return;}}}}}	Yes
1343	public class A {@Overridepublic void perform() throws Exception {List<ServerName> selectedServers = selectServers();setBalancer(false, true);for (ServerName server : selectedServers) {String rsName = server.getAddress().toString();try (RegionMover rm =new RegionMover.RegionMoverBuilder(rsName, getConf()).ack(true).build()) {rm.unload();gracefulRestartRs(server, sleepTime);rm.load();} catch (Shell.ExitCodeException e) {}sleep(RandomUtils.nextInt(0, (int) sleepTime));}setBalancer(true, true);}}	Yes
1344	"public class A {@Overridepublic boolean checkAccess(OzoneObj ozObject, RequestContext context) throws OMException {Objects.requireNonNull(ozObject);Objects.requireNonNull(context);Objects.requireNonNull(context.getClientUgi());String volume = ozObject.getVolumeName();String bucket = ozObject.getBucketName();String keyName = ozObject.getKeyName();String objectKey = metadataManager.getOzoneKey(volume, bucket, keyName);OmKeyArgs args =new OmKeyArgs.Builder().setVolumeName(volume).setBucketName(bucket).setKeyName(keyName).build();metadataManager.getLock().acquireReadLock(BUCKET_LOCK, volume, bucket);try {validateBucket(volume, bucket);OmKeyInfo keyInfo;if (context.getAclRights() == IAccessAuthorizer.ACLType.WRITE) {keyInfo = metadataManager.getOpenKeyTable().get(objectKey);} else {try {OzoneFileStatus fileStatus = getFileStatus(args);keyInfo = fileStatus.getKeyInfo();} catch (IOException e) {if (context.getAclRights() == IAccessAuthorizer.ACLType.READ) {return true;} else {throw new OMException(""Key not found, checkAccess failed. Key:"" + objectKey, KEY_NOT_FOUND);}}}if (keyInfo == null) {LOG.debug(""key:{} is non-existent parent, permit access to user:{}"",keyName,context.getClientUgi());return true;}boolean hasAccess = OzoneAclUtil.checkAclRight(keyInfo.getAcls(), context);if (LOG.isDebugEnabled()) {LOG.debug(""user:{} has access rights for key:{} :{} "",context.getClientUgi(),ozObject.getKeyName(),hasAccess);}return hasAccess;} catch (IOException ex) {if (ex instanceof OMException) {throw (OMException) ex;}throw new OMException(""Check access operation failed for "" + ""key:"" + keyName, ex, INTERNAL_ERROR);} finally {metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volume, bucket);}}}"	Yes
1345	"public class A {@PUT@Path(""/{id}"")@Consumes({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})@CheckPermission(roles = {Role.SYSTEM_ADMIN, Role.RESTRICTED_SYSTEM_ADMIN})public TaskResourceRep updateFilePolicy(@PathParam(""id"") URI id, FilePolicyUpdateParam param) {ArgValidator.checkFieldUriType(id, FilePolicy.class, ""id"");FilePolicy filePolicy = this._dbClient.queryObject(FilePolicy.class, id);ArgValidator.checkEntity(filePolicy, id, true);_log.info(""validate and update file policy parameters started -- "");if (filePolicy.getFilePolicyType().equals(FilePolicyType.file_replication.name())) {updateFileReplicationPolicy(filePolicy, param);} else if (filePolicy.getFilePolicyType().equals(FilePolicyType.file_snapshot.name())) {updateFileSnapshotPolicy(filePolicy, param);}_dbClient.updateObject(filePolicy);String task = UUID.randomUUID().toString();Operation op =_dbClient.createTaskOpStatus(FilePolicy.class,filePolicy.getId(),task,ResourceOperationTypeEnum.UPDATE_FILE_POLICY_BY_POLICY_STORAGE_RESOURCE);op.setDescription(""update file protection policy by policy storage resource"");Task taskObj = op.getTask(filePolicy.getId());StorageOSUser user = getUserFromContext();URI userTenantUri = URI.create(user.getTenantId());FilePolicyServiceUtils.updateTaskTenant(_dbClient, filePolicy, ""update"", taskObj, userTenantUri);if (filePolicy.getPolicyStorageResources() != null&& !filePolicy.getPolicyStorageResources().isEmpty()) {_log.info(""Updating the storage system policy started.."");updateStorageSystemFileProtectionPolicy(filePolicy, param, task);return toTask(filePolicy, task, op);} else {op = _dbClient.ready(FilePolicy.class, filePolicy.getId(), task);return toTask(filePolicy, task, op);}}}"	No
1346	"public class A {@Overridepublic void importData(JsonReader reader) throws IOException {logger.info(""Reading configuration for 1.0"");reader.beginObject();while (reader.hasNext()) {JsonToken tok = reader.peek();switch (tok) {case NAME:String name = reader.nextName();if (name.equals(CLIENTS)) {readClients(reader);} else if (name.equals(GRANTS)) {readGrants(reader);} else if (name.equals(WHITELISTEDSITES)) {readWhitelistedSites(reader);} else if (name.equals(BLACKLISTEDSITES)) {readBlacklistedSites(reader);} else if (name.equals(AUTHENTICATIONHOLDERS)) {readAuthenticationHolders(reader);} else if (name.equals(ACCESSTOKENS)) {readAccessTokens(reader);} else if (name.equals(REFRESHTOKENS)) {readRefreshTokens(reader);} else if (name.equals(SYSTEMSCOPES)) {readSystemScopes(reader);} else {for (MITREidDataServiceExtension extension : extensions) {if (extension.supportsVersion(THIS_VERSION)) {if (extension.supportsVersion(THIS_VERSION)) {extension.importExtensionData(name, reader);break;}}}reader.skipValue();}break;case END_OBJECT:reader.endObject();continue;default:reader.skipValue();continue;}}fixObjectReferences();for (MITREidDataServiceExtension extension : extensions) {if (extension.supportsVersion(THIS_VERSION)) {extension.fixExtensionObjectReferences(maps);break;}}maps.clearAll();}}"	Yes
1347	"public class A {@ParameterizedTest@MethodSource(""scenarios"")public void testAsyncComplete(String logType, Handler testHandler, String requestPath, String expectedLogEntry)throws Exception {setup(logType);_server.setRequestLog(_log);_server.setHandler(new AbstractHandler() {@Overridepublic void handle(String target,Request baseRequest,HttpServletRequest request,HttpServletResponse response)throws IOException, ServletException {if (Boolean.TRUE.equals(request.getAttribute(""ASYNC"")))testHandler.handle(target, baseRequest, request, response);else {request.setAttribute(""ASYNC"", Boolean.TRUE);AsyncContext ac = request.startAsync();ac.setTimeout(1000);baseRequest.setHandled(true);_server.getThreadPool().execute(() -> {try {try {while (baseRequest.getHttpChannel().getState().getState()!= HttpChannelState.State.WAITING) {Thread.sleep(10);}baseRequest.setHandled(false);testHandler.handle(target, baseRequest, request, response);if (!baseRequest.isHandled()) response.sendError(404);} catch (BadMessageException bad) {response.sendError(bad.getCode(), bad.getReason());} catch (Exception e) {response.sendError(500, e.toString());}} catch (IOException | IllegalStateException th) {} finally {ac.complete();}});}}});startServer();makeRequest(requestPath);assertRequestLog(expectedLogEntry, _log);}}"	Yes
1348	"public class A {@Overridepublic void registerMember(ITransactionMember member) {synchronized (m_memberMapLock) {String memberId = member.getMemberId();if (LOG.isDebugEnabled()) {}ITransactionMember old = m_memberMap.get(memberId);if (old != null) {if (LOG.isWarnEnabled()) {}old.release();}m_memberMap.put(memberId, member);if (m_cancelled) {throw new FutureCancelledError(""Transaction cancelled"");}}}}"	Yes
1349	"public class A {@Overridepublic void resolveCollision(CompositeMap<IOption, Object> composite,Map<IOption, Object> existing,Map<IOption, Object> added,Collection<IOption> intersect) {LOGGER.debug(""resolveCollision: {}, {}, {}, {}"", composite, existing, added, intersect);}}"	No
1350	public class A {@Overridepublic void run() {try {createGUI();} catch (Throwable t) {t.printStackTrace();}}}	Yes
1351	"public class A {void doIndexTestSqlTest(String dataSource,String indexTaskFilePath,String queryFilePath,Function<String, String> taskSpecTransform)throws IOException {final String fullDatasourceName = dataSource + config.getExtraDatasourceNameSuffix();final String taskSpec =taskSpecTransform.apply(StringUtils.replace(getResourceAsString(indexTaskFilePath), ""%%DATASOURCE%%"", fullDatasourceName));Pair<Boolean, Boolean> dummyPair = new Pair<>(false, false);submitTaskAndWait(taskSpec, fullDatasourceName, false, true, dummyPair);try {sqlQueryHelper.testQueriesFromFile(queryFilePath);} catch (Exception e) {throw new RuntimeException(e);}}}"	Yes
1352	"public class A {@Overridepublic void removeByKeyPrefix(String preFix) {List<ContextKey> removeKeys = getContextValueMapSet().findByKeyPrefix(preFix);if (CollectionUtils.isNotEmpty(removeKeys)) {for (ContextKey key : removeKeys) {remove(key);}logger.warn(""Remove keyValue by key preFix: "" + preFix);}}}"	No
1353	"public class A {private void initiateSort(String sortId, String source, final String destination)throws KeeperException, InterruptedException {String work = source + ""|"" + destination;new DistributedWorkQueue(manager.getZooKeeperRoot() + Constants.ZRECOVERY, manager.getConfiguration()).addWork(sortId, work.getBytes(UTF_8));synchronized (this) {sortsQueued.add(sortId);}final String path = manager.getZooKeeperRoot() + Constants.ZRECOVERY + ""/"" + sortId;}}"	Yes
1354	"public class A {private void schedule(final IndexSet indexSet) {final String indexSetId = indexSet.getConfig().id();final String indexSetTitle = indexSet.getConfig().title();final Duration refreshInterval = indexSet.getConfig().fieldTypeRefreshInterval();if (Duration.ZERO.equals(refreshInterval)) {LOG.debug(""Skipping index set with ZERO refresh interval <{}/{}>"", indexSetTitle, indexSetId);return;}if (!indexSet.getConfig().isWritable()) {return;}cancel(futures.get(indexSetId));final ScheduledFuture<?> future =scheduler.scheduleAtFixedRate(() -> {if (serverIsNotRunning()) {return;}try {final String activeWriteIndex = indexSet.getActiveWriteIndex();if (activeWriteIndex != null) {LOG.debug(""Updating index field types for active write index <{}> in index set <{}/{}>"",activeWriteIndex,indexSetTitle,indexSetId);poller.pollIndex(activeWriteIndex, indexSetId).ifPresent(dbService::upsert);} else {LOG.warn(""Active write index for index set \""{}\"" ({}) doesn't exist yet"",indexSetTitle,indexSetId);}} catch (TooManyAliasesException e) {LOG.error(""Couldn't get active write index"", e);} catch (Exception e) {LOG.error(""Couldn't update field types for index set <{}/{}>"",indexSetTitle,indexSetId,e);}},0,refreshInterval.getMillis(),TimeUnit.MILLISECONDS);futures.put(indexSetId, future);}}"	Yes
1355	"public class A {@Overridepublic void run() {try {while (!closed) {if (changesHaveOccurred()) {trigger();}Thread.sleep(scanPeriod);}} catch (Throwable e) {LOGGER.error(""An error have been encountered while watching resources - leaving the redeploy mode"", e);close();}}}"	No
1356	"public class A {@Overridepublic void after(final Object target, final Object[] args, final Object result, final Throwable throwable) {if (isDebug) {logger.afterInterceptor(target, args, result, throwable);}if (!argumentValidator.validate(args)) {return;}try {final HttpServletRequest request = (HttpServletRequest) args[0];final HttpServletResponse response = (HttpServletResponse) args[1];if (servletApiHelper.isAsyncDispatcherAfter(request)) {if (isDebug) {logger.debug(""Skip async servlet request event. isAsyncStarted={}, dispatcherType={}"",request.isAsyncStarted(),request.getDispatcherType());}return;}final int statusCode = servletApiHelper.getStatus(response);this.servletRequestListener.destroyed(request, throwable, statusCode);} catch (Throwable t) {if (isInfo) {}}}}"	Yes
1357	public class A {public WebContentModuleConfig findByModuleId(final Long moduleId) {return webContentModuleConfigRepository.findByModuleId(moduleId);}}	Yes
1358	public class A {@Overridepublic byte[] toBytes(Object object) {ByteArrayOutputStream baos;try {baos = new ByteArrayOutputStream();ObjectOutputStream oos = new ObjectOutputStream(baos);oos.writeObject(object);oos.close();return baos.toByteArray();} catch (IOException e) {throw new PropertyAccessException(e);}}}	Yes
1359	"public class A {@Overrideprotected void process(IItem item) throws Exception {Reader textReader = null;if (!item.isToAddToCase()) {if (IndexTask.isTreeNodeOnly(item)) {IndexTask.configureTreeNodeAttributes(item);textReader = new StringReader("""");} else return;}if (textReader == null) {textReader = item.getTextReader();}if (textReader == null) {LOGGER.warn(""Null text reader: ""+ item.getPath()+ "" (""+ (item.getLength() != null ? item.getLength() : ""null"")+ "" bytes)"");textReader = new StringReader("""");}FragmentingReader fragReader = new FragmentingReader(textReader);int fragNum = fragReader.estimateNumberOfFrags();if (fragNum == -1) {fragNum = 1;}String parentId = Util.getPersistentId(item);try {XContentBuilder jsonMetadata = getJsonMetadataBuilder(item);IndexRequest parentIndexRequest = createIndexRequest(parentId, parentId, jsonMetadata);bulkRequest.add(parentIndexRequest);idToPath.put(parentId, item.getPath());do {String contentPersistentId = Util.generatePersistentIdForTextFrag(parentId, fragNum--);XContentBuilder jsonContent =getJsonFragmentBuilder(item, fragReader, parentId, contentPersistentId);IndexRequest contentRequest =createIndexRequest(contentPersistentId, parentId, jsonContent);bulkRequest.add(contentRequest);idToPath.put(contentPersistentId, item.getPath());LOGGER.debug(""Added to bulk request {}"", item.getPath());if (bulkRequest.estimatedSizeInBytes() >= min_bulk_size|| bulkRequest.numberOfActions() >= min_bulk_items) {sendBulkRequest();bulkRequest = new BulkRequest();idToPath = new HashMap<>();}} while (!Thread.currentThread().isInterrupted() && fragReader.nextFragment());} finally {item.setExtraAttribute(IndexItem.PERSISTENT_ID, parentId);fragReader.close();}}}"	No
1360	public class A {@Overridepublic void delete(final LogicalDatastoreType store, final YangInstanceIdentifier path) {checkOpen();processTransactionOperation(facade -> facade.delete(store, path));}}	Yes
1361	public class A {private void handleChannel(ChannelUID channelUID, Command command, Enigma2Client client) {if (command instanceof RefreshType) {client.refreshChannel();updateState(channelUID, new StringType(client.getChannel()));} else if (command instanceof StringType) {client.setChannel(command.toString());} else {}}}	Yes
1362	public class A {public static void run(final Scenario scenario) {List<String> activityTypes = AccessibilityUtils.collectAllFacilityOptionTypes(scenario);Controler controler = new Controler(scenario);for (final String actType : activityTypes) {final AccessibilityModule module = new AccessibilityModule();module.setConsideredActivityType(actType);controler.addOverridingModule(module);}controler.run();}}	Yes
1363	"public class A {@Testpublic void testTokenMerge() throws Exception {final Text service = new Text(""service"");Token<?> token = Mockito.mock(Token.class);JobConf jobConf = new JobConf();Mockito.when(token.getService()).thenReturn(service);try {helper.mergeTokenIntoJobConf(jobConf, token);} catch (IOException e) {log.info(""Ignoring exception, likely coming from Hadoop 1"", e);return;}Collection<Token<?>> tokens = jobConf.getCredentials().getAllTokens();assertEquals(1, tokens.size());assertEquals(service, tokens.iterator().next().getService());}}"	No
1364	public class A {@Overridepublic List<MediaPackageElement> distributeSync(String channelId, MediaPackage mediaPackage, Set<String> elementIds)throws DistributionException {if (getStreamingURLforCurrentOrg() == null) {return Collections.emptyList();}if (distributionDirectory == null) {return Collections.emptyList();}URI streamingURL = getStreamingURLforCurrentOrg();return distributeElements(channelId, mediaPackage, elementIds, streamingURL);}}	Yes
1365	"public class A {public void deleteDeviceLogItems(final List<DeviceLogItem> deviceLogItems) {final int size = deviceLogItems.size();final List<Long> ids =deviceLogItems.stream().map(DeviceLogItem::getId).collect(Collectors.toList());final int listSize = ids.size();for (int pageNumber = 0; pageNumber < (listSize + PAGE_SIZE - 1) / PAGE_SIZE; pageNumber++) {final int fromIndex = pageNumber * PAGE_SIZE;final int toIndex = Math.min(listSize, pageNumber * PAGE_SIZE + PAGE_SIZE);final List<Long> sublistToDelete = ids.subList(fromIndex, toIndex);this.deviceLogItemSlicingRepository.deleteBatchById(sublistToDelete);}LOGGER.info(""{} device log items deleted."", size);}}"	No
1366	"public class A {public void activate(final String userHashKey) {log.info(""Activation user with hash key {}"", userHashKey);final User user = userRepository.findByHashKey(userHashKey);if (user == null) {throw new UserActivationException(""Cannot activate user because a hash key is wrong."");}user.activate();userRepository.save(user);}}"	Yes
1367	public class A {@Overridepublic void abortJob(JobContext jobContext, State state) throws IOException {try {if (dynamicPartitioningUsed) {discoverPartitions(jobContext);}org.apache.hadoop.mapred.JobContext mapRedJobContext =HCatMapRedUtil.createJobContext(jobContext);if (getBaseOutputCommitter() != null && !dynamicPartitioningUsed) {getBaseOutputCommitter().abortJob(mapRedJobContext, state);} else if (dynamicPartitioningUsed) {for (JobContext currContext : contextDiscoveredByPath.values()) {try {new JobConf(currContext.getConfiguration()).getOutputCommitter().abortJob(currContext, state);} catch (Exception e) {throw new IOException(e);}}}Path src;OutputJobInfo jobInfo = HCatOutputFormat.getJobInfo(jobContext.getConfiguration());Path tblPath = new Path(jobInfo.getTableInfo().getTableLocation());if (dynamicPartitioningUsed) {if (!customDynamicLocationUsed) {src =new Path(getPartitionRootLocation(jobInfo.getLocation(),jobInfo.getTableInfo().getTable().getPartitionKeysSize()));} else {src = new Path(getCustomPartitionRootLocation(jobInfo, jobContext.getConfiguration()));}} else {src = new Path(jobInfo.getLocation());}FileSystem fs = src.getFileSystem(jobContext.getConfiguration());if (!src.equals(tblPath)) {fs.delete(src, true);}} finally {cancelDelegationTokens(jobContext);}}}	Yes
1368	"public class A {private void removePartition(short partition) {Partition p = partitionMap.remove(partition);if (null != p) {File partitionBase = new File(base, ""index"" + File.separator + partition);if (!partitionBase.renameTo(new File(partitionBase.getParent(), partitionBase.getName() + "".d."" + SystemClock.now()))) {logger.warn(""Rename directory {} failed!"", partitionBase.getAbsolutePath());}}}}"	No
1369	public class A {protected void onLinkDeletePost(final String networkId, final Link link, final HashMap<String, Response> respList) {}}	Yes
1370	"public class A {@ApiOperation(httpMethod = ""GET"",value = ""API to get target types details by name"",response = Response.class,produces = MediaType.APPLICATION_JSON_VALUE)@RequestMapping(path = ""/list-by-target-type-name"",method = RequestMethod.GET,produces = MediaType.APPLICATION_JSON_VALUE)public ResponseEntity<Object> getTargetTypesByName(@ApiParam(value = ""provide valid target type name"", required = true)@RequestParam(defaultValue = """", name = ""targetTypeName"", required = true)String targetTypeName) {try {return ResponseUtils.buildSucessResponse(targetTypesService.getTargetTypesByName(targetTypeName));} catch (Exception exception) {return ResponseUtils.buildFailureResponse(new Exception(UNEXPECTED_ERROR_OCCURRED), exception.getMessage());}}}"	Yes
1371	"public class A {public void attachDirty(SysExportBau instance) {try {sessionFactory.getCurrentSession().saveOrUpdate(instance);log.debug(""attach successful"");} catch (RuntimeException re) {throw re;}}}"	Yes
1372	"public class A {@Overrideprotected Component createFooter(String wicketId) {DelegatedMarkupPanel footer = new DelegatedMarkupPanel(wicketId, getClass());footer.add(new AjaxButton(""save"", form) {private static final long serialVersionUID = 1L;@Overrideprotected void onSubmit(AjaxRequestTarget target) {try {propertyService.setAsString(PropertyIdEditPopup.this.getModelObject(), valueModel.getObject());Session.get().success(getString(""common.propertyId.action.edit.success""));closePopup(target);target.addChildren(getPage(), PropertyIdListPanel.class);} catch (Exception e) {LOGGER.error(""Erreur lors la modification de la valeur d'une propriÃ©tÃ©."");}FeedbackUtils.refreshFeedback(target, getPage());}});BlankLink cancel = new BlankLink(""cancel"");addCancelBehavior(cancel);footer.add(cancel);return footer;}}"	Yes
1373	"public class A {public SpecT configure(Map<?, ?> val) {for (Map.Entry<?, ?> entry : val.entrySet()) {if (entry.getKey() == null) throw new NullPointerException(""Null key not permitted"");if (entry.getKey() instanceof CharSequence)flags.put(entry.getKey().toString(), entry.getValue());else if (entry.getKey() instanceof ConfigKey<?>)config.put((ConfigKey<?>) entry.getKey(), entry.getValue());else if (entry.getKey() instanceof HasConfigKey<?>)config.put(((HasConfigKey<?>) entry.getKey()).getConfigKey(), entry.getValue());else {}}return self();}}"	Yes
1374	"public class A {public static com.liferay.wiki.model.WikiPage updatePage(HttpPrincipal httpPrincipal,long nodeId,String title,double version,String content,String summary,boolean minorEdit,String format,String parentTitle,String redirectTitle,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(WikiPageServiceUtil.class, ""updatePage"", _updatePageParameterTypes47);MethodHandler methodHandler =new MethodHandler(methodKey,nodeId,title,version,content,summary,minorEdit,format,parentTitle,redirectTitle,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.wiki.model.WikiPage) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
1375	"public class A {private String createQueryString(IndexQueryBuilder query,final ElementCategory resultType,final StandardJanusGraphTx transaction,MixedIndexType index) {Preconditions.checkArgument(index.getElement() == resultType,""Index is not configured for the desired result type: %s"",resultType);final String backingIndexName = index.getBackingIndexName();final IndexProvider indexInformation = (IndexProvider) mixedIndexes.get(backingIndexName);final StringBuilder qB = new StringBuilder(query.getQuery());final String prefix = query.getPrefix();Preconditions.checkNotNull(prefix);int replacements = 0;int pos = 0;while (pos < qB.length()) {pos = qB.indexOf(prefix, pos);if (pos < 0) break;final int startPos = pos;pos += prefix.length();final StringBuilder keyBuilder = new StringBuilder();final boolean quoteTerminated = qB.charAt(pos) == '""';if (quoteTerminated) pos++;while (pos < qB.length()&& (Character.isLetterOrDigit(qB.charAt(pos))|| (quoteTerminated && qB.charAt(pos) != '""')|| qB.charAt(pos) == '*')) {keyBuilder.append(qB.charAt(pos));pos++;}if (quoteTerminated) pos++;final int endPos = pos;final String keyName = keyBuilder.toString();Preconditions.checkArgument(StringUtils.isNotBlank(keyName),""Found reference to empty key at position [%s]"",startPos);String replacement;if (keyName.equals(""*"")) {replacement = indexInformation.getFeatures().getWildcardField();} else if (transaction.containsRelationType(keyName)) {final PropertyKey key = transaction.getPropertyKey(keyName);Preconditions.checkNotNull(key);Preconditions.checkArgument(index.indexesKey(key),""The used key [%s] is not indexed in the targeted index [%s]"",key.name(),query.getIndex());replacement = key2Field(index, key);} else {Preconditions.checkArgument(query.getUnknownKeyName() != null,""Found reference to nonexistent property key in query at position [%s]: %s"",startPos,keyName);replacement = query.getUnknownKeyName();}Preconditions.checkArgument(StringUtils.isNotBlank(replacement));qB.replace(startPos, endPos, replacement);pos = startPos + replacement.length();replacements++;}final String queryStr = qB.toString();if (replacements <= 0)return queryStr;}}"	Yes
1376	public class A {public static com.liferay.portal.kernel.model.AddressSoap getAddress(long addressId)throws RemoteException {try {com.liferay.portal.kernel.model.Address returnValue =AddressServiceUtil.getAddress(addressId);return com.liferay.portal.kernel.model.AddressSoap.toSoapModel(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
1377	"public class A {private synchronized void synchronizeMemoryWithFile() {log.debug(""Synchronizing memory archive with file archive."");if (checksumFile.lastModified() > lastModifiedChecksumFile) {log.warn(""Archive in memory out of sync with archive in file."");checksumArchive.clear();loadFile();}}}"	No
1378	"public class A {public boolean registerRqHandler(String pathSpec,Class<? extends SvBusMessage> rqMapping,Class<? extends SvBusMessage> respMapping,SvRequestHandler handler) {boolean res = false;PathSpecification spec = PathSpecification.fromSpecString(pathSpec);if (findHandler(spec.prefix) != null) {log.error(""Request handler for path specification with prefix {} is already registered"",spec.prefix);} else {res = true;HandlerRecord hrec = new HandlerRecord();hrec.pathSpec = pathSpec;hrec.handler = handler;hrec.rqMapping = mapper.constructType(rqMapping);hrec.respMapping = mapper.constructType(respMapping);rqHandlers.putIfAbsent(spec, hrec);}return res;}}"	No
1379	public class A {@Overridepublic void after(Object target, Object[] args, Object result, Throwable throwable) {final InterceptorScopeInvocation transaction = scope.getCurrentInvocation();if (transaction.canLeave(policy)) {interceptor.after(target, args, result, throwable);transaction.leave(policy);} else {if (debugEnabled) {}}}}	Yes
1380	"public class A {@Testpublic void testJournalRolling() throws Exception {if (LOG.isDebugEnabled()) {LOG.debug(""Testing Journal Rolling"");}LedgerHandle[] lhs = writeLedgerEntries(4, 1024, 1024);long[] ledgerIds = new long[lhs.length];for (int i = 0; i < lhs.length; i++) {ledgerIds[i] = lhs[i].getId();}checkpointBookies();for (File journalDir : tmpDirs) {File[] journals = journalDir.listFiles();int numJournals = 0;for (File f : journals) {if (!f.getName().endsWith("".txn"")) {continue;}++numJournals;}assertTrue(numJournals <= 2);}restartBookies();validLedgerEntries(ledgerIds, 1024, 1024);}}"	No
1381	public class A {public static void sendApplicationInstanceActivatedEvent(String appId, String instanceId) {if (log.isInfoEnabled()) {}ApplicationInstanceActivatedEvent applicationActivatedEvent =new ApplicationInstanceActivatedEvent(appId, instanceId);publishEvent(applicationActivatedEvent);}}	Yes
1382	"public class A {public static com.liferay.portal.kernel.model.LayoutSetPrototype fetchLayoutSetPrototype(HttpPrincipal httpPrincipal, long layoutSetPrototypeId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(LayoutSetPrototypeServiceUtil.class,""fetchLayoutSetPrototype"",_fetchLayoutSetPrototypeParameterTypes5);MethodHandler methodHandler = new MethodHandler(methodKey, layoutSetPrototypeId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.kernel.model.LayoutSetPrototype) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
1383	public class A {@Overrideprotected void processEmptyMessage() throws Exception {Exchange exchange = getEndpoint().createExchange();exchange.setProperty(ExchangePropertyKey.BATCH_INDEX, 0);exchange.setProperty(ExchangePropertyKey.BATCH_SIZE, 1);exchange.setProperty(ExchangePropertyKey.BATCH_COMPLETE, true);getProcessor().process(exchange);}}	Yes
1384	"public class A {List<MwDumpFile> findDumpsLocally(DumpContentType dumpContentType) {String directoryPattern = WmfDumpFile.getDumpFileDirectoryName(dumpContentType, ""*"");List<String> dumpFileDirectories;try {dumpFileDirectories = this.dumpfileDirectoryManager.getSubdirectories(directoryPattern);} catch (IOException e) {return Collections.emptyList();}List<MwDumpFile> result = new ArrayList<>();for (String directory : dumpFileDirectories) {String dateStamp =WmfDumpFile.getDateStampFromDumpFileDirectoryName(dumpContentType, directory);if (dateStamp.matches(WmfDumpFileManager.DATE_STAMP_PATTERN)) {WmfLocalDumpFile dumpFile =new WmfLocalDumpFile(dateStamp, this.projectName, dumpfileDirectoryManager, dumpContentType);if (dumpFile.isAvailable()) {result.add(dumpFile);} else {logger.error(""Incomplete local dump file data. Maybe delete ""+ dumpFile.getDumpfileDirectory()+ "" to attempt fresh download."");}}}result.sort(Collections.reverseOrder(new MwDumpFile.DateComparator()));return result;}}"	Yes
1385	"public class A {public SysDatadict findById(sernet.gs.reveng.SysDatadictId id) {log.debug(""getting SysDatadict instance with id: "" + id);try {SysDatadict instance =(SysDatadict) sessionFactory.getCurrentSession().get(""sernet.gs.reveng.SysDatadict"", id);if (instance == null) {log.debug(""get successful, no instance found"");} else {log.debug(""get successful, instance found"");}return instance;} catch (RuntimeException re) {log.error(""get failed"", re);throw re;}}}"	No
1386	"public class A {@Overridepublic void onData(final ByteBuf input) {try {if (isTraceBytes()) {TRACE_BYTES.info(""Received: {}"", ByteBufUtil.hexDump(input));}if (protonTransportErrorHandled) {LOG.trace(""Skipping data processing, proton transport previously errored."");return;}do {ByteBuffer buffer = protonTransport.tail();int chunkSize = Math.min(buffer.remaining(), input.readableBytes());buffer.limit(buffer.position() + chunkSize);input.readBytes(buffer);protonTransport.process();} while (input.isReadable());processUpdates();pumpToProtonTransport();} catch (Throwable t) {LOG.warn(""Caught problem during data processing: {}"", t.getMessage(), t);fireProviderException(ProviderExceptionSupport.createOrPassthroughFatal(t));}}}"	No
1387	"public class A {@BeforeClasspublic static void setup() throws Exception {try {Configuration conf = new Configuration();conf.setBoolean(""mapred.mapper.new-api"", true);conf.setBoolean(AngelConf.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);conf.set(AngelConf.ANGEL_TASK_USER_TASKCLASS, DummyTask.class.getName());conf.set(AngelConf.ANGEL_DEPLOY_MODE, ""LOCAL"");conf.setBoolean(AngelConf.ANGEL_AM_USE_DUMMY_DATASPLITER, true);conf.set(AngelConf.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + ""/out"");conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, LOCAL_FS + TMP_PATH + ""/in"");conf.set(AngelConf.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + ""/log"");conf.setInt(AngelConf.ANGEL_WORKERGROUP_NUMBER, 1);conf.setInt(AngelConf.ANGEL_PS_NUMBER, 1);conf.setInt(AngelConf.ANGEL_WORKER_TASK_NUMBER, 2);conf.setInt(AngelConf.ANGEL_WORKER_HEARTBEAT_INTERVAL_MS, 1000);conf.setInt(AngelConf.ANGEL_PS_HEARTBEAT_INTERVAL_MS, 1000);angelClient = AngelClientFactory.get(conf);MatrixContext mMatrix = new MatrixContext();mMatrix.setName(""w1"");mMatrix.setRowNum(1);mMatrix.setColNum(100000);mMatrix.setMaxRowNumInBlock(1);mMatrix.setMaxColNumInBlock(50000);mMatrix.setRowType(RowType.T_INT_DENSE);mMatrix.set(MatrixConf.MATRIX_OPLOG_ENABLEFILTER, ""false"");mMatrix.set(MatrixConf.MATRIX_HOGWILD, ""true"");mMatrix.set(MatrixConf.MATRIX_AVERAGE, ""false"");mMatrix.set(MatrixConf.MATRIX_OPLOG_TYPE, ""DENSE_INT"");angelClient.addMatrix(mMatrix);MatrixContext mMatrix2 = new MatrixContext();mMatrix2.setName(""w2"");mMatrix2.setRowNum(1);mMatrix2.setColNum(100000);mMatrix2.setMaxRowNumInBlock(1);mMatrix2.setMaxColNumInBlock(50000);mMatrix2.setRowType(RowType.T_DOUBLE_DENSE);mMatrix2.set(MatrixConf.MATRIX_OPLOG_ENABLEFILTER, ""false"");mMatrix2.set(MatrixConf.MATRIX_HOGWILD, ""false"");mMatrix2.set(MatrixConf.MATRIX_AVERAGE, ""false"");mMatrix2.set(MatrixConf.MATRIX_OPLOG_TYPE, ""DENSE_DOUBLE"");angelClient.addMatrix(mMatrix2);angelClient.startPSServer();angelClient.run();Thread.sleep(5000);group0Id = new WorkerGroupId(0);worker0Id = new WorkerId(group0Id, 0);worker0Attempt0Id = new WorkerAttemptId(worker0Id, 0);task0Id = new TaskId(0);task1Id = new TaskId(1);} catch (Exception x) {throw x;}}}"	Yes
1388	"public class A {@Testpublic void testFailoverOnStart() throws Exception {startGrids(4);IgniteBinary binaries = ignite(0).binary();IgniteCache<Object, Object> cache = ignite(0).cache(DEFAULT_CACHE_NAME).withKeepBinary();for (int i = 0; i < 1000; i++) {BinaryObjectBuilder builder = binaries.builder(""type-"" + i);builder.setField(""f0"", i);cache.put(i, builder.build());}client = true;final CyclicBarrier barrier = new CyclicBarrier(6);final AtomicInteger startIdx = new AtomicInteger(4);IgniteInternalFuture<?> fut =GridTestUtils.runMultiThreadedAsync(new Callable<Object>() {@Overridepublic Object call() throws Exception {barrier.await();Ignite ignite = startGrid(startIdx.getAndIncrement());assertTrue(ignite.configuration().isClientMode());log.info(""Started node: "" + ignite.name());return null;}},5,""start-thread"");barrier.await();U.sleep(ThreadLocalRandom.current().nextInt(10, 100));for (int i = 0; i < 3; i++) stopGrid(i);fut.get();assertEquals(6, ignite(3).cluster().nodes().size());for (int i = 3; i < 7; i++) {boolean client = i > 3;assertEquals((Object) client, ignite(i).configuration().isClientMode());binaries = ignite(i).binary();final IgniteBinary p0 = binaries;GridTestUtils.waitForCondition(new GridAbsPredicate() {@Overridepublic boolean apply() {Collection<BinaryType> metaCol = p0.types();return metaCol.size() >= 1000;}},getTestTimeout());Collection<BinaryType> metaCol = binaries.types();assertEquals(1000, metaCol.size());Set<String> names = new HashSet<>();for (BinaryType meta : metaCol) {assertTrue(names.add(meta.typeName()));assertNull(meta.affinityKeyFieldName());assertEquals(1, meta.fieldNames().size());}assertEquals(1000, names.size());}}}"	Yes
1389	public class A {@Overrideprotected String getSEQWARE_PASSWORD() {if (settings.containsKey(SqwKeys.EXTENDED_TEST_DB_PASSWORD.getSettingKey())) {return settings.get(SqwKeys.EXTENDED_TEST_DB_PASSWORD.getSettingKey());}return super.getSEQWARE_PASSWORD();}}	Yes
1390	"public class A {@Overridepublic void doOnConfigured(final AuthorizerConfigurationContext configurationContext)throws SecurityProviderCreationException {final String initialAdminIdentity =AccessPolicyProviderUtils.getInitialAdminIdentity(configurationContext, identityMapper);final Set<String> nifiIdentities =AccessPolicyProviderUtils.getNiFiIdentities(configurationContext, identityMapper);final String nifiGroupName =AccessPolicyProviderUtils.getNiFiGroupName(configurationContext, identityMapper);if (!StringUtils.isBlank(initialAdminIdentity)) {LOGGER.info(""Populating authorizations for Initial Admin: '"" + initialAdminIdentity + ""'"");populateInitialAdmin(initialAdminIdentity);}if (!CollectionUtils.isEmpty(nifiIdentities)) {populateNiFiIdentities(nifiIdentities);}if (!StringUtils.isBlank(nifiGroupName)) {populateNiFiGroup(nifiGroupName);}}}"	Yes
1391	"public class A {public Object transform(Object body) {if (verbose) {System.out.println("">>>> "" + value);}LOG.info("">>>> "" + value);return new StringSource(value);}}"	No
1392	public class A {@Overrideprotected String transform(String value) {String result = PREFIX + URLEncoder.encode(value, StandardCharsets.UTF_8);return result;}}	Yes
1393	"public class A {@Overridepublic String getGID(URL url) throws MalformedURLException {try {return Utils.filesystemSafe(new URI(getTerm(url).replaceAll(""&tags="", """")).getPath());} catch (URISyntaxException ex) {}throw new MalformedURLException(""Expected xbooru.com URL format: ""+ getHost()+ "".com/index.php?tags=searchterm - got ""+ url+ "" instead"");}}"	Yes
1394	public class A {protected void closeStream(FileInputStream fis, InputStreamReader ir, BufferedReader br) {try {if (fis != null) {fis.close();}if (ir != null) {ir.close();}if (br != null) {br.close();}} catch (IOException continued) {}}}	Yes
1395	"public class A {public static TestSuite runTestSuite(String testSuiteFolderPath,String sakuliHomeFolderPath,String browser,String sahiHomeFolder)throws FileNotFoundException {String tempLogCache = """";tempLogCache =SakuliFolderHelper.checkTestSuiteFolderAndSetContextVariables(testSuiteFolderPath, tempLogCache);tempLogCache =SakuliFolderHelper.checkSakuliHomeFolderAndSetContextVariables(sakuliHomeFolderPath, tempLogCache);if (isNotEmpty(sahiHomeFolder)) {tempLogCache =SakuliFolderHelper.checkSahiProxyHomeAndSetContextVariables(sahiHomeFolder, tempLogCache);}if (isNotEmpty(browser)) {tempLogCache = SakuliFolderHelper.setTestSuiteBrowserContextVariable(browser, tempLogCache);}SahiConnector sahiConnector = BeanLoader.loadBean(SahiConnector.class);LOGGER.debug(tempLogCache);InitializingServiceHelper.invokeInitializingServcies();TestSuite result = BeanLoader.loadBean(TestSuite.class);try {sahiConnector.init();sahiConnector.startSahiTestSuite();} catch (SakuliInitException e) {LOGGER.error(""Unexpected error occurred:"", e);System.exit(99);} finally {LOGGER.info(""========== TEAR-DOWN SAKULI TEST SUITE '{}' =========="", result.getId());TeardownServiceHelper.invokeTeardownServices(result, false);result = BeanLoader.loadBean(TestSuite.class);BeanLoader.releaseContext();}return result;}}"	Yes
1396	"public class A {@Overridepublic synchronized int read(ByteBuffer dst) throws IOException {if (!dst.hasRemaining()) {return 0;}if (peerAppData.hasRemaining()) {peerAppData.flip();return ByteBufferUtils.transferByteBuffer(peerAppData, dst);}peerNetData.compact();int bytesRead = socketChannel.read(peerNetData);if (bytesRead > 0 || peerNetData.hasRemaining()) {peerNetData.flip();while (peerNetData.hasRemaining()) {peerAppData.compact();SSLEngineResult result;try {result = engine.unwrap(peerNetData, peerAppData);} catch (SSLException e) {throw e;}switch (result.getStatus()) {case OK:peerAppData.flip();return ByteBufferUtils.transferByteBuffer(peerAppData, dst);case BUFFER_UNDERFLOW:peerAppData.flip();return ByteBufferUtils.transferByteBuffer(peerAppData, dst);case BUFFER_OVERFLOW:peerAppData = enlargeApplicationBuffer(peerAppData);return read(dst);case CLOSED:closeConnection();dst.clear();return -1;default:throw new IllegalStateException(""Invalid SSL status: "" + result.getStatus());}}} else if (bytesRead < 0) {handleEndOfStream();}ByteBufferUtils.transferByteBuffer(peerAppData, dst);return bytesRead;}}"	Yes
1397	"public class A {@Overridepublic void checkForAuthorization(SingularityRequest request,SingularityUser user,SingularityAuthorizationScope scope,Optional<SingularityUserFacingAction> action) {boolean grantedByScopes =checkGrantedByScopes(() -> groupsScopesAuthorizer.checkForAuthorization(request, user, scope));try {groupsAuthorizer.checkForAuthorization(request, user.withOnlyGroups(), scope);} catch (WebApplicationException e) {if (grantedByScopes) {}throw e;}if (!grantedByScopes) {LOG.warn(""Difference in auth of user {} for READ, scopes authorizer: {}, groups authorizer: true,""+ "" user: {}"",user.getId(),grantedByScopes,user);}}}"	Yes
1398	"public class A {@Overridepublic MessageSet move(UserDataRequest udr, MailboxPath srcFolder, MailboxPath dstFolder, MessageSet messages)throws DaoException, MailException, ImapMessageNotFoundException,UnsupportedBackendFunctionException {try {StoreClient store = imapClientProvider.getImapClient(udr);assertMoveItemIsSupported(store);logger.debug(""Moving email, USER:{} UIDs:{} SRC:{} DST:{}"",udr.getUser().getLoginAtDomain(),messages,srcFolder,dstFolder);store.select(srcFolder.getPath());MessageSet newUids = store.uidCopy(messages, dstFolder.getPath());deleteMessage(store, messages);return newUids;} catch (IMAPException e) {throw new MailException(e);} catch (MailboxNotFoundException e) {throw new CollectionNotFoundException(e);} catch (ImapTimeoutException e) {throw new TimeoutException(e);}}}"	No
1399	public class A {@Overridepublic void doFilter(ServletRequest serv, ServletResponse resp, FilterChain chain)throws IOException, ServletException {try {HttpServletRequest request = (HttpServletRequest) serv;SessionBean session = getSession(request);if (session != null && session.getUser() == null) {HttpAuthentication httpAuthentification = new HttpAuthentication(request);if (httpAuthentification.hasLoginInfos()) {session.setUser(httpAuthentification.doLogin());}} else if (session != null && session.getUser() != null) {if (isReloadUser(request, session.getUser())) {session.reloadUser();}}} catch (Exception e) {} finally {chain.doFilter(serv, resp);}}}	Yes
1400	public class A {private void processDeferredValueSets() {int count = Math.min(myDeferredValueSets.size(), 200);for (ValueSet nextValueSet : new ArrayList<>(myDeferredValueSets.subList(0, count))) {myTerminologyVersionAdapterSvc.createOrUpdateValueSet(nextValueSet);myDeferredValueSets.remove(nextValueSet);}}}	Yes
1401	"public class A {public void messageReceived(int senderId, long requestId, int response, boolean shouldDrop) {if (shouldDrop) {synchronized (clientRequestIdRequestInfoMap) {clientRequestIdRequestInfoMap.notifyAll();}return;}AckSignalFlag responseFlag = flowControl.getAckSignalFlag(response);if (responseFlag == AckSignalFlag.DUPLICATE_REQUEST) {LOG.info(""messageReceived: Already completed request (taskId = ""+ senderId+ "", requestId = ""+ requestId+ "")"");} else if (responseFlag != AckSignalFlag.NEW_REQUEST) {throw new IllegalStateException(""messageReceived: Got illegal response "" + response);}RequestInfo requestInfo =clientRequestIdRequestInfoMap.remove(new ClientRequestId(senderId, requestId));if (requestInfo == null) {LOG.info(""messageReceived: Already received response for (taskId = ""+ senderId+ "", requestId = ""+ requestId+ "")"");} else {if (LOG.isDebugEnabled()) {LOG.debug(""messageReceived: Completed (taskId = ""+ senderId+ "")""+ requestInfo+ "".  Waiting on ""+ clientRequestIdRequestInfoMap.size()+ "" requests"");}flowControl.messageAckReceived(senderId, requestId, response);synchronized (clientRequestIdRequestInfoMap) {clientRequestIdRequestInfoMap.notifyAll();}}}}"	No
1402	"public class A {@SuppressWarnings(""unchecked"")@Overridepublic I save(E e) {try {Session session = getCurrentSession();I id = (I) session.save(e);session.flush();session.evict(e);return id;} catch (Exception ex) {logger.error(""Save failed"", ex);throw new HibernateException(""Save failed"");}}}"	No
1403	"public class A {private void handleAnonymousVm(final String vmUuid, final VmInstanceState actualState, VmInstanceState expected) {final VmInstanceVO vm = dbf.findByUuid(vmUuid, VmInstanceVO.class);if (vm == null) {String cachedHostUuid = strangeVms.get(vmUuid);if (cachedHostUuid != null) {logger.debug(String.format(""[Vm Tracer] detects stranger vm[identity:%s, state:%s] but it's already in cache,""+ "" skip firing event"",vmUuid, actualState));return;}strangeVms.put(vmUuid, hostUuid);VmTracerCanonicalEvents.StrangerVmFoundData data =new VmTracerCanonicalEvents.StrangerVmFoundData();data.setVmIdentity(vmUuid);data.setVmState(actualState);data.setHostUuid(hostUuid);evtf.fire(VmTracerCanonicalEvents.STRANGER_VM_FOUND_PATH, data);return;}handleStateChangeOnHostSide(vmUuid, actualState, expected);}}"	Yes
1404	public class A {public DataToSign buildDataToSign()throws SignerCertificateRequiredException, DataFileMissingException {if (signatureParameters.getSigningCertificate() == null) {throw new SignerCertificateRequiredException();}SignatureFinalizer signatureFinalizer = getSignatureFinalizer();byte[] dataToBeSigned = signatureFinalizer.getDataToBeSigned();return new DataToSign(dataToBeSigned, signatureFinalizer);}}	Yes
1405	"public class A {public List findByExample(StgMapMas instance) {log.debug(""finding StgMapMas instance by example"");try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.StgMapMas"").add(Example.create(instance)).list();log.debug(""find by example successful, result size: "" + results.size());return results;} catch (RuntimeException re) {log.error(""find by example failed"", re);throw re;}}}"	No
1406	"public class A {@Overridepublic BaseResult saveAttributes(String organizationId, List<ServiceAttribute> attributeValues, User requestingUser) {try {Query q = em.createNamedQuery(""CustomAttribute.deleteForOrg"");q.setParameter(""oid"", organizationId);q.executeUpdate();CustomAttribute ca;for (ServiceAttribute attr : attributeValues) {ca = new CustomAttribute();ca.setOrganizationId(organizationId);ca.setAttributeKey(attr.getAttributeId());ca.setEncrypted(attr.isEncrypted());ca.setDecryptedValue(attr.getValue());ca.setControllerId(attr.getControllerId());em.persist(ca);}return provResult.newOkBaseResult();} catch (Exception e) {logger.warn(e.getMessage(), e);return provResult.getErrorResult(BaseResult.class, e, getLocale(requestingUser), null, null);}}}"	No
1407	"public class A {public Session getCurrentSession(EntityManager em) {try {return em.unwrap(Session.class);} catch (Exception e) {logger.error(""Error in getCurrentSession()"", e);}return null;}}"	No
1408	"public class A {public static com.liferay.commerce.model.CommerceAddress updateCommerceAddress(HttpPrincipal httpPrincipal,long commerceAddressId,String name,String description,String street1,String street2,String street3,String city,String zip,long regionId,long countryId,String phoneNumber,boolean defaultBilling,boolean defaultShipping,com.liferay.portal.kernel.service.ServiceContext serviceContext)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommerceAddressServiceUtil.class,""updateCommerceAddress"",_updateCommerceAddressParameterTypes23);MethodHandler methodHandler =new MethodHandler(methodKey,commerceAddressId,name,description,street1,street2,street3,city,zip,regionId,countryId,phoneNumber,defaultBilling,defaultShipping,serviceContext);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.model.CommerceAddress) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
1409	public class A {ActionResult<Wo> execute(EffectivePerson effectivePerson, ServletContext servletContext)throws Exception {ActionResult<Wo> result = new ActionResult<>();com.x.base.core.project.Context ctx =(com.x.base.core.project.Context)servletContext.getAttribute(com.x.base.core.project.AbstractContext.class.getName());LoggerFactory.setLevelDebug();result.setData(new Wo(true));return result;}}	Yes
1410	public class A {@Overridepublic void replaceAtomContainer(int position, IAtomContainer container) {super.replaceAtomContainer(position, container);}}	Yes
1411	"public class A {@Overridepublic void initialize() {logger.debug(""initializing bridge handler"");setConfig();InetAddress addr = getAddr();int port = getPort();logger.debug(""bridge handler host {}, port {}"", addr, port);if (addr != null) {nhcComm = new NikoHomeControlCommunication1(this, scheduler);startCommunication();} else {updateStatus(ThingStatus.OFFLINE,ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR,""Cannot resolve bridge IP with hostname "" + config.addr);}}}"	No
1412	"public class A {@SuppressWarnings({""unchecked"", ""rawtypes""})@Overridepublic void prepare(Map conf, TopologyContext context, OutputCollector collector) {super.prepare(conf, context, collector);_collector = collector;try {connection = SolrConnection.getConnection(conf, BOLT_TYPE);} catch (Exception e) {LOG.error(""Can't connect to Solr: {}"", e);throw new RuntimeException(e);}this.eventCounter = context.registerMetric(""SolrIndexerBolt"", new MultiCountMetric(), 10);}}"	No
1413	"public class A {public static Map<String, String> getChannelConfigurationStrings(Channel channel) {Map<String, String> paraNames = new HashMap<>();if (channel.getConfiguration().containsKey(""on"")) {paraNames.put(""on"", channel.getConfiguration().get(""on"").toString());LOGGER.debug(""Added ON: {}"", channel.getConfiguration().get(""on""));}if (channel.getConfiguration().containsKey(""off"")) {paraNames.put(""off"", channel.getConfiguration().get(""off"").toString());}return paraNames;}}"	Yes
1414	"public class A {@Overrideprotected License open(final Local file) {final ReceiptVerifier verifier = new ReceiptVerifier(file);if (verifier.verify(new DisabledLicenseVerifierCallback())) {final Receipt receipt = new Receipt(file, verifier.getGuid());if (log.isInfoEnabled()) {}final Local support = SupportDirectoryFinderFactory.get().find();try {file.copy(LocalFactory.get(support, String.format(""%s.cyberduckreceipt"", receipt.getName())));} catch (AccessDeniedException e) {}return receipt;} else {System.exit(APPSTORE_VALIDATION_FAILURE);return null;}}}"	Yes
1415	public class A {private void setSensor(int mode) {if (streamingSensor != null) {try {streamingSensor.setState(mode);} catch (jmri.JmriException ex) {}}}}	Yes
1416	"public class A {@Overridepublic List<CubeAssignment> getAllCubeAssignments() {try {List<CubeAssignment> cubeAssignmentList = Lists.newArrayList();List<String> cubes = client.getChildren().forPath(cubeRoot);for (String cube : cubes) {String cubeAssignmentPath = getCubeAssignmentPath(cube);if (client.checkExists().forPath(cubeAssignmentPath) != null) {byte[] data = client.getData().forPath(cubeAssignmentPath);CubeAssignment assignment = CubeAssignment.deserializeCubeAssignment(data);cubeAssignmentList.add(assignment);}}readSuccess.getAndIncrement();return cubeAssignmentList;} catch (Exception e) {readFail.getAndIncrement();logger.error(""Error when get assignments"", e);throw new StoreException(e);}}}"	No
1417	"public class A {protected void serveResource(HttpServletRequest request, HttpServletResponse response, boolean content)throws IOException, ServletException {String relativePath = request.getPathInfo();String requestUri = request.getRequestURI();if (relativePath == null || relativePath.length() == 0 || ""/"".equals(relativePath)) {response.sendError(HttpServletResponse.SC_NOT_FOUND, requestUri);return;}File file = new File(base, relativePath);if (!file.exists() || !file.isFile()) {response.sendError(HttpServletResponse.SC_NOT_FOUND, requestUri);return;}String contentType = getServletContext().getMimeType(file.getName());if (contentType == null) {contentType = ""application/octet-stream"";}response.setContentType(contentType);response.setHeader(""Content-Length"", String.valueOf(file.length()));ServletOutputStream outputStream = response.getOutputStream();FileInputStream fileInputStream = new FileInputStream(file);try {IOUtils.copy(fileInputStream, outputStream);} catch (IOException e) {throw e;} finally {fileInputStream.close();outputStream.close();}}}"	Yes
1418	public class A {private void setTempParam(AbstractDevice device) {NumericValueParam valueParam =(NumericValueParam) device.getParams().get(ParamType.TEMPERATURE_VALUE);if (valueParam == null) {return;}NumericValueParam tempParam =new NumericValueParam(ParamType.TEMPERATURE_DUAL, valueParam.getUnit(), null);tempParam.setValue(valueParam.getValue());addParam(tempParam);}}	Yes
1419	public class A {@Overridepublic void debug(String msg) {for (Logger logger : this.loggers) {logger.debug(msg);}}}	No
1420	"public class A {@SuppressWarnings(""unchecked"")protected void onUpdated() {try {Object v = computing.apply(producer.getAttribute(sourceSensor));if (v == null && Boolean.TRUE.equals(removingIfResultIsNull)) {v = Entities.REMOVE;}if (v == Entities.UNCHANGED) {} else {TKey key = this.key;if (key == null) key = (TKey) sourceSensor.getName();ServiceStateLogic.updateMapSensorEntry(entity, targetSensor, key, (TVal) v);}} catch (Throwable t) {throw Exceptions.propagate(t);}}}"	Yes
1421	"public class A {public void set(SimulatedField field, PlcValue value) {Objects.requireNonNull(field);switch (field.getType()) {case STATE:changeOfStateSubscriptions.values().stream().filter(pair -> pair.getKey().equals(field)).map(Pair::getValue).forEach(baseDefaultPlcValueConsumer -> baseDefaultPlcValueConsumer.accept(value));state.put(field, value);return;case STDOUT:logger.info(""TEST PLC STDOUT [{}]: {}"", field.getName(), value.getString());return;case RANDOM:switch (field.getPlcDataType()) {case ""STRING"":case ""WSTRING"":break;default:try {DataItemIO.staticSerialize(value, field.getPlcDataType(), field.getNumberOfElements(), false);} catch (ParseException e) {logger.info(""Write failed"");}}logger.info(""TEST PLC RANDOM [{}]: {}"", field.getName(), value.toString());return;}throw new IllegalArgumentException(""Unsupported field type: "" + field.getType().name());}}"	No
1422	"public class A {@Overridepublic boolean canHandle(ActionParameter actionParameter) {if (actionParameter.getExpression() == null) {return false;}final RhinoSandbox sandbox = RhinoSandboxes.create();try {String varName = actionParameter.getColumn();if (actionParameter.getInputData() == null) {return false;} else {if (actionParameter.getInputData() instanceof Number) {return (Boolean)sandbox.eval(null,actionParameter.getInputData().toString() + actionParameter.getExpression());} else if (actionParameter.getInputData() instanceof Date) {varName = actionParameter.getColumn() + ""Date"";} else {varName = actionParameter.getColumn() + ""String"";}Map<String, Object> values = new HashMap<String, Object>();values.put(varName, actionParameter.getInputData());return (Boolean) sandbox.eval(null, """" + varName + actionParameter.getExpression(), values);}} catch (EcmaError e) {}return false;}}"	Yes
1423	"public class A {private void deleteFileFromFileStore(FileMeta fileMeta) {try {fileStore.delete(fileMeta.getId());} catch (UncheckedIOException e) {LOG.warn(""Could not delete file '{}' from file store"", fileMeta.getId());}}}"	No
1424	public class A {public void debug(String arg0, Object arg1, Object arg2) {log.debug(format(arg0, arg1, arg2));}}	No
1425	"public class A {@Overridepublic CallableResult call() throws Exception {final String sortedFiles = outputDir + SORTED;if (!groupsWithAggregation.contains(group)) {LOGGER.info(""Sorting data for group {} and id {} ({} input files, results will be stored in {})"",group,id,files.size(),sortedFiles);new SortGroupSplit(fs,sparkSession,schemaUtils.columnsToSortBy(group, reversed),files,sortedFiles,compressionCodecName).call();} else {final String aggregatedFiles = outputDir + AGGREGATED;final CallableResult result =new AggregateDataForGroup(fs, schemaUtils, group, files, aggregatedFiles, sparkSession).call();if (null != result) {LOGGER.info(""Sorting aggregated data for group {} and id {} (results will be written to {})"",group,id,sortedFiles);new SortGroupSplit(fs,sparkSession,schemaUtils.columnsToSortBy(group, reversed),aggregatedFiles,sortedFiles,compressionCodecName).call();fs.delete(new Path(aggregatedFiles), true);} else {}}if (fs.exists(new Path(sortedFiles))) {LOGGER.info(""Moving files of sorted data from {} to {} (group {}, id {})"",sortedFiles,outputDir,group,id);final FileStatus[] files = fs.listStatus(new Path(sortedFiles));for (final FileStatus file : files) {final Path newPath = new Path(outputDir, file.getPath().getName());fs.rename(file.getPath(), newPath);}} else {}return CallableResult.SUCCESS;}}"	Yes
1426	"public class A {public ScriptParams withOverrides(Object overrides) {Map<String, String> map;if (overrides instanceof Map) {map = (Map) overrides;} else if (overrides instanceof Value) {Value v = (Value) overrides;map = v.as(Map.class);} else {throw new RuntimeException(""Unrecognized overrides type: "" + overrides.getClass().getCanonicalName());}if (overrides == null) {overrides = Map.of();}checkForNulls(""params"", ""calling withOverrides"", this);checkForNulls(""overrides"", ""calling withOverrides"", map);ScriptParams result = new ScriptParams();result.putAll(this);for (Entry<String, String> overrideEntry : map.entrySet()) {String oKey = overrideEntry.getKey();String oVal = overrideEntry.getValue();if (oVal.toUpperCase().endsWith(""UNDEF"") || oVal.toUpperCase(Locale.ROOT).endsWith(""UNSET"")) {String removed = result.remove(oKey);} else {String was = result.get(oKey);was = (was == null ? ""NULL"" : was);result.put(oKey, oVal);}}ScriptParams p = new ScriptParams();p.putAll(result);return p;}}"	Yes
1427	"public class A {@Overridepublic AnswerItem<TestCaseExecutionQueue> create(TestCaseExecutionQueue object,boolean withNewDep,long exeQueueId,TestCaseExecutionQueue.State targetState) {LOG.debug(""Creating Queue entry : ""+ object.getId()+ "" From : ""+ exeQueueId+ "" targetState : ""+ targetState.toString());tagSystemService.createIfNotExist(object.getTag(), object.getSystem(), object.getUsrCreated());AnswerItem<TestCaseExecutionQueue> ret;if (StringUtil.isNullOrEmpty(object.getTag())) {ret = testCaseExecutionInQueueDAO.create(object);} else {if (withNewDep) {object.setState(TestCaseExecutionQueue.State.QUWITHDEP);ret = testCaseExecutionInQueueDAO.create(object);if (ret.getItem() != null) {long insertedQueueId = ret.getItem().getId();AnswerItem<Integer> retDep =testCaseExecutionQueueDepService.insertFromTestCaseDep(insertedQueueId,object.getEnvironment(),object.getCountry(),object.getTag(),object.getTest(),object.getTestCase());if (retDep.getItem() < 1) {updateToState(insertedQueueId, """", targetState);} else {object.setPriority(TestCaseExecutionQueue.PRIORITY_WHENDEPENDENCY);updatePriority(insertedQueueId, TestCaseExecutionQueue.PRIORITY_WHENDEPENDENCY);}}} else {object.setState(targetState);ret = testCaseExecutionInQueueDAO.create(object);if (ret.getItem() != null) {long insertedQueueId = ret.getItem().getId();AnswerItem<Integer> retDep =testCaseExecutionQueueDepService.insertFromExeQueueIdDep(insertedQueueId, exeQueueId);LOG.debug(""Dep inserted from old entries : "" + retDep.getItem());}}}return ret;}}"	Yes
1428	"public class A {private void initialiseRefDataWriter() {try {final String filename = mConfig.OutputDir + REF_FILE_SIG_PERC;mRefDataWriter = createBufferedWriter(filename, false);mRefDataWriter.write(""CancerType,DataType"");for (int i = 0; i < PERCENTILE_COUNT; ++i) {mRefDataWriter.write(String.format("",Pct_%.2f"", i * 0.01));}mRefDataWriter.newLine();} catch (IOException e) {}}}"	Yes
1429	public class A {public void setLastName(String value) {if (_Employee.LOG.isDebugEnabled()) {}takeStoredValueForKey(value, _Employee.LAST_NAME_KEY);}}	Yes
1430	"public class A {protected IDPSSODescriptor buildIDPSSODescriptor(String entityBaseURL,String entityAlias,boolean wantAuthnRequestSigned,Collection<String> includedNameID) {@SuppressWarnings(""unchecked"")SAMLObjectBuilder<IDPSSODescriptor> builder =(SAMLObjectBuilder<IDPSSODescriptor>)builderFactory.getBuilder(IDPSSODescriptor.DEFAULT_ELEMENT_NAME);IDPSSODescriptor idpDescriptor = builder.buildObject();idpDescriptor.setWantAuthnRequestsSigned(wantAuthnRequestSigned);idpDescriptor.addSupportedProtocol(SAMLConstants.SAML20P_NS);idpDescriptor.getNameIDFormats().addAll(getNameIDFormat(includedNameID));Collection<String> bindingsSSO = mapAliases(getBindingsSSO());Collection<String> bindingsSLO = mapAliases(getBindingsSLO());for (String binding : bindingsSSO) {if (binding.equals(SAMLConstants.SAML2_POST_BINDING_URI)) {idpDescriptor.getSingleSignOnServices().add(getSingleSignOnService(entityBaseURL,entityAlias,getSAMLWebSSOProcessingFilterPath(),SAMLConstants.SAML2_POST_BINDING_URI));}if (binding.equals(SAMLConstants.SAML2_REDIRECT_BINDING_URI)) {idpDescriptor.getSingleSignOnServices().add(getSingleSignOnService(entityBaseURL,entityAlias,getSAMLWebSSOProcessingFilterPath(),SAMLConstants.SAML2_REDIRECT_BINDING_URI));}}for (String binding : bindingsSLO) {if (binding.equals(SAMLConstants.SAML2_POST_BINDING_URI)) {idpDescriptor.getSingleLogoutServices().add(getSingleLogoutService(entityBaseURL, entityAlias, SAMLConstants.SAML2_POST_BINDING_URI));}if (binding.equals(SAMLConstants.SAML2_REDIRECT_BINDING_URI)) {idpDescriptor.getSingleLogoutServices().add(getSingleLogoutService(entityBaseURL, entityAlias, SAMLConstants.SAML2_REDIRECT_BINDING_URI));}if (binding.equals(SAMLConstants.SAML2_SOAP11_BINDING_URI)) {idpDescriptor.getSingleLogoutServices().add(getSingleLogoutService(entityBaseURL, entityAlias, SAMLConstants.SAML2_SOAP11_BINDING_URI));}}Extensions extensions = buildExtensions(entityBaseURL, entityAlias);if (extensions != null) {idpDescriptor.setExtensions(extensions);}String signingKey = getSigningKey();String encryptionKey = getEncryptionKey();String tlsKey = getTLSKey();if (signingKey != null) {idpDescriptor.getKeyDescriptors().add(getKeyDescriptor(UsageType.SIGNING, getServerKeyInfo(signingKey)));} else {log.info(""Generating metadata without signing key, KeyStore doesn't contain any default private""+ "" key, or the signingKey specified in ExtendedMetadata cannot be found"");}if (encryptionKey != null) {idpDescriptor.getKeyDescriptors().add(getKeyDescriptor(UsageType.ENCRYPTION, getServerKeyInfo(encryptionKey)));} else {log.info(""Generating metadata without encryption key, KeyStore doesn't contain any default private""+ "" key, or the encryptionKey specified in ExtendedMetadata cannot be found"");}if (tlsKey != null && !(tlsKey.equals(encryptionKey)) && !(tlsKey.equals(signingKey))) {idpDescriptor.getKeyDescriptors().add(getKeyDescriptor(UsageType.UNSPECIFIED, getServerKeyInfo(tlsKey)));}return idpDescriptor;}}"	No
1431	public class A {private boolean testForDuplicateSize(SearchResultItem result1, SearchResultItem result2, float duplicateSizeDifference) {if (result1.getSize() == null || result2.getSize() == null) {return false;}long sizeDifference = Math.abs(result1.getSize() - result2.getSize());float sizeAverage = (result1.getSize() + result2.getSize()) / 2F;float sizeDiffPercent = Math.abs(sizeDifference / sizeAverage) * 100;boolean sameSize = sizeDiffPercent <= duplicateSizeDifference;return sameSize;}}	Yes
1432	"public class A {@Overridepublic void replicateCollectionAsynchronously(final String irodsCollectionAbsolutePath, final String resourceName, final int delayInMinutes)throws JargonException {if (irodsCollectionAbsolutePath == null || irodsCollectionAbsolutePath.isEmpty()) {throw new IllegalArgumentException(""null or empty irodsCollectionAbsolutePath"");}if (resourceName == null || resourceName.isEmpty()) {throw new IllegalArgumentException(""null or empty resourceName"");}if (delayInMinutes <= 0) {throw new IllegalArgumentException(""delay in minutes must be > 0"");}if (!getIRODSServerProperties().isTheIrodsServerAtLeastAtTheGivenReleaseVersion(""rods3.0"")) {throw new JargonException(""service not available on servers prior to rods3.0"");}RuleProcessingAO ruleProcessingAO =getIRODSAccessObjectFactory().getRuleProcessingAO(getIRODSAccount());List<IRODSRuleParameter> irodsRuleParameters = new ArrayList<IRODSRuleParameter>();irodsRuleParameters.add(new IRODSRuleParameter(""*SourceFile"", MiscIRODSUtils.wrapStringInQuotes(irodsCollectionAbsolutePath)));irodsRuleParameters.add(new IRODSRuleParameter(""*Resource"", MiscIRODSUtils.wrapStringInQuotes(resourceName)));irodsRuleParameters.add(new IRODSRuleParameter(""*DelayInfo"", RuleUtils.buildDelayParamForMinutes(delayInMinutes)));RuleInvocationConfiguration ruleInvocationConfiguration =RuleInvocationConfiguration.instanceWithDefaultAutoSettings(getJargonProperties());ruleInvocationConfiguration.setRuleProcessingType(RuleProcessingType.EXTERNAL);IRODSRuleExecResult result =ruleProcessingAO.executeRuleFromResource(""/rules/rulemsiCollReplAsync.r"", irodsRuleParameters, ruleInvocationConfiguration);}}"	Yes
1433	"public class A {public static void main(String[] args) throws IOException {CommandLine line;Options options = new Options();Options helpOptions = new Options();setupOptions(options, helpOptions);CommandLineParser parser = new DefaultParser();try {line = parser.parse(helpOptions, args);if (line.hasOption('h')) {HelpFormatter formatter = new HelpFormatter();formatter.printHelp(ProviderApplication.class.getName(), options, true);System.exit(0);}} catch (ParseException e) {}try {line = parser.parse(options, args);if (line.hasOption('d')) {providerDomain = line.getOptionValue('d');}if (line.hasOption('g')) {gbidsParameter = line.getOptionValue('g');}if (line.hasOption('G')) {globalOnly = true;logger.info(""globalOnly = "" + globalOnly);}if (line.hasOption('f')) {expectedFailure = true;}} catch (ParseException e) {HelpFormatter formatter = new HelpFormatter();formatter.printHelp(ProviderApplication.class.getName(), options, true);System.exit(1);}if (!gbidsParameter.isEmpty()) {gbids = Arrays.stream(gbidsParameter.split("","")).map(a -> a.trim()).toArray(String[]::new);logger.debug(""Searching for providers on domain \""{}\"", gbids \""{}\"""", providerDomain, gbids);} else {gbids = new String[0];logger.debug(""Searching for providers on domain \""{}\"""", providerDomain);}Properties joynrConfig = new Properties();Module runtimeModule = getRuntimeModule(args, joynrConfig);logger.debug(""Searching for providers on domain \""{}\"""", providerDomain);joynrConfig.setProperty(MessagingPropertyKeys.PERSISTENCE_FILE, STATIC_PERSISTENCE_FILE);joynrConfig.setProperty(PROPERTY_JOYNR_DOMAIN_LOCAL, providerDomain);Properties appConfig = new Properties();appConfig.setProperty(SYSTEMINTEGRATIONTEST_PROVIDER_DOMAIN, providerDomain);JoynrApplication myConsumerApp =new JoynrInjectorFactory(joynrConfig, runtimeModule).createApplication(new JoynrApplicationModule(ConsumerApplication.class, appConfig));myConsumerApp.run();myConsumerApp.shutdown();}}"	Yes
1434	"public class A {@Overridepublic DeleteResult execute(Delete delete, DocumentFactory factory) {try {final StopWatch elapsedTime = StopWatch.createStarted();final QueryBuilder deleteQuery =ElasticQueryBuilder.buildFilterQuery(delete.getQuery(), factory, delete.getUpdateContext(), this.currentFootprint);final BulkByScrollResponse response = elasticSearchClient.deleteByQuery(deleteQuery);if (response.getBulkFailures().size() > 0) {final List<String> failureMessages =response.getBulkFailures().stream().map(Failure::getMessage).collect(Collectors.toList());throw new SearchServerException(""Cannot delete ""+ failureMessages.size()+ ""documents: ""+ String.join("" - "", failureMessages));}elapsedTime.stop();return new DeleteResult(response.getTook().getMillis()).setElapsedTime(elapsedTime.getTime());} catch (ElasticsearchException | IOException e) {throw new SearchServerException(String.format(""Cannot delete with query %s"", delete.getQuery().toString()), e);}}}"	Yes
1435	"public class A {@Overridepublic void testConnection(Connection conn) throws SQLException {Statement testStatement = null;try {testStatement = conn.createStatement();testStatement.execute(""SELECT 1 FROM DUAL"");} finally {if (testStatement != null) {try {testStatement.close();} catch (Exception e) {LOG.error(""Failed to close the connection"", e);}}}}}"	No
1436	"public class A {@Overridepublic Iterator<Container> iterator() {return new Iterator<Container>() {@Overridepublic boolean hasNext() {return pathIterator.hasNext();}@Overridepublic Container next() {Path next = pathIterator.next();Container ret;try {ret = convertPathToContainer(basePath, next);} catch (NoSuchElementException | GenericException | RequestNotValidException e) {LOGGER.error(""Error while listing containers, while parsing resource "" + next, e);ret = null;}return ret;}};}}"	No
1437	"public class A {public void validateImageFormat(byte[] bytes) throws ImageFormatException {Validate.notNull(bytes, ""Incoming byte array cannot be null"");Tika tika = new Tika();InputStream input = new ByteArrayInputStream(bytes);try {String type = tika.detect(input);if (!VALID_IMAGE_TYPES.contains(type)) {throw new ImageFormatException(VALID_IMAGE_EXTENSIONS);}} catch (IOException e) {}}}"	Yes
1438	"public class A {@GET@Produces(""text/html"")@Path(value = ""start/{pkgId}"")public Object startInstall(@PathParam(""pkgId"") String pkgId, @QueryParam(""source"") String source) {try {PackageUpdateService pus = Framework.getLocalService(PackageUpdateService.class);pus.removePackage(pkgId);return getView(""removeDone"").arg(""pkgId"", pkgId).arg(""source"", source);} catch (Exception e) {return getView(""removeError"").arg(""e"", e);}}}"	Yes
1439	"public class A {@Overridepublic void registerExtension(Extension extension) throws Exception {ExtensionPoint xp = ri.getExtensionPoint(extension.getExtensionPoint());if (xp != null) {String superCo = xp.getSuperComponent();if (superCo != null) {((ExtensionImpl) extension).target = new ComponentName(superCo);ri.manager.registerExtension(extension);return;}} else {Framework.handleDevError(null);}if (instance instanceof Component) {((Component) instance).registerExtension(extension);} else {try {Method meth = instance.getClass().getDeclaredMethod(""registerExtension"", Extension.class);meth.setAccessible(true);meth.invoke(instance, extension);} catch (Exception e) {Framework.handleDevError(e);}}}}"	Yes
1440	"public class A {public int createOrganization(String orgId, String orgName) throws PSQLException {int recordId = 0;try (PreparedStatement query =getConn(""config"").prepareStatement(""SELECT count(id) FROM organizations WHERE orgId = ?"")) {query.setString(1, orgId);if (query.execute()) {try (PreparedStatement insertOrg =getConn(""config"").prepareStatement(""INSERT INTO organizations (orgId, orgName) VALUES (?,?)"")) {insertOrg.setString(1, orgId);insertOrg.setString(2, orgName);if (insertOrg.execute()) {try (ResultSet rs = insertOrg.getGeneratedKeys()) {if (rs.next()) {recordId = rs.getInt(1);}}}}}} catch (PSQLException pe) {ServerErrorMessage em = pe.getServerErrorMessage();if (!em.getConstraint().equals(""unique_organizations"")) {throw pe;}} catch (Exception e) {logger.warn(String.format(""%s"", LogUtil.getStackTrace(e)));} finally {closeConfig();}return recordId;}}"	Yes
1441	"public class A {public void run() throws IOException, InterruptedException {connectToRing();addShutdownHook();setStateSynchronized(HostState.IDLE);addServerOfflineWatcher();while (host.getState() != HostState.IDLE) {Thread.sleep(100);}processCommandOnStartup();while (!stopping) {try {HostCommand command = commandQueue.poll(MAIN_THREAD_STEP_SLEEP_MS, TimeUnit.MILLISECONDS);if (command != null) {try {processCommand(command, host.getState());} catch (IOException e) {break;}}} catch (InterruptedException e) {break;}}LOG.info(""Partition server main thread is stopping."");stopServingData();stopUpdating();setStateSynchronized(HostState.OFFLINE);removeShutdownHook();coordinator.close();}}"	Yes
1442	"public class A {@Overridepublic void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)throws IOException, ServletException {String sourceHost = ((HttpServletRequest) request).getHeader(""Origin"");String origin = """";try {if (SecurityUtils.isValidOrigin(sourceHost, ZeppelinConfiguration.create())) {origin = sourceHost;}} catch (URISyntaxException e) {LOGGER.error(""Exception in WebDriverManager while getWebDriver "", e);}if (((HttpServletRequest) request).getMethod().equals(""OPTIONS"")) {HttpServletResponse resp = ((HttpServletResponse) response);addCorsHeaders(resp, origin);return;}if (response instanceof HttpServletResponse) {HttpServletResponse alteredResponse = ((HttpServletResponse) response);addCorsHeaders(alteredResponse, origin);}filterChain.doFilter(request, response);}}"	No
1443	"public class A {private void loadCertFromData() throws CertificateException {X509Certificate cert = null;CertContainer container = null;Key key = null;try {validate();try {container = toCredential();cert = container.getCert();key = container.getKey();} catch (CertificateException e) {LOG.warn(""Cert Container conversion failed: "" + e.getLocalizedMessage(), e);}if (cert == null) {setThumbprint("""");} else {setThumbprint(Thumbprint.toThumbprint(cert).toString());setPrivateKey(key != null);}} catch (Exception e) {setData(NULL_CERT);throw new CertificateException(""Data cannot be converted to a valid X.509 Certificate or IPKIX URL"", e);}}}"	No
1444	"public class A {@Overrideprotected void incrByte() {try {readByteOffset++;offset++;if (readByteOffset == size) {readByteOffset = 0;readFully(channel, buf, offset);}byteRead = inBuffer[readByteOffset];} catch (IOException ioe) {logger.error(""Input/Output exception while reading from a random access file. Stack trace follows"",ioe);}}}"	No
1445	"public class A {public boolean removeAcls(scala.collection.immutable.Set<Acl> acls, final Resource resource) {verifyAcls(acls);LOG.info(""Removing Acl: acl->"" + acls + "" resource->"" + resource);final Iterator<Acl> iterator = acls.iterator();while (iterator.hasNext()) {final Acl acl = iterator.next();final String role = getRole(acl);try {execute(new Command<Void>() {@Overridepublic Void run(SentryGenericServiceClient client) throws Exception {client.dropPrivilege(requestorName, role, toTSentryPrivilege(acl, resource));return null;}});} catch (KafkaException kex) {return false;}}return true;}}"	Yes
1446	public class A {private boolean cpeIdentifiersMatch(Dependency dependency1, Dependency dependency2) {if (dependency1 == null|| dependency1.getVulnerableSoftwareIdentifiers() == null|| dependency2 == null|| dependency2.getVulnerableSoftwareIdentifiers() == null) {return false;}boolean matches = false;final int cpeCount1 = dependency1.getVulnerableSoftwareIdentifiers().size();final int cpeCount2 = dependency2.getVulnerableSoftwareIdentifiers().size();if (cpeCount1 > 0 && cpeCount1 == cpeCount2) {for (Identifier i : dependency1.getVulnerableSoftwareIdentifiers()) {matches |= dependency2.getVulnerableSoftwareIdentifiers().contains(i);if (!matches) {break;}}}return matches;}}	Yes
1447	"public class A {@Overridepublic boolean hasNext() {if (nextAvailableIsKnown) {return hasNext;}hasNext = false;nextMolecule = null;try {currentFormat = (IChemFormat) MDLFormat.getInstance();int lineNum = 0;buffer.setLength(0);while ((currentLine = input.readLine()) != null) {buffer.append(currentLine).append(LINE_SEPARATOR);lineNum++;if (lineNum == 4) {Matcher versionMatcher = MDL_VERSION.matcher(currentLine);if (versionMatcher.find()) {currentFormat =""2000"".equals(versionMatcher.group(1))? (IChemFormat) MDLV2000Format.getInstance(): (IChemFormat) MDLV3000Format.getInstance();}}if (currentLine.startsWith(M_END)) {IAtomContainer molecule = null;try {ISimpleChemObjectReader reader = getReader(currentFormat);reader.setReader(new StringReader(buffer.toString()));molecule = reader.read(builder.newAtomContainer());} catch (Exception exception) {}if (molecule != null) {readDataBlockInto(molecule);hasNext = true;nextAvailableIsKnown = true;nextMolecule = molecule;return true;} else if (skip) {String line;while ((line = input.readLine()) != null) {if (line.startsWith(SDF_RECORD_SEPARATOR)) {break;}}} else {return false;}buffer.setLength(0);lineNum = 0;}if (currentLine.startsWith(SDF_RECORD_SEPARATOR)) {buffer.setLength(0);lineNum = 0;}}} catch (IOException exception) {}return false;}}"	Yes
1448	"public class A {<T extends BrokerPoolService> T register(final T brokerPoolService) {final ManagerState currentState = states.getCurrentState();if (currentState != ManagerState.REGISTRATION) {throw new IllegalStateException(""Services may only be registered during the registration state. Current state is: ""+ currentState.name());}brokerPoolServices.add(brokerPoolService);if (LOG.isTraceEnabled()) {}return brokerPoolService;}}"	Yes
1449	"public class A {public Optional<Throwable> execFor(HapiApiSpec spec) {pauseIfRequested();configureProtoStructureFor(spec);try {boolean hasCompleteLifecycle = submitOp(spec);if (!(this instanceof UtilOp)) {spec.incrementNumLedgerOps();}if (shouldRegisterTxn) {registerTxnSubmitted(spec);}if (hasCompleteLifecycle) {assertExpectationsGiven(spec);updateStateOf(spec);}} catch (Throwable t) {if (unavailableNode && t.getMessage().startsWith(""UNAVAILABLE"")) {return Optional.empty();}if (verboseLoggingOn) {log.warn(spec.logPrefix() + this + "" failed - {}"", t);} else if (!loggingOff) {log.warn(spec.logPrefix() + this + "" failed {}!"", t.getMessage());}return Optional.of(t);}if (unavailableNode) {String message =String.format(""Node %s is NOT unavailable as expected!!!"",HapiPropertySource.asAccountString(node.get()));return Optional.of(new RuntimeException(message));}return Optional.empty();}}"	Yes
1450	"public class A {public String save() {try {String result = this.checkUser();if (null != result) return result;if (!this.checkAuthorizationSessionBean()) {return USER_LIST;}UserAuthsFormBean authsBean = this.getUserAuthsFormBean();this.getAuthorizationManager().updateUserAuthorizations(username, authsBean.getAuthorizations());this.getRequest().getSession().removeAttribute(CURRENT_FORM_USER_AUTHS_PARAM_NAME);} catch (Throwable t) {logger.error(""error in save"", t);return FAILURE;}return SUCCESS;}}"	No
1451	"public class A {public void init(String[] args) {initLogger();conf = loadConfig(args);conf.startCleanup();LOG.debug(""Loaded conf "" + conf);}}"	No
1452	"public class A {public ModelAndView authorizeCallback(HttpSession session,String said,String adapterId,String oauthToken,String verifierString) {String error = UNKNOWN_ERROR;try {if (!pending.containsKey(adapterId)) {error = PENDING_ADAPTER_NOT_FOUND.replace(""%s"", adapterId);logger.error(error);} else {ServiceAdapterHolder holder = pending.get(adapterId);OAuthService oAuthService = holder.getService();Token requestToken = holder.getRequestToken();Verifier verifier = new Verifier(verifierString);Token accessToken = oAuthService.getAccessToken(requestToken, verifier);T serviceAdapter = holder.getAdapter();serviceAdapter.setAccessToken(accessToken);Tenant tenant = tenantManager.getByAccountName(said);if (tenant == null) {error = UNKNOWN_TENANT_ERROR;} else {TenantContextHolder.setTenant(tenant.getId());accountManager.add(serviceAdapter);this.pending.remove(adapterId, serviceAdapter);return new ModelAndView(""close_window"");}}} catch (OAuthException e) {error = ""Authentication error. OAuthException: "" + e.getMessage();logger.error(error, e);} catch (InfosphereException e) {error = ""Could not create account: "" + e.getMessage();logger.error(error, e);} catch (ServiceAdapterNotSupportedException e) {error = ""Could not create account: "" + e.getMessage();logger.error(error, e);} catch (IllegalArgumentException e) {error = ""Illegal Argument Exception: "" + e.getMessage();logger.error(error, e);}ModelAndView modelAndView = new ModelAndView(""ajax_result"");modelAndView.addObject(""result"", error);return modelAndView;}}"	No
1453	"public class A {@Overridepublic Note get(String noteId, String revId, AuthenticationInfo subject) {Note revisionNote = null;try {revisionNote = getRepo(0).get(noteId, revId, subject);} catch (IOException e) {LOG.error(""Failed to get revision {} of note {}"", revId, noteId, e);}return revisionNote;}}"	No
1454	"public class A {@Testpublic void testCreateTriggersMultipleTimesWhileInserting() throws InterruptedException {startDataGenerator();try (Connection connection =DriverManager.getConnection(Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");Statement statement = connection.createStatement()) {Thread.sleep(500);statement.execute(""create trigger trigger-1 before insert on root.vehicle.d1.s1 as""+ "" \""org.apache.iotdb.db.engine.trigger.example.Counter\"""");statement.execute(""create trigger trigger-2 after insert on root.vehicle.d1.s2 as""+ "" \""org.apache.iotdb.db.engine.trigger.example.Counter\"""");statement.execute(""create trigger trigger-3 before insert on root.vehicle.d1.s3 as""+ "" \""org.apache.iotdb.db.engine.trigger.example.Counter\"""");Thread.sleep(500);int[] counters1 = getCounters(3);for (int i = 0; i < 3; ++i) {assertTrue(Counter.BASE < counters1[i]);}Thread.sleep(500);statement.execute(""create trigger trigger-4 after insert on root.vehicle.d1.s4 as""+ "" \""org.apache.iotdb.db.engine.trigger.example.Counter\"""");statement.execute(""create trigger trigger-5 before insert on root.vehicle.d1.s5 as""+ "" \""org.apache.iotdb.db.engine.trigger.example.Counter\"""");statement.execute(""create trigger trigger-6 after insert on root.vehicle.d1.s6 as""+ "" \""org.apache.iotdb.db.engine.trigger.example.Counter\"""");int[] counters2 = getCounters(3);LOGGER.info(Arrays.toString(counters2));for (int i = 0; i < 3; ++i) {assertTrue(counters1[i] < counters2[i]);}} catch (SQLException | TriggerManagementException e) {fail(e.getMessage());}stopDataGenerator();}}"	Yes
1455	"public class A {@Overridepublic void serialEvent(@Nullable SerialPortEvent seEvent) {if (seEvent == null) {return;}if (logger.isTraceEnabled() && SerialPortEvent.DATA_AVAILABLE != seEvent.getEventType()) {}try {switch (seEvent.getEventType()) {case SerialPortEvent.DATA_AVAILABLE:handleDataAvailable();break;case SerialPortEvent.BI:handleErrorEvent(""Break interrupt"", seEvent);break;case SerialPortEvent.FE:handleErrorEvent(""Frame error"", seEvent);break;case SerialPortEvent.OE:handleErrorEvent(""Overrun error"", seEvent);break;case SerialPortEvent.PE:handleErrorEvent(""Parity error"", seEvent);break;default:}} catch (RuntimeException e) {}}}"	Yes
1456	"public class A {public void scanNotActiveChannel() {Iterator<Entry<String, ConsumerGroupInfo>> it = this.consumerTable.entrySet().iterator();while (it.hasNext()) {Entry<String, ConsumerGroupInfo> next = it.next();String group = next.getKey();ConsumerGroupInfo consumerGroupInfo = next.getValue();ConcurrentMap<Channel, ClientChannelInfo> channelInfoTable =consumerGroupInfo.getChannelInfoTable();Iterator<Entry<Channel, ClientChannelInfo>> itChannel =channelInfoTable.entrySet().iterator();while (itChannel.hasNext()) {Entry<Channel, ClientChannelInfo> nextChannel = itChannel.next();ClientChannelInfo clientChannelInfo = nextChannel.getValue();long diff = System.currentTimeMillis() - clientChannelInfo.getLastUpdateTimestamp();if (diff > CHANNEL_EXPIRED_TIMEOUT) {log.warn(""SCAN: remove expired channel from ConsumerManager consumerTable. channel={},""+ "" consumerGroup={}"",RemotingHelper.parseChannelRemoteAddr(clientChannelInfo.getChannel()),group);RemotingUtil.closeChannel(clientChannelInfo.getChannel());itChannel.remove();}}if (channelInfoTable.isEmpty()) {log.warn(""SCAN: remove expired channel from ConsumerManager consumerTable, all clear,""+ "" consumerGroup={}"",group);it.remove();}}}}"	No
1457	"public class A {private boolean initNetworking(String host, int port) {try {this.networkManager.initialize(this.serverConfig.maxPlayers(), host, port);if (this.serverConfig.enablePacketDumping()) {File dumpDirectory = new File(this.serverConfig.dumpDirectory());if (!dumpDirectory.exists()) {if (!dumpDirectory.mkdirs()) {LOGGER.error(""Failed to create dump directory; please double-check your filesystem permissions"");return false;}} else if (!dumpDirectory.isDirectory()) {return false;}this.networkManager.dumpingEnabled(true);this.networkManager.dumpDirectory(dumpDirectory);}} catch (Exception e) {return false;}return true;}}"	Yes
1458	public class A {@Overridepublic void start() throws Exception {initLoglevelConfig();if (loglevelProperty.isEnabled()) {ioc.get(LoglevelService.class);}}}	Yes
1459	"public class A {private void updateDepthValues(CmdiVertex startVertex, Set<CmdiVertex> alreadySeenVerticesSet) {alreadySeenVerticesSet = new HashSet<>();alreadySeenVerticesSet.add(startVertex);Set<DefaultEdge> outgoingEdgeSet = graph.outgoingEdgesOf(startVertex);if (!outgoingEdgeSet.isEmpty()) {Iterator<DefaultEdge> edgeIter = outgoingEdgeSet.iterator();CmdiVertex maxVertex = new CmdiVertex(""DUMMY"");maxVertex.setHierarchyWeight(1);while (edgeIter.hasNext()) {CmdiVertex targetVertex = graph.getEdgeTarget(edgeIter.next());if (targetVertex.getHierarchyWeight() <= maxVertex.getHierarchyWeight()) {maxVertex = targetVertex;}}if (maxVertex.getHierarchyWeight() <= startVertex.getHierarchyWeight()) {alreadySeenVerticesSet.add(maxVertex);startVertex.setHierarchyWeight(maxVertex.getHierarchyWeight() - 1);}}Set<DefaultEdge> incomingEdgeSet = graph.incomingEdgesOf(startVertex);if (!incomingEdgeSet.isEmpty()) {Iterator<DefaultEdge> edgeIter = incomingEdgeSet.iterator();while (edgeIter.hasNext()) {backwardUpdate(graph.getEdgeSource(edgeIter.next()),startVertex.getHierarchyWeight() - 1,alreadySeenVerticesSet);}}}}"	Yes
1460	"public class A {public void updateManagementV6AddressVnf(BuildingBlockExecution execution) {try {String managementV6Address = execution.getVariable(""oamManagementV6Address"");if (managementV6Address != null) {GenericVnf genericVnf =extractPojosForBB.extractByKey(execution, ResourceKey.GENERIC_VNF_ID);GenericVnf copiedGenericVnf = genericVnf.shallowCopyId();genericVnf.setManagementV6Address(managementV6Address);copiedGenericVnf.setManagementV6Address(managementV6Address);aaiVnfResources.updateObjectVnf(copiedGenericVnf);}} catch (Exception ex) {exceptionUtil.buildAndThrowWorkflowException(execution, 7000, ex);}}}"	Yes
1461	"public class A {@Overridepublic Organization fetchByC_ERC(long companyId, String externalReferenceCode, boolean useFinderCache) {externalReferenceCode = Objects.toString(externalReferenceCode, """");boolean productionMode = CTPersistenceHelperUtil.isProductionMode(Organization.class);Object[] finderArgs = null;if (useFinderCache && productionMode) {finderArgs = new Object[] {companyId, externalReferenceCode};}Object result = null;if (useFinderCache && productionMode) {result = FinderCacheUtil.getResult(_finderPathFetchByC_ERC, finderArgs);}if (result instanceof Organization) {Organization organization = (Organization) result;if ((companyId != organization.getCompanyId())|| !Objects.equals(externalReferenceCode, organization.getExternalReferenceCode())) {result = null;}}if (result == null) {StringBundler sb = new StringBundler(4);sb.append(_SQL_SELECT_ORGANIZATION_WHERE);sb.append(_FINDER_COLUMN_C_ERC_COMPANYID_2);boolean bindExternalReferenceCode = false;if (externalReferenceCode.isEmpty()) {sb.append(_FINDER_COLUMN_C_ERC_EXTERNALREFERENCECODE_3);} else {bindExternalReferenceCode = true;sb.append(_FINDER_COLUMN_C_ERC_EXTERNALREFERENCECODE_2);}String sql = sb.toString();Session session = null;try {session = openSession();Query query = session.createQuery(sql);QueryPos queryPos = QueryPos.getInstance(query);queryPos.add(companyId);if (bindExternalReferenceCode) {queryPos.add(externalReferenceCode);}List<Organization> list = query.list();if (list.isEmpty()) {if (useFinderCache && productionMode) {FinderCacheUtil.putResult(_finderPathFetchByC_ERC, finderArgs, list);}} else {if (list.size() > 1) {Collections.sort(list, Collections.reverseOrder());if (_log.isWarnEnabled()) {if (!productionMode || !useFinderCache) {finderArgs = new Object[] {companyId, externalReferenceCode};}}}Organization organization = list.get(0);result = organization;cacheResult(organization);}} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}if (result instanceof List<?>) {return null;} else {return (Organization) result;}}}"	Yes
1462	"public class A {@Overridepublic void addProduct(IAtomContainer product, Double coefficient) {logger.debug(""Adding product with coefficient: "", product, """" + coefficient);super.addProduct(product, coefficient);}}"	No
1463	"public class A {private void checkIfDone() {if (notRepliedYet.isEmpty() || pendingRemovals.containsAll(notRepliedYet)) {logger.debug(""All anticipated view responses received - notifying waiting thread"");waiting = false;notifyAll();} else {logger.debug(""Still waiting for these view replies: {}"", notRepliedYet);}}}"	No
1464	"public class A {private Set<SystemResponseDTO> getAuthorizedPublishers(final SystemRequestDTO subscriberSystem) {logger.debug(""getAuthorizedPublishers started..."");Assert.notNull(subscriberSystem, ""subscriberSystem is null."");final UriComponents checkUri = getAuthSubscriptionCheckUri();final AuthorizationSubscriptionCheckRequestDTO payload =new AuthorizationSubscriptionCheckRequestDTO(subscriberSystem, null);final ResponseEntity<AuthorizationSubscriptionCheckResponseDTO> response =httpService.sendRequest(checkUri, HttpMethod.POST, AuthorizationSubscriptionCheckResponseDTO.class, payload);return response.getBody().getPublishers();}}"	No
1465	"public class A {public void setNodeTemplateInstanceProperties(final String serviceTemplateQName,final String nodeTemplateId,final Long id,final Document properties)throws ReflectiveOperationException {final NodeTemplateInstance node =resolveNodeTemplateInstance(serviceTemplateQName, nodeTemplateId, id);try {final NodeTemplateInstanceProperty property =this.convertDocumentToProperty(properties, NodeTemplateInstanceProperty.class);node.addProperty(property);this.nodeTemplateInstanceRepository.update(node);} catch (InstantiationException | IllegalAccessException e) {final String msg =String.format(""An error occurred while instantiating an instance of the %s class."",NodeTemplateInstanceProperty.class);throw e;}}}"	Yes
1466	"public class A {@Overridepublic InspectionStatus inspect(Configuration configuration) {String url = configuration.getServicesProperty(SPRING_DATASOURCE_URL);String username = configuration.getServicesProperty(SPRING_DATASOURCE_USERNAME);String password = configuration.getServicesProperty(SPRING_DATASOURCE_PASSWORD);String driver = configuration.getServicesProperty(SPRING_DATASOURCE_DRIVER_CLASS_NAME);try {ClassLoader classloader = configuration.getServicesClassloader();Class<Driver> aClass = (Class<Driver>) classloader.loadClass(driver);Driver d = aClass.newInstance();DriverManager.registerDriver(new DriverShim(d));} catch (InstantiationException | IllegalAccessException e) {InspectionStatus status = new InspectionStatus(false);status.addError(String.format(""Failed to create driver '%s': %s"", driver, e.getMessage()));return status;} catch (ClassNotFoundException e) {InspectionStatus status = new InspectionStatus(false);status.addError(String.format(""Failed to load database driver '%s' from kylo-services classpath '%s'. Ensure you""+ "" have added driver jar to classpath and jar is readable by kylo-services user"",driver, configuration.getServicesClasspath()));return status;} catch (SQLException e) {InspectionStatus status = new InspectionStatus(false);status.addError(String.format(""Failed to register driver '%s' with DriverManager: %s"", driver, e.getMessage()));return status;}try {Connection connection = DriverManager.getConnection(url, username, password);connection.close();} catch (SQLException e) {InspectionStatus status = new InspectionStatus(false);status.addError(String.format(""Failed to establish connection to database '%s' with driver '%s' and username '%s':""+ "" %s. Check if values are correct for following properties: '%s', '%s', '%s' in""+ "" %s"",url,driver,username,e.getMessage(),SPRING_DATASOURCE_URL,SPRING_DATASOURCE_USERNAME,SPRING_DATASOURCE_PASSWORD,configuration.getServicesConfigLocation()));return status;}return new InspectionStatus(true);}}"	Yes
1467	public class A {public void syncStop() {_stopCountDown.countDown();try {_waitStopFinishCountDown.await();_started = false;} catch (InterruptedException e) {}}}	Yes
1468	"public class A {public void printHeader(List<ArtifactRepository> repositories) {log.info("""");log.info(""dependencies, and where they are available:"");final int repCount = repositories.size();for (int i = 0; i < repCount; i++) {final ArtifactRepository rep = repositories.get(i);log.info(String.format(""%s%s (%s)"", StringUtils.repeat(""|"" + sep, i), rep.getId(), rep.getUrl()));}log.info(StringUtils.repeat(""|"" + sep, repCount));}}"	No
1469	"public class A {@Override@POST@Path(UNITS_RULES_URI)@Consumes(MediaType.APPLICATION_JSON)@Produces(MediaType.APPLICATION_JSON)public Response massUpdateUnitsRules(MassUpdateUnitRuleRequest massUpdateUnitRuleRequest) {JsonNode queryDsl = massUpdateUnitRuleRequest.getDslRequest().deepCopy();RuleActions ruleActions = massUpdateUnitRuleRequest.getRuleActions();LOGGER.debug(""Start mass updating archive units with Dsl query {}"", queryDsl);Status status;try (ProcessingManagementClient processingClient =processingManagementClientFactory.getClient();LogbookOperationsClient logbookOperationsClient =logbookOperationsClientFactory.getClient();WorkspaceClient workspaceClient = workspaceClientFactory.getClient()) {SanityChecker.checkJsonAll(queryDsl);if (!isAuthorized()) {status = Status.UNAUTHORIZED;return Response.status(status).entity(getErrorEntity(status, WRITE_PERMISSION_NOT_ALLOWED)).build();}String operationId = getVitamSession().getRequestId();final LogbookOperationParameters initParameters =LogbookParameterHelper.newLogbookOperationParameters(GUIDReader.getGUID(operationId),Contexts.MASS_UPDATE_UNIT_RULE.getEventType(),GUIDReader.getGUID(operationId),LogbookTypeProcess.MASS_UPDATE,STARTED,VitamLogbookMessages.getCodeOp(Contexts.MASS_UPDATE_UNIT_RULE.getEventType(), STARTED),GUIDReader.getGUID(operationId));addRightsStatementIdentifier(initParameters);logbookOperationsClient.create(initParameters);workspaceClient.createContainer(operationId);workspaceClient.putObject(operationId,OperationContextMonitor.OperationContextFileName,writeToInpustream(OperationContextModel.get(massUpdateUnitRuleRequest)));workspaceClient.putObject(operationId,QUERY_FILE,writeToInpustream(applyAccessContractRestrictionForUnitForUpdate(queryDsl, getVitamSession().getContract())));workspaceClient.putObject(operationId, ""actions.json"", writeToInpustream(ruleActions));OperationContextMonitor.compressInWorkspace(workspaceClientFactory,operationId,Contexts.MASS_UPDATE_UNIT_RULE.getLogbookTypeProcess(),OperationContextMonitor.OperationContextFileName);processingClient.initVitamProcess(operationId, Contexts.MASS_UPDATE_UNIT_RULE.name());RequestResponse<ItemStatus> requestResponse =processingClient.executeOperationProcess(operationId, Contexts.MASS_UPDATE_UNIT_RULE.name(), RESUME.getValue());return requestResponse.toResponse();} catch (ContentAddressableStorageServerException| LogbookClientBadRequestException| LogbookClientAlreadyExistsException| InvalidGuidOperationException| LogbookClientServerException| VitamClientException| InternalServerException| OperationContextException e) {LOGGER.error(""An error occured while mass updating archive units"", e);return Response.status(INTERNAL_SERVER_ERROR).entity(getErrorEntity(INTERNAL_SERVER_ERROR, e.getMessage())).build();} catch (InvalidParseOperationException| InvalidCreateOperationException| BadRequestException e) {LOGGER.error(BAD_REQUEST_EXCEPTION, e);status = Status.BAD_REQUEST;return Response.status(status).entity(getErrorEntity(status, e.getMessage())).build();}}}"	No
1470	"public class A {private void registerMBean()throws MBeanRegistrationException, NotCompliantMBeanException, InstanceNotFoundException,InstanceAlreadyExistsException {try {LOGGER.debug(""Registering application service MBean under object name: {}"", objectName);mBeanServer.registerMBean(this, objectName);} catch (InstanceAlreadyExistsException iaee) {mBeanServer.unregisterMBean(objectName);mBeanServer.registerMBean(this, objectName);}}}"	Yes
1471	"public class A {private boolean loadConfigFromURL(JDBCLoaderProperties config) throws IOException {String propUrl = System.getProperty(replacePrefix(CONFIG_SYSPROP));if (propUrl == null) {return false;}URL url = null;try {try {url = new URL(propUrl);} catch (MalformedURLException e) {File f = new File(propUrl);if (f.canRead() && f.exists()) {url = URLs.fileToUrl(f);}}} catch (Exception e) {LOGGER.log(Level.WARNING, ""Error trying to read "" + propUrl, e);}if (url != null) {LOGGER.info(""Configuring jdbcloader from "" + url.toString());InputStream in = url.openStream();try {config.load(in);} finally {in.close();}return true;}LOGGER.severe(""System property ""+ replacePrefix(CONFIG_SYSPROP)+ "" specified ""+ propUrl+ "" but could not be read, ignoring."");return false;}}"	No
1472	"public class A {@Overridepublic int doEndTag() throws JspException {ServletRequest request = this.pageContext.getRequest();RequestContext reqCtx = (RequestContext) request.getAttribute(RequestContext.REQCTX);try {IContentListWidgetHelper helper =(IContentListWidgetHelper)ApsWebApplicationUtils.getBean(JacmsSystemConstants.CONTENT_LIST_HELPER, this.pageContext);List<UserFilterOptionBean> defaultUserFilterOptions =helper.getConfiguredUserFilters(this, reqCtx);this.addUserFilterOptions(defaultUserFilterOptions);this.extractExtraWidgetParameters(reqCtx);if (null != this.getUserFilterOptions() && null != this.getUserFilterOptionsVar()) {this.pageContext.setAttribute(this.getUserFilterOptionsVar(), this.getUserFilterOptions());}List<String> contents = this.getContentsId(helper, reqCtx);this.pageContext.setAttribute(this.getListName(), contents);} catch (Throwable t) {throw new JspException(""Error detected while finalising the tag"", t);}this.release();return EVAL_PAGE;}}"	Yes
1473	"public class A {public String saveContent(String containerId, String userId, Number taskId, String payload, String marshallingType) {userId = getUser(userId);containerId =context.getContainerId(containerId, new ByTaskIdContainerLocator(taskId.longValue()));logger.debug(""About to unmarshal task content parameters from payload: '{}'"", payload);Map<String, Object> parameters =marshallerHelper.unmarshal(containerId, payload, marshallingType, Map.class);logger.debug(""About to set content of a task with id '{}' with data {}"", taskId, parameters);Long contentId = userTaskService.saveContentFromUser(taskId.longValue(), userId, parameters);String response = marshallerHelper.marshal(containerId, marshallingType, contentId);return response;}}"	No
1474	public class A {public static void executeCompleteTenantExtension(Map<String, String> envParameters) {try {if (log.isDebugEnabled()) {}String script = System.getProperty(CartridgeAgentConstants.COMPLETE_TENANT_SCRIPT);String command = prepareCommand(script);addPayloadParameters(envParameters);cleanProcessParameters(envParameters);String output = CommandUtils.executeCommand(command, envParameters);if (log.isDebugEnabled()) {}} catch (Exception e) {if (log.isErrorEnabled()) {}}}}	Yes
1475	"public class A {public List findByExample(MYesno instance) {log.debug(""finding MYesno instance by example"");try {List results =sessionFactory.getCurrentSession().createCriteria(""sernet.gs.reveng.MYesno"").add(Example.create(instance)).list();return results;} catch (RuntimeException re) {throw re;}}}"	Yes
1476	public class A {@EventListener@Order(5)public void onApplicationEvent(final ContextRefreshedEvent event) {arrowheadContext.put(CoreCommonConstants.SERVER_STANDALONE_MODE, true);}}	Yes
1477	"public class A {@Overridepublic void killAll() throws IOException {if (accountConfig.getBucket() == null || accountConfig.getPrefix() == null) {throw new ISE(""Cannot delete all segment files from Google Deep Storage since druid.google.bucket and""+ "" druid.google.prefix are not both set."");}LOG.info(""Deleting all segment files from gs location [bucket: '%s' prefix: '%s']"",accountConfig.getBucket(), accountConfig.getPrefix());try {GoogleUtils.deleteObjectsInPath(storage,inputDataConfig,accountConfig.getBucket(),accountConfig.getPrefix(),Predicates.alwaysTrue());} catch (Exception e) {LOG.error(""Error occurred while deleting task log files from gs. Error: %s"", e.getMessage());throw new IOException(e);}}}"	No
1478	"public class A {@SuppressWarnings(""checkstyle:illegalCatch"")private static <T> void executeJob(JobEntry<T> job) {LOG.trace(""Running job: {}"", job);final Callable<ListenableFuture<T>> mainWorker = job.getMainWorker();if (mainWorker == null) {job.setResult(null);return;}final ListenableFuture<T> future;try {future = mainWorker.call();} catch (Exception e) {job.setResult(null);return;}Futures.addCallback(future,new FutureCallback<T>() {@Overridepublic void onSuccess(final T result) {LOG.trace(""Job completed successfully: {}"", job.getKey());job.setResult(result);}@Overridepublic void onFailure(final Throwable cause) {job.setFailure(cause);}},MoreExecutors.directExecutor());}}"	Yes
1479	"public class A {private void addToMapIfNotExist(Map<String, UserAttributeParam> userAttributeParamMap,Map.Entry<String, UserAttributeParam> addAttribute) {if (CollectionUtils.isEmpty(userAttributeParamMap)) {_log.info(""Invalid map to add the entries"");return;}UserAttributeParam userAttributeParam = userAttributeParamMap.get(addAttribute.getKey());if (userAttributeParam == null) {userAttributeParamMap.put(addAttribute.getKey(), addAttribute.getValue());} else {userAttributeParam.setValues(addAttribute.getValue().getValues());}}}"	No
1480	"public class A {private static GeneProductRef createGPR(String identifier, String reactionId, Model model, boolean displayWarning) {int level = model.getLevel(), version = model.getVersion();GeneProductRef gpr = new GeneProductRef(level, version);String id = GPRParser.updateGeneId(identifier);if (!model.containsUniqueNamedSBase(id)) {GeneProduct gp = (GeneProduct) model.findUniqueNamedSBase(identifier);GeneProduct gp2 = (GeneProduct) model.findUniqueNamedSBase(id);if (gp == null && gp2 == null) {if (displayWarning) {logger.warn(format(""Creating missing gene product with id ''{0}'' because reaction ''{1}'' uses this""+ "" id in its gene-product association."",id, reactionId));}FBCModelPlugin fbcPlug = (FBCModelPlugin) model.getPlugin(FBCConstants.shortLabel);gp = fbcPlug.createGeneProduct(id);gp.setLabel(id);} else if (gp != null) {logger.info(format(""Updating the id of gene product ''{0}'' to ''{1}''."", gp.getId(), id));gp.setId(id);}}gpr.setGeneProduct(id);return gpr;}}"	No
1481	"public class A {@Overridepublic Operation pollOperation(Operation operation, Long sleepMs)throws InterruptedException, IOException {LOG.debug(String.format(""started opertation %s. polling until complete."", operation.getName()));while (operation.getDone() == null || !operation.getDone()) {Thread.sleep(sleepMs);operation =client.projects().locations().datasets().operations().get(operation.getName()).execute();}return operation;}}"	No
1482	"public class A {public String validate(Source source) {try {final StringWriter writer = new StringWriter();templates.newTransformer().transform(source, new StreamResult(writer));return writer.toString();} catch (TransformerException e) {logger.error(e.getMessage());throw new SchematronValidationException(""Failed to apply Schematron validation transform"", e);}}}"	No
1483	"public class A {private void checkAssociationLinks(String response, List<String> entityTypes, List<Object> ids) {try {if (EntityType.isPlural(entityTypes.get(entityTypes.size() - 1))) {String message =""The GET entities Association Link response does not match SensorThings API : missing""+ "" \""value\"" in response.: ""+ entityTypes.toString()+ ids.toString();Assert.assertTrue(message, response.contains(""value""));JSONArray value = new JSONObject(response).getJSONArray(""value"");int count = 0;for (int i = 0; i < value.length() && count < 2; i++) {count++;JSONObject obj = value.getJSONObject(i);try {message =""The Association Link does not contain self-links.: ""+ entityTypes.toString()+ ids.toString();Assert.assertNotNull(message, obj.get(ControlInformation.SELF_LINK));} catch (JSONException e) {Assert.fail(""The Association Link does not contain self-links.: ""+ entityTypes.toString()+ ids.toString());}message =""The Association Link contains properties other than self-link.: ""+ entityTypes.toString()+ ids.toString();Assert.assertEquals(message, 1, obj.length());}} else {JSONObject obj = new JSONObject(response);try {String message =""The Association Link does not contain self-links.: ""+ entityTypes.toString()+ ids.toString();Assert.assertNotNull(message, obj.get(ControlInformation.SELF_LINK));} catch (JSONException e) {Assert.fail(""The Association Link does not contain self-links.: ""+ entityTypes.toString()+ ids.toString());}String message =""The Association Link contains properties other than self-link.: ""+ entityTypes.toString()+ ids.toString();Assert.assertEquals(message, 1, obj.length());}} catch (JSONException e) {LOGGER.error(""Exception:"", e);Assert.fail(""An Exception occurred during testing!:\n"" + e.getMessage());}}}"	No
1484	"public class A {private long getTypeShellCount(String typeName) {Long ret = null;String indexQuery =indexSearchPrefix+ ""\""""+ ENTITY_TYPE_PROPERTY_KEY+ ""\"" : (%s)""+ AND_STR+ indexSearchPrefix+ ""\""""+ IS_INCOMPLETE_PROPERTY_KEY+ ""\"" : ""+ INCOMPLETE_ENTITY_VALUE.intValue();indexQuery = String.format(indexQuery, typeName);try {ret = atlasGraph.indexQuery(VERTEX_INDEX, indexQuery).vertexTotals();} catch (Exception e) {}return ret == null ? 0L : ret;}}"	Yes
1485	"public class A {public void createMultiBranchPipeline(FolderJob folder, String pipelineName, String repositoryPath) throws IOException {deletePipeline(folder, pipelineName);URL url = Resources.getResource(this.getClass(), ""multibranch.xml"");jenkins.createJob(folder,pipelineName,Resources.toString(url, Charsets.UTF_8).replace(""{{repo}}"", repositoryPath),true);JobWithDetails job = jenkins.getJob(folder, pipelineName);job.build(true);}}"	Yes
1486	public class A {@Overridepublic void runJob() {Model depModel = getReadOnlyModel();Model model = ModelFactory.createDefaultModel().add(depModel);Bag depositBag = model.createBag(getDepositPID().getURI());Map<String, String> status = getDepositStatus();URI sourceUri = URI.create(status.get(DepositField.sourceUri.name()));Path sourcePath = Paths.get(sourceUri);File sourceFile = sourcePath.toFile();Collection<File> fileListings =FileUtils.listFilesAndDirs(sourceFile, TrueFileFilter.TRUE, TrueFileFilter.TRUE);interruptJobIfStopped();Bag sourceBag = getSourceBag(depositBag, sourceFile);int i = 0;for (File file : fileListings) {if (file.equals(sourceFile)) {continue;}Path filePath = sourcePath.getParent().relativize(file.toPath());String filePathString = filePath.toString();String filename = filePath.getFileName().toString();if (!file.isDirectory()) {Resource originalResource = getFileResource(sourceBag, filePathString);Path storedPath = Paths.get(file.getAbsolutePath());model.add(originalResource, CdrDeposit.stagingLocation, storedPath.toUri().toString());} else {Bag folderBag = getFolderBag(sourceBag, filePathString);model.add(folderBag, CdrDeposit.label, filename);model.add(folderBag, RDF.type, Cdr.Folder);}}commit(() -> depModel.add(model));}}	Yes
1487	"public class A {private void safeClose(LdapConnectionHandler ldapConnectionHandler) {try {if (ldapConnectionHandler != null) {ldapConnectionHandler.close();}} catch (IOException e) {SECURITY_LOGGER.trace(""Unable to close ldapConnectionHandler"", e);}}}"	No
1488	"public class A {public static File getMetaDir(DBDefinition definition, OzoneConfiguration configuration) {File metadataDir = definition.getDBLocation(configuration);if (metadataDir == null) {LOG.warn(""{} is not configured. We recommend adding this setting. ""+ ""Falling back to {} instead."",definition.getLocationConfigKey(),HddsConfigKeys.OZONE_METADATA_DIRS);metadataDir = getOzoneMetaDirPath(configuration);}return metadataDir;}}"	No
1489	public class A {public void actionPerformed(ActionEvent event) {if (jTable.getSelectedRow() < 0) {} else {selectedrow = jTable.getSelectedRow();operationType = (OperationType) (model.getValueAt(selectedrow, -1));OperationTypeEdit newrecord = new OperationTypeEdit(myFrame, operationType, false);newrecord.addOperationTypeListener(OperationTypeBrowser.this);newrecord.setVisible(true);}}}	Yes
1490	"public class A {public void validate(@Observes MethodReady event,ControllerInstance controllerInstance,MethodInfo methodInfo,Validator validator) {ControllerMethod method = event.getControllerMethod();if (hasConstraints(method)) {Set<ConstraintViolation<Object>> violations =bvalidator.forExecutables().validateParameters(controllerInstance.getController(),method.getMethod(),methodInfo.getParametersValues());logger.debug(""there are {} constraint violations at method {}."", violations.size(), method);for (ConstraintViolation<Object> v : violations) {String category = extractCategory(methodInfo.getValuedParameters(), v);String msg = extractInternacionalizedMessage(v);validator.add(new SimpleMessage(category, msg));}}}}"	Yes
1491	"public class A {private synchronized void updateVersion() {if (System.currentTimeMillis() / 1000L - lastUpdated < 3600) {return;}HttpClient client = HttpClientBuilder.create().useSystemProperties().build();HttpGet request = new HttpGet(URL);final String responseString;try {HttpResponse response = client.execute(request);responseString = IOUtils.toString(response.getEntity().getContent(), ""utf-8"");} catch (IOException e) {logger.debug(""Could not get version from GitHub"", e);return;}try {Map<String, Object>[] data = gson.fromJson(responseString, mapArrayType);double latestVersion = 0;for (Map<String, Object> release : data) {if (Double.parseDouble((String) release.get(""tag_name"")) > latestVersion) {latestVersion = Double.parseDouble((String) release.get(""tag_name""));version = (String) release.get(""tag_name"");}}lastUpdated = System.currentTimeMillis() / 1000L;} catch (Exception e) {}}}"	Yes
1492	public class A {@Overridepublic void initialize() {container.start();registerProperties();}}	Yes
1493	public class A {@Overridepublic void onNunchukRemovedEvent(NunchukRemovedEvent arg0) {}}	Yes
1494	"public class A {public void findInvalidDelays(OperatorMeta om, List<List<String>> invalidDelays, Stack<OperatorMeta> stack) {stack.push(om);boolean isDelayOperator = om.getOperator() instanceof Operator.DelayOperator;if (isDelayOperator) {if (om.getValue(OperatorContext.APPLICATION_WINDOW_COUNT) != 1) {LOG.debug(""detected DelayOperator having APPLICATION_WINDOW_COUNT not equal to 1"");invalidDelays.add(Collections.singletonList(om.getName()));}}for (StreamMeta downStream : om.outputStreams.values()) {for (InputPortMeta sink : downStream.sinks) {OperatorMeta successor = sink.getOperatorMeta();if (isDelayOperator) {sink.attributes.put(IS_CONNECTED_TO_DELAY_OPERATOR, true);if (successor != null && !stack.contains(successor)) {LOG.debug(""detected DelayOperator does not immediately output to a visited operator""+ "" {}.{}->{}.{}"",om.getName(),downStream.getSource().getPortName(),successor.getName(),sink.getPortName());invalidDelays.add(Arrays.asList(om.getName(), successor.getName()));}} else {findInvalidDelays(successor, invalidDelays, stack);}}}stack.pop();}}"	No
1495	"public class A {private void internalReloadDomains() {lock.writeLock().lock();try {metadataMapping.reset();final List<RepositoryFile> children = repository.getChildren(getMetadataDir().getId(), ""*"");if (logger.isTraceEnabled()) {logger.trace(""\tFound "" + children.size() + "" files in the repository"");}for (final RepositoryFile child : children) {if (getAclHelper().canAccess(child, READ)) {final Map<String, Serializable> fileMetadata = repository.getFileMetadata(child.getId());if (fileMetadata == null|| StringUtils.isEmpty((String) fileMetadata.get(PROPERTY_NAME_DOMAIN_ID))) {if (logger.isWarnEnabled()) {logger.warn(messages.getString(""PentahoMetadataDomainRepository.WARN_0001_FILE_WITHOUT_METADATA"",child.getName()));}continue;}final String domainId = (String) fileMetadata.get(PROPERTY_NAME_DOMAIN_ID);final String type = (String) fileMetadata.get(PROPERTY_NAME_TYPE);final String locale = (String) fileMetadata.get(PROPERTY_NAME_LOCALE);if (logger.isTraceEnabled()) {logger.trace(""\tprocessing file [type=""+ type+ "" : domainId=""+ domainId+ "" : locale=""+ locale+ ""]"");}if (StringUtils.equals(type, TYPE_DOMAIN)) {metadataMapping.addDomain(domainId, child);} else if (StringUtils.equals(type, TYPE_LOCALE)) {metadataMapping.addLocale(domainId, locale, child);}}}needToReload = false;} finally {lock.writeLock().unlock();}}}"	No
1496	"public class A {@Overridepublic final void close() {if (isClosed()) {_logger.warn(this + "" is already closed, but close() was invoked!"");if (_logger.isDebugEnabled()) {_closeEvents.add(new CloseEvent(Thread.currentThread().getName(), new Throwable().getStackTrace()));final int numCloses = _closeEvents.size();int i = 1;for (final CloseEvent closeEvent : _closeEvents) {_logger.debug(""Stack trace when close() no. {} of {}: "", i, numCloses);_logger.debug(""Thread name: {}"", closeEvent.threadName);logStack(closeEvent.stackTrace);i++;}}return;}final int usage;synchronized (this) {usage = _usageCount.decrementAndGet();_logger.debug(""Method close() invoked, usage decremented to {} for {}"", _usageCount, this);if (usage == 0) {if (_logger.isDebugEnabled()) {_closeEvents.add(new CloseEvent(Thread.currentThread().getName(), new Throwable().getStackTrace()));}_logger.debug(""Closing {}"", this);closeInternal();_closed.set(true);}}}}"	No
1497	"public class A {@Overridevoid cancel() {if (ongoingCalculation.isDone() || ongoingCalculation.isCancelled()) {return;}LOG.debug(name + "" cancelling ongoing future"");try {ongoingCalculation.cancel(true);} catch (Exception e) {}}}"	Yes
1498	public class A {@OnReturnpublic static void onReturn(@BindReceiver HasStatementMirrorMixin resultSet) {try {StatementMirror mirror = resultSet.glowroot$getStatementMirror();if (mirror == null) {return;}QueryEntry lastQueryEntry = mirror.getLastQueryEntry();if (lastQueryEntry == null) {return;}lastQueryEntry.setCurrRow(((ResultSet) resultSet).getRow());} catch (Exception e) {}}}	Yes
1499	"public class A {private void endTransactionAndRegisterStats(Operation noTxOperation) {Request commitRequest = recording() ? stats.startRequest() : null;try {if (stage.commitTransactions) {ongoingTx.commit();} else {ongoingTx.rollback();}succeeded(commitRequest, stage.commitTransactions ? Transactional.COMMIT : Transactional.ROLLBACK);} catch (Exception e) {failed(commitRequest, stage.commitTransactions ? Transactional.COMMIT : Transactional.ROLLBACK);if (logTransactionExceptions) {log.error(""Failed to end transaction"", e);}} finally {if (requests != null) {if (recording()) {requests.add(commitRequest);requests.finished(commitRequest.isSuccessful(), Transactional.DURATION);if (noTxOperation != null) {requests.finished(commitRequest.isSuccessful(), noTxOperation);}} else {requests.discard();}requests = null;}clearTransaction();}}}"	No
1500	"public class A {private PublicKey generateKeys() {PrivateKey privateKey = PrivateKey.generate();if (logKeys) {log.info(""privateKey: {}"", privateKey);}return privateKey.getPublicKey();}}"	Yes
1501	"public class A {public static SolrClient getSolrClient() {if (Solr6Index.instance != null) {if (createSolrClientPerRequest) {logger.debug(""Creating a new Solr Client."");return Solr6Index.instance.createSolrClient();} else {logger.debug(""Returning the solr client owned by Solr6Index."");return Solr6Index.instance.solrClient;}} else {logger.debug("" No Solr6Index available. Will return null"");return null;}}}"	No
1502	"public class A {@Overridepublic void error(final SAXParseException e) {logger.warn(""Schema validation error parsing Flow Configuration at line {}, col {}: {}"",e.getLineNumber(),e.getColumnNumber(),e.getMessage());}}"	No
1503	"public class A {private void cleanUpCreatedTopics(final Set<String> topicsToCleanUp) {log.info(""Starting to clean up internal topics {}."", topicsToCleanUp);final long now = time.milliseconds();final long deadline = now + retryTimeoutMs;final Set<String> topicsStillToCleanup = new HashSet<>(topicsToCleanUp);while (!topicsStillToCleanup.isEmpty()) {final DeleteTopicsResult deleteTopicsResult = adminClient.deleteTopics(topicsStillToCleanup);final Map<String, KafkaFuture<Void>> deleteResultForTopic = deleteTopicsResult.values();while (!deleteResultForTopic.isEmpty()) {for (final String topicName : new HashSet<>(topicsStillToCleanup)) {if (!deleteResultForTopic.containsKey(topicName)) {throw new IllegalStateException(""Delete topic results do not contain internal topic ""+ topicName+ "" to clean up. ""+ BUG_ERROR_MESSAGE);}final KafkaFuture<Void> deleteResult = deleteResultForTopic.get(topicName);if (deleteResult.isDone()) {try {deleteResult.get();topicsStillToCleanup.remove(topicName);} catch (final ExecutionException executionException) {final Throwable cause = executionException.getCause();if (cause instanceof UnknownTopicOrPartitionException) {} else if (cause instanceof LeaderNotAvailableException) {} else if (cause instanceof TimeoutException) {} else {throw new StreamsException(String.format(""Could not clean up internal topics %s, because during the cleanup ""+ ""of topic %s the following error occurred: "",topicsStillToCleanup, topicName),cause);}} catch (final InterruptedException interruptedException) {throw new InterruptException(interruptedException);} finally {deleteResultForTopic.remove(topicName);}}}maybeThrowTimeoutException(Collections.singletonList(topicsStillToCleanup),deadline,String.format(""Could not cleanup internal topics within %d milliseconds. This can happen if the""+ "" Kafka cluster is temporarily not available or the broker did not complete""+ "" topic creation before the cleanup. The following internal topics could not""+ "" be cleaned up: %s"",retryTimeoutMs, topicsStillToCleanup));if (!deleteResultForTopic.isEmpty()) {Utils.sleep(100);}}maybeSleep(Collections.singletonList(topicsStillToCleanup), deadline, ""validated"");}log.info(""Completed cleanup of internal topics {}."", topicsToCleanUp);}}"	Yes
1504	public class A {@Overridepublic Map<Short, JoyQueueCode> batchCommitIndex(String topic, String app, Map<Short, Long> indexes, long timeout) {Table<String, Short, Long> topicTable = HashBasedTable.create();for (Map.Entry<Short, Long> entry : indexes.entrySet()) {topicTable.put(topic, entry.getKey(), entry.getValue());}Map<Short, JoyQueueCode> result = Maps.newHashMap();Map<BrokerNode, Table<String, Short, Long>> brokerCommitMap =buildCommitIndexRequest(topic, app, indexes);for (Map.Entry<BrokerNode, Table<String, Short, Long>> entry : brokerCommitMap.entrySet()) {try {ConsumerClient client = consumerClientManager.getOrCreateClient(entry.getKey());CommitIndexResponse commitIndexResponse =client.commitIndex(entry.getValue(), app, timeout);for (Map.Entry<String, Map<Short, JoyQueueCode>> resultEntry :commitIndexResponse.getResult().rowMap().entrySet()) {for (Map.Entry<Short, JoyQueueCode> ackEntry : resultEntry.getValue().entrySet()) {result.put(ackEntry.getKey(), ackEntry.getValue());}}} catch (ClientException e) {for (Map.Entry<String, Map<Short, Long>> topicEntry :entry.getValue().rowMap().entrySet()) {for (Map.Entry<Short, Long> partitionEntry : topicEntry.getValue().entrySet()) {result.put(partitionEntry.getKey(), JoyQueueCode.valueOf(e.getCode()));}}}}for (Map.Entry<Short, JoyQueueCode> entry : result.entrySet()) {if (result.containsKey(entry.getKey())) {continue;}result.put(entry.getKey(), JoyQueueCode.CN_UNKNOWN_ERROR);}return result;}}	Yes
1505	"public class A {protected boolean isDocumentValid(final String schemaURL) throws DocServiceException {try {InputStream dataToValid = new ByteArrayInputStream(getContent().getBytes(""UTF-8""));SchemaFactory factory = SchemaFactory.newInstance(""http://www.w3.org/2001/XMLSchema"");Schema schema = factory.newSchema(new URL(schemaURL));Source source = new StreamSource(dataToValid);Validator validator = schema.newValidator();validator.validate(source);return true;} catch (SAXException ex) {throw new DocServiceException(""File is not valid. "" + ex.getMessage(), HttpServletResponse.SC_UNSUPPORTED_MEDIA_TYPE);} catch (IOException e) {}return false;}}"	Yes
1506	"public class A {private void createUpdateCloudWatchEventJob(final JobExecutionManager jobDetails)throws PacManException {try {PutRuleRequest ruleRequest =new PutRuleRequest().withName(jobDetails.getJobUUID()).withDescription(jobDetails.getJobId());ruleRequest.withScheduleExpression(""cron("".concat(jobDetails.getJobFrequency()).concat("")"")).withState(RuleState.ENABLED);PutRuleResult ruleResult =amazonClient.getAmazonCloudWatchEvents(config.getJob().getLambda().getRegion()).putRule(ruleRequest);AWSLambda awsLambdaClient =amazonClient.getAWSLambdaClient(config.getJob().getLambda().getRegion());if (!checkIfPolicyAvailableForLambda(config.getJob().getLambda().getFunctionName(), awsLambdaClient)) {createPolicyForLambda(config.getJob().getLambda().getFunctionName(), awsLambdaClient);}if (ruleResult.getRuleArn() != null) {jobDetails.setJobArn(ruleResult.getRuleArn());boolean isLambdaFunctionLinked =linkTargetWithRule(config.getJob().getLambda().getTargetId(),config.getJob().getLambda().getFunctionArn(),jobDetails.getJobParams(),jobDetails.getJobUUID());if (!isLambdaFunctionLinked) {} else {jobExecutionManagerRepository.save(jobDetails);invokeRule(awsLambdaClient,config.getJob().getLambda().getFunctionName(),jobDetails.getJobParams());}} else {throw new PacManException(UNEXPECTED_ERROR_OCCURRED);}} catch (Exception exception) {if (exception.getMessage().contains(""ScheduleExpression is not valid"")) {throw new PacManException(INVALID_JOB_FREQUENCY);} else {throw new PacManException(UNEXPECTED_ERROR_OCCURRED);}}}}"	Yes
1507	"public class A {@Overrideprotected void doMessageReceived(IoSessionEx session, Object message) throws Exception {if (logger.isDebugEnabled()) {}BridgeSession bridgeSession = (BridgeSession) session;URI uriConnectURI = URI.create(connectURI);assertEquals(""remote address of connect session was not "" + connectURI,uriConnectURI,BridgeSession.REMOTE_ADDRESS.get(bridgeSession).getResource());assertEquals(""local  address of connect session was not "" + connectURI,uriConnectURI,BridgeSession.LOCAL_ADDRESS.get(bridgeSession).getResource());assertEquals(""ephemeral port of local address' transport != ephemeral port of parent session's local""+ "" address"",BridgeSession.LOCAL_ADDRESS.get(bridgeSession).getTransport().getResource().getPort(),BridgeSession.LOCAL_ADDRESS.get(bridgeSession.getParent()).getResource().getPort());checkpoint();}}"	Yes
1508	"public class A {@Overridepublic Job concat(String profileId,Dimension outputDimension,float outputFrameRate,boolean sameCodec,Track... tracks)throws EncoderException, MediaPackageException {HttpPost post = new HttpPost(""/concat"");try {List<BasicNameValuePair> params = new ArrayList<BasicNameValuePair>();params.add(new BasicNameValuePair(""profileId"", profileId));if (outputDimension != null)params.add(new BasicNameValuePair(""outputDimension"", Serializer.json(outputDimension).toJson()));params.add(new BasicNameValuePair(""outputFrameRate"", String.format(Locale.US, ""%f"", outputFrameRate)));params.add(new BasicNameValuePair(""sourceTracks"", MediaPackageElementParser.getArrayAsXml(Arrays.asList(tracks))));if (sameCodec) params.add(new BasicNameValuePair(""sameCodec"", ""true""));post.setEntity(new UrlEncodedFormEntity(params, ""UTF-8""));} catch (Exception e) {throw new EncoderException(e);}HttpResponse response = null;try {response = getResponse(post);if (response != null) {Job r = JobParser.parseJob(response.getEntity().getContent());return r;}} catch (Exception e) {throw new EncoderException(e);} finally {closeConnection(response);}throw new EncoderException(""Unable to concat videos from tracks ""+ tracks+ "" using the remote composer service proxy"");}}"	Yes
1509	"public class A {public void elaboraTracciatoPendenze(ElaboraTracciatoDTO elaboraTracciatoDTO, IContext ctx)throws ServiceException {BDConfigWrapper configWrapper = new BDConfigWrapper(ctx.getTransactionId(), true);TracciatiBD tracciatiBD = null;Tracciato tracciato = elaboraTracciatoDTO.getTracciato();String codDominio = tracciato.getCodDominio();FORMATO_TRACCIATO formato = tracciato.getFormato();it.govpay.core.beans.tracciati.TracciatoPendenza beanDati = null;ISerializer serializer = null;try {tracciatiBD = new TracciatiBD(configWrapper);tracciatiBD.setupConnection(configWrapper.getTransactionID());tracciatiBD.setAtomica(false);tracciatiBD.setAutoCommit(false);SerializationConfig config = new SerializationConfig();config.setDf(SimpleDateFormatUtils.newSimpleDateFormatDataOreMinuti());config.setIgnoreNullValues(true);IDeserializer deserializer =SerializationFactory.getDeserializer(SERIALIZATION_TYPE.JSON_JACKSON, config);serializer = SerializationFactory.getSerializer(SERIALIZATION_TYPE.JSON_JACKSON, config);beanDati =(it.govpay.core.beans.tracciati.TracciatoPendenza)deserializer.getObject(tracciato.getBeanDati(), it.govpay.core.beans.tracciati.TracciatoPendenza.class);switch (formato) {case CSV:this._elaboraTracciatoCSV(tracciatiBD, tracciato, beanDati, serializer, ctx);break;case JSON:this._elaboraTracciatoJSON(tracciatiBD, tracciato, beanDati, serializer, ctx);break;case XML:throw new Exception(""formato non supportato."");}} catch (Throwable e) {tracciatiBD.rollback();tracciato.setStato(STATO_ELABORAZIONE.SCARTATO);String descrizioneStato = ""Errore durante l'elaborazione del tracciato: "" + e.getMessage();tracciato.setDescrizioneStato(descrizioneStato.length() > 256 ? descrizioneStato.substring(0, 255) : descrizioneStato);tracciato.setDataCompletamento(new Date());if (beanDati != null) {beanDati.setStepElaborazione(StatoTracciatoType.ANNULLATO.getValue());beanDati.setLineaElaborazioneAdd(0);beanDati.setLineaElaborazioneDel(0);beanDati.setNumAddTotali(0);beanDati.setNumDelTotali(0);beanDati.setDescrizioneStepElaborazione(descrizioneStato);beanDati.setDataUltimoAggiornamento(new Date());try {tracciato.setBeanDati(serializer.getObject(beanDati));} catch (IOException e1) {}}tracciatiBD.updateFineElaborazione(tracciato);tracciatiBD.commit();} finally {if (tracciatiBD != null) {tracciatiBD.closeConnection();}}}}"	Yes
1510	public class A {private void receiverOpenHandler(ProtonConnection connection, ProtonReceiver receiver) {Target target = (Target) receiver.getRemoteTarget();receiver.setTarget(target);receiver.handler((delivery, message) -> {vertx.executeBlocking(promise -> {try {synchronized (this) {Queue<Message> queue = queues.get(target.getAddress());queue.add(message);SenderInfo senderInfo = subscribers.get(target.getAddress());if (senderInfo != null) {checkQueue(senderInfo.senderContext, senderInfo.sender);}}promise.complete();} catch (Exception e) {promise.fail(e);}},result -> {if (result.succeeded()) {ProtonHelper.accepted(delivery, true);} else {ProtonHelper.rejected(delivery, true);}});});vertx.executeBlocking(promise -> {try {synchronized (this) {Queue<Message> queue = queues.get(target.getAddress());if (queue == null) {queue = new ArrayDeque<>();queues.put(target.getAddress(), queue);}}promise.complete();} catch (Exception e) {promise.fail(e);}},result -> {if (result.succeeded()) {receiver.open();} else {receiver.close();}});}}	Yes
1511	"public class A {private void _read(ClassLoader classLoader, URL sourceURL, Map<String, String> sqls)throws Exception {try (InputStream inputStream = sourceURL.openStream()) {if (_log.isDebugEnabled()) {}Document document = UnsecureSAXReaderUtil.read(inputStream);Element rootElement = document.getRootElement();for (Element sqlElement : rootElement.elements(""sql"")) {String file = sqlElement.attributeValue(""file"");if (Validator.isNotNull(file)) {URL fileURL = classLoader.getResource(file);_read(classLoader, fileURL, sqls);} else {String id = sqlElement.attributeValue(""id"");String content = transform(sqlElement.getText());content = replaceIsNull(content);sqls.put(id, content);}}}}}"	Yes
1512	public class A {@BuildStepvoid registerBeans(BuildProducer<AdditionalBeanBuildItem> beans,List<BindableServiceBuildItem> bindables,BuildProducer<FeatureBuildItem> features) {beans.produce(new AdditionalBeanBuildItem(GrpcService.class));beans.produce(new AdditionalBeanBuildItem(GrpcRequestContextCdiInterceptor.class));beans.produce(new AdditionalBeanBuildItem(GrpcEnableRequestContext.class));if (!bindables.isEmpty() || LaunchMode.current() == LaunchMode.DEVELOPMENT) {beans.produce(AdditionalBeanBuildItem.unremovableOf(GrpcContainer.class));features.produce(new FeatureBuildItem(GRPC_SERVER));} else {}}}	Yes
1513	public class A {public ContentDto getContent(Long versionId) {try {final ContentVersion contentVersion = versioningManager.getVersion(versionId);final Content content = versioningManager.getContent(contentVersion);final ContentDto contentDto = contentService.getDtoBuilder().convert(content);return contentDto;} catch (ApsSystemException e) {}return null;}}	Yes
1514	"public class A {public boolean checkTriState(String triStateName, SharedTriState.STATE expectedValue) {ArgumentChecker.notNull(triStateName);SharedTriState sharedTriState = sharedTriStates.get(triStateName);Preconditions.checkArgument(sharedTriState != null, ""Invalid TriState name: "" + triStateName);if (log.isTraceEnabled()) {log.trace(""table:"" + triStateName + "" got "" + sharedTriState + "" from "" + sharedTriStates);}return sharedTriState.getState() == expectedValue;}}"	Yes
1515	"public class A {public final DOReader get(final String pid) {DOReader result = null;mapLock.lock();if (cacheMap.containsKey(pid)) {TimestampedCacheEntry<DOReader> e = cacheMap.remove(pid);result = e.value();cacheMap.put(pid, e.refresh());} else {LOG.debug(""cache miss for {}"", pid);}mapLock.unlock();return result;}}"	Yes
1516	"public class A {private Map<String, Group> parseGroups(String appId,int tenantId,String key,List<GroupContext> groupCtxts,Map<String, SubscribableInfoContext> subscribableInformation)throws ApplicationDefinitionException, CartridgeGroupNotFoundException,CartridgeNotFoundException {Map<String, Group> groupAliasToGroup = new HashMap<String, Group>();for (GroupContext groupCtxt : groupCtxts) {ServiceGroup serviceGroup = getServiceGroup(groupCtxt.getName());if (serviceGroup == null) {throw new CartridgeGroupNotFoundException(""Cartridge group not found group-name: "" + groupCtxt.getName());}Group group =parseGroup(appId, tenantId, key, groupCtxt, subscribableInformation, serviceGroup);validateCartridgeGroupReference(appId, serviceGroup, group);groupAliasToGroup.put(group.getAlias(), group);}Set<Group> nestedGroups = new HashSet<Group>();getNestedGroupContexts(nestedGroups, groupAliasToGroup.values());filterDuplicatedGroupContexts(groupAliasToGroup.values(), nestedGroups);return groupAliasToGroup;}}"	Yes
1517	"public class A {private void executeLock(ITransaction transaction, HttpServletRequest req, HttpServletResponse resp)throws LockFailedException, IOException, ServletException {if (macLockRequest) {doMacLockRequestWorkaround(transaction, req, resp);} else {if (getLockInformation(req, resp)) {int depth = getDepth(req);int lockDuration = getTimeout(req);boolean lockSuccess = false;if (exclusive) {lockSuccess =resourceLocks.exclusiveLock(transaction, path, lockOwner, depth, lockDuration);} else {lockSuccess = resourceLocks.sharedLock(transaction, path, lockOwner, depth, lockDuration);}if (lockSuccess) {LockedObject lo = resourceLocks.getLockedObjectByPath(transaction, path);if (lo != null) {generateXMLReport(resp, lo);} else {resp.sendError(WebdavStatus.SC_INTERNAL_SERVER_ERROR);}} else {sendLockFailError(req, resp);throw new LockFailedException();}} else {resp.setContentType(""text/xml; charset=UTF-8"");resp.sendError(WebdavStatus.SC_BAD_REQUEST);}}}}"	Yes
1518	"public class A {@Overridepublic void put(Collection<SinkDataEntry> sinkDataEntries) {try {if (tableQueue.size() > 1) {updater = tableQueue.poll(1000, TimeUnit.MILLISECONDS);} else {updater = tableQueue.peek();}for (SinkDataEntry record : sinkDataEntries) {Map<Field, Object[]> fieldMap = new HashMap<>();Object[] payloads = record.getPayload();Schema schema = record.getSchema();EntryType entryType = record.getEntryType();String cfName = schema.getName();String keyspaceName = schema.getDataSource();List<Field> fields = schema.getFields();Boolean parseError = false;if (!fields.isEmpty()) {for (Field field : fields) {Object fieldValue = payloads[field.getIndex()];Object[] value = JSONObject.parseArray((String) fieldValue).toArray();if (value.length == 2) {fieldMap.put(field, value);} else {log.error(""parseArray error, fieldValue:{}"", fieldValue);parseError = true;}}}if (!parseError) {log.info(""Cassandra Sink Task trying to call updater.push()"");Boolean isSuccess = updater.push(keyspaceName, cfName, fieldMap, entryType);if (!isSuccess) {log.error(""push data error, keyspaceName:{}, cfName:{}, entryType:{}, fieldMap:{}"",keyspaceName,cfName,fieldMap,entryType);}}}} catch (Exception e) {log.error(""put sinkDataEntries error, {}"", e);}}}"	Yes
1519	public class A {void reconnect() {if (listeningChannel == null && channelGroup == null) {} else {closeConnection();}channelGroup = new DefaultChannelGroup(TSOChannelHandler.class.getName());listeningChannel = bootstrap.bind(new InetSocketAddress(config.getPort()));channelGroup.add(listeningChannel);}}	Yes
1520	public class A {protected Key toKey(String expression, VariableResolver resolver) {Set<String> variablesUsed =variableCache.get().computeIfAbsent(expression, this::variablesUsed);Map<String, Object> input = new HashMap<>();for (String v : variablesUsed) {input.computeIfAbsent(v, resolver::resolve);}Key cacheKey = new Key(expression, input);return cacheKey;}}	Yes
1521	"public class A {public static APIManagementProviderService getAPIManagementProviderService() {PrivilegedCarbonContext ctx = PrivilegedCarbonContext.getThreadLocalCarbonContext();APIManagementProviderService apiManagementProviderService =(APIManagementProviderService) ctx.getOSGiService(APIManagementProviderService.class, null);if (apiManagementProviderService == null) {String msg = ""API management provider service has not initialized."";log.error(msg);throw new IllegalStateException(msg);}return apiManagementProviderService;}}"	No
1522	"public class A {protected void unregisterUpdateListener(final TagUpdateListener serverUpdateListener) {refreshLock.readLock().lock();try {listenerLock.lock();try {if (isRegisteredListener(serverUpdateListener)) {TopicRegistrationDetails subsribedToTag = registeredListeners.get(serverUpdateListener);MessageListenerWrapper wrapper = topicToWrapper.get(subsribedToTag.getTopicName());wrapper.removeListener(subsribedToTag.getId());if (wrapper.isEmpty()) {log.trace(""No listeners registered to topic {} so closing down MessageListenerWrapper"",subsribedToTag.getTopicName());try {Session session = sessions.get(wrapper);session.close();} catch (JMSException ex) {log.error(""Failed to unregister properly from a Tag update; subscriptions will be""+ "" refreshed."");startReconnectThread();} finally {wrapper.stop();sessions.remove(wrapper);topicToWrapper.remove(subsribedToTag.getTopicName());}}registeredListeners.remove(serverUpdateListener);}} finally {listenerLock.unlock();}} finally {refreshLock.readLock().unlock();}}}"	No
1523	"public class A {@Overridepublic void write(List<? extends T> items) {for (T data : items) {if (!failed && list.size() == failurePoint) {failed = true;throw new RuntimeException(""Failed processing: ["" + data + ""]"");}logger.info(""Processing: ["" + data + ""]"");list.add(data);}}}"	No
1524	"public class A {public void handle(Activity failedActivity, LifecyclePhase failedCall, Throwable exception) {if (errorHandlingInProgress) {return;}try {errorHandlingInProgress = true;ActivityLifecycleError event =new ActivityLifecycleError(failedActivity, failedCall, exception);try {lifecycleErrorEvent.fire(event);} catch (Exception ex) {logger.warn(""A lifecycle error observer threw an exception"", ex);}if (!event.isErrorMessageSuppressed()) {StringBuilder message = new StringBuilder();message.append(shortName(failedActivity.getClass()) + "" failed in "").append(failedCall);if (exception != null) {message.append("": "").append(exception.toString());}notificationManager.addNotification(new NotificationEvent(message.toString(), NotificationType.ERROR));}} finally {errorHandlingInProgress = false;}}}"	No
1525	"public class A {@Overridepublic int vote(Authentication authentication, Object object, Collection<ConfigAttribute> attributes) {for (GrantedAuthority authority : authentication.getAuthorities()) {if (authority.getAuthority().equals(requiredAuthority)) {return ACCESS_GRANTED;}}log.debug(""ACCESS DENIED ["" + object.toString() + ""]"");return ACCESS_DENIED;}}"	Yes
1526	public class A {@Overridepublic void monitorMaster(Sentinel sentinel, String sentinelMonitorName, HostPort master, int quorum) {SimpleObjectPool<NettyClient> clientPool =keyedClientPool.getKeyPool(new DefaultEndPoint(sentinel.getIp(), sentinel.getPort()));try {AbstractSentinelCommand.SentinelMonitor command =new AbstractSentinelCommand.SentinelMonitor(clientPool, scheduled, sentinelMonitorName, master, quorum);silentCommand(command);command.execute().get();} catch (Exception e) {if (ExceptionUtils.getRootCause(e) instanceof CommandTimeoutException) {} else {}}}}	Yes
1527	public class A {public Long getDiscoveryInitialWaitTimeout() {if (logger.isTraceEnabled()) {}return raProperties.getDiscoveryInitialWaitTimeout();}}	Yes
1528	"public class A {@Overridepublic void close() throws IOException {try {super.close();int exit = connection.waitForExit(TimeUnit.SECONDS.toMillis(30));if (exit != 0) {throw new IOException(MessageFormat.format(""SSH connection returns unexpected exit code: (code={0}, process={1}:source)"",String.valueOf(exit), script.getName()));}} catch (InterruptedException e) {WGLOG.error(e, ""E13001"", profile.getResourceName(), script.getName(), path);Thread.currentThread().interrupt();throw new IOException(""Failed to exit remote process"", e);} finally {try {connection.close();} catch (IOException e) {}}}}"	Yes
1529	"public class A {@Testpublic void testScheduleCampaignCloneFail() throws Exception {iprops.campaignAction.setValue(schedule);iprops.campaignId.setValue(BATCH_CAMPAIGN);iprops.cloneToProgramName.setValue(""undx_test_program"");iprops.afterCampaignAction();MarketoRecordResult rs = getClient(iprops).scheduleCampaign(iprops);assertFalse(rs.isSuccess());assertEquals(""{[611] System error}"", rs.getErrorsString());}}"	Yes
1530	public class A {@Overridepublic Processor wrap(Route route, final Processor processor) {if (LOG.isDebugEnabled()) {}return new ShiroSecurityProcessor(processor, this);}}	Yes
1531	"public class A {public void init(String authConfig) {InputStream in = null;try {try {in = AuthParamManager.class.getResourceAsStream(authConfig);param = SerializeUtils.bytesToObject(in, AuthParam.class);} finally {if (in != null) {in.close();}}} catch (SerializeException | IOException e) {throw new SystemException(""config load error"");}}}"	Yes
1532	public class A {@Overridepublic <TYPE> TYPE get(Layer layer, CacheCategory category, String key, Class<TYPE> type) {TYPE o = getCache(layer, category).get(key, type);if (log.isDebugEnabled()) {}return o;}}	Yes
1533	"public class A {@Overridepublic <E> List<E> findAll(Class<E> entityClass, String[] columnsToSelect, Object... rowIds) {EntityMetadata entityMetadata =KunderaMetadataManager.getEntityMetadata(kunderaMetadata, entityClass);if (rowIds == null) {return null;}List results = new ArrayList<E>();MetamodelImpl metaModel =(MetamodelImpl)kunderaMetadata.getApplicationMetadata().getMetamodel(entityMetadata.getPersistenceUnit());EntityType entityType = metaModel.entity(entityClass);List<AbstractManagedType> subManagedType =((AbstractManagedType) entityType).getSubManagedType();try {if (!subManagedType.isEmpty()) {for (AbstractManagedType subEntity : subManagedType) {EntityMetadata subEntityMetadata =KunderaMetadataManager.getEntityMetadata(kunderaMetadata, subEntity.getJavaType());results =handler.readAll(subEntityMetadata.getSchema(),subEntityMetadata.getEntityClazz(),subEntityMetadata,Arrays.asList(rowIds),subEntityMetadata.getRelationNames());if (!results.isEmpty()) {break;}}} else {results =handler.readAll(entityMetadata.getSchema(),entityMetadata.getEntityClazz(),entityMetadata,Arrays.asList(rowIds),entityMetadata.getRelationNames());}} catch (IOException ioex) {log.error(""Error during find All , Caused by: ."", ioex);throw new KunderaException(ioex);}return results;}}"	No
1534	"public class A {private ScheduledExecutorService createCleanUpExecutor() {final int numCleaningThreads = quotaConfig.getMaxConcurrentCleanUps();CustomizableThreadFactory tf = new CustomizableThreadFactory(""GWC DiskQuota clean up thread-"");tf.setThreadPriority(1 + (Thread.MAX_PRIORITY - Thread.MIN_PRIORITY) / 5);ScheduledExecutorService executorService =Executors.newScheduledThreadPool(numCleaningThreads, tf);return executorService;}}"	Yes
1535	"public class A {private Trace newAsyncTrace(Reference<Trace> reference) {final LocalAsyncId localAsyncId = this.asyncId.nextLocalAsyncId();final Trace asyncTrace = asyncTraceContext.newAsyncTraceObject(traceRoot, localAsyncId);bind(reference, asyncTrace);if (logger.isDebugEnabled()) {logger.debug(""asyncTraceContext.continueAsyncTraceObject() AsyncTrace:{}"", asyncTrace);}final TraceScope oldScope = asyncTrace.addScope(ASYNC_TRACE_SCOPE);if (oldScope != null) {if (logger.isWarnEnabled()) {logger.warn(""Duplicated async trace scope={}."", oldScope.getName());}return null;} else {if (logger.isDebugEnabled()) {logger.debug(""start async trace scope"");}}final SpanEventRecorder recorder = asyncTrace.currentSpanEventRecorder();recorder.recordServiceType(ServiceType.ASYNC);recorder.recordApiId(asyncMethodApiId);return asyncTrace;}}"	No
1536	"public class A {public ScriptingGauge newGauge(String name, double initialValue) {ScriptingGauge scriptingGauge = new ScriptingGauge(name, initialValue);ActivityMetrics.gauge(scriptContext, name, scriptingGauge);logger.info(""registered scripting gauge:"" + name);return scriptingGauge;}}"	No
1537	"public class A {@Overridepublic int getReactionSchemeCount() {logger.debug(""Getting reactionScheme count: "", super.getReactionSchemeCount());return super.getReactionSchemeCount();}}"	No
1538	"public class A {public void addSynchroToGraph(int synchId) {try {full_graph.newLine();if (synchId == 0) {full_graph.write(""Synchro""+ synchId+ ""[label=\""main\"", shape=octagon, style=filled fillcolor=\""#8B0000\""""+ "" fontcolor=\""#FFFFFF\""];"");} else {full_graph.write(""Synchro""+ synchId+ ""[label=\""sync\"", shape=octagon, style=filled fillcolor=\""#ff0000\""""+ "" fontcolor=\""#FFFFFF\""];"");}} catch (IOException e) {LOGGER.error(ERROR_ADDING_DATA, e);}}}"	No
1539	"public class A {public void run() {ClusterInstanceContext instanceContext =(ClusterInstanceContext)getAllNetworkPartitionCtxts().get(networkPartitionId).getInstanceContext(instanceId);boolean allMovedToObsolete = true;for (ClusterLevelPartitionContext partitionContext : instanceContext.getPartitionCtxts()) {if (log.isInfoEnabled()) {log.info(""Starting to terminate all members in cluster [""+ getClusterId()+ ""] ""+ ""Network Partition [""+ instanceContext.getNetworkPartitionId()+ ""], Partition [""+ partitionContext.getPartitionId()+ ""]"");}if (AutoscalerContext.getInstance().getAppMonitor(getAppId()).isForce()) {log.info(String.format(""Terminating all remaining members of partition [partition-id] %s""+ "" [application-id] %s"",partitionContext.getPartitionId(), getAppId()));partitionContext.terminateAllRemainingInstances();}List<String> activeMemberIdList = new ArrayList<String>();for (MemberContext activeMemberCtxt : partitionContext.getActiveMembers()) {activeMemberIdList.add(activeMemberCtxt.getMemberId());}for (String memberId : activeMemberIdList) {log.info(""Sending instance cleanup event for the active member: [member-id] "" + memberId);partitionContext.moveActiveMemberToTerminationPendingMembers(memberId);InstanceNotificationPublisher.getInstance().sendInstanceCleanupEventForMember(memberId);}Iterator<MemberContext> pendingIterator = partitionContext.getPendingMembers().listIterator();List<String> pendingMemberIdList = new ArrayList<String>();while (pendingIterator.hasNext()) {MemberContext activeMemberCtxt = pendingIterator.next();pendingMemberIdList.add(activeMemberCtxt.getMemberId());}for (String memberId : pendingMemberIdList) {if (log.isDebugEnabled()) {log.debug(""Moving pending member [member id] "" + memberId + "" to obsolete list"");}partitionContext.movePendingMemberToObsoleteMembers(memberId);}allMovedToObsolete = partitionContext.getTotalMemberCount() == 0;}if (allMovedToObsolete) {monitor.monitor();}}}"	No
1540	public class A {private void fireCompleteNotification(CoreEvent event, MessagingException messagingException) {if (event != null) {FlowCallStack flowCallStack = event.getFlowCallStack();if (flowCallStack instanceof DefaultFlowCallStack) {((DefaultFlowCallStack) flowCallStack).pop();}} else {}notificationFirer.dispatch(new PipelineMessageNotification(createInfo(event, messagingException, AbstractPipeline.this),AbstractPipeline.this.getName(),PROCESS_COMPLETE));}}	Yes
1541	"public class A {@Transactional(readOnly = true)public ClusterCreate getClusterConfig(String clusterName, boolean needAllocIp) {ClusterEntity clusterEntity = clusterEntityMgr.findByName(clusterName);if (clusterEntity == null) {throw ClusterConfigException.CLUSTER_CONFIG_NOT_FOUND(clusterName);}ClusterCreate clusterConfig = new ClusterCreate();clusterConfig.setName(clusterEntity.getName());clusterConfig.setAppManager(clusterEntity.getAppManager());clusterConfig.setDistro(clusterEntity.getDistro());Map<NetTrafficType, List<ClusterNetConfigInfo>> networkConfigInfo =clusterEntity.getNetworkConfigInfo();if (networkConfigInfo != null && !networkConfigInfo.isEmpty()) {for (NetTrafficType trafficType : networkConfigInfo.keySet()) {clusterConfig.setHostnamePrefix(networkConfigInfo.get(trafficType).get(0).getHostnamePrefix());break;}}convertClusterConfig(clusterEntity, clusterConfig, needAllocIp);Gson gson = new GsonBuilder().excludeFieldsWithoutExposeAnnotation().create();String manifest = gson.toJson(clusterConfig);logger.debug(""final cluster spec: "" + manifest);return clusterConfig;}}"	No
1542	"public class A {public void activate() {logger.debug(""activate()"");}}"	No
1543	public class A {private boolean lock(Resource resource, String resourceName, Consumer<String> lockFn, String lockType) {if (!resource.canLock(lockSet.get())) {String errorMessage = getErrorMessage(resource);LOG.error(errorMessage);throw new RuntimeException(errorMessage);} else {lockFn.accept(resourceName);if (LOG.isDebugEnabled()) {}lockSet.set(resource.setLock(lockSet.get()));return true;}}}	Yes
1544	"public class A {protected static Iterable<Object[]> defineParameters() throws ClassNotFoundException {initClasses();List<Object[]> tests = new ArrayList<>();for (Class<? extends IFormattedException> clazz : exceptionClasses) {Class<? extends IFormattedException> root =roots.stream().filter(c -> c.isAssignableFrom(clazz)).findAny().orElseThrow(IllegalStateException::new);final Constructor<?>[] declaredConstructors = clazz.getDeclaredConstructors();for (Constructor<?> ctor : declaredConstructors) {tests.add(new Object[] {clazz.getSimpleName()+ "".<init>""+ Stream.of(ctor.getParameterTypes()).map(Class::getSimpleName).collect(Collectors.toList()),ctor,root});}int methods = 0;for (Method m : clazz.getDeclaredMethods()) {if ((m.getModifiers() & PUBLIC_STATIC) == PUBLIC_STATIC) {methods++;tests.add(new Object[] {clazz.getSimpleName()+ "".""+ m.getName()+ Stream.of(m.getParameterTypes()).map(Class::getSimpleName).collect(Collectors.toList()),m,root});}}}return tests;}}"	Yes
1545	"public class A {private void prepareProjectEdit(RenderRequest request) {User user = UserCacheHolder.getUserFromRequest(request);String id = request.getParameter(PROJECT_ID);request.setAttribute(DOCUMENT_TYPE, SW360Constants.TYPE_PROJECT);Project project;Set<Project> usingProjects;int allUsingProjectCount = 0;request.setAttribute(DEFAULT_LICENSE_INFO_HEADER_TEXT, getProjectDefaultLicenseInfoHeaderText());if (id != null) {try {ProjectService.Iface client = thriftClients.makeProjectClient();project = client.getProjectByIdForEdit(id, user);usingProjects = client.searchLinkingProjects(id, user);allUsingProjectCount = client.getCountByProjectId(id);} catch (TException e) {setSW360SessionError(request, ErrorMessages.ERROR_GETTING_PROJECT);return;}request.setAttribute(PROJECT, project);request.setAttribute(DOCUMENT_ID, id);setAttachmentsInRequest(request, project.getAttachments());try {putDirectlyLinkedProjectsInRequest(request, project, user);putDirectlyLinkedReleasesInRequest(request, project);} catch (TException e) {log.error(""Could not fetch linked projects or linked releases in projects view."", e);return;}request.setAttribute(USING_PROJECTS, usingProjects);request.setAttribute(ALL_USING_PROJECTS_COUNT, allUsingProjectCount);Map<RequestedAction, Boolean> permissions = project.getPermissions();DocumentState documentState = project.getDocumentState();addEditDocumentMessage(request, permissions, documentState);} else {if (request.getAttribute(PROJECT) == null) {project = new Project();project.setBusinessUnit(user.getDepartment());request.setAttribute(PROJECT, project);setAttachmentsInRequest(request, project.getAttachments());try {putDirectlyLinkedProjectsInRequest(request, project, user);putDirectlyLinkedReleasesInRequest(request, project);} catch (TException e) {}request.setAttribute(USING_PROJECTS, Collections.emptySet());request.setAttribute(ALL_USING_PROJECTS_COUNT, 0);SessionMessages.add(request, ""request_processed"", ""New Project"");}}}}"	Yes
1546	"public class A {@SuppressWarnings({""unchecked""})void execute(final HttpTransactionContext transactionCtx) throws IOException {try {transactionCtx.getConnection().write(transactionCtx, createWriteCompletionHandler(transactionCtx.future));} catch (Exception e) {if (e instanceof RuntimeException) {throw (RuntimeException) e;} else if (e instanceof IOException) {throw (IOException) e;}if (LOGGER.isWarnEnabled()) {LOGGER.warn(e.toString(), e);}}}}"	No
1547	"public class A {@Post(path = ""admin.api/notices"", subscribeToken = ""csrf"")@Auth(roles = ""admin"")public Boundary postNotice() throws InvalidParamException {LOG.trace(""postNotice"");NoticesEntity entity = HttpUtil.parseJson(getRequest(), NoticesEntity.class);entity = NoticesLogic.get().insertNotice(entity);MessageResult result =new MessageResult(MessageStatus.Success,HttpStatus.SC_200_OK,getResource(""message.success.insert""),entity.getNo().toString());return send(result);}}"	No
1548	public class A {@Overridepublic synchronized void close() {ofNullable(shutdown).ifPresent(Runnable::run);if (instance != null) {try {instance.join(TimeUnit.MINUTES.toMillis(5));} catch (final InterruptedException e) {Thread.currentThread().interrupt();} finally {instance = null;shutdown = null;}}Stream.of(handler.getResponseLocator(), handler.getExecutor()).filter(AutoCloseable.class::isInstance).map(AutoCloseable.class::cast).forEach(c -> {try {c.close();} catch (final Exception e) {}});if (!AutoCloseable.class.isInstance(handler.getExecutor())&& ExecutorService.class.isInstance(handler.getExecutor())) {final ExecutorService executorService = ExecutorService.class.cast(handler.getExecutor());executorService.shutdownNow();}}}	Yes
1549	"public class A {protected void redoStoreOverflow(final OverflowStoreLoggable loggable) {try {SinglePage page = getSinglePageForRedo(loggable, loggable.pageNum);if (page != null && requiresRedo(loggable, page)) {final BFilePageHeader ph = page.getPageHeader();try {System.arraycopy(loggable.data, 0, page.getData(), 0, loggable.size);} catch (final ArrayIndexOutOfBoundsException e) {throw e;}ph.setDataLength(loggable.size);ph.setNextInChain(0);ph.setLsn(loggable.getLsn());page.setDirty(true);dataCache.add(page);if (loggable.prevPage != Page.NO_PAGE) {page = getSinglePage(loggable.prevPage);SanityCheck.ASSERT(page != null, ""Previous page is null"");page.getPageHeader().setNextInChain(loggable.pageNum);page.setDirty(true);dataCache.add(page);}}} catch (final IOException e) {}}}"	Yes
1550	"public class A {@Overridepublic CodegenOperation fromOperation(String path, String httpMethod, Operation operation, List<Server> servers) {Map<String, Schema> definitions = ModelUtils.getSchemas(this.openAPI);CodegenOperation op = super.fromOperation(path, httpMethod, operation, servers);if (op.vendorExtensions.containsKey(""x-bash-codegen-description"")) {String bash_description = (String) op.vendorExtensions.get(""x-bash-codegen-description"");op.vendorExtensions.put(""x-bash-codegen-description"", escapeText(bash_description));}if (op.vendorExtensions.containsKey(""x-code-samples"")) {List codesamples = (List) op.vendorExtensions.get(""x-code-samples"");for (Object codesample : codesamples) {if (codesample instanceof ObjectNode) {ObjectNode codesample_object = (ObjectNode) codesample;if ((codesample_object.get(""lang"").asText()).equals(""Shell"")) {op.vendorExtensions.put(""x-bash-codegen-sample"",escapeUnsafeCharacters(codesample_object.get(""source"").asText()));}}}}for (CodegenParameter p : op.bodyParams) {if (p.dataType != null && definitions.get(p.dataType) != null) {if (getConsumesInfo(this.openAPI, operation) != null&& getConsumesInfo(this.openAPI, operation).contains(""application/json"")&& definitions.get(p.dataType).getExample() != null) {ObjectMapper mapper = new ObjectMapper();try {p.vendorExtensions.put(""x-codegen-body-example"",mapper.writerWithDefaultPrettyPrinter().writeValueAsString(definitions.get(p.dataType).getExample()));} catch (JsonProcessingException e) {}} else {p.vendorExtensions.put(""x-codegen-body-example"", definitions.get(p.dataType).getExample());}}}return op;}}"	Yes
1551	"public class A {@Overridepublic CAS readCas(TrainingDocument aDocument) throws IOException {synchronized (lock) {File annotationFolder = getAutomationFolder(aDocument);String file = aDocument.getName() + "".ser"";try {File serializedCasFile = new File(annotationFolder, file);if (!serializedCasFile.exists()) {throw new FileNotFoundException(""Annotation document of  Training document ""+ ""[""+ aDocument.getName()+ ""] (""+ aDocument.getId()+ "") not found in project[""+ aDocument.getProject().getName()+ ""] (""+ aDocument.getProject().getId()+ "")"");}CAS cas = CasCreationUtils.createCas((TypeSystemDescription) null, null, null);CasPersistenceUtils.readSerializedCas(cas, serializedCasFile);analyzeAndRepair(aDocument, cas);return cas;} catch (UIMAException e) {throw new DataRetrievalFailureException(""Unable to parse annotation"", e);}}}}"	Yes
1552	public class A {@Overridepublic PubAnnotationProviderTraits readTraits(DocumentRepository aDocumentRepository) {PubAnnotationProviderTraits traits = null;try {traits =fromJsonString(PubAnnotationProviderTraits.class, aDocumentRepository.getProperties());} catch (IOException e) {}if (traits == null) {traits = new PubAnnotationProviderTraits();}return traits;}}	Yes
1553	"public class A {@Overridepublic Map<String, ByteBuffer> getAllFiles() throws IOException {Map<String, ByteBuffer> allFiles = new HashMap<>();String base = templateDir.getCanonicalPath();for (File file :FileUtils.listFiles(templateDir, new RegexFileFilter(""^(?!\\.).*""), TrueFileFilter.TRUE)) {byte[] byteArray = IOUtils.toByteArray(new FileInputStream(file));String filePath = file.getCanonicalPath().substring(base.length() + 1);allFiles.put(filePath, ByteBuffer.wrap(byteArray));}return allFiles;}}"	Yes
1554	"public class A {@Modifiedpublic void modify(Map<String, Object> properties) {Object portletName = properties.get(""javax.portlet.name"");}}"	Yes
1555	"public class A {private void deleteMailbox(MailboxSession mailboxSession, MailboxPath mailboxPath)throws MailboxException {try {mailboxManager.deleteMailbox(mailboxPath, mailboxSession);} catch (MailboxNotFoundException e) {LOGGER.info(""Attempt to delete mailbox {} for user {} that does not exists"",mailboxPath.getName(),mailboxPath.getUser());}}}"	No
1556	public class A {@Overridepublic void objectInserted(ObjectInsertedEvent event) {}}	Yes
1557	"public class A {@Overridevoid executeWithSolrClient(SolrClient solrClient)throws SolrServerException, IOException, InterruptedException {Iterable<Result> iterable =ResultIterable.resultIterable(catalogFramework, getGazetteerFilter());console.println(""Starting sync..."");long counter = 0;Instant start = Instant.now();for (List<Result> results : Iterables.partition(iterable, PARTITION_SIZE)) {if (Thread.interrupted()) {printErrorMessage(""Catalog sync interrupted, exiting"");Thread.currentThread().interrupt();throw new InterruptedException();}solrClient.add(results.stream().map(Result::getMetacard).map(CatalogGazetteerForwardingPlugin::convert).collect(Collectors.toList()));counter += results.size();}printSuccessMessage(String.format(""%nComplete. Processed %d items in %s%n"",counter, Duration.between(start, Instant.now())));}}"	Yes
1558	"public class A {public ConnectionConsumer createConnectionConsumer(final Destination destination, final ServerSessionPool pool, final int maxMessages)throws JMSException {if (ActiveMQRALogger.LOGGER.isTraceEnabled()) {ActiveMQRALogger.LOGGER.trace(""createConnectionConsumer("" + destination + "", "" + pool + "", "" + maxMessages + "")"");}throw new IllegalStateException(ISE);}}"	No
1559	"public class A {@Overridepublic ObjectField fetchByODI_N(long objectDefinitionId, String name, boolean useFinderCache) {name = Objects.toString(name, """");Object[] finderArgs = null;if (useFinderCache) {finderArgs = new Object[] {objectDefinitionId, name};}Object result = null;if (useFinderCache) {result = finderCache.getResult(_finderPathFetchByODI_N, finderArgs);}if (result instanceof ObjectField) {ObjectField objectField = (ObjectField) result;if ((objectDefinitionId != objectField.getObjectDefinitionId())|| !Objects.equals(name, objectField.getName())) {result = null;}}if (result == null) {StringBundler sb = new StringBundler(4);sb.append(_SQL_SELECT_OBJECTFIELD_WHERE);sb.append(_FINDER_COLUMN_ODI_N_OBJECTDEFINITIONID_2);boolean bindName = false;if (name.isEmpty()) {sb.append(_FINDER_COLUMN_ODI_N_NAME_3);} else {bindName = true;sb.append(_FINDER_COLUMN_ODI_N_NAME_2);}String sql = sb.toString();Session session = null;try {session = openSession();Query query = session.createQuery(sql);QueryPos queryPos = QueryPos.getInstance(query);queryPos.add(objectDefinitionId);if (bindName) {queryPos.add(name);}List<ObjectField> list = query.list();if (list.isEmpty()) {if (useFinderCache) {finderCache.putResult(_finderPathFetchByODI_N, finderArgs, list);}} else {if (list.size() > 1) {Collections.sort(list, Collections.reverseOrder());if (_log.isWarnEnabled()) {if (!useFinderCache) {finderArgs = new Object[] {objectDefinitionId, name};}_log.warn(""ObjectFieldPersistenceImpl.fetchByODI_N(long, String, boolean) with parameters (""+ StringUtil.merge(finderArgs)+ "") yields a result set with more than 1 result. This violates the logical""+ "" unique restriction. There is no order guarantee on which result is""+ "" returned by this finder."");}}ObjectField objectField = list.get(0);result = objectField;cacheResult(objectField);}} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}if (result instanceof List<?>) {return null;} else {return (ObjectField) result;}}}"	No
1560	"public class A {public void delete(TmpBauSel persistentInstance) {try {sessionFactory.getCurrentSession().delete(persistentInstance);} catch (RuntimeException re) {log.error(""delete failed"", re);throw re;}}}"	Yes
1561	public class A {public static ClusterCreate getSimpleClusterSpec(String specName) throws Exception {String json = TestPlacementUtil.readJson(specName);logger.info(json);ObjectMapper mapper = new ObjectMapper();try {return mapper.readValue(json, ClusterCreate.class);} catch (Exception e) {throw e;}}}	Yes
1562	"public class A {@Overridepublic boolean hasEquipmentCore() {if (queryCatalog.containsKey(MODEL_PROFILES)) {PropertyBags r = namedQuery(MODEL_PROFILES);if (r == null) {return false;}for (PropertyBag m : r) {String p = m.get(PROFILE);if (p != null && p.contains(""/EquipmentCore/"")) {if (LOG.isInfoEnabled()) {}return true;}}return false;}return true;}}"	Yes
1563	"public class A {public static void fileProcessPattern() throws Exception {Pipeline p = Pipeline.create();p.apply(FileIO.match().filepattern(""..."").continuously(Duration.standardSeconds(30),Watch.Growth.afterTimeSinceNewOutput(Duration.standardHours(1))));p.apply(TextIO.read().from(""<path-to-files>/*"").watchForNewFiles(Duration.standardMinutes(1),Watch.Growth.afterTimeSinceNewOutput(Duration.standardHours(1))));p.apply(FileIO.match().filepattern(""hdfs://path/to/*.gz"")).apply(FileIO.readMatches().withCompression(Compression.GZIP)).apply(ParDo.of(new DoFn<FileIO.ReadableFile, String>() {@ProcessElementpublic void process(@Element FileIO.ReadableFile file) {LOG.info(""File Metadata resourceId is {} "", file.getMetadata().resourceId());}}));}}"	No
1564	"public class A {@Overridepublic void setUp() {if (!getConfig().isWritable()) {return;}if (isUp()) {} else {LOG.info(""Did not find a deflector alias. Setting one up now."");try {final String currentTarget = getNewestIndex();LOG.info(""Pointing to already existing index target <{}>"", currentTarget);pointTo(currentTarget);} catch (NoTargetIndexException ex) {final String msg = ""There is no index target to point to. Creating one now."";activityWriter.write(new Activity(msg, IndexSet.class));cycle();}}}}"	Yes
1565	public class A {@Overridepublic QueueSet subscribeToQueue(String publisherQueuePath, String subscriberQueuePath) {publisherQueuePath = normalizeQueuePath(publisherQueuePath);UUID publisherQueueId = getQueueId(publisherQueuePath);subscriberQueuePath = normalizeQueuePath(subscriberQueuePath);UUID subscriberQueueId = getQueueId(subscriberQueuePath);UUID timestampUuid = newTimeUUID();long timestamp = getTimestampInMicros(timestampUuid);Mutator<ByteBuffer> batch =CountingMutator.createFlushingMutator(cass.getApplicationKeyspace(applicationId), be);batchSubscribeToQueue(batch,publisherQueuePath,publisherQueueId,subscriberQueuePath,subscriberQueueId,timestamp);try {Queue queue = getQueue(subscriberQueuePath, subscriberQueueId);if (queue != null) {batchUpdateQueuePropertiesIndexes(batch,publisherQueueId,subscriberQueuePath,subscriberQueueId,queue.getProperties(),timestampUuid);}} catch (Exception e) {}batchExecute(batch, RETRY_COUNT);return new QueueSet().addQueue(subscriberQueuePath, subscriberQueueId);}}	Yes
1566	"public class A {@Overridepublic void onTrigger(final ProcessContext context, final ProcessSession session)throws ProcessException {if (proxyOut == null) {proxyOut = new ProxyOutputStream(getLogger());}final Long batchNanos = context.getProperty(BATCH_DURATION).asTimePeriod(TimeUnit.NANOSECONDS);final String command = context.getProperty(COMMAND).evaluateAttributeExpressions().getValue();final String arguments =context.getProperty(COMMAND_ARGUMENTS).isSet()? context.getProperty(COMMAND_ARGUMENTS).evaluateAttributeExpressions().getValue(): null;final List<String> commandStrings = createCommandStrings(context, command, arguments);final String commandString = StringUtils.join(commandStrings, "" "");if (longRunningProcess == null || longRunningProcess.isDone()) {try {longRunningProcess = launchProcess(context, commandStrings, batchNanos, proxyOut);} catch (final IOException ioe) {getLogger().error(""Failed to create process due to {}"", new Object[] {ioe});context.yield();return;}} else {}if (!isScheduled()) {longRunningProcess.cancel(true);return;}FlowFile flowFile = session.create();flowFile =session.write(flowFile,new OutputStreamCallback() {@Overridepublic void process(final OutputStream flowFileOut) throws IOException {try (final OutputStream out = new BufferedOutputStream(flowFileOut)) {proxyOut.setDelegate(out);if (batchNanos == null) {try {longRunningProcess.get();} catch (final InterruptedException ie) {} catch (final ExecutionException ee) {getLogger()}} else {try {TimeUnit.NANOSECONDS.sleep(batchNanos);} catch (final InterruptedException ie) {}}proxyOut.setDelegate(null);}}});if (flowFile.getSize() == 0L) {session.remove(flowFile);} else if (failure.get()) {session.remove(flowFile);} else {flowFile = session.putAttribute(flowFile, ATTRIBUTE_COMMAND, command);if (arguments != null) {flowFile = session.putAttribute(flowFile, ATTRIBUTE_COMMAND_ARGS, arguments);}session.getProvenanceReporter().create(flowFile, ""Created from command: "" + commandString);session.transfer(flowFile, REL_SUCCESS);}}}"	Yes
1567	"public class A {private Resources findDriverResources(Collection<WorkflowNode> nodes, Map<String, Resources> runnablesResources) {Resources resources = new Resources();for (WorkflowNode node : nodes) {switch (node.getType()) {case ACTION:String programName = ((WorkflowActionNode) node).getProgram().getProgramName();Resources runnableResources = runnablesResources.get(programName);if (runnableResources != null) {resources = maxResources(resources, runnableResources);}break;case FORK:Resources forkResources =((WorkflowForkNode) node).getBranches().stream().map(branches -> findDriverResources(branches, runnablesResources)).reduce(this::mergeForkResources).orElse(resources);resources = maxResources(resources, forkResources);break;case CONDITION:Resources branchesResources =maxResources(findDriverResources(((WorkflowConditionNode) node).getIfBranch(), runnablesResources),findDriverResources(((WorkflowConditionNode) node).getElseBranch(), runnablesResources));resources = maxResources(resources, branchesResources);break;default:LOG.warn(""Ignoring unsupported Workflow node type {}"", node.getType());}}return resources;}}"	No
1568	"public class A {void processPublish(MqttPublishMessage msg) {final MqttQoS qos = msg.fixedHeader().qosLevel();final String username = NettyUtils.userName(channel);final String topicName = msg.variableHeader().topicName();final String clientId = getClientId();final int messageID = msg.variableHeader().packetId();LOG.trace(""Processing PUBLISH message, topic: {}, messageId: {}, qos: {}"", topicName, messageID, qos);ByteBuf payload = msg.payload();final boolean retain = msg.fixedHeader().isRetain();final Topic topic = new Topic(topicName);if (!topic.isValid()) {LOG.debug(""Drop connection because of invalid topic format"");dropConnection();}switch (qos) {case AT_MOST_ONCE:postOffice.receivedPublishQos0(topic, username, clientId, payload, retain, msg);break;case AT_LEAST_ONCE:{postOffice.receivedPublishQos1(this, topic, username, payload, messageID, retain, msg);break;}case EXACTLY_ONCE:{bindedSession.receivedPublishQos2(messageID, msg);postOffice.receivedPublishQos2(this, msg, username);break;}default:LOG.error(""Unknown QoS-Type:{}"", qos);break;}}}"	No
1569	"public class A {private void handleResponse(final String correlationId, final Message message) {final var resultHandler = handlers.remove(correlationId);if (resultHandler == null) {LOG.debug(""discarding unexpected response [correlation-id: {}]"", correlationId);} else {try {final int status = message.getIntProperty(MessageHelper.APP_PROPERTY_STATUS);if (StatusCodeMapper.isSuccessful(status)) {handleSuccess(message, status, resultHandler.one(), resultHandler.two());} else {handleFailure(message, status, resultHandler.one());}} catch (JMSException e) {resultHandler.one().handle(Future.failedFuture(new ServerErrorException(HttpURLConnection.HTTP_INTERNAL_ERROR,""server returned malformed response: no status code"")));}}}}"	No
1570	"public class A {private synchronized boolean uninstallFeature(String name) {try {Feature[] features = featuresService.listInstalledFeatures();if (anyMatchingFeature(features, withName(name))) {featuresService.uninstallFeature(name);logger.debug(""Uninstalled '{}'"", name);postUninstalledEvent(name);return true;}} catch (Exception e) {}return false;}}"	Yes
1571	"public class A {public static void deleteCommercePriceListAccountGroupRelsByCommercePriceListId(HttpPrincipal httpPrincipal, long commercePriceListId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommercePriceListCommerceAccountGroupRelServiceUtil.class,""deleteCommercePriceListAccountGroupRelsByCommercePriceListId"",_deleteCommercePriceListAccountGroupRelsByCommercePriceListIdParameterTypes1);MethodHandler methodHandler = new MethodHandler(methodKey, commercePriceListId);try {TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
1572	public class A {@Overridepublic void skipTo(long pos) {checkLife();try {boolean available = rs.absolute((int) pos + 1);if (available) {next = fetchCurrent();eof = false;this.pos = pos;} else {next = null;eof = true;this.pos = -1;}} catch (SQLException e) {}}}	Yes
1573	"public class A {@Overridepublic void onData(Stream stream, DataFrame frame, Callback callback) {byte[] bytes = new byte[frame.getData().remaining()];frame.getData().get(bytes);response = new String(bytes);LOG.info(""---------------- Response with content received from '{}' ----------------\n""+ ""---------------- START Response-Body ----------------\n""+ ""{}\n""+ ""---------------- END Response-Body ----------------"",request.getURI(),response);doAssert(response);callback.succeeded();}}"	No
1574	"public class A {@POST@Path(""{noteId}/paragraph/{paragraphId}/move/{newIndex}"")@ZeppelinApipublic Response moveParagraph(@PathParam(""noteId"") String noteId,@PathParam(""paragraphId"") String paragraphId,@PathParam(""newIndex"") String newIndex)throws IOException {LOGGER.info(""Move paragraph {} {} {}"", noteId, paragraphId, newIndex);notebookService.moveParagraph(noteId,paragraphId,Integer.parseInt(newIndex),getServiceContext(),new RestServiceCallback<Paragraph>() {@Overridepublic void onSuccess(Paragraph result, ServiceContext context) throws IOException {notebookServer.broadcastNote(result.getNote());}});return new JsonResponse<>(Status.OK, """").build();}}"	No
1575	"public class A {private Map<String, Value> loadMapsFromFiles(List<File> files, String[] extensions, String directory) {Collection<File> fileCollection;if (CollectionUtils.isEmpty(files)) {fileCollection = loadDefaultFiles(extensions, directory, false);if (CollectionUtils.isEmpty(fileCollection)) {return null;}} else {fileCollection = files;}Map<String, Value> result = new HashMap<>();for (File inputFile : fileCollection) {logger.info(""Loading file: "" + inputFile);try {String inputsFileContent = SlangSource.fromFile(inputFile).getContent();Boolean emptyContent = true;if (StringUtils.isNotEmpty(inputsFileContent)) {@SuppressWarnings(""unchecked"")Map<String, ? extends Serializable> inputFileYamlContent =(Map<String, ? extends Serializable>) yaml.load(inputsFileContent);if (MapUtils.isNotEmpty(inputFileYamlContent)) {emptyContent = false;result.putAll(slangSourceService.convertInputFromMap(inputFileYamlContent, inputFile.getName()));}}if (emptyContent) {throw new RuntimeException(""Inputs file: "" + inputFile + "" is empty or does not contain valid YAML content."");}} catch (RuntimeException ex) {throw new RuntimeException(ex);}}return result;}}"	Yes
1576	"public class A {public void sendWindowChange(int columns, int lines, int height, int width) throws IOException {if (log.isDebugEnabled()) {log.debug(""sendWindowChange({}) cols={}, lines={}, height={}, width={}"",this,columns,lines,height,width);}setPtyColumns(columns);setPtyLines(lines);setPtyHeight(height);setPtyWidth(width);Session session = getSession();Buffer buffer = session.createBuffer(SshConstants.SSH_MSG_CHANNEL_REQUEST, Long.SIZE);buffer.putInt(getRecipient());buffer.putString(""window-change"");buffer.putBoolean(false);buffer.putInt(getPtyColumns());buffer.putInt(getPtyLines());buffer.putInt(getPtyHeight());buffer.putInt(getPtyWidth());writePacket(buffer);}}"	No
1577	"public class A {public static com.liferay.mobile.device.rules.model.MDRRuleGroupInstance updateRuleGroupInstance(HttpPrincipal httpPrincipal, long ruleGroupInstanceId, int priority)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(MDRRuleGroupInstanceServiceUtil.class,""updateRuleGroupInstance"",_updateRuleGroupInstanceParameterTypes5);MethodHandler methodHandler = new MethodHandler(methodKey, ruleGroupInstanceId, priority);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.mobile.device.rules.model.MDRRuleGroupInstance) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {_log.error(systemException, systemException);throw systemException;}}}"	No
1578	"public class A {public boolean incrementUsage(TenantCapacity tenantCapacity) {String sql =""UPDATE tenant_capacity SET `usage` = `usage` + 1, gmt_modified = ? WHERE tenant_id = ?"";try {int affectRow =jdbcTemplate.update(sql, tenantCapacity.getGmtModified(), tenantCapacity.getTenant());return affectRow == 1;} catch (CannotGetJdbcConnectionException e) {throw e;}}}"	Yes
1579	public class A {@Overridepublic long purgeOldestEvents() {final List<File> eventFiles =getEventFilesFromDisk().sorted(DirectoryUtils.SMALLEST_ID_FIRST).collect(Collectors.toList());if (eventFiles.size() < 2) {return 0L;}final File currentFile = getActiveEventFile();if (currentFile == null) {return 0L;}for (final File eventFile : eventFiles) {if (eventFile.equals(currentFile)) {break;}final long fileSize = eventFile.length();if (delete(eventFile)) {return fileSize;} else {continue;}}return 0L;}}	Yes
1580	"public class A {private TNonblockingServerTransport createPartitionServerTransport(int port) {TNonblockingServerSocket transport = null;int tries = 0;int maxTries = 1000;while (tries < maxTries) {try {transport = new TNonblockingServerSocket(port);LOG.debug(""succeeded in binding server to port "" + port);break;} catch (TTransportException e) {port++;}++tries;}if (tries == maxTries) {throw new RuntimeException(""Could not not create partition server transport"");}return transport;}}"	Yes
1581	public class A {@Testvoid testError() {Exception exception = new SLException(ERROR_MESSAGE);assertEquals(ERROR_MESSAGE, exception.getMessage());}}	Yes
1582	"public class A {public static void killCmd(String[] cmd, Signal signal, CommandExecutorService executorService) {Map<String, Pid> pids =executorService.getPids(cmd).entrySet().stream().filter(entry -> entry.getKey().equals(String.join("" "", cmd))).collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));for (Pid pid : pids.values()) {if (!executorService.stop(pid, signal)) {logger.warn(""Failed to stop command with pid {}"", pid.getPid());}}}}"	No
1583	public class A {@Overridepublic IQ handle(IQ iq) {LOGGER.debug(String.format(Messages.Log.RECEIVING_REMOTE_REQUEST_S, iq.getID()));IQ response = IQ.createResultIQ(iq);String orderId = unmarshalOrderId(iq);try {String senderId =IntercomponentUtil.getSender(iq.getFrom().toBareJID(), SystemConstants.XMPP_SERVER_NAME_PREFIX);RemoteFacade.getInstance().closeOrderAtRemoteRequester(senderId, orderId);} catch (Exception e) {XmppExceptionToErrorConditionTranslator.updateErrorCondition(response, e);}return response;}}	No
1584	"public class A {public synchronized void registerSimpleCommand(PluginContainer plugin, Object simpleCommand) {Objects.requireNonNull(simpleCommand, ""simpleCommand"");Objects.requireNonNull(plugin, ""plugin"");checkClosed();for (Method method : simpleCommand.getClass().getDeclaredMethods()) {org.cloudburstmc.server.command.simple.Command def =method.getAnnotation(org.cloudburstmc.server.command.simple.Command.class);if (def != null) {String cmd = def.name();NAME_MATCHER.reset(cmd);if (!NAME_MATCHER.matches()) {log.error(""Invalid Command name in SimpleCommand: {}, skipping"", cmd);continue;}String perms = """";CommandPermission perm = method.getAnnotation(CommandPermission.class);if (perm != null) {perms = perm.value();}List<CommandParameter[]> params = new ArrayList<>();CommandParameters parameters = method.getAnnotation(CommandParameters.class);if (parameters != null) {for (Parameters p : parameters.parameters()) {List<CommandParameter> p2 = new ArrayList<>();for (Parameter parameter : p.parameters()) {p2.add(new CommandParameter(parameter.name(), parameter.type(), parameter.optional()));}params.add(p2.toArray(new CommandParameter[0]));}}SimpleCommand sc =new SimpleCommand(simpleCommand,method,cmd,def.description(),def.usageMessage(),def.aliases(),perms,params);Arguments args = method.getAnnotation(Arguments.class);if (args != null) {sc.setMaxArgs(args.max());sc.setMinArgs(args.min());}if (method.isAnnotationPresent(ForbidConsole.class)) {sc.setForbidConsole(true);}register(plugin, sc);}}}}"	No
1585	"public class A {@Overridepublic Representation get() {StringRepresentation presentation = null;try {String clusterName = (String) getRequest().getAttributes().get(""clusterName"");String instanceName = (String) getRequest().getAttributes().get(""instanceName"");String resourceGroup = (String) getRequest().getAttributes().get(""resourceName"");presentation =getInstanceCurrentStateRepresentation(clusterName, instanceName, resourceGroup);} catch (Exception e) {String error = ClusterRepresentationUtil.getErrorAsJsonStringFromException(e);presentation = new StringRepresentation(error, MediaType.APPLICATION_JSON);}return presentation;}}"	Yes
1586	public class A {@Overridepublic synchronized void deleteCompletedLogs() throws IOException {long logNumber = UfsJournal.FIRST_COMPLETED_LOG_NUMBER;while (mUfs.isFile(mJournal.getCompletedLog(logNumber).toString())) {logNumber++;}for (long i = logNumber - 1; i >= 0; i--) {URI log = mJournal.getCompletedLog(i);mUfs.deleteFile(log.toString());}mNextCompleteLogNumber = UfsJournal.FIRST_COMPLETED_LOG_NUMBER;}}	Yes
1587	"public class A {private void populateRegionSubRegions(RegionSubRegionSnapshot parentSnapShot, Set regions, InternalCache cache) {if (this.cancelled) {return;}for (Object region : regions) {Region subRegion = (Region) region;try {RegionSubRegionSnapshot subRegionSnapShot = new RegionSubRegionSnapshot(subRegion);parentSnapShot.addSubRegion(subRegionSnapShot);Set subRegions = subRegion.subregions(false);populateRegionSubRegions(subRegionSnapShot, subRegions, cache);} catch (Exception e) {logger.debug(""Failed to create snapshot for region: {}. Continuing with next region."",subRegion.getFullPath(),e);}}}}"	No
1588	"public class A {@Overridepublic Tuple exec(Tuple input) throws IOException {if (input == null || input.size() == 0) {return null;}try {DataBag categReal = (DataBag) input.get(0);DataBag categClassif = (DataBag) input.get(1);List<String> real = new ArrayList<String>();List<String> classif = new ArrayList<String>();for (Tuple t : categReal) {real.add((String) t.get(0));}for (Tuple t : categClassif) {classif.add((String) t.get(0));}int is = intersectSize(real, classif);double acc = (double) is / (double) sumSize(real, classif);double p = (double) is / (double) classif.size();double r = (double) is / (double) real.size();Double f1 = p + r != 0 ? 2 * p * r / (p + r) : null;double hl = sumSize(subs(real, classif), subs(classif, real));int zol = is == real.size() && is == classif.size() ? 1 : 0;Object[] obj = new Object[] {acc, p, r, f1, hl, zol};return TupleFactory.getInstance().newTuple(Arrays.asList(obj));} catch (Exception e) {throw new IOException(""Caught exception processing input row:\n"" + StackTraceExtractor.getStackTrace(e));}}}"	Yes
1589	"public class A {@OverrideTupleValue encodeFromRawInternal(Object o, Optional<CassandraOptions> cassandraOptions) {if (LOGGER.isTraceEnabled()) {}Validator.validateTrue(Tuple2.class.isAssignableFrom(o.getClass()),""The class of object %s to encode should be Tuple2"",o);return encodeFromJava((Tuple2<A, B>) o, cassandraOptions);}}"	Yes
1590	public class A {@Overridepublic void writeTo(ClusterRequest request, ByteBuf target) {int type = request.getType();EntityWriter<Object, ByteBuf> requestDataWriter = RequestDataWriterRegistry.getWriter(type);if (requestDataWriter == null) {return;}writeHead(request, target);requestDataWriter.writeTo(request.getData(), target);}}	Yes
1591	"public class A {public void sync() {if (syncInProgress) {return;}syncInProgress = true;try {for (DeviceMapping device : deviceList.values()) {reattach(device);}List<PinDefinition> list = getPinList();for (PinDefinition pindef : list) {if (pindef.isEnabled()) {enablePin(pindef.getPinName());}}} catch (Exception e) {}syncInProgress = false;log.info(""Sync completed"");}}"	Yes
1592	public class A {@Overridepublic void writeElement(SBMLObjectForXML xmlObject, Object sbmlElementToWrite) {super.writeElement(xmlObject, sbmlElementToWrite);if (logger.isDebugEnabled()) {}}}	Yes
1593	"public class A {public static String extractKey(String documentURL) throws DataServiceFault {URI documentURI;try {documentURI = new URI(documentURL);} catch (URISyntaxException e) {String message = ""Document URL Syntax error:"" + documentURL;throw new DataServiceFault(e, message);}String extractedQuery = documentURI.getQuery();if (extractedQuery == null) {return getKeyForNewSpreadsheetURLFormat(documentURL);}int i1 = extractedQuery.lastIndexOf(""key="");int i2 = extractedQuery.indexOf(""&"", i1);if (i1 == -1) {return getKeyForNewSpreadsheetURLFormat(documentURL);} else if (i2 < 0) {return extractedQuery.substring(i1 + 4);} else {return extractedQuery.substring(i1 + 4, i2);}}}"	Yes
1594	"public class A {@Overridepublic Object evaluate(final ActionContext ctx, final GraphObject entity, final EvaluationHints hints)throws FrameworkException, UnlicensedScriptException {if (listExpression == null) {return ERROR_MESSAGE_EACH;}Object listSource = listExpression.evaluate(ctx, entity, hints);if (listSource != null && listSource.getClass().isArray()) {listSource = Arrays.asList((Object[]) listSource);}if (listSource != null && listSource instanceof Iterable) {final Iterable source = (Iterable) listSource;final Object oldDataValue = ctx.getConstant(""data"");if (isBatched()) {final App app = StructrApp.getInstance(ctx.getSecurityContext());final Iterator iterator = source.iterator();int count = 0;while (iterator.hasNext()) {try (final Tx tx = app.tx()) {while (iterator.hasNext()) {ctx.setConstant(""data"", iterator.next());eachExpression.evaluate(ctx, entity, hints);if ((++count % getBatchSize()) == 0) {break;}}tx.success();} catch (FrameworkException fex) {}logger.debug(""Committing batch after {} objects"", count);count = 0;}} else {for (Object obj : source) {ctx.setConstant(""data"", obj);eachExpression.evaluate(ctx, entity, hints);}}ctx.setConstant(""data"", oldDataValue);}return null;}}"	Yes
1595	"public class A {@Overrideprotected void afterPropertiesSet() {super.afterPropertiesSet();try {PartnerConnection partnerConnection = getPartnerConnection();ConnectorConfig connectorConfig = partnerConnection.getConfig();Map<String, Object> options = new HashMap<>();options.put(ClientTransport.MAX_NETWORK_DELAY_OPTION, _transportTimeout * 6000);_httpClient.start();URL url = new URL(connectorConfig.getServiceEndpoint());_bayeuxClient =new BayeuxClient(StringBundler.concat(url.getProtocol(), ""://"", url.getHost(), ""/cometd/37.0""),new SalesforceTransport(connectorConfig.getSessionId(), options, _httpClient));ClientSessionChannel handshakeClientSessionChannel =_bayeuxClient.getChannel(Channel.META_HANDSHAKE);handshakeClientSessionChannel.addListener(new SalesforceMessageListener());ClientSessionChannel connectClientSessionChannel =_bayeuxClient.getChannel(Channel.META_CONNECT);connectClientSessionChannel.addListener(new SalesforceMessageListener());ClientSessionChannel subscribeClientSessionChannel =_bayeuxClient.getChannel(Channel.META_SUBSCRIBE);subscribeClientSessionChannel.addListener(new SalesforceMessageListener());} catch (Exception exception) {}}}"	Yes
1596	"public class A {@SuppressWarnings({""rawtypes"", ""deprecation""})protected Map getThreatObject(String key) {LOGGER.debug(""=======Pinging HBase For:"" + key);Get get = new Get(Bytes.toBytes(key));Result rs;Map output = new HashMap();try {rs = table.get(get);if (!rs.isEmpty()) {byte[] source_family = Bytes.toBytes(""source"");JSONParser parser = new JSONParser();Map<byte[], byte[]> sourceFamilyMap = rs.getFamilyMap(source_family);for (Map.Entry<byte[], byte[]> entry : sourceFamilyMap.entrySet()) {String k = Bytes.toString(entry.getKey());LOGGER.debug(""=======Found intel from source: "" + k);output.put(k, parser.parse(Bytes.toString(entry.getValue())));}}} catch (IOException e) {e.printStackTrace();} catch (ParseException e) {e.printStackTrace();}return output;}}"	No
1597	public class A {private void initialize() {if (configurationResourceManager != null&& StringUtils.isNotEmptyTrimmed(configResourceUri)&& StringUtils.isNotEmptyTrimmed(schemaResourceName)) {String schema = ResourcesUtils.loadResource(schemaResourceName, true);configurationResourceManager.registerResource(configResourceUri, schema);configurationResourceManager.registerObserver(this, configResourceUri);} else {}}}	Yes
1598	"public class A {private synchronized void nextGeneration() throws IOException {close();processFile = new File(rootDir, prefix + IN_PROCESS.getFileNameSuffix());writer = newWriter(processFile, UTF_8);LOG.info(""Created new process file and writer over {} "", processFile.getAbsolutePath());}}"	No
1599	"public class A {private boolean isGroupChanged(final Group group, final Callback callback) {final List<Resource> resources = group.getResources();final AtomicBoolean isChanged = new AtomicBoolean(false);final List<Future<?>> futures = new ArrayList<Future<?>>();final boolean isAsync = context.getConfig().isResourceWatcherAsync();try {for (final Resource resource : resources) {if (isAsync) {futures.add(executorServiceRef.get().submit(ContextPropagatingCallable.decorate(new Callable<Void>() {public Void call() throws Exception {checkResourceChange(resource, group, callback, isChanged);return null;}})));} else {checkResourceChange(resource, group, callback, isChanged);}}if (isAsync) {LOG.debug(""await async execution"");for (final Future<?> future : futures) {future.get();}}} catch (final Exception e) {LOG.debug(""Exception while onResourceChange is invoked"", e);}LOG.debug(""group={}, changed={}"", group.getName(), isChanged);return isChanged.get();}}"	No
1600	"public class A {@Path(""/create"")@POST@Produces(""application/json"")public Response build(@FormParam(""bundleDirectory"") String bundleDirectory,@FormParam(""bundleBuildName"") String bundleName,@FormParam(""email"") String email,@FormParam(""id"") String id,@FormParam(""bundleStartDate"") String bundleStartDate,@FormParam(""bundleEndDate"") String bundleEndDate,@FormParam(""bundleComment"") String bundleComment,@FormParam(""archive"") boolean archive,@FormParam(""consolidate"") boolean consolidate,@FormParam(""predate"") boolean predate) {Response response = null;if (!isAuthorized()) {return Response.noContent().build();}BundleBuildRequest bundleRequest = new BundleBuildRequest();bundleRequest.setBundleDirectory(bundleDirectory);bundleRequest.setBundleName(bundleName);bundleRequest.setEmailAddress(email);bundleRequest.setId(id);bundleRequest.setBundleStartDate(bundleStartDate);bundleRequest.setBundleEndDate(bundleEndDate);bundleRequest.setBundleComment(bundleComment);bundleRequest.setArchiveFlag(archive);bundleRequest.setConsolidateFlag(consolidate);bundleRequest.setPredate(predate);BundleBuildResponse bundleResponse = new BundleBuildResponse(id);try {bundleResponse.addStatusMessage(""server started"");bundleResponse.addStatusMessage(""queueing"");_executorService.execute(new BuildThread(bundleRequest, bundleResponse));_buildMap.put(id, bundleResponse);final StringWriter sw = new StringWriter();final MappingJsonFactory jsonFactory = new MappingJsonFactory();final JsonGenerator jsonGenerator = jsonFactory.createJsonGenerator(sw);_mapper.writeValue(jsonGenerator, bundleResponse);response = Response.ok(sw.toString()).build();} catch (Exception any) {response = Response.serverError().build();}return response;}}"	Yes
1601	"public class A {@Overridepublic void service(TupleResultBuilder builder, String xslPath)throws RepositoryException, QueryEvaluationException, MalformedQueryException,QueryResultHandlerException {builder.transform(xslPath, ""summary.xsl"");builder.start(""id"", ""description"", ""location"", ""server"", ""size"", ""contexts"");builder.link(Arrays.asList(INFO));try (RepositoryConnection con = repository.getConnection()) {String size = null;String numContexts = null;try {List<Future<String>> futures = getRepositoryStatistics(con);size = getResult(""repository size."", futures.get(0));numContexts = getResult(""labeled contexts."", futures.get(1));} catch (InterruptedException e) {}builder.result(info.getId(), info.getDescription(), info.getLocation(), getServer(), size, numContexts);builder.end();}}}"	Yes
1602	"public class A {@Overridepublic void setFloat(final String name, final float value) throws JMSException {if (ActiveMQRALogger.LOGGER.isTraceEnabled()) {ActiveMQRALogger.LOGGER.trace(""setFloat("" + name + "", "" + value + "")"");}((MapMessage) message).setFloat(name, value);}}"	No
1603	"public class A {public static JoyQueueCode convertProduceCode(int version, JoyQueueCode code) {switch (code) {case FW_TOPIC_NOT_EXIST:{return JoyQueueCode.FW_TOPIC_NOT_EXIST;}case FW_PRODUCE_MESSAGE_BROKER_NOT_LEADER:case FW_TOPIC_NO_PARTITIONGROUP:{return JoyQueueCode.FW_PRODUCE_MESSAGE_BROKER_NOT_LEADER;}case FW_PUT_MESSAGE_TOPIC_NOT_WRITE:{if (version == JoyQueueHeader.VERSION_V1) {return JoyQueueCode.CN_NO_PERMISSION;}return JoyQueueCode.FW_PUT_MESSAGE_TOPIC_NOT_WRITE;}case FW_PRODUCER_NOT_EXISTS:{return JoyQueueCode.FW_PRODUCER_NOT_EXISTS;}case FW_BROKER_NOT_WRITABLE:{return JoyQueueCode.FW_BROKER_NOT_WRITABLE;}default:{logger.warn(""unknown produce code {}"", code);return JoyQueueCode.CN_NO_PERMISSION;}}}}"	No
1604	"public class A {protected boolean processJavaSystemProperty(PropertyField propertyField)throws AtlasConversionException {if (!isSystemPropertiesEnabled()) {return false;}try {if (System.getProperty(propertyField.getName()) != null) {Object propertyValue = System.getProperty(propertyField.getName());if (getAtlasConversionService() != null && propertyField.getFieldType() != null) {propertyField.setValue(getAtlasConversionService().convertType(propertyValue,null,atlasConversionService.classFromFieldType(propertyField.getFieldType()),null));if (LOG.isDebugEnabled()) {LOG.debug(String.format(""Assigned Java system property for property field name=%s value=%s"",propertyField.getName(), propertyField.getValue()));}} else {propertyField.setValue(propertyValue);if (LOG.isDebugEnabled()) {LOG.debug(String.format(""Assigned Java system property for property field name=%s value=%s"",propertyField.getName(), propertyField.getValue()));}}return true;}} catch (SecurityException e) {}return false;}}"	Yes
1605	"public class A {public void handleLine(String line) {if (line.startsWith(""VALUE "")) {readState = 0;String[] stuff = line.split("" "");assert ""VALUE"".equals(stuff[0]);count = Integer.parseInt(stuff[1]);if (count > 0) {setReadType(OperationReadType.DATA);}} else if (line.startsWith(""MISSED_KEYS"")) {readState = 1;String[] stuff = line.split("" "");assert ""MISSED_KEYS"".equals(stuff[0]);count = Integer.parseInt(stuff[1]);if (count > 0) {setReadType(OperationReadType.DATA);}} else {OperationStatus status =matchStatus(line,END,TRIMMED,DUPLICATED,DUPLICATED_TRIMMED,OUT_OF_RANGE,ATTR_MISMATCH,TYPE_MISMATCH,BKEY_MISMATCH);getCallback().receivedStatus(status);transitionState(OperationState.COMPLETE);return;}}}"	Yes
1606	public class A {@Overridepublic void send(Collection<Metric> metrics) {try {if (LOG.isDebugEnabled()) {}} catch (JsonProcessingException e) {}}}	Yes
1607	"public class A {@Override@SuppressWarnings(""synthetic-access"")protected void initChannel(SocketChannel ch) throws Exception {IoServiceEventListener listener = getIoServiceEventListener();SocketAddress local = ch.localAddress();SocketAddress remote = ch.remoteAddress();AttributeRepository context = ch.hasAttr(CONTEXT_KEY) ? ch.attr(CONTEXT_KEY).get() : null;try {if (listener != null) {try {listener.connectionEstablished(NettyIoConnector.this, local, context, remote);} catch (Exception e) {ch.close();throw e;}}@SuppressWarnings(""resource"")NettyIoSession session = new NettyIoSession(NettyIoConnector.this, handler, null);if (context != null) {session.setAttribute(AttributeRepository.class, context);}ChannelPipeline p = ch.pipeline();p.addLast(new LoggingHandler(LogLevel.INFO));p.addLast(session.adapter);} catch (Exception e) {if (listener != null) {try {listener.abortEstablishedConnection(NettyIoConnector.this, local, context, remote, e);} catch (Exception exc) {if (log.isDebugEnabled()) {}}}throw e;}}}"	Yes
1608	"public class A {public boolean runReboot() {logger.trace(""runReboot() called on {}"", getThing().getUID());RunReboot bcp = thisBridge.bridgeAPI().runReboot();if (bcp != null) {submitCommunicationsJob(() -> {if (thisBridge.bridgeCommunicate(bcp)) {logger.info(""Reboot command {}sucessfully sent to {}"",bcp.isCommunicationSuccessful() ? """" : ""un"",getThing().getUID());}});return true;}return false;}}"	No
1609	public class A {public void samplePoint(Integer x, Integer y) {}}	Yes
1610	"public class A {@VisibleForTestingstatic CPUResource getDefaultCpus(final Configuration configuration) {int fallback = configuration.getInteger(YarnConfigOptions.VCORES);double cpuCoresDouble =TaskExecutorProcessUtils.getCpuCoresWithFallback(configuration, fallback).getValue().doubleValue();@SuppressWarnings(""NumericCastThatLosesPrecision"")long cpuCoresLong = Math.max((long) Math.ceil(cpuCoresDouble), 1L);if (cpuCoresLong != cpuCoresDouble) {}if (cpuCoresLong > Integer.MAX_VALUE) {throw new IllegalConfigurationException(String.format(""The amount of cpu cores %d cannot exceed Integer.MAX_VALUE: %d"",cpuCoresLong, Integer.MAX_VALUE));}return new CPUResource(cpuCoresLong);}}"	Yes
1611	"public class A {public String rewrite(ASTNode currNode, Configuration conf, HiveConf metastoreConf, boolean resolveNativeTables)throws LensException {this.resolveNativeTables = resolveNativeTables;rewrittenQuery.setLength(0);reset();this.ast = currNode;isHavingSupported =conf.getBoolean(JDBCDriverConfConstants.JDBC_IS_HAVING_SUPPORTED,JDBCDriverConfConstants.DEFAULT_JDBC_IS_HAVING_SUPPORTED);isOrderBySupported =conf.getBoolean(JDBCDriverConfConstants.JDBC_IS_ORDERBY_SUPPORTED,JDBCDriverConfConstants.DEFAULT_JDBC_IS_ORDERBY_SUPPORTED);ASTNode fromNode = HQLParser.findNodeByPath(currNode, TOK_FROM);if (fromNode != null) {if (fromNode.getChild(0).getType() == TOK_SUBQUERY) {log.warn(""Subqueries in from clause not supported by {} Query : {}"", this, this.query);throw new LensException(""Subqueries in from clause not supported by "" + this + "" Query : "" + this.query);} else if (isOfTypeJoin(fromNode.getChild(0).getType())) {log.warn(""Join in from clause not supported by {} Query : {}"", this, this.query);throw new LensException(""Join in from clause not supported by "" + this + "" Query : "" + this.query);}}if (currNode.getToken().getType() == TOK_UNIONALL) {log.warn(""Union queries are not supported by {} Query : {}"", this, this.query);throw new LensException(""Union queries are not supported by "" + this + "" Query : "" + this.query);}if (!isHavingSupported&& HQLParser.findNodeByPath(currNode, HiveParser.TOK_INSERT, HiveParser.TOK_HAVING)!= null) {log.warn(""Having queries are not supported by {} Query : {}"", this, this.query);throw new LensException(""Having queries are not supported by "" + this + "" Query : "" + this.query);}if (!isOrderBySupported&& HQLParser.findNodeByPath(currNode, HiveParser.TOK_INSERT, HiveParser.TOK_ORDERBY)!= null) {log.warn(""Order by queries are not supported by {} Query : {}"", this, this.query);throw new LensException(""Order by queries are not supported by "" + this + "" Query : "" + this.query);}String rewritternQueryText = rewrittenQuery.toString();if (currNode.getToken().getType() == TOK_QUERY) {try {buildDruidQuery(conf, metastoreConf);rewritternQueryText = rewrittenQuery.toString();log.info(""Rewritten query from build : "" + rewritternQueryText);} catch (SemanticException e) {throw new LensException(e);}}return rewritternQueryText;}}"	No
1612	"public class A {private int getNextAvailDirInTier(StorageTierView tierView, long blockSize, String mediumType, boolean skipReview) {int dirIndex = mTierAliasToLastDirMap.get(tierView.getTierViewAlias());List<StorageDirView> dirs = tierView.getDirViews();for (int i = 0; i < dirs.size(); i++) {dirIndex = (dirIndex + 1) % dirs.size();StorageDirView dir = dirs.get(dirIndex);if ((mediumType.equals(BlockStoreLocation.ANY_MEDIUM)|| dir.getMediumType().equals(mediumType))&& dir.getAvailableBytes() >= blockSize) {if (skipReview || mReviewer.acceptAllocation(dir)) {return dir.getDirViewIndex();}LOG.debug(""Allocation to dirIndex {} rejected: {}"", dirIndex, dir.toBlockStoreLocation());}}return -1;}}"	No
1613	"public class A {public static void clearJmxCache() {if (LOG.isTraceEnabled()) {LOG.trace(""clearing JMX Cache"" + StringUtils.stringifyException(new Exception()));}ScheduledFuture future = fut.get();if ((future != null && (!future.isDone() && future.getDelay(TimeUnit.MILLISECONDS) > 100))) {return;}if (stopped.get()) {return;}future = executor.getExecutor().schedule(new JmxCacheBusterRunnable(), 5, TimeUnit.SECONDS);fut.set(future);}}"	No
1614	"public class A {@ExceptionHandler(Exception.class)public ModelAndView handleError(HttpServletRequest req, Exception exception) {log.error(""Request: {} raised following exception."", req.getRequestURL(), exception);ModelAndView mav = new ModelAndView();mav.addObject(""exception"", exception);mav.setViewName(""00-error"");return mav;}}"	No
1615	public class A {private void submitFlowPoint() {AtomicInteger uploadCounter = new AtomicInteger(0);DataPoint point = flowDataQueue.peek();InvocationContext invocationContext = InvocationContextImpl.Factory.currentInstance();invocationContext.timeout(5000);while (point != null) {try {CounterClientFactory.COUNTER_CLIENT.submitPoint(point);flowDataQueue.remove(point);uploadCounter.incrementAndGet();point = flowDataQueue.peek();} catch (Throwable e) {if (LOGGER.isDebugEnabled()) {}InvocationContextImpl.Factory.removeCurrentInstance();return;}}if (LOGGER.isDebugEnabled()) {}InvocationContextImpl.Factory.removeCurrentInstance();}}	Yes
1616	"public class A {public CompletableFuture<Void> clearBacklog(String cursorName) {PersistentSubscription sub = getSubscription(cursorName);if (sub != null) {return sub.clearBacklog();}PersistentReplicator repl = (PersistentReplicator) getPersistentReplicator(cursorName);if (repl != null) {return repl.clearBacklog();}return FutureUtil.failedFuture(new BrokerServiceException(""Cursor not found""));}}"	Yes
1617	public class A {protected boolean executeCommand(Request request, Response response) {if (isCommandHostRequest(request)) {String path = request.getURI().getPath();if (path.equals(START_COMMAND)) {doStartRecordingURIs(request, response);return true;}if (path.equals(STOP_COMMAND)) {doStopRecordingURIs(request, response);return true;}if (path.equals(CLEAR_COMMAND)) {doClearRecordedURIs(request, response);return true;}if (path.equals(GET_RECORDED_URIS_COMMAND)) {doGetRecordedURIs(request, response);return true;}if (path.equals(CHANGE_INDEX_COMMAND)) {doChangeIndex(request, response);return true;}if (path.equals(GET_STATUS_COMMAND)) {doGetStatus(request, response);return true;}} else {if (request != null) {} else {}}return false;}}	Yes
1618	"public class A {private Histogram getHistogram(final String coverageName, final double resX, final double resY)throws IOException {RasterHistogramValue histogram =InternalStatisticsHelper.getDataTypeStatistic(geowaveStatisticsStore,RasterHistogramStatistic.STATS_TYPE,coverageName,authorizationSPI.getAuthorizations());if (histogram != null) {return histogram.getValue().get(new Resolution(new double[] {resX, resY}));} else {LOGGER.warn(""Cannot find histogram for coverage '"" + coverageName + ""'"");}return null;}}"	No
1619	public class A {@Testpublic void testSimpleAttributePath2() throws Exception {apstUtils.createAndPersistDefaultObject();}}	Yes
1620	"public class A {@Override@PostConstructpublic void installUpgrades() {logger.info(""Performing upgrade to the Vorto Repository and its content..."");for (IUpgradeTask task : tasks) {if (!task.condition().isPresent() || task.condition().get().shouldExecuteTask()) {logger.info(""Executing task - "" + task.getShortDescription());try {task.doUpgrade();} catch (UpgradeProblem problem) {logger.error(""Problem executing upgrade task"", problem);}} else {logger.info(""NOT Executing task - "" + task.getShortDescription() + "". Conditions not met."");}}}}"	No
1621	"public class A {private voidcheckUniqueConstraintByConsumerSystemAndServiceAndProviderSystemIdAndInterfaceAndForeign(final System consumerSystem,final ServiceDefinition serviceDefinition,final long providerSystemId,final ServiceInterface serviceInterface,final boolean foreign) {logger.debug(""checkUniqueConstraintByConsumerSystemIdAndServiceIdAndProviderSystemId started..."");final Optional<OrchestratorStore> orchestratorStoreOptional =orchestratorStoreRepository.findByConsumerSystemAndServiceDefinitionAndProviderSystemIdAndServiceInterfaceAndForeign(consumerSystem, serviceDefinition, providerSystemId, serviceInterface, foreign);if (orchestratorStoreOptional.isPresent()) {throw new InvalidParameterException(""OrchestratorStore checkUniqueConstraintByConsumerSystemIdAndServiceIdAndProviderSystemId""+ "" ""+ VIOLATES_UNIQUE_CONSTRAINT);}}}"	No
1622	"public class A {@Overridepublic UpdateContainer doIt(Workspace workspace) throws CommandException {TripleStoreUtil util = new TripleStoreUtil();try {util.deleteMappingFromTripleStore(tripleStoreURL, context, mappingURI);} catch (KarmaException e) {return new UpdateContainer(new ErrorUpdate(""Error occured while deleting R2RML model!""));}UpdateContainer uc = new UpdateContainer();uc.add(new AbstractUpdate() {public void generateJson(String prefix, PrintWriter pw, VWorkspace vWorkspace) {JSONObject outputObject = new JSONObject();try {outputObject.put(JsonKeys.updateType.name(), ""DeleteModel"");pw.println(outputObject.toString());} catch (JSONException e) {}}});return uc;}}"	Yes
1623	public class A {@Overridepublic void onServoSetSpeed(ServoControl servo) {int speed = -1;if (servo.getSpeed() != null) {speed = servo.getSpeed().intValue();}Integer i = getDeviceId(servo);if (i == null) {return;}msg.servoSetVelocity(i, speed);}}	Yes
1624	"public class A {private void populateItems(final AuthModuleTO authModuleTO, final AuthModule authModule) {SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();SyncopeClientException invalidMapping =SyncopeClientException.build(ClientExceptionType.InvalidMapping);SyncopeClientException requiredValuesMissing =SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);authModuleTO.getItems().forEach(itemTO -> {if (itemTO == null) {invalidMapping.getElements().add(""Null "" + ItemTO.class.getSimpleName());} else if (itemTO.getIntAttrName() == null) {requiredValuesMissing.getElements().add(""intAttrName"");scce.addException(requiredValuesMissing);} else {if (!JexlUtils.isExpressionValid(itemTO.getMandatoryCondition() == null? ""false"": itemTO.getMandatoryCondition())) {SyncopeClientException invalidMandatoryCondition =SyncopeClientException.build(ClientExceptionType.InvalidValues);invalidMandatoryCondition.getElements().add(itemTO.getMandatoryCondition());scce.addException(invalidMandatoryCondition);}AuthModuleItem item = entityFactory.newEntity(AuthModuleItem.class);item.setIntAttrName(itemTO.getIntAttrName());item.setExtAttrName(itemTO.getExtAttrName());item.setMandatoryCondition(itemTO.getMandatoryCondition());item.setConnObjectKey(itemTO.isConnObjectKey());item.setPassword(itemTO.isPassword());item.setPropagationJEXLTransformer(itemTO.getPropagationJEXLTransformer());item.setPullJEXLTransformer(itemTO.getPullJEXLTransformer());item.setAuthModule(authModule);authModule.add(item);}});if (!invalidMapping.getElements().isEmpty()) {scce.addException(invalidMapping);}if (scce.hasExceptions()) {throw scce;}}}"	Yes
1625	"public class A {private String resolveDriveLabel(String name, String lang) {if (resourceBundleService == null) {resourceBundleService = WCMCoreUtils.getService(ResourceBundleService.class);resourceBundleNames = resourceBundleService.getSharedResourceBundleNames();}if (StringUtils.isBlank(lang)) {lang = Locale.ENGLISH.getLanguage();}Locale locale = new Locale(lang);ResourceBundle sharedResourceBundle =resourceBundleService.getResourceBundle(resourceBundleNames, locale);try {sharedResourceBundle = resourceBundleService.getResourceBundle(resourceBundleNames, locale);String key = ""ContentSelector.title."" + name.replaceAll("" "", """");if (sharedResourceBundle.containsKey(key)) {return sharedResourceBundle.getString(key);} else {return getDriveTitle(name);}} catch (MissingResourceException e) {if (LOG.isDebugEnabled()) {}}return name;}}"	Yes
1626	public class A {public void release() {if (lock != null) {try {FileChannel channel = lock.channel();lock.release();channel.close();} catch (IOException e) {}lock = null;closeRandomAccessFile();}if (!file.delete()) {}synchronized (identifier) {try {System.getProperties().remove(identifier);} catch (SecurityException e) {}}}}	Yes
1627	"public class A {public void openSession() throws ClientException {if (session != null) {log.warn(""Closing session for you"");closeSession();}session = openSessionAs(ADMINISTRATOR);assertNotNull(session);}}"	No
1628	"public class A {@Overrideprotected void cleanup(Context context) throws IOException, InterruptedException {if (mapperException == null) {try {finishRemainingHashRanges(context);} catch (Throwable t) {mapperException = t;}}try {sourceTable.close();targetTable.close();sourceConnection.close();targetConnection.close();} catch (Throwable t) {if (mapperException == null) {mapperException = t;} else {LOG.error(""Suppressing exception from closing tables"", t);}}if (mapperException != null) {Throwables.propagateIfInstanceOf(mapperException, IOException.class);Throwables.propagateIfInstanceOf(mapperException, InterruptedException.class);Throwables.propagate(mapperException);}}}"	No
1629	"public class A {public void copySavedReport(String saved, String copy) throws Exception {try {reportingAdminServiceStub.copySavedReport(saved, copy);} catch (Exception e) {String msg = ""Unable to copy the report"";throw new Exception(msg, e);}}}"	Yes
1630	"public class A {@Overridepublic void sendResponse(final ServerResponse response) {final var requestId = response.getRequestId();final var partitionId = response.getPartitionId();final var length = response.getLength();final var bytes = new byte[length];final var unsafeBuffer = new UnsafeBuffer(bytes);response.write(unsafeBuffer, 0);actor.run(() -> {final var requestMap = partitionsRequestMap.get(partitionId);if (requestMap == null) {LOG.warn(""Node is no longer leader for partition {}, tried to respond on request with id {}"",partitionId,requestId);return;}final var completableFuture = requestMap.remove(requestId);if (completableFuture != null) {if (LOG.isTraceEnabled()) {LOG.trace(""Send response to request {} for topic {}"", requestId, topicName(partitionId));}completableFuture.complete(bytes);} else if (LOG.isTraceEnabled()) {}});}}"	Yes
1631	"public class A {public void registerException(final String method, final String path, final int code, final String error) {final String key = method.toUpperCase() + "" "" + path;this.errors.put(key, new ContentResponse(method, path, code, error));}}"	Yes
1632	public class A {@Overridepublic boolean isRequestorAllowedTarget(ConnectionTargetCheck check) {boolean restrictsConnectionStates = isPresent(check.getAllowedConnectionStates());boolean restrictsSocketTypes = isPresent(check.getAllowedSocketTypes());boolean restrictsSockets = isPresent(check.getAllowedSockets());int rcs = restrictsConnectionStates ? RESTRICTS_CONNECTION_STATES : 0;int rst = restrictsSocketTypes ? RESTRICTS_SOCKET_TYPES : 0;int rs = restrictsSockets ? RESTRICTS_SOCKETS : 0;int wnc = check.isWonNodeCheck() ? WON_NODE_CHECK : 0;int evaluatorIndex = wnc | rcs | rst | rs;ConnectionTargetCheckEvaluator evaluator = evaluators[evaluatorIndex];if (logger.isDebugEnabled()) {}return evaluator.isRequestorAllowedTarget(check);}}	Yes
1633	"public class A {@SuppressWarnings(""unused"")@Overridepublic void abort() {try (Connection connection = this.connection;PreparedStatement statement = this.statement) {connection.rollback();} catch (SQLException e) {log.debug(e, ""SQLException when abort"");}}}"	No
1634	"public class A {private void setHeightToHeaderCellHeight() {RowContainer header = grid.escalator.getHeader();if (!WidgetUtil.isDisplayed(header.getElement())|| header.getRowCount() == 0|| !header.getRowElement(0).hasChildNodes()) {double height =header.getDefaultRowHeight() - WidgetUtil.measureVerticalBorder(getElement()) / 2;openCloseButton.setHeight(height + ""px"");return;}Element firstHeaderCell = header.getRowElement(0).getFirstChildElement();double height =WidgetUtil.getRequiredHeightBoundingClientRectDouble(firstHeaderCell)- WidgetUtil.measureVerticalBorder(getElement()) / 2;openCloseButton.setHeight(height + ""px"");}}"	Yes
1635	public class A {@Overridepublic ReturnCode filterKeyValue(KeyValue v) {if (evaluate) {inputTuple.setKey(v.getBuffer(), v.getRowOffset(), v.getRowLength());this.keepRow = Boolean.TRUE.equals(evaluate(inputTuple));if (logger.isDebugEnabled()) {}evaluate = false;}return keepRow ? ReturnCode.INCLUDE : ReturnCode.NEXT_ROW;}}	Yes
1636	"public class A {@Overridepublic DoubleProperty getDoubleProperty(String name) {if (name == null) {logger.error(""getDoubleProperty(): argument 'name' must be non-null"");return new DoublePropertyImpl("""");}DoublePropertyImpl doubleProperty = new DoublePropertyImpl(name);weakConfigListeners.put(doubleProperty, true);return doubleProperty;}}"	No
1637	"public class A {public void addMargins(int extent) {if (log.isTraceEnabled()) {log.trace(""add margins to extent "" + extent);}T firstEntry = entries.higher(entries.first());int marginStart = (firstEntry == null || firstEntry.startCoord > 0) ? 0 : firstEntry.startCoord;T lastEntry = entries.lower(entries.last());int marginEnd =(lastEntry == null || lastEntry.endCoord < extent) ? extent : lastEntry.endCoord;DimensionRange<T> range = getRange(marginStart, marginEnd);addEntries(range);}}"	No
1638	"public class A {@SuppressWarnings(""unchecked"")@Overrideprotected Transformation<RowData> translateToPlanInternal(PlannerBase planner) {final TableConfig tableConfig = planner.getTableConfig();if (grouping.length > 0 && tableConfig.getMinIdleStateRetentionTime() < 0) {LOG.warn(""No state retention interval configured for a query which accumulates state. Please""+ "" provide a query configuration with valid retention interval to prevent excessive""+ "" state size. You may specify a retention time of 0 to not clean up the state."");}final ExecEdge inputEdge = getInputEdges().get(0);final Transformation<RowData> inputTransform =(Transformation<RowData>) inputEdge.translateToPlan(planner);final RowType inputRowType = (RowType) inputEdge.getOutputType();final AggregateInfoList localAggInfoList =AggregateUtil.transformToStreamAggregateInfoList(localAggInputRowType,JavaScalaConversionUtil.toScala(Arrays.asList(aggCalls)),aggCallNeedRetractions,needRetraction,false,true);final AggregateInfoList globalAggInfoList =AggregateUtil.transformToStreamAggregateInfoList(localAggInputRowType,JavaScalaConversionUtil.toScala(Arrays.asList(aggCalls)),aggCallNeedRetractions,needRetraction,true,true);final GeneratedAggsHandleFunction localAggsHandler =generateAggsHandler(""LocalGroupAggsHandler"",localAggInfoList,grouping.length,localAggInfoList.getAccTypes(),tableConfig,planner.getRelBuilder());final GeneratedAggsHandleFunction globalAggsHandler =generateAggsHandler(""GlobalGroupAggsHandler"",globalAggInfoList,0,localAggInfoList.getAccTypes(),tableConfig,planner.getRelBuilder());final int indexOfCountStar = globalAggInfoList.getIndexOfCountStar();final LogicalType[] globalAccTypes =Arrays.stream(globalAggInfoList.getAccTypes()).map(LogicalTypeDataTypeConverter::fromDataTypeToLogicalType).toArray(LogicalType[]::new);final LogicalType[] globalAggValueTypes =Arrays.stream(globalAggInfoList.getActualValueTypes()).map(LogicalTypeDataTypeConverter::fromDataTypeToLogicalType).toArray(LogicalType[]::new);final GeneratedRecordEqualiser recordEqualiser =new EqualiserCodeGenerator(globalAggValueTypes).generateRecordEqualiser(""GroupAggValueEqualiser"");final OneInputStreamOperator<RowData, RowData> operator;final boolean isMiniBatchEnabled =tableConfig.getConfiguration().getBoolean(ExecutionConfigOptions.TABLE_EXEC_MINIBATCH_ENABLED);if (isMiniBatchEnabled) {MiniBatchGlobalGroupAggFunction aggFunction =new MiniBatchGlobalGroupAggFunction(localAggsHandler,globalAggsHandler,recordEqualiser,globalAccTypes,indexOfCountStar,generateUpdateBefore,tableConfig.getIdleStateRetention().toMillis());operator =new KeyedMapBundleOperator<>(aggFunction, AggregateUtil.createMiniBatchTrigger(tableConfig));} else {throw new TableException(""Local-Global optimization is only worked in miniBatch mode"");}final OneInputTransformation<RowData, RowData> transform =new OneInputTransformation<>(inputTransform,getDescription(),operator,InternalTypeInfo.of(getOutputType()),inputTransform.getParallelism());final RowDataKeySelector selector =KeySelectorUtil.getRowDataSelector(grouping, InternalTypeInfo.of(inputRowType));transform.setStateKeySelector(selector);transform.setStateKeyType(selector.getProducedType());return transform;}}"	No
1639	"public class A {private static void recoverDataverse(MetadataTransactionContext mdTxnCtx, Dataverse dataverse)throws AlgebricksException {if (dataverse.getPendingOp() != MetadataUtil.PENDING_NO_OP) {MetadataManager.INSTANCE.dropDataverse(mdTxnCtx, dataverse.getDataverseName());if (LOGGER.isInfoEnabled()) {LOGGER.info(""Dropped a pending dataverse: "" + dataverse.getDataverseName());}} else {List<Dataset> datasets =MetadataManager.INSTANCE.getDataverseDatasets(mdTxnCtx, dataverse.getDataverseName());for (Dataset dataset : datasets) {recoverDataset(mdTxnCtx, dataset);}List<Library> libraries =MetadataManager.INSTANCE.getDataverseLibraries(mdTxnCtx, dataverse.getDataverseName());for (Library library : libraries) {recoverLibrary(mdTxnCtx, library);}}}}"	No
1640	"public class A {private Dataset<Row> doOperation(final GetDataFrameOfElements operation, final ParquetStore store, final SparkSession spark)throws OperationException {if (!operation.getView().equals(new View.Builder().entities(store.getSchema().getEntityGroups()).edges(store.getSchema().getEdgeGroups()).build())) {throw new OperationException(""This operation does not currently support views"");}final StructType schema =new SchemaUtils(store.getSchema()).getMergedSparkSchema(store.getSchema().getGroups());final Dataset<Row> dataframe = spark.read().schema(schema).parquet(store.getGraphPath());return dataframe;}}"	Yes
1641	"public class A {public static String getDefaultDomainPath(CoreSession session) {String query = ""SELECT * FROM Document where ecm:primaryType = 'Domain'"";DocumentModelList results = session.query(query);if (results.isEmpty()) {throw new NuxeoException(String.format(""Found no domains in repository %s"", session.getRepositoryName()));}if (results.size() > 1) {}DocumentModel defaultDomain = results.get(0);String defaultDomainPath = defaultDomain.getPathAsString();return defaultDomainPath;}}"	Yes
1642	"public class A {public Image uploadImage(File file) throws Exception {HttpResponse<JsonNode> response =Unirest.post(""https://api.imgur.com/3/image"").header(""accept"", ""application/json"").header(""Authorization"", ""Client-ID "" + clientId).field(""image"", file).field(""name"", file.getName()).field(""title"", file.getName()).asJson();if (!response.getBody().getObject().getBoolean(""success"")) {Logger.debug(response.getBody().toString());throw new Exception(response.getBody().getObject().getJSONObject(""data"").getString(""error""));}Image image = new Image();image.id = response.getBody().getObject().getJSONObject(""data"").getString(""id"");image.deleteHash = response.getBody().getObject().getJSONObject(""data"").getString(""deletehash"");return image;}}"	No
1643	"public class A {@Overridepublic void open(FileInputSplit split) throws IOException {super.open(split);this.wrapper = InstantiationUtil.instantiate(avroWrapperTypeClass, AvroBaseValue.class);DatumReader<E> datumReader;if (org.apache.avro.specific.SpecificRecordBase.class.isAssignableFrom(avroValueType)) {datumReader = new SpecificDatumReader<E>(avroValueType);} else {datumReader = new ReflectDatumReader<E>(avroValueType);}LOG.info(""Opening split "" + split);SeekableInput in = new FSDataInputStreamWrapper(stream, (int) split.getLength());dataFileReader = DataFileReader.openReader(in, datumReader);dataFileReader.sync(split.getStart());reuseAvroValue = null;}}"	No
1644	"public class A {@Overridepublic ServerContext createContext(TProtocol input, TProtocol output, Object remoteInstance) {LOG.debug(""Client connected"");SocketAddress remoteSocketAddress;SocketAddress localSocketAddress;if (remoteInstance instanceof SelectionKey) {SelectionKey selectionKey = (SelectionKey) remoteInstance;SocketChannel channel = (SocketChannel) selectionKey.channel();Socket socket = channel.socket();remoteSocketAddress = socket.getRemoteSocketAddress();localSocketAddress = socket.getLocalSocketAddress();} else if (remoteInstance instanceof TSocket) {TSocket tSocket = (TSocket) remoteInstance;Socket socket = tSocket.getSocket();remoteSocketAddress = socket.getRemoteSocketAddress();localSocketAddress = socket.getLocalSocketAddress();} else {throw new RuntimeException(""Cannot track remote connection off ["" + remoteInstance + ""]"");}_connectionMeter.mark();_connections.incrementAndGet();return new ShardServerContext(localSocketAddress, remoteSocketAddress);}}"	No
1645	"public class A {static void deleteAllKnownFlows(final TxFacade txFacade,final InstanceIdentifier<FlowCapableNode> instanceIdentifier,final DeviceFlowRegistry deviceFlowRegistry) {if (!txFacade.isTransactionsEnabled()) {return;}final ListenableFuture<Optional<FlowCapableNode>> future;try (ReadTransaction readTx = txFacade.getReadTransaction()) {future = readTx.read(LogicalDatastoreType.OPERATIONAL, instanceIdentifier);}try {Futures.transform(Futures.catchingAsync(future,Throwable.class,Futures::immediateFailedFuture,MoreExecutors.directExecutor()),flowCapNodeOpt -> {if (flowCapNodeOpt != null && flowCapNodeOpt.isPresent()) {for (final Table tableData : flowCapNodeOpt.get().nonnullTable().values()) {final Table table =new TableBuilder(tableData).setFlow(Collections.emptyMap()).build();final InstanceIdentifier<Table> iiToTable =instanceIdentifier.child(Table.class, tableData.key());txFacade.writeToTransaction(LogicalDatastoreType.OPERATIONAL, iiToTable, table);}}return null;},MoreExecutors.directExecutor()).get();} catch (InterruptedException | ExecutionException ex) {LOG.debug(""Failed to delete {} flows"", deviceFlowRegistry.size(), ex);}}}"	No
1646	"public class A {public void removeRootControllerService(final ControllerServiceNode service) {final ControllerServiceNode existing =rootControllerServices.get(requireNonNull(service).getIdentifier());if (existing == null) {throw new IllegalStateException(service + "" is not a member of this Process Group"");}service.verifyCanDelete();try (final NarCloseable x =NarCloseable.withComponentNarLoader(service.getControllerServiceImplementation().getClass(), service.getIdentifier())) {final ConfigurationContext configurationContext =new StandardConfigurationContext(service, controllerServiceProvider, null, variableRegistry);ReflectionUtils.quietlyInvokeMethodsWithAnnotation(OnRemoved.class, service.getControllerServiceImplementation(), configurationContext);}for (final Map.Entry<PropertyDescriptor, String> entry : service.getProperties().entrySet()) {final PropertyDescriptor descriptor = entry.getKey();if (descriptor.getControllerServiceDefinition() != null) {final String value =entry.getValue() == null ? descriptor.getDefaultValue() : entry.getValue();if (value != null) {final ControllerServiceNode referencedNode = getRootControllerService(value);if (referencedNode != null) {referencedNode.removeReference(service);}}}}rootControllerServices.remove(service.getIdentifier());getStateManagerProvider().onComponentRemoved(service.getIdentifier());ExtensionManager.removeInstanceClassLoaderIfExists(service.getIdentifier());LOG.info(""{} removed from Flow Controller"", service, this);}}"	No
1647	public class A {public void onStartup() {Collection<TaskDefinition> taskDefinitions = getSchedulerDAO().getTasks();if (taskDefinitions != null) {for (TaskDefinition taskDefinition : taskDefinitions) {try {if (taskDefinition.getStartOnStartup()) {scheduleTask(taskDefinition);}} catch (Exception e) {}}}}}	Yes
1648	"public class A {private void sendFileData(long start, long end, boolean addToChecksum) {log.info(""CFDP sending data [{}, {}]"", start, end);byte[] data = new byte[(int) (end - start)];try {raf.seek(start);raf.readFully(data);} catch (IOException e) {log.warn(""Error reading from file"", e);abort();}if (addToChecksum) {checksum += ChecksumCalculator.calculateChecksum(data);checksum &= 0xFFFFFFFF;}FileDataPacket fdp = new FileDataPacket(data, start, dataHeader);simulator.transmitCfdp(fdp);}}"	No
1649	public class A {public void success() {if (failures > 0) {}failures = 0;}}	Yes
1650	"public class A {protected void activate(ComponentContext componentContext, Map<String, Object> properties) {logger.info(""activate..."");this.options = new SslManagerServiceOptions(properties);this.sslContexts = new ConcurrentHashMap<>();ServiceTracker<SslServiceListener, SslServiceListener> listenersTracker =new ServiceTracker<>(componentContext.getBundleContext(), SslServiceListener.class, null);this.sslServiceListeners = new SslServiceListeners(listenersTracker);}}"	No
1651	"public class A {@PreAuthorize(""hasPermission(#id, '""+ AclClassName.Values.LAYOUT+ ""', '""+ PermissionName.Values.LAYOUT_DELETE+ ""')"")public void deleteLayout(final Long id) {layoutService.delete(id);}}"	Yes
1652	public class A {@Overridepublic Void call() throws Exception {IgniteTransactions txs = cache.unwrap(Ignite.class).transactions();try (Transaction tx = txs.txStart(OPTIMISTIC, SERIALIZABLE)) {assertTrue(cache.get(key).equals(val));readLatch.countDown();writeLatch.await(10, TimeUnit.SECONDS);try {tx.commit();} catch (TransactionOptimisticException e) {err[0] = e;}}return null;}}	Yes
1653	public class A {public void freeInstance(final ThreadContext callContext, final EntityBean bean)throws SystemException {discardInstance(callContext, bean);final Operation currentOp = callContext.getCurrentOperation();callContext.setCurrentOperation(Operation.UNSET_CONTEXT);try {bean.unsetEntityContext();} catch (final Exception e) {} finally {callContext.setCurrentOperation(currentOp);}}}	Yes
1654	public class A {@Overridepublic void messageReceived(ChannelHandlerContext ctx, MessageEvent e) throws Exception {try {if (null != outEventStatsCollector || null != outHttpStatsCollector) {if (e.getMessage() instanceof DatabusRequest) {latestDbusRequest = (DatabusRequest) e.getMessage();if (null != outEventStatsCollector) {latestDbusRequest.getParams().put(outEventStatsCollector.getName(), connOutEventStatsCollector);}if (null != outHttpStatsCollector) {latestDbusRequest.getParams().put(outHttpStatsCollector.getName(), connOutHttpStatsCollector);}if (latestDbusRequest.getParams().getProperty(ReadEventsRequestProcessor.CHECKPOINT_PARAM)!= null) {Checkpoint cp =new Checkpoint(latestDbusRequest.getParams().getProperty(ReadEventsRequestProcessor.CHECKPOINT_PARAM));String peer = connOutHttpStatsCollector.getPeers().get(0);connOutHttpStatsCollector.getPeerStats(peer).registerStreamRequest(peer, cp);relay.getMetricsCollector().setClientSCN(peer, cp.getWindowScn());}} else if (shouldMerge(e)) {mergePerConnStats();}}super.messageReceived(ctx, e);} catch (Exception ex) {}}}	Yes
1655	"public class A {@Transactional@Overridepublic void execute(final String taskKey, final boolean dryRun, final JobExecutionContext context)throws JobExecutionException {task = taskDAO.find(taskKey);if (task == null) {throw new JobExecutionException(""Task "" + taskKey + "" not found"");}if (!task.isActive()) {LOG.info(""Task {} not active, aborting..."", taskKey);return;}String executor =Optional.ofNullable(context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY)).orElse(adminUser);TaskExec execution = entityFactory.newEntity(TaskExec.class);execution.setStart(new Date());execution.setTask(task);execution.setExecutor(executor);status.set(""Initialization completed"");AuditElements.Result result;try {execution.setMessage(doExecute(dryRun, executor, context));execution.setStatus(TaskJob.Status.SUCCESS.name());result = AuditElements.Result.SUCCESS;} catch (JobExecutionException e) {LOG.error(""While executing task {}"", taskKey, e);result = AuditElements.Result.FAILURE;execution.setMessage(ExceptionUtils2.getFullStackTrace(e));execution.setStatus(TaskJob.Status.FAILURE.name());}execution.setEnd(new Date());if (hasToBeRegistered(execution)) {taskExecDAO.saveAndAdd(taskKey, execution);}task = taskDAO.save(task);status.set(""Done"");notificationManager.createTasks(AuthContextUtils.getUsername(),AuditElements.EventCategoryType.TASK,this.getClass().getSimpleName(),null,this.getClass().getSimpleName(),result,task,execution);auditManager.audit(AuthContextUtils.getUsername(),AuditElements.EventCategoryType.TASK,task.getClass().getSimpleName(),null,null,result,task,(Object[]) null);}}"	No
1656	public class A {@Overridepublic void preDestruction() throws AuthorizerDestructionException {scheduler.shutdown();try {if (!scheduler.awaitTermination(10000, TimeUnit.MILLISECONDS)) {scheduler.shutdownNow();}} catch (final InterruptedException e) {}}}	Yes
1657	public class A {public List<StreamTestMatch> testMatch(Message message) {final List<StreamTestMatch> matches = Lists.newArrayList();for (final Stream stream : streams) {final StreamTestMatch match = new StreamTestMatch(stream);for (final StreamRule streamRule : stream.getStreamRules()) {try {final Rule rule = new Rule(stream, streamRule, stream.getMatchingType());match.addRule(rule);} catch (InvalidStreamRuleTypeException e) {}}match.matchMessage(message);matches.add(match);}return matches;}}	Yes
1658	"public class A {private Maybe<Object> resolveRawValueFromContainerIgnoringDeprecatedNames(TContainer container, ConfigKey<?> key, Maybe<Object> value) {Map<ConfigKey<?>, Object> oc =((AbstractConfigMapImpl<?>)((BrooklynObjectInternal) container).config().getInternalConfigMap()).ownConfig;if (key instanceof ConfigKeySelfExtracting) {if (((ConfigKeySelfExtracting<?>) key).isSet(oc)) {Map<ConfigKey<?>, ?> ownCopy;synchronized (oc) {ownCopy = MutableMap.copyOf(oc);}Maybe<Object> result =Maybe.of((Object)((ConfigKeySelfExtracting<?>) key).extractValue(ownCopy, getExecutionContext(container)));postLocalEvaluate(key, bo, value, result);return result;} else {return Maybe.absent();}} else {LOG.warn(""Unexpected key type "" + key + "" ("" + key.getClass() + "") in "" + bo + ""; ignoring value"");return Maybe.absent();}}}"	No
1659	"public class A {void appendToDoneFile(AuditIndexRecord indexRecord) throws FileNotFoundException, IOException {logger.info(""Moving to done file. ""+ indexRecord.filePath+ "", queueName=""+ FILE_QUEUE_PROVIDER_NAME+ "", consumer=""+ consumerProvider.getName());String line = gson.toJson(indexRecord);PrintWriter out =new PrintWriter(new BufferedWriter(new OutputStreamWriter(new FileOutputStream(indexDoneFile, true), ""UTF-8"")));out.println(line);out.flush();out.close();consumerProvider.flush();File logFile = null;File archiveFile = null;try {logFile = new File(indexRecord.filePath);String fileName = logFile.getName();archiveFile = new File(archiveFolder, fileName);logger.info(""Moving logFile "" + logFile + "" to "" + archiveFile);boolean result = logFile.renameTo(archiveFile);if (!result) {logger.error(""Error moving log file to archive folder. Unable to rename""+ logFile+ "" to archiveFile=""+ archiveFile);}} catch (Throwable t) {}consumerProvider.flush();archiveFile = null;try {File[] logFiles =archiveFolder.listFiles(new FileFilter() {public boolean accept(File pathname) {return pathname.getName().toLowerCase().endsWith("".log"");}});if (logFiles != null && logFiles.length > maxArchiveFiles) {int filesToDelete = logFiles.length - maxArchiveFiles;BufferedReader br = new BufferedReader(new FileReader(indexDoneFile));try {int filesDeletedCount = 0;while ((line = br.readLine()) != null) {if (!line.isEmpty() && !line.startsWith(""#"")) {AuditIndexRecord record = gson.fromJson(line, AuditIndexRecord.class);logFile = new File(record.filePath);String fileName = logFile.getName();archiveFile = new File(archiveFolder, fileName);if (archiveFile.exists()) {boolean ret = archiveFile.delete();if (!ret) {logger.error(""Error deleting archive file. archiveFile="" + archiveFile);}filesDeletedCount++;if (filesDeletedCount >= filesToDelete) {logger.info(""Deleted "" + filesDeletedCount + "" files"");break;}}}}} finally {br.close();}}} catch (Throwable t) {logger.error(""Error deleting older archive file. archiveFile="" + archiveFile, t);}}}"	Yes
1660	"public class A {@Overridepublic void execute(IotHubStatusCode status, Object context) {Message msg = (Message) context;log.debug("">> IoT Hub responded to message {} with status {}"", msg.getMessageId(), status.name());if (status == IotHubStatusCode.MESSAGE_CANCELLED_ONCLOSE) {failedMessageListOnClose.add(msg.getMessageId());}}}"	No
1661	public class A {private void enableAZ(BaragonAgentMetadata agent, String availabilityZone, LoadBalancerDescription elb) {List<String> availabilityZones = elb.getAvailabilityZones();availabilityZones.add(availabilityZone);EnableAvailabilityZonesForLoadBalancerRequest request =new EnableAvailabilityZonesForLoadBalancerRequest();request.setAvailabilityZones(availabilityZones);request.setLoadBalancerName(elb.getLoadBalancerName());elbClient.enableAvailabilityZonesForLoadBalancer(request);}}	Yes
1662	"public class A {public boolean handleMessageLogic(String notification) {Wrapper<Boolean> errorWrapper = new Wrapper<>();Wrapper<OperationalEnvironmentEntry> opEnvEntryWrapper = new Wrapper<>();try {log.debug(""handle message - for operational environment notification received: {}"", notification);Gson gsonObj = new GsonBuilder().create();IDmaapNotificationData notificationData =gsonObj.fromJson(notification, DmaapNotificationDataImpl.class);IDmaapAuditNotificationData auditNotificationData =gsonObj.fromJson(notification, DmaapNotificationDataImpl.class);AuditingActionEnum actionEnum;switch (notificationData.getAction()) {case CREATE:actionEnum = AuditingActionEnum.CREATE_ENVIRONMENT;break;case UPDATE:actionEnum = AuditingActionEnum.UPDATE_ENVIRONMENT;break;case DELETE:actionEnum = AuditingActionEnum.DELETE_ENVIRONMENT;break;default:actionEnum = AuditingActionEnum.UNKNOWN_ENVIRONMENT_NOTIFICATION;break;}componentUtils.auditEnvironmentEngine(actionEnum,notificationData.getOperationalEnvironmentId(),notificationData.getOperationalEnvironmentType().getEventTypenName(),notificationData.getAction().getActionName(),auditNotificationData.getOperationalEnvironmentName(),auditNotificationData.getTenantContext());if (errorWrapper.isEmpty()) {validateNotification(errorWrapper, notificationData, auditNotificationData);}if (errorWrapper.isEmpty()) {saveEntryWithInProgressStatus(errorWrapper, opEnvEntryWrapper, notificationData);}if (errorWrapper.isEmpty()) {buildOpEnv(errorWrapper, opEnvEntryWrapper.getInnerElement());}} catch (Exception e) {errorWrapper.setInnerElement(false);}return errorWrapper.isEmpty();}}"	Yes
1663	"public class A {protected String xmlDigest(JasperPrint print)throws NoSuchAlgorithmException, FileNotFoundException, JRException, IOException {File outputFile = createXmlOutputFile();log.debug(""XML export output at "" + outputFile.getAbsolutePath());MessageDigest digest = MessageDigest.getInstance(""SHA-1"");FileOutputStream output = new FileOutputStream(outputFile);try {DigestOutputStream out = new DigestOutputStream(output, digest);xmlExport(print, out);} finally {output.close();}return toDigestString(digest);}}"	No
1664	"public class A {protected void generateUDTPojos(SchemaDefinition schema) {for (UDTDefinition udt : database.getUDTs(schema)) {try {generateUDTPojo(udt);} catch (Exception e) {}}watch.splitInfo(""UDT POJOs generated"");}}"	Yes
1665	"public class A {public boolean copy(String src, String dest) {try {URI srcUri = new URI(src), destUri = new URI(dest);Configuration config = new Configuration();config.set(""fs.default.name"", srcUri.resolve(""/"").toString());FileSystem dfs = FileSystem.get(config);Path destPath = new Path(destUri.toString());FileStatus[] files = dfs.listStatus(new Path(srcUri.toString()));if (files == null || files.length == 0) return false;for (FileStatus f : files) {log.info(""Copying "" + f.getPath().toString());dfs.copyToLocalFile(f.getPath(), destPath);}return true;} catch (Exception e) {log.error(e.getMessage(), e);return false;}}}"	No
1666	"public class A {@Deprecatedpublic <T> T update(Collection<String> path, T newValue) {checkPath(path);if (newValue == null) {newValue = typedNull();}if (log.isTraceEnabled()) {}@SuppressWarnings(""unchecked"")T oldValue = (T) values.put(path, newValue);return (isNull(oldValue)) ? null : oldValue;}}"	Yes
1667	"public class A {static void runCommand(String commandName, List<String> args) throws Exception {Directories directories = new Directories(getCentralDir());initLogging(directories.getConfDir(), directories.getLogDir());Command command;if (commandName.equals(""setup-admin-user"")) {if (args.size() != 2) {startupLogger.error(""setup-admin-user requires two args (username and password), exiting"");return;}command = Tools::setupAdminUser;} else if (commandName.equals(""truncate-all-data"")) {if (!args.isEmpty()) {startupLogger.error(""truncate-all-data does not accept any args, exiting"");return;}command = Tools::truncateAllData;} else if (commandName.equals(""execute-range-deletes"")) {if (args.size() != 2) {startupLogger.error(""execute-range-deletes requires two args (partial table name""+ "" and rollup level), exiting"");return;}String partialTableName = args.get(0);if (!partialTableName.equals(""query"")&& !partialTableName.equals(""service_call"")&& !partialTableName.equals(""profile"")) {startupLogger.error(""partial table name must be one of \""query\"", \""service_call\""""+ "" or \""profile\"", exiting"");return;}command = Tools::executeDeletes;} else {startupLogger.error(""unexpected command '{}', exiting"", commandName);return;}String version = Version.getVersion(CentralModule.class);startupLogger.info(""Glowroot version: {}"", version);startupLogger.info(""Java version: {}"", StandardSystemProperty.JAVA_VERSION.value());CentralConfiguration centralConfig = getCentralConfiguration(directories.getConfDir());Session session = null;Cluster cluster = null;boolean success;try {session = connect(centralConfig);cluster = session.getCluster();SchemaUpgrade schemaUpgrade = new SchemaUpgrade(session, Clock.systemClock(), false);Integer initialSchemaVersion = schemaUpgrade.getInitialSchemaVersion();if (initialSchemaVersion == null) {startupLogger.info(""creating glowroot central schema..."");} else if (initialSchemaVersion != schemaUpgrade.getCurrentSchemaVersion()) {startupLogger.warn(""running a version of glowroot central that does not match the""+ "" glowroot central schema version (expecting glowroot central schema""+ "" version {} but found version {}), exiting"",schemaUpgrade.getCurrentSchemaVersion(),initialSchemaVersion);return;}CentralRepoModule repos =new CentralRepoModule(ClusterManager.create(),session,centralConfig.cassandraSymmetricEncryptionKey(),Clock.systemClock());if (initialSchemaVersion == null) {schemaUpgrade.updateSchemaVersionToCurent();startupLogger.info(""glowroot central schema created"");}startupLogger.info(""running {}"", commandName);success = command.run(new Tools(session, repos), args);} finally {if (session != null) {session.close();}if (cluster != null) {cluster.close();}}if (success) {startupLogger.info(""{} completed successfully"", commandName);}}}"	No
1668	"public class A {@Overrideprotected void hibernateMigrate() throws DataMigrationException, XWikiException {XWikiContext context = this.getXWikiContext();logger.info(""Starting WatchlistLeftoversCleaner on wiki [{}]."", context.getWikiId());try {XWiki xwiki = context.getWiki();for (LocalDocumentReference documentToRemove : DOCUMENTS_TO_REMOVE) {XWikiDocument document = xwiki.getDocument(documentToRemove, context);if (document.isNew()) {continue;}xwiki.deleteDocument(document, context);}} catch (Exception e) {throw new DataMigrationException(""Failed to remove watchlist leftovers."", e);}}}"	Yes
1669	"public class A {@Overridepublic boolean isInSafeMode() {if (!mWorkerConnectWaitStartTimeMs.isMarked()) {return false;}Long startTime = mWorkerConnectWaitStartTimeMs.getReference();if (startTime == null) {return true;}long waitTime = ServerConfiguration.getMs(PropertyKey.MASTER_WORKER_CONNECT_WAIT_TIME);if (mClock.millis() - startTime < waitTime) {return true;}if (mWorkerConnectWaitStartTimeMs.compareAndSet(startTime, null, true, false)) {LOG.debug(""Exiting safe mode."");}return mWorkerConnectWaitStartTimeMs.isMarked();}}"	No
1670	"public class A {@Overridepublic void doExecute(TestContext context) {if (log.isDebugEnabled()) {log.debug(""Assert container asserting exceptions of type "" + exception);}try {TestAction action = this.action.build();setActiveAction(action);action.execute(context);} catch (Exception e) {log.debug(""Validating caught exception ..."");if (!exception.isAssignableFrom(e.getClass())) {throw new ValidationException(""Validation failed for asserted exception type - expected: '""+ exception+ ""' but was: '""+ e.getClass().getName()+ ""'"",e);}if (message != null) {if (ValidationMatcherUtils.isValidationMatcherExpression(message)) {ValidationMatcherUtils.resolveValidationMatcher(""message"", e.getLocalizedMessage(), message, context);} else if (!context.replaceDynamicContentInString(message).equals(e.getLocalizedMessage())) {throw new ValidationException(""Validation failed for asserted exception message - expected: '""+ message+ ""' but was: '""+ e.getLocalizedMessage()+ ""'"",e);}}if (log.isDebugEnabled()) {}log.info(""Assert exception validation successful: All values OK"");return;}throw new ValidationException(""Missing asserted exception '"" + exception + ""'"");}}"	Yes
1671	"public class A {private void tryDenseMode() {if (numSpillFiles != 0) {return;}long minKey = Long.MAX_VALUE;long maxKey = Long.MIN_VALUE;long recordCount = 0;for (LongHashPartition p : this.partitionsBeingBuilt) {long partitionRecords = p.getBuildSideRecordCount();recordCount += partitionRecords;if (partitionRecords > 0) {if (p.getMinKey() < minKey) {minKey = p.getMinKey();}if (p.getMaxKey() > maxKey) {maxKey = p.getMaxKey();}}}if (buildSpillRetBufferNumbers != 0) {throw new RuntimeException(""buildSpillRetBufferNumbers should be 0: "" + buildSpillRetBufferNumbers);}long range = maxKey - minKey + 1;if (range > 0 && (range <= recordCount * 4 || range <= segmentSize / 8)) {int buffers = (int) Math.ceil(((double) (range * 8)) / segmentSize);MemorySegment[] denseBuckets = new MemorySegment[buffers];for (int i = 0; i < buffers; i++) {MemorySegment seg = getNextBuffer();if (seg == null) {returnAll(Arrays.asList(denseBuckets));return;}denseBuckets[i] = seg;for (int j = 0; j < segmentSize; j += 8) {seg.putLong(j, INVALID_ADDRESS);}}denseMode = true;LOG.info(""LongHybridHashTable: Use dense mode!"");this.minKey = minKey;this.maxKey = maxKey;List<MemorySegment> segments = new ArrayList<>();buildSpillReturnBuffers.drainTo(segments);returnAll(segments);ArrayList<MemorySegment> dataBuffers = new ArrayList<>();long addressOffset = 0;for (LongHashPartition p : this.partitionsBeingBuilt) {p.iteratorToDenseBucket(denseBuckets, addressOffset, minKey);p.updateDenseAddressOffset(addressOffset);dataBuffers.addAll(Arrays.asList(p.getPartitionBuffers()));addressOffset += (p.getPartitionBuffers().length << segmentSizeBits);returnAll(Arrays.asList(p.getBuckets()));}this.denseBuckets = denseBuckets;this.densePartition =new LongHashPartition(this, buildSideSerializer, dataBuffers.toArray(new MemorySegment[0]));freeCurrent();}}}"	No
1672	"public class A {@Overridepublic void open() {if ((_noticeableThreadPoolExecutor != null) && !_noticeableThreadPoolExecutor.isShutdown()) {return;}if (_rejectedExecutionHandler == null) {_rejectedExecutionHandler = _createRejectionExecutionHandler();}NoticeableThreadPoolExecutor noticeableThreadPoolExecutor =new NoticeableThreadPoolExecutor(_workersCoreSize,_workersMaxSize,60L,TimeUnit.SECONDS,new LinkedBlockingQueue<>(_maximumQueueSize),new NamedThreadFactory(getName(), Thread.NORM_PRIORITY, PortalClassLoaderUtil.getClassLoader()),_rejectedExecutionHandler,new ThreadPoolHandlerAdapter());NoticeableExecutorService oldNoticeableExecutorService =_portalExecutorManager.registerPortalExecutor(getName(), noticeableThreadPoolExecutor);if (oldNoticeableExecutorService != null) {if (_log.isWarnEnabled()) {_log.warn(""Abort creating a new thread pool for destination ""+ getName()+ "" and reuse previous one"");}noticeableThreadPoolExecutor.shutdownNow();noticeableThreadPoolExecutor = (NoticeableThreadPoolExecutor) oldNoticeableExecutorService;}_noticeableThreadPoolExecutor = noticeableThreadPoolExecutor;}}"	No
1673	"public class A {public void replaceIdentityStore(ConnectionType type, CertificateStoreConfiguration configuration, boolean createIfAbsent)throws CertificateStoreConfigException {if (type == null) {throw new IllegalArgumentException(""Argument 'type' cannot be null."");}if (configuration == null) {throw new IllegalArgumentException(""Argument 'configuration' cannot be null."");}final CertificateStoreConfiguration oldConfig = typeToIdentityStore.get(type);if (oldConfig == null || !oldConfig.equals(configuration)) {if (!identityStores.containsKey(configuration)) {final IdentityStore store = new IdentityStore(configuration, createIfAbsent);identityStores.put(configuration, store);storeWatcher.watch(store);}typeToIdentityStore.put(type, configuration);if (oldConfig != null && !typeToIdentityStore.containsValue(oldConfig)) {final IdentityStore store = identityStores.remove(oldConfig);if (store != null) {storeWatcher.unwatch(store);}}final ConnectionManagerImpl connectionManager =((ConnectionManagerImpl) XMPPServer.getInstance().getConnectionManager());for (ConnectionListener connectionListener : connectionManager.getListeners(type)) {try {connectionListener.setIdentityStoreConfiguration(configuration);} catch (RuntimeException e) {}}}JiveGlobals.setProperty(type.getPrefix() + ""keystore"", configuration.getFile().getPath());JiveGlobals.setProperty(type.getPrefix() + ""keypass"", new String(configuration.getPassword()), true);}}"	Yes
1674	"public class A {private void processWmls(File baseDir) throws IOException {log.debug(""Entered WML folder"");File dir = getUploadWmlDir();for (File wml : baseDir.listFiles()) {String oldHash = OmFileHelper.getFileName(wml.getName());String hash = hashMap.get(oldHash);if (hash == null) {continue;}changeHash(wml, dir, hash, null);}}}"	No
1675	"public class A {public boolean verify() {boolean retVal = true;if (this.indexedFields == null) {retVal = false;log.error(this.getType().typeName() + "": index set has been set to null."");} else if (this.indexedFields.isEmpty()) {if (log.isDebugEnabled()) {log.debug(this.getType().typeName() + "": no fields have been set to index."");}} else {upperCaseSetEntries(this.indexedFields, this.getType().typeName() + "": index fields"");}if (this.reverseIndexedFields == null) {retVal = false;log.error(this.getType().typeName() + "": reverse index set has been set to null."");} else if (this.reverseIndexedFields.isEmpty()) {if (log.isDebugEnabled()) {log.debug(this.getType().typeName() + "": no fields have been set to reverse index."");}} else {upperCaseSetEntries(this.reverseIndexedFields, this.getType().typeName() + "": reverse index fields"");}return retVal;}}"	No
1676	public class A {public String getSecurityHeader() {if (this.securityHeader == null) {try {securityHeader =APIUtil.getOAuthConfigurationFromAPIMConfig(APIConstants.AUTHORIZATION_HEADER);if (securityHeader == null) {securityHeader = HttpHeaders.AUTHORIZATION;}} catch (APIManagementException e) {}}return securityHeader;}}	Yes
1677	"public class A {public static com.liferay.portal.workflow.kaleo.forms.model.KaleoProcess deleteKaleoProcess(HttpPrincipal httpPrincipal, long kaleoProcessId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(KaleoProcessServiceUtil.class,""deleteKaleoProcess"",_deleteKaleoProcessParameterTypes1);MethodHandler methodHandler = new MethodHandler(methodKey, kaleoProcessId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.portal.workflow.kaleo.forms.model.KaleoProcess) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
1678	"public class A {public static boolean isFreeViewerPage(PageModel model, Widget[] widgets, String viewerWidgetCode) {try {if (model != null && widgets != null) {int mainFrame = model.getMainFrame();if (mainFrame < 0) {return false;}Widget viewer = widgets[mainFrame];if (null == viewer) {return false;}boolean isRightCode =null == viewerWidgetCode || viewer.getType().getCode().equals(viewerWidgetCode);String actionName = viewer.getType().getAction();boolean isRightAction =(null != actionName && actionName.toLowerCase().indexOf(""viewer"") >= 0);List<WidgetTypeParameter> typeParameters = viewer.getType().getTypeParameters();if ((isRightCode || isRightAction)&& (null != typeParameters && !typeParameters.isEmpty())&& (null == viewer.getConfig() || viewer.getConfig().isEmpty())) {return true;}}} catch (Throwable t) {}return false;}}"	Yes
1679	"public class A {@Overridepublic void handleNewSession(final String sessionId) throws Exception {zkClient.waitUntilConnected(HelixZkClient.DEFAULT_CONNECTION_TIMEOUT, TimeUnit.SECONDS);LOG.info(""handleNewSession. sessionId: {}."", sessionId);waitNewSession.countDown();}}"	No
1680	"public class A {@GET@Path(""eventCount"")@Produces(MediaType.TEXT_PLAIN)@RestQuery(name = ""eventcount"",description = ""Get the number of scheduled events"",returnDescription = ""The number of scheduled events"",responses = {@RestResponse(responseCode = HttpServletResponse.SC_OK, description = ""The event count"")})public Response eventCount() throws UnauthorizedException {try {return Response.ok("""" + service.getEventCount()).build();} catch (UnauthorizedException e) {throw e;} catch (Exception e) {throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);}}}"	Yes
1681	"public class A {public static SchemaFactory newSchemaFactory() {SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);try {factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, """");} catch (SAXException e) {}try {factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, """");} catch (SAXException e) {}return factory;}}"	Yes
1682	public class A {@VisibleForTestingvoid setAsyncRequestInstanceSecondStep(SuccessfulAssociateIpAddressResponse response,AsyncRequestInstanceState asyncRequestInstanceState,String createFirewallRuleJobId) {SuccessfulAssociateIpAddressResponse.IpAddress ipAddress = response.getIpAddress();String ipAddressId = ipAddress.getId();String ip = ipAddress.getIpAddress();asyncRequestInstanceState.setIpInstanceId(ipAddressId);asyncRequestInstanceState.setIp(ip);asyncRequestInstanceState.setCurrentJobId(createFirewallRuleJobId);asyncRequestInstanceState.setState(AsyncRequestInstanceState.StateType.CREATING_FIREWALL_RULE);}}	Yes
1683	"public class A {public void deviceDiscovered(Device device) {if (device.active) {ThingUID accountUID = accountHandler.getThing().getUID();ThingUID thingUID = UidUtils.generateThingUID(device, accountHandler.getThing());try {DiscoveryResult discoveryResult =DiscoveryResultBuilder.create(thingUID).withBridge(accountUID).withLabel(PropertyUtils.getPropertyValue(device, ""common.attributes.name.value"", String.class)).withProperty(""id"", device.id).withProperty(""type"", device.deviceType).withRepresentationProperty(""id"").build();thingDiscovered(discoveryResult);} catch (GardenaException ex) {}}}}"	Yes
1684	"public class A {@Overridepublic Response toResponse(IllegalStateException exception) {if (logger.isDebugEnabled()) {logger.debug(StringUtils.EMPTY, exception);}return Response.status(Response.Status.CONFLICT).entity(exception.getMessage()).type(""text/plain"").build();}}"	Yes
1685	"public class A {@Overridepublic void complete() throws IOException {LOG.debug(""Completing session: {}"", id);delete();}}"	No
1686	"public class A {public static com.liferay.commerce.application.model.CommerceApplicationModelgetCommerceApplicationModel(HttpPrincipal httpPrincipal, long commerceApplicationModelId)throws com.liferay.portal.kernel.exception.PortalException {try {MethodKey methodKey =new MethodKey(CommerceApplicationModelServiceUtil.class,""getCommerceApplicationModel"",_getCommerceApplicationModelParameterTypes2);MethodHandler methodHandler = new MethodHandler(methodKey, commerceApplicationModelId);Object returnObj = null;try {returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);} catch (Exception exception) {if (exception instanceof com.liferay.portal.kernel.exception.PortalException) {throw (com.liferay.portal.kernel.exception.PortalException) exception;}throw new com.liferay.portal.kernel.exception.SystemException(exception);}return (com.liferay.commerce.application.model.CommerceApplicationModel) returnObj;} catch (com.liferay.portal.kernel.exception.SystemException systemException) {throw systemException;}}}"	Yes
1687	"public class A {public List<NoteInfo> listNotesInfo(boolean needsReload, ServiceContext context, ServiceCallback<List<NoteInfo>> callback)throws IOException {if (needsReload) {try {notebook.reloadAllNotes(context.getAutheInfo());} catch (IOException e) {LOGGER.error(""Fail to reload notes from repository"", e);}}List<NoteInfo> notesInfo =notebook.getNotesInfo(noteId -> authorizationService.isReader(noteId, context.getUserAndRoles()));callback.onSuccess(notesInfo, context);return notesInfo;}}"	No
1688	"public class A {private CMLMolecule cdkCrystalToCMLMolecule(ICrystal crystal, boolean setIDs) {CMLMolecule molecule = cdkAtomContainerToCMLMolecule(crystal, false, false);CMLCrystal cmlCrystal = new CMLCrystal();if (useCMLIDs && setIDs) {IDCreator.createIDs(crystal);}if (crystal.getID() != null && !crystal.getID().equals("""")) cmlCrystal.setId(crystal.getID());this.checkPrefix(cmlCrystal);cmlCrystal.setZ(crystal.getZ());double[] params =CrystalGeometryTools.cartesianToNotional(crystal.getA(), crystal.getB(), crystal.getC());logger.debug(""Number of cell params: "", params.length);cmlCrystal.setCellParameters(params);molecule.appendChild(cmlCrystal);return molecule;}}"	No
1689	"public class A {private List<String> resolveQuery(TreeQuery.QueryNode node, List<String> includeSamples)throws CatalogException, ExecutionException, InterruptedException {if (includeSamples == null) {} else {logger.info(""Execute leaf-node '{}' for {} samples"", node, includeSamples.size());}Query variantsQuery = new Query(node.getQuery());Query sampleQuery = new Query();Query individualQuery = new Query();for (String key : new HashSet<>(variantsQuery.keySet())) {if (key.startsWith(SAMPLE_PREFIX)) {sampleQuery.put(key.substring(SAMPLE_PREFIX.length()), variantsQuery.getString(key));variantsQuery.remove(key);}if (key.startsWith(INDIVIDUAL_PREFIX)) {individualQuery.put(key.substring(INDIVIDUAL_PREFIX.length()), variantsQuery.getString(key));variantsQuery.remove(key);}}Set<String> samples = resolveVariantQuery(node, variantsQuery, includeSamples);samples = resolveSampleCatalogQuery(sampleQuery, samples);samples = resolveIndividualCatalogQuery(individualQuery, samples);return new ArrayList<>(samples);}}"	Yes
1690	"public class A {public BacklogQuota getBacklogQuota(TopicName topicName) {String policyPath = AdminResource.path(POLICIES, topicName.getNamespace());if (!isTopicLevelPoliciesEnable) {return getBacklogQuota(topicName.getNamespace(), policyPath);}try {return Optional.ofNullable(pulsar.getTopicPoliciesService().getTopicPolicies(topicName)).map(TopicPolicies::getBackLogQuotaMap).map(map -> map.get(BacklogQuotaType.destination_storage.name())).orElseGet(() -> getBacklogQuota(topicName.getNamespace(), policyPath));} catch (Exception e) {log.warn(""Failed to read topic policies data, will apply the namespace backlog quota:""+ "" topicName={}"",topicName,e);}return getBacklogQuota(topicName.getNamespace(), policyPath);}}"	No
1691	public class A {private <T> T fromJson(String json, final Class<T> classOfT) {if (!isJsonObject(json)) return null;json = json.substring(MAGIC_JSON_START.length());try {return getObjectMapper().readValue(json, classOfT);} catch (IOException ex) {return null;}}}	Yes
1692	"public class A {public void bitarchiveReply(String bitarchiveBatchID,String bitarchiveID,int noOfFilesProcessed,Collection<File> filesFailed,RemoteFile remoteFile,String errMsg,List<FileBatchJob.ExceptionOccurrence> exceptions)throws ArgumentNotValid {ArgumentNotValid.checkNotNullOrEmpty(bitarchiveBatchID, ""String bitarchiveBatchID"");ArgumentNotValid.checkNotNullOrEmpty(bitarchiveID, ""String bitarchiveID"");ArgumentNotValid.checkNotNegative(noOfFilesProcessed, ""int noOfFilesProcessed"");BatchJobStatus bjs = runningBatchJobs.get(bitarchiveBatchID);if (bjs == null) {log.debug(""The batch ID '{}' of the received reply from bitarchives does not correspond to any""+ "" pending batch job. Ignoring and deleting RemoteFile '{}'.Only knows batchjob with""+ "" IDs: {}"",bitarchiveBatchID,remoteFile,runningBatchJobs.keySet());if (remoteFile != null) {remoteFile.cleanup();}} else {bjs.updateWithBitarchiveReply(bitarchiveID, noOfFilesProcessed, filesFailed, remoteFile, errMsg);}}}"	No
1693	"public class A {@Overridepublic AccountRole fetchByRoleId(long roleId, boolean useFinderCache) {Object[] finderArgs = null;if (useFinderCache) {finderArgs = new Object[] {roleId};}Object result = null;if (useFinderCache) {result = finderCache.getResult(_finderPathFetchByRoleId, finderArgs);}if (result instanceof AccountRole) {AccountRole accountRole = (AccountRole) result;if (roleId != accountRole.getRoleId()) {result = null;}}if (result == null) {StringBundler sb = new StringBundler(3);sb.append(_SQL_SELECT_ACCOUNTROLE_WHERE);sb.append(_FINDER_COLUMN_ROLEID_ROLEID_2);String sql = sb.toString();Session session = null;try {session = openSession();Query query = session.createQuery(sql);QueryPos queryPos = QueryPos.getInstance(query);queryPos.add(roleId);List<AccountRole> list = query.list();if (list.isEmpty()) {if (useFinderCache) {finderCache.putResult(_finderPathFetchByRoleId, finderArgs, list);}} else {if (list.size() > 1) {Collections.sort(list, Collections.reverseOrder());if (_log.isWarnEnabled()) {if (!useFinderCache) {finderArgs = new Object[] {roleId};}_log.warn(""AccountRolePersistenceImpl.fetchByRoleId(long, boolean) with parameters (""+ StringUtil.merge(finderArgs)+ "") yields a result set with more than 1 result. This violates the logical""+ "" unique restriction. There is no order guarantee on which result is""+ "" returned by this finder."");}}AccountRole accountRole = list.get(0);result = accountRole;cacheResult(accountRole);}} catch (Exception exception) {throw processException(exception);} finally {closeSession(session);}}if (result instanceof List<?>) {return null;} else {return (AccountRole) result;}}}"	No
1694	"public class A {private void runIteration(Random rng, Data data, int m, int nbtrees) {log.info(""Splitting the data"");Data train = data.clone();Data test = train.rsplit(rng, (int) (data.size() * 0.1));DefaultTreeBuilder treeBuilder = new DefaultTreeBuilder();SequentialBuilder forestBuilder = new SequentialBuilder(rng, treeBuilder, train);treeBuilder.setM(m);long time = System.currentTimeMillis();log.info(""Growing a forest with m={}"", m);DecisionForest forestM = forestBuilder.build(nbtrees);sumTimeM += System.currentTimeMillis() - time;numNodesM += forestM.nbNodes();treeBuilder.setM(1);time = System.currentTimeMillis();log.info(""Growing a forest with m=1"");DecisionForest forestOne = forestBuilder.build(nbtrees);sumTimeOne += System.currentTimeMillis() - time;numNodesOne += forestOne.nbNodes();double[] testLabels = test.extractLabels();double[] predictions = new double[test.size()];forestM.classify(test, predictions);sumTestErrM += ErrorEstimate.errorRate(testLabels, predictions);forestOne.classify(test, predictions);sumTestErrOne += ErrorEstimate.errorRate(testLabels, predictions);}}"	No
1695	"public class A {@Testpublic void testJmxDumpCBRRoutesAsXml() throws Exception {MBeanServer mbeanServer = getMBeanServer();ObjectName on = getContextObjectName();String xml = (String) mbeanServer.invoke(on, ""dumpRoutesAsXml"", null, null);assertNotNull(xml);assertTrue(xml.contains(""myRoute""), xml);assertTrue(xml.matches(""[\\S\\s]*<when id=\""when[0-9]+\"">[\\S\\s]*""));assertTrue(xml.matches(""[\\S\\s]*<otherwise id=\""otherwise[0-9]+\"">[\\S\\s]*""));assertTrue(xml.contains(""<route customId=\""true\"" id=\""myRoute\"">"")|| xml.contains(""<route id=\""myRoute\"" customId=\""true\"">""));assertTrue(xml.contains(""<choice customId=\""true\"" id=\""myChoice\"">"")|| xml.contains(""<choice id=\""myChoice\"" customId=\""true\"">""));}}"	Yes
1696	"public class A {@Overridepublic synchronized RobotsTxt getRobotsTxt(HttpFetchClient fetcher, String url) {String trimmedURL = StringUtils.trimToEmpty(url);String baseURL = getBaseURL(trimmedURL);RobotsTxt robotsTxt = robotsTxtCache.get(baseURL);if (robotsTxt != null) {return robotsTxt;}String robotsURL = baseURL + ""/robots.txt"";try {CrawlDoc doc =new CrawlDoc(new HttpDocInfo(robotsURL), fetcher.getStreamFactory().newInputStream());IHttpFetchResponse response = fetcher.fetch(doc, HttpMethod.GET);String redirURL = response.getRedirectTarget();if (StringUtils.isNotBlank(redirURL)) {doc = new CrawlDoc(new HttpDocInfo(redirURL), fetcher.getStreamFactory().newInputStream());response = fetcher.fetch(doc, HttpMethod.GET);}if (response.getStatusCode() == HttpStatus.SC_OK) {robotsTxt = parseRobotsTxt(doc.getInputStream(), trimmedURL, response.getUserAgent());} else {LOG.info(""No robots.txt found for {}. ({} - {})"",robotsURL,response.getStatusCode(),response.getReasonPhrase());robotsTxt = new RobotsTxt();}} catch (Exception e) {LOG.warn(""Not able to obtain robots.txt at: {}"", robotsURL, e);robotsTxt = new RobotsTxt();}robotsTxtCache.put(baseURL, robotsTxt);return robotsTxt;}}"	Yes
1697	public class A {@Overridepublic void afterDestroy(EntryEvent<K, V> event) {}}	Yes
1698	"public class A {private void actionAcceptRelationRecommendation(AnnotationActionHandler aActionHandler,AnnotatorState aState,AjaxRequestTarget aTarget,CAS aCas,VID aVID)throws AnnotationException, IOException {SourceDocument document = aState.getDocument();Predictions predictions =recommendationService.getPredictions(aState.getUser(), aState.getProject());VID recommendationVid = VID.parse(aVID.getExtensionPayload());Optional<RelationSuggestion> prediction =predictions.getPredictionByVID(document, recommendationVid).filter(f -> f instanceof RelationSuggestion).map(f -> (RelationSuggestion) f);if (prediction.isEmpty()) {aTarget.getPage().error(""Could not find relation"");aTarget.addChildren(aTarget.getPage(), IFeedback.class);return;}RelationSuggestion suggestion = prediction.get();AnnotationLayer layer = annotationService.getLayer(suggestion.getLayerId());AnnotationFeature feature = annotationService.getFeature(suggestion.getFeature(), layer);int address =recommendationService.upsertRelationFeature(annotationService,document,aState.getUser().getUsername(),aCas,layer,feature,suggestion);AnnotationFS relation = WebAnnoCasUtil.selectAnnotationByAddr(aCas, address);Type type = CasUtil.getType(aCas, layer.getName());Feature sourceFeature = type.getFeatureByBaseName(FEAT_REL_SOURCE);Feature targetFeature = type.getFeatureByBaseName(FEAT_REL_TARGET);AnnotationFS source = (AnnotationFS) relation.getFeatureValue(sourceFeature);AnnotationFS target = (AnnotationFS) relation.getFeatureValue(targetFeature);aState.getSelection().selectArc(new VID(address), source, target);aActionHandler.actionSelect(aTarget);aActionHandler.actionCreateOrUpdate(aTarget, aCas);learningRecordService.logRecord(document,aState.getUser().getUsername(),suggestion,layer,feature,ACCEPTED,MAIN_EDITOR);acceptRecommendation(suggestion, aState, aTarget, aCas, aVID, address);}}"	Yes
1699	"public class A {@Overridepublic void jobWasExecuted(JobExecutionContext context, JobExecutionException jobException) {JobDataMap jobDataMap = context.getJobDetail().getJobDataMap();Note note = (Note) jobDataMap.get(""note"");String result = StringUtils.defaultString(context.getResult().toString(), ""unknown"");Timer.Sample sample = cronJobTimerSamples.remove(context);if (sample != null) {Tag noteId = Tag.of(""nodeid"", note.getId());Tag name = Tag.of(""name"", StringUtils.defaultString(note.getName(), ""unknown""));Tag statusTag = Tag.of(""result"", result);sample.stop(Metrics.timer(""cronjob"", Tags.of(noteId, name, statusTag)));} else {}}}"	Yes
1700	"public class A {private void startTestFamework() throws Exception {log.debug(""STARTING TEST FRAMEWORK"");resetTestListener(testListener);resetClockToStartOfTest(clock);startBusAndRegisterListener(busService, testListener);restartSubscriptionService(subscriptionBaseService);restartEntitlementService(entitlementService);log.debug(""STARTED TEST FRAMEWORK"");}}"	No
1701	public class A {public final Statement startBouncing(final Statement next) {return new Statement() {@Overridepublic void evaluate() throws Throwable {bouncingMembersTask = new FutureTask<Runnable>(new MemberUpDownMonkey(), null);Thread bounceMembersThread = new Thread(bouncingMembersTask);bounceMembersThread.setDaemon(true);bounceMembersThread.start();next.evaluate();}};}}	Yes
1702	"public class A {@Overridepublic void validate() {super.validate();populateRemittanceList();listData();final SimpleDateFormat dateFomatter = new SimpleDateFormat(""yyyy-MM-dd"", Locale.getDefault());if (receiptDateArray != null) {final String[] filterReceiptDateArray = removeNullValue(receiptDateArray);final String receiptEndDate = filterReceiptDateArray[filterReceiptDateArray.length - 1];try {if (!receiptEndDate.isEmpty()&& remittanceDate != null&& remittanceDate.before(dateFomatter.parse(receiptEndDate)))addActionError(getText(""bankremittance.before.receiptdate""));} catch (final ParseException e) {LOGGER.debug(""Exception in parsing date  "" + receiptEndDate + "" - "" + e.getMessage());throw new ApplicationRuntimeException(""Exception while parsing receiptEndDate date"", e);}}}}"	No
1703	public class A {public static com.liferay.commerce.wish.list.model.CommerceWishListItemSoap[]getCommerceWishListItems(long commerceWishListId,int start,int end,com.liferay.portal.kernel.util.OrderByComparator<com.liferay.commerce.wish.list.model.CommerceWishListItem>orderByComparator)throws RemoteException {try {java.util.List<com.liferay.commerce.wish.list.model.CommerceWishListItem> returnValue =CommerceWishListItemServiceUtil.getCommerceWishListItems(commerceWishListId, start, end, orderByComparator);return com.liferay.commerce.wish.list.model.CommerceWishListItemSoap.toSoapModels(returnValue);} catch (Exception exception) {throw new RemoteException(exception.getMessage());}}}	Yes
1704	"public class A {@SuppressWarnings(""unchecked"")@Overridepublic void run() {YarnContainerLauncherEvent event = null;Set<String> allNodes = new HashSet<String>();while (!stopped.get() && !Thread.currentThread().isInterrupted()) {try {event = (YarnContainerLauncherEvent) eventQueue.take();} catch (InterruptedException e) {if (!stopped.get()) {context.getEventHandler().handle(new InternalErrorEvent(context.getApplicationId(),""yarn container launch event handler is interrupted. "" + e.getMessage()));}return;}allNodes.add(event.getContainerMgrAddress());int poolSize = launcherPool.getCorePoolSize();if (poolSize != limitOnPoolSize) {int numNodes = allNodes.size();int idealPoolSize = Math.min(limitOnPoolSize, numNodes);if (poolSize < idealPoolSize) {int newPoolSize = Math.min(limitOnPoolSize, idealPoolSize + INITIAL_POOL_SIZE);launcherPool.setCorePoolSize(newPoolSize);}}launcherPool.execute(createEventProcessor(event));}}}"	Yes
1705	"public class A {@ApiOperation(value =""get a CSV JSON data preview of the data resource that matches the given uuid and where""+ "" the given configuration will be applied to ( = data model)"",notes =""Returns a CSV JSON data preview of the data resource that matches the given uuid and""+ "" where the given configuration will be applied to ( = data model)."")@ApiResponses(value = {@ApiResponse(code = 200,message =""a preview of the CSV JSON data of the data resource, where the given configuration""+ "" was applied, could be retrieved""),@ApiResponse(code = 404,message = ""could not find a resource for the given uuid or data for this resource""),@ApiResponse(code = 500, message = ""internal processing error (see body for details)"")})@Timed@POST@Path(""/{uuid}/configurationpreview"")@Consumes(MediaType.APPLICATION_JSON)@Produces(MediaType.APPLICATION_JSON)public Response csvJSONPreviewConfiguration(@ApiParam(value = ""data resource identifier"", required = true) @PathParam(""uuid"")final String uuid,@ApiParam(value = ""configuration (as JSON)"", required = true) final String jsonObjectString)throws DMPControllerException {final Optional<Resource> resourceOptional = dataModelUtil.fetchResource(uuid);if (!resourceOptional.isPresent()) {return Response.status(Status.NOT_FOUND).build();}final Resource resource = resourceOptional.get();if (ResourcesResource.LOG.isTraceEnabled()) {ResourcesResource.LOG.trace(""= '{}'"", ToStringBuilder.reflectionToString(resource));}ResourcesResource.LOG.debug(""try to apply configuration to resource with uuid '{}'"", uuid);final String result = applyConfigurationForCSVJSONPreview(resource, jsonObjectString);if (result == null) {throw new DMPControllerException(String.format(""couldn't apply configuration to resource with uuid '%s'"", uuid));}return buildResponse(result);}}"	Yes
1706	"public class A {public Sequence eval(Sequence[] args, Sequence contextSequence) throws XPathException {final String path = new AnyURIValue(args[0].itemAt(0).getStringValue()).toString();if (path.matches(""^[a-z]+://.*"")) {final MimeTable mimeTable = MimeTable.getInstance();final MimeType mimeType = mimeTable.getContentTypeFor(path);if (mimeType != null) {return new StringValue(mimeType.getName());}} else {try {XmldbURI pathUri = XmldbURI.xmldbUriFor(path);pathUri = context.getBaseURI().toXmldbURI().resolveCollectionPath(pathUri);try (final LockedDocument lockedDoc =context.getBroker().getXMLResource(pathUri, LockMode.READ_LOCK)) {if (lockedDoc != null) {return new StringValue(lockedDoc.getDocument().getMimeType());}}} catch (final Exception e) {throw new XPathException(this, e);}}return Sequence.EMPTY_SEQUENCE;}}"	Yes
1707	public class A {private void createControl(UIElementConfig element, boolean isMenu, String parentEntry) {if (element == null) {return;}if (!isMenu&& (element.getType() == UIElementType.MENUITEM|| element.getType() == UIElementType.BUTTON)) {XControl button =GuiFactory.createButton(UNO.xMCF, context, element.getLabel(), null, new Rectangle(0, 0, 100, 32), null);XButton xbutton = UNO.XButton(button);AbstractActionListener xButtonAction = event -> processUiElementEvent(element);xbutton.addActionListener(xButtonAction);controlContainer.addControl(element.getId(), button);layout.addControl(button);} else if (element.getType() == UIElementType.SENDERBOX) {createSenderbox(element);} else if (element.getType() == UIElementType.SEARCHBOX) {createSearchbox(element);} else if (element.getType() == UIElementType.MENU) {XMutableTreeNode node = dataModel.createNode(element.getLabel(), false);if (parentEntry == null) {((XMutableTreeNode) dataModel.getRoot()).appendChild(node);} else {menus.get(parentEntry).appendChild(node);}menus.put(element.getMenu(), node);} else if (isMenu&& menus.get(parentEntry) != null&& (element.getType() == UIElementType.MENUITEM|| element.getType() == UIElementType.BUTTON)) {XMutableTreeNode node = dataModel.createNode(element.getLabel(), false);menus.get(parentEntry).appendChild(node);UUID uuid = UUID.randomUUID();actions.put(uuid.toString(), () -> processUiElementEvent(element));node.setDataValue(uuid.toString());}}}	Yes
1708	public class A {@Beforepublic void setUp() throws Exception {SUT = new Payload2TcpProtocol();channelHandlerContextMock = mock(ChannelHandlerContext.class, RETURNS_DEEP_STUBS);byte[] bytes = amsTCPPacket.getBytes();}}	Yes
1709	"public class A {private void publishRegisterURI(final List<URIRegisterDTO> registerDTOList) {log.info(""publish uri: {}"", registerDTOList);publisher.publish(registerDTOList);}}"	No
1710	public class A {@Overridepublic Future<Void> close(final SpanContext spanContext) {mappingAndDelegatingCommandConsumerFactory.removeClient(tenantId);consumerLinkTenants.remove(tenantId);final Promise<Void> result = Promise.promise();connection.closeAndFree(receiver, receiverClosed -> result.complete());return result.future();}}	Yes
1711	"public class A {protected void backupAndClearCurrentSession(HttpServletRequest req) {HttpSession session = req.getSession(false);if (session != null) {String sessionId = session.getId();ServletContainerFactory.getServletContainer().visit(new SessionTaskVisitor(sessionId,new SessionTask() {@Overridepublic boolean executeTask(HttpSession session) {if (log.isTraceEnabled()) {log.trace(""Starting with backup attributes for context: ""+ session.getServletContext().getContextPath());}List<String> attrNames = offlineCopy(session.getAttributeNames());Map<String, Object> backup = new HashMap<String, Object>();for (String attrName : attrNames) {Object attrValue = session.getAttribute(attrName);session.removeAttribute(attrName);backup.put(attrName, attrValue);if (log.isTraceEnabled()) {log.trace(""Finished backup of attribute: "" + attrName);}}session.setAttribute(BACKUP_ATTR, backup);return true;}}));}}}"	No
1712	"public class A {public synchronized HttpConnection getFreeConnection(HostConfiguration hostConfiguration) {HttpConnectionWithReference connection = null;HostConnectionPool hostPool = getHostPool(hostConfiguration, false);if ((hostPool != null) && (hostPool.freeConnections.size() > 0)) {connection = (HttpConnectionWithReference) hostPool.freeConnections.removeLast();freeConnections.remove(connection);storeReferenceToConnection(connection, hostConfiguration, this);if (LOG.isDebugEnabled()) {}idleConnectionHandler.remove(connection);} else if (LOG.isDebugEnabled()) {LOG.debug(""There were no free connections to get, hostConfig="" + hostConfiguration);}return connection;}}"	Yes
1713	"public class A {@Overridepublic List<User> findUsersLike(final String userName, final boolean caseInsensitive)throws JargonException {if (userName == null) {throw new IllegalArgumentException(""null userName"");}log.info(""case insensitive?:{}"", caseInsensitive);IRODSGenQueryBuilder builder = new IRODSGenQueryBuilder(true, caseInsensitive, null);StringBuilder userQuery = new StringBuilder();userQuery.append(userName.trim());userQuery.append(""%"");IRODSQueryResultSet resultSet = null;try {UserAOHelper.addUserSelectsToBuilder(builder);builder.addOrderByGenQueryField(RodsGenQueryEnum.COL_USER_NAME, OrderByType.ASC).addOrderByGenQueryField(RodsGenQueryEnum.COL_USER_ZONE, OrderByType.ASC).addConditionAsGenQueryField(RodsGenQueryEnum.COL_USER_TYPE, QueryConditionOperators.NOT_EQUAL, RODS_GROUP).addConditionAsGenQueryField(RodsGenQueryEnum.COL_USER_NAME,QueryConditionOperators.LIKE,userQuery.toString().trim());IRODSGenQueryFromBuilder irodsQuery =builder.exportIRODSQueryFromBuilder(getJargonProperties().getMaxFilesAndDirsQueryMax());resultSet = getGenQueryExecutor().executeIRODSQueryAndCloseResult(irodsQuery, 0);} catch (JargonQueryException e) {log.error(""query exception for query"", e);throw new JargonException(""error in query for user"", e);} catch (GenQueryBuilderException e) {log.error(""query exception for query"", e);throw new JargonException(""error in query for user"", e);}List<User> users = new ArrayList<User>();User user;for (IRODSQueryResultRow row : resultSet.getResults()) {user = UserAOHelper.buildUserFromResultSet(row, getGenQueryExecutor(), false);user.setTotalRecords(resultSet.getTotalRecords());users.add(user);}return users;}}"	Yes
1714	"public class A {@ExpectedLog(expectedClass = ElasticsearchIndexWriter.class,expectedLevel = ExpectedLog.Level.WARNING,expectedLog = ""no such index"")@Testpublic void testCommit() {SearchContext searchContext = new SearchContext();searchContext.setCompanyId(1);IndexWriter indexWriter = getIndexWriter();try {indexWriter.commit(searchContext);} catch (SearchException searchException) {if (_log.isDebugEnabled()) {_log.debug(searchException, searchException);}}}}"	No
1715	"public class A {protected CleanupJobState jobReachedTerminalState(ExecutionGraphInfo executionGraphInfo) {final ArchivedExecutionGraph archivedExecutionGraph =executionGraphInfo.getArchivedExecutionGraph();Preconditions.checkArgument(archivedExecutionGraph.getState().isTerminalState(),""Job %s is in state %s which is not terminal."",archivedExecutionGraph.getJobID(),archivedExecutionGraph.getState());archiveExecutionGraph(executionGraphInfo);return archivedExecutionGraph.getState().isGloballyTerminalState()? CleanupJobState.GLOBAL: CleanupJobState.LOCAL;}}"	Yes
1716	"public class A {protected void setPageType(File file, String pageType) {try {UserDefinedFileAttributeView view = getAttributeView(file);view.write(ATTRIBUTE_PAGE_TYPE, Charset.defaultCharset().encode(pageType));} catch (Exception ex) {log.debug(""cannot set pageType for {}"", file, ex);}}}"	No
1717	"public class A {protected void handleErrorRecord(String[] flatRow, Exception ex) throws IOException {logger.error(""Insane record: "" + Arrays.toString(flatRow), ex);errorRecordCounter++;if (errorRecordCounter > cubeSegment.getConfig().getErrorRecordThreshold()) {if (ex instanceof IOException) throw (IOException) ex;else if (ex instanceof RuntimeException) throw (RuntimeException) ex;else throw new RuntimeException("""", ex);}}}"	No
1718	"public class A {public static Collection<String> getFreeVars(TupleExpr tupleExpr) {if (tupleExpr instanceof FedXTupleExpr) {return ((FedXTupleExpr) tupleExpr).getFreeVars();}if (tupleExpr instanceof VariableExpr) {return ((VariableExpr) tupleExpr).getFreeVars();}if (tupleExpr instanceof NTuple) {HashSet<String> freeVars = new HashSet<>();NTuple ntuple = (NTuple) tupleExpr;for (TupleExpr t : ntuple.getArgs()) {freeVars.addAll(getFreeVars(t));}return freeVars;}if (tupleExpr instanceof FedXService) {return ((FedXService) tupleExpr).getFreeVars();}if (tupleExpr instanceof Service) {return ((Service) tupleExpr).getServiceVars();}if (tupleExpr instanceof StatementPattern) {List<String> freeVars = new ArrayList<>();StatementPattern st = (StatementPattern) tupleExpr;if (st.getSubjectVar().getValue() == null) {freeVars.add(st.getSubjectVar().getName());}if (st.getPredicateVar().getValue() == null) {freeVars.add(st.getPredicateVar().getName());}if (st.getObjectVar().getValue() == null) {freeVars.add(st.getObjectVar().getName());}return freeVars;}if (tupleExpr instanceof Projection) {Projection p = (Projection) tupleExpr;return new ArrayList<>(p.getBindingNames());}if (tupleExpr instanceof BindingSetAssignment) {return new ArrayList<>();}if (tupleExpr instanceof Extension) {return new ArrayList<>(tupleExpr.getBindingNames());}if (tupleExpr instanceof ArbitraryLengthPath) {return getFreeVars(((ArbitraryLengthPath) tupleExpr).getPathExpression());}if (tupleExpr instanceof LeftJoin) {LeftJoin l = (LeftJoin) tupleExpr;HashSet<String> freeVars = new HashSet<>();freeVars.addAll(getFreeVars(l.getLeftArg()));freeVars.addAll(getFreeVars(l.getRightArg()));return freeVars;}log.debug(""Type ""+ tupleExpr.getClass().getSimpleName()+ "" not supported for computing free vars. If you run into this, please report a bug."");return new ArrayList<>();}}"	No
1719	"public class A {@LogToResultpublic void saveResult(String testCaseId,String startTime,String stopTime,String lastURL,String browserInfo,boolean forward)throws SakuliCheckedException {if (!loader.getCurrentTestCase().getId().equals(testCaseId)) {handleException(""testcaseID '"" + testCaseId + ""' to save the test case Result ist is not valid!"");}TestSuite testSuite = loader.getTestSuite();testSuite.setBrowserInfo(browserInfo);TestCase tc = loader.getCurrentTestCase();tc.setLastURL(lastURL);try {tc.setStartDate(new Date(Long.parseLong(startTime)));tc.setStopDate(new Date(Long.parseLong(stopTime)));logger.debug(""test case duration = "" + tc.getDuration());tc.refreshState();} catch (NumberFormatException | NullPointerException e) {handleException(""Duration could not be calculated! ""+ ""Check if the warning and critical threshold is set correctly in your test case!  ""+ ""=> START date: ""+ startTime+ ""\tSTOP date: ""+ stopTime+ ""\n""+ e.getMessage());}loader.setCurrentTestCase(null);if (forward) {forwardTestDataEntity(tc);}}}"	No
1720	"public class A {public void connectToScaleDownTarget(ScaleDownPolicy scaleDownPolicy) {try {scaleDownServerLocator =ScaleDownPolicy.getScaleDownConnector(scaleDownPolicy, activeMQServer);scaleDownServerLocator.setProtocolManagerFactory(ActiveMQServerSideProtocolManagerFactory.getInstance(scaleDownServerLocator, activeMQServer.getStorageManager()));LiveNodeLocator nodeLocator =scaleDownPolicy.getGroupName() == null? new AnyLiveNodeLocatorForScaleDown(activeMQServer): new NamedLiveNodeLocatorForScaleDown(scaleDownPolicy.getGroupName(), activeMQServer);scaleDownServerLocator.addClusterTopologyListener(nodeLocator);nodeLocator.connectToCluster(scaleDownServerLocator);nodeLocator.locateNode(ActiveMQClient.DEFAULT_DISCOVERY_INITIAL_WAIT_TIMEOUT);ClientSessionFactoryInternal clientSessionFactory = null;while (clientSessionFactory == null) {Pair<TransportConfiguration, TransportConfiguration> possibleLive = null;possibleLive = nodeLocator.getLiveConfiguration();if (possibleLive == null) break;try {clientSessionFactory =(ClientSessionFactoryInternal)scaleDownServerLocator.createSessionFactory(possibleLive.getA(), 0, false);} catch (Exception e) {logger.trace(""Failed to connect to "" + possibleLive.getA());nodeLocator.notifyRegistrationFailed(false);if (clientSessionFactory != null) {clientSessionFactory.close();}clientSessionFactory = null;}}if (clientSessionFactory != null) {scaleDownClientSessionFactory = clientSessionFactory;} else {throw new ActiveMQException(""Unable to connect to server for scale-down"");}} catch (Exception e) {ActiveMQServerLogger.LOGGER.failedToScaleDown(e);}}}"	No
1721	"public class A {private void resolveLock(BackOffer backOffer, Lock lock) {if (lockResolverClient != null) {logger.warn(""resolving lock"");ResolveLockResult resolveLockResult =lockResolverClient.resolveLocks(backOffer, callerStartTS, Collections.singletonList(lock), forWrite);resolveLockResultCallback.apply(resolveLockResult);long msBeforeExpired = resolveLockResult.getMsBeforeTxnExpired();if (msBeforeExpired > 0) {backOffer.doBackOffWithMaxSleep(BoTxnLockFast, msBeforeExpired, new KeyException(lock.toString()));}}}}"	No
1722	"public class A {private void writeCalibrator(XMLStreamWriter doc, Calibrator calibrator)throws XMLStreamException {if (calibrator instanceof PolynomialCalibrator) {doc.writeStartElement(""PolynomialCalibrator"");double[] coefficients = ((PolynomialCalibrator) calibrator).getCoefficients();for (int i = 0; i < coefficients.length; i++) {doc.writeStartElement(""Term"");doc.writeAttribute(""exponent"", Integer.toString(i));doc.writeAttribute(""coefficient"", Double.toString(coefficients[i]));doc.writeEndElement();}doc.writeEndElement();} else if (calibrator instanceof SplineCalibrator) {doc.writeStartElement(""SplineCalibrator"");for (SplinePoint sp : ((SplineCalibrator) calibrator).getPoints()) {doc.writeStartElement(""SplinePoint"");doc.writeAttribute(""raw"", Double.toString(sp.getRaw()));doc.writeAttribute(""calibrated"", Double.toString(sp.getCalibrated()));doc.writeEndElement();}doc.writeEndElement();} else if (calibrator instanceof MathOperationCalibrator) {doc.writeStartElement(""MathOperationCalibrator"");writeMathOperation(doc, (MathOperationCalibrator) calibrator);doc.writeEndElement();} else {log.error(""Unsupported calibrator  type "" + calibrator.getClass());}}}"	No
1723	"public class A {protected ExecutionResult prepareNetworkElementCommand(final SetupGuestNetworkCommand cmd) {final NicTO nic = cmd.getNic();final String domrName = cmd.getAccessDetail(NetworkElementCommand.ROUTER_NAME);try {final URI broadcastUri = nic.getBroadcastUri();final String vlanId = BroadcastDomainType.getValue(broadcastUri);final int ethDeviceNum = getVmNics(domrName, vlanId);if (ethDeviceNum > 0) {nic.setDeviceId(ethDeviceNum);} else {return new ExecutionResult(false, ""Prepare SetupGuestNetwork failed due to unable to find the nic"");}} catch (final Exception e) {final String msg = ""Prepare SetupGuestNetwork failed due to "" + e.toString();s_logger.warn(msg, e);return new ExecutionResult(false, msg);}return new ExecutionResult(true, null);}}"	No
1724	public class A {@Overridepublic PolicyFinderResult findPolicy(EvaluationCtx context) {try {AbstractPolicy policy = m_policyManager.getPolicy(context);if (policy == null) {return new PolicyFinderResult();}return new PolicyFinderResult(policy);} catch (TopLevelPolicyException tlpe) {return new PolicyFinderResult(tlpe.getStatus());} catch (PolicyIndexException pdme) {if (logger.isDebugEnabled()) {}List<String> codes = new ArrayList<String>();codes.add(Status.STATUS_PROCESSING_ERROR);return new PolicyFinderResult(new Status(codes, pdme.getMessage()));}}}	Yes
1725	"public class A {@Override@Deprecatedpublic String getExternalizableBusinessObjectInquiryUrl(Class inquiryBusinessObjectClass, Map<String, String[]> parameters) {if (!isExternalizable(inquiryBusinessObjectClass)) {return KRADConstants.EMPTY_STRING;}String businessObjectClassAttribute;Class implementationClass =getExternalizableBusinessObjectImplementation(inquiryBusinessObjectClass);if (implementationClass == null) {LOG.error(""Can't find ExternalizableBusinessObject implementation class for ""+ inquiryBusinessObjectClass.getName());throw new RuntimeException(""Can't find ExternalizableBusinessObject implementation class for interface ""+ inquiryBusinessObjectClass.getName());}businessObjectClassAttribute = implementationClass.getName();return UrlFactory.parameterizeUrl(getInquiryUrl(inquiryBusinessObjectClass),getUrlParameters(businessObjectClassAttribute, parameters));}}"	No
1726	public class A {@Overridepublic void execute() {lock.lock();try {while (!initialized) {initializedCond.await();}} catch (InterruptedException e) {return;} finally {lock.unlock();}task.execute();}}	Yes
1727	"public class A {@Overridepublic final Object fromBytes(Class targetClass, byte[] bytes) {try {if (bytes == null) {return null;}if (targetClass != null && targetClass.equals(byte[].class)) {return bytes;}ObjectInputStream ois;ois = new ObjectInputStream(new ByteArrayInputStream(bytes));Object o = ois.readObject();ois.close();return o;} catch (IOException e) {log.error(""IO exception, Caused by {}."", e);throw new PropertyAccessException(e);} catch (ClassNotFoundException e) {log.error(""Class not found exception, Caused by {}."", e);throw new PropertyAccessException(e);}}}"	No
1728	public class A {public Map<String, ApiMethod> getWidgetTypeApiMappings() {Map<String, ApiMethod> mappings = null;try {mappings = this.getApiCatalogManager().getRelatedWidgetMethods();} catch (Throwable t) {}return mappings;}}	Yes
1729	"public class A {public List<TripleStoreChange> convertUpdate(IidmChangeUpdate change) {TripleStoreSimpleUpdateReference simpleUpdateReference = simpleUpdateReference(change);if (simpleUpdateReference != null) {String subject = change.getIdentifiable().getId();String value = simpleUpdateReference.value(change);TripleStoreChangeParams updateParams =new TripleStoreChangeParams(simpleUpdateReference, value);TripleStoreChange tschange = new TripleStoreChange(""update"", subject, updateParams);return Collections.singletonList(tschange);} else if (ignoredAttributes.contains(change.getAttribute())) {return Collections.emptyList();} else {return Collections.emptyList();}}}"	Yes
1730	"public class A {@Overridepublic boolean backupExistingConfigForResource(final String resourceId,final String resourceType,Map<String, Object> clientMap,Map<String, String> ruleParams,Map<String, String> issue)throws AutoFixException {StringBuilder oldConfig = new StringBuilder();List<String> originalSgMembers;try {originalSgMembers = PublicAccessAutoFix.getSgListForClassicElbResource(clientMap, resourceId);for (String sgm : originalSgMembers) {if (oldConfig.length() > 0) {oldConfig.append("","").append(sgm);} else {oldConfig.append(sgm);}}} catch (Exception e) {throw new AutoFixException(""backup failed"");}DETACHED_SG = oldConfig.toString();backupOldConfig(resourceId, EXISTING_GROUPS, oldConfig.toString());return true;}}"	Yes
1731	"public class A {@Overrideprotected Geometry[] getGeometriesForNodes(DBBroker broker, NodeSet contextSet, boolean getEPSG4326, Connection conn)throws SQLException {String docConstraint = """";boolean refine_query_on_doc = false;if (contextSet != null) {if (contextSet.getDocumentSet().getDocumentCount()<= index.getMaxDocsInContextToRefineQuery()) {DocumentImpl doc;Iterator<DocumentImpl> it = contextSet.getDocumentSet().getDocumentIterator();doc = it.next();docConstraint = ""(DOCUMENT_URI = '"" + doc.getURI().toString() + ""')"";while (it.hasNext()) {doc = it.next();docConstraint = docConstraint + "" OR (DOCUMENT_URI = '"" + doc.getURI().toString() + ""')"";}}}if (LOG.isDebugEnabled()) {LOG.debug(""Refine query on documents is {}"", refine_query_on_doc ? ""enabled."" : ""disabled."");}PreparedStatement ps =conn.prepareStatement(""SELECT ""+ (getEPSG4326 ? ""EPSG4326_WKB"" : ""WKB"")+ "", DOCUMENT_URI, NODE_ID_UNITS, NODE_ID""+ "" FROM ""+ GMLHSQLIndex.TABLE_NAME+ (refine_query_on_doc ? "" WHERE "" + docConstraint : """"));ResultSet rs = null;try {rs = ps.executeQuery();Geometry[] result = new Geometry[contextSet.getLength()];int index = 0;while (rs.next()) {DocumentImpl doc = null;try {doc = (DocumentImpl) broker.getXMLResource(XmldbURI.create(rs.getString(""DOCUMENT_URI"")));} catch (PermissionDeniedException e) {LOG.debug(e);result[index++] = null;continue;}if (contextSet == null|| refine_query_on_doc|| contextSet.getDocumentSet().contains(doc.getDocId())) {NodeId nodeId = new DLN(rs.getInt(""NODE_ID_UNITS""), rs.getBytes(""NODE_ID""), 0);NodeProxy p = new NodeProxy(doc, nodeId);if (contextSet.get(p) != null) {Geometry geometry = wkbReader.read(rs.getBytes(1));result[index++] = geometry;}}}return result;} catch (ParseException e) {SQLException ee = new SQLException(e.getMessage());ee.initCause(e);throw ee;} finally {if (rs != null) rs.close();if (ps != null) ps.close();}}}"	No
1732	"public class A {private void checkClientJoinsWhenActivationIsInProgress(ClusterState state) throws Exception {assertActive(state);startGridsAndLoadData(5, state);stopAllGrids();Ignite srv = startGrids(5);final CountDownLatch clientStartLatch = new CountDownLatch(1);IgniteInternalFuture clStartFut =GridTestUtils.runAsync(() -> {try {clientStartLatch.await();Thread.sleep(10);client = true;Ignite cl = startGrid(""client0"");IgniteCache<Object, Object> atomicCache = cl.cache(CACHE_NAME_PREFIX + '0');IgniteCache<Object, Object> txCache = cl.cache(CACHE_NAME_PREFIX + '1');assertEquals(state == ACTIVE ? 100 : 0, atomicCache.size());assertEquals(state == ACTIVE ? 100 : 0, txCache.size());} catch (Exception e) {log.error(""Error occurred"", e);fail(""Error occurred in client thread. Msg: "" + e.getMessage());}},""client-starter-thread"");clientStartLatch.countDown();srv.cluster().state(state);clStartFut.get();}}"	No
1733	public class A {public static String map(String principal) {for (AuthorizationMapping am : authorizationMapping) {if (Log.isDebugEnabled()) {}String username = am.map(principal);if (!username.equals(principal)) {return username;}}return principal;}}	Yes
1734	"public class A {@Factory(scope = ScopeType.APPLICATION, value = ""connectUpdateStatusInfo"")public ConnectUpdateStatusInfo getConnectUpdateStatusInfo() {if (connectionStatusCache == null) {try {if (!isRegistred()) {connectionStatusCache = ConnectUpdateStatusInfo.unregistered();} else {if (isConnectBannerEnabled() && isConnectServerReachable()) {if (getStatus().isError()) {connectionStatusCache = ConnectUpdateStatusInfo.connectServerUnreachable();} else {if (ConnectStatusHolder.instance().getStatus().status()== SubscriptionStatusType.OK) {connectionStatusCache = ConnectUpdateStatusInfo.ok();} else {connectionStatusCache = ConnectUpdateStatusInfo.notValid();}}} else {connectionStatusCache = ConnectUpdateStatusInfo.connectServerUnreachable();}}} catch (Exception e) {connectionStatusCache = null;}}return connectionStatusCache;}}"	Yes
1735	"public class A {public static Map<String, Object> shipData(Map<String, String> params) {String jobName = params.get(""jobName"");if (jobName.isEmpty()) {jobName = ""aws-recommendations-collector"";}List<Map<String, String>> errorList = new ArrayList<>();try {MainUtil.setup(params);} catch (Exception e) {Map<String, String> errorMap = new HashMap<>();errorMap.put(ERROR, ""Exception in setting up Job "");errorMap.put(ERROR_TYPE, WARN);errorMap.put(EXCEPTION, e.getMessage());errorList.add(errorMap);return ErrorManageUtil.formErrorCode(jobName, errorList);}errorList.addAll(new RecommendationCollector().uploadRecommendationData());Map<String, Object> status = ErrorManageUtil.formErrorCode(jobName, errorList);LOGGER.info(""Job Return Status {} "", status);return status;}}"	No
1736	"public class A {public static Map<String, List<String>> fetchVPCtoNatIPInfo() {String endPoint =""/aws_nat/nat/_search?filter_path=hits.hits._source.vpcid,hits.hits.inner_hits.nat_addresses.hits.hits._source.publicip"";String payLoad =""{\""size\"":10000,\""_source\"":\""vpcid\"",\""query\"":{\""bool\"":{\""must\"":[{\""match\"":{\""latest\"":\""true\""}},{\""has_child\"":{\""type\"":\""nat_addresses\"",\""query\"":{\""match_all\"":{}},\""inner_hits\"":{\""size\"":100,\""_source\"":\""publicip\""}}}]}}}{\""size\"":10000,\""_source\"":\""vpcid\"",\""query\"":{\""bool\"":{\""must\"":[{\""match\"":{\""latest\"":\""true\""}},{\""has_child\"":{\""type\"":\""nat_addresses\"",\""query\"":{\""match_all\"":{}},\""inner_hits\"":{\""size\"":100,\""_source\"":\""publicip\""}}}]}}}"";Map<String, List<String>> VpcPublicIpInfo = new HashMap<>();try {Response response = ElasticSearchManager.invokeAPI(""GET"", endPoint, payLoad);String responseJson = EntityUtils.toString(response.getEntity());JsonParser jsonParser = new JsonParser();JsonObject resultJson = (JsonObject) jsonParser.parse(responseJson);JsonObject hitsJson = (JsonObject) jsonParser.parse(resultJson.get(""hits"").toString());JsonArray jsonArray = hitsJson.getAsJsonObject().get(""hits"").getAsJsonArray();for (int i = 0; i < jsonArray.size(); i++) {JsonObject obj = (JsonObject) jsonArray.get(i);String vpcId = obj.get(SOURCE).getAsJsonObject().get(""vpcid"").getAsString();JsonArray innerHits =obj.getAsJsonObject(""inner_hits"").getAsJsonObject(""nat_addresses"").getAsJsonObject(""hits"").getAsJsonArray(""hits"");for (int j = 0; j < innerHits.size(); j++) {String ip =innerHits.get(j).getAsJsonObject().getAsJsonObject(SOURCE).get(""publicip"").getAsString();List<String> ipList = VpcPublicIpInfo.get(vpcId);if (ipList == null) {ipList = new ArrayList<>();VpcPublicIpInfo.put(vpcId, ipList);}ipList.add(ip);}}} catch (Exception e) {}return VpcPublicIpInfo;}}"	Yes
1737	"public class A {void processLogStream(final InputStream is) throws IOException, InterruptedException {ByteArrayOutputStream line = new ByteArrayOutputStream();int c;while (!logsController.stopped.get()) {c = is.read();if (c < 0) {break;}line.write(c);if (line.size() > 1024 * 10) {line.write(""\""}"".getBytes(UTF_8));c = '\n';}if (c == '\n') {processLine(new String(line.toByteArray(), UTF_8));line.reset();}}if (!logsController.stopped.get()) {if (logsController.isPodRunning(podName)) {LOG.info(""End of Log stream for running pod: {}"", podName);} else {LOG.info(""End of Log stream for terminated pod: {}"", podName);}}}}"	No
1738	"public class A {@Transition(to = ""MASTER"", from = ""SLAVE"")public void onBecomeMasterFromSlave(Message message, NotificationContext context) {String partitionName = message.getPartitionName();String instanceName = message.getTgtName();LOGGER.info(instanceName + "" becomes MASTER from SLAVE for "" + partitionName);}}"	No
1739	public class A {public User find(final String username) {return userRepository.findByUsername(username);}}	Yes
1740	"public class A {@Overrideprotected Connection createListenerContainer() throws Exception {LOG.trace(""Creating connection"");Connection conn = endpoint.connect(executorService);Channel channel = conn.createChannel();if (endpoint.isPrefetchEnabled()) {channel.basicQos(endpoint.getPrefetchSize(), endpoint.getPrefetchCount(), endpoint.isPrefetchGlobal());}DeclareOk result = channel.queueDeclare();LOG.debug(""Using temporary queue name: {}"", result.getQueue());setReplyTo(result.getQueue());channel.queueBind(getReplyTo(), endpoint.getExchangeName(), getReplyTo());if (conn instanceof AutorecoveringConnection) {((AutorecoveringConnection) conn).addQueueRecoveryListener((oldName, newName) -> {setReplyTo(newName);try {channel.queueBind(newName, endpoint.getExchangeName(), newName);channel.queueUnbind(newName, endpoint.getExchangeName(), oldName);} catch (IOException e) {LOG.warn(""Failed to bind or unbind a queue. This exception is ignored."", e);}});}consumer = new RabbitConsumer(this, channel);consumer.start();return conn;}}"	Yes
1741	public class A {@Overridepublic CommerceOrder findByPrimaryKey(Serializable primaryKey) throws NoSuchOrderException {CommerceOrder commerceOrder = fetchByPrimaryKey(primaryKey);if (commerceOrder == null) {if (_log.isDebugEnabled()) {}throw new NoSuchOrderException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + primaryKey);}return commerceOrder;}}	Yes
1742	"public class A {private List<DataAvailabilityEventFilter> loadFilters() {List<DataAvailabilityEventFilter> filters = new ArrayList<>(config.getFilterClassList().size());for (String filterClassName : config.getFilterClassList()) {try {DataAvailabilityEventFilter filter =(DataAvailabilityEventFilter) Class.forName(filterClassName).newInstance();filters.add(filter);} catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {throw new IllegalArgumentException(""Failed to initialize trigger event filter."", e.getCause());}}return filters;}}"	Yes
1743	"public class A {public CoordinatedStack setupStack(Stack stack, User user, Commit commit, Module module, int runnerCount) {CoordinatedStack coordinatedStack = getCoordinatedStack(stack, user, commit, module);if (coordinatedStack != null && coordinatedStack.getRunnerCount() == runnerCount) {if (coordinatedStack.getSetupState() == SetupStackState.SetUp) {return coordinatedStack;}} else if (coordinatedStack != null && coordinatedStack.getRunnerCount() != runnerCount) {registeredStacks.remove(coordinatedStack.hashCode());}coordinatedStack = new CoordinatedStack(stack, user, commit, module, runnerCount);LOG.info(""Starting setup stack thread of {}..."", stack.getName());synchronized (coordinatedStack) {coordinatedStack.setSetupState(SetupStackSignal.SETUP);registeredStacks.put(coordinatedStack.hashCode(), coordinatedStack);SetupStackThread setupThread = new SetupStackThread(coordinatedStack);setupStackThreads.put(coordinatedStack, setupThread);service.submit(setupThread);}return coordinatedStack;}}"	Yes
1744	"public class A {public static void forEachEvent(Path scenario, Consumer<Path> callback, EventHandler handler) {Path eventFolder = scenario.resolve(""events"");if (!Files.exists(eventFolder)) {log.warn(""No events found at {}"", eventFolder);return;}EventsManager manager = EventsUtils.createEventsManager();manager.initProcessing();manager.addHandler(handler);List<Path> eventFiles;try {eventFiles =Files.list(eventFolder).filter(p -> p.getFileName().toString().contains(""xml.gz"")).collect(Collectors.toList());} catch (IOException e) {throw new java.io.UncheckedIOException(e);}for (Path p : eventFiles) {try {callback.accept(p);new EpisimEventsReader(manager).readFile(p.toString());} catch (UncheckedIOException e) {log.warn(""Caught UncheckedIOException. Could not read file {}"", p);}}manager.finishProcessing();}}"	No
1745	"public class A {private void parseIphoneSimSwitch(IItem item) {File file = null;try {file = File.createTempFile(""CellularUsage"", ""db"");try (InputStream is = item.getStream()) {Files.copy(is, file.toPath(), StandardCopyOption.REPLACE_EXISTING);}try (Connection conn = DriverManager.getConnection(""jdbc:sqlite:"" + file.getAbsolutePath());Statement st = conn.createStatement()) {String sql = ""SELECT subscriber_mdn, last_update_time FROM subscriber_info"";ResultSet rs = st.executeQuery(sql);while (rs.next()) {String msisdn = rs.getString(1);if (msisdn != null && !msisdn.isEmpty()) {int time = rs.getInt(2);Date date = new Date((time + 978307200l) * 1000l);iphoneSimSwitch.put(date, msisdn);}}}} catch (Exception e) {e.printStackTrace();} finally {if (file != null) file.delete();}}}"	Yes
1746	"public class A {private void setupIOstreams() throws IOException {if (socket != null) {return;}if (this.rpcClient.failedServers.isFailedServer(remoteId.getAddress())) {if (LOG.isDebugEnabled()) {LOG.debug(""Not trying to connect to ""+ remoteId.getAddress()+ "" this server is in the failed servers list"");}throw new FailedServerException(""This server is in the failed servers list: "" + remoteId.getAddress());}try {if (LOG.isDebugEnabled()) {}short numRetries = 0;int reloginMaxRetries = this.rpcClient.conf.getInt(""hbase.security.relogin.maxretries"", 5);while (true) {setupConnection();InputStream inStream = NetUtils.getInputStream(socket);OutputStream outStream = NetUtils.getOutputStream(socket, this.rpcClient.writeTO);writeConnectionHeaderPreamble(outStream);if (useSasl) {final InputStream in2 = inStream;final OutputStream out2 = outStream;UserGroupInformation ticket = provider.getRealUser(remoteId.ticket);boolean continueSasl;if (ticket == null) {throw new FatalConnectionException(""ticket/user is null"");}try {continueSasl =ticket.doAs(new PrivilegedExceptionAction<Boolean>() {@Overridepublic Boolean run() throws IOException {return setupSaslConnection(in2, out2);}});} catch (Exception ex) {ExceptionUtil.rethrowIfInterrupt(ex);handleSaslConnectionFailure(numRetries++, reloginMaxRetries, ex, ticket);continue;}if (continueSasl) {inStream = saslRpcClient.getInputStream();outStream = saslRpcClient.getOutputStream();} else {}}this.in = new DataInputStream(new BufferedInputStream(inStream));this.out = new DataOutputStream(new BufferedOutputStream(outStream));writeConnectionHeader();processResponseForConnectionHeader();break;}} catch (Throwable t) {closeSocket();IOException e = ExceptionUtil.asInterrupt(t);if (e == null) {this.rpcClient.failedServers.addToFailedServers(remoteId.getAddress(), t);if (t instanceof LinkageError) {e = new DoNotRetryIOException(t);} else if (t instanceof IOException) {e = (IOException) t;} else {e = new IOException(""Could not set up IO Streams to "" + remoteId.getAddress(), t);}}throw e;}thread = new Thread(this, threadName);thread.setDaemon(true);thread.start();}}"	Yes
1747	public class A {@Overridepublic ReturnWithExceptions<Void, ModelObserver> aipCreated(final AIP aip) {ReturnWithExceptions<Void, ModelObserver> ret = new ReturnWithExceptions<>(this);try {List<String> ancestors = SolrUtils.getAncestors(aip.getParentId(), model);indexAIP(aip, ancestors).addTo(ret);if (ret.isEmpty()) {indexRepresentations(aip, ancestors).addTo(ret);if (ret.isEmpty()) {indexPreservationsEvents(aip.getId(), null).addTo(ret);if (ret.isEmpty()) {indexRetentionPeriod(aip, ancestors).addTo(ret);}}}} catch (RequestNotValidException | GenericException | AuthorizationDeniedException e) {ret.add(e);}return ret;}}	Yes
1748	"public class A {private List<AuthenticationHandler> getHandlerList(String path) {List<AuthenticationHandler> handlers = new ArrayList<>();String handlerAuthMethod;if (contextPolicyManager != null) {ContextPolicy policy = contextPolicyManager.getContextPolicy(path);if (policy != null) {Collection<String> authMethods = policy.getAuthenticationMethods();for (String authMethod : authMethods) {for (AuthenticationHandler handler : this.handlerList) {handlerAuthMethod = handler.getAuthenticationType();LOGGER.trace(""Handler auth method: {} - desired auth method {}"", handlerAuthMethod, authMethod);if (handler.getAuthenticationType().equalsIgnoreCase(authMethod)) {handlers.add(handler);}}}}} else {handlers.addAll(this.handlerList);}LOGGER.trace(""Returning {} handlers that support desired auth methods for path {}"",handlers.size(),path);return handlers;}}"	No
1749	public class A {@Overrideprotected @Nullable ThingHandler createHandler(Thing thing) {ThingTypeUID thingTypeUID = thing.getThingTypeUID();if (BRIDGE_THING_TYPE.equals(thingTypeUID)) {return new BoxHandler((Bridge) thing, httpClient, commandDescriptionProvider);} else if (PL546E_STANDALONE_THING_TYPE.equals(thingTypeUID)) {return new Powerline546EHandler((Bridge) thing, httpClient, commandDescriptionProvider);} else if (SUPPORTED_BUTTON_THING_TYPES_UIDS.contains(thingTypeUID)) {return new AVMFritzButtonHandler(thing);} else if (SUPPORTED_HEATING_THING_TYPES.contains(thingTypeUID)) {return new AVMFritzHeatingDeviceHandler(thing);} else if (SUPPORTED_DEVICE_THING_TYPES_UIDS.contains(thingTypeUID)) {return new DeviceHandler(thing);} else if (GROUP_HEATING_THING_TYPE.equals(thingTypeUID)) {return new AVMFritzHeatingGroupHandler(thing);} else if (SUPPORTED_GROUP_THING_TYPES_UIDS.contains(thingTypeUID)) {return new GroupHandler(thing);} else {}return null;}}	Yes
1750	"public class A {@Transactionalprivate void deleteRecovery(ShardRecovery recovery) {int shardRecoveryDeleted =shardRecoveryDao.hardDeleteShardRecovery(recovery.getShardRecoveryId());Shard shard = shardDao.getLastShard();Objects.requireNonNull(shard, ""Shard record should exist!"");shardDao.hardDeleteShard(shard.getShardId());log.debug(""Cleared shard records : shardRecovery - {}, shard id = {}"",shardRecoveryDeleted,shard.getShardId());}}"	No
1751	public class A {protected boolean registerSynchronization(Synchronization sync) {try {TransactionManager tm = TransactionHelper.lookupTransactionManager();if (tm != null) {if (tm.getTransaction() != null) {tm.getTransaction().registerSynchronization(sync);return true;}return false;} else {return false;}} catch (NamingException | IllegalStateException | SystemException | RollbackException e) {return false;}}}	Yes
1752	"public class A {private String moduleTokens(RoutingContext ctx) {String modPermJson = ctx.request().getHeader(XOkapiHeaders.MODULE_PERMISSIONS);logger.debug(""test-auth: moduleTokens: trying to decode '{}'"", modPermJson);HashMap<String, String> tokens = new HashMap<>();if (modPermJson != null && !modPermJson.isEmpty()) {JsonObject jo = new JsonObject(modPermJson);StringBuilder permstr = new StringBuilder();for (String mod : jo.fieldNames()) {JsonArray ja = jo.getJsonArray(mod);for (int i = 0; i < ja.size(); i++) {String p = ja.getString(i);if (permstr.length() > 0) {permstr.append("","");}permstr.append(p);}tokens.put(mod, token(mod, permstr.toString(), null));}}if (!tokens.isEmpty()) {tokens.put(""_"", ctx.request().getHeader(XOkapiHeaders.TOKEN));}String alltokens = Json.encode(tokens);logger.debug(""test-auth: module tokens for {}: {}"", modPermJson, alltokens);return alltokens;}}"	No
1753	public class A {public static int searchCount(long companyId, long[] groupIds, long[] classNameIds, String keywords, boolean active)throws RemoteException {try {int returnValue =CalendarResourceServiceUtil.searchCount(companyId, groupIds, classNameIds, keywords, active);return returnValue;} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
1754	public class A {@Overridepublic XAResource[] getXAResources(final ActivationSpec[] specs) throws ResourceException {if (logger.isTraceEnabled()) {}if (useAutoRecovery) {return null;} else {List<XAResource> xaresources = new ArrayList<>();for (ActivationSpec spec : specs) {ActiveMQActivation activation = activations.get(spec);if (activation != null) {xaresources.addAll(activation.getXAResources());}}return xaresources.toArray(new XAResource[xaresources.size()]);}}}	Yes
1755	"public class A {public void warmCaches() {evictCaches();logger.info(""Warming up bill cache."");Optional<Range<SessionYear>> sessionRange = activeSessionRange();if (sessionRange.isPresent()) {SessionYear sessionYear = sessionRange.get().lowerEndpoint();while (sessionYear.compareTo(sessionRange.get().upperEndpoint()) <= 0) {if (sessionYear.equals(SessionYear.current())) {logger.info(""Caching Bill instances for current session year: {}"", sessionYear);getBillIds(sessionYear, LimitOffset.ALL).forEach(id -> getBill(id));} else {getBillIds(sessionYear, LimitOffset.ALL).forEach(this::getBillInfo);}sessionYear = sessionYear.next();}}logger.info(""Done warming up bill cache."");}}"	Yes
1756	"public class A {public void selectLink() {if (LOG.isDebugEnabled()) {LOG.debug(""selectLink() called ..."");}}}"	No
1757	public class A {public void invalidFileIDTest() {try {AccountID payerID = FileServiceTest.getRandomPayerAccount();AccountID nodeID = FileServiceTest.getRandomNodeAccount();FileID fid = FileID.newBuilder().setFileNum(1).setRealmNum(1).setShardNum(0).build();getFileInfo(fid, payerID, nodeID);} catch (Throwable e) {}}}	Yes
1758	"public class A {private void createIndexWithMapping(Client client, String indexName, String indexType) {try {client.admin().indices().create(new CreateIndexRequest(indexName).mapping(indexType, jsonMapping)).actionGet();indexCache.add(indexName);} catch (IndexAlreadyExistsException e) {logger.info(""The index "" + indexName + "" already exists"");}}}"	No
1759	"public class A {protected void doDone(Exchange original,Exchange subExchange,final Iterable<ProcessorExchangePair> pairs,AsyncCallback callback,boolean doneSync,boolean forceExhaust) {AggregationStrategy strategy = getAggregationStrategy(subExchange);if (strategy != null) {strategy.onCompletion(subExchange);}removeAggregationStrategyFromExchange(original);boolean stoppedOnException = false;boolean exception = false;ExtendedExchange see = (ExtendedExchange) subExchange;boolean exhaust =forceExhaust || see != null && (see.getException() != null || see.isRedeliveryExhausted());if (original.getException() != null|| subExchange != null && subExchange.getException() != null) {stoppedOnException = isStopOnException();exception = true;}if (subExchange != null) {if (stoppedOnException) {original.setException(subExchange.getException());} else {ExchangeHelper.copyResults(original, subExchange);}}if (processorExchangeFactory != null && pairs != null) {try {for (ProcessorExchangePair pair : pairs) {processorExchangeFactory.release(pair.getExchange());}} catch (Throwable e) {LOG.warn(""Error releasing exchange due to "" + e.getMessage() + "". This exception is ignored."",e);}}if (pairs instanceof Closeable) {IOHelper.close((Closeable) pairs, ""pairs"", LOG);}if (exception) {original.adapt(ExtendedExchange.class).setRedeliveryExhausted(exhaust);}reactiveExecutor.schedule(callback);}}"	No
1760	"public class A {public static boolean createInitialContent(final Session session,final InstallationLogger history,String path,Set<AceBean> aceBeanSetFromConfig)throws RepositoryException, PathNotFoundException, ItemExistsException,ConstraintViolationException, VersionException, InvalidSerializedDataException,LockException, AccessDeniedException {String initialContent = findInitialContentInConfigsForPath(aceBeanSetFromConfig, history);if (StringUtils.isBlank(initialContent)) {return false;} else {try {String parentPath = StringUtils.substringBeforeLast(path, ""/"");if (!session.nodeExists(parentPath)) {history.incMissingParentPathsForInitialContent();history.addVerboseMessage(LOG, ""Parent path "" + parentPath + "" missing for initial content at "" + path);return false;}importContent(session, path, initialContent);history.addMessage(LOG, ""Created initial content for path "" + path);return true;} catch (Exception e) {history.addWarning(LOG, ""Failed creating initial content for path "" + path + "": "" + e);return false;}}}}"	Yes
1761	"public class A {private synchronized void onFailure(final ConnectionManager manager, final Throwable ex) {if (this.connectionManager.isPresent() && this.connectionManager.get() == manager) {logger.debug(""Unrecoverable failure, forcing disconnect"", ex);try {disconnect();} catch (ConnectionException e) {}} else {}}}"	Yes
1762	public class A {protected void updateTask(String task) {listenerForwarder.setTask(task);if (LOGGER.isInfoEnabled()) {}}}	Yes
1763	"public class A {private ByteArrayOutputStream getMetadataExport(Date minDate) {ByteArrayOutputStream os;try {MetadataExportParams exportParams = new MetadataExportParams();if (minDate != null) {List<String> defaultFilterList = new ArrayList<>();defaultFilterList.add(""lastUpdated:gte:"" + DateUtils.getLongGmtDateString(minDate));exportParams.setDefaultFilter(defaultFilterList);exportParams.setDefaultFields(Lists.newArrayList("":all""));metadataExportService.validate(exportParams);}os = new ByteArrayOutputStream(1024);RootNode metadata = metadataExportService.getMetadataAsNode(exportParams);nodeService.serialize(metadata, ""application/json"", os);} catch (Exception ex) {String message =""Exception occurred while exporting metadata for capturing a metadata version""+ ex.getMessage();log.error(message, ex);throw new MetadataVersionServiceException(message, ex);}return os;}}"	No
1764	"public class A {@Testpublic void testParseMinutePrecisionWithoutTimezone() {DateParam param = new DateParam();param.setValueAsString(""2016-06-09T20:38"");assertNull(param.getPrefix());assertEquals(""2016-06-09T20:38"", param.getValueAsString());ourLog.debug(""PRE:  "" + param.getValue().getTime());InstantDt dt = new InstantDt(new Date(param.getValue().getTime()));dt.setTimeZone(TimeZone.getTimeZone(""America/Toronto""));ourLog.debug(""POST: "" + dt.getValue());assertThat(dt.getValueAsString(), startsWith(""2016-06-09T""));assertThat(dt.getValueAsString(), endsWith(""8:00.000-04:00""));}}"	Yes
1765	public class A {@Overridepublic void addCompositePhenomenonForProcedure(String procedure, Collection<String> compositePhenomenon) {CacheValidation.notNullOrEmpty(PROCEDURE, procedure);CacheValidation.noNullOrEmptyValues(COMPOSITE_PHENOMENON, compositePhenomenon);this.compositePhenomenonsForProcedure.computeIfAbsent(procedure, createSynchronizedSet()).addAll(compositePhenomenon);addCompositePhenomenon(compositePhenomenon);}}	Yes
1766	"public class A {private void handleEventBusException(Throwable exception, SubscriberExceptionContext context) {LocalDateTime occurred = LocalDateTime.now();String summary =""Event Bus Exception within ""+ context.getSubscriberMethod()+ "" at ""+ occurred+ "" - ""+ ExceptionUtils.getStackFrames(exception)[0];String message =""\nThe following exception occurred during event handling within ""+ context.getSubscriberMethod()+ "" at ""+ occurred+ "":\n""+ ExceptionUtils.getStackTrace(exception);Notification notification = new Notification(EVENT_BUS_EXCEPTION, occurred, summary, message);eventBus().post(notification);}}"	Yes
1767	public class A {@Afterpublic void tearDown() {SimulatorAssistant.waitForSwitchSimulatorOn(switchSim);SimulatorAssistant.tearDownSwitchSimulatorAfterScenario(switchSim, scenarioPool, getFailSafeTimeout());if (finalCheck != null) {finalCheck.run();}}}	Yes
1768	"public class A {public void attachClean(BrAttribut instance) {log.debug(""attaching clean BrAttribut instance"");try {sessionFactory.getCurrentSession().lock(instance, LockMode.NONE);log.debug(""attach successful"");} catch (RuntimeException re) {throw re;}}}"	Yes
1769	"public class A {@Activatepublic void activate() {logger.info(""Document servlet started"");resourcePath = ""./target"";}}"	No
1770	"public class A {@Overrideprotected void run() throws Exception {try {while (isRunning() && !terminationRequired()) {log.debug(""Scenario {} doTransaction called"", scenario);startedSamples.incrementAndGet();if (!scenario.doTransaction()) {emptyTransactions.incrementAndGet();}log.debug(""Sleep between invocations for {}"", delay);sleepMillis(delay.get());finishedSamples.incrementAndGet();}} catch (Throwable error) {}}}"	Yes
1771	"public class A {public void debug(Marker marker, String format, Object arg) {if (!logger.isDebugEnabled(marker)) {return;}logger.debug(marker, requestId + "" "" + format, arg);}}"	No
1772	public class A {public static com.liferay.commerce.bom.model.CommerceBOMDefinitionSoap[]getCommerceBOMDefinitions(long commerceBOMFolderId, int start, int end)throws RemoteException {try {java.util.List<com.liferay.commerce.bom.model.CommerceBOMDefinition> returnValue =CommerceBOMDefinitionServiceUtil.getCommerceBOMDefinitions(commerceBOMFolderId, start, end);return com.liferay.commerce.bom.model.CommerceBOMDefinitionSoap.toSoapModels(returnValue);} catch (Exception exception) {_log.error(exception, exception);throw new RemoteException(exception.getMessage());}}}	No
1773	public class A {private <T> boolean checkDqlRecord(ConsumerRecord<String, T> record) {errors++;if (errors >= expectedErrors) {return false;}return true;}}	Yes
1774	"public class A {public void deleteMatchingServiceByGroup(String serviceFileName) throws RemoteException {String matchingServiceName = getMatchingServiceName(serviceFileName);if (matchingServiceName != null) {String serviceGroup[] = {getServiceGroup(matchingServiceName)};serviceAdminStub.deleteServiceGroups(serviceGroup);} else {log.error(""Service group name cannot be null"");}}}"	Yes
1775	public class A {private static final GanttTask convertToGanttObject(final GanttChartData ganttChartData, final TaskTree taskTree, final TaskDO task) {if (task == null) {return null;}final GanttTask ganttObject = convertToGanttObject(task);if (ganttChartData.getRootObject() == null) {ganttChartData.setRootObject(ganttObject);}final TaskNode taskNode = taskTree.getTaskNodeById(task.getId());if (taskNode.hasChildren()) {for (final TaskNode childNode : taskNode.getChildren()) {if (!childNode.isDeleted()) {ganttObject.addChild(convertToGanttObject(ganttChartData, taskTree, childNode.getTask()));}}}return ganttObject;}}	Yes
1776	"public class A {private String _getLocalizedRootCategoryName(Group group, Locale locale) {try {return LanguageUtil.get(locale, ""home"") + "" - "" + group.getDescriptiveName(locale);} catch (PortalException portalException) {_log.error(""Unable to get descriptive name for group "" + group.getGroupId(), portalException);return LanguageUtil.get(locale, ""home"");}}}"	No
1777	"public class A {public void clearLocalStatistics(StatisticsKey key, Set<String> colNames) {if (log.isDebugEnabled()) {}if (locStats == null) {log.warning(""Unable to clear local statistics for "" + key + "" on non server node."");return;}locStats.computeIfPresent(key,(k, v) -> {ObjectStatisticsImpl locStatNew = subtract(v, colNames);return locStatNew.columnsStatistics().isEmpty() ? null : locStatNew;});}}"	Yes
1778	"public class A {public List<TimeValues> querySeriesInternal(String s, Pair<ZonedDateTime, ZonedDateTime> timeRange, String function) {Long from = zonedCovertToLong(timeRange.left);Long to = zonedCovertToLong(timeRange.right);final long hours = Duration.between(timeRange.left, timeRange.right).toHours();String sql =String.format(""SELECT %s FROM root.%s WHERE time > %d and time < %d"",s.substring(s.lastIndexOf('.') + 1),s.substring(0, s.lastIndexOf('.')),from * timestampRadioX,to * timestampRadioX);String columnName = ""root."" + s;String intervalLocal = getInterval(hours);if (!intervalLocal.equals("""")) {sql =String.format(""SELECT ""+ function+ ""(%s) FROM root.%s WHERE time > %d and time < %d group by ([%d, %d),%s)"",s.substring(s.lastIndexOf('.') + 1),s.substring(0, s.lastIndexOf('.')),from * timestampRadioX,to * timestampRadioX,from * timestampRadioX,to * timestampRadioX,intervalLocal);columnName = function + ""(root."" + s + "")"";}return jdbcTemplate.query(sql, new TimeValuesRowMapper(columnName));}}"	Yes
1779	"public class A {protected boolean invokeOn(long keyId) throws InterruptedException {try {if (transactionSize > 0 && remainingTxOps == transactionSize) {txStartOperationId = operationId;txStartKeyId = keyId;txStartRandSeed = Utils.getRandomSeed(keySelectorRandom);startTransaction();}boolean txBreakRequest = false;try {if (!invokeLogic(keyId)) return false;} catch (BreakTxRequest request) {txBreakRequest = true;}lastSuccessfulOpTimestamp = TimeService.currentTimeMillis();if (transactionSize <= 0&& operationId % manager.getLogLogicConfiguration().getCounterUpdatePeriod() == 0) {writeStressorLastOperation();lastConfirmedOperation = operationId;}if (transactionSize > 0) {remainingTxOps--;if (remainingTxOps <= 0 || txBreakRequest) {try {ongoingTx.commit();lastSuccessfulTxTimestamp = TimeService.currentTimeMillis();txFailedAttempts = 0;} catch (Exception e) {log.debugf(""Transaction %s was rolled back, restarting from operation %d"",ongoingTx, txStartOperationId);txRolledBack = true;afterRollback();return false;} finally {remainingTxOps = transactionSize;clearTransaction();}if (stressor.isTerminated()) {log.debugf(""Stressor %s is about to terminate, not executing delayed removes"",stressor.getStatus());return false;}afterCommit();if (stressor.isTerminated()) {log.debugf(""Stressor %s is about to terminate, not writing the last operation %d"",stressor.getStatus(), operationId);return false;}if (txBreakRequest) {log.debugf(""Transaction was committed sooner, retrying operation %d"", operationId);return false;}try {startTransaction();writeStressorLastOperation();ongoingTx.commit();lastConfirmedOperation = operationId;} catch (Exception e) {} finally {clearTransaction();}}}return true;} catch (Exception e) {InterruptedException ie = Utils.findThrowableCauseByClass(e, InterruptedException.class);if (ie != null) {throw ie;} else if (e.getClass().getName().contains(""SuspectException"")) {log.error(""Request failed due to SuspectException: "" + e.getMessage());} else {log.error(""Cache operation error"", e);}if (transactionSize > 0 && ongoingTx != null) {try {ongoingTx.rollback();log.errorf(""Transaction %s rolled back"", ongoingTx);} catch (Exception e1) {log.errorf(e1, ""Error while rolling back transaction %s"", ongoingTx);} finally {log.debugf(""Restarting from operation %d, current operation %d"",txStartOperationId, operationId);clearTransaction();remainingTxOps = transactionSize;txRolledBack = true;afterRollback();}}return false;}}}"	Yes
1780	public class A {@Overrideprotected void onSubmit(AjaxRequestTarget target) {try {Thread.sleep(2000);} catch (InterruptedException e) {if (LOG.isDebugEnabled()) {LOG.debug(e.getMessage(), e);}}IndicatingAjaxButtonPage.this.info(this);target.add(feedbackPanel);}}	No
